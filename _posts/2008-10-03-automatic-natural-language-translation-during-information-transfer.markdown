---

title: Automatic natural language translation during information transfer
abstract: Content is transferred from one computer resource to another by enabling automatic cutting-and-pasting in a destination first, source second sequence, a user selecting insertion points in the contents of a destination computer resource, followed by the user selecting information elements in a source computer resource, subsequently automatically intercepting transfer of the selected information elements to the destination, determining which intercepted information elements are expressed in a natural language not matching a user-specified natural language, invoking a rule management user interface to allow the user to define an action to be taken, performing the specified language handling actions on the intercepted information elements, and transferring translated information elements to the destination computer resource.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08122424&OS=08122424&RS=08122424
owner: International Business Machines Corporation
number: 08122424
owner_city: Armonk
owner_country: US
publication_date: 20081003
---
This application is a continuation of U.S. application Ser. No. 10 755 832 filed on Jan. 12 2004 now U.S. Pat. No. 7 475 390 now under allowance which was related to U.S. patent application Ser. No. 10 455 159 filed on Jun. 5 2003 now U.S. Pat. No. 7 310 781 and to U.S. Patent application Ser. No. 10 692 173 filed on Oct. 23 2003 currently pending all of which were filed by Yen Fu Chen et al.

The related patent applications and issued patent are incorporated by reference to the present disclosure including figures 

This application is a continuation of U.S. application Ser. No. 10 755 832 filed on Jan. 12 2004 now under allowance which was related to U.S. patent application Ser. No. 10 455 159 filed on Jun. 5 2003 now U.S. Pat. No. 7 310 781 and to U.S. patent application Ser. No. 10 692 173 filed on Oct. 23 2003 currently pending all of which were filed by Yen Fu Chen et al. This invention relates to methods for transferring information from one computer resource to another during which the information is translated from an initial natural or native language to a selected destination language.

Modern multi tasking computers provide a variety of user interfaces for controlling multiple application programs and system functions which operate simultaneously. Some of the most widely used multi tasking computer systems are personal computers PC running a multi tasking operating system OS such as International Business Machines IBM OS 2 or AIX Microsoft Windows and Apple Computer s MacOS . Other operating systems may be used with personal computers as well as larger computers such as enterprise class computers such as UNIX Sun Microsystems Solaris Hewlett Packard s HP UX and the open sourced LINUX. Smaller computing platforms such as held held computers personal digital assistants PDA and advanced wireless telephones may run operating systems targeted for such hardware including Palm Computing s PalmOS and Microsoft s Windows CE . Additionally there are many proprietary and less widely used computing platforms and operating systems which also allow users to control and run multiple programs and system functions simultaneously.

Many of these systems will use tabs icons windows frames pages and special key combinations to allow a user to switch between user interfaces UI for each program and system function which is being executed or to start or stop the execution of a program or system function. For example in a personal computer running MS Windows the user may first start a web browser program running using several methods e.g. double clicking an icon on the desktop selecting the program from a Start Programs list operating a hot key etc. and then may start a document editor program using similar methods. Each program establishes a user interface such as its own window . The user can then control a program by selecting its window using one of several available methods such as selecting a button or icon on a command bar activating a task list and selecting a program etc. As a result a user can start and run many programs simultaneously periodically switching between their user interfaces to accomplish work or entertainment tasks as needed. Other computing systems provide similar basic user control capabilities albeit with a variety of user controls to switch between programs and system functions.

Users often wish to copy or transfer information or content from one program or system function to another. For example a user may be preparing an invoice for a client using a word processor program but may also be simultaneously using a database or spreadsheet program to perform various calculations. Using copy and paste functions of the application programs and the operating system the user may select information from a source program e.g. the spreadsheet and paste it into the destination program e.g. the invoice being edited . Such a process is so common place in computer users daily lives that it is rote albeit each user may know several sequences of actions for several computers which he or she commonly uses e.g. one process on his home PC another on his PDA and another on his networked terminal at work . These memorized methods may typically include several steps of clicking on icons dropping down lists highlighting information and using navigation controls within program UI s.

For example turning to a windows style user interface is depicted to illustrate a process of copying information from a web browser program to a word processor file via a clipboard memory. In this system each program provides a window which can be closed to end the program maximized to view the full UI for that program or minimized to leave the program running but deactivate the UI e.g. clear the UI window from the screen . In this example these controls are located in a command bar along the top of the UI window but many other variations are known in the art.

Each UI window also typically has navigation controls such as left panning right panning and horizontal scroll controls as well as up panning down panning and vertical scroll for viewing areas of information and content not completely viewable in the UI. Information icons text graphics etc. are shown or displayed within the UI window according to the scroll and panning control settings. More recently the term content has been used to collectively refer to all types of information which may be displayed or presented in a user interface including but not limited to text graphics still images animated images video audio and hyperlinks.

Now suppose for the purpose of our example the user has started a word processing program which provides a first UI window and a web browser which provides a second UI window . Also suppose that the user is researching information on the Internet using the web browser while authoring a paper which is being edited simultaneously using the word processor.

In this example the user has found information at a hypothetical web address that he wants to quote in his or her paper. So the user must first move the cursor in the word processor to select an insertion point for the information then must switch to the web browser UI select the text in the source content operate a copy command in the web browser UI which copies the content into a buffer such as a clipboard switch back to the word processor UI and operate a paste or insert command which results in the copied content being inserted into the destination document at the point of insertion . The user can repeat this process for many different program UI s .

In some software and hardware configurations the copy buffer may be provided within a suite of application programs which are tightly coupled or related. Such suites cooperate with each other in ways not possible with software programs provided by differing suppliers. In many cases however the operating system provides a buffer function which is generally accessible by all programs such as the clipboard in the MS Windows operating system.

Also in some situations the original content with its original format may not be acceptable by the destination program and as such a specialized paste or insertion function may be provided by the destination program or operating system which converts the content to a form useful by the destination program. For example text copied from a web page may include color size font style and hyperlink reference information embedded in the base Hyper Text Markup Language HTML of the source web page. However not all word processors are able to interpret all of these special codes and identifiers so a paste as plain text option may be provided by a converter or translator function.

So to illustrate the complexity and tedious nature of such ordinary operations we present the steps in full to accomplish this example scenario of simply transferring a block of formatted text from a web page to a word processor program starting from a point where the user is editing the destination document in the word processor 

Each of these operations may actually require several steps clicking scrolling selecting typing etc. so this minimal process may represent 7 to 25 actual user actions. This process must be repeated for each block of text or content to be transferred from multiple program UI windows and additional steps may be necessary to achieve a special paste as described above. Also if the same text or content is to be inserted into the destination document for file at multiple locations the last few operations of this process h in addition to some navigation actions must by performed by the user.

As a result consolidating information from multiple sources of information may be extremely tedious frustrating and tiresome using the currently available methods and apparatuses provided in such computing systems. Some systems may provide notably more user friendly or intuitive methods while other systems are much more difficult and clunky to use.

Turning to this process is generalized. Starting at a point or time when the user is actively working with the destination program UI the user must navigate within the present document file or other computer resource to a point where the content insertion is to be made including selecting any content which is to be replaced. Then the user must switch to the UI of the first source of information navigate to the first source content to be transferred select that content and operate a copy or cut control in the first source UI.

Next the user must switch back to the destination UI and operate an insert or paste command in that UI. If the user wants to insert or paste that content into multiple destinations the user must navigate to each destination and operate the paste or insert command in the destination program UI until all insertions have been made for that source information.

If the user desires to transfer information from other points in the same source or from other sources the user must repeatedly switch to a source UI navigate to a source content point select source information operate a copy or cut operation switch back to the destination UI and paste or insert the content until all information has been transferred.

Implied but not shown in detail in this generalization of the process can be multiple user actions for each general step. Optionally options such as conversion of the content may be necessary which requires additional user actions e.g. the paste as plain text example .

So it is possible that in the course of authoring a paper using a word processor and information from several sources the user may have to perform hundreds of tedious actions commands selections navigation operations etc.

In this paradigm certain conventions have evolved into place which only moderately simplify or reduce the burden of such operations. For example performing a cut operation usually deletes the selected source content from the source file and places a copy of it into the transfer buffer sometimes overwriting the current contents of the transfer buffer. A copy operation typically leaves the selected information unchanged in the source and only places a copy of the information in the transfer buffer. Additionally in the destination UI a paste or insert command may copy the contents of transfer buffer to a selected point in the destination document or file leaving a copy in the transfer buffer for additional pastes or insertions.

In some programs a paste special import from clipboard or similar command may be available with several conversion options to perform a minimal conversion process on each transfer. However even though the user may be performing the same paste special command over and over the typical UI does not memorize or learn this process so the user is forced to respond to a number of redundant options and dialogs on each paste operation.

The same user interface conventions are followed by many computer systems not only for content or information within a computer resource such as text and graphics within a file but also for resources e.g. files shortcuts icons mappings etc. within a computing environment e.g. file system directories folders etc. . For example when working with a MS Windows operating system and running the Windows Explorer program a user may select a file directory or folder to move execute an Edit Cut command sequence navigate to another directory or drive and execute an Edit Paste command to move the selected resource to the new destination. Similarly by selecting the source resource executing a copy command and then executing a paste command to one or more destinations the original resource is not changed but copies of it are deposited at the destination points. Further by selecting and copying a source resource then selecting a destination resource replacement of the destination resource may be accomplished.

However as source information may or may not be completely compatible with destination environment the user even when using the related invention may be required to make certain tedious and inconvenient operations to perform the information transfer usefully.

For example consider a situation where the source information is a graphically rich section of a web page including text and color photographs. Further assume for the purposes of this example that the color photographs are stored in the source document as Joint Photographic Experts Group JPEG format data objects. If the user attempts to transfer this selected information e.g. text photograph to a destination which does not support JPEG photographs such as a text only editor a problem may arise that cannot be completely handled by the related invention e.g. what to do with the photograph. In some other cases destination editor may be able to handle other format images such as Graphic Interface File GIF images but not JPEG images.

The user may after realizing this and with sufficient technical expertise find a way to export the image and save it to a separate file use another tool to convert the JPEG image to a GIF image and then use the related invention to transfer the GIF image to the destination document. This process however requires the user to have the expertise necessary to make such an export and conversion as well as to have the extra tool to perform the conversion. Further if this is a task to be repeated often such as cutting and pasting a considerable amount of information in this manner it becomes tedious tiresome and error prone.

Additionally in some situations it is desirable to translate the initial spoken language of the source to another spoken language. For example if a user is creating a Spanish language newspaper and desires to quote an source which is provided in English the present day systems require the user to perform all of the cut and paste steps as just described as well as to some how perform a language translation on the English source text. The translation can be performed manually or the user may have to retype the English text into a translation program select an option to translate the text to Spanish and then retype or cut and paste the Spanish text into the desired destination file or document. To achieve a computer assisted translation such as this the user may use one of many well known programs or online services such as AltaVista s online BabelFish phrase translator. However to use these existing tools the user must treat the translation program or web site as yet another source and or destination and must perform many user operations to effect cutting and pasting from source to translator and from translator to destination. If the user is translating several phrases several sources and inserting the translated text into a plurality of destination points this process can be very cumbersome and tedious.

Therefore there is a need in the art for a system and method to provide configurable automatic source to destination spoken language translation for transferring information from one or more source environments in one or more initial spoken language to one or more destination environments in a selected spoken language.

The present invention allows computer information elements such as text tables graphics and hyperlinks to be intercepted during their transfer from a computer source to a computer destination such as during a cut and paste operation. It is determined if each intercepted information element is expressed in a natural language e.g. spoken or written language such as English Japanese Spanish Farsi etc. which matches a user specified natural language intended for the destination.

For intercepted information elements which do not match the user specified natural language for the destination one or more natural language handling actions such as translation or isolation of the information elements are automatically performed in order to translate the elements to the desired destination language. Translated information elements and elements which were originally in the desired destination language are delivered to the destination and isolated elements are placed in a data store for later review and or exchange with other elements.

The present invention is preferably realized in conjunction with either or both of the systems and methods described in the related patent applications which are entitled System and Method for Content and Information Transfer Between Program Entities and System and Method for Automatic Information Compatibility Detection and Pasting Intervention both of which were filed by Yen Fu Chen et al. The former application provides an improved method for cutting and pasting information from multiple sources into a destination file while the latter provides an improvement in which content is automatically converted to a digital format which is compatible with the destination file or computer resource. It will be recognized by those skilled in the art however that the present invention may alternately be realized independently of these related inventions or in conjunction with other technologies and products.

Throughout the present disclosure we will utilize the terms spoken language and NLS synonymously. The acronym NLS has varying representation based upon the defining source but generally relates to spoken and written human readable language. For example some sources define NLS as natural language system such as a voice recognition system which recognizes free speech phrases. IBM and Microsoft define the acronym NLS as national language support which encompasses an array of computing system options to adapt the system to geographically local spoken languages including such options as selection of a default character set keyboard layout etc. As such we will utilize the acronym NLS to indicate a human spoken or human written language e.g. English Spanish Japanese Farsi etc. as opposed to a binary or computer related language or format e.g. not C Java JPEG HTML etc. . Further throughout our disclosure we will refer to conversion of information from one spoken language to another spoken language as translation .

According to one aspect of the first related invention the user initially designates one or more insertion points or replacement areas for receiving transferred content in a destination UI then switches to a source UI highlights content to be transferred and the system performs the copy or paste operation without any additional user action including any conversion as may be necessary.

Then the user may simply navigate to another point in the same source or switch to another source UI select content and it will be pasted automatically into the destination without the user having to switch back to the destination UI or perform any additional paste or insert command actions.

According to an aspect of the second related invention users are enabled to preselect or pre designate one or more destination content area s or points and then to only perform the highlighting action in the source files or documents to produce copy paste results without any additional mouse clicks or touching the keyboard. Additionally the second related invention automatically intercepts the transfer of the information to the destination detects information digital compatibility during information transfer e.g. during a pasting from buffer operation determining if the information is compatible with the destination document environment or data construct. If the information is not compatible the transfer is suspended and the user is provided an opportunity to define a new rule process or macro regarding how to handle the incompatible information. Options include invoking a converter or translator if one is available on the present system. Another option is to export the incompatible information to a separate data construct such as a separate file and to provide a note or annotation in the destination file as to the removal of the information and its final location.

The present invention is preferably realized as computer executable code such as compiled software scripts or portable programs in conjunction with existing application programs operating systems and computer hardware. For purposes of completeness we first present a generalized view in and 4 of typical computer hardware and software which is suitable for realization of our invention. Many variations of these computer platform details may be made without departing from the scope of the invention as will be readily recognized by those skilled in the art.

Common computing platforms such as personal computers web servers and web browsers as well as proprietary computing platforms may be used in realization of the present invention. These common computing platforms can include but are not limited to personal computers as well as portable computing platforms such as personal digital assistants PDA web enabled wireless telephones and other types of personal information management PIM devices.

Therefore it is useful to review a generalized architecture of a computing platform which may span the range of implementation from a high end web or enterprise server platform to a personal computer to a portable PDA or web enabled wireless phone.

Turning to a generalized architecture is presented including a central processing unit CPU which is typically comprised of a microprocessor associated with random access memory RAM and read only memory ROM . Often the CPU is also provided with cache memory and programmable FlashROM . The interface between the microprocessor and the various types of CPU memory is often referred to as a local bus but also may be a more generic or industry standard bus.

Many computing platforms are provided with one or more communication interfaces according to the function intended of the computing platform. For example a personal computer is often provided with a high speed serial port RS 232 RS 422 etc. an enhanced parallel port EPP and one or more universal serial bus USB ports. The computing platform may also be provided with a local area network LAN interface such as an Ethernet card and other high speed interfaces such as the High Performance Serial Bus IEEE 1394.

Computing platforms such as wireless telephones and wireless networked PDA s may also be provided with a radio frequency RF interface with antenna as well. In some cases the computing platform may be provided with an infrared data arrangement IrDA interface too.

Computing platforms are often equipped with one or more internal expansion slots such as Industry Standard Architecture ISA Enhanced Industry Standard Architecture EISA Peripheral Component Interconnect PCI or proprietary interface slots for the addition of other hardware such as sound cards memory boards and graphics accelerators.

Additionally many units such as laptop computers and PDA s are provided with one or more external expansion slots allowing the user the ability to easily install and remove hardware expansion devices such as PCMCIA cards SmartMedia cards and various proprietary modules such as removable hard drives CD drives and floppy drives.

Often the storage drives communication interfaces internal expansion slots and external expansion slots are interconnected with the CPU via a standard or industry open bus architecture such as ISA EISA or PCI. In many cases the bus may be of a proprietary design.

A computing platform is usually provided with one or more user input devices such as a keyboard or a keypad and mouse or pointer device and or a touch screen display . In the case of a personal computer a full size keyboard is often provided along with a mouse or pointer device such as a track ball or TrackPoint . In the case of a web enabled wireless telephone a simple keypad may be provided with one or more function specific keys. In the case of a PDA a touch screen is usually provided often with handwriting recognition capabilities.

Additionally a microphone such as the microphone of a web enabled wireless telephone or the microphone of a personal computer is supplied with the computing platform. This microphone may be used for simply reporting audio and voice signals and it may also be used for entering user choices such as voice navigation of web sites or auto dialing telephone numbers using voice recognition capabilities.

Many computing platforms are also equipped with a camera device such as a still digital camera or full motion video digital camera.

One or more user output devices such as a display are also provided with most computing platforms. The display may take many forms including a Cathode Ray Tube CRT a Thin Flat Transistor TFT array or a simple set of light emitting diodes LED or liquid crystal display LCD indicators.

One or more speakers and or annunciators are often associated with computing platforms too. The speakers may be used to reproduce audio and music such as the speaker of a wireless telephone or the speakers of a personal computer. Annunciators may take the form of simple beep emitters or buzzers commonly found on certain devices such as PDAs and PIMs.

These user input and output devices may be directly interconnected to the CPU via a proprietary bus structure and or interfaces or they may be interconnected through one or more industry open buses such as ISA EISA PCI etc.

The computing platform is also provided with one or more software and firmware programs to implement the desired functionality of the computing platforms.

Turning to now more detail is given of a generalized organization of software and firmware on this range of computing platforms. One or more operating system OS native application programs may be provided on the computing platform such as word processors spreadsheets contact management utilities address book calendar email client presentation financial and bookkeeping programs.

Additionally one or more portable or device independent programs may be provided which must be interpreted by an OS native platform specific interpreter such as Java scripts and programs.

Often computing platforms are also provided with a form of web browser or microbrowser which may also include one or more extensions to the browser such as browser plug ins .

The computing device is often provided with an operating system such as Microsoft Windows UNIX IBM OS 2 LINUX MAC OS or other platform specific operating systems. Smaller devices such as PDA s and wireless telephones may be equipped with other forms of operating systems such as real time operating systems RTOS or Palm Computing s PalmOS .

A set of basic input and output functions BIOS and hardware device drivers are often provided to allow the operating system and programs to interface to and control the specific hardware functions provided with the computing platform.

Additionally one or more embedded firmware programs are commonly provided with many computing platforms which are executed by onboard or embedded microprocessors as part of the peripheral device such as a micro controller or a hard drive a communication processor network interface card or sound or graphics card.

As such describe in a general sense the various hardware components software and firmware programs of a wide variety of computing platforms including but not limited to personal computers PDAs PIMs web enabled telephones and other appliances such as WebTV units.

We now turn our attention to disclosure of the present invention relative to the processes and methods preferably implemented as software and firmware on such a computing platform. It will be readily recognized by those skilled in the art that the following methods and processes may be alternatively realized as hardware functions in part or in whole without departing from the spirit and scope of the invention.

Turning to a first logical process of the invention is shown at a high level. This method may be implemented as compiled code scripts or interpretable code e.g. Java applets servlets etc. in full or part within application programs operating systems server suites utility programs or proprietary code or hardware.

While creating or editing a computer resource such as a computer file or document when a user wishes to insert or copy content from a source destination to the resource being edited the shown method may be employed. The source or sources may include points and areas within UI s of other programs and system functions as well as within the destination resource which is being created or edited.

Initially the user may navigate to a first insertion point and optionally highlight an insertion area to designate a first paste destination while in the current destination UI. If more than one insertion points or areas are desired the user may navigate to and select additional destinations while still in the destination UI. Insertion points can be marked in a variety of ways including placement of a graphical icon such as a caret at the insertion point s or other suitable icon. Replacement destination areas can be marked in a variety of ways including highlighting the selected text graphics information or content in a special pattern color or both or by making special changes to the selected information itself e.g. changing the text to a different color underlining the text etc. . Preferably a user interface or dialog box is also provided to allow the user to manage destination insertion points and replacement areas such as to create additional points and areas and to remove points and areas.

When all destination points and areas have been designated the user enables the automatic content transfer function of the invention through an appropriate user control such as right clicking with the mouse to bring up a dialog box selecting an option from a drop down list or operating a special icon key or key sequence. According to the present invention the user is allowed to select advanced options such as rules for concatenation or content conversion or whether cutting e.g. source deletion is performed as well as copying on each subsequent selection operation as well as designating a spoken language for the destination s . For example the user may specify that the destinations which were previously designated are to receive Spanish content only.

Next the user switches to the first source UI from which information is to be transferred navigates to the first source point and highlights or selects source content.

NLS handling is performed described in more detail in the following paragraphs and the information which is expressed in the user selected natural language is then automatically copied into the transfer buffer and subsequently pasted into the designated destination point s and area s without need to switch back to the destination UI.

If more source content is to be transferred the user may continue to navigate to additional points and to select additional content for automatic pasting into the destination resource from within the current UI or the user may switch to another UI and proceed with selecting for automatic pasting into the destination resource.

If the concatenation option is selected upon selection of a content block or area it is appended to the existing contents of the transfer buffer and the user is given the option to perform the automatic pasting into the destination point s and area s without need to switch back to the destination UI.

If the source cutting operation is selected upon selection of a content block or area it is deleted from the source resource assuming the user has the rights to modify the resource placed in the transfer buffer and pasted concatenated or converted as determined by the other options.

When all source information has been copied the information transfer operation is complete and the user returns to the initial e.g. destination UI to continue editing or creating the computer resource.

As an example and comparison now between the user control method typically employed and the user control method provided by the present invention we present the following case. On a MS Windows operating system a user who has several windows opened intends to compose an email in Spanish using a web based mail program. Further the user plans to generate the content of this email from his or her other open windows by using the copy paste functions specifically from Microsoft Word word processor and from Lotus Notes application programs.

For this example suppose that the email message is to be created from an English paragraph in MS Word and from a French paragraph in Lotus Notes. Also presume that the online phrase translator BabelFish by AltaVista is to be used to provide the English to Spanish and the French to Spanish translations. So traditionally what the user would be required to do in order to accomplish this task in the shortest time frame is the following 

As this illustration shows just combining two pieces of information from two sources into one destination and performing translations on the information can take 23 user steps or more using the existing processes.

Using our invention however this process is shortened significantly to achieve identical result without ever having to touch the keyboard 

There are alternative implementations available to declare destination context area. For example consider the situation where the email message is created from many windows or many sections of a few windows the number of toggles between program windows and highlighting Ctrl C Ctrl V operations could cause intense frustration and stress on the user. In systems running operating system which are not completely stable such window or frame switching may also increase the possibility of an OS lock up or crash.

Similar to the email example this invention can be used by helpdesk agents filling out problem descriptions from known issues or solutions users completing a form based on known information creating resume registration etc. and even programmer and software testers attempting to write new code or test cases by using a template or reusing available code.

There are plentiful situations where an efficient way of copying content and inserting it into one or more desired locations can significantly improve productivity save time reduce overall operational cost and radically increase user satisfaction.

In an alternate embodiment of the present invention each selection of source content may be followed by addition of a specified delimiter between the next selection of source content. For example in the email composition scenario previously discussed a delimiter such as a space carriage return HTML horizontal line or text note may be automatically added between the MS Word paragraph and the Lotus Notes paragraph. In a first advanced implementation of this option a descriptive annotation may be appended before or after the content such as and 

Alternate embodiments of this notation include but are not limited to annotations made in eXtensible Markup Language XML and possibly including a time stamp such as a local clock and calendar value or a Coordinated Universal Time UTC value.

According to another alternative aspect of the present invention the destination areas and points may be saved in association with a computer resource e.g. a specific file or as a named template. These insertion points and areas can then be recalled so that new information from multiple sources can be quickly and routinely compiled. This function is particularly useful for creating news letters status reports and the like.

As will be recognized by those skilled in the art the use of text as the content copied from a source to a destination in the foregoing examples is not meant to imply that the present invention is limited to such content types. In fact it may be used to transfer content of any format which is compatible with the transfer buffer implementation. For example video clips graphics hyperlinks audio clips and the like may be handled by the invention provided that the transfer buffer is implemented in a manner compatible with storing such information. According to one optional implementation detail the user may define a NLS handling rule which isolates certain types of content for later review such as a isolating pictures for later review to see if they should be exchanged for alternate pictures more suitable for the destination language and culture.

Another desirable but not critical aspect of the invention is to provide an undo function with or without an action log. By keeping track of the source to destination transfers and especially the source deletions when cutting is selected the user may reverse any operation previously made. The tracking record of actions taken can preferably be produced in a human readable form which is useful in version tracking revision control and similar activities.

Turning to details of NLS handling according to the present invention are shown. A set of NLS handling rules if already defined are consulted initially to determine if all the elements of the selected source content are in the same spoken language as the user select spoken language of the destination s . Alternatively the spoken language of the destination may be automatically determined by examining the words and phrases which may already exist in the destination and comparing them to a dictionary to match them to a spoken language. This same method may be employed to automatically determine the spoken language of each source information element selected for transfer.

For example Table 1 shows a basic set of NLS handling rules which can be implemented in a text file for a particular hypothetical destination document editor called JotPro . Additionally assume a hypothetical translator program or service called QuickXlate is available to be called or invoked on supplied text strings to perform a spoken language translation.

Table 1 is expressed in a markup style language such as eXtensible Markup Language XML . Other formats and language are available to implement such as set of compatibility rules including but not limited to plain text macro languages tables databases etc. It defines that source in English or French which needs to be translated into Spanish is to be handled by the QuickXlate program or service and that graphics elements of the types Microsoft Paintbrush PCX Graphic Interchange format GIF Tagged Information Format TIF TIFF and Joint Photographic Experts Group JPG JPEG format are to be isolated for later review by the user.

So each element e.g. paragraph or sentence of text graphic image video clip audio clip animation etc. is checked against the set of NLS handling rules and if an element needs to be translated it is marked for translation. If all elements are already in the desired destination spoken language then transfer of the unmodified source content all elements is allowed .

For each element to be translated or isolated the translation function is performed according to the appropriate handling rule such as invoking a translator program DLL web service etc. using an application programming interface API call or other suitable means to invoke an existing translator process or program. There are a number of available protocols for invoking remote services such as a Common Object Request Broker Architecture CORBA Simple Object Access Protocol SOAP and many ways to transmit the data representing the phrase to be translated and the translated phrase such as eXtensible Markup Language XML over hyper text transfer protocol HTTP . Lingua Translator Service via SOAP and XML is one such online translator service. Another such service is provided by PROMT Ltd. of St. Petersburg Russia.

If no applicable rule for an element is found in the NLS handling rules then a user interface is preferably invoked to allow the user to define a new rule or action for handling the elements of that type. When NLS handling rules for all incompatible elements have been found or defined the translations performed .

Isolation is a special type of NLS handling which allows certain types of elements to be separated from the source content and stored in a separate data construct such as a file on the system hard drive or a file in system memory. In the context of NLS handling some element types such as pictures clip art audio music etc. may need to be exchanged for more appropriate types according to the destination spoken language or culture. For example a source image of the Eifel Tower in Paris may need to be exchanged for an image of Madrid if creating a document intended for viewing in Spain.

Turning to the isolation process is shown as well as the process of invoking one or more translators according to the present invention. In this example the English text Welcome to Our Web Site as well as a graphic image shown as the circle triangle rectangle combination have been selected for transfer from a first UI. In this example the NLS Handler has been configured to intercept the insertion of the English phrase and to translate it to Spanish using one or more translator services before inserting it into a designated point in a destination UI. Additionally in this example the selected image is isolated to an isolated content store for later review and possible exchange with a more appropriate image. Selected and copied elements from other program UI s also may be automatically translated or isolated similarly.

As such the present invention may be realized in a variety of forms programming languages methodologies and operating systems on a variety of computing platforms without departure from the spirit and scope of the present invention. A number of example embodiment details have been disclosed as well as optional aspects of the present invention in order to illustrate the invention but which do not define the scope of the invention. Therefore the scope of the present invention should be determined by the following claims.

