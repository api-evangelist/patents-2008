---

title: Systems, methods, and computer program products for supporting multiple contactless applications using different security keys
abstract: Systems, methods, and computer program products for supporting multiple contactless applications using different security keys on a wireless smart device are disclosed. According to one aspect, the subject matter described herein includes a method for supporting multiple contactless applications using different security keys on a wireless smart device. The method includes, at a wireless smart device configured to communicate with a wireless smart device reader, the wireless device including a plurality of contactless applications and a contactless application memory for use by the plurality of contactless applications, initializing a portion of the memory such that access to the portion of memory requires the use of a shared secret key known to the plurality of contactless applications. The method includes reserving the portion of memory for use by one of the plurality of contactless applications by using the shared secret key to set access privileges for the portion of memory such that access to the portion of memory requires the use of a application-specific secret key associated with the one application and not known to the other applications.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07967215&OS=07967215&RS=07967215
owner: Vivotech Inc.
number: 07967215
owner_city: Santa Clara
owner_country: US
publication_date: 20080418
---
The subject matter described herein relates to methods and systems for interacting with a wireless smart device. More particularly the subject matter described herein relates to systems methods process and computer program products for supporting multiple contactless applications using different security keys.

With the success and widespread prevalence of the use of credit and debit cards for banking transactions card issuers such as banks and financial institutions have turned to wireless smart devices as a means to provide their customers with a richer more powerful set of features than is possible using a traditional magnetic stripe magstripe credit card.

As used herein the term smart device refers to a device with processing capabilities. A smart device may have on board memory add on memory or other storage capacity may be written to as well as read from and may contain one or more applications that perform a particular function or functions. Some smart devices may contain an operating system and or user interface.

As used herein the term wireless smart device refers to a smart device that can communicate via an electric and or magnetic field between the device and some other entity usually a wireless terminal or reader. For example a proximity integrated circuit card PICC may communicate wirelessly with a proximity coupling device PCD to perform banking transactions similar to those performed by a traditional magstripe credit card.

One type of wireless communications that can be used between a wireless smart device and reader is near field communication NFC . In one form of near field communication a wireless smart device may communicate with a reader via inductive coupling of the reader antenna to the device antenna. The two loop antennas effectively form a transformer. The reader amplitude modulates the RF field to send information to the device. The device communicates with the reader by modulating the loading on the device antenna which also modulates the load on the reader antenna.

An example of near field wireless communications standard commonly used by wireless smart devices is ISO 14443. The International Organization for Standardization International Electrotechnical Commission ISO IEC 14443 specification hereinafter referred to as the ISO 14443 defines a communications protocol for wireless smart devices operating at 13.56 MHz in close proximity with a reader antenna. ISO 14443 consists of four parts hereinafter referred to as 14443 1 14443 2 14443 3 and 14443 4. ISO 14443 1 and 14443 2 define the physical characteristics of PICCs and the methods for wireless power and data transfer between PCDs and PICCS. ISO 14443 3 defines initialization and anti collision protocols for PICCs and PCDs. ISO 14443 4 defines the high level data transmission protocols used by PICCs and PCDs.

As used herein the term application refers to a program function routine applet or similar entity that is hosted by i.e. exists on and performs its operations on a wireless smart device. An application may be implemented in hardware software firmware or any combination thereof. One type of application that may exist on a wireless smart device is a contactless application based on MIFARE specifications. MIFARE is a standard that defines protocols and memory storage format for applications on wireless smart devices. MIFARE is a leading industry standard for contactless smart card transactions with a very large installed base worldwide. The MIFARE standard can support a wide range of applications such as contactless payment loyalty public transportation ticketing coupon access control and gaming. Successful deployments of MIFARE technology include the Oyster card used in London Touch n Go used in Malaysia and the Breeze card used in Atlanta. However these deployments are localized and are not interoperable with each other.

As used herein the term MIFARE application refers to an application that complies with MIFARE specifications. The MIFARE wireless smart card standard is a proprietary technology based on the ISO 14443 Type A specification. A first category of MIFARE products includes MIFARE Classic and MIFARE UltraLight which support ISO 14443 1 14443 2 and 14443 3 but replace ISO 14443 4 with MIFARE proprietary protocol. Additionally MIFARE Classic products support a proprietary security protocol for authentication. A second category of MIFARE products includes MIFARE ProX and MIFARE SmartMX wireless smart devices and readers that supports all four parts of ISO 14443 and can also support MIFARE proprietary protocol. MIFARE applications may include for example electronic coupons or customer loyalty cards.

Conceptually a MIFARE application may be thought of as an agreement between the reader and the card or device that is hosting the application as to the contents of the MIFARE memory i.e. an agreement about what data will be stored in which sectors what kinds of operations the reader will be allowed to perform on each sector and the keys that the reader will need to perform the allowed operations. For example a MIFARE application may use one sector to store information typically contained on a magstripe card such as account number expiration date cardholder name etc. and another sector to keep track of credits earned bonus points accumulated and so on. In another example a sector may be used to store the current balance of a prepaid account a gift card or similar in which case the application may deduct an amount from the balance as the account holder makes purchases. A MIFARE application may use as few or as many sectors as it needs limited only by the number of sectors available on the device. Using the memory illustrated in a MIFARE application may use from 1 to 16 sectors. Thus the fundamental difference between one MIFARE application and another MIFARE application for example may lie merely in how each application uses the MIFARE memory space.

MIFARE memory is organized such that each sector has its own set of secret keys and access bits. Each sector s secret keys may be distinct from the secret keys used by other sectors but this is not required. Each sector s access bits can also be set independently of other sectors. The value of the access bits determine the read write characteristics of the sector and also determine which key is required for each operation. Since each sector has its own set of access bits a MIFARE application may maintain data with different access restrictions. For example some sectors may be configured as read only sectors while other sectors may be configured as read write sectors. Read only sectors may be used to store static data such as credit card number coupon code ticket number and or account holder name while read write sectors may be used to store account balances for prepaid accounts or gift cards or uses status for coupon ticket and or promotions for example. Because access to MIFARE memory sectors always requires the use of an access key MIFARE sectors may be thought of as never being unlocked. This characteristic of MIFARE memory architecture is a principle obstacle to sharing MIFARE memory among multiple MIFARE applications.

Conventionally there have been two different approaches to sharing memory between applications. The first is a territorial approach which is to strike an agreement between the applications regarding which portions of memory will be owned i.e. exclusively used by each application. Using a MIFARE example application A may own sectors through application B may own sectors through application C may own sectors and and so on. However the territorial approach is impractical for a number of reasons. First some applications may conform to a standard which has severe constraints on memory space. For example some MIFARE products have extremely limited memory space e.g. as little as 320 Bytes so there may not be enough sectors to allocate out to the multiple applications and still allow each application to have enough memory space for its needs. Second some applications may conform to a standard which does not contemplate or accommodate the concept of sharing memory space with other applications. For example each MIFARE application typically expects to have the entire MIFARE memory space available to use as it pleases and providers of MIFARE applications are generally free to change the number allocation or selection of sectors used without notice. Sharing memory in a non overlapping way would require that the application providers negotiate between themselves to allocate the use of specific sectors to one application or the other. Due to the limited memory space available on a typical MIFARE card and the large number of possible combinations of applications that might be loaded together on a single MIFARE device this approach is impractical.

The second approach is a cooperative sharing approach in which the applications take turns using the entire memory and where by agreement among the application providers only one application at a time has use of that entire memory. In the cooperative sharing approach all the applications either use the same secret keys or know each other s secret keys. However this approach has serious drawbacks. For security reasons having all applications use the same secret key or key set is undesirable because if that one key or key set is compromised all applications are at risk of misuse abuse or fraud. Having each application know the other applications secret keys is also undesirable because application providers do not want to share their security keys with other application providers and because a single malicious application may then harvest all of the secret keys available on the device for potentially nefarious purposes. In short the weakness of the cooperative sharing approach is that it works only if all applications cooperate nicely.

For this reason although MIFARE memory is organized so that it is theoretically possible to support multiple applications actually supporting multiple MIFARE applications using different security keys on the same card is so impractical as to be essentially impossible using conventional methods. The difficulties of supporting multiple applications using different security keys on the same wireless smart device apply generally to any application standard including the MIFARE standard in which all or some portion of application memory may be reserved or locked by one application for its exclusive use particularly if locking or reserving the memory involves the use of an application specific secret key. As in the MIFARE case security concerns may render unacceptable the territorial and cooperative sharing approaches described above.

Accordingly there exists a need for methods systems and computer program products for supporting multiple contactless applications using different security keys on the same wireless smart device.

According to one aspect the subject matter described herein includes a method for supporting multiple contactless applications using different security keys on a wireless smart device. The method includes at a wireless smart device configured to communicate with a wireless smart device reader the wireless device including a plurality of contactless applications and a contactless application memory for use by the plurality of contactless applications initializing a portion of the memory such that access to the portion of memory requires the use of a shared secret key known to the plurality of contactless applications. The method includes reserving the portion of memory for use by one of the plurality of contactless applications by using the shared secret key to set access privileges for the portion of memory such that access to the portion of memory requires the use of an application specific secret key associated with the one application and not known to the other applications.

According to another aspect the subject matter described herein includes a method for supporting multiple contactless applications based on MIFARE specifications using different security keys on a wireless smart device. The method includes at a wireless smart device configured to communicate with a wireless smart device reader the device including a secure element for hosting a plurality of contactless applications based on MIFARE specifications and a MIFARE memory for use by the plurality of contactless applications based on MIFARE specifications initializing a sector of the MIFARE memory such that a sector trailer of the sector contains a shared secret key known to the plurality of contactless applications based on MIFARE specifications hosted by the secure element. The method includes reserving the sector of MIFARE memory for use by one of the plurality of contactless applications based on MIFARE specifications by using the shared secret key to write information associated with the one application into the MIFARE memory including writing an application specific secret key associated with the one application into a key field of the sector trailer.

According to yet another aspect the subject matter described herein includes a wireless smart device for supporting multiple contactless applications using different security keys. The wireless smart device includes a communications module for wirelessly communicating with a wireless smart device reader and a plurality of applications for communicating with the wireless smart device reader via the communications module each application having associated with it an application key not known to the other applications. The wireless smart device also includes an application memory for use by the plurality of applications and accessible by the wireless smart device reader via the communications module wherein access to at least a portion of the memory requires the use of an access key. The application memory is configured such that upon initialization a shared secret key known to the plurality of applications is the access key for the portion of memory. Each application is configured to reserve a portion of memory by using the shared secret key to change the access key for the portion to the application key associated with that application. Each application is also configured to release the reserved portion of memory by using the application key associated with that application to change the access key for the portion to shared secret key.

The subject matter described herein for supporting multiple contactless applications using different security keys may be implemented in hardware software firmware or any combination thereof. As such the terms function or module as used herein refer to hardware software and or firmware for implementing the feature being described. In one exemplary implementation the subject matter described herein may be implemented using a computer program product comprising computer executable instructions embodied in a computer readable medium.

Exemplary computer readable media suitable for implementing the subject matter described herein include disk memory devices chip memory devices programmable logic devices and application specific integrated circuits. In addition a computer program product that implements the subject matter described herein may be located on a single device or computing platform or may be distributed across multiple devices or computing platforms.

In accordance with the subject matter disclosed herein systems methods and computer program products are provided for supporting multiple contactless applications including MIFARE applications using different security keys. In contrast with conventional territorial or cooperative sharing approaches a secure sharing approach as described herein allows multiple applications to share application memory without increased security risk to each application.

In one embodiment device may include a secure element for hosting the multiple applications. One function of secure element is to provide to each hosted application a private and secure workspace and to protect each application from unauthorized access of its data by another application. Secure element may include an application memory for use by the applications hosted by secure element . Some or all of application memory may be reserved or locked for the exclusive use of a hosted application. In one embodiment application memory may be an emulated MIFARE memory shared by multiple MIFARE applications. In such embodiments each sector of MIFARE memory may be locked for the exclusive use of a MIFARE application by writing one or more of that application s secret keys into that sector s sector trailer . Device may include a communications module for communicating with wireless smart device readers such as retailer reader and theatre reader .

In the embodiment illustrated in secure element hosts two applications a retailer application and a movie theatre application. Each application has its own secure memory section secure memory areas SMA and SMA respectively. In this example the retailer application manages coupons which may be used during purchases and the theatre application manages electronic tickets. For clarity the secure memory areas for the two applications SMA and SMA are shown in but the applications themselves are not shown.

Each application has access to set of shared secret keys which are used to lock application memory in order to allow applications hosted by secure element to have subsequent access to application memory . The set of shared secret keys may include only a single key or it may include multiple keys. In a MIFARE memory each sector has a sector trailer . Thus each sector may have its own unique secret key or keys or the same pair of keys may be used for all sectors. Other numbers of keys per sector are contemplated as well as other combinations of key attributes such as shared among sectors unique per each sector. For example each sector may have its own unique write key while all sectors use the same read key.

In one embodiment the set of shared secret keys is unique to each device or secure element . Shared secret keys are known only to the applications hosted by secure element in a typical embodiment the contents of shared secret keys cannot be determined by retailer reader . Values for shared secret keys may be chosen so as to avoid values known to be in use by applications and readers to prevent the possibility of access to application memory while in its supposedly locked state.

In one embodiment sharing of application memory among multiple applications using different security keys involves three distinct steps initialization reservation and release. Each of these will be discussed in turn.

Initialization of application memory refers to the process whereby application memory is placed into a locked state that requires the use of shared secret keys to unlock. Initialization of application memory may occur for example during device power on or device reset memory reset via administrative function and the like. Application memory may be initialized to this locked state by operation of hardware firmware software or a combination of the above. In the embodiment illustrated in application memory has been locked such that access to application memory requires the use of shared secret keys thus preventing access to application memory by either retailer reader or theatre reader . In a MIFARE context the MIFARE memory may be initialized so that every sector trailer contains the set of shared secret keys .

Reservation of application memory refers to the process whereby one application gains access to the memory and locks i.e. prevents other applications from gaining access to some or all of the memory space. In one embodiment during the reservation process the current access key must be used to change the access permissions of the memory such that access to the memory requires the use of the new access key. In other words the current key must be used to change the current key to the new key.

In a MIFARE example a MIFARE application may reserve a sector of MIFARE memory by using shared secret keys to write its own secret application keys into the MIFARE memory sector trailer . Once sector trailer contains the first application s secret application keys a second application will be unable to access the memory unless it too knows the first application s secret keys and specifically the secret key currently in sector trailer .

Release of application memory refers to the process whereby application memory is placed into a state in which the memory is not actively being used by an application and thus may be reserved for exclusive use by any qualified application where an application is considered qualified if it has the means to reserve the memory for itself e.g. it knows the necessary key.

In some embodiments memory may be released but not unlocked that is accessing the memory may always require a key but that key may or may not be known publicly. As described above access to a MIFARE memory always requires a key conceptually one can say that MIFARE memory is always locked. In a MIFARE context reserving a memory means locking the memory with a key known only to the entity for whom the memory is reserved and releasing a memory means locking the memory with a key known to other entities that may want to access the memory or reserve the memory for themselves. In one embodiment all applications hosted by secure element or otherwise existing on device may by convention or agreement ensure that upon completion of the release process application memory will be placed into the initialized state e.g. the sector trailers will contain the shared secret keys thus guaranteeing that applications hosted by secure element will be able to subsequently reserve the memory for their exclusive use or even merely access the memory without reserving it if they so choose.

In one embodiment each application keeps a copy of shared secret keys in the application s secure memory area. In another embodiment secure element maintains a single copy of shared secret keys which each application accesses when needed via a function call or other mechanism at which time secure element provides shared secret keys to the application requesting them.

The contents of application memory may be accessed by a wireless smart device reader via communication with and through communications module . From the perspective of a wireless smart device reader the only memory that exists on device is application memory . A wireless smart device reader accesses application memory via sending messages containing one or more commands defined in a command set. In one embodiment the commands sent by the wireless smart device reader must include or incorporate a correct access key. For example a MIFARE reader accesses a MIFARE application memory via MIFARE commands. Two requirements must be met in order for a MIFARE reader to access a MIFARE application memory first the MIFARE reader must use a valid sector key and second the sector s access permission settings must allow the attempted access.

In one embodiment application memory may be an emulated MIFARE memory. For the remainder of the description of the application memory will for the purpose of illustration only and not for the purpose of limitation be presumed to be a MIFARE memory. In the MIFARE context a sector key used by retailer reader is valid if it matches the sector key in the trailer block of the sector that retailer reader is attempting to access. For example if retailer reader attempts to write to sector of application memory and the access bits in sector are set such that write access to sector requires the use of key B of sector then if retailer reader does not use a key with the same value as key B of sector retailer reader will not be able to write data to sector . In embodiments which use an encryption algorithm that allows for multiple keys to be used a valid key may be one that does not exactly match a key in sector trailer but that allows access to the sector nonetheless.

On the other hand applications hosted by device may access application memory via application programming interface API calls which do not go to or through communications module . In one embodiment only one requirement must be met in order for an application hosted by device to access application memory the application must use a valid access key. In a MIFARE context a MIFARE application will be able to access a sector of the MIFARE application memory if the access keys used by the application match both key A and key B of that sector s sector trailer . In one embodiment if the MIFARE application uses the valid keyset the MIFARE application will be able to access the sector regardless of the contents of that sector s access bits .

In one embodiment each application may use its secure memory area to store application specific keys data or both. For example the retailer application may store its retailer secret keys and coupon data in its secure memory area SMA while the theatre application may use its secure memory area SMA to store theatre secret keys and ticket data . An example of the operation of secure element and interaction between device and retailer reader will now be described.

At block a portion of memory is initialized such that access to the portion of memory requires the use of a shared secret key known to the multiple contactless applications. Initialization of application memory may be performed automatically in response to satisfaction of some predetermined condition such as detection of a power up power down or reset. Initialization may be performed manually such as in response to a user input. Initialization may be performed in response to a command or message sent from a remote entity such as a provisioning server on a network. Initialization may be performed by device secure element application memory itself some other entity within device . Similarly reservation or release of application memory for use by a hosted application may be performed by secure element the application itself another entity within device or some combination of the above. In one embodiment user of device may request activation of an application secure element may detect the request and either perform the reservation steps itself or issue to the application a command instructing the application to perform the reservation steps.

At block the shared secret key is used to reserve the portion of memory for use by one of the contactless applications. For example access permissions for some or all of memory may be set such that access to the reserved portion of memory requires the use of retailer secret key . In one embodiment the retailer application performs the reservation. In an alternative embodiment secure element performs the reservation.

At block the reserved portion of memory is accessed using the application specific secret key. Continuing the example above the reserved portion of memory must be accessed with retailer secret key . It should be noted that the operations performed in block are optional since it is conceivable that an application may be activated and made ready to perform a function or transaction but not called upon to perform that function or transaction. Similarly the operations performed in block may be performed multiple times. For example once the portion of memory is reserved by the retailer application the retailer application may need to prepare the reserved portion such as clearing the contents of the memory or loading the memory with the proper contents for the expected transaction. Similarly whether or not a transaction was also performed the contents of the reserved portion of memory may be preserved or stored for safekeeping. Finally the pre and post transaction operations as well as the transactions themselves may be performed multiple times while the application controls the reserved portion of memory .

At block the reserved portion of memory is released so that it may be used by another contactless application or even by the same application that previously reserved the portion. In one embodiment the application specific secret key such as retailer secret key above is used to set access permissions for the portion of memory such that subsequent access to that portion requires the use of shared secret key .

At block MIFARE application memory is initialized such that the sector trailers of one or more of the sectors contain a shared secret key known to the plurality of MIFARE applications hosted by the secure element such as shared secret key . This initialization may occur as part of a power on or other reset routine a reset sequence or a memory initialization sequence for example. After initialization application memory is ready to be accessed or reserved by an application hosted by secure element . In one embodiment shared secret keys may be chosen such that in the initialized state access to application memory by a reader is blocked. For example if the shared secret key or key set does not match any application specific key no transaction can be performed by retailer reader or theatre reader . In this way shared secret keys may be used to prevent any MIFARE reader from performing a transaction until a hosted MIFARE application reserves application memory .

At block one or more sectors of MIFARE memory are reserved for use by one of the multiple MIFARE applications by using the shared secret key to write information associated with the one application into the MIFARE memory including writing a application specific secret key associated with the one application into a key field of the sector trailer.

The order that the application specific data may be written into blocks and sector trailers is flexible so long as a correct access key is used. For example shared secret key may be used to write the application secret key such as theatre secret key into a key field such as key A and key B of sector trailer after which the theatre secret key would be used to write application data such as ticket MIFARE data into one or more data blocks . Alternatively shared secret key may be used to write application data such as MIFARE ticket data into the sector data blocks after which shared secret key would be used to write the application secret key such as theatre secret key into sector trailer . Upon conclusion of the reservation process at least one sector trailer will contain one or more application secret keys.

In one embodiment the reservation of application memory includes copying or moving application data from the application s secure memory area into application memory . For example during reservation of MIFARE application memory for use by the theatre issuer application ticket data and theatre secret keys may be copied from SMA into application memory . Once the application memory contains theatre secret keys device is ready for a transaction with theatre reader .

At block zero or more transactions of a type supported by the one application may be performed. Continuing the example above theatre reader will be able to perform a theatre ticket transaction with device but retailer reader will not be able to perform a retail coupon transaction because the secret keys used by retailer reader do not match the theatre secret keys currently contained in application memory .

At block the application memory is released for use by another of the plurality of applications or for subsequent use by the application that had reserved the memory previously. As in the reservation process the order that the application specific data in the blocks and sector trailers is stored into the secure memory area is flexible so long as a correct access key is used. For example the application key may be used to store application data from application memory into the secure memory area followed by using the application key to store the shared secret keys into the sector trailers of application memory . Alternatively the application key may be used to write the shared secret keys to sector trailers of application memory followed by using the shared secret keys to store application data from application memory into the application s secure memory area. Optionally some or all of application memory may be cleared or written with null or random values as part of the reservation or release processes. At the conclusion of the release process the sector trailers of application memory should contain shared secret keys so that any application hosted by secure element may reserve application memory for its use.

Upon completion of the reservation process a retailer MIFARE reader will be able to perform a transaction with device while theatre MIFARE reader which does not know the values of retailer secret keys will not be able to perform a transaction with device .

As described above with respect to block the order in which coupon data and retailer secret keys are written into application memory messages M and M respectively is largely irrelevant bearing in mind that whatever key is currently in the sector trailer must be used during the write. However once retailer secret keys are written into the sector trailers subsequent accesses including writing to data sectors must be performed using retailer secret keys rather than shared secret keys . In addition absent other prohibitions imposed by secure element once retailer secret keys are written into the sector trailers retailer reader may initiate a transaction.

It will be understood that various details of the subject matter described herein may be changed without departing from the scope of the subject matter described herein. Furthermore the foregoing description is for the purpose of illustration only and not for the purpose of limitation.

