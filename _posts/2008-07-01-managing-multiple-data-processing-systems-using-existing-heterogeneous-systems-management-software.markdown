---

title: Managing multiple data processing systems using existing heterogeneous systems management software
abstract: A common consolidation management application provides an interface to the multiple different system management software applications and at least one user input console. An adapter in each of the system management software applications supports communication with the consolidation application. A system administrator issues requests to different system management software applications using a common interface provided by the consolidation application. The consolidation application can be installed over an existing complex of computer systems managed by different management applications, without modifying the managed systems or replacing the management applications.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07904916&OS=07904916&RS=07904916
owner: International Business Machines Corporation
number: 07904916
owner_city: Armonk
owner_country: US
publication_date: 20080701
---
This is a continuation of U.S. patent application Ser. No. 10 703 356 filed Nov. 7 2003 now U.S. Pat. No. 7 412 709 entitled Method and Apparatus for Managing Multiple Data Processing Systems Using Existing Heterogeneous Systems Management Software which is herein incorporated by reference. This application claims priority under 35 U.S.C. 120 of U.S. patent application Ser. No. 10 703 356 filed Nov. 7 2003 now U.S. Pat. 7 412 709.

The present invention relates to digital data processing and in particular to the management of digital data processing complexes comprising multiple digital data processing systems.

In the latter half of the twentieth century there began a phenomenon known as the information revolution. While the information revolution is a historical development broader in scope than any one event or machine no single device has come to represent the information revolution more than the digital electronic computer. The development of computer systems has surely been a revolution. Each year computer systems grow faster store more data and provide more applications to their users.

Early computer systems were very expensive and difficult to use capable of being programmed and manipulated by only a handful of highly educated specialists. The cost of operating such computers was correspondingly high and they were therefore used for only the most essential tasks. The dynamic which has driven the information revolution is the sustained reduction in the cost of computing. Thus information which was too expensive to gather store and process a few years ago is now economically feasible to manipulate via computer. The reduced cost of information processing drives increasing productivity in a snowballing effect because product designs manufacturing processes resource scheduling administrative chores and many other factors are made more efficient.

The cost of information processing not only includes the cost of computer hardware and software but perhaps even more significantly the cost of human resources devoted to operating and maintaining computer systems. Improvements to the usability of computer hardware and software reduce the cost of human resources associated with information processing either by reducing the amount of time directly devoted to a particular task by a human operator user or by reducing the level of training required of a user in order to achieve proficiency in performing the task. Continued progress of the information revolution requires still further improvements to the usability and manageability of computer systems.

Many enterprises operate large networks of computer systems. These networks are often arranged in a hierarchy in which individual employees agents contractors volunteers or other users perform useful work on terminals or workstations which are in turn attached to larger computer systems. The larger systems may further be interconnected in hierarchical web ring or other network configurations.

Large computer system networks have assumed an ever larger role in the operations of many enterprises. Transactions with customers or clients are recorded on computers. Internal financial data is stored on computers. Documents are generated stored and printed on computers. Manufacturing processes are controlled by computers. Products are developed on computers. The list goes on and on. Over time these large computer system networks become so integrated with the operations of the enterprise that it becomes virtually impossible for the enterprise to function without the computer network.

Unfortunately these systems do not just take care of themselves and like any complex piece of machinery require supervision and maintenance. Because these networks are both very complex and very essential most such systems have dedicated personnel responsible for their administration and maintenance. These personnel may perform tasks such as changing network configurations authorizing users to access network resources or removing authorizations backing up and restoring data loading new or upgraded software analyzing network performance tuning the network by re allocating resources replacing malfunctioning components and so forth.

In almost any large enterprise one will find a conglomeration of computer systems which were acquired at different times for different purposes from different vendors using different architectures and performing different functions. This is understandable given that enterprises are constantly expanding and changing. Enterprises are often divided into organizational units which perform different functions and thus have different computing needs. An enterprise may re organize its operations to make them more productive or may expand into new lines of operation or may simply grow in its existing lines of operation. Many of these changes require new computer system capability. It is understandable that persons responsible for obtaining new computer system capability in such circumstances will want computer systems which are most suited to the intended use of the organizational unit involved. Moreover many enterprises include divisions or other portions which were acquired through purchase merger or otherwise from other enterprises and after acquisition continue to use computer systems which were previously used by the division before its association with the acquiring enterprise.

While the existence of a variety of computer systems in a large enterprise is the result of rational decisions made at the time each of the various systems was acquired the result of changes over time is often a heterogeneous collection of systems with little in common. Most individual users don t care very much about this complexity because they become accustomed to using one system and don t worry about what others are using. However for people who are charged with supervising and maintaining the enterprise s computer systems this complexity can be daunting.

Large system complexes are usually managed using system management software. As used herein system management is the administration and maintenance of one or more computer systems. System management software is software executing on one or more computer systems which is used to administer and maintain the computer system s on which it executes and or other computer systems which communicate with the system s on which the software executes. This software may reside in a dedicated system used only for management of a complex of computer systems of may reside in a system which concurrently performs other tasks. A system in which system management software for managing other systems resides is referred to herein as a management server and the systems which it manages are referred to as managed systems. A single management server might manage thousands of managed systems.

For the same reasons that a variety of computer systems exists in many enterprises a variety of system management software exists. System management software is often acquired for use with a particular subset of the computers within the enterprise and as the collection of computers changes the system management software changes accordingly. The variety of different system management software applications means that system administrators and other maintenance personnel must use multiple applications and often multiple separate computer systems to manage the computers within an enterprise. This circumstance naturally makes administration more difficult.

The conventional solution to this problem has been migration of the computers systems within an enterprise to a common system management framework. I.e. a common system management application or suite of applications which is intended to manage all the computer systems within the enterprise is chosen for the use of the administrators based on any desired characteristics. The existing computer systems i.e. the managed systems are then migrated to work with the new common system management application which may be on a new management server . For those systems which do not already support the new common system management application it is generally necessary to install some additional software.

Unfortunately this solution is rather expensive as it can involve modifying the software on a large number of computer systems. For some of the managed systems particularly older systems it may be impossible to provide all the functional capabilities desired. Finally even when migrated the solution is often only temporary because mergers re organizations and other changes to the underlying computer systems within an enterprise may re introduce the problem.

A need exists for improved techniques for managing to complexity of computer systems within an enterprise particularly techniques which are more easily adapted to rapid changes in the collection of computer systems within an enterprise.

In an enterprise having or controlling multiple computer systems which are managed by multiple different system management software applications or suites of applications a common consolidation application is established as an interface to the multiple different system management software applications or suites of applications . An adapter is installed in each of the systems having system management software applications allowing the system management applications to communicate with the common consolidation application. The consolidation application issues requests to the different system management software applications which in turn perform management functions for their respective managed systems. The management functions performed by each of the different system management applications are not altered and the existence of the consolidation application is completely transparent to the managed systems. Thus no upgrade or alteration is required of the managed systems themselves.

Thus in one aspect of the preferred embodiment an existing computer system complex managed by multiple different system management applications is migrated to a computer system complex having a global management interface without alteration of any of the managed systems and leaving the functions of the existing system management applications intact.

In the preferred embodiment the different system management applications communicate with the consolidation application using adapters employing Web Services. Web Services is known communications protocol using an XML based remote function call capability. The functions supported by an application are defined using Web Services Definition Language WSDL . Using WSDL a set of typical management requests is defined for the consolidation application to management server interface. Each request defined in the Web Services interface is mapped in the management server to an existing function performed by the system management application. When the operator using the consolidation application wishes to perform the function the request is communicated to one or more management servers mapped to the local function in the respective system management application of each management server and performed using the various system management applications. The response or responses from the various system management applications are consolidated by the consolidation application for presentation to the operator. Such a function is thus performed in the same manner that it would have been performed had it been invoked initially from one or more management servers instead of the consolidation application.

Typically the set of functions which can be invoked from the consolidation application does not include all the functions performed by the management server although it could but is a core set of management functions supported by many system management applications. In the preferred embodiment the existing management servers have all the functions they had originally before installation of the console interface . An administrator could alternatively invoke any such function directly from the management server without the use of the consolidation application. The consolidation application is simply an alternative means of invoking the function.

In the preferred embodiment the consolidation application generates a user interface for a physical system administrator terminal called a console. This interface is preferably a web browser based interface in which the consolidation application acts as a web server. The console therefore requires only a conventional browser to access the interface. Multiple consoles which can be located in diverse locations can access the same consolidation application.

A common management consolidation application and associated adapters as described herein thus provides the capability to manage a large and diverse network of computer systems from a single physical terminal and single application interface. Moreover because adapters are only required to be placed in the management servers and the managed systems themselves are not altered this is a far less expensive solution that migration of all the managed systems to a common system management platform. Additionally because each management server preferably preserves all its original functions it is not necessary to compromise on a common system management application which might not perform some function deemed desirable within a subgroup of the enterprise.

The details of the present invention both as to its structure and operation can best be understood by reference to the accompanying drawings in which like reference numerals refer to like parts and in which 

Referring to the Drawing wherein like numbers denote like parts throughout the several views is a high level diagram of a conventional multiple computer system complex managed by multiple systems managements servers as might be typical of computer systems within a large enterprise. Complex contains multiple computer systems functioning as system management servers which communicate with multiple additional systems functioning as managed systems .

Each system management server is responsible for managing a respective set of computer systems. The managed set of computer systems associated with each management server is indicated in by connection links running between the management servers and their respective managed systems. For example server manages managed systems server manages managed systems and so on. A management server may communicate directly with the systems in manages as indicated by direct links or management functions may be distributed in a hierarchy as shown in the case of systems managed by server . In this case intermediate management servers communicate directly with managed systems and ultimately with management server which controls the entire set.

As represented in management servers may be and usually are computer systems of different types. Furthermore managed systems may be and usually are computer systems of different types. Additionally within any set of systems managed by a single management server the managed systems may be computer systems of different types as shown by systems managed by server .

System management servers as well as intermediate servers are typically general purpose computer systems executing system management software. These systems could be dedicated management servers i.e. computer systems which are used exclusively or nearly exclusively for system management functions or they could be systems which perform system management tasks in addition to unrelated user applications. Furthermore it is possible that multiple system management software applications would execute on the same physical computer system although in the general case such systems execute on separate computers systems. Where the number of managed systems is very large it is more likely that the system on which the management server is located will be dedicated to that function.

Each management server manages systems within its respective set independently of the other management servers. The management software running on any one management server is not necessary the same as the management software running on any other management server and in the general case each management server executes different system management software although many of the functions performed by different management software running on different management servers may be similar.

The links shown in between system management servers and managed systems are intended to represent management control paths rather than actual physical connections. While there could be actual physical connections running as shown in the general case the system management servers communicate with their corresponding managed systems through one or more networks. Such networks may be arranged in any known configuration or aggregation of configurations such as webs rings star networks and so forth which may be coupled together by routers and other links. Furthermore although links running between different sets of systems e.g. between management server and its associated managed systems on one hand and management server and its associated managed systems on the other are not shown in in many large enterprises most or all of the systems are coupled to a common network and systems within different management sets can communicate with each other over the network. Most large enterprises support some form of internal network for communication among the different systems in the enterprise however the network could also be an external network such as the Internet or could be a combination of internal networks at different locations with are linked together via an external network such as the Internet.

Although four management servers two intermediate servers and twenty two managed systems are depicted in it will be understood that the actual number of such system may vary and is typically much larger. For example a single management server in a large hierarchical management configuration might manage four intermediate management servers and 10 000 or so managed systems.

In the preferred embodiment management servers differ from conventional management servers as explained more fully herein. However intermediate managements servers and managed systems are conventional systems and would be exactly the same whether managed by conventional management servers or management servers according to the preferred embodiment of the present invention. One of the advantages of this embodiment is that implementation of a consolidation management application as described herein does not require any alteration to the managed systems which are generally far greater in number more diverse in capability and more geographically dispersed than the management servers.

A single consolidation management application server communicates with multiple management servers . Consolidation management application server is a computer system which executes a consolidation application for the various management servers. The consolidation application allows a system administrator or similar user to perform certain system management functions from a single interface as explained in greater detail herein. The consolidation application is software which can execute on any suitable configured general purpose computer system. The consolidation application could execute on the same physical computer system as a management server application or on a distinct physical system which is separate from any of the other management server systems . E.g. management server and consolidation application server could be physically the same computer system.

Consolidation management application server is linked to one or more consoles of which one is shown in . Console is the physical terminal at which the system administrator interacts with the consolidation application. In the preferred embodiment consolidation management application server acts as a web server to the console s while the console s are web clients. I.e. the consolidation application presents its interactive interface as a set of display panels in the form of web pages which are rendered in a displayable format by a web browser resident in the console. Thus the console requires no custom software to communicate with the consolidation management application and the console may use the Internet to connect to consolidation server from almost anywhere. However the interface between consolidation management application and console need not be a web based interface and could alternatively be almost any form of interface. Additionally console need not be remote from consolidation server and could alternatively be a local workstation or other terminal attached to server . Server and console might alternatively be one and the same system such as a desktop workstation.

Server system shown in is intended to be a simplified representation for illustrative purposes it being understood that many variations in system configuration are possible in addition to those specifically mentioned here and that the complexity of a typical system and number of attached devices is typically greater. While system is shown with a terminal interface depicting multiple attached terminals as in the case of a typical large multi user system a server system could alternatively be a single user system such as a workstation or desktop personal computer . Server system might also be a system having no attached terminals in which all interaction with the system is through client server connections.

Consolidation application is an executable program which acts as both a client and a server to provide an interactive user interface to one or more system administrators or similar users at respective consoles and to invoke functions within and receive responses from multiple system management servers as described in greater detail herein. Consolidation application includes a system management server interface for generating data transmissions to and decoding transmissions from system management servers . In the preferred embodiment communications between consolidation application and the system management servers use the Open Grid Services Architecture which is an extension of Web Services architecture. However other protocols could alternatively be used. Consolidation application further includes a console interface for generating console communications. In the preferred embodiment console interface is a conventional web server interface which builds interactive display panels in HTML for display on a web browser within the console.

Consolidation master database is a database local to consolidation server containing configuration and other information necessary for communicating with the various system managements servers and with console . Specifically master database contains data identifying each system management server in computer complex . Identifying information includes a network address or similar identifier enabling communications to be directed to the desired management server system. It further includes information identifying management functions supported by the management server system in the set of management functions which can be requested by consolidation application . This information could be in the form of a flag bit for each respective management function or could be an identifier of the management program and version number executing on the management server system. Master database optionally includes substantial additional information which while not strictly necessary for performing minimal functions described herein might be useful to provide to personnel using the consolidation application i.e. to display at a console or for other purposes . For example master database optionally includes descriptive information concerning the management server system such as type of processor s operating system storage capacity and so forth physical location of the system name s and telephone numbers of key contacts such as security repair and other administrative personnel . Master database may further contain profile information regarding system administrators authorized to use consolidation application .

Scheduled function database contains information regarding functions which are to be sent to one or more management servers at a scheduled time. Scheduled functions database allows an administrator to schedule a management function in the future either to be performed at a specific time or times or on a periodic basic. When data in scheduled functions database indicates it is time to dispatch a function request to a management server consolidation application dispatches the function request automatically without the need for the system administrator to be logged on at the console.

Cached state database contains state information with respect to complex which has been returned to consolidation application in response to function requests. State information may include configuration information status information historical usage data error logs or any other information which may be returned by the system management servers. It should be noted that information in cached state database is inherently second hand and that the system management servers are the authoritative repository of such information. For example cached state database may include a list of all managed systems of a particular management server but the list will only be current as of the last time such data was requested from the management server. Due to frequent configuration and other changes new data should be requested whenever it is necessary to have precise information. On the other hand caching such data may still be useful to administrators in order to reduce the volume of requests for new data. Data may also be cached in database because the administrator who requested it is logged off by the time the data is received in consolidation server . Preferably all cached data has a timestamp or other indicator of its age so that the user may judge whether it is too stale to be relied upon.

Console message queues contain messages for the console s . In general these messages are generated in response to responsive data received from the system management servers. For example if a request is issued to a system management server to gather certain performance data a message may be placed in the console s message queue when a response is received from the system management server indicating that the data is ready. Typically console messages are immediately displayed interactively as part of the web user interface. However they could also saved until retrieved by the operator particularly where the operator is not logged on when the message is received. Preferably messages remain in the message queue until deleted by the console operator.

Input queue temporarily stores communications received over the network or networks from console or management servers . In the case of console communications these are generally server requests the console being the client either to perform some management function or provide information to the console. In the case of management server communications incoming communications are typically responses to previous requests from the consolidation application the consolidation application being the client . Incoming communications from input queue are handled generally by consolidation application . Consolidation application may respond to incoming console requests by transmitting locally available information to the console by transmitting one or more management function requests to one or more management servers or otherwise. Consolidation application may respond to incoming responses from a management server by adding data to cached state database and or transmitting data to a requesting console or in some other appropriate manner. Although a single queue is shown there could be multiple queues.

Output queue temporarily stores outgoing communications for transmission over one or more networks. I.e. outgoing management function requests destined for a system management server are formatted according to a predetermined protocol by system management server interface and enqueued in output queue for transmission. Outgoing server responses to console requests are formatted by console interface and enqueued in queue . Although a single queue is shown there could be multiple queues.

Consolidation system may optionally contain additional applications and databases . These optional additional applications may be related to system administration or might be unrelated applications.

System management application is an executable program which performs system management on a subset of systems in computer complex . The functions performed by system management application could be any of a variety of functions normally performed by system management software. In particular it is preferred that system management application perform all of the core management functions described herein in order to support the full range of functions supported in consolidation application . However support for all of the listed functions is not a requirement and a system management application could alternatively support only some of the core functions. Generally system management function will perform various management functions in addition to the core management functions described herein.

System management application accesses a database of state data to perform management functions. State data may include configuration data for the systems managed by system management application status information for the systems usage and accounting data error logs and so forth. Some of the data in state data may be used to provide responses to a request from the consolidation application.

Consolidation adapter works with system management application to invoke core management functions from the consolidation application. Specifically consolidation adapter receives requests from the consolidation application to invoke core management functions and responsive to these requests invokes corresponding management function within system management application . Such a function may be invoked using any of various conventional methods. For example system management application may have defined application programming interfaces APIs for invoking its functions. Alternatively adapter may generate input simulating an interactive user. The method chosen will depend on the specifics of the system management application. I.e. a consolidation adapter is specific to the system management application with which it interacts. Where multiple different system management applications exist in the same computer complex each such application will have a different consolidation adapter. However all consolidation adapters maintain a common interface with the consolidation application . As explained previously communications with the consolidation application preferably use the Open Grid Services Architecture.

System management application is preferably a stand alone conventional application which does not require consolidation adapter . I.e. system management application preferably supports its own user interface for receiving commands from a user and presenting responses to the user and maintains all data necessary for invoking the supported functions. It is envisioned that the system management application is generally a pre existing application which performs management functions on the set of managed systems. In accordance with the present invention it is not necessary to make any alterations to the existing system management applications within a computer complex. Consolidation adapter is typically added to a system management server which has been running a system management application for some time in order to support invoking the core set of functions at the consolidation application. However this temporal relationship is not strictly necessary and it would be possible to load both applications at about the same time. System management application is shown in and referred to herein as a single application for clarity of illustration and explanation although it is often a suite of applications. As used herein system management application should be understood to include a suite of applications.

Input queue temporarily stores communications received over the network or networks from consolidation application or one of managed systems or an intermediate management server . Requests from consolidation application are handled by consolidation adapter which invokes a corresponding function in system management application . Communications from managed systems or intermediate management servers are handled directly by the system management application . Although a single queue is shown there could be multiple queues.

Output queue temporarily stores outgoing communications for transmission over one or more networks. I.e. outgoing responses to consolidation application are formatted according to a predetermined protocol by consolidation adapter and enqueued in output queue for transmission. Outgoing communications to the managed systems such as management function commands are placed on the output queue directly by system management application . Although a single queue is shown there could be multiple queues.

A system management server may optionally contain additional applications and databases . These optional additional applications may be related to system administration or might be unrelated applications.

It will be understood that are conceptual views for purposes illustrating the present invention and that the actual number of software components in a typical system is much larger. Furthermore although certain components are shown as combined or separate entities combined components may actually be separate components and vice versa. While the software components are shown conceptually as residing in memory it will be understood that in general the memory of a computer system will be too small to hold all programs and data simultaneously and that information is typically stored in data storage comprising one or more mass storage devices such as rotating magnetic disk drives and that the information is paged into memory by operating system or as required.

In the preferred embodiment a core set of system management functions is supported through the consolidation application. The user selects a request at the console acting as a web client to the consolidation application acting as a web server the consolidation application issues the request to a management server to perform the function and the management server responds. The response may include providing information residing in the management server obtaining information from managed systems of the management server or executing programs in either the management server or its managed systems. A representative cores set of functions is described below. In this representative set the functions are grouped into five WSDL port types named the ConsolidatedSystemsManagementPort MonitorPort SystemPort MessagePort and ProcessPort.

It will be understood that the set of core functions described above is simply one example of a representative set and that other or additional functions e.g. monitor creation installation of software fixes etc. could be included.

In accordance with the preferred embodiment of the present invention configuration application functions as the intermediary between the various system management applications and the console to provide a single unified interface at the console. The console is preferably entirely conventional. I.e. the console executes an interactive web browser session from which the user can input data e.g. using HTML forms or any other input mechanism supported by a web server and can receive output from the consolidation application acting as a web server in the form of HTML web pages. The system management applications themselves are largely untouched but a respective adapter for translating WSDL communications and invoking functions from the consolidation application is placed in each system management server. The operation of the consolidation application is described below and illustrated in .

If a communication is received from a console the Y branch is taken from block . Such a communication might be of several different types. The communication may request locally available information i.e. information which is immediately available in consolidation server without need to obtain it from other systems the Y branch from block . The request for locally available information could be a request for messages from a console message queue a request for data previously returned by one or more system management applications and stored in cached state database or some other locally available information. If the communication is a request for locally available information the information is obtained from local sources formatted in an appropriate HTML form by console interface and transmitted to the requesting console client block .

The console communication may involve the scheduling of functions the Y branch from block . In this case consolidation application presents one or more interactive function scheduling screens from which the requesting user may add edit or delete one or more scheduled functions block . Scheduled functions thus entered by the user are stored in scheduled functions database .

The communication from the console may alternatively be a request for service from one or more system management applications the Y branch from block such as a request for information available to such applications a request that a task or monitor be started and so forth. In this case the consolidation application translates the data received from the console to a client request into one or more WSDL requests in the global WSDL format to one or more management servers block . The consolidation application selects a management server from among the one or more servers specified by the console user block . If the management server is on line the Y branch for block the request is transmitted block otherwise an appropriate status message is generated to inform the console user that the server was unavailable block . If there are more servers specified in the console request the Y branch is taken from block to select another server at block . When all specified servers there might be only one have been processed the N branch is taken from block to return to block . Thus a single console request may cause multiple WSDL requests to multiple management servers. Responses from all of these management servers may need to be consolidated by the consolidation application for display on the console.

If the communication from the console was some other form of communications i.e. neither a request for locally available information not a schedule function action nor a request for service from a system management application the consolidation application handles the communication as appropriate block . For example the communication might involve logging in or out authenticating a user ID and password or any number of miscellaneous administrative tasks.

Returning to the idle loop at blocks if a communication is received from a system management server the Y branch from block the consolidation application determines whether a pre defined response exists block . In some cases the console user may specify in advance an action to be taken upon the occurrence of some event in the management console. For example the user may specify that a monitor should be restarted automatically in the event that the monitor is halted as a result of a trigger condition. If a pre defined response exists the Y branch from block the pre defined reply is transmitted to the management server block . The consolidation application then updates the local cached state database as necessary with any new information received in the communication from the server block . It will be appreciated that many communications do not contain any such data. The consolidation application then adds a message to console message queue to indicate receipt of the communication from the server. While such a message is not strictly necessary in all cases in general the console will be apprised of communications from a system management server. If the console is currently on line the Y branch from block the consolidation application will transmit an alert to the console which immediately appears on the console screen block . The alert informs the console operator that a communication has been received from a management server any may identify the type of communication at a high level of generality. If the operator wishes further details he must request the message from message queue or view data from local cached database . The consolidation application having finished servicing the server communication returns to the idle loop at blocks .

If a timer has timed out indicating it is time to initiate a previously scheduled function recorded in scheduled functions database the Y branch is taken from block . In this case the function is retrieved from database and the consolidation application performs steps with respect to the scheduled function in much the same manner as it would for an on line console request.

It is envisioned that a consolidated system management apparatus as described herein will be retrofitted on an existing computer complex having multiple different system management applications located on different servers. One of the advantages of the present invention according to the preferred embodiment thereof is that it is possible to provide a unified system management interface to operators without replacing the existing system management applications or modifying any of the managed systems. The process of installing a consolidated management apparatus in an existing complex is illustrated in .

Referring to a physical system is chosen as the consolidation server block . This could be an existing system or a newly installed system. If it is an existing system it could be one of the system on which an existing system management application resides or a different system. The consolidation application is installed in the chosen consolidation server system block .

A system management server is selected block and a determination is made whether the system management application residing in the chosen system manager is a supported application block . A supported application is one for which a suitable consolidation adapter exists. In accordance with the preferred embodiment a separate consolidation adapter must be provided for each different system management application. This is custom software although much of the code is common to all consolidation adapters. While it is expected that such custom software will be written for a working set of major system management applications there will always be a possibility that some management applications are being used which are not supported i.e. for which no consolidation adapter has yet been created. In this case the N branch from block is taken and an appropriate unsupported server entry is created in the configuration data in consolidation master database block . The unsupported server entry records the existence of the unsupported management application which can be displayed to a console operator so that he knows which parts of the computer complex are unreachable using the consolidation application. This information may also be useful e.g. if a suitable consolidation adapter is later created for the unsupported application.

If the application is supported the Y branch from block a determination is made whether the version of the management application is supported block . As is well known versions of application frequently change and the consolidation adapter might be compatible only with the most recent version or versions. If the version is not supported the N branch is preferably taken from step and the existing system management application is upgraded to its most recent version block . In either case the appropriate consolidation adapter is then installed on the management server block and a configuration entry for the management server is created in the configuration data in consolidation master database block . Among other things the configuration entry contains the network address of the management server allowing the consolidation application to communication with the adapter in the server.

If any more management servers remain the Y branch from block the process returns to block to select the next server. When all servers have been process the N branch is taken from step and installation is complete.

It will be observed that most of the steps illustrated in can be performed automatically by installation software. In general the selection of a suitable consolidation server will be manual and there may be some manual intervention in installing the consolidation application. But given a list of management servers an installation application can perform most of the remaining steps automatically the exception being step which may again require manual intervention . On the other hand the steps shown in could be performed entirely by a human installer or by some combination of installation software and human input.

In general the routines executed to implement the illustrated embodiments of the invention whether implemented as part of an operating system or a specific application program object module or sequence of instructions are referred to herein as computer programs or applications . The computer programs typically comprise instructions which when read and executed by one or more processors in the devices or systems in a computer system consistent with the invention cause those devices or systems to perform the steps necessary to execute steps or generate elements embodying the various aspects of the present invention. Moreover while the invention has and hereinafter will be described in the context of fully functioning computer systems the various embodiments of the invention are capable of being distributed as a program product in a variety of forms and the invention applies equally regardless of the particular type of signal bearing media used to actually carry out the distribution. Examples of signal bearing media include but are not limited to recordable type media such as volatile and non volatile memory devices floppy disks hard disk drives CD ROM s DVD s magnetic tape and transmission type media such as digital and analog communications links including wireless communications links. An example of signal bearing media is illustrated in as memory and data storage .

Although a specific embodiment of the invention has been disclosed along with certain alternatives it will be recognized by those skilled in the art that additional variations in form and detail may be made within the scope of the claims which follow.

