---

title: Techniques for resource location and migration across data centers
abstract: An exemplary system includes a front-end component to receive requests for resources in a data center and configured to associate each request with identifying information, to locate one or more resources for each request and to store, in a log file, the identifying information and information about the location of the one or more resources; one or more distributed computation and storage components to acquire log file information and configured to analyze log information to decide if one or more resources associated with one or more requests should be migrated to a data center in a different geographical location; and a location service component to receive decisions made by the one or more distributed computation and storage components and configured to inform the front-end component when a decision causes one or more resources to be migrated to a data center in a different geographical location to thereby allow the front-end component to re-direct future requests for the one or more migrated resources to the data center in the different geographical location. Various other devices, systems and methods are also described.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09367257&OS=09367257&RS=09367257
owner: Microsoft Technology Licensing, LLC
number: 09367257
owner_city: Redmond
owner_country: US
publication_date: 20080911
---
Large scale data centers are a relatively new human artifact and their organization and structure has evolved rapidly as the commercial opportunities they provide has expanded. Typical modern data centers are organized collections of clusters of hardware running collections of standard software packages such as web servers database servers etc. interconnected by high speed networking routers and firewalls. A typical data centers operates in response to requests where requests are routed to resources such as files modules etc. in the data center. Some of these resources may be migratable i.e. they may be migrated via a network from one data center to another.

Web services e.g. software as a service SaaS supported by data centers are also rapidly evolving for example a company might first offer a search service and then an email service and then a Map service etc. . When a service reaches a certain size a decision is often made to geo host the service i.e. to host the service at multiple geographically disparate data centers. Further as new data centers come on line a service operator may decide to expand its services to one or more new data centers while maintaining or abandoning hosting of the service at other data centers. Competition as to cost and performance i.e. value can also be a factor in locating a service and associated resources. Given this environment large geo hosted services tend to exist in sub optimal states where many users and the resources they request have no or little geographical correspondence. For example a user in San Francisco Calif. may have a mailbox for her email service hosted in Blue Ridge Va. When such a scenario is placed into context one may conclude that hundreds of thousands of users may be geographically remote from their resources which can greatly diminish user experience and increase a service s operational costs.

Various exemplary technologies described herein pertain to techniques that can decide whether to migrate resources from one data center to another data center which in turn may enhance user experience and performance of the cloud e.g. the Internet and associated data centers .

An exemplary system includes a front end component to receive requests for resources in a data center and configured to associate each request with a unique request information to locate one or more resources for each request and to store in a log file the request information and information about the location of the one or more resources one or more distributed computation and storage components to acquire log file information and configured to analyze log information to decide if one or more resources associated with one or more requests should be migrated to a data center in a different geographical location and a location service component to receive decisions made by the one or more distributed computation and storage components and configured to inform the front end component when a decision causes one or more resources to be migrated to a data center in a different geographical location to thereby allow the front end component to re direct future requests for the one or more migrated resources to the data center in the different geographical location. Various other devices systems and methods are also described.

Various exemplary methods devices systems etc. described herein pertain to locating and migrating remote user data across geographically disparate data stores based on log information generated in response to user requests for such data. Migration of remote user data from one data store to another data store in another geographic location can increase performance and availability. Such migrating can decrease access time and enhance user experience.

In the data center the load balancer component and a front end component allow for external access to servers and which may be accessed by application servers or users that are submitting requests or retrieving request results from the data center . For example consider the request as being generated by a user accessing an email folder stored in the data center or a user retrieving results from an earlier submitted batch job to the data center . While the load balancer and front end component are shown as separate components these may be aggregated at one or more machines e.g. computers network devices etc. . Further while the example of shows three servers in practice the number of servers in a data center is typically orders of magnitude greater hence the data center may have servers or more.

In the data center so called middleware may be installed on the load balancer component and or the front end component to provide tools for resource management job scheduling and node state monitoring etc. Further each server and in the cluster can access information stored in associated data center storage devices e.g. under a common file system and can operate on incoming and or retrieved information e.g. number crunching rendering compiling file manipulation etc. . In the example of while data stores are not shown each of the servers and is configured to access data stores e.g. via a data center network infrastructure .

Referring to the timeline and associated arrows of the load balancer component can receive a request A and assign a request ID to the request B . The request further includes source information such as an IP address that can be used to identify the source of the request . The load balancer component then sends the request with its request ID and source information to a front end component . The front end component includes information about the location of resources e.g. computing resources data etc. in the data center and can direct the request to such resources C . For example as shown the request is broken into sub requests R and R where R is directed to the server and the request R is directed to the server . The front end component stores this direction information in a log along with the request ID and the source information. Further the server has an associated log and the server has an associated log . The logs and store information about the sub requests R and R respectively along with at least the request ID. Hence in the system the request ID for the request can be used to identify all log information associated with the request .

The system includes one or more distributed computation storage DCS components and . In the example of the DCS components and can communicate with each other as indicated by a connecting line as well as with various logs e.g. and . Hence the DCS components and can collect log information D about requests such as the request .

A looped arrow associated with an analysis process analyzes the collected log information E . The analysis may rely on a model an optimization technique and one or more other types of information to make decisions as to location and migration of resources in the data center . The analysis may be performed in a distributed manner by the DCS components which ultimately generate a decision that can be communicated to a locating service component for example to update the locating service F with new optimized location information for resources associated with the request or other requests . In turn the locating service can optionally call for migration of resources in the data center to another data center. Depending on acceptance of such a migration call by the other data center the locating service may then perform a migration process that migrates one or more pieces of data objects code etc. to the other data center. As mentioned such a process can help to increase data center performance and decrease access time to the migrated resource and enhance experience for one or more users that make requests that involve the migrated resource or resources.

Migration or location decisions may consider any of a variety of factors. For example factors such as latency between user and one or more data centers available capacity in one or more data centers e.g. available CPUs available memory available disk storage space available bandwidth within a data center network available bandwidth between a data center and one or more external locations state that is shared across multiple entities external to a data center e.g. data center housed applications business factors legal constraints e.g. Canadian banking data must be stored in Canada etc. Also a migration decision for a hard state may be different than for a soft state. For example with a hard state only a most frequently used portion of the hard state may be migrated or it may be replicated instead of moved or just the primary replica may be moved. Hence decisions as to when and where to migrate a piece of state between data centers can depend on multiple factors. In general a decision can depend on factors that may be flexible and testable to achieve efficiencies e.g. better configurations while complying with inflexible and untestable constraints that should not be violated.

As explained in more detail below with respect to a data center with respect to migratable resources may be considered as being in a configuration e.g. a pre migration configuration where one or more migrations e.g. in and or out causes the data center to attain a different configuration e.g. a post migration configuration .

As described herein an exemplary system can include a front end component e.g. front end component to receive requests for resources in a data center and configured to associate each request with identifying information to locate one or more resources for each request and to store in a log file the identifying information and information about the location of the one or more resources one or more distributed computation storage components e.g. DCS components to acquire log file information and configured to analyze log information to decide if one or more resources associated with one or more requests should be migrated to a data center in a different geographical location and a locating service component e.g. locating service component to receive decisions made by the one or more distributed computation storage components and configured to inform the front end component when a decision causes one or more resources to be migrated to a data center in a different geographical location to thereby allow the front end component to re direct future requests for the one or more migrated resources to the data center in the different geographical location.

As described herein in such a system one or more resources are migratable resources capable of being migrated via a network e.g. the Internet or other network or networks from one data center to another data center. In such a system the log information may include an IP address that geographically locates an issuer of a request and or IP addresses that geographically locate issuers of requests for at least one common resource. Depending on the type of resource and manner of requesting e.g. identification process authentication process etc. other types of information may be available to geographically locate an issuer of a request. As described in more detail below the one or more distributed computation and storage components may analyze log information with respect to a model that allows for migration decisions that help to avoid local minima configurations e.g. to seek a global minimum . While various examples describe particular types of log information a migration decision may be based wholly or in part on any of a variety of information e.g. frequency of user requests server availability server capacity network path quality application performance requirements etc. .

As mentioned a decision process can rely on any of a variety of information. In various examples such information may be acquired from a log file or log files e.g. log information . More generally a decision process may rely on communications where a communication by itself is information or where a communication includes information. Communications may be indirect direct or other types of communications related to or relevant to a configuration and whether a better configuration may be possible by migrating one or more resources. For example a decision process may rely on direct real time communication with a component of an optimization system. Whether a communication merely acts as a signal or actually provides an information payload can depend on specifics of an optimization algorithm particularly goals to be achieved e.g. optimize data center optimize user experience optimize current workload issues optimize future workload issues etc. .

With respect to identifying information the example of mentions a request ID which may be assigned by a component of a data center. However as described herein alternatively or additionally one or more other types of information may be used. For example a timestamp and IP address of a requester may be sufficient for purposes of optimizing a data center configuration or data center configurations. In general any of a variety of pieces of information may be associated to sufficiently identify a request for purposes of data collection and analysis. Various exemplary techniques described herein can rely on unique identifiers for requests e.g. unique request IDs and or rely on information sufficient to identify a request for purposes of deciding whether to migrate a resource. More general scenarios also exist where patterns of data access from different geographic locations may be collected and analyzed to decide whether to migrate one or more resources from one data center to another or others . As described below resource migration changes the configuration of one or more data centers. In some instances geo hosting of a resource may be optimal whereas in other instances hosting by a single data center in a particular location may be optimal.

In the example of however a sub optimal situation e.g. configuration arises for user A when she accesses her mailbox using her mobile computer . For example due to company policy a VPN network is established that routes all requests for email via a corporate headquarters which is located in Seattle A . In turn a system at the Seattle HQ routes the request to a near by data center in Redmond B . This approach makes sense because the people located at the Seattle HQ want low latency access to email. However when user A s request arrives at a front end component of the Redmond data center it determines that the requested resource i.e. user A s mailbox is located in the San Francisco data center . Consequently the Redmond data center is burdened with this determination and the task of sending the request to the San Francisco data center C . If during some period of time user A predominantly accesses her mailbox using her mobile computer the performance of accessing her mailbox using her mobile computer may be deemed more important than accessing her mailbox using her desktop computer.

According to the method in an acquisition phase a DCS component acquires information from the San Francisco data center and a DCS component acquires information from the Redmond data center . In this example and other examples acquisition may be via a push model where log files are pushed to one or more DCS components e.g. periodically in response to an event upon filling a buffer etc. . The DCS components and coordinate action and in an analysis phase analyze the acquired information according to an analysis module . As indicated the analysis phase makes a decision to move the mailbox from the San Francisco data center to the Redmond data center . In a migration phase a locating service migrates the mailbox according to the decision of the analysis phase to generate a post move configuration .

After migration the overall burden on the San Francisco data center is reduced. Further user A should experience a decrease in latency when accessing her mailbox from her mobile computer . In other words the post move configuration is more optimal than the pre move configuration for goals of reducing load at data center and or enhancing user experience for the user A when accessing her mailbox from her mobile computer .

In the example of the analysis module may make a migration decision based on any of a variety of factors such as IP address of request multiple burdens i.e. a single request burdens two data centers time of day of a request number of requests etc. In this example any of these factors alone may lead to a decision to migrate user A s mailbox . When such factors are combined then the confidence of moving to a more efficient configuration increases. As described herein migration decisions may rely on multiple factors to increase decision confidence or in other words the probability that a migration decision will lead to a more optimal configuration.

While the example of mention number of times a resource is requested and a location associated with each request other information may be available to make decisions. For example data centers that host applications that allow for advertising often expose a variety of statistics to help the advertisers target advertisements. Such statistics sometimes referred to as targets can include age agent client connection speed gender occupation state province time zone country region and user language.

A particular data center hosted email service known as HOTMAIL Microsoft Corporation Redmond Wa. provides email services for users in more than 200 countries and territories. The WINDOWS LIVE HOTMAIL service offers consumer and ad features to reach an email audience of over 20 million unique users in the United States an audience with billions of page views . As described herein migration and advertising may operate in a synergistic manner for example by making decisions on the same underlying information. An exemplary method can make a migration decision and an advertising decision for a migratable resource based on any of a variety of statistics.

The example of shows an email service with data stored in a San Francisco Ca. data center a Tukwila Wa. data center and a Blue Ridge Va. data center . A user A has a computer with an email application that sends requests from a Tukwila IP address and a user B has a computer with an email application that sends requests from a Blue Ridge IP address. For any of a variety of reasons the current state locates a mailbox for user A and a mailbox for user B at the San Francisco data center . Such a situation may be due to prior residences of user A and user B e.g. signed up for email service while in college in San Francisco .

According to the method an acquisition block acquires data e.g. information associated with requests from user A and user B for mailboxes and respectively. An analysis block analyzes the acquired data. A decision block decides whether migration should occur for one or both mailboxes. The analysis block may consider factors associated with user A and user B mailboxes and . For example if the email accounts pertain to employee accounts of a corporate employer and a certain percentage number size etc. of email originates from a corporate campus having a large number of employees e.g. corporate headquarters then the analysis block may consider this fact and decide not to migrate such mailboxes. In another example regardless of employer or association if user A and user B have a certain percentage of cross mail e.g. mailing each other then an algorithm may rely on this fact in deciding not to migrate both mailboxes and .

As shown if the decision block decides to migrate one or both boxes then the method enters a migration block that calls for mailbox migration. Actual migration may occur automatically or may require oversight or acceptance by a manager e.g. a data center manager or managers .

In the example of the exemplary technique relies on aspects of simulated annealing SA . Annealing is a physical process often applied to metals that reconfigures molecules e.g. bonds phases position to induce ductility relieve internal stresses refine the structure and improve cold working properties. By analogy to this physical process each iteration of an SA algorithm replaces a current configuration with a random nearby configuration chosen with a probability that depends on the difference between corresponding function values and on a global parameter T called the temperature that is gradually decreased during the process. The dependency is such that the current configuration changes almost randomly when T is large but increasingly downhill i.e. to lower energy configurations as T goes to zero. The allowance for uphill moves i.e. to higher energy configurations helps to avoid local minima.

An optimization technique may include aspects analogous to Brownian motion where the mean kinetic energy is proportional to a controlled or scheduled temperature parameter. In a Brownian motion technique medium viscosity and particle size can be accounted for analogously. For example medium viscosity may be modeled by network bandwidth surrounding a data center where a data center in a heavily networked high traffic region has a higher viscosity which requires a higher resource kinetic energy for a resource to migrate to or away from that data center. Further a viscosity may be less for moving to a data center and higher for moving away from a data center or vice versa. With respect to particle size factors such as size of a file object folder etc. may be used to determine a particle size parameter. As described herein viscosity and size parameters may be analogous to the Brownian motion parameter for particle mobility B which is inversely proportion to a medium s viscosity and the size of a particle i.e. higher viscosity and larger size make a particle less mobile . Other analogies may be drawn to diffusion where an analysis module accounts for resource concentration and diffusion coefficients which may differ for types of resources data centers geography etc. The foregoing techniques are all temperature dependent and allow for occasional bad migrations migrations that are not locally optimal to avoid local minima. As described herein an exemplary approach whether temperature dependent or not may allow for sub optimal migration decisions to avoid local minima states that in turn facilitate migration towards an optimal global minimum state.

Referring again to the exemplary technique of a definition block defines a search space while another definition block defines an energy function E . In a temperature type of approach an optimization block performs an optimization by varying state and determining energy until the temperature T reaches some value e.g. T 0 . While this example mentions T going to zero and hence infers an end to the optimization in practice the process may be repeated and the temperature cycled e.g. periodically or continuously . In other words optimization may occur on demand in response to some event periodically continuously etc. In addition a system i.e. cloud may be expected to have natural perturbations due to changes in services new users etc. Hence an optimal state is likely to remain optimal for only some period of time.

As indicated by the exemplary method in an acquisition phase the DCS components to acquire data such as the log data of users A and B and optionally data such as log data of other users which may also make requests for the group object s . In an analysis phase an analysis module e.g. operating in a distributed manner in conjunction with the DCS components analyzes the acquired data optionally with other information such as geographic information about data centers load information about data centers and or network infrastructure etc. The analysis phase makes one or more decisions that may be then directed to a locating service in a migration phase . As mentioned a locating service may inform various data centers of locations and may also request and perform migrations between data centers.

As indicated by the exemplary method in an acquisition phase the DCS components to acquire data such as the log data of user A associated with the application App and the application App . In an analysis phase an analysis module e.g. operating in a distributed manner in conjunction with the DCS components analyzes the acquired data optionally with other information such as geographic information about data centers load information about data centers and or network infrastructure etc. The analysis phase makes one or more decisions that may be then directed to a locating service in a migration phase . As mentioned a locating service may inform various data centers of locations of data objects and may also request and perform migrations of data objects between data centers.

As described herein an exemplary method e.g. implemented at least in part by a computing device can include acquiring log information from a front end component of a data center and from one or more servers in the data center where the log information includes information associated with a request for a resource in the data center e.g. a request ID etc. analyzing the log information with respect to a model to determine whether the resource in the data center should be migrated to a data center in a different geographical location and if the analyzing decides that the resource should be migrated then calling for migration of the resource to the data center in the different geographical location. Such a method may further include migrating the resource to the data center in the different geographical location. Such a method may be implemented at least in part in the form of one or more computer readable media that include computer executable instructions to perform various functions.

As mentioned a model may allow for migration decisions that help to avoid local minima configurations see e.g. simulated annealing and temperature . In the aforementioned exemplary method the log information can include an IP address associated with an issuer of the request a time associated with issuance of the request or receipt of the request by the data center and or a time associated with issuance of the request and a time associated with receipt of the request by the data center. As mentioned log information may include log information for multiple requests for a group resource a resource accessed by multiple users or clients in a data center the multiple requests issued by multiple issuers. Additionally or alternatively log information may include log information for multiple requests for a resource in a data center the multiple requests associated with a common IP address. Log information may include any of a variety of other information that may allow for identification of a user locating a user or otherwise associating a user with one or more resources. For example log information may be application specific information e.g. user ID user profile geographic location email address etc. .

With respect to resources a resource may be an email application mailbox associated with an issuer of a request a file associated with an issuer of a request a group resource etc. In various examples a resource may be a persistent state such as a hard state or a soft state stored in memory. As mentioned in general a resource can be migrated from one data center to another via a network.

The data center information module may acquire information about data center operation such as the types of services hosted the computing power the storage capacity the bandwidth cost of operation etc. The geography IP address module may include a table to associate IP addresses with geographical locations and network routes between locations e.g. an Internet map etc. . The cost information module may account for costs at data centers and costs associated with migration of one or more resources from one data center to another data center. The model information module may allow for model updates and changes to parameters such as the aforementioned temperature state space viscosity etc. parameters. The advertiser information module may track advertising revenue placement of advertisements and other ad related information especially where a migration decision may affect positively or negatively advertising opportunities. For example certain migration decisions may lower cost for distribution of advertisements to users. The network load information module may be coupled to a global traffic monitor to thereby account for traffic patterns especially with respect to time and geography. The alert module may be configured to receive alerts from emergency services e.g. earthquakes power outages network malfunctions etc. and thereby affect how migration decisions are performed. For example an alert may cause a shut down of an analysis and implementation of an emergency plan. In such a manner a model may be buffered from emergency actions which could otherwise taint a model e.g. affect its parameters . The API s may allow data centers operators to make calls to the control module . Such calls may act to update data center information and or to change one or more model parameters. For example if a particular data center is experiencing congestion then it may make an API call to the control module to change its viscosity parameter e.g. a change to make it easier to migrate resources away from the data center or to cause a halt to all migrations for that data center which ever may be suitable given the congestion . Further if a data center is performing an upgrade to a service or has scheduled an upgrade then the data center may inform the control module using an API call via the API s module .

As described herein an exemplary controller includes a data center information module for acquiring information from geographically disparate data centers that host resources for a common service a geographical and IP address information module for associating IP addresses for service requests to geographical locations and a model information module for maintaining a model to make decisions as to whether one or more of the hosted resources for the common service should be migrated via the Internet from one of the geographically disparate data centers to another based at least in part on geographical locations of service requests for the one or more of the hosted resources.

In a very basic configuration computing device typically includes at least one processing unit and system memory . Depending on the exact configuration and type of computing device system memory may be volatile such as RAM non volatile such as ROM flash memory etc. or some combination of the two. System memory typically includes an operating system one or more program modules and may include program data . The operating system include a component based framework that supports components including properties and events objects inheritance polymorphism reflection and provides an object oriented component based application programming interface API such as that of the .NET Framework manufactured by Microsoft Corporation Redmond Wash. The device is of a very basic configuration demarcated by a dashed line . Again a terminal may have fewer components but will interact with a computing device that may have such a basic configuration.

Computing device may have additional features or functionality. For example computing device may also include additional data storage devices removable and or non removable such as for example magnetic disks optical disks or tape. Such additional storage is illustrated in by removable storage and non removable storage . Computer storage media may include volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. System memory removable storage and non removable storage are all examples of computer storage media. Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by computing device . Any such computer storage media may be part of device . Computing device may also have input device s such as keyboard mouse pen voice input device touch input device etc. Output device s such as a display speakers printer etc. may also be included. These devices are well known in the art and need not be discussed at length here.

Computing device may also contain communication connections that allow the device to communicate with other computing devices such as over a network. Communication connections are one example of communication media. Communication media may typically be embodied by computer readable instructions data structures program modules etc. Communication may occur via wire e.g. a wired network a direct wired connection etc. or wirelessly e.g. acoustic RF infrared and other wireless transmission .

Although the subject matter has been described in language specific to structural features and or methodological acts it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather the specific features and acts described above are disclosed as example forms of implementing the claims.

