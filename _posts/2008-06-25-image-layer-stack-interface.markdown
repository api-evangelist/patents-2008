---

title: Image layer stack interface
abstract: In an example embodiment, a system and method is illustrated that includes receiving a layering instruction that includes an image, the image including a layer. Further, the system and method includes generating a sub layer through filtering the layer, the sub layer including a property of the layer. Additionally, the system and method includes editing the property to create an edit, the edit including a change to the property of the layer. Also the system and method includes storing the edit into the sub layer as an edit associated with the sub layer. A system and method is also shown to receive a layered image that includes an image layer stack, the image layer stack including an image with a layer and a sub layer, and an edit associated with the sub layer. The system and method also includes displaying the layered image in a display area.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08731319&OS=08731319&RS=08731319
owner: Adobe Systems Incorporated
number: 08731319
owner_city: San Jose
owner_country: US
publication_date: 20080625
---
A portion of the disclosure of this document includes material that is subject to copyright protection. The copyright owner has no objection to the facsimile reproduction by anyone of the patent document or the patent disclosure as it appears in the Patent and Trademark Office patent files or records but otherwise reserves all copyright rights whatsoever. The following notice applies to the software data and or screenshots that may be illustrated below and in the drawings that form a part of this document Copyright 2008 Adobe Systems Incorporated. All Rights Reserved.

The present application relates generally to the technical field of algorithms and programming and in one specific example the manipulation of images.

Image editing may allow for the manipulation of a plurality of images by a stand alone application that does not require network connectivity to execute. The color and dimensions of an image may be manipulated using an image editing application. An image editing application may allow for additional textures to be added to an image.

In the following description for purposes of explanation numerous specific details are set forth in order to provide a thorough understanding of an example embodiment of the present invention. It may be evident however to one skilled in the art that the present invention will be practiced without these specific details.

In some example embodiments a system and method is illustrated for generating an image layer stack that includes layers and sub layers of layers generated from an image that are organized as a stack. In some example cases the image layer stack may include layers or sub layers from a plurality of images. An image layer stack may be a stack of displayed images that are layered. The image layer stack includes a layer and at least one additional sub layer or layer. A layer is generated from an image and includes layer data representing pixel values and characteristics associated therewith. A sub layer is generated from a layer and includes pixel values and characteristics associated therewith. Further the layers and sub layers that make up this image layer stack may have portions of each image in the stack filtered so other portions of other layers and sub layers in the stack may be displayed. Moreover the layers and sub layers may be toggled between each other such that a particular layer may be brought to the foreground in an image layer stack as displayed. Additionally edits made to the layer and sub layer may be stored into the image layer stack as an edit history. Edit history may include the change addition or removal of properties associated with the layers and sub layers over time. Properties may include pixel values color codes values or other suitable values associated with a layer. Images may be digital photos formatted using a Joint Photographic Experts Group JPEG format Graphics Interchange Format GIF Tagged Image File Format TIFF Portable Network Graphics PNG or some other suitable file format.

In some example embodiments the system and method are shown for generating manipulating and displaying an image layer stack using computers organized in a client server arrangement. A client computer may have a web browser or other suitable Hyper Text Markup Language HTML eXtensible Markup Language XML interpreter and associated client engine. The client engine may be FLASH Asynchronous JavaScript and XML AJAX ACTIVE X or Java engine. This client may be referenced herein as a plug in. Any one of a number of devices may act as a client computer. A server computer as referenced herein may be an application server web server or some combination of an application server and a web server. An image editing server or social networking server may be a server computer. An image editing server may be a server that allows for a client computer to manipulate and display an image layer stack and the layers and sub layers included therein. A social networking server may be a server that executes software to build online social networks for communities of people e.g. natural persons or legal entities such as corporations who share interests and activities or who are interested in exploring the interests and activities of others.

In some example embodiments the system and method are shown for generating manipulating and displaying an image layer stack that includes the image editing server generating the image layer stack and filtering portions of the image layer stack e.g. sub layers . Filter or filtering may include blocking certain pixel values in an image to allow properties such as pixel values from other images in the image layer stack to be displayed.

In some example embodiments the system and method may include the client computer receiving a layer and a sub layer. The layer may be composed of a plurality of sub layers stacked onto one another. The client computer may receive input denoting a position identification value for the layer and each of the sub layers. The position identification value denotes a layering priority for each sub layer within the image layer stack. The position identification value may be an integer alpha numeric string or some other suitable value giving a priority to one layer or sub layer relative to another layer or sub layer. The client computer may receive input to filter all or a portion of a layer or sub layer. Through filtering an image of the image layer stack may be able to be displayed in a GUI.

In some example embodiments the system and method are shown for generating manipulating and displaying the image layer stack that includes the posting of the image layer stack on a social networking web page for a particular user. A social network server may provide the functionality to request and to manipulate the image layer stack. This functionality may be accessed by the client computer such that the social networking server may act as an intermediary see below figures between the client computer and the image editing server.

This layering instruction is transmitted across a network to be received by an image editing server . An image layer stack database is operatively connected to the image editing server . This image layer stack database may include layers and sub layers of images reflecting an edit history for the images. This image editing server is operatively connected to an image server . Operatively connected includes a logical or physical connection. Further this logical or physical connection may exist over a Local Area Network LAN a Wide Area Network WAN the internet or some other suitable network associated topology. The image editing server generates and transmits an image request to be received by the image server . The image server is operatively connected to a digital content database . This digital content database may natively reside upon the image server or may be controlled by some type of intermediate device such as a database server not shown . The image server retrieves image data and transmits it to the image editing server . The image editing server generates a layered image from the image data . The layered image may include a layer and sub layer organized as an image layer stack wherein the structure of the image layer stack e.g. which layer or sub layer is at the top of the stack or has some other position within the stack is dictated by the position identification value of each layer and sub layer. In some example embodiments the image layer stack and layers and sub layers included therein may include edits made to the layer or sub layer such that the image layer stack reflects an edit history for an image. This layered image is transmitted across the network to be received by the one or more devices . The layered image is displayed within the GUI for viewing by the user .

An operation is executed that transmits the image data . An operation is executed that receives image data in the form of image data . An operation is executed that parses the image data to generate sub layers and edits these sub layers. These layer and sub layers may be organized in an image layer stack according to the position identification values included within the layering instructions . An operation is executed that transmits a layered image in the form of layered image to be received through the execution of operation . In some example embodiments operation facilitates toggling. Operation is executed to store the layered image into the image layer stack database as an edit history. An operation when executed displays a layered image. This display of the layered image may take place in the GUI the GUI or more generally as a part of a web page served up by the social networking server .

In some example embodiments an operation is executed that establishes a session with the social networking server. This session may be in the form of a TCP IP session a login session or some other suitable session. This session is established between the one or more devices and the social networking server . A selection input is generated through the use of some type of input device and is received through the execution of operation . The selection input may include the data described for the selection input plus a network handle for the social networking user such as user . A network handle may include an alpha numeric identifier for the user by which the user is referenced by the social networking server and associated social network . An operation is executed that generates and transmits selected layer and a sub layer . The selected layer and sub layer is received through the execution of operation . An operation is executed that transmits the layer and sub layer as a client layering instruction to be received through the execution of operation . An operation is executed that receives the layered image that includes the layered layer and sub layers. An operation is executed that stores a layered and sub layer for display within a database . An operation is executed that serves the layer and sub layer as an image for posting on a website. This operation is executed in part through the execution of operation that generates and transmits a user page request. The layer with the posted layered image is displayed within a display that exists within or is a part of the GUI or GUI .

Some embodiments includes the various databases e.g. digital content database and image layer stack database being relational databases or in some cases On Line Analytic Processing OLAP based databases. In the case of relational databases various tables of data are created and data is inserted into and or selected from these tables using SQL or some other database query language known in the art. In the case of OLAP databases one or more multi dimensional cubes or hyper cubes including multidimensional data from which data is selected from or inserted into using a Multidimensional Expression MDX language may be implemented. In the case of a database using tables and SQL a database application such as MYSQL MICROSOFT SQL SERVER ORACLE 8I 10G or some other suitable database application may be used to manage the data. In this the case of a database using cubes and MDX a database using Multidimensional On Line Analytic Processing MOLAP Relational On Line Analytic Processing ROLAP Hybrid Online Analytic Processing HOLAP or some other suitable database application may be used to manage the data. The tables or cubes made up of tables in the case of ROLAP are organized into an RDS or Object Relational Data Schema ORDS as is known in the art. These schemas may be normalized using certain normalization algorithms so as to avoid abnormalities such as non additive joins and other problems. Additionally these normalization algorithms include Boyce Codd Normal Form or some other normalization or optimization algorithm known in the art.

Some example embodiments include the above illustrated operations being written as one or more software components. These components and the functionality associated with each may be used by client server or peer computer systems. These various components can be implemented into the system on an as needed basis. These components may be written in an object oriented computer language such that a component oriented or object oriented programming technique can be implemented using a Visual Component Library VCL Component Library for Cross Platform CLX Java Beans JB Enterprise Java Beans EJB Component Object Model COM or Distributed Component Object Model DCOM or other suitable technique. These components are linked to other components via various Application Programming Interfaces APIs and then compiled into one complete server and or client application. The method for using components in the building of client and server applications is well known in the art. Further these components may be linked together via various distributed programming protocols as distributed computing components.

Some example embodiments include remote procedure calls being used to implement one or more of the above illustrated components across a distributed programming environment. For example a logic level may reside on a first computer system that is located remotely from a second computer system including an interface level e.g. a GUI . These first and second computer systems can be configured in a server client peer to peer or some other configuration. The various levels can be written using the above illustrated component design principles and can be written in the same programming language or in different programming languages. Various protocols may be implemented to enable these various levels and the components included therein to communicate regardless of the programming language used to write these components. For example an operation written in C using Common Object Request Broker Architecture CORBA or Simple Object Access Protocol SOAP can communicate with another remote module written in JAVA . Suitable protocols include SOAP CORBA and other protocols well known in the art.

Some embodiments may utilize the Open Systems Interconnection Basic Reference OSI model or TCP IP protocol stack model for defining the protocols used by a network to transmit data. For example operations and may use these protocols. In applying these models a system of data transmission between a server and client or between peer computer systems is illustrated as a series of roughly five layers comprising an application layer a transport layer a network layer a data link layer and a physical layer. In the case of software having a three tier architecture the various tiers e.g. the interface logic and storage tiers reside on the application layer of the TCP IP protocol stack. In an example implementation using the TCP IP protocol stack model data from an application residing at the application layer is loaded into the data load field of a TCP segment residing at the transport layer. This TCP segment also includes port information for a recipient software application residing remotely. This TCP segment is loaded into the data load field of an IP datagram residing at the network layer. Next this IP datagram is loaded into a frame residing at the data link layer. This frame is then encoded at the physical layer and the data transmitted over a network such as an internet LAN WAN or some other suitable network. In some cases internet refers to a network of networks. These networks may use a variety of protocols for the exchange of data including the aforementioned TCP IP or some other suitable protocol. These networks may be organized within a variety of topologies e.g. a star topology or structures.

The example computer system includes a processor e.g. a CPU a Graphics Processing Unit GPU or both a main memory and a static memory which communicate with each other via a bus . The computer system may further include a video display unit e.g. a Liquid Crystal Display LCD or a Cathode Ray Tube CRT . The computer system also includes an alpha numeric input device e.g. a keyboard a UI cursor controller e.g. a mouse a drive unit a signal generation device e.g. a speaker and a network interface device e.g. a transmitter .

The disk drive unit includes a machine readable medium on which is stored one or more sets of instructions and data structures e.g. software embodying or used by any one or more of the methodologies or functions illustrated herein. The software instructions may also reside completely or at least partially within the main memory and or within the processor during execution thereof by the computer system the main memory and the processor also constituting machine readable media.

The instructions may further be transmitted or received over a network via the network interface device using any one of a number of well known transfer protocols e.g. HTTP or Secure Hyper Text Transfer Protocol HTTPS .

The term machine readable medium should be taken to include a single medium or multiple media e.g. a centralized or distributed database and or associated caches and servers that store the one or more sets of instructions. The term machine readable medium shall also be taken to include any medium that is capable of storing encoding or carrying a set of instructions for execution by the machine and that cause the machine to perform any one or more of the methodologies illustrated herein. The term machine readable medium shall accordingly be taken to include but not be limited to solid state memories optical and magnetic media and carrier wave signals.

In some example embodiments a system and method are illustrated to generate an image layer stack. This image layer stack may include a layer and a sub layer. A position identification value may be assigned to the layer and one or more sub layers to establish a priority in the image layer stack. Additionally a filter may be applied to filter the sub layer and to reveal the layer. The system and method shown herein may be applied in a web based environment as implemented with a social networking server.

The Abstract of the Disclosure is provided to comply with 37 C.F.R. 1.72 b requiring an abstract that will allow the reader to quickly ascertain the nature of the technical disclosure. It is submitted with the understanding that it will not be used to interpret or limit the scope or meaning of the claims. In addition in the foregoing Detailed Description it can be seen that various features are grouped together in a single embodiment for the purpose of streamlining the disclosure. This method of disclosure is not to be interpreted as reflecting an intention that the claimed embodiments require more features than are expressly recited in each claim. Rather as the following claims reflect inventive subject matter lies in less than all features of a single disclosed embodiment. Thus the following claims are hereby incorporated into the Detailed Description with each claim standing on its own as a separate embodiment.

