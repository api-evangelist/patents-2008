---

title: Data center programming and application distribution interface
abstract: An exemplary data center interface for distributing and monitoring Web applications includes a specification that specifies a call statement to distribute one or more components of a Web application to one or more data centers and a call statement to report metrics associated with performance of the Web application. An exemplary data center interface for associating advertisements with distributed Web applications includes a specification that specifies a call statement and one or more call statement parameters to associate an advertisement with one or more distributed Web applications based on at least one criterion. Various other devices, systems and methods are also described.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08650530&OS=08650530&RS=08650530
owner: Microsoft Corporation
number: 08650530
owner_city: Redmond
owner_country: US
publication_date: 20080604
---
Large scale data centers are a relatively new human artifact and their organization and structure has evolved rapidly as the commercial opportunities they provide has expanded. Typical modern data centers are organized collections of clusters of hardware running collections of standard software packages such as web servers database servers etc. interconnected by high speed networking routers and firewalls. The task of organizing these machines optimizing their configuration debugging errors in their configuration and installing and uninstalling software on the constituent machines is largely left to human operators.

Web services e.g. software as a service SaaS supported by data centers are also rapidly evolving for example a company might first offer a search service and then an email service and then a Map service etc. . Many services are designed as distributed applications characterized by components that run on different machines typically in communication via a network such as the Internet. For example a shift towards interactive Web 2.0 applications has led to development of truly distributed systems where code is written in different languages runs on multiple machines and interacts in complex ways. Today many such applications are written in an ad hoc manner where the server and client side functionality are developed at the same time but separately and often in different programming languages and subsequently combined. Distribution of multi tier components can be complex and require significant resources to ensure proper operation not to mention collection of information as to how an application performs the number of users and other metrics that can impact overall cost e.g. number of servers bandwidth number of I Os advertising revenue etc. .

Various exemplary technologies described herein pertain to architectures and programming models that can facilitate access to a cloud of data centers users and other entities.

An exemplary data center interface for distributing and monitoring Web applications includes a specification that specifies a call statement to distribute one or more components of a Web application to one or more data centers and a call statement to report metrics associated with performance of the Web application. An exemplary data center interface for associating advertisements with distributed Web applications includes a specification that specifies a call statement and one or more call statement parameters to associate an advertisement with one or more distributed Web applications based on at least one criterion. Various other devices systems and methods are also described.

An exemplary data center programming and application distribution interface can receive code for a Web application and manage distribution of the code to one or more data centers. Such an interface can also track information such as performance usage etc. and optionally advertising and associated revenue. In various examples a data center programming and application distribution interface includes APIs that facilitate development of Web applications and launching Web applications in the cloud . For example a developer can write an application and package the application with API calls that allow a data center interface to automatically distribute the application to one or more data centers. In such an architecture the developer develops for the cloud and does not necessarily need to know data center specifics.

In the conventional method a specification for an application is provided . In a coding block a developer codes the application according to the specification for example using an object oriented programming language OOPL . In a compilation block the developer compiles the code for one or more targeted operating systems for example the operating system for the server and or an operating system for a client side machine. In a set up block the developer cooperates with a data center operator to set up the application in the data center . The interaction between the developer and the data center operator can include negotiations as to cost advertising modifications to code etc. These factors can slow the launch of an application and thus represent to some extent a barrier to entering the cloud i.e. making an application available to the more that a billion Internet users.

The method takes a different approach that can reduce the barrier to entry. In the method a specification for an application is provided . In a coding block the developer codes the application according to a specification for the data center P AD interface . Next the developer submits the code to the data center P AD interface . The operator manages the interface which may be installed at a particular data center or data centers or at a central location in communication with one or more data centers. The data center interface can optionally act automatically to consume the code and launch the application in one or more data centers. As the developer knows a priori capabilities of the data center P AD interface there may be no need for negotiations once the code is submitted to the interface . Consequently the application can be launched immediately assuming resources are available.

In the example of the specification module includes information as to programming languages API calls etc. For example an API call Distribute can cause the distribution module to distribute an application an API call Advert can cause the advertising module to link advertisers to an application an API call SourceLoad can provide for loading one or more files e.g. allied applications required for support and an API call MetricsReport can cause the metrics module to report various metrics to a particular address email etc. on a regular and or event driven basis.

As described herein a data center interface for distributing Web applications includes a specification that specifies a call statement to distribute one or more components of a Web application to one or more data centers and a call statement to report metrics associated with performance of the Web application. Such a data center P AD interface specification optionally specifies a call statement to associate advertising with the Web application. In such a data center P AD interface the call statement to distribute optionally includes one or more geographical parameters to specify geography of a data center.

In the example of the code includes various components. Specifically the code includes one or more application components and one or more data center P AD interface components . The application components include server component s and client component s . As indicated the developer or other responsible entity submits the code to the data center interface which may be considered as residing within the cloud . In particular the architecture of allows the developer to develop code for the cloud and to launch an application in the cloud by transmitting the code to the data center interface . The code includes API calls for the data center P AD interface and may include compiled code and or code written in a programming language. As described herein the API calls allow the data center P AD interface to launch an application in the cloud .

As already described the data center P AD interface distributes components as appropriate to various tiers such as a server tier and a client tier. With respect to such distribution in the example of a data center receives application server component s and users and receive application client component s where the user generates content and where user consumes the content along with an advertisement as provided by an advertiser .

As explained in the data center P AD interface includes the metrics module the advertising module and the billing revenue module . The metrics module tracks metrics such as how many times the content has been consumed by a user how many times an advertisement accompanied the content how many times a user clicked on an advertisement to visit a Web site etc. Such metrics can be shared with the developer and the advertiser in a manner that facilitates an exchange of revenue between the advertiser and the developer . Options may also exist in the data center P AD interface to share information and or revenue with a content provider e.g. the user .

In the example of advertisers may compete for content association. For example where the metric module indicates that particular content is hot i.e. in demand by many users then advertisers may request that advertisements accompany this content. The advertising module of the data center P AD interface may include features that allow advertisers to bid on content association for example where geographic user content hit rate hit history etc. are provided by the metrics module . An advertiser may optionally access such features via one or more API calls to the data center P AD interface . In another example the advertiser may call the advertising module to set one or more parameters that correspond to one or more advertising mechanisms. In this example consider a user interface provided by the data center P AD interface that displays a check box that allows the advertiser to request ad rotation in applications that have a particular user growth and adoption rate e.g. at or above X . In yet another example the advertiser may set a parameter of the module to request ad rotation in application meeting one or more criteria. In this example consider an advertiser of athletic shoes where the advertiser can set a parameter that associates the ad with applications that are related to sports e.g. fantasy sports video sports gamming etc. .

An exemplary data center interface can include an advertising module that allows entities to associate content with applications e.g. distributed applications . Such an interface may be used by entities such as advertisers developers application managers data center operators etc. Relationships may exist between such entities to coordinate distribution of applications and advertisements for association with such applications. Such relationships may have pre arranged revenue models or rely on one or more revenue models provided by the data center interface.

As described herein an exemplary data center interface for associating advertisements with distributed Web applications can include a specification that specifies a call statement to associate an advertisement with one or more distributed Web applications and that specifies one or more call statement parameters to associate the advertisement with the one or more distributed Web applications based on at least one criterion selected from a group of criteria consisting of user growth criteria and application category criteria. For example an advertiser may make a call to such an interface with call statement parameters that seek to associate an advertisement with one or more distributed Web applications that have a user growth rate above a pre determined user growth rate e.g. X and that are sports related e.g. a sports category . Other factors may also be considered such as cost e.g. revenue sharing model geography language etc. of an application.

With respect to the GUI in the example of the GUI includes a metrics field for reporting metrics such as number of hits number of users number of servers running the application a scaling field for information germane to scaling of data center resources to run the application and an advertising revenue field for displaying revenue information such as month by month revenue associated with the application. The information in the GUI may be provided based on instructions provided in the data center P AD interface component the code . For example the developer may desire email or browser based reporting for an application on a daily basis a weekly basis a monthly basis etc. The developer may also request event based reporting for example reporting in response to application errors new content advertising requests resource limitations metric milestones etc.

The GUI further includes a compiler for compiling code where required or desired. As mentioned a developer may submit compiled code uncompiled code and or code that does not require compilation. Compilation may occur at any of a variety of locations. For example a developer may compile code before submitting it to a data center P AD interface or a data center P AD interface may compile code.

A data center P AD interface may include API calls to compile code using a particular compiler. For example a data center P AD interface may include more than one compiler where the developer specifies one or more compilers. Such an approach can lower the barrier to entry even further as a developer does not require a compiler which can facilitate code development on lightweight devices or by those without adequate computing resources.

As described herein a development framework for developing and monitoring Web application includes tools for writing code for a Web application and tools for instructing a data center interface to distribute the Web application to one or more data centers and to collect metrics indicative of performance of the Web application in the one or more data centers. Metrics may include one or more memory usage metrics one or more I O operations metrics one or more server side metrics and or one or more client side metrics. Such a framework optionally includes tools for instructing a data center interface to collect advertising metrics.

In a very basic configuration computing device typically includes at least one processing unit and system memory . Depending on the exact configuration and type of computing device system memory may be volatile such as RAM non volatile such as ROM flash memory etc. or some combination of the two. System memory typically includes an operating system one or more program modules and may include program data . The operating system include a component based framework that supports components including properties and events objects inheritance polymorphism reflection and provides an object oriented component based application programming interface API such as that of the .NET Framework manufactured by Microsoft Corporation Redmond Wash. The device is of a very basic configuration demarcated by a dashed line . Again a terminal may have fewer components but will interact with a computing device that may have such a basic configuration.

Computing device may have additional features or functionality. For example computing device may also include additional data storage devices removable and or non removable such as for example magnetic disks optical disks or tape. Such additional storage is illustrated in by removable storage and non removable storage . Computer storage media may include volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. System memory removable storage and non removable storage are all examples of computer storage media. Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by computing device . Any such computer storage media may be part of device . Computing device may also have input device s such as keyboard mouse pen voice input device touch input device etc. Output device s such as a display speakers printer etc. may also be included. These devices are well know in the art and need not be discussed at length here.

Computing device may also contain communication connections that allow the device to communicate with other computing devices such as over a network. Communication connections are one example of communication media. Communication media may typically be embodied by computer readable instructions data structures program modules etc. Communication may occur via wire e.g. a wired network a direct wired connection etc. or wirelessly e.g. acoustic RF infrared and other wireless transmission .

Although the subject matter has been described in language specific to structural features and or methodological acts it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather the specific features and acts described above are disclosed as example forms of implementing the claims.

