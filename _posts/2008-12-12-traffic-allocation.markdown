---

title: Traffic allocation
abstract: A method may include storing rules associated with processing calls. Each of the rules may include a maximum number of calls per unit of time. The method may also include determining whether the maximum number of calls per unit of time associated with a first one of the rules is greater than a threshold. The method may further include allocating by a first node, when the maximum number of calls per unit of time is greater than the threshold, a number of calls per unit of time to the first node based on the number of calls satisfying the first rule that were received by the first node and a total number of calls satisfying the first rule that were received by all of the nodes.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08363552&OS=08363552&RS=08363552
owner: Verizon Patent and Licensing Inc.
number: 08363552
owner_city: Basking Ridge
owner_country: US
publication_date: 20081212
---
Processing and routing data calls etc. in a network has become increasingly complex due to increased overall traffic. In addition destination locations such as call centers are often overloaded with calls at various times. This may lead to congestion related problems at the destination locations and or congestion related problems in the overall network.

The following detailed description refers to the accompanying drawings. The same reference numbers in different drawings may identify the same or similar elements. Also the following detailed description does not limit the invention.

Implementations described herein relate to processing calls. In an exemplary implementation a call processing node may measure the traffic volume it receives that satisfies a particular rule or criteria over a period of time. The call processing node may communicate with other call processing nodes in a network to determine the overall amount of traffic being processed in the network that satisfies the particular rule or criteria over the period of time. The call processing node may then allocate to itself a share of the maximum amount of traffic for that rule based on the proportion or percentage of the overall traffic it handled for that rule during the measured period of time. The traffic allocation associated with each node may be updated in a dynamic manner as new traffic is processed. In some implementations traffic allocation associated with a low volume rule e.g. a rule with a relatively low number of maximum calls allowed per unit of time may be determined by a centralized device system. The call processing node may limit the number of call requests that it sends to the centralized device based on the maximum number of calls allowed for that rule. The centralized device system may receive requests from a number of call processing nodes and signal the nodes to allow or block the calls.

Each of user devices may include any device or combination of devices capable of transmitting voice signals and or data to a network such as network . In one implementation user devices may include any type of telephone system device such as a plain old telephone system POTS telephone a voice over Internet protocol VoIP telephone e.g. a session initiation protocol SIP telephone a wireless or cellular telephone device e.g. a personal communications system PCS terminal that may combine a cellular radiotelephone with data processing and data communications capabilities a personal digital assistant PDA that can include a radiotelephone or the like etc. In another implementation user devices may include any type of computer system such as a personal computer PC a laptop PDA or the like that can make for example a VoIP call. User devices may connect to network via any conventional technique such as wired wireless or optical connections.

Each of nodes also referred to herein as call processing nodes may represent a network device that is able to process received calls make switching or routing decisions and forward the calls on toward their respective destinations. In some implementations some of nodes may be designed to handle PSTN calls and other ones of nodes may be designed to handle VoIP calls. In other implementations nodes may handle both PSTN calls and VoIP calls. In an exemplary implementation each of nodes may communication with other nodes and network device to balance traffic in network as described in detail below.

Network device may include one or more computing devices such as one or more servers call processing nodes etc. used to receive call related information from other devices in network . For example network device may receive call information from the call processing nodes as described in detail below.

Network may include one or more wired and or wireless networks that are capable of receiving and transmitting data voice and or video signals including multimedia signals that include voice data and video information. For example network may include one or more public switched telephone networks PSTNs or other type of switched network. Network may also include one or more wireless networks and may include a number of transmission towers for receiving wireless signals and forwarding the wireless signals toward the intended destination. Network may further include one or more packet switched networks such as an Internet protocol IP based network a local area network LAN a wide area network WAN a personal area network PAN an intranet the Internet or another type of network that is capable of transmitting data.

The exemplary configuration illustrated in is provided for simplicity. It should be understood that a typical network may include more or fewer devices than illustrated in . For example network may include additional elements such as switches gateways routers etc. that aid in routing traffic such as telephone calls from user devices to their respective destinations in network . In addition in some implementations nodes may be grouped in network platforms. For example in one implementation three networking platforms may be included in network with each platform including seven call processing nodes . Further call processing nodes and network device are shown as separate devices. In other implementations the functions performed by one or more of nodes and network device may be performed by a single device. For example in some implementations the functions described as being performed by network device may be performed by one or more of nodes .

As described briefly above each of nodes may communicate with other nodes and network device to balance traffic in network . For example each of nodes may include a peer to peer daemon and an application programming interface API that allows a node to communicate with other nodes and network device to balance traffic in network . In an exemplary implementation each node may analyze calls that it processes such as an amount of traffic associated with a given call record or rule. A call record may correspond to a rule which indicates that for a given origination originating number and or termination terminating number only N calls per unit of time are permitted and that calls exceeding N calls per unit of time should be blocked or dropped. The origination associated with a call record or rule may include for example a single telephone number a range of telephone numbers telephone numbers associated with a particular area code etc. In addition the origination may include an IP address or range of IP addresses associated with VoIP calls. The termination associated with a call record or rule may include one or more telephone numbers or IP addresses a range of telephone numbers or IP addresses or any other numbers IP addresses associated with a particular destination. For example the termination may correspond to a call center that processes calls for a business or other entity.

Each of nodes may allocate a portion of the allowed calls associated with each call record or rule to balance call traffic. In an exemplary implementation each of nodes communicates with other nodes in network in a peer to peer fashion to share call processing information to balance the overall load associated with a call record or rule across all call processing nodes in network as described in detail below.

Call processing rules database may store rules that apply to processing calls from user devices . For example one call processing rule may indicate that for a given origination only N calls per second CPS are permitted. The origination may correspond to a particular originating number that is using an auto dialer or robodialer to generate an abnormally high number of calls. In other instances the given originating number for a rule may correspond to a range of numbers and or IP addresses telephone numbers from a particular area code etc. Another rule in call processing rules database may indicate that one or more terminating telephone numbers associated with a call center are to receive a maximum of M calls per second. This number M may be based on the desired wait time for the call center. Calls exceeding the maximum number of calls per second are to be blocked.

Call counting logic may include logic that is able to receive and process call related information such as calls received by node as well as call information from each of the other nodes in network . In an exemplary implementation call counting logic may gather or break down the statistics on a per rule per node basis. That is call counting logic may generate call processing data for each rule stored in call processing rules database with respect to each node handling calls that satisfy the particular rule.

Communication logic may include logic that allows node to communication with other nodes and network device . In an exemplary implementation communication logic may include a peer to peer daemon that allows node to communicate with other nodes in a peer to peer fashion. The information received by communication logic may include information identifying calls that have recently been received by each node in network and that satisfy a particular rule. Communication logic may also forward similar information for calls that it receives to other nodes in network . Communication logic may further include a daemon or software that allows node to communicate with network device to request approval for processing calls as described in detail below.

Call allocation logic may include logic that receives data from call counting logic and communication logic e.g. information from other nodes and allocates a share of allowed calls on a per rule basis to node . For example in one implementation the number of calls allocated to each node may be proportional to the number or percentage of calls that each node has received that satisfy a particular rule. Call allocation logic may dynamically reallocate the call traffic for each rule at various intervals as described in detail below.

In an exemplary implementation call counting logic communication logic and call allocation logic may include one or more processors microprocessors or other processing logic used to interpret and execute instructions. In such implementations call counting logic communication logic and call allocation logic may include software instructions stored in a computer readable medium. A computer readable medium may be defined as one or more memory devices. The software instructions may be read into memory from another computer readable medium or from another device via a communication interface. The software instructions contained in memory may cause the various logic components such as call counting logic communication logic and call allocation logic to perform processes that are described below. Alternatively hardwired circuitry may be used in place of or in combination with software instructions to implement processes consistent with the exemplary embodiments. Thus systems and methods described herein are not limited to any specific combination of hardware circuitry and software.

Call counting logic may include or more processors microprocessors or other processing logic that is able to receive and process call related information such as call queries from each of nodes . The information received by call counting logic may include information identifying calls that have recently been received by each node in network that satisfy a particular rule.

Call allocation logic may include one or more processors microprocessors or other processing logic that receives data from call counting logic and determines whether to allow calls or block calls received by nodes in network . In an exemplary implementation call allocation logic may then provide an indication to nodes in network as to whether to allow or block drop calls as described in detail below.

As a node such as node is processing calls call counting logic may identify the number of calls that node is handling that pertain to various rules stored in call processing rules database act . For example call counting logic may gather or identify local traffic information associated with calls that pertain to each particular rule stored in call processing rules database . In an exemplary implementation call counting logic may identify the number of calls handled by node that satisfy each particular rule stored in call processing rules database over a number of intervals of time act . For example in one implementation call counting logic may determine the number of calls processed by node that satisfy or meet the criteria of a particular rule stored in call processing rules database during each of five 200 millisecond ms intervals. Determining the number of calls over short intervals such as 200 ms intervals may improve accuracy with respect to determining the number of calls per unit of time as the relative levels of traffic during a calling event that generates a large number of calls may be statistically stable for very short periods.

Assume that one rule is associated with a call center that wants to accept a maximum of 100 calls per second CPS . In this case call counting logic may access call processing rules database and identify the telephone number or numbers associated with that particular call center. Further assume that the call counting logic determines that the number of calls satisfying the rule associated with the call center during each of the five 200 ms intervals is 20 18 21 22 and 19 respectively. In this case call counting logic determines that 100 calls satisfying the rule were received over the one second sampling period i.e. 100 CPS .

Call counting logic and or call allocation logic may also track traffic for each of the other nodes in network . For example as described above each node may include a peer to peer daemon or software code that enables a node such as node to communicate with other nodes . In one implementation each node may periodically broadcast current counts of calls satisfying each rule stored in call processing rules database to the other nodes in network . In an exemplary implementation each node may broadcast this information every 200 ms. Node may receive this information from the other nodes and determine the number of calls satisfying each rule that are being processed by the other nodes act . In another exemplary implementation node may query the other nodes for this information periodically such as every 200 ms. In each case call counting logic or call allocation logic may then determine the total number of calls that were received by all the other nodes in network that satisfy the particular rule per unit of time such as one second act .

The other nodes may perform similar calculations regarding call traffic. That is each of nodes may share statistical information generated by its respective call counting logic . For example communication logic of node may broadcast call counting information generated by call counting logic in node to each other node in network act . Similarly call counting logic in each of the other nodes in network may send data from its respective call counting logic to the other nodes in network . In this manner call allocation logic in each node will have access to network wide information regarding calls that satisfy each rule that are processed by each node .

Now assume that the rule associated with the particular call center indicates that calls sent to the call center should be limited to 100 CPS. Call allocation logic in each of nodes may then determine a share of the allowed 100 CPS to allocate to its respective node . For example suppose that network includes 10 nodes and that node has received 100 calls over the most recent one second period i.e. five 200 ms intervals . Further assume that each of nodes through received 10 calls satisfying the rule associated with the call center over the most recent one second interval.

In an exemplary implementation call allocation logic may then determine the portion of calls or percentage of calls that node has received that satisfy the rule with respect to all calls in network that satisfy the rule act . In this example call allocation logic determines that node received 100 calls and that the other nine nodes combined received 90 calls that satisfy the rule i.e. 10 calls from each of the nine nodes . Therefore in this example all of the nodes in network received 190 calls that satisfy the rule for the call center in the most recent one second interval. Call allocation logic may then determine that node received approximately 52.6 i.e. 100 190 of the total call volume satisfying the rule.

Call allocation logic may then allocate a share of the total allowed CPS for the call center rule to node for the next interval based on the proportion of calls satisfying the rule that were handled by node during the previous interval act . For example in this case call allocation logic may allocate 52.6 of the total allowed 100 CPS to node . In this example 52.6 of the total calls would be 52.6 CPS. In some implementations call allocation logic may round down this number to 52 to ensure that the total CPS from all nodes does not exceed the allowed amount. In other implementations call allocation logic may round the number to the nearest whole number i.e. 53 in this example . Call allocation logic in each of the other nodes i.e. nodes through may perform a similar calculation for allocating calls to its respective node acts and . In the scenario described above each of nodes through handled approximately 5.26 of the total calls i.e. 10 190 satisfying the rule. Call allocation logic in each of nodes through may then allocate five calls i.e. approximately 5.26 of 100 CPS to its respective node during the subsequent one second interval. In alternative implementations call allocation logic may round up the actual 5.26 value and allocate six calls per second to each of nodes through for the subsequent one second interval. In either case call allocation logic in each of nodes to may control its respective node to accept no more than its allocated number of calls during that particular interval.

In this manner each node is allocated a proportional or prorated share of traffic based on an amount of traffic it handled that satisfied the rule during a previous interval. In some implementations call counting logic may forward the statistical information to the other nodes at each interval during which it obtains measurements e.g. every 200 ms . In other instances call counting logic may forward statistical information to the other nodes at other intervals such as every second.

Processing may continue in this manner at each of nodes . During each interval e.g. every one second or less call allocation included in each node may dynamically provide new allocations for its respective node for each rule. In the manner described above nodes act in a peer to peer manner to distribute traffic in network in a relatively fair manner. That is each node is given a fair chance of forwarding traffic associated with a particular rule based on the number of calls satisfying the rule that were processed by that node during a previous interval of time.

For example assume that a call center associated with taking calls for a reality television show receives 10 CPS from each of 12 nodes handling VoIP calls and 990 CPS from each of nine nodes handling PSTN calls. In this case each of the VoIP nodes is given a fair chance of forwarding calls based on the volume of calls handled during the preceding interval. In this example each of the VoIP nodes will be allocated approximately 0.11 i.e. 10 9030 of the total number of calls for that rule and each of the PSTN nodes will be allocated approximately 11.0 i.e. 990 9030 of the total number of calls for that rule. Therefore VoIP callers will be given the same percentage chance as PSTN callers based on the prorated share of calls satisfying the rule that were handled by each respective node.

In addition network may quickly adapt to a changing number of call processing nodes . For example if ten call processing nodes are processing data and one call processing node fails or is taken offline for routine maintenance each of nodes will adapt to having only nine call processing nodes in network . That is each node may receive no data from the offline node and will allocate traffic based on the percentage of traffic it handles that satisfy the various rules. In such situations the loss of a call processing node may be transparent or not affect the allocation processing at the other network nodes .

As described above each of nodes may perform its own calculations regarding identifying local traffic satisfying various rules to allocate traffic. In this manner the overall computation load associated with allocating traffic in network is handled in a distributed manner. That is each node performs its own computations independently of other network platforms. However each node also shares data with the nodes to allow each node to have overall traffic information in network at any given time.

In some instances a node may not process any calls satisfying a particular rule during a particular interval of time. In such instances that node may be allocated zero calls satisfying the rule for the subsequent interval of time. However in some implementations in situations in which a particular node has received no calls satisfying a particular rule during a particular interval of time that node may be allocated some nominal number of calls for that rule for the subsequent interval as opposed to allocating zero calls to that node .

In addition in some situations the total number of calls that were received during a particular interval of time that satisfied a particular rule may be less that the maximum number of allowed calls for that rule. In some implementations nodes may permit all calls to be forwarded during that interval and or subsequent interval of time regardless of the number of calls allocated for each node during that interval. In such instances nodes may communicate with each other and determine that the total number of received calls associated with a rule is less than the allowed number of calls. Each of nodes may then forward all calls satisfying the rule to their destination during the subsequent interval of time.

In some implementations such as for low volume rules in which the total allowed calls per unit of time is relatively low such as less than 100 CPS the error rate associated with handling calls may be greater than desired. That is the likelihood of not blocking a call that should be blocked or blocking a call that should not be blocked increases as compared to high volume rules. In such instances more precise counting may be used as described in detail below

If however the volume is less than the threshold act yes a centralized counting process may be triggered. For example assume that the threshold for triggering centralized counting is 100 CPS. Further assume that a particular rule stored in call processing rules database is associated with limiting the number of calls from a particular area code to 50 CPS. In this case call allocation logic may determine that the call volume for the area code rule is less than the threshold act yes .

Call allocation logic may then pre process calls that satisfy the particular rule to determine the number of call requests that it can forward to network device act . For example assume that network includes ten nodes that are receiving a combined 1000 CPS that satisfy the rule that has a maximum allowed 50 CPS. Further assume that the total traffic is distributed evenly with each of the ten nodes receiving 100 CPS that satisfy the rule. Call allocation logic may then calculate its share of the total 50 CPS rule in a similar manner as that described above with respect to . In this example call allocation logic will determine that it is allocated 10 i.e. 100 1000 of the total 50 CPS for a value of five CPS. In some implementation call allocation logic may then determine that it can send five call queries to network device . However in an exemplary implementation each node may forward more than five CPS to network device to ensure that the full 50 CPS are actually forwarded.

For example each node may adjust the calculated local traffic it may send i.e. five CPS in this example to network device to ensure that enough calls are sent to network device while also not overloading network device . As an example call allocation logic may add some fixed offset or constant value to the initially calculated value. Continuing with the example above call allocation logic may add for example two additional calls to the originally calculated five CPS value for a total of seven CPS to forward to network device . In some implementations the offset may be based on the number of initially calculated calls such as a percentage of the initially calculated value. In other instances the offset may be fixed based on the initially calculated value. As an example for calculated values of less than ten CPS two additional CPS may be added but for calculated values of 20 CPS five additional CPS may be added.

Continuing with the example above node which received 100 CPS satisfying the rule will forward queries associated with seven CPS to network device and drop 93 calls act . Similarly each other node may drop 93 of the 100 CPS and forward seven CPS to network device act . Therefore in this example network device may receive 70 CPS for the 50 CPS rule.

Call counting logic may receive the call related information from call allocation logic in node . Call counting logic may also receive call related data for this particular rule from call allocation logic in the other nodes in network in a similar manner. Call counting logic may determine the total number of calls currently being processed that satisfy the rule and forward this information to call allocation logic . Call allocation logic may then determine whether to approve the received calls act .

For example in one implementation call allocation logic may allocate calls to nodes on a first come first served basis. That is if a rule has a 50 CPS limit the first 50 calls received by network device during each interval for that rule will be approved by call allocation logic . Call allocation logic may forward the call allocation decision associated with each approved call to the appropriate node act . Call allocation logic may also send a drop or block indication for the call requests that exceed the allowed 50 CPS act .

Call allocation logic in node may receive the call approval non approval indication and process or drop the call based on the received information act . Processing may continue in this manner with network device functioning as a centralized allocation system to distribute calls across nodes in network . In this manner when calls satisfying a particular low volume rule are received node pre processes the calls to limit the number of calls forwarded to network device for approval. This ensures that network device is not overloaded by requests from nodes . Network device may then simply approve or disapprove the calls based on for example a first come first served basis.

As discussed above with respect to in some instances a node may not process any calls satisfying a particular rule during a particular interval of time. In such instances that node may perform pre processing and determine that zero calls associated with the first rule should be forwarded to network device . In this case the offset value ensures that each node will be able to forward some nominal number of calls to network device for that rule.

In addition similar to the discussion above with respect to in some situations the total number of calls that were received during a particular interval of time that satisfied a particular rule may be less that the maximum number of allowed calls for that rule. In some implementations nodes may permit all calls to be forwarded during that interval of time to network device regardless of the number of calls allocated for each node during that interval.

As described above call counting logic may access call processing rules database to identify rules that may apply to various calls. In some instances a call may satisfy the criteria associated with more than one rule. In an exemplary implementation all counting logic may check each rule in call processing rules database with respect to each call to determine whether the call satisfies the rule even if call allocation logic has already determined that the call may be blocked based on a previous rule in call processing rules database . This allows call allocation logic to obtain an accurate count of calls that satisfy the rules in call processing rules database for forwarding to other nodes in network .

Implementations described herein provide for routing calls within a network using distributed processing to allocate the call processing load to each of the call processing nodes. In some instances a centralized processing device system may be used to aid in processing call requests.

The foregoing description of exemplary implementations provides illustration and description but is not intended to be exhaustive or to limit the embodiments to the precise form disclosed. Modifications and variations are possible in light of the above teachings or may be acquired from practice of the embodiments.

For example features have been described above with respect to call allocation for low volume rules being performed by a centralized network device system. In an alternative implementation the centralized network device system may be located at one of nodes .

Further while series of acts have been described with respect to the order of the acts may be varied in other implementations. Moreover non dependent acts may be implemented in parallel.

It will be apparent that various features described above may be implemented in many different forms of software firmware and hardware in the implementations illustrated in the figures. The actual software code or specialized control hardware used to implement the various features is not limiting. Thus the operation and behavior of the features were described without reference to the specific software code it being understood that one of ordinary skill in the art would be able to design software and control hardware to implement the various features based on the description herein.

Further certain portions of the invention may be implemented as logic that performs one or more functions. This logic may include hardware such as one or more processors microprocessor application specific integrated circuits field programmable gate arrays or other processing logic software or a combination of hardware and software.

In the preceding specification various preferred embodiments have been described with reference to the accompanying drawings. It will however be evident that various modifications and changes may be made thereto and additional embodiments may be implemented without departing from the broader scope of the invention as set forth in the claims that follow. The specification and drawings are accordingly to be regarded in an illustrative rather than restrictive sense.

No element act or instruction used in the description of the present application should be construed as critical or essential to the invention unless explicitly described as such. Also as used herein the article a is intended to include one or more items. Where only one item is intended the term one or similar language is used. Further the phrase based on is intended to mean based at least in part on unless explicitly stated otherwise.

