---

title: Remote management of networked systems using secure modular platform
abstract: Embodiments relate to systems and methods for the remote configuration of networked systems using a secure modular platform. A network management engine communicates with a set of remote machines, such as a collection of clients or servers on a network. The network management engine can present a systems administrator with a set of compact network commands to permit the administrator to interrogate, configure, and manage the set of controlled machines on a dynamic basis. The network management engine can, for instance, install or update software, detect viruses on the controlled machines, perform an inventory of installed hardware on the controlled machines, and perform other network management functions using pre-configured functions and APIs built into a network library or command directory. Besides incorporating pre-configured management modules, the network management engine further allows a systems administrator to add custom modules in the command directory, using efficient modular interfaces compatible with network-level management processing.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08713177&OS=08713177&RS=08713177
owner: Red Hat, Inc.
number: 08713177
owner_city: Raleigh
owner_country: US
publication_date: 20080530
---
The present teachings relate to the remote management of networked systems using a secure modular platform and more particularly to platforms and techniques for remotely accessing configuring and controlling networked systems using a secure modular platform including a user extensible library of remote management commands.

In the network configuration and management realm various protocols and command sets have been developed to set up and operate networks of machines such as servers or other machines. The use of the Secure Shell SSH platform has for example become known for the remote configuration of individual servers and other machines deployed on public or private networks.

Remote configuration platforms such as SSH however were not designed and do not operate with the full range of remote system management functions in mind. SSH itself generally involves encrypted exchanges over a secure channel from one computer to another typically to permit an administrator or user of a first machine to tunnel into a second machine. The second machine can then be remotely configured or provisioned for example to load desired software applications onto the remote second machine.

This type of remote one to one provisioning however does not contemplate larger network management issues such as taking a hardware inventory of an array of machines on a network purging obsolete files form file servers on a network or performing any number of other higher order systems management tasks. As a result systems administrators using SSH or similar command protocols may be forced to custom write various routines to attempt to automatically or sequentially perform a range of network administration tasks across entire collections of machines. The amount and complexity of the hand written code based on SSH or similar protocols necessary to manage a large scale network for instance on the order of thousands of servers can become cumbersome. Even when customized command modules can be written for an SSH based or similar network having a large number of machines that code must then be tested and validated for its intended purposes on the network which may also be a time intensive task and which may require significant debugging efforts.

It may be desirable to provide methods and systems for the remote configuration of networked systems using a secure modular platform that can provide a compact reliable interface to invoke both pre configured command modules and user customized command functions on a large scale basis with reduced development overhead.

Embodiments of the present teachings relate to systems and methods for the remote management of networked systems using a secure modular platform. More particularly embodiments relate to a network management system and associated management application programming interfaces APIs and related command modules designed to establish secure connections to one or more networked machines and manage and control those resources remotely an a group or network wide basis using unified commands and instructions. In embodiments in one regard the network management system can comprise a management server hosting a management engine along with a command directory storing APIs modules commands or instructions and related data to permit a systems administrator or other user to interrogate configure update and manage the set of networked machines under central control using a compact instruction set. In embodiments the set of networked machines can consist of a set of servers a set of clients a set of databases or database servers or other machines or resources.

According to embodiments a remote management daemon running in the network management system can access a directory residing on the resident management. The directory can contain a set of core modules containing pre configured or native APIs and associated commands. The set of core modules can for instance contain APIs and commands designed to permit common network tasks to be conducted across some or all machines in the set of networked machines using one command. APIs and commands to permit an operator to query machines for their hardware software storage or input output state can for example be included in the set of core modules.

In addition to the set of core modules containing pre configured or native APIs and commands the command directory can also receive or contain a set of user defined modules containing custom coded or configured APIs and commands built by the systems administrator or other user. The set of user defined modules can be configured to permit a systems administrator to tailor certain API definitions commands or instructions to the needs and architecture of a particular network and store those APIs and commands to the management directory. User defined APIs and commands can themselves make use of the set of core modules available through the network management system.

Both the set of core modules and set of user defined modules associated commands can communicate with the set of networked machines via a secure channel. The network management system can host a certificate module that automatically communicates certificate information such as Secure Socket Layer SSL certificates between the network management system and the set of networked machines under central control. The built in security of the connection to the set of networked machines can permit the systems administrator or other user to safely and reliably log into remote machines inventory those machines update software or other resources of those machines on a secure basis without a need to add separate security coding.

According to embodiments in one regard due in part to the fact that the set of core modules and or the set of user defined modules are inherently network aware and can be built with the capability to communicate with multiple machines using single commands and or APIs the code base required to effectively manage even large networks can be made compact and robust. Coding effort complexity and debugging can therefore all be reduced. These and other embodiments described herein address the various noted shortcomings in known network configuration technology and provide a user or network operator with enhanced efficiency and dependability in network operations.

Reference will now be made in detail to exemplary embodiments of the present teachings which are illustrated in the accompanying drawings. Where possible the same reference numbers will be used throughout the drawings to refer to the same or like parts.

Each machine in set of networked machines can also host and execute a set of configured software including for instance an operating system applications or other programs utilities or other software. In embodiments the set of configured software for the machines in set of networked machines can be the same or similar or can be diverse in terms of the type number or versions of software installed. One or more networks can include the Internet or other public or private networks or connections.

The set of networked machines can further communicate with a network management system via one or more network . Network management system can monitor set of networked machines to identify the operating state of the machines and their software components. Network management system can received networked machine state data indicating the state of one or more machines in set of networked machines to perform those network administrative tasks. Networked machine state data can contain for example data describing the execution state of any one or more machine including processor faults or hangs the state of memory operations such as buffer overflows or leaks the power consumption of machines the detection of viruses or other malicious software the hardware components of any one or more machines or other data capturing the configuration or execution state of any one or more machine.

Network management system can communicate with and control set of networked machines via a management engine . Management engine can in turn communicate with a management store such as a database stored on a local hard drive as well as a remote management daemon and a command interface . Command interface can comprise a graphical command line or other interface permitting a systems administrator or other user to access remote management daemon and related resources and manage set of networked machines by issuing one or more command instruction or other communications.

According to embodiments remote management daemon can comprise logic and other resources to communicate with and manage set of networked machines . Remote management daemon can access a management directory containing both a set of core modules hosting a set of core pre configured APIs and commands as well as a set of user defined modules hosting customized user defined APIs and commands. The remote management daemon can in general interact with APIs defining a set of calls or functions including parameters to pass data between command interface and network management system and or set of networked machines .

Using remote management daemon applications running in command interface can invoke or request data or functions from other resources of network management system to monitor the configuration and state of set of networked machines . The remote management daemon can support an associated set of commands such as functions and data queries that can for instance be entered by the user of command interface to interrogate set of networked machines on a network wide basis. As used at times herein command can refer to an individual command issued by a user directed to set of networked machines an API definition configured to received and process an associated command or instruction or both together. In embodiments command interface can include a Web browser based interface including query boxes or input lines for desired commands or can include a text based command line interface. Other interfaces or network tools can be incorporated in command interface .

The pre configured core or native modules and associated APIs and commands within remote management daemon can include defined calls for commonly required network management tasks such as interrogating all machines in set of networked machines to report their hardware or software state or configuration. The pre configured core modules can include commands APIs instructions or other interfaces to permit the systems administrator or other user to communicate with one some or all of the set of networked machines using one command on a network wide basis. For example a core module in or accessed by remote management daemon can define a command in a general form such as Transmit Email Image for All Servers At Location X which causes network management system to interrogate all email servers at a given location to transmit a list or image of pending email messages to network management system . Remote management daemon can communicate with set of networked machines via a secure connection such as an encrypted channel.

In addition to core modules containing pre configured APIs or commands remote management daemon can also accept and store an extensible set of user defined modules. A systems administrator or other user can code APIs or commands tailored to their specific network needs and insert those APIs or commands directly into set of stored modules. The user defined modules can themselves invoke other APIs or commands whether pre configured or user defined to build further API or command structures. For instance an illustrative user defined module with associated APIs commands or calls can comprise the following coding from network management system and using bash and Python coding or tools 

Set of core modules can contain a set of pre configured or pre loaded APIs commands modules and other resources reflecting common network management tasks or requests such as requests to report hardware or software status perform software updates or other frequent administrative services. Set of user defined modules can contain APIs commands modules and other resources directed to a user s specific network implementation and needs. According to embodiments the Web module of network management system can provide a Web service or application to permit interaction with network management system and related resources. Each of set of core modules and set of user defined modules can contain APIs and commands to permit a network administrator to communicate with set of networked machines on a network wide basis without special coding requirements.

For example in either set of core modules or user defined modules targets can be defined as arbitrary groups of machines within set of networked machines or based on wildcards of hostnames. In a further regard the APIs and commands hosted in set of core modules or user defined modules can permit the transparent transmission and execution of one or more command instruction to multiple hosts simultaneously in any number of separate processes to reduce the total time to complete a task sent to multiple nodes though to the API caller it all appears as though it was executed in a single process. It may be noted that in embodiments besides permitting the addition to new client remote modules the user can also command interface itself by writing new modules to add functionality and loading those modules to set of user defined modules .

Network management system can also host certificate module to manage the communication of one or more SSL Secure Socket Layer certificate or other certificates to set of networked machines and thereby provide integral support for authentication or certification services. In embodiments certificate module and related APIs can be accessed by third party applications interacting with network management system . In embodiments SSL certificate can be auto signed or can be manually signed by a network administrator. Certificate module can in embodiments to take user defined actions e.g. such as sending an email when new certificates are received.

In embodiments remote management daemon command interface or other resources of network management system can permit the automatic logging of all network management traffic including for example networked machine data one or more command instruction one or more SSL certificate or other information reflecting the state of the set of networked machines and communication between those machines and network management system . Data traffic logs generated in this manner can be used for audit purposes or other uses.

In terms of further functionality and management operations supported by network management system in embodiments for instance set of core modules and or set of user defined modules can contain an API for the asynchronous execution of log running commands and checking the status of these commands which can report partial status back from nodes as they report in. In embodiments set of core modules and or set of user defined modules can contain an API to remotely query and or list the modules and methods that a remote networked machine may host. This capability in another regard can be referred to as interface introspection and can represents a dynamic function. For example on any given connection the interrogation can return different answers based on what has been installed on that client.

Further in embodiments any module in set of core modules and or set of user defined modules can be remotely copied to remote management systems or other resources without having to change the source code for the underlying modules or recompile them. According to embodiments in a further regard besides the ability to replace more limited remote systems such as SSH network management system along with set of core modules set of user defined modules and other resources can be used to generate additional applications or services such as network applications or Web services.

In step remote management daemon can access and present set of core modules and or set of user defined modules to an operator programmer or other user via network management system or other resource. Remote management daemon can access and present set of core modules which contain or host pre configured APIs and commands including APIs permitting the interrogation or other interaction with one or multiple machines in set of networked machines . Remote management daemon can also access and present set of user defined modules which comprise one or more APIs and commands designed and coded by the user or others. In embodiments set of core modules and or set of user defined modules can be stored in a directory or volume in management store of network management system or other storage locations.

In step set of core modules and or set of user defined modules can be accessed via remote management daemon to invoke or call pre configured or user defined commands functions modules data interfaces or routines. In step certificate module of network management system can transmit or communicate one or more SSL certificate or other security object or data to or from set of networked machines via one or more networks . In step network management system can transmit one or more command instruction to set of networked machines via the API command or other resource accessed via remote management daemon . Network management system can transmit for example a command instruction to set of networked machines requesting each machine to perform a self inspection and report a software or hardware configuration back to network management system to determine for example what operating system or systems are installed on the machines or whether any machines contain a defective memory battery or other part. In step remote management daemon and or management engine can receive a new or updated user defined module containing a new or modified API or command definition for inclusion in set of user defined modules as appropriate. In step any transmitted command instruction as well as networked machine state data or other traffic or information related to the configuration and state of set of networked machines can be stored for instance to management store or other storage. In step as understood by persons skilled in the art processing can repeat return to a prior processing point jump to a further processing point or end.

The foregoing description is illustrative and variations in configuration and implementation may occur to persons skilled in the art. For example while embodiments have been described in which a network management engine communicates with a single set of networked machines in embodiments the network management engine can communicate with and control multiple sets of networked machines which sets can represent clients servers or other machines configured in diverse ways. For further example while embodiments have been described in which a network management engine can communicate with a set of networked machines via a single or unitary network in embodiments the network management engine and or set of networked machines can be connected via multiple networks or connections. Other resources described as singular or integrated can in embodiments be plural or distributed and resources described as multiple or distributed can in embodiments be combined. The scope of the present teachings is accordingly intended to be limited only by the following claims.

