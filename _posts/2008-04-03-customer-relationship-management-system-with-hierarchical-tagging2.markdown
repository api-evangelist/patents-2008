---

title: Customer relationship management system with hierarchical tagging
abstract: A hierarchical tagging system and method are provided. In one embodiment, a software-based customer relationship management system and method may include the hierarchical tagging system.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09582806&OS=09582806&RS=09582806
owner: SugarCRM Inc.
number: 09582806
owner_city: Cupertino
owner_country: US
publication_date: 20080403
---
This application claims priority under 35 USC 119 e to U.S. Provisional Patent Application Ser. No. 60 921 766 filed on Apr. 3 2007 and entitled Customer Relationship Management System with Hierarchical Tagging which is incorporated herein by reference.

The system and method relate generally to a business software system and method and in particular to a software based system and method for providing customer relationship management.

Customer relationship management CRM systems and solutions are well known. For example typical known CRM systems include Microsoft CRM SalesForce a CRM product provided by SalesForce.com Netsuite CRM and SAP Business One CRM. However conventional CRM systems have significant limitations that include a lack of flexibility high costs and a closed source structure which is embedded into the traditional product offerings. These limitations have led to a failure rate of over 70 with traditional CRM implementations. Thus it is desirable to provide a customer relationship management system and method that overcomes these limitations of typical CRM systems and it is to this end that the system and method are directed.

A novel business application that includes hierarchical tagging is provided. In one embodiment the business application may be software based customer relationship management system.

The system and method are particularly applicable to an open source customer relationship management software system and it is in this context that the system and method will be described. It will be appreciated however that the algorithms data structures processes and modules of the system and method have greater utility since these modules algorithms data structures and processes disclosed herein can be equally applied to other non open source CRM systems as well as other business software application systems as well as other database software systems. For purposes of illustration the described system is an implementation in a customer relationship management CRM and groupware system. In the example below the CRM and groupware system is the Sugar Enterprise version 4.5 commercially available from SugarCRM Inc.

The system may be implemented using a base class known as SugarBean and a data retrieval API. A few of the methods provided in the base class include methods for building list queries saving and retrieving individual items. Each specific type of data creates a subclass of this base class. The base class is called SugarBean in the illustrative example that is described below. There is at least one subclass of SugarBean for each module. SugarBeans also are used for creating database tables cleaning out database tables loading records loading lists saving records and maintaining relationships. One example of a SugarBean subclass is a Contact subclass. The Contact subclass is a simple object that fills in some member variables on the SugarBean and leverages SugarBean for much of its logic and functionality. For example the security associated with the Contact subclass is automatically created for Contact by SugarBean that contains among other things the functions and processes that are shared by the other modules. Another example of a SugarBean subclass is Users which is a module that is security related and contains the list of users as well as users who should not have row level security described below in more detail applied to them. For this reason these modules have the bypass flag set to skip adding the right join for verifying security. The SugarCRM Sugar Professional system is a web based system with many concurrent users. Since this program contains critical data to the users it is imperative that they have quick access to the system and their data. The most frequent activity in the program is to look at existing data.

The system has one or more modules that are components of application functionality and provide certain functionality to the entity accessing the system. The modules of the exemplary CRM system shown in may include by way of example a portal module a calendar module an activities module a contacts module an accounts module a leads module an opportunities module a quotes module a products module a cases module a bug tracker module a documents module an emails module a campaigns module a project module an RSS module a forecasts module a reports module and a dashboard module. The system may include different more or fewer modules and the systems with those other combination of modules are within the scope of the system and method. Each of these modules provides a different functionality to the users of the system so that for example the calendar module provides a calendaring functionality to the CRM system that is instantiated with the system. The system may also include an administration module that handles the typical administrative functions of the system. In the exemplary system shown in each module contains a subclass of a SugarBean base object and each module references the SugarBean to retrieve the data from the database required for display and uses certain functions and operations instantiated in the SugarBean base object.

The contacts module is accessed by a contacts tab and allows the user to view a paginated contact list or search for a contact. The user can click on a specific contact to zoom in on the detailed contact record and from a specific contact record the user may link to the related account or leads opportunities cases or direct reports related contacts . Within the system contacts are the people with whom the organization does business. As with accounts the system allows the user to track a variety of contact information such as title email address and other data. Contacts are usually linked to an Account although this is not required. The accounts module may be accessed using an accounts tab and the user may view a paginated account list or search for an account. The user can click on a specific account to zoom in on the detailed account record and from a specific account record the user may link to related contacts activities leads opportunities cases or member organizations. Accounts are the companies with which the organization does business and the system allows the user to track a variety of information about an account including website main address number of employees and other data. Business subsidiaries can be linked to parent businesses in order to show relationships between accounts.

The leads module may be accessed by a leads tab that permits the user to view a paginated list of leads or search for a specific lead. The user can click on an individual lead to zoom in on the lead information record and from that detailed lead record the user can link to all related activities and see the activity history for the lead. Leads are the people or companies with whom the organization might do business in the future. Designed to track that first point of interaction with a potential customer leads are usually the hand off between the marketing department and the sales department. Not to be confused with a contact or account leads can often contain incomplete or inaccurate information whereas contacts and accounts stored in Sugar Enterprise are core to many business processes that require accurate data. Leads are typically fed into the Sugar Enterprise stem automatically from your website trade show lists or other methods. However the user can also directly enter leads into Sugar Enterprise manually.

The opportunities module is accessed by an opportunities tab and permits the user to view a paginated list of opportunities or search for a specific opportunity. The user can click on an individual opportunity to zoom in on the opportunity information record and from that detailed opportunity record the user can link to all related activities see the activity history for the opportunity and link to related leads and contacts. Opportunities track the process of selling a good or service to a potential customer. Once a selling process has commenced with a lead a lead should be converted into a contact and possibly also an account for example among other items. Opportunities help the user manage the selling process by tracking attributes such as sales stages probability of close deal amount and other information. The quotes module may be accessed by a quotes tab and permits the user to view a paginated list of customer quotes or search for a specific quote. The user can click on an individual quote to zoom in on the detailed quote information. A quote is formed by referencing product and pricing from a catalog of products you may create. A presentation quality Portable Document Format PDF representation of the quote may be created to fax or email to a client. Quotes may be associated with for example Accounts Contacts or Opportunities among other modules in the system and the system is not limited to a quote being associated with any particular set of modules.

The products module may be accessed by a products tab and permits the user to view a paginated list of products or search for a specific product. The user can click on an individual product to zoom in on the detailed product information. A product is used when assembling a customer quote. The cases module may be accessed using a cases tab and may permit the user to view a paginated list of cases or search for a specific case. The user can click on an individual case to zoom in on the case information record and from that detailed case record the user can link to all related activities see the activity history for the case and link to related contacts. The cases are the handoff between the sales department and the customer support department and help customer support representatives manage support problems or inquiries to completion by tracking information for each case such as its status and priority the user assigned as well as a full trail of all related open and completed activities. A dashboard such as that shown for example in module may be accessed using a dashboard tab and permits the user to view a dashboard of the information in the CRM system.

The documents module may show the user a list of documents that the user can access view and or download. The user can also upload documents assign publish and expiration dates and specify which users can access them. The email module allows the user to write and send emails and to create Email Templates that can be used with email based marketing campaigns. The user can also read compose save drafts send and archive emails. The campaigns module helps the user implement and track marketing campaigns wherein the campaigns may be telemarketing web banner web tracker mail or email based. For each Campaign the user can create the Prospects list from the Contacts or Leads or outside file sources. The projects module helps the user manage tasks related to specific projects. Tasks can be assigned to different users and assigned estimated hours of effort and as tasks are in progress and completed users can update the information for each task. The RSS module permits the user to view the latest headlines provided by your favorite Really Simple Syndication RSS feeds. These feeds provide news or other web content that is distributed or syndicated by web sites which publish their content in this manner. The system has information on hundreds of RSS feeds available as supplied and others may easily be added.

The forecasts module shows the user his her committed forecast history and current opportunities. For managers the user can view your team s rolled up forecasts. The reports module shows the user a list of saved custom reports not yet published as well as a list of Published Reports. Saved reports may be viewed deleted or published and published reports may be viewed deleted or un published. Clicking on the name of a report zooms to the detailed definition of the report criteria fields to be displayed and filter settings for that report permitting the user to alter the criteria and re submit the report query. Finally the dashboard module displays a graphical dashboard of the user s Opportunity Pipeline by Sales Stage Opportunities by Lead Source by Outcome Pipeline by Month by Outcome and Opportunities by Lead Source. The system also supports users putting graphs from their reports directly on their dashboards.

Returning to the system also includes the database that contains the data of the system and a security module row level security that implements the security methods to control access to the data in the database since the database is shared by all users of the system and the data must be segregated based on the users and their access level to different pieces of data. The system may also include a database abstraction layer that is coupled between the database and the SugarBean object and acts as an interface between the database and the SugarBean object . The SugarBean object provides the base logic required for retrieving making available and writing information to from the database and each module creates subclasses of SugarBean an example of which was described above to provide module specific details module specific data and module specific data views. During the process of retrieving data from the database the SugarBean makes calls that populate the row level security information into the SQL engine database management system that retrieves the data.

Once the data is retrieved from the database by the SugarBean object the module uses a template mechanism and a theme to produce the requested presentation user interface for the user. The template mechanism reformats the data from the database into a particular form while the theme adjusts the user interface according to the user s preferences.

If for instance the user requests an HTML presentation of the detail view of the contact module for a specified contact the system may perform that request as will now be described. The request of the user is directed to controller named index.php that handles most of the logic for the main application. The controller loads the current user information verifies authentication and session information for the particular user session loads the language for the user based on the user preferences and generates some of the user interface shell. The controller then calls the contact module and request the detail view for the specified contact. The contact module then retrieves the requested contact using the Sugarbean. The SugarBean verifies row level security for the requested contact at this point with assistance from the security module . If the record is not retrieved successfully then the process aborts and the user is not allowed to view the data for the record. If the retrieve process succeeds with the requested contact data the Contact module uses the templating mechanism such as for example XTemplate or Smarty in the template mechanism and the code for the current user s theme retrieved by the theme module is used to create the user interface for the presentation of the particular Contact data to the particular user. The resulting user interface then is sent back to the computing device with of client that requested it.

A software application may include a hierarchical tagging system and method. In an exemplary embodiment the hierarchical tagging system and method may be incorporated into the customer relationship management system shown in above and the hierarchical tagging system and method will be described with reference to the customer relationship management system although the hierarchical tagging system and method can be used with other systems and software applications.

In one embodiment in which the customer relationship management system shown in incorporates the hierarchical tagging system and method the modules of the system shown in may include a hierarchical tagging module and the database may include data associated with the hierarchical tagging system. In the customer relationship management system the user interface of the customer relationship management system may include a knowledge base tab that permits the user to access the knowledge base which includes the hierarchical tagging system. The hierarchical tagging system and method permits zero one or more tags to be associated with each piece of content or articles so that a user of the application system may be able to modify add tags to an article piece of content search based on tags etc. . . . . Using the hierarchical tagging system any number of tags may be created and linked to articles and each tag can either be flat no sub tags below or parent tags above for the particular tag or hierarchical wherein the tag has one or more parent tags and or one or more child tags and there is no inherent limit on the depth level of the tag hierarchy. For manageability reasons an administrative limit may be imposed on the depth level of the tag hierarchy. The hierarchical tagging system may allow multiple tags with the same name at different locations in the tags tree and each instance has a different meaning although the system does not permit two tags with the same name label to have the same parent tag .

In addition the hierarchical tagging module may include a tag translation unit that internationalizes the displayed tags. In particular when the application is internationalized for a particular foreign country the tags are also translated into the language of the foreign country.

The tree interface of the tags shown in the hierarchical tag portion allows a user to move articles from one tag to another and can be used to associate multiple articles with a tag. The hierarchical tag portion also may permit the user to delete tags that 1 may not have any articles and 2 may not have any sub tags with articles.

The hierarchical tagging system provides a user interface shown in in which the user can create tags and find tags for an article. illustrate an example of the user interface wherein the user creates a new tag in a new tag screen . In the user can add a new root tag into the tags of the system or may be administrator or role restricted. illustrates a tag select and add user interface of the hierarchical tagging system that is part of the same user interface shown in . Using this screen the user is able to search based on the existing tags in the system.

The hierarchical tagging system may also allow tags to be linked to other parent tags such as my favorite tags which refers to a collection of other tags. This feature allows the monitoring of collections of tags of interest without needing to maintain duplicate lists. The hierarchical tagging system may also include a listing of new tags and or tags with new articles associated therewith. The hierarchical tagging system may also support a deprecated flag for a tag and allow for a link to the new tag that should be used. This feature may be used when moving tag naming conventions. For example PHP may be deprecated with a link to Languages PHP . A user interface for tagging items can allow a link directly to the new name.

While the foregoing has been with reference to a particular embodiment of the invention it will be appreciated by those skilled in the art that changes in this embodiment may be made without departing from the principles and spirit of the invention the scope of which is defined by the appended claims.

