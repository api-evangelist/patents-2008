---

title: Matching process system and method
abstract: A method for profile matching includes receiving a plurality of user profiles, each user profile comprising traits of a respective user. The method includes receiving a preference indication for a first user profile of the plurality of user profiles. The method also includes determining a potential match user profile of the plurality of user profiles based on the preference indication for the first user profile. The method also includes presenting the potential match user profile to a second user.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08566327&OS=08566327&RS=08566327
owner: Match.com, L.L.C.
number: 08566327
owner_city: Dallas
owner_country: US
publication_date: 20081219
---
This application claims benefit under 35 U.S.C. 119 e to U.S. Provisional Application Ser. No. 61 015 099 entitled MATCHING PROCESS SYSTEM AND METHOD filed Dec. 19 2007.

This invention relates generally to computer matching systems and more particularly to a matching process system and method.

Networking architectures have grown increasingly complex in communications environments. In recent years a series of protocols and configurations have been developed in order to accommodate a diverse group of end users having various networking needs. Many of these architectures have gained significant notoriety because they can offer the benefits of automation convenience management and enhanced consumer selections.

Certain network protocols may be used in order to allow an end user to conduct an on line search of candidates to fill a given vacancy. These protocols may relate to job searches person finding services real estate searches or on line dating. While some believe that on line dating is simply a matter of matching supply and demand there is statistical and empirical evidence to suggest that successful on line dating entails far more.

For example people having similar and or compatible character traits and values should be matched together. However effectively linking two participants together can prove to be a challenging endeavor. Coordinating a relationship between two like minded individuals can be a significant chore as there are a number of obstacles and barriers that must be overcome.

One problem that has arisen is that matching services are limited to searching for matches only within their own platform. Thus only people who have gone through the process of signing up for the service are searched for a match. One solution to this problem is to have users register in multiple services. This is problematic because it can be expensive and time consuming for users. Further the user must then visit all of the services to monitor the search progress this inefficiency may cause users to give up on the search process.

Another problem is that the search results of these services contain many irrelevant entities to the searcher. This costs the user of the service time and may deter them from continuing through all of the search results.

In one embodiment a method for profile matching comprises receiving a plurality of user profiles each user profile comprising traits of a respective user. It also comprises receiving a preference indication for a first user profile of the plurality of user profiles. It further comprises determining a potential match user profile of the plurality of user profiles based on the preference indication for the first user profile. The method also comprises presenting the potential match user profile to a second user.

Receiving a preference indication for a first user profile may include receiving from a third user a recommendation of the first user profile for the second user. It may also include receiving from the second user a preference indication for the first user profile. The method may further include determining a score of a third user profile of the plurality of user profiles as a potential match for the second user. It may also include altering the score of the third user profile based on the preference indication for the first user profile.

In another embodiment a method for profile matching comprises receiving a plurality of user profiles each user profile comprising traits of a respective user. The method further comprises receiving a request for matches from a first user the first user associated with a first user profile. The method also comprises scoring the plurality of user profiles for potential matching with the first user based on comparisons of the plurality of user profiles with the first user profile. It also comprises identifying a second user profile of the plurality of user profiles as a potential match for the first user based on the scoring. The method further comprises identifying commonality between a third user profile of the plurality of user profiles and the second user profile. In addition the method comprises presenting to the first user the third user profile as a potential match for the first user.

Depending on the specific features implemented particular embodiments may exhibit some none or all of the following technical advantages. Various embodiments may be capable of dynamically updating match search results based on user activity. Some embodiments may be capable of enhancing match search results by reducing the impact of restrictive user preferences. In addition some embodiments may provide the ability to evaluate the attractiveness of potential matches. Other technical advantages will be readily apparent to one skilled in the art from the following figures description and claims.

Referring to one embodiment of a matching system is shown. is a simplified block diagram of a system for facilitating an on line dating scenario in a network environment. In other embodiments system can be leveraged to identify and to evaluate suitable candidates in other areas e.g. hiring employment recruiting real estate general person searches etc. . Users interact with a matching server through terminals . is a diagram showing in one embodiment the contents of terminal . Terminal comprises interface so that user may be able to interact with terminal and display . is a diagram showing in one embodiment the contents of matching server . Matching server comprises memory and at least one CPU . Memory may store multiple databases such as databases and . Terminal and matching server are communicatively coupled via network connections and network .

Users are clients customers prospective customers or entities wishing to participate in an on line dating scenario and or to view information associated with other participants in the system. Users may also seek to access or to initiate a communication with other users that may be delivered via network . Users may review data such as profiles for example associated with other users in order to make matching decisions or elections. Data as used herein refers to any type of numeric voice video text or script data or any other suitable information in any appropriate format that may be communicated from one point to another.

In one embodiment terminal represents and is inclusive of a personal computer that may be used to access network . Alternatively terminal may be representative of a cellular telephone an electronic notebook a laptop a personal digital assistant PDA or any other suitable device wireless or otherwise some of which can perform web browsing component or element capable of accessing one or more elements within system . Interface which may be provided in conjunction with the items listed above may further comprise any suitable interface for a human user such as a video camera a microphone a keyboard a mouse or any other appropriate equipment according to particular configurations and arrangements. In addition interface may be a unique element designed specifically for communications involving system . Such an element may be fabricated or produced specifically for matching applications involving a user.

Display in one embodiment is a computer monitor. Alternatively display may be a projector speaker or other device that allows user to appreciate information that system transmits.

Network is a communicative platform operable to exchange data or information emanating from user . Network could be a plain old telephone system POTS . Transmission of information emanating from the user may be assisted by management associated with matching server or manually keyed into a telephone or other suitable electronic equipment. In other embodiments network could be any packet data network offering a communications interface or exchange between any two nodes in system . Network may alternatively be any local area network LAN metropolitan area network MAN wide area network WAN wireless local area network WLAN virtual private network VPN intranet or any other appropriate architecture or system that facilitates communications in a network or telephonic environment including a combination of any networks or systems described above. In various embodiments network connections may include but are not limited to wired and or wireless mediums which may be provisioned with routers and firewalls.

Matching server is operable to receive and to communicate information to terminal . In some embodiments matching server may comprise a plurality of servers or other equipment each performing different or the same functions in order to receive and communicate information to terminal . Matching server may include software and or algorithms to achieve the operations for processing communicating delivering gathering uploading maintaining and or generally managing data as described herein. Alternatively such operations and techniques may be achieved by any suitable hardware component device application specific integrated circuit ASIC additional software field programmable gate array FPGA server processor algorithm erasable programmable ROM EPROM electrically erasable programmable ROM EEPROM or any other suitable object that is operable to facilitate such operations.

In some embodiments user using terminal registers with matching server . Registration may include user submitting information to matching server about user as well as characteristics user is seeking to be matched with. Such information may include a user handle which may be a combination of characters that uniquely identifies user to matching server . In various embodiments matching server may be configured to collect this information for example matching server may be configured to ask user to respond to a series of questions. Matching server may be configured to receive the information submitted by user and create a profile for user based on that information storing the profile in memory .

As an example only consider a case where user is interested in participating in an on line dating scenario. User can access the Internet via terminal travel to a web site managed by matching server and begin the registration process. As part of the registration process matching server may ask user a series of questions which identifies characteristics about user . Thus matching server may ask about the height weight age location and ethnicity of user . It may also ask about the birthplace parents eating habits activities and goals of user . Matching server may further use the registration process to discover what user may be looking for in a match such as age weight height location ethnicity diet education etc. Further matching server may ask user to indicate how important certain factors are when looking for a match. For example matching server may allow the user to indicate which characteristics in a potential match are a necessity. In another example matching server may ask How important is it that your match does not smoke Matching server may also allow the user to indicate that certain characteristics are not important search criteria. For example when asking user about what height or weight user is seeking in a match matching server may be configured to receive not important as a response. In yet another example matching server may allow user to rate which factors are important on a numerical scale. For example matching server may ask user the following On a scale of 1 10 how important is it that your match has the same education level as you In some embodiments matching server may specify that any number of questions or requested descriptions are necessary before registration may be concluded. As an example only matching server may require that user communicate the sex of user and the sex user prefers to be matched with. After concluding the registration process matching server may store the responses of user as a profile. This same process may be repeated by several different users causing matching server to contain a plurality of profiles.

Matching server may be configured to search through pool and present matches to user . In one embodiment of this presentation is depicted as occurring through display . In various embodiments matches may be presented to user utilizing other communication schemes such as electronic messages i.e. e mail or text messages i.e. utilizing SMS . In the depicted embodiment a result list is presented to user . A match result entity in a result list may be associated with a view button . Using interface user may request that matching server provide more information about an entity in result list by pressing the associated view button . Matching server may then communicate to user more information about that entity by retrieving the information from memory . In one embodiment of information that matching server provides for user is shown. Using display user views an entity from result list . Matching server may also provide user with the ability to contact the entity through a contact button . In one embodiment when contact button is utilized by user matching server may provide user with contact information of the entity such as a telephone number or an e mail address in another embodiment matching server may provide user with a way to directly contact the entity such as sending a message or providing voice or video communication between user and the entity. Even further matching server may be configured to allow user to express a negative preference for the entity through dislike button . In one embodiment when for example dislike button is utilized by user matching server may remove the entity from result list in another embodiment the entity may be removed from pool of users from which matches are identified.

As an example only consider that user has submitted a search request to matching server . Matching server may search through pool identify results and communicate result list to user which would contain other users for whom matching server had created a profile and who were identified through a search and selection process. Next user may be interested in learning more about Jane Doe entity thus user would click view button associated with Jane Doe. Matching server would receive this request and respond by displaying Jane Doe s profile stored in memory as depicted in . Next after reading the profile user may be interested in contacting Jane Doe hence user would click contact button . Matching server would respond by allowing user enter a message that matching server would then communicate to Jane Doe.

Matching server may even further be configured to allow user to store a match result entity in one embodiment the system may be configured to allow user to utilize favorite button that will add the desired match result entity into another list. In another embodiment utilizing favorite button will remove the associated match result entity from result list .

As an example only user may decide that he would like to save Jane Doe s profile so that he can review it later. User may click favorite button and matching server may respond by placing Jane Doe s profile into a separate list. Further matching server may also remove Jane Doe from user s result list . As a result user may see another match result entity populate result list . This is beneficial because it may focus user on evaluating new entities rather than reevaluating previously known entities because the entities still appear in result list .

In some embodiments matching server may be configured to generate pool by default according to various characteristics and preferences of user and other users of the system. Matching server may also restrict entities from being included in pool based on the status of the profile or if user has rejected or blocked an entity. Matching server may also restrict entities from the pool that have blocked or rejected user . For example matching server may not allow profiles that are not in good standing to be included in pool . In other embodiments matching server may be configured to generate pool by first choosing seeds. Seeds include but are not limited to profiles that user has sent a message to or profiles that user has expressed a preference for. Each seed is then compared to other entities to determine which entities will be included in pool . Any suitable method can be used to determine which entities are included in pool . For example any characteristics or algorithms described herein may form the basis of such a determination. As another example a commonality score may be generated based on the comparison between each entity and the seed. In some embodiments this commonality score can be a measure of how physically similar the users are to each other. This score may be generated based on the number of users that have expressed a positive preference for both the seed and the entity being compared. This score may also be generated based on whether the seed and entity have been viewed together in one session further the more times the seed and entity have been viewed together the larger the commonality score. The law of large numbers may allow for a vast amount of such commonalities to be established over a few days. Testing has revealed that using such commonality scoring methods has yielded at least one physical match for 80 of users whose profile has been viewed at least once and between 6 and 1000 physical matches for 60 of users whose profile has been viewed at least once. Matching server may be further configured to allow entities that have a commonality score above a certain threshold to become a part of pool . Matching server may further be configured to update pool . In some embodiments matching server may do so by creating new seed entities based on activity by user such as indicating a preference for that entity. Further matching server may then compare the chosen seed entity with other profiles stored in matching server and determine whether those profiles will be included in pool using a threshold score as described above. At least one advantage realized by this embodiment is that user is presented with updated potential matches which increases the likelihood of user finding a suitable match. Another advantage present in certain embodiments is that these updated potential matches have a greater likelihood of compatibility with user since they are chosen based on their commonality with entities user has expressed a preference for.

As an example only consider the case in which user has registered requested a search and received from matching server results list . Then user decides to contact Jane Doe and presses contact button . Aside from providing user with the ability to contact Jane Doe matching server will designate Jane Doe s profile as a seed. Matching server will then compare Jane Doe s profile to other profiles stored in memory in order to identify other users who may be similar to Jane Doe and thus be a good match for user . In this example matching server will generate a commonality score for each of these comparisons and compare these scores to a preset threshold. If the commonality score is lower than the threshold that profile will not be added to pool . However if the commonality score is higher than the threshold matching server will add this profile to pool . As an example further assume that the seed Jane Doe is being compared to another entity Susan Smith. Based on the fact that both Susan and Jane have three users Tom Dick and Harry who have expressed a positive preference for their profiles matching server generates a commonality score of 100 for the comparison. In contrast matching server generated a commonality score of 50 for the comparison between the seed Jane Doe and yet another entity Lucy Goosey. This was because only one user Bob had indicated a positive preference toward both Lucy and Jane. Continuing the example matching server is using a commonality threshold score of 70 which results in including Susan s profile whose commonality score was greater than the threshold score in pool and excluding Lucy s whose commonality score was less than the threshold score . Thus user gets the benefit of having more entities identified that may be good matches.

In some embodiments matching server may be configured to include behavioral scales. These may include multi item scales for materialism and gender role traditionalism. Such scales may provide the advantage of improved matching through deeper appreciation for the personality of entities in the system.

In some embodiments matching server may be configured to analyze profile text for categories. It may search for a number of text strings and then associate the profile with any number of categories. As an example only matching server may add any profile to the Cat category whose text contains any of the following strings 

Matching server may be configured to analyze one or more portions of the text of an entity s profile and generate a readability score that may be used in various ways such as in the process of searching for matches for user . In some embodiments matching server may analyze factors such as but not limited to average number of words per sentence total number of words with greater than three syllables and total number of words in the profile. Matching server may also concatenate all of the collected responses with a single space between them. It may further break the text into sentences words and syllables. From these statistics matching server may also be configured to generate a readability score by in one embodiment taking the average of the Flesch Kincaid Reading Ease test the Flesch Kincaid Grade Level test and the Gunning Fox score. Other embodiments may utilize any other combination of these or other tests to determine a readability score. In some embodiments analyses may be used to determine the IQ of an entity the grade level of the writing or how nervous the entity generally is. An advantage of this embodiment may be that the system provides user with a metric for determining approximate intelligence of other users. The readability score may be used for example in the matching process to identify potential matches.

As an example only the Flesch Kincaid Reading Ease score may be generated by first computing the following intermediate score 206.835 1.015 Average Words per Sentence 84.6 Average Syllables per Word Then the Flesch Kincaid Reading Ease score is determined by using the following table 

In some embodiments matching server may be configured to allow a user to interact with the result list of another user. Matching server may be configured to allow a user to express a preference for entities within a result list of another user and to indicate to the other user of this preference. Thus a user may be able to get advice from a friend regarding what other users may constitute good matches for the user and thus be able to find a better match.

As an example only consider and . Two users Harry and Sally are connected to matching server via terminals . Display is used by Harry while display is used by Sally. Matching server allows Sally to view Harry s result list on her terminal in display . By pressing recommend button Sally may indicate a preference for one or more of the entities in result list . Assume Sally presses recommend button associated with Jane Loe. After doing so matching server will notify Harry of Sally s preference. On Harry s display matching server will cause notification to appear associating it with Jane Loe. Notification will indicate to Harry that Sally has recommended Jane Loe as a potential match. Harry may find Sally s preference helpful in determining which entities he should pursue further if for example he believes Sally understands the type of person he is looking for.

In one embodiment matching server may be configured to analyze the profiles of both user and the entities in pool for keywords. Matching server may be configured to search through the profile of user for keywords that relate to things such as activities and interests. Matching server may generate a score for each entity in pool based on a comparison between the list of keywords found in user s profile and a similarly generated list of keywords of each entity in pool . In one embodiment this is accomplished by storing a list of words in memory and using it to identify keywords in the searched profiles. In some embodiments identified keywords may be used as a means of weighting various scores. As an example only a profile that contains the word God may be weighted much differently than a profile which has merely indicated that their religious preference is Christian. In various embodiments this may provide an advantage to user in that user is able to determine how similar he she is with a potential match. In addition the keyword analysis may be used by the system when searching and identifying matches for a user.

As an example only consider two registered users Harry and Sally both of whom have profiles stored in matching server . Matching server then analyzes each of these profiles by comparing it to a list of predefined keywords. Matching server then associates each word that matched the list of keywords with each profile. Now assume that Harry performs a search. While fulfilling Harry s query matching server evaluates Sally s profile for inclusion in Harry s result list . This evaluation includes comparing the list of keywords found in Harry s profile to the keywords found in Sally s profile. The more keywords that Harry and Sally have in common the more likely it will be that matching server will include Sally s profile in Harry s result list .

In some embodiments matching server may be configured to impute a level of physical attractiveness to an entity in pool . Matching server may be configured to monitor how frequent an entity in pool has been viewed as well as how many times that entity has been part of a result list in order to impute the level of physical attractiveness. Matching server may further be configured to generate a score based on this data. Further in some embodiments matching server may impute physical attractiveness to an entity based on the imputed physical attractiveness scores of other entities. Matching server may compute an average of the imputed physical attractiveness scores of the other entities weighted by the commonality score between each of the other entities and the present entity. Empirical data indicates that people are more likely to match with people of similar attractiveness. Thus in many embodiments a user may obtain an advantage in that they are able to be presented with potential matches that according to one measurement are as attractive as the user.

As an example only consider a registered user Sally whose profile was created by matching server in January. Since that time matching server has recorded the number of times Sally s profile has appeared in any user s result list assume that this has occurred 10 times. Further matching server has also recorded the number of times a user has viewed Sally s profile by clicking view button associated with Sally s profile assume that this has happened 5 times. In this manner matching server has constructed a ratio that represents the imputed physical attractiveness of Sally s profile. Still further assume that Harry a registered user now submits a query. Matching server has evaluated the imputed physical attractiveness ratio of Harry s profile. When evaluating Sally s profile for inclusion in result list returned to Harry matching server will compare the imputed physical attractiveness of Sally s profile and Harry s profile. The more similar the ratios associated with Harry and Sally s profiles are to each other the more likely it is that Sally s profile will be selected by matching server to be in Harry s result list . In another example assume that Sally s profile has not been registered long enough to generate a meaningful imputed physical attractiveness ratio. Matching server may then generate an imputed physical attractiveness score based on entities that Sally does have commonality scores with. This computed average may be weighted by the strength of the commonality score between Sally and each entity with whom she has a commonality score. Continuing the example assume that Sally has a commonality score of 5 with Lucy and 10 with Julia. When matching server computes the Sally s average it will give twice as much weight to Julia s imputed physical attractiveness score than to Lucy s.

In some embodiments matching server may be configured to make an entity in result list more appealing to user by pointing out coincidences in the profile data that give user a sense of fate with the entity. In one embodiment matching server may be configured to search for similar initials birthplaces birth dates birth month birth year university first names last names user handles parental occupations and keywords to identify users who may give another user a sense of fate. In other embodiments matching server may use the fate characteristics as a metric in the matching process.

As an example only assume that Harry is a registered user who has performed a search. After matching server returns a result list Harry chooses to learn more about one of the entities in the result list and clicks view button . Consider which is only an example of information that matching server may return to Harry after clicking view button . In Harry s display matching server presents certain details about the profile. In particular matching server presents to Harry a fate notification which points out specific similarities between the profile of the entity and Harry s profile. Reading fate notification gives Harry a sense of familiarity which enhances his appreciation for the profile.

In another example fate characteristics may be used to decide whether a profile in pool is included in user s result list . Assume that Harry is a registered user who has submitted a matching query to matching server . While determining which entities to include in Harry s result list matching server considers two profiles Sally and Roxy. Sally and Harry both have the same birth date initials and have parents that work in the same profession. In contrast Roxy and Harry only share the same birth place. Matching server may be configured to award more points to Sally than to Roxy based on these comparisons making it more likely that Sally s profile will be included in Harry s result list.

In some embodiments matching server may be configured to evaluate the likelihood of contact between user and an entity in pool . Matching server may be configured to compare demographic data between user and pool entity . In another embodiment matching server may be configured to weigh the demographic similarities and differences based on the sex of user . The demographic data may include but is not limited to age education ethnicity income and location.

As an example only assume that Harry and Sally are registered users who have profiles in matching server . Harry has submitted a search request to matching server . While fulfilling this request matching server evaluates Sally s profile since her profile is in pool . As part of the evaluation matching server looks at the differences between Harry and Sally s stated age income education ethnicity and location. In this example Harry is 10 years older than Sally makes 10 000 more per year and has a Master s degree while Sally has a bachelor s degree. Even with these disparities matching server will give Sally s profile a high score which makes it more likely that Sally s profile will appear in Harry s result list. However if it was Sally who submitted the search and matching server was evaluating Harry s profile a different score is possible. So if it were Sally who was 10 years older made 10 000 more per year and had a Master s degree while Harry had a Bachelor s degree matching server would give a low score to Harry s profile making it less likely that his profile would appear in Sally s result list. Matching server may be configured this way because empirical data has shown that these demographic differences do not have an equivalent effect on the choices men and women make regarding matches.

In another embodiment matching server may be configured to compare the locations of user and pool entity in increments of ten miles. In yet another embodiment matching server may be configured to score the location comparison in light of other factors as an example matching system may be configured to return a score consistent with a 10 mile difference in location even though there is a 50 mile difference between user and pool entity if user and pool entity have the same income education and age. An advantage realized in several embodiments is that it better approximates how a user evaluates entities. Entities that live further away are generally less appealing to a user but users may still be interested if the entity matches their preferences in other categories.

As an example only consider a registered user Harry who submits a search request. While fulfilling this request matching server examines Sally s profile in pool and determines that the stated locations of Harry s and Sally s profiles are 13 miles apart. Matching server will give Sally s profile a score as if the distance between them were only 10 miles. However in yet another example Sally s profile may indicate that she lives 50 miles away from Harry. Yet matching server also notes that both Harry and Sally make 100 000 per year have Master s degrees and that Harry and Sally are one year apart in age Harry is older . Given these similarities matching server will give a score to Sally s profile that is consistent with a 20 mile difference in location even though they are actually 50 miles apart. In this manner matching server takes into account empirical data that shows that people searching for matches who indicate that they want to see matches who live close to them are still willing to pursue a potential match that lives far away if the potential match fits very closely with the other search criteria.

In another embodiment matching server may be configured to evaluate the age difference between user and pool entity using ranges as well as a sliding scale. By way of example only matching server may be configured to assign a high value to an age difference between 0 and 5 while assigning a lower value to an age difference between 2 and 0. An even lower value may be assigned to an age difference between 6 and 8. Even lower values would be assigned incrementally as the age difference increases outside of the ranges discussed. The higher the assigned value is the more likely it will be that pool entity will be included in result list . Yet another embodiment may apply this combination of ranges and a sliding scale but use different values and ranges depending on the sex of user .

As an example only consider a situation in which a registered user Harry requests a search to be performed. While fulfilling this request matching server evaluates Sally s profile which was in pool . As part of the evaluation matching server compares the ages of Harry and Sally and determines that Harry is two years older than Sally this determination leads to matching server assigning in this example 50 points to Sally s profile. Matching server may also be configured to assign 50 points to Sally s profile had she been five years younger than Harry but if she had been up to two years older than Harry matching server may have been configured to assign 40 points to her profile. Matching server may be further configured to assign 30 points to Sally s profile if she was 6 to 8 years younger than Harry. However if Sally were more than 8 years younger than Harry matching server may be configured to further decrease the number of points assigned to her profile if she was 9 years younger then 25 points if she was 10 years younger 20 points if she was 11 years younger 15 points etc. The more points assigned to Sally s profile the more likely it is that her profile will appear in Harry s result list. Thus matching server may be configured to assign a score based on age difference using a combination of ranges and a sliding scale.

In another example matching server may assign scores differently if it was Sally who was searching and if it was Harry s profile that was being evaluated. In this example matching server may be configured to assign Harry s profile 50 points if he were between 1 and 5 years older than her. If he were 6 to 8 years older than her matching server may assign 45 points. If he were greater than 8 years older than her matching server may assign points in the following fashion if he was 9 years older 40 points would be assigned if he was 10 years older 35 points would be assigned etc. However if he was up to two years younger than Sally matching server may assign 50 points to his profile. If he were more than two years younger matching server may assign less points on a sliding scale 45 points if he were 3 years younger 40 points if he were 4 years younger etc. The more points assigned to Harry s profile the more like it is that his profile will appear in Sally s result list. This example illustrates how matching server may be configured to take the sex of user into account when scoring based on age differences.

In various embodiments matching server may be configured to evaluate the attractiveness of an entity in pool through collected feedback from other users. In one embodiment matching server may present an entity to user prompting user to rate the attractiveness of the entity on a scale from 1 9. This range gives the advantage of having a midpoint. Matching server may further be configured to collect such responses and store them in one embodiment matching server may store the data in memory using a structure such as database . Matching server may further be configured to compute the average of such responses for the entity and store this number as well. In various embodiments these values may be used in order to help in the matching process. Empirical data indicates that people are more likely to match with people of similar attractiveness. Thus in various embodiments users whose attractiveness rating are similar will be more likely to appear in each other s result list. Further a user may indicate that they only want profiles in their result list whose average attractiveness rating is higher than an indicated threshold.

As an example only assume registered user Harry uses terminal which in this example is Harry s personal computer and establishes communication with matching server . In this example this communication occurs by Harry using a Web browser to access a Web page controlled by matching server . Sometime after visiting the Web page matching server may present Harry with an option to rate the physical attractiveness of other users registered with matching server . Using display and interface Harry may view profiles of registered users and rank them on a scale of 1 9 by entering the values using interface in this example interface comprises a mouse and or a keyboard. After submitting this rating matching server will associate it with the profile and store it. Matching server will also allow other users to rate profiles thereby collecting a plurality of rankings for profiles. Matching server may use this data when trying to find matches for users. One example of this is that matching server may allow user to specify that he she is searching for profiles which have an average rating of 6 or above. In turn matching server may populate user s result list from the pool only with profiles whose average rating is at 6 or above. Another example of how matching server may use this data involves making it more likely that an entity will appear in a user s result list if the entity and that user have a similar average attractiveness rating. So if a user has an average rating of 6 then an entity with an average rating of 5 may be more likely to appear in the user s result list than an entity with an average rating of 2.

In another example assume that Harry is a registered user and has requested a search. While fulfilling this request matching server evaluates Sally s profile. As part of this evaluation matching server notices that Sally s profile contains feedback from other users ranking the attractiveness of Sally s profile. Matching server in this example averages that data Sally s profile average is 6. Matching server may then examine Harry s profile to determine a similar average. If Harry s profile has an average close to 6 it will be more likely that matching server will include Sally s profile in Harry s result list. If Harry s profile average is lower than 6 it will be less likely that Sally s profile will be included in Harry s result list. If Harry s profile average is greater than 6 it will be even less likely that Sally s profile will be included in Harry s result list. The more Harry s profile average deviates from that of Sally s the less likely it will be that matching server will present Sally s profile in Harry s result list.

In some embodiments matching server may be configured to analyze profile information and received activity information to construct pairs which link at least two profiles. These pairings may also be associated with a value that ascertains the quality of the pairing. For example a pairing which results from one user viewing the profile of another user may be assigned a value that is less than a pairing which results from a first user viewing the profile of a second user when the second user has also viewed the first user s profile. Matching server may use these pairings in order to generate search results for entities within and outside of the pairing. Each member of the pair may be used as a seed entity for generating search results for users in matching server . In various embodiments an advantage may be realized as matching server analyzes many of these pairs to develop dynamic results to users of the system the results being potentially more relevant as matching server leverages the interaction between users and profiles to generate search results.

Pairs may be formed from a variety of user activity received by matching server . This activity may include profile views mutual profile views one way double blind communication mutual double blind communication declining double blind communication one way wink mutual wink expressing disinterest in response to receiving a wink one way favorite and mutual favorite. Other suitable activity may also be received by matching server and utilized as a basis for generating pairs.

For example Harry may be a registered user who has expressed a positive preference for Sally. Matching server may be configured to generate a pair which includes Harry and Sally. Matching server may utilize this pair when providing search results to other users. Betty may have requested matches and Betty may be similar to Sally. Matching server may present Harry in Betty s result list as a result of the pairing between Harry and Sally. Further Jim may have executed a search and Jim may be similar to Harry. As a result of the pairing between Sally and Harry matching server may present Sally in Jim s list of search results.

In some embodiments matching server may be configured to encourage user to interact with entities in pool . For example matching server may present a list of limited entities from pool to user but not present other entities to user unless user interacts with the already presented entities. Possible interaction with these entities may include viewing more information regarding the entity expressing a positive or negative preference for the entity and choosing to contact the entity. Other suitable forms of interaction may also be utilized. For example matching server may prompt the user with a question about the list of entities such as asking whether or not the user likes the entity. Responses to such prompts may include yes maybe no remove and remove other. The presented entities may be chosen using a variety of methods. For example the presented entities may be chosen based on various scoring algorithms as described above. In addition presented entities may be chosen using predictive analysis such as logistical regression. Other techniques may be used to determine the presented entities. For example entities that have been presented previously may be excluded. As another example entities that have been blocked by user may also be excluded. In various embodiments a combination of these techniques as well as others may be used to determine the limited number of entities presented to user .

For example Harry may be a registered user of the matching system. Matching server may be configured to present to Harry a list of five entities that Harry must interact with. Once Harry has interacted with these entities matching server may present five more entities for Harry to interact with. Previously Harry has blocked Sally another registered user of the system. As a result matching server may exclude Sally from being presented to Harry in the list of five entities. Further Harry has already interacted with Betty another registered user of the system Harry sent a message to Betty utilizing matching server . As a result Betty will be excluded from being presented to Harry in the list of five entities. Matching server may then choose two of the five entities using scoring algorithms described above. For example matching server may choose Alice and Amy to be presented in the list of five entities because Alice and Amy have received high scores when their profiles were compared to Harry s profile. Matching server may choose the remaining three entities using predictive analysis. According to this example matching server may use logistical regression to identify Carla Christi and Camela as the other three entities to present to Harry. Thus in this example Harry is presented with a list of five entities by matching server . Matching server may not present another set of five entities until Harry has interacted with these five entities. Harry may interact with these entities in a variety of ways. For example Harry may send a message to Alice and send a wink to Amy. In addition Harry may choose to view more information about Carla s profile but express a negative preference towards Christi and Camela. After matching server receives these types of interaction with the presented five entities another set of five entities may be presented to Harry.

In this example matching server may further be configured to process the user interaction provided by Harry. For example matching server may utilize Alice s profile as a seed entity to generate other possible entities to present to Harry since Harry sent a message to Alice. Thus a benefit is from presenting a the five entities to Harry in that the interaction between Harry and these entities may be utilized by matching server to generate other entities for matching to Harry. This serves as an example of how preferences may be identified based on user behavior.

In one embodiment is disclosed wherein matching server with pool may be configured to interact with another platform such as social networking platform containing a set of users. Users are communicatively coupled to matching server and social networking platform . Matching server may further be configured to provide users of social networking platform a service by which they may search for users within set or within pool using the algorithms and processing of matching server . Matching server may even further be configured to allow users of matching server to search through pool and set . Matching server may be configured to parse the profiles of the entities in set collecting data and applying algorithms.

In another embodiment matching server may be configured to allow users of social networking platform to interact with matching server using social networking platform . This level of integration provides the advantage of users not having to learn and sign up for a different platform.

Social networking platform in one embodiment may be a service which stores profiles of its users. This service may be further configured to provide access to the stored profiles. In one embodiment social networking platform may also allow other services to interact with users of social networking platform through social networking platform .

In one embodiment matching server may be configured to collect requests from users of social networking platform and perform a search through pool and set . Matching server may further be configured to present the results of this search from within social networking platform . Matching server may further be configured to present entities in the search result from pool as if they were entities of set in one embodiment matching server may be configured to generate profiles of entities from pool into set . Thus users of social networking platform may view all of the entities in the search result regardless of their source either from pool or set within the environment of social networking platform .

As an example only consider two users Harry for whom matching server has created a profile and Sally who has a profile stored in social networking platform . From within social networking platform matching server presents to Sally the ability to perform a search which Sally uses. The results of this search are presented to Sally within social networking platform . In this example Harry s profile is displayed to Sally as a search result along with other entities from set though Harry s profile was from pool . In this example matching server uses the algorithms discussed herein and searches through the profiles stored in pool and set . In order to display Harry s profile to Sally matching server creates a profile in set using the data stored in Harry s profile in pool . Sally is then able to interact with this newly created profile from within social networking platform in the same manner as she is other entities in set .

In another embodiment matching server may be configured to allow its users to interact with social networking platform through matching server . In one embodiment matching server supplements pool with set . In yet another embodiment entities from set appear as entities of pool to the user in their list of search results. In one embodiment matching server may be configured to generate profiles within pool from entities of set the system may be configured to do so through capabilities provided by social networking platform such as an application programming interface.

As an example only consider two users Harry whose profile is stored in matching server and Sally whose profile is stored in social networking platform . Harry submits a search request to matching server . Matching server may return result list to Harry which in this example contains an entity representing Sally s profile. Matching server may accomplish this by creating profiles in pool that correspond to the profiles found in set . Once these profiles have been imported into pool matching server may then search through pool . While doing so matching server applies the algorithms and scores discussed herein. Thus in this example matching server has been configured to both search and apply scoring algorithms to entities in pool and set . Further in one example Harry is not able to distinguish that Sally s profile was originally stored in social networking platform . Rather matching server presents Sally s profile in the same manner as other profiles stored in pool . Thus in this example Harry may use favorite button view button and contact button when interacting with Sally s profile in the same manner as described above.

One advantage present in various embodiments is that a user has a wider pool of entities to search through. Another advantage is that a user does not have to sign up with several platforms to search through the users on those platforms.

As an example only consider a registered user Harry who desires to perform a search. Before processing the request matching server may ask Harry what sex he is and what sex does he desire to be matched with in this example Harry responds that he is a male seeking a female. After doing so matching server will generate pool as described above. Next matching server will apply a filter to remove certain entities from pool . In this example all males will be removed from pool since Harry is seeking a female. Further all females seeking females will be removed from pool since Harry is a male. In other examples other entities that are removed from pool include entities that Harry has expressed a negative preference for before or entities that have expressed a negative preference for Harry. After pool has been filtered matching server applies a variety of scoring algorithms to the entities remaining in pool . These algorithms may account for various comparisons such as those based on readability likelihood to contact fate and keywords described above. Matching server will then tabulate these scores storing them in this example in database . Matching server will then determine what order these entities are presented to Harry by applying an ordering algorithm. Here matching server assigns one ordering score to each entity by examining the results of the scoring algorithms. After doing so matching server will present result list to Harry where the order of the entities that appear in the result list is based on the ordering algorithm. In this example it is possible for result list to change. Consider another user Sally who appears in Harry s result list. If Harry decides to add her into a separate list by using favorite button Sally will be removed from result list as described above . However Sally will also become a seed entity from which entities may be added to pool as described above . Hence matching server will update the pool apply the filters apply the scoring algorithms tabulate the results apply the ordering algorithm and update result list . As another example an entity may update their profile which can change result list . For example assume Sally s profile had an ordering algorithm score that placed her within the top 20 entities in result list . Sally then changes her profile which results in keywords that match Harry s profile being added to her profile. Matching server will then update her scoring algorithms. In this example the change in Sally s profile and resulting increase in keyword matches with Harry s profile significantly increased her score. This was then reflected in the ordering algorithm as it was also applied to the updated profile. Afterwards Sally s profile is now placed within the top 5 entities in result list .

In some embodiments matching server may be configured to receive required characteristics from user regarding a match. User may be allowed to specify such restrictions based upon any number of characteristics including those described herein. For example matching server may allow user to specify that entities that indicate they have children should not be displayed. In another example user may specify that only entities between the ages of 20 and 30 should be present in result list . In some embodiments matching server may implement these restrictions in step of . In other embodiments however matching server may refuse to apply these restrictions to certain entities based on the characteristics of the entities. Any number of characteristics including those described herein may form the basis upon which matching server decides not to apply the restrictions submitted by user . As an example only matching server may ignore the restrictions if the entity has a high enough attractiveness rating. In another example though user has requested that no profiles which are located more than 50 miles away should be present in result list matching server may include such profiles because those profiles have over 5 matching keywords a high attractiveness rating and have specified the same life goals as user . Thus in some embodiments matching server may refuse to apply restrictions submitted by user based on any combination of characteristics or algorithms.

An advantage present in many embodiments is that through taking into account various factors when scoring potential matches and using only very few strict filters a large amount of result entities may be returned to the user. A further advantage is that the ordering algorithm will put the most relevant search results first saving the user time.

Although several embodiments have been illustrated and described in detail it will be recognized that substitutions and alterations are possible without departing from the spirit and scope of the appended claims.

