---

title: Script based computer health management system
abstract: A management system may use a human readable script in which is defined executable statements that may gathers status information from various services. The status information may be displayed within a management user interface, which may also include various summary statistics including an overall security state. The services may be locally running services, and services provided or accessible over a local area network or wide area network. In some cases, the human readable script may include statements for starting or resuming the services, querying a running service, or querying a database related to a service. The user interface may be refreshed when the human readable script is updated and re-executed. The services may include security related services, among others.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08250196&OS=08250196&RS=08250196
owner: Microsoft Corporation
number: 08250196
owner_city: Redmond
owner_country: US
publication_date: 20081027
---
Managing computer and network health may involve many different components each of which may contribute to the overall health of a computer or group of computers. An administrator may monitor many different services to determine the status or health of a system. For example the security of a device may include a firewall service an anti malware service a content monitoring service and other services. In many cases the various services may be provided by different manufacturers and may be configured to operate independently of other services.

In a network environment an administrator may manage multiple devices and may also manage services that are provided from servers within a local area network or may be provided across a wide area network such as web based services. In order to manage the various devices the status of many different services may be collected.

A management system may use a human readable script that contains executable statements that may gather status information from various services. The status information may be displayed within a management user interface which may also include various summary statistics including an overall summary statistic. The services may be locally running services and services provided or accessible over a local area network or wide area network. In some cases the human readable script may include statements for starting or resuming the services querying a running service or querying a database related to a service. The user interface may be refreshed when the human readable script is updated and re executed. The services may include security related services among others.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used to limit the scope of the claimed subject matter.

A management system may have a console that displays the status of a plurality of services. The status of the services may be defined in a human readable script that may contain executable statements that may perform various functions including querying the service. In many cases the management system may combine the status of the various services to determine an overall status for the monitored devices. The monitored devices may be a single device or one or more devices connected by a network.

The human readable script may be modified to include or remove various services. For example the script may be modified to add a query to a newly added service and incorporate the service s status into the overall status of the system.

The script may enable services from different service providers and services that provide different functions to be represented in the management system. The executable statements within the script may act as data sources within the management system and may provide data that are displayed in the management system as well as data that are used to generate summary statistics for the services monitored by the management system.

The management system may have one or more user interfaces through which the status or health of various services may be displayed. The management system may gather status information from locally executing services as well as services available over local or wide area networks. In some cases a management system may gather status information from other client devices servers and web based services.

Throughout this specification like reference numbers signify the same elements throughout the description of the figures.

When elements are referred to as being connected or coupled the elements can be directly connected or coupled together or one or more intervening elements may also be present. In contrast when elements are referred to as being directly connected or directly coupled there are no intervening elements present.

The subject matter may be embodied as devices systems methods and or computer program products. Accordingly some or all of the subject matter may be embodied in hardware and or in software including firmware resident software micro code state machines gate arrays etc. Furthermore the subject matter may take the form of a computer program product on a computer usable or computer readable storage medium having computer usable or computer readable program code embodied in the medium for use by or in connection with an instruction execution system. In the context of this document a computer usable or computer readable medium may be any medium that can contain store communicate propagate or transport the program for use by or in connection with the instruction execution system apparatus or device.

The computer usable or computer readable medium may be for example but not limited to an electronic magnetic optical electromagnetic infrared or semiconductor system apparatus device or propagation medium. By way of example and not limitation computer readable media may comprise computer storage media and communication media.

Computer storage media includes volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can accessed by an instruction execution system. Note that the computer usable or computer readable medium could be paper or another suitable medium upon which the program is printed as the program can be electronically captured via for instance optical scanning of the paper or other medium then compiled interpreted of otherwise processed in a suitable manner if necessary and then stored in a computer memory.

Communication media typically embodies computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term modulated data signal means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media includes wired media such as a wired network or direct wired connection and wireless media such as acoustic RF infrared and other wireless media. Combinations of the any of the above should also be included within the scope of computer readable media.

When the subject matter is embodied in the general context of computer executable instructions the embodiment may comprise program modules executed by one or more systems computers or other devices. Generally program modules include routines programs objects components data structures etc. that perform particular tasks or implement particular abstract data types. Typically the functionality of the program modules may be combined or distributed as desired in various embodiments.

The diagram of illustrates functional components of a system. In some cases the component may be a hardware component a software component or a combination of hardware and software. Some of the components may be application level software while other components may be operating system level components. In some cases the connection of one component to another may be a close connection where two or more components are operating on a single hardware platform. In other cases the connections may be made over network connections spanning long distances. Each embodiment may use different hardware software and interconnection architectures to achieve the functions described.

Embodiment is an example of a management system and an environment in which such a management system may be operated. The management system may operate on a device to gather status of various services. The status of the services may be used for monitoring the services aggregating the services into a health status for the device or other devices as well as modifying the services and other management functions.

In a typical scenario the management system may monitor and manage security services for a single device or group of devices. In the scenario the management system may monitor the status of firewall services virus scanning services message content services authentication services and other related security services. Each of the services may be separate independent applications functions or other type of service and each service may be provided by a different manufacturer and may have different mechanisms by which the service may be monitored and controlled. The management server may gather the status of each service aggregate the status using a heuristic or formula to determine summary statistics and present the status to a user. The management server may also include links or other mechanisms through which the user may change or configure individual services.

In the scenario above the management system may operate as a portal or central location from which many different services may be monitored and controlled. Because the management system can gather information from different and disparate sources the management system may determine summary statistics such as computer health indicators that span multiple services.

The management system may use a script engine to execute a human readable script that defines how each service may be accessed and how the data supplied by those services may be aggregated together to define one or more summary statistics.

The script may define various calls to a service that may elicit data from the service. The data may include any type of data such as a current operational status number and severity of errors configuration information or other data. In some cases data may be retrieved through a query to the service itself. Many services may have command line interface queries through which some functions of the service are exposed. In some cases the script may include calls that use such queries.

In some embodiments the script may call a function or service that queries the target service pulls data from a configuration file or other database or indirectly communicates with the target service. In such a case the script may not call the service directly. Some such cases may involve the script calling a second application or service that interfaces with the target service or other artifacts of the target service. The term target service is used to indicate a service that ultimately performs a function that may be monitored by the management system.

The human readable script may be written in a scripting language that is editable by a user. The user may be a system administrator or other technology professional that may have scripting skills but may not have extensive programming skills.

When a new service is added or an old service removed the management system may be updated by modifying the script . In many cases a manufacturer of a service may provide a short script snippet that may be inserted into the script . By adding the snippet the newly added service may be made available through the management system for monitoring and in some cases control.

The script may be a programming language that may be used to control an application. A script may be different from a program or application in that a program may execute independently from any other application or program. The script may be executed within the management system . The script may be interpreted from a human readable form or may be semi compiled to bytecode which is interpreted. In contrast an application is traditionally compiled into native machine code for the system on which an application is run. In many embodiments a command line interface may be available to execute the script .

The script engine may be a shell that may execute the script . The shell may be hosted inside the management system . In such an embodiment a scripting language that may be familiar to users and used in a command line interface may also be used to define actions within a management system .

In many embodiments the script may include commands that interface with various services. The script may contain individual statements or groups of statements that may call application programming interfaces command line functions or other functions that are exposed by the service. Depending on the scripting language such commands may be complex statements that may operate as data sources within the management system. The data sources may be used to supply any type of data from a service and allow the management system to display and manipulate the data.

The management system may execute the script to obtain data from many different services. The data may be processed by a health analysis engine to determine an overall health or status based on data from many services. The health analysis engine may use a formula heuristic or other algorithm that is defined in the script . In some cases a separate script may be used to define the function of the health analysis engine .

The health analysis engine may determine summary statistics from the data retrieved when the script is executed by the script engine . The health analysis engine may aggregate the retrieved data to generate an overall health factor for the group of services. In an example a script may include queries to several security related services. The services may each perform separate and unrelated functions but the health analysis engine may determine one or a group of parameters that summarize the overall health or status of the security services.

In a simple embodiment the health analysis engine may determine the overall status to be the worst status of each of the monitored services. For example a security related script may query a firewall service a content monitoring service and a virus detection service. If two of the services are operating properly and one of the services is not operating or has a problem the status of the problem service may be reflected as the overall health of the security services. In such an embodiment a high level summary status may reflect the worst state of any of the monitored devices or may be considered and aggregation of the health state of the monitored devices.

In a more complex embodiment the health analysis engine may combine data using complex heuristics or other algorithms to determine a health status. A client device within a local area network may have a firewall service and a virus detection service that is properly operating but may not have a content filtering service operational. Using the previous example the security health status for the client device may be classified as a security breach. However the script may also determine that a gateway device may have a content monitoring system operational. The health analysis engine may determine that the content monitoring service running on the gateway device may provide a large degree of protection so the client device s health may be classified as marginally bad but not a serious security breach. Such a determination may use heuristic or other complex relationships defined between services.

The management system may present the status of various monitored services on a user interface . The user interface may include the status of services along with various summary statistics. An example of a graphical user interface is illustrated in of this specification.

The user interface may include links to corrective actions. A link to a corrective action may perform some manipulation of the monitored service such as starting or stopping the service configuring the service or some other action. In many cases the link to a corrective action may be defined using the same scripting language as script and may be included in the script in some embodiments.

The user interface may be presented on a console device or other hardware device connected to the local device . In some embodiments the user interface may be a hypertext transport protocol document HTTP that may be displayed using a browser on another device. In such an embodiment the user interface may be transmitted to another device and displayed on the other device. Other embodiments may have different mechanisms for accessing and displaying the user interface on the device or some other device connected to a local area network or a wide area network .

In some embodiments a corrective action generator may create the link to a corrective action. The corrective action generator may select an appropriate corrective action from a group of predefined actions may create a script that is customized to a current condition or may otherwise define one or more corrective actions that may be performed on a particular service. In many cases the corrective action generator may provide specific corrective actions based on the conditions of one or more services.

An editor may be used to update change or otherwise manipulate the script . In many embodiments the editor may be a simple text editor but some embodiments may include an editor specifically designed to create and edit the script . In some cases the editor may include features such as syntax checking tab completion libraries of command sequences help pages and other features that may assist a user in creating and using scripts.

The device may operate on hardware platform that may include a processor memory and other hardware components. In some embodiments the device may be a server computer while in other embodiments the device may be a personal computer a personal digital assistant network appliance handheld device or any other platform on which a management system may operate.

In many cases the management system may be a system that may include software firmware and hardware that may perform the functions of a management system .

The management system may monitor local services . Local services are those services that operate on the device . In a typical personal computer embodiment dozens of services may be operating. Services may include functions that are provided by and exposed by an operating system applications such as middleware that perform functions used by many different applications applications that operate independently and any other function that may be monitored. In some embodiments one application or middleware may expose two or more different services that may be separately managed by a management system .

The management system may be connected to a local area network and may monitor and control services operating on client devices . In a typical use scenario the management system may operate on a server device that provides services to client devices such as desktop or laptop computers personal digital assistants mobile telephony devices or other user centric devices.

In some embodiments the management system may communicate with and manage services that are provided by server devices . In such a case the management system may operate on another server device or on a client device.

The management system may monitor services that may be provided on a gateway device . The gateway device may be a server network appliance firewall or other device that connects between a local area network and a wide area network that may include the Internet. In many cases a gateway device may provide many different security related services for a network.

Remote services which may include web services may be monitored and managed by the management system . Remote services and web services may be services that are accessed over a wide area network . Typically a remote service or web service may be hosted by a third party at a remote location. In some cases such services may be available on a subscription basis. A web service may be a special case of a remote service where protocols such as SOAP WSDL or other standardized systems are implemented.

In some cases a health analysis engine and corrective action generator may be provided as a remote service. In such a case the management system may use a script to query the various services and gather status information. The status information may be transmitted to the remote health analysis engine to return summary statistics and similarly the status information may be transmitted to a remote corrective action generator to return corrective actions to be displayed on the user interface .

Other embodiments may use different sequencing additional or fewer steps and different nomenclature or terminology to accomplish similar functions. In some embodiments various operations or set of operations may be performed in parallel with other operations either in a synchronous or asynchronous manner. The steps selected here were chosen to illustrate some principles of operations in a simplified form.

Embodiment illustrates an example of the steps that may be performed by a management system. A script may be used by the management system to query various services from which summary statistics and corrective actions may be generated. The results may be displayed on a user interface.

The script may be a human readable script that may be updated and modified by a user who may be a system or network administrator. By changing the script new services may be added to the management system existing services modified and old services removed. The script may the mechanism by which a service may be accessed and data collected for the management system. In some embodiments a user may update the script and have a management system refresh by re running the script thereby having a change implemented on the fly.

A new service may be received in block . The service may have a script snippet that may be added to the script in block . The script snippet may be provided with the service by the service manufacturer or may be written by a user to access the service. When the script snippet is added in block the existing script may be read modified and saved as script .

In many cases summary statistics definition may be updated or redefined in block . Some embodiments may include heuristics algorithms statements or other definitions of summary statistics within the script . In such a case a user may add a new service to the script using a snippet that retrieves data from the service and the user may also update the summary statistics definitions to include the new service in the statistics.

A user may perform other edits in block to the script . Other edits may include modifying the query to a service removing a service changing parameters sent or received from the service or other changes.

In many embodiments the script may be created and edited using a conventional text editor. Some embodiments may have more sophisticated editors that have syntax checking spell checking automatic formatting help information and other features that are tailored to the script language.

The management system may be launched in block and operated in block . The management system may be a complex application that performs many different monitoring configuration and other management functions for the various services. In many cases a management system may have wizards or other mechanisms to perform various operations. For example a management system may have a wizard for adding a new user which may involve creating a user account setting authentication credentials and creating a messaging mailbox on server computers and configuring a client computer with settings for the user. Such a wizard may communicate with many different services to perform the tasks.

While the management system is operating in block the management system may cause the script to be executed in block . The script may be executed at various times during the operation of the management system. In a typical use a user may select a page to view on a management console. When the page is selected the script may be executed in block in order to generate the data that may be displayed on the page. In some embodiments the page may be refreshed periodically to display updated information.

When the script is executed in block a command may be transmitted to a service and a status may be received. In many cases a script may have several such commands each of which may be tailored to a different service .

In some cases two or more commands may be transmitted to one service. Some such embodiments may have a sequence of commands that are transmitted to a service . In some cases a sequence of commands and status may be exchanged between a management system and a service .

The status returned from the service may be any type of data including status information performance data summary statistics for the service configuration information and other data concerning the operation of the service. In some cases the status may include query results from a service such as searching a user database service for an email address and the status may include the requested email address.

The status may be received by the management system and transmitted as status to block where a user interface may be generated. In some embodiments the status received from the services may be modified manipulated analyzed or otherwise processed before being transmitted as status . In some such embodiments such analysis or processing may be performed as defined in the script .

In many embodiments the script may define groupings and subgroupings of services. In some cases a group of services may be defined so that summary statistics may be generated for the group. In many cases a user interface may organize data based on a group or subgroup of services that is defined in the script .

In some embodiments different scripts may be used for different groups of services. For example a script may be defined for a group of security services while another script may be defined for a group of messaging related services. The script for security services may have the services further grouped into local services and client services for example.

The status may be received by the management system and transmitted as status to determine summary statistics in block . In some cases the functions of block may be performed by portions of the script in block . In other cases the summary statistics may be determined by a locally running function such as the health analysis engine of embodiment or by a remotely running service such as the health analysis engine of embodiment .

The status may be received by the management system and transmitted as status to block where corrective actions may be generated. One or more corrective action scripts may be transmitted to block for incorporation into the user interface. In some embodiments the status received from the services may be modified manipulated analyzed or otherwise processed before being transmitted as status . In some such embodiments such analysis or processing may be performed as defined in the script .

Embodiment is an example of a graphical user interface that may be generated by a management system. Each embodiment of a management system may have different user layouts and organizations of information. In the example of embodiment the user interface may have a title and high level tabs and . Tab may be for user services tab for messaging services and tab for security services .

Each tab may reflect one grouping of services. In some embodiments a separate script may be defined for each group of services. In other embodiments a single script may have the various groups defined therein. In many embodiments various levels of subgroups of services may be defined. In many embodiments the groups and subgroups of services may be reflected in the user interface as with the tabs and . In other embodiments some groups defined in a script may be used for calculating summary statistics or for other functions and may or may not be reflected in the user interface.

The tabs and may have user input mechanisms or links that cause one of the three respective pages to be displayed. In the embodiment the security services tab indicates the current page contains security related services.

Each tab and may have a summary indicator and respectively. The summary indicators and reflect a good status while the summary indicator may indicate a problem status.

In many embodiments a page on a management console may show various statistics from the services. For example a messaging service may display an operational status plus a count of messages processed. In another example a performance monitoring service may display the top three processes currently running on the system.

A group of local services are displayed on the user interface . Each service and may represent a firewall service and virus protection service respectively that operate on the local device. The local device being the same device on which the management system operates.

A group of client services are also displayed on the user interface . The client services may be services that operate on client devices. For example summary represents the status of computer named Admin Desktop that has an overall status of good and an indicator that reflects the good status. The summary has an expand button that a user may activate to see more details regarding the services on the Admin Desktop device.

Similarly summary represents the status of computer named Sales Desktop that has an overall status of good and an indicator that reflects the good status. The summary has an expand button that a user may activate to see more details regarding the services on the Sales Desktop device.

A summary represents the status of computer named Manager Laptop with an overall status of bad along with an indicator that reflects the bad status. The summary may have a detail status that includes entries for services and . Service has a status of turned off which is a problem. Service has a status of good running which is not a problem. A contract button may be used to toggle the appearance of the detail status .

The detail status may include a corrective action button . The corrective action button may be a user interface mechanism that may launch a corrective action. In this case button may cause a firewall service to start operating.

Embodiment illustrates grouping of services. Some services are grouped on a high level using the tabs and . Within the tab groupings the security services are grouped into local services and client services. Within the client services each client device may have several services.

In many embodiments the hierarchical groups of services may be defined in a script. In order to rearrange the grouping of the user interface a user may edit the script.

The foregoing description of the subject matter has been presented for purposes of illustration and description. It is not intended to be exhaustive or to limit the subject matter to the precise form disclosed and other modifications and variations may be possible in light of the above teachings. The embodiment was chosen and described in order to best explain the principles of the invention and its practical application to thereby enable others skilled in the art to best utilize the invention in various embodiments and various modifications as are suited to the particular use contemplated. It is intended that the appended claims be construed to include other alternative embodiments except insofar as limited by the prior art.

