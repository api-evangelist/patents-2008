---

title: Streaming media interruption and resumption system
abstract: A media delivery system enhances subscriber experience with streaming media. The media delivery system supports delivery of primary media content to the subscriber, but also provides secondary media content delivery, such as location based media delivery, that may interrupt the primary media content. The media delivery system coordinates delivery of the primary media stream and the location based media stream so that the primary media stream resumes delivery from the point of interruption when the secondary media stream finishes.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09077763&OS=09077763&RS=09077763
owner: ACCENTURE GLOBAL SERVICES LIMITED
number: 09077763
owner_city: Dublin
owner_country: IE
publication_date: 20080401
---
This application claims priority to EPO application serial number 08425076.0 titled Streaming Media Interruption and Resumption System filed Feb. 8 2008.

This application relates to content delivery through a data network. In particular this application relates to interrupting and resuming content delivery to service subscribers.

Rapid advances in computing and communication technology driven by strong market demand have led to nearly universal adoption of cell phones personal music and video playback devices and other types of portable media players. In some instances these devices can receive and play back streaming media. Thus as opposed to requiring the device to locally store all of its media content the device may instead receive a small portion at a time the media for playback.

A media delivery system enhances subscriber experience with streaming media. The system delivers primary media content such as streaming music of songs on a playlist to the subscriber and also provides secondary media delivery that may interrupt the primary media content. The media delivery system coordinates delivery of the primary media stream and the secondary media stream such that the primary media stream resumes delivery from the point of interruption. One beneficial result is that the subscriber receives and experiences the full content of the primary media stream even though interrupted by the secondary media content.

In one implementation the system initiates delivery of a primary media stream to an endpoint and interrupts the primary media data stream at an interruption point. The system then initiates delivery of a secondary media stream to the endpoint. When the secondary media stream ends or at another selectable time or event the system resumes delivery of the primary media stream to the endpoint from the interruption point.

The secondary media stream may be a location based media stream. In that regard the system may obtain an endpoint location and trigger interruption of the primary media data stream in response to the endpoint location. Thus the location based media stream may provide traffic updates weather updates emergency alerting advertising or other types of media content keyed on the location of the subscriber. A location server may provide the endpoint location to the system using for example latitude and longitude coordinates. In addition the system may determine whether the subscriber has an active subscription to any particular type of information prior to delivering the secondary media stream to the subscriber.

Other systems methods features and advantages will be or will become apparent to one with skill in the art upon examination of the following figures and detailed description. It is intended that all such additional systems methods features and advantages be included within this description be within the scope of the invention and be protected by the following claims.

The media server includes a media database . The media database stores media data for streaming to the endpoint and may implement a particular data model discussed below in connection with . The media data may represent many different types of content such as music video audio announcements audio books tones alarms sirens or other media. The media data make take many different forms including Flash e.g. FLV or SWF audio specific e.g. FLAC MP3 or WAV video specific e.g. AVI MPG or WMV or other forms.

The endpoint may connect to the media server in different ways. For example shows a client front end connecting the endpoint through a wireless access point WAP gateway . The WAP gateway may provide additional information to the media server such as the Mobile Subscriber Integrated Services Digital Network MSISDN number radio access type and other access parameters that may be relevant to the endpoint . Another example interface is the network e.g. Web front end that connects to the endpoint through a web browser or other network connection.

The front ends and support interaction with the endpoint and with the media business logic through a business logic application programming interface API . As one example the client front end may interact with client logic running on the endpoint . In that regard the client front end may conserve valuable network bandwidth by communicating playlist information streaming URL information and any other type of information without the need to communicate presentation elements e.g. complex GUIs to the endpoint .

On the other hand the web front end may provide a user friendly man machine interface. The endpoint employs the web front end to handle subscriber setup playlist setup and modification preference modifications logon and authentication and other interface tasks. As a specific example the endpoint may logon to the media server through the web front end specify songs and insert the songs into playlists for later access and playback.

The endpoint may logon to the media server through the web front end using for example a username password authentication and authorization technique. Alternatively the endpoint may use an MSISDN identifier to access the media server . In that regard the Unified User Profile UUP module in the SO system may obtain the MSISDN from the media server and process the MSISDN identifier. More specifically the UUP module may attempt to match the MSISDN against a user profile in a subscriber account. If a match is found the UUP module may examine the user profile to verify whether the endpoint has an account identifier for a valid active subscription the media server .

The front ends and may coordinate with the business logic to accept subscription service requests service payments media selections and other information from the endpoint . As one example the endpoint may upload define or create playlists of desired songs videos or other media on the media server . In addition the media server accepts input regarding endpoint characteristics e.g. directly from the endpoint . The endpoint characteristics may include subscribed content or content of interest e.g. music videos weather alerts traffic alerts emergency alerts and news bulletins age interests field of employment or other characteristics.

The media server front ends and also accept endpoint instructions to begin playback of media. For example the endpoint may communicate a request to the media server to begin playback of songs within a playlist. The media server may then retrieve the playlist identify each media entry retrieve the matching media content from the media database and stream the media to the endpoint .

The media server may maintain the subscription information and endpoint characteristics locally or additionally or alternatively may coordinate subscription information with other systems. For example the media server may communicate subscription requests subscriber characteristics or other information to the service orchestration system SO system . The subscriber service module in the SO system may coordinate maintenance of a central repository of endpoint information including account status endpoint identifiers and payment information.

In addition the SO system the media server or the endpoint may request location updates for the endpoint from the location server . Nevertheless the endpoint need not be mobile and may instead remain at a fixed location. In one implementation the location module may issue location requests to the location server . The location module may coordinate maintenance of a central repository of endpoint location information in the SO system . Alternatively or additionally the location module may forward endpoint locations to the media server such as in response to the media business logic invoking an application programming interface API to request endpoint location from the SO system .

As will be described in more detail below the endpoint locations received via the location updates may help the delivery system determine when to interrupt a primary media stream that the media server is delivering to the endpoint . The delivery system may further consider the endpoint characteristics and subscription information when determining when to interrupt.

The CMS includes availability logic and transcoding logic . The availability logic may monitor for the availability of secondary media. In that regard the availability logic may implement a media request interface and a media reception interface . As examples the media request interface may communicate Real Simple Syndication RSS subscription requests to external media servers communicate specific media requests e.g. HTTP requests to external media servers or communicate other requests using other protocols for available media to external systems.

The availability logic receives the available secondary media over the media reception interface and provides the secondary media to streaming media logic in the media server . The transcoding logic may convert the media from its received format e.g. AVI or WAV to any desired or specified format e.g. MP4 or MP3 for the media server . In addition when secondary media becomes available the availability logic communicates a media notification message on the notification interface to the notification module in the SO system . The media notification message may include a media type identifier e.g. a traffic report or weather report identifier timestamp relevant location e.g. the Melbourne Australia area or other media characteristic information.

In turn the notification module may communicate an interrupt message to the interrupt controller in the media server . The SO system may filter interrupts. For example the SO system may determine that the endpoint should be made aware of the newly available media based on a media characteristic for the secondary media and endpoint characteristics for the endpoint. The notification module may then generate the interrupt notification when the endpoint characteristic matches the media characteristic.

As examples the endpoint characteristic may be the current endpoint location subscription characteristics or other characteristics. In more detail when for example the endpoint is in a location where the secondary media is relevant e.g. a location where bad weather alerts are relevant and the endpoint has subscribed to weather alerts the SO system may generate the interrupt message to the media server . As will be explained in more detail below interrupt filtering may be performed at the SO system the media server the endpoint or other locations.

The delivery system streams delivery of a primary media stream to the endpoint . The delivery system further supports interrupting the primary media stream and delivering instead a secondary media stream . When the secondary media stream finishes the delivery system then resumes playback of the primary media stream .

A detailed example of the message flow supporting interruption and resumption of the media streams is shown in . presents an example in which the media server sends interrupt notifications to the endpoint . The client logic in the endpoint performs interrupt filtering and responds with an interruption request to the media server .

Initially the client logic in the endpoint establishes a connection to the media server . As noted above the endpoint may perform a username password or MSISDN based authentication and authorization procedure. As part of the connection process the media server may request the current subscriber location from the SO system and deliver the current subscriber location to the endpoint . Once authorized the client logic connects to the client front end and issues a session setup request . As one example the session setup request may be a Real Time Media Protocol Setup RTMP request but other protocols may be used. Once the media server has established the session the client logic issues a media playback request . The media playback request may specify a Uniform Resource Locator URL or other media indicia that identifies the media that the media server should begin to stream to the client as the primary media stream. For example the media indicia may include a playlist name or a specific song identifier for a song on a playlist. In response to the media playback request the streaming media logic initiates delivery of the primary media stream to the endpoint .

The CMS regularly checks for new media to become available. When for example a new traffic report for the Melbourne Australia area arrives the CMS communicates a media notification message to the notification module . The media notification message may include media characteristics such as relevant geographical location identifiers e.g. Melbourne Australia and content identifiers e.g. a traffic report identifier . The media characteristics may specify multiple relevant media characteristics including multiple relevant location identifiers and multiple application content identifiers.

The notification module communicates an interrupt notification to the interrupt controller in the media server . In turn the interrupt controller provides an interrupt notification to the streaming media logic . The streaming media logic communicates the interrupt notification to the endpoint .

As shown in the streaming media logic sends the interrupt notification to the endpoint in the same session used for the primary media stream e.g. interleaved with the primary media stream . One benefit is that no extra resources are expended to setup a separate communication channel to the endpoint . Furthermore the streaming media logic may perform a broadcast of the interrupt notification. To that end the streaming media logic communicates the interrupt notification including the media characteristics to multiple endpoints. For example the streaming media logic may communicate the interrupt notification to each subscriber currently connected to the media server and receiving a media stream from the media server .

The endpoint performs local filtering on the interrupt notification . In that regard the endpoint may obtain the media characteristics for the newly available media from the interrupt notification and obtain endpoint characteristics about the endpoint such as current location media preferences and other characteristics. The client logic in the endpoint matches one or more of the media characteristics against the endpoint characteristics. As one example the client logic may determine whether the current location of the endpoint matches the geographical location identifier provided in the interrupt notification for the newly available media. As another example the client logic may determine whether the media type of the newly available media matches a media preference e.g. emergency alerts set by the endpoint . The client logic may check for matches on any combination of characteristics e.g. location by itself or media content location and time of day in combination .

If there is a match the client logic in the endpoint may select between multiple delivery options for receiving the newly available media from the media server . As examples the client logic may consult a preference profile stored in the endpoint or may request user input for a delivery option input. One example of a delivery option is a concurrency option. The concurrency option specifies whether the newly available media is delivered with the primary media stream or whether the primary media stream is interrupted to deliver the newly available media stream in place of the primary media stream.

When the delivery option is concurrent delivery the client logic issues a new session setup request followed by a media playback request for the newly available media in its own session. The streaming media logic responds by sending a secondary media stream for the newly available media to the endpoint in a second session . In conjunction with concurrent streaming the media server may dynamically allocate bandwidth to the endpoint . Thus in response to the concurrent delivery option the media server may allocate additional bandwidth partition existing bandwidth between sessions e.g. the session for the primary media stream and a session for the secondary media stream or take other bandwidth allocation actions. One benefit of concurrent delivery is that the subscriber can experience the newly available media in the background without interrupting the primary media stream. When the media are of different types e.g. music as the primary media stream and an emergency altering graphic or video as the secondary media stream both types of media may stream to the endpoint without masking or interfering with one another.

When the delivery option is interrupted delivery the client logic issues a media playback request for the newly available media . The media playback request may specify that the newly available media should stream to the endpoint using the same session as the primary media stream. The streaming media logic responds by interrupting delivery of the primary media stream and initiating delivery of a secondary media stream for the newly available media to the endpoint . The media server maintains the interruption point of the primary media stream for future reference. However in other implementations the client logic may request the interruption point from the media server or locally maintain the streaming length of the primary media stream received so far. When the secondary media stream has finished e.g. when it reaches its normal endpoint or when it is canceled by the endpoint or other entity the media server resumes playback of the primary media stream from the interruption point . In other implementations the client logic rather than the media server may determine that the end of the secondary media stream has been reached and request resumption of the primary media stream specifying the interruption point.

The implementation described in and provides a less complex yet very scalable architecture. In particular the implementation described in and includes broadcasting of interrupts to multiple connected endpoints e.g. all connected endpoints may receive each interrupt notification . As a result the streaming media logic need not maintain or manage presence information for a potentially great number of endpoints. Furthermore each endpoint performs local interrupt filtering which provides efficient distributed processing for the interrupts and reduces the complexity of the notification module . With this approach the notification module need not determine for every media notification message that arrives from the CMS and for every endpoint which endpoints should actually receive an interrupt notification.

When new media is available the notification module communicates an interrupt notification to the interrupt controller in the media server . The interrupt notification may include the Internet Protocol IP address of the endpoint or other subscriber connection information obtained from the SO system via the presence module subscription service module or other subsystem. In contrast to the example shown in the interrupt controller issues a parameter request to the streaming media logic specifying for example the IP address of the endpoint . The streaming media logic returns to the interrupt controller for the requested IP Address a streaming length and session identifier for the primary media stream. The streaming length represents the amount of the primary media stream delivered so far to the endpoint over the session identified by the session identifier.

The streaming length gives the interruption point for the primary media stream. The interrupt controller emulates an endpoint playback request by following the parameter request with a media playback request for the secondary media stream that conveys the newly available media . The streaming media logic responds by switching the stream from the primary media to the newly available media. In other words the streaming media logic stops sending media data for the primary media stream and instead begins sending the secondary media stream in place of the primary media stream.

The interrupt controller monitors delivery of the secondary media stream to the endpoint . When the secondary media stream has finished the interrupt controller issues a new media playback request . The new request directs the streaming media logic to begin playback of the primary media stream but at the interruption point. Accordingly the streaming media logic resumes delivery of the primary media stream from the interruption point ensuring that the endpoint receives the complete media object from start to finish.

The interruption and resumption technique shown in is particularly efficient. The streaming media logic switches to the secondary media stream within the same RTSP session. As a result no additional overhead is incurred to setup a new session. In the example shown in the streaming media logic supports parameter requests and the override and substitution of a currently playing media stream e.g. specified by a particular URL with another media stream. In other implementations however such functionality need not be included in the streaming media logic. An alternative is described below in connection with .

When new media is available the notification module communicates an interrupt notification to the endpoint . In the example shown in the streaming media logic supports the RTSP Pause Play methods. Accordingly the endpoint communicates a media pause message for Session to the streaming media logic thereby interrupting delivery of the primary media stream. The endpoint follows with a media setup message to establish a new Session Session for the secondary media stream and a media play message to direct the streaming media logic to initiate delivery of the secondary media stream .

The endpoint monitors for the secondary media stream to finish. When the secondary media stream is complete the endpoint communicates a session teardown message for the new Session to the streaming media logic . In addition the endpoint also communicates a media play message to the streaming media logic . The media play message specifies the session identifier obtained from the acknowledgement message . As a result the streaming media logic resumes playback of the primary media stream from the pause point over the Session channel .

When new media is available the notification module communicates an interrupt notification to the endpoint . Because in this example the streaming media logic does not support the Pause method the endpoint communicates a parameter request message for Session to the streaming media logic . In response the streaming media logic returns the streaming length to the endpoint in the acknowledgement message . The streaming length represents the amount of the primary media stream delivered so far to the endpoint .

The endpoint next issues a session setup message to the streaming media logic . The streaming media logic responsively establishes a new session Session while closing Session and interrupting delivery of the primary media stream. The endpoint then issues a media play message to the streaming media logic . The streaming media logic responds by initiating delivery of the secondary media stream to the endpoint over Session .

The endpoint monitors the secondary media stream for completion. When finished the endpoint issues a new session setup message to the streaming media logic . The streaming media logic responsively establishes a new session Session while closing Session . The endpoint then communicates a media play message to the streaming media logic . The media play message specifies the streaming length i.e. the interruption point to the streaming media logic . Accordingly the streaming media logic resumes playback of the primary media stream from the interruption point over Session .

The media system determines when the secondary media stream has finished. The secondary media stream may finish when it has been delivered in its entirety when it is cancelled e.g. by the endpoint when it is overridden by the system or under other conditions that end the secondary media stream. When the secondary media stream has finished the media system resumes playback of the primary media stream from the interruption point .

When the endpoint accepts the interrupt the client logic may specify whether the secondary media stream should be delivered concurrently. If so the streaming media logic initiates delivery of the secondary media stream without interrupting the primary media stream . Otherwise the streaming media logic interrupts delivery of the primary media stream at an interruption point and initiates delivery of a secondary media stream . When the secondary media stream finishes the streaming media logic obtains the interruption point for the primary media stream and resumes delivery of the primary media stream to the endpoint from the interruption point .

The processor executes the client logic to carry out the streaming interruption and resumption processing explained above. shows that the memory provides storage for interrupt notifications and subscriber profiles . The interrupt notifications may be received over the communication interface and may include media characteristics for supplemental media that is available. Such media characteristics include the relevant location e.g. Melbourne Australia and the content characteristics e.g. the media type time appropriate age level duration or other characteristics .

The subscriber profiles include characteristics for the endpoint . The endpoint may include multiple subscriber profiles any one or more of which may be selected by subscriber input as the currently active subscriber profile. The subscriber profile includes endpoint characteristics. The characteristics shown in include the endpoint location content preferences time preferences and concurrency preferences . Table 1 gives examples of the endpoint characteristics.

The concurrency preferences may specify whether the endpoint prefers to receive newly available content at the same time as primary content or whether the endpoint prefers the primary content to be interrupted. The endpoint may additionally or alternatively present configuration options on the user interface . The example in shows the client logic requesting subscriber input via the user interface to select whether newly available content should be delivered in a concurrent stream. As another example the client logic may ask the subscriber via the user interface to verify whether or not any particular interrupt notification should be accepted so that the newly available content is delivered to the endpoint .

The client logic compares endpoint characteristics with the media characteristics . A locally stored profile may hold the endpoint characteristics. Examples of endpoint characteristics include endpoint location content type preferences content length preferences content delivery time or date preferences and other types of endpoint characteristics.

If the client logic finds a match and decides to accept the interrupt the client logic may request any stream information useful for resuming the primary media stream from the interruption point. However in other implementations the client logic may forgo the request for stream information and instead rely on the media server to track and maintain the current streaming length so that playback of the primary media stream may resume from the interruption point. Examples of stream information include the session identifier current streaming length connection type associated with the primary media stream. The client logic then requests delivery of the newly available media content and may specify a concurrency option . The concurrency option may be included in the request for the newly available media content and may direct the media systems to provide concurrent stream delivery or interrupted stream delivery.

When the secondary media stream has finished and the primary media stream was interrupted the client logic may obtain the interruption point for example by retrieving the streaming length at the time the interruption of the primary media stream occurred. The client logic may then issue a media play request that specifies the interruption point . As a result the media systems resume delivery of the primary media stream from the point where the primary media stream was interrupted.

Once interrupted the delivery systems being streaming the secondary media stream A to the smart phone . At the resumption point the secondary media stream has completed. Accordingly the media delivery systems resume delivery of the primary media stream A from the interruption point .

The cell phone initially receives the primary media stream B . At point the primary media stream A finishes and the delivery systems begin the streaming delivery of the next media object e.g. the next song on a playlist to the cell phone in the primary media stream C . In addition at notification point an interrupt notification arrives conveying to the cell phone that relevant supplemental media such as a traffic alert is available.

The cell phone receives the supplemental media in a secondary media stream B and in a session concurrent with delivery of the primary media stream C . The delivery systems may allocate bandwidth to the cell phone to accommodate the simultaneous delivery of the primary media stream C and the secondary media stream B . For example the delivery systems may add bandwidth to the connection supporting the cell phone . As another example the delivery systems may reduce the bandwidth of the session supporting the primary media stream C and reallocate that bandwidth to a new session supporting the secondary media stream B . Once the secondary media stream B completes the delivery systems may restore the prior bandwidth allocations or make different allocations or no changes . The delivery systems continue to stream primary media to the cell phone and the primary media stream D follows completion of the primary media stream C .

The PDA initially receives the primary media stream E . Once it finishes the delivery system proceeds with the next media item delivered to the PDA in the primary media stream F . At the interruption point an interrupt notification is generated for a weather alert relevant to the current location of the PDA . In this example the delivery systems interrupt the primary media stream F at the interruption point and initiate delivery of the secondary media stream C that conveys the weather alert to the PDA .

When the secondary media stream finishes at resumption point the delivery systems resume delivery of the primary media stream F from the interruption point . A second interruption point is also shown. In this instance the PDA requests concurrent delivery of the supplemental media. Accordingly the delivery systems do not interrupt the primary media stream F but instead initiate delivery of the secondary media stream D with the primary media stream F . As noted above the delivery systems may dynamically adjust bandwidth for the connection to support the concurrent delivery to the PDA .

In the process of transmitting content to the endpoint the delivery systems may generated encoded signals. For example when the delivery systems initiate streaming of the primary media content to the endpoint a transmitter may encode the baseband data using a Gaussian minimum shift keying GMSK Quadrature Phase Shift Keying QPSK or other encoding. The encoding may employ a finite number of distinct signals to represent digital data. For a QPSK modulation encoding for example the binary bitstream for the baseband data may be demultiplexed into two digital bitstreams representing in phase and quadrature phase bits which are separately modulated onto different orthogonal basis functions e.g. two sinusoids . The separately modulated sinusoids are added to obtain the QPSK encoded form of the baseband data and driven through an antenna to generate the transmitted signal . The transmitted signal is not limited to any particular form or generation technique however.

The media server delivers a responsive interrupt notification to the endpoint in the form of an encoded interrupt notification . The encoded interrupt notification may include any or all of the media characteristics. Thus the endpoint receives the interrupt notification and the media characteristics conveyed to the endpoint as the encoded timestamp encoded content type and encoded location .

The media server sends the encoded interrupt notification with the encoded primary media content . For example the encoded interrupt notification may be sent sequentially in parallel or interleaved in the same session used to communicate the primary media content to the endpoint . When the encoded interrupt notification has been sent the media server continues sending the primary media content as shown in as a second data stream following the encoded interrupt notification and conveying the second section of the primary media content as the encoded primary media content .

The endpoint receives the encoded interrupt notification demodulates decodes and recovers the data in the transmitted signal including the encoded interrupt notification . As described above the endpoint may process the interrupt notification and determine whether a match exists for the newly available media. If the endpoint decides to receive the secondary media content the endpoint transmits an interrupt request to the delivery systems.

After the delivery systems receive the interrupt request the media streaming logic interrupts delivery of the primary media stream. The interruption point shows where in the transmitted signal and the primary media content the encoded primary media content temporarily ends. Thus the primary media content delivery is interrupted and delivery of the secondary media content begins. In particular the transmitted signal includes a third data stream conveying the secondary media content as the encoded secondary media content which follows the interruption point in the second data stream.

When the secondary media content finishes the streaming media logic resumes streaming the primary media content . Thus the transmitted signal includes a fourth data stream conveying the third section of the primary media content as the encoded primary media content . The streaming media logic resumes playback of the primary media content from the interruption point . Accordingly the endpoint receives the complete primary media content.

Table 2 shows an example of interrupt forwarding logic that the interrupt controller may employ to send an interrupt notification to the endpoint or any other systems.

Table 3 shows an example of the streaming media logic interrupt forwarding logic that may be used to communicate an interrupt notification to the endpoint .

Table 4 shows an example of client logic for interrupt reception processing and stream handling with concurrency support.

Table 5 shows an example of an application programming interface API that the media business logic may implement. The client front end and web front end may both interact with the media business logic through the API . The API may vary widely depending on the implementation.

The playlist catalog table bundles together multiple individual playlists defined in the playlist table each of which may be associated to a user defined in the user table . The user table also stores content delivery preferences such as whether news or traffic alerts should be communicated to the user using the News and Traffic fields. The catalogue table defines the media that is in the playlist such as by album track name description and duration. The category table defines categories that may be assigned to the media.

The systems including the SO system media server and CMS described above may be implemented in many different ways. The system functionality may be implemented in a single system or functionally partitioned into other system configurations. As another example logic or systems implemented as computer executable instructions or as data structures in memory may be stored on distributed across or read from many different types of machine readable media. The machine readable media may include RAM ROM hard disks floppy disks CD ROMs a signal such as a signal received from a network or partitioned into sections and received in multiple packets communicated across a network. The systems may be implemented in software hardware or a combination of software and hardware.

Furthermore the systems may be implemented with additional different or fewer components. As one example a processor or any other logic may be implemented with a microprocessor a microcontroller a DSP an application specific integrated circuit ASIC program instructions discrete analog or digital logic or a combination of other types of circuits or logic. As another example memories may be DRAM SRAM Flash or any other type of memory. The systems may be distributed among multiple components such as among multiple processors and memories optionally including multiple distributed processing systems. Logic such as programs or circuitry may be combined or split among multiple programs distributed across several memories and processors and may be implemented in or as a function library such as a dynamic link library DLL or other shared library.

Examples of protocols that the systems modules and logic may employ to deliver media include the Real Time Messaging Protocol RTMP and Real Time Streaming Protocol RTSP . The FLV Flash Video format may be employed for the media streams and the media server and streaming media logic be implemented with Adobe Flash Media Streaming Server software available from Adobe System Incorporated of San Jose Calif. As other examples the media server and streaming media logic may be implemented with a Flash Lite server QuickTime streaming server or Darwin open source server.

However any other protocols for streaming audio video and data over the Internet between a server and an endpoint may deliver the media content. The protocols may further support endpoint control over the streaming media server. As examples the protocols may support commands such as play and pause for flexible media access on the streaming media server.

The transport layer may include Transport Control Protocol TCP Real Time Transport Protocol RTP or other transport logic. The network layer may route information based on Internet Protocol v4 v6 i.e. IPv4 or IPv6 or other network layer protocols. The data link layer may include wired or wireless links such as IEEE 802.11 WiFi WiMAX Asynchronous Transfer Mode ATM Fiber Distributed Data Interface FDDI Ethernet or other data link layers over optical fiber coaxial cable twisted pair or other physical layers.

Interfaces between logic modules and systems may be implemented in numerous ways. For example the interface between the SO system and the interrupt controller may be a Web Services interface. Other examples of interfaces include message passing such as publish subscribe messaging shared memory and remote procedure calls.

The hardware and software platforms that run on the endpoints may vary widely. As examples the endpoints may run the Windows CE operating system JAVA ME system Symbian operating system Palm operating system. The SO System CMS and media server may be implemented with a general purpose processing platform such as those available from Sun Microsystems Hewlett Packard or International Business Machines and running Unix Windows Linux or other operating systems.

While various embodiments of the invention have been described it will be apparent to those of ordinary skill in the art that many more embodiments and implementations are possible within the scope of the invention. Accordingly the invention is not to be restricted except in light of the attached claims and their equivalents.

