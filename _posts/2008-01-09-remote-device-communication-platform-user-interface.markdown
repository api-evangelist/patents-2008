---

title: Remote device communication platform user interface
abstract: Enabling a user interface (UI) for management of a host device from a client device. A connection is established between the host device and the client device via a web portal. The host device and the client device are without a host management software installed thereon. A content window is displayed on the client device in response to the established connection with the host device. A client status display area is displayed on the client device indicating at least a connection status with the host device. A corresponding host status display area is displayed on the host device indicating a connection status with the client device. The displayed client status display area specifically identifies the client device and defines client parameters for receiving messages during management of the host device. The displayed host status display area specifically identifies the host device and defines host parameters for receiving messages during interaction with the client device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08898321&OS=08898321&RS=08898321
owner: Microsoft Corporation
number: 08898321
owner_city: Redmond
owner_country: US
publication_date: 20080109
---
This application is related to a U.S. patent application Ser. No. 11 971 417 entitled REMOTE DEVICE COMMUNICATION PLATFORM filed Jan. 9 2008 which is incorporated herein by reference in its entirety.

Personal computing devices are transforming how individuals live their lives in the 21century. Personal computers laptop computers personal digital assistants PDA cellular phones or other devices continue to assist individuals from extensive experiences in electronic document creations electronic media communications multimedia enjoyments or the like. Furthermore software programs installed on these devices further expand the scope of functionalities in these devices. In addition users constantly store digital information and data on these devices for quick access and retrieval.

As users store information on the devices it becomes important for users to be able to remotely access different devices. For example a user who is working from home at a home computer may wish to access a work computer in his or her office. Currently various technologies are available that use the Internet to connect these two computers. Typically these systems would require that both the host computer e.g. home computer and the client computer e.g. work computer install a proprietary software program. Once the software is installed the user needs to ensure that the client device is turned on and is connected to the Internet. The user next is situated at the host device and executes the installed software to establish a connection between the host device and the client device. This connection enables the user to access and retrieve information from the client device while the user is physically present at a location of the host device.

While these existing technologies facilitate the users to enable a remote access of a remote device these technologies continue to require that a connection software is required to install on either the host device or the client device or both before such direct connection is possible. Furthermore because of the reliance on the installed software a new user interface UI is needed to properly identify and or distinguish the client device from the host device.

Embodiments of the invention overcome the shortcomings of the existing technologies by providing a user interface UI to properly identify a host device and a client device in a remote device management session. The host device and the client device are being connected via a web portal without the need for a remote management software or program for facilitating the connection. Aspects of the invention further display a status display area to the client device and the host device and provide independent client parameters and host parameters respectively to further enable independent features on the client device and the host device.

This summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used as an aid in determining the scope of the claimed subject matter.

Embodiments of the invention enable a convenient and stream lined user interface UI or graphical UI GUI for remote management of a host e.g. remote device from a client e.g. source device. Aspects of the invention provide proper identifications of various control or operational elements during management of the client device and the host device. Referring first to diagrams illustrate exemplary embodiments of a user interface UI display shown on a client device and a host device during the connection between the two devices according to an embodiment of the invention. In one embodiment the UI displays described herein may also be displayed on the client device and the host device via a client application on the client device or a host application installed on the host device. The client application or the host application are not remote management applications. For example the client application or the host application may be an internet browser application capable of connecting to the Internet. Other applications capable of connecting to the Internet and render content from devices connected to the Internet may be used without departing from the scope or spirit of aspects of the invention.

In this situation the client device and the host device may be connected based on the following exemplary and simplified method. For example a device ID is assigned to the host device. Based on the assigned device ID a connection is established between a server and the host device over a communication network such as an intranet an internet or the Internet. A user at the location of the client device sends a first instruction for accessing to a web portal or an online interface. The user is authenticated by the server in response to the received first instruction. An online status is established for the authenticated user. In one embodiment the host device is one of the devices that are available to the user at the web portal to establish a connection.

Referring again to the GUI display includes a status display area or a status bar . For example the status display area indicates information relating to a connection status between the host device and the client device such as a connection status message . In another embodiment the connection status includes at least one of the following types of information connecting connected and arbitrating i.e. connection arbitration . In an alternative embodiment the status display area also includes parameters that correspond to where the status display area is displayed i.e. on the client device or on the host device . In a further alternative embodiment the client status display area may be modified to have alternative appearances as a function of a varying degree of visibility. However the client status display area may have a translucent or transparent visibility layering over windows or text. In another embodiment the visibility modification of the client status display area may be triggered or coupled with other events such as in a maximized screen size mode.

The status display area also includes sub fields such as sub fields and . The sub field includes controls or activators for controlling or modifying the display area of a content window . For example the sub field may include a toggle or a control for maximizing the content window . In another example once the user has activate the maximized window control included in the sub field the sub field may dynamically display a different control or toggle for restoring the display size of the content window to the original or pre defined size. The sub field includes controls or operations for terminating the connection between the client device and the host device.

Still referring to the content window is configured to display content or information retrieved from the host device. As the server assists in establishing a connection between the host device and the client device the content window receives information from the server after the server retrieves information from the host device. In another embodiment the content window establishes a substantially instantaneous access to the host device and the interactions between the user and the client device are mirrored at the host device. For example the mouse cursor movements and locations the keyboard key strokes or the like may be captured and transmitted to the host device as if the user was physically present at the host device.

The GUI display may also include a notification window which displays one or more notification or alert messages to the user. In one example the notification window may also include interactive controls. In the illustrated example in the notification window includes a control or button CONNECT for connecting the client device to the host device. Similarly the notification window also includes a control or button CANCEL for canceling a request to connect to the host device.

Referring now to a separate GUI display is shown on a display of the host device after the client device has connected to the host device. For example the host device may be displaying information accessible by the host device. In this example the host device may initially display files folders applications or the like from its storage area or memory storage unit. As described earlier the host device is made available for access through a web portal associated with the user who is physically at a location of the client device . As such once the client device has gained access or is connected with the host device the GUI display will be displayed and making the content or information previously displayed invisible until further control from someone at the location of the host device. In one embodiment the GUI display also includes a host status display area or host status bar for indicating a connection status of the host device. In another embodiment the connection status includes at least one of the following types of information connecting connected and arbitrating i.e. connection arbitration . In an alternative embodiment the status display area also includes parameters that correspond to where the status display area is displayed i.e. on the client device or on the host device . In this illustrated embodiment the host status display area fails to include sub fields and as compared to the client status display area . Also the parameters associated with the host status display area enable the server to properly identify a destination for sending varying messages or notifications. In other words based on the parameters of the host status display area or the client status display area the server may generate corresponding messages to be displayed at the host device or the client device.

In one embodiment the GUI display may darken the entire display area of the GUI display except the host status display area when the host device is connected to the client device. Such feature is beneficial to ensure that someone at the location of the host device is unable to view the interactions by the user as the user interacts with the host device from the client device. In one embodiment the GUI may be darkened after a pre defined time period has elapsed such as 15 minutes. In an alternative embodiment a notification window may be displayed in addition to the darken display area or in place of the darken display area. By example the darkening of the display area may include displaying the GUI display with a black color or modifying colors of the GUI display to avoid the interactions being visible.

In an alternative embodiment a user may be connected to the host device under different access context or privilege context. For example the user may access the host device under an administrator mode or a non administrator mode. In these different scenarios the GUI display and or the GUI display may corresponding modify its display features or behaviors. For example under the non administrator mode the GUI display may disable the darkening of the GUI display . In another embodiment the GUI display may disable additional features or sub fields of the client status display area if the user is operating under the non administrator mode.

Referring now to the GUI display may further display a log in window for enabling someone to log in to the host device. For example suppose an individual or a co worker of the user wishes to access the user s host device. For example the individual may wish to assist the user for further troubleshooting the host device or the like. The individual may wish to log in to the host device and may trigger a display of the log in window by pressing activating keystrokes such as CTRL ALT DEL or CTRL EJECT . Other activating keystrokes may be used without departing from the scope or spirit of the invention. Once the activating keystrokes are received the log in window appears and enables the individual to log in to the host device by successfully verifying the individual s credentials e.g. username and password pair . The log in window includes at least a log in button or control for logging the individual.

Once someone or the individual has signed in at the host device a corresponding window is displayed on the client device in for notifying the client device that the connection has been terminated due to logging in or other interruption by someone at the location of the host device. In one embodiment the client device will not lose connection or be disconnected as a result of someone logging in at the host device.

Referring now to a comparative illustration shows a connection arbitration in operation as a client device is attempting to connect to the host device. In as a user at a location of the client device is attempting to connect to the host device at a location remote from the client device the server displays a separate status bar to each device a host status bar e.g. similar to host status display area on the host device and a client status bar e.g. similar to client status display area . The status bar is now displaying the connection status which is in a connection arbitration mode. This connection arbitration mode is a process when the host device and the client device are negotiating the connection between the two devices. In this illustrated example the server displays a window requesting a permission from a user at the location of the host device to grant access of the host device to the client device. Similarly a corresponding window is displayed at the client device indicating the connection status that the client device will be connected to the host device if the user at the host device grants the permission or a pre defined time has elapsed. It is to be understood that other messages and responses may be configured to the windows and without departing from the scope or spirit of embodiments of the invention. For example in the administrator mode the client device may gain access to the host device without the window appearing on the display of the host device and once the connection is established the host device is locked which may include deactivation or disabling of input and output devices of the host device.

Referring now to a block diagram illustrating an exemplary computer readable medium on which aspects of the invention may be stored. In one embodiment the computer readable medium may be a computer storage medium having tangible data structured stored thereon see also descriptions below . In one example the data structure includes a first data field for storing data for a first display window. The first display window is displayed on a client device and displaying content from a host device such as the host device. A second data field stores data for a status display area. The status display area indicates information associated with a connection status between the host device and the client device as displayed in a client application such as a client browser in response to the displayed content in the first data field . For example the second data field may include connection status showing at leas the following information connecting connected and arbitrating. The data structure further includes a third data field for storing data for a notification display window. The notification display window displays notification information associated with at least one of the following the displayed content from the host device and the connection status indicated by the second data field. In one embodiment the second data field includes a first sub data field in the second data field for storing data for a screen mode activator. The screen mode activator activates at least one of the following operations expanding a size of the first window in the first data field to fit a display size of a display device and restoring the size of the first window to an initial pre defined size. Also the second data field may further includes a second sub data field in the second data field for storing data for a termination control. The termination control terminates a connection with the host device.

In the embodiments where the computer readable medium is employed on a host device the first data field stores data for a first display window on the host device. The second data field stores data for a status display area and the status display area indicates information associated with a connection status between the host device and the host device. However the implementation of the second data field on the host device will not include the sub fields such as the sub fields and . The third data field stores data for a notification display window and the notification display window displays notification information associated with at least the connection status indicated by the second data field .

Referring now to an exemplary flow chart illustrating operations of enabling a user interface for management of a host device from a client device. At a connection is established between a host device and a client device via a web portal. The host device and the client device do not have a remote management software installed thereon. A content window is displayed on the client device in response to the established connection with the host device at . The displayed content window displays content retrieved from the host device. At a client status display area is displayed on the client device indicating at least a connection status with the host device. At a corresponding host status display area is displayed on the host device indicating a connection status with the client device. The displayed client status display area specifically identifies the client device and defines client parameters for receiving messages during management of the host device and the displayed host status display area specifically identifies the host device and defines host parameters for receiving messages during interaction with the client device.

In an alternative embodiment embodiments of the invention selectively transmit a notification message to the client device based on the client status display area and the client parameters and selectively transmit a notification message to the host device based on the host status display area and the host parameters. A further aspect of the invention detects a user presence at the host device and further transmits a client notification to the client device in response to the detected user presence at the host device. In another embodiment in response to the transmitted client notification embodiments of the invention transmit a host notification to the host device notifying a user at the host device that another user at the client device is attempting to connect to the host device. In one implementation the client status display area has a greater display area than the host status display area. Also the server embodying aspects of the invention may detect interaction activities on the client device and the host device and may darken a display area of a display of the host device when failing to detect interaction activities from the host device for a pre defined period of time.

From the perspective of a server relative to a client device embodiments of the invention in one form is a computer storage medium having a data structure stored thereon for a user interface to manage a host device by a client device. The data structure includes a first data field storing data for a first display window being displayed via a client application on the client device and displaying content from the host device. The data structure also includes a second data field storing data for a status display area indicating information associated with a connection status between the host device and the client application in response to the displayed content in the first data field. A third data field stores data for a notification display window displaying notification information associated with at least one of the following the displayed content from the host device and the connection status indicated by the second data field.

In another embodiment from the perspective of the server relative to the client device and a host device the invention in one form is method of enabling a user interface for management of a host device from a client device. Methods of this embodiment include 

Also from the perspective of the server relative to the host device aspects of the invention in one form is a computer storage medium having a data structure stored thereon for displaying a user interface on a host device during a management by a host device. The data structure includes a first data field storing data for a first display window being displayed on the host device. A second data field stores data for a status display area indicating information associated with a connection status between the host device and the host device. And the data structure includes a third data field storing data for a notification display window displaying notification information associated with at least the connection status indicated by the second data field.

The computer typically has at least some form of computer readable media. Computer readable media which include both volatile and nonvolatile media removable and non removable media may be any available medium that may be accessed by computer . By way of example and not limitation computer readable media comprise computer storage media and communication media. Computer storage media include volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. For example computer storage media include RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical disk storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium that may be used to store the desired information and that may be accessed by computer . Communication media typically embody computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and include any information delivery media. Those skilled in the art are familiar with the modulated data signal which has one or more of its characteristics set or changed in such a manner as to encode information in the signal. Wired media such as a wired network or direct wired connection and wireless media such as acoustic RF infrared and other wireless media are examples of communication media. Combinations of any of the above are also included within the scope of computer readable media.

The system memory includes computer storage media in the form of removable and or non removable volatile and or nonvolatile memory. In the illustrated embodiment system memory includes read only memory ROM and random access memory RAM . A basic input output system BIOS containing the basic routines that help to transfer information between elements within computer such as during start up is typically stored in ROM . RAM typically contains data and or program modules that are immediately accessible to and or presently being operated on by processing unit . Byway of example and not limitation illustrates operating system application programs other program modules and program data .

The computer may also include other removable non removable volatile nonvolatile computer storage media. For example illustrates a hard disk drive that reads from or writes to non removable nonvolatile magnetic media. also shows a magnetic disk drive that reads from or writes to a removable nonvolatile magnetic disk and an optical disk drive that reads from or writes to a removable nonvolatile optical disk such as a CD ROM or other optical media. Other removable non removable volatile nonvolatile computer storage media that may be used in the exemplary operating environment include but are not limited to magnetic tape cassettes flash memory cards digital versatile disks digital video tape solid state RAM solid state ROM and the like. The hard disk drive and magnetic disk drive and optical disk drive are typically connected to the system bus by a non volatile memory interface such as interface .

The drives or other mass storage devices and their associated computer storage media discussed above and illustrated in provide storage of computer readable instructions data structures program modules and other data for the computer . In for example hard disk drive is illustrated as storing operating system application programs other program modules and program data . Note that these components may either be the same as or different from operating system application programs other program modules and program data . Operating system application programs other program modules and program data are given different numbers here to illustrate that at a minimum they are different copies.

A user may enter commands and information into computer through input devices or user interface selection devices such as a keyboard and a pointing device e.g. a mouse trackball pen or touch pad . Other input devices not shown may include a microphone joystick game pad satellite dish scanner or the like. These and other input devices are connected to processing unit through a user input interface that is coupled to system bus but may be connected by other interface and bus structures such as a parallel port game port or a Universal Serial Bus USB . A monitor or other type of display device is also connected to system bus via an interface such as a video interface . In addition to the monitor computers often include other peripheral output devices not shown such as a printer and speakers which may be connected through an output peripheral interface not shown .

The computer may operate in a networked environment using logical connections to one or more remote computers such as a remote computer . The remote computer may be a personal computer a server a router a network PC a peer device or other common network node and typically includes many or all of the elements described above relative to computer . The logical connections depicted in include a local area network LAN and a wide area network WAN but may also include other networks. LAN and or WAN may be a wired network a wireless network a combination thereof and so on. Such networking environments are commonplace in offices enterprise wide computer networks intranets and global computer networks e.g. the Internet .

When used in a local area networking environment computer is connected to the LAN through a network interface or adapter . When used in a wide area networking environment computer typically includes a modem or other means for establishing communications over the WAN such as the Internet. The modem which may be internal or external is connected to system bus via the user input interface or other appropriate mechanism. In a networked environment program modules depicted relative to computer or portions thereof may be stored in a remote memory storage device not shown . By way of example and not limitation illustrates remote application programs as residing on the memory device. The network connections shown are exemplary and other means of establishing a communications link between the computers may be used.

Generally the data processors of computer are programmed by means of instructions stored at different times in the various computer readable storage media of the computer. Programs and operating systems are typically distributed for example on floppy disks or CD ROMs. From there they are installed or loaded into the secondary memory of a computer. At execution they are loaded at least partially into the computer s primary electronic memory. Aspects of the invention described herein includes these and other various types of computer readable storage media when such media contain instructions or programs for implementing the steps described below in conjunction with a microprocessor or other data processor. Further aspects of the invention include the computer itself when programmed according to the methods and techniques described herein.

For purposes of illustration programs and other executable program components such as the operating system are illustrated herein as discrete blocks. It is recognized however that such programs and components reside at various times in different storage components of the computer and are executed by the data processor s of the computer.

Although described in connection with an exemplary computing system environment including computer embodiments of the invention are operational with numerous other general purpose or special purpose computing system environments or configurations. The computing system environment is not intended to suggest any limitation as to the scope of use or functionality of any aspect of the invention. Moreover the computing system environment should not be interpreted as having any dependency or requirement relating to any one or combination of components illustrated in the exemplary operating environment. Examples of well known computing systems environments and or configurations that may be suitable for use with aspects of the invention include but are not limited to personal computers server computers hand held or laptop devices multiprocessor systems microprocessor based systems set top boxes programmable consumer electronics mobile telephones network PCs minicomputers mainframe computers distributed computing environments that include any of the above systems or devices and the like.

Embodiments of the invention may be described in the general context of computer executable instructions such as program modules executed by one or more computers or other devices. Generally program modules include but are not limited to routines programs objects components and data structures that perform particular tasks or implement particular abstract data types. Aspects of the invention may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment program modules may be located in both local and remote computer storage media including memory storage devices.

An interface in the context of a software architecture includes a software module component code portion or other sequence of computer executable instructions. The interface includes for example a first module accessing a second module to perform computing tasks on behalf of the first module. The first and second modules include in one example application programming interfaces APIs such as provided by operating systems component object model COM interfaces e.g. for peer to peer application communication and extensible markup language metadata interchange format XMI interfaces e.g. for communication between web services .

The interface may be a tightly coupled synchronous implementation such as in Java 2 Platform Enterprise Edition J2EE COM or distributed COM DCOM examples. Alternatively or in addition the interface may be a loosely coupled asynchronous implementation such as in a web service e.g. using the simple object access protocol . In general the interface includes any combination of the following characteristics tightly coupled loosely coupled synchronous and asynchronous. Further the interface may conform to a standard protocol a proprietary protocol or any combination of standard and proprietary protocols.

The interfaces described herein may all be part of a single interface or may be implemented as separate interfaces or any combination therein. The interfaces may execute locally or remotely to provide functionality. Further the interfaces may include additional or less functionality than illustrated or described herein.

In operation computer executes computer executable instructions such as those illustrated in the figures to implement aspects of the invention.

The order of execution or performance of the operations in embodiments of the invention illustrated and described herein is not essential unless otherwise specified. That is the operations may be performed in any order unless otherwise specified and embodiments of the invention may include additional or fewer operations than those disclosed herein. For example it is contemplated that executing or performing a particular operation before contemporaneously with or after another operation is within the scope of aspects of the invention.

Embodiments of the invention may be implemented with computer executable instructions. The computer executable instructions may be organized into one or more computer executable components or modules. Aspects of the invention may be implemented with any number and organization of such components or modules. For example aspects of the invention are not limited to the specific computer executable instructions or the specific components or modules illustrated in the figures and described herein. Other embodiments of the invention may include different computer executable instructions or components having more or less functionality than illustrated and described herein.

When introducing elements of aspects of the invention or the embodiments thereof the articles a an the and said are intended to mean that there are one or more of the elements. The terms comprising including and having are intended to be inclusive and mean that there may be additional elements other than the listed elements.

Having described aspects of the invention in detail it will be apparent that modifications and variations are possible without departing from the scope of aspects of the invention as defined in the appended claims. As various changes could be made in the above constructions products and methods without departing from the scope of aspects of the invention it is intended that all matter contained in the above description and shown in the accompanying drawings shall be interpreted as illustrative and not in a limiting sense.

