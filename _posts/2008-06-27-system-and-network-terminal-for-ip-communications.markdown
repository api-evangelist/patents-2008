---

title: System and network terminal for IP communications
abstract: A network terminal is capable of running a plurality of user environments in parallel and is connected to an interface device. The network terminal includes a plurality of communication units, a plurality of collaborating units, and a monitoring unit. The plurality of communication units are provided in one to one correspondence with a plurality of user environments. Each communication unit is configured to implement an Internet Protocol telephone call in the corresponding user environment. The plurality of collaborating units are provided in one to one correspondence with the plurality of communication units. Each collaborating unit is configured to perform a collaborative control on the corresponding communication unit and the interface device to thereby establish communications between the interface device and the corresponding communication unit. The monitoring unit monitors whether any of the collaborating units is performing the collaborative control. One of the plurality of collaborating units performs the collaborative control when the subject collaborating unit receives: notification from the monitoring unit indicating that none of the plurality of collaborating units is performing a collaborative control; and notification from the interface device specifying the subject collaborating unit as a specified collaborating unit to perform the collaborating control.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08635276&OS=08635276&RS=08635276
owner: Brother Kogyo Kabushiki Kaisha
number: 08635276
owner_city: Nagoya-shi, Aichi-ken
owner_country: JP
publication_date: 20080627
---
This application claims priority from Japanese Patent Application No. 2007 173523 filed Jun. 29 2007. The entire content of this priority application is incorporated herein by reference.

The present invention relates to a system and a network terminal capable of controlling communications between a telephone application and the interface device connected to the network terminal.

An Internet Protocol IP telephone system such as Skype is well known in the art. The IP telephone system can be used by installing a telephone application on a personal computer telephone terminal or the like. The telephone application is software developed by the IP telephone provider for originating and receiving calls and for implementing voice communications. The telephone application registers a user ID display name and profile of a user in order to provide details on the user using the IP telephone.

In recent years computer operating systems have employed a multi user environment capable of running a plurality of user environments in parallel. With this operating system software such as a communication application can run continuously in each user environment independent of each other. One example of such an operating system is Microsoft s Windows XP registered trademark . In Windows XP while a user is logged onto Windows registered trademark another user may also log on without the first user logging off. Accordingly software can continue to run in each user environment.

Japanese unexamined patent application publication No. 2005 175722 describes an IP phone system including a personal computer capable of communicating with a network and a handset that can be connected to the computer with a USB cable. In this system the person using the handset may make an IP telephone call to another user of a remote device on the network through a telephone application installed on the personal computer.

Since the telephone application records a user ID and other data for identifying the user the user must always use the telephone application in which the user s own ID and the like are registered when making a telephone call for example. However Japanese unexamined patent application publication No. 2005 175722 does not mention anything about a multi user environment. If the technology described in this publication were applied to a multi user environment the telephone application would be operating in each user environment running in parallel on the personal computer.

While the telephone application is operating in each user environment only one device driver is operating on the operating system for each type of device. The device driver controls operations of an input output device and is used for connecting the handset to the personal computer. The device driver may be a human interface device HID driver for controlling an HID or an audio driver for controlling an audio device for example. Under these circumstances if the handset transmits a command to the telephone application requesting a list of candidates from which a call destination can be selected for example the HID driver transmits this command to the telephone application but the HID driver may not know to which telephone application the command is to be transferred. Consequently the HID driver will transfer the command to all telephone applications or to a telephone application not intended by the user. If a list of call destination candidates a contact list is returned to the handset from each of the plurality of telephone applications the user will not be able to know which list of contacts was returned from which telephone application. Further the user will likely be at a loss when attempting to select one of the contacts from the list when a list of contacts the user was not expecting is returned from a telephone application other than the application in which the user s own ID is registered.

When the user selects a contact call destination from the contact list the handset transmits a command to the telephone application requesting a telephone call be established with the contact. If the command is transmitted to the telephone application in which the user ID of the user are registered or to an intended telephone application a call may be established with the contact using either the user ID of the user or an intended user ID. However in this case the user does not know to which telephone application the command was transferred. In other words it is possible that the telephone call is implemented using an unintended user ID. This problem is not limited to a request for a list of contacts as there is sufficient potential for confusion in the transmission of commands between the telephone application and the handset.

When a call is performed with an external IP telephone terminal via the telephone application the telephone application inputs voice data into an audio driver and the audio driver reproduces the voice and transfers this voice to the handset. Through this operation voice inputted through the external IP telephone terminal is reproduced on the handset. When a different IP telephone terminal issues a request for a telephone call to another telephone application the other telephone application inputs sound data for a ringtone into the audio driver. Since the audio driver reproduces both the voice data for the call in progress and the sound data for the ringtone at this time the ringtone sound is mixed with the voice and outputted from the handset. Further if a call is started with the other telephone application in this state multiple voices will be mixed and outputted through the handset already engaged in a telephone call.

Hence this technology can lead to such problems as a user making an IP telephone call using a telephone application in which another user s ID is registered and interference in communications between the handset and the plurality of telephone applications.

In view of the foregoing it is an object of the invention to provide a network terminal a method and a system capable of controlling communications between a telephone application running on an operating system supporting multiple users of the network terminal and an interface device connected to the network terminal while preventing interference in communications.

In order to attain the above and other objects the invention provides a network terminal capable of running a plurality of user environments in parallel and being connected to an interface device. The network terminal includes a plurality of communication units a plurality of collaborating units and a monitoring unit. The plurality of communication units are provided in one to one correspondence with a plurality of user environments. Each communication unit is configured to implement an Internet Protocol telephone call in the corresponding user environment. The plurality of collaborating units are provided in one to one correspondence with the plurality of communication units. Each collaborating unit is configured to perform a collaborative control on the corresponding communication unit and the interface device to thereby establish communications between the interface device and the corresponding communication unit. The monitoring unit monitors whether any of the collaborating units is performing the collaborative control. One of the plurality of collaborating units performs the collaborative control when the subject collaborating unit receives notification from the monitoring unit indicating that none of the plurality of collaborating units is performing a collaborative control and notification from the interface device specifying the subject collaborating unit as a specified collaborating unit to perform the collaborating control.

According to another aspect the present invention provides a network terminal connected to an interface device the network terminal comprising a controller. The controller executes a multi user operating system a plurality of communication applications a plurality of collaborating applications and a monitoring application. The multi user operating system is installed on the network device. The multi user operation system is capable of running a plurality of different user environments in parallel. The plurality of communication applications are installed on the network device. The plurality of communication applications are provided in one to one correspondence with a plurality of user environments and being configured to be capable of running in parallel. Each communication application is configured to implement an Internet Protocol telephone call in the corresponding user environment. The plurality of collaborating applications are installed on the network terminal. The plurality of collaborating applications are provided in one to one correspondence with a plurality of communication applications and being configured to be capable of running in parallel. Each collaborating application are configured to perform a collaborative control on the corresponding communication application and the interface device to thereby establish communications between the interface device and the corresponding communication application at least one of the plurality of collaborating applications running. The monitoring application monitors whether any of the collaborating applications is performing the collaborative control. One of the at least one running collaborating application performs the collaborative control upon receiving notification from the monitoring application indicating that none of the at least one running collaborating application is performing the collaborative control and notification from the interface device specifying the subject collaborating application as a specified collaborating application.

According to another aspect the present invention provides a method executed by a network terminal capable of running a plurality of user environments in parallel and being connected to an interface device the network terminal executing a plurality of communication applications installed on the network device the plurality of communication application being provided in one to one correspondence with a plurality of user environments and being configured to be capable of running in parallel each communication application being configured to implement an Internet Protocol telephone call in the corresponding user environment. The method includes monitoring whether any of a plurality of collaborating applications is performing the collaborative control the plurality of collaborating applications being provided in one to one correspondence with the plurality of user environments and being configured to be capable of running in parallel each collaborating application being configured to perform a collaborative control on the corresponding communication application and the interface device to thereby establish communications between the interface device and the corresponding communication application and performing the collaborative control by one of the at least one running collaborating application when the subject collaborating application receives notification from the monitoring application indicating that none of the at least one running collaborating application is performing the collaborative control and notification from the interface device specifying the subject collaborating application as a specified collaborating application.

According to another aspect the present invention provides a computer readable recording medium that stores a computer program for a network terminal capable of running a plurality of user environments in parallel and being connected to an interface device the network terminal executing a plurality of communication applications installed on the network device the plurality of communication application being provided in one to one correspondence with a plurality of user environments and being configured to be capable of running in parallel each communication application being configured to implement an Internet Protocol telephone call in the corresponding user environment. The computer program instructions for monitoring whether any of a plurality of collaborating applications is performing the collaborative control the plurality of collaborating applications being provided in one to one correspondence with the plurality of user environments and being configured to be capable of running in parallel each collaborating application being configured to perform a collaborative control on the corresponding communication application and the interface device to thereby establish communications between the interface device and the corresponding communication application and performing the collaborative control by one of the at least one running collaborating application when the subject collaborating application receives notification from the monitoring application indicating that none of the at least one running collaborating application is performing the collaborative control and notification from the interface device specifying the subject collaborating application as a specified collaborating application.

According to another aspect the present invention provides a system includes an interface device a network terminal and a monitoring unit. The network terminal is capable of running a plurality of user environments in parallel and being connected to the interface device. The network terminal includes a plurality of communication units a plurality of collaborating units and a monitoring unit. The plurality of communication units are provided in one to one correspondence with a plurality of user environments. Each communication unit being configured to implement an Internet Protocol telephone call in the corresponding user environment. The plurality of collaborating units are provided in one to one correspondence with the plurality of communication units. Each collaborating unit is configured to perform a collaborative control on the corresponding communication unit and the interface device to thereby establish communications between the interface device and the communication unit. The monitoring unit monitors whether any of the collaborating units is performing the collaborative control. The interface device specifies one of the running collaborating unit as specified collaborating unit. One of the plurality of collaborating units performs the collaborative control upon receiving notification from the monitoring unit indicating that none of the plurality of collaborating units is performing a collaborative control and notification from the interface device specifying the subject collaborating unit as a specified collaborating unit.

A network system and a network terminal according to the present invention will be described based on first and second embodiments while referring to the accompanying drawings wherein like parts and components are designated by the same reference numerals to avoid duplicating description.

Here the first embodiment will be described with reference to . is a block diagram showing the general structure of an IP telephone system related to the present embodiment. The IP telephone system shown in includes a network terminal an interface device and an IP telephone terminal . The network terminal is configured of a personal computer and the interface device of a telephone device capable of performing an IP telephone call. The network terminal and IP telephone terminal are connected to each other and capable of communicating bi directionally via a network and the network terminal and interface device are connected via USB ports.

While only one IP telephone terminal is shown connected to the network it should be apparent that a plurality of IP telephone terminals can be connected and that the IP telephone system related to the present embodiment can implement IP telephone calls with each of the plurality of IP telephone terminals. Further the IP telephone terminal is not limited to a terminal device such as a personal computer but may also be a landline phone and cell phone. In such a case a converter such as the SkypeIn device is connected between the landline phone or cell phone and the network terminal to ensure compatibility of communication data.

An operating system installed on the network terminal has a multi user environment in which a plurality of user environments can be run in parallel. Since the various functions provided by the operating system are well known in the art a detailed description of such functions will not be given here.

Next a state of communications with application software operating on the network terminal will be described with reference to . The following description will assume the case in which a user A and a user B are logged onto the network terminal . At this time user environments A and B are running in parallel for each of the logged on users A and B. A Skype application A and a collaborative application A are running in the user environment A while similarly a Skype application B and a collaborative application B are running in the user environment B. Hence the Skype applications and the collaborative applications are running in both user environments.

The Skype applications A and B are telephone application programs facilitating the communication of data DD and audio data AD with the IP telephone terminal via the network . Therefore two Skype applications A and B are running simultaneously in parallel on the operating system.

The collaborative applications A and B are software for implementing collaboration between the respective Skype applications A and B and a device driver through intercommunication of data DD. Hence the two collaborative applications A and B are running simultaneously in parallel on the operating system. The data DD includes commands for implementing control between the network terminal and interface device mail and other communication data. Types of commands in the data DD include a command issued by the interface device to the Skype applications A and B requesting data for a list of contacts and a command to transmit data for the list of contacts from the Skype applications A and B to the interface device .

The device driver is software for establishing collaboration between the collaborative applications A and B and the interface device by exchanging data DD therebetween. Only a single device driver operates on the operating system.

The network terminal is also provided with an audio driver . The audio driver is software that establishes collaboration between the Skype applications A and B and the interface device and exchanges audio data AD therebetween. When the Skype applications A and B input audio data AD into the audio driver the audio driver reproduces the audio and transfers this audio to the interface device . Accordingly audio data AD transmitted from the IP telephone terminal is reproduced on the interface device . Only a single audio driver runs on the operating system.

The network terminal is also provided with a communication status monitoring application that can be accessed by both the collaborative applications A and B. The communication status monitoring application monitors the operating state of the collaborative applications A and B and determines whether one of the Skype applications A and B is engaged in communications. Only one communication status monitoring application runs on the operating system.

Next the electrical structure of the network terminal will be described with reference to . The network terminal is provided with a CPU for controlling operations of the network terminal . The CPU is connected via a bus to a ROM storing BIOS and other programs executed by the CPU a RAM temporarily storing results of calculations performed by the CPU and a hard disk for storing data. The RAM is provided with various storage areas including a work area A. The hard disk has a storage area for storing the Skype applications A and B the collaborative applications A and B the communication status monitoring application and the like executed on the network terminal .

Also connected to the bus are a USB interface by which the network terminal can be connected to the interface device with a USB cable a communication interface for implementing communications with the network a display controller for displaying operation screens for the user on a monitor and an input detecting unit for detecting user input via a keyboard or a mouse . The keyboard and mouse may be connected wirelessly through infrared communications or the like or may be connected by a short LAN cable for example.

Next the processes of various applications executed on the network terminal according to the first embodiment will be described with reference to the flowcharts in . The system of the first embodiment is configured to exclude communications with a user not specified by the interface device . The processes shown in below are executed by the CPU of the network terminal .

In the following description it will be assumed that users A and B are logged onto the network terminal and that any logged on users A and B have not yet started the collaborative applications A and B. First the CPU executes the Skype applications stored in the storage area . Consequently the Skype applications A and B are running in the user environments A and B as shown in .

Next steps in a collaborative application launching process for registering the logged on user A or B in the interface device will be described with reference to the flowchart in . The collaborative application launching process begins when the user launches the collaborative application A for example. In step hereinafter step will be abbreviated as S the launched collaborative application A uses the application programming interface API of Windows registered trademark to acquire the Windows user name user A for the user environment A in which the collaborative application A itself is running as data identifying the user of the environment A thereby knowing the operating environment in which the collaborative application A is running. The collaborative application A also transmits the acquired user name user A to the interface device via the USB interface . In S the interface device records the user name user A in the memory A thus completing the process for registering user A on the interface device .

If user B subsequently launches the collaborative application B the process in S and S is repeated to register the user name user B in the memory A. Therefore both user A and user B are registered on the interface device at this time.

Next a collaborative application ending process for canceling the registration of a user on the interface device will be described with reference to the flowchart in . In the following example it will be assumed that both user A and user B are registered on the interface device . The collaborative application ending process in begins when user A ends the collaborative application A for example. In S the collaborative application A uses the API of Windows to acquire the Windows user name user A for the user environment A in which the collaborative application A itself is running. The collaborative application A also transmits this acquired user name user A to the interface device via the USB interface . In S the interface device deletes the user name user A from the memory A thereby completing the process to remove the registration of user A from the interface device .

If user B subsequently ends the collaborative application B the process in S and S is repeated to remove the registration of the user name user B from the memory A. At this time no users are registered on the memory A.

Through the processes of the user running the collaborative application is registered on the interface device . By updating the user s registration status when the collaborative application is started and ended it is possible to learn in real time which users are running collaborative applications.

The data identifying the user may be any data provided that the user can be identified unambiguously. Hence it is possible to use the user name of the Skype application an e mail address or the like rather than the Windows user name for the user environment. Further while user names are registered on the interface device in the above example user names may instead be registered on the network terminal whereby the interface device would query the network terminal for the registered user name.

Next a call process implemented when a user calls the IP telephone terminal from the interface device will be described with reference to the flowchart in . The following description will assume that user A initiates the phone call while the collaborative applications A and B are running in parallel.

The process in begins when the user presses on the start call button for example but may also be performed when the user presses a different button or may be performed periodically. In S of this process a selection screen for the user initiating the phone call is displayed on the monitor . Since the collaborative applications A and B are running in parallel both users A and B are displayed on the monitor User A uses the cursor moving button to select user A as the specified user initiating the phone call. The interface device notifies the collaborative application A via the USB interface that the collaborative application A has been selected as the specified collaborative application for the specified user A. In this way the collaborative application A can be unambiguously set as the specified collaborative application for collaborating with the device driver . Further the Skype application A can be unambiguously set as the Skype application collaborating with the audio driver .

In S the interface device inputs a command to the Skype application A via the device driver and the collaborative application A requesting that data for a list of contacts be transmitted to the interface device . When the Skype application A returns the list of contacts to the interface device the interface device displays the list in the selection screen on the monitor . At this time user A manipulates the cursor moving button to select a desired contact from the list and presses the start call button in order to begin the phone call.

In S the collaborative application A queries the communication status monitoring application for the call status of all Skype applications in the network terminal .

In S the collaborative application A determines whether the Skype application A is available for a call. The collaborative application A makes this determination by checking whether the communication status monitoring application has written a busy flag to the work area A on the network terminal .

If the communication status monitoring application notifies the collaborative application A that a busy flag has not been written to the work area A then the collaborative application A determines that a phone call is possible S YES and advances to S. Upon receiving this notification the collaborative application A enters an active state for mediating the exchange of data DD between the Skype application A and the device driver . Here the active state indicates a state in which the collaborative application A can handle acquire the handle of the device driver acquire data DD from the device driver input data DD into the Skype application A acquire data DD from the Skype application A and input data DD into the device driver .

In S the collaborative application A issues start call data to the communication status monitoring application . The communication status monitoring application writes a busy flag in the work area A in response to the received start call data.

In S the CPU starts the phone call. Since the collaborative application A is in the active state at this time the collaborative application A collaborates with the device driver and Skype application A to communicate the data DD. On the other hand since the collaborative application B is not in the active state the collaborative application B performs no collaboration between the interface device and Skype application B. Accordingly the device driver and collaborative application A can be unambiguously associated with each other. Consequently this configuration enables communication using only the Skype application A that user A has specified on the interface device while disallowing communications with the other Skype application B even though both of the Skype applications A and B are running simultaneously. Therefore interference between the Skype applications A and B can be prevented.

Next a process for ending a telephone call begins in S when user A presses the end call button causing the interface device to input an instruction into the collaborative application A for ending the telephone call. In S the collaborative application A issues end call data to the communication status monitoring application . The communication status monitoring application deletes the busy flag from the work area A in response to the received end call data and the call process subsequently ends.

On the other hand when the communication status monitoring application notifies the collaborative application A that a busy flag has been written to the work area A the collaborative application A determines that a phone call is not possible S NO and advances to S. In S the collaborative application A transmits data to the interface device via the USB interface indicating that the call could not be placed because another user user B is engaged in communications. The interface device notifies user A by displaying a message on the monitor indicating that a call cannot be placed at this time and the call process ends.

Next a call reception process of the collaborative applications A and B during a reception operation performed in response to an access request from the IP telephone terminal will be described with reference to the flowchart in . In the following example it will be assumed that the IP telephone terminal has issued an access request to the user B. Since display names for a plurality of contacts and including the display name of the collaborative application B are displayed on the IP telephone terminal the user of the IP telephone terminal can issue an access request to user B by selecting the display name from the collaborative application B from the contact list.

Prior to the beginning of the call reception process in it will be assumed that both the collaborative applications A and B are in a standby state waiting for a reception notification from the Skype applications A and B respectively. A reception notification in this example is a notification that an access command has been received from the IP telephone terminal . The call reception process begins from S when a reception notification is received. In the following example the CPU determines that the collaborative application B has received a reception notification.

In S the collaborative application B queries the communication status monitoring application for the call status.

In S the CPU determines whether the Skype application B is in the available state. If the communication status monitoring application notifies the collaborative application B that a busy flag has not been written to the work area A the collaborative application B determines that a telephone call can be placed S YES and advances to S. At this time the collaborative application B enters as a specified collaborative application an active state capable of communicating between the Skype application B and the interface device .

In S the collaborative application B transmits start call data to the communication status monitoring application and the communication status monitoring application writes a busy flag to the work area A of the network terminal in response to this start call data.

In S the collaborative application B transmits data to the interface device via the USB interface indicating that a telephone call has been received from the IP telephone terminal . At this time the interface device notifies user B by displaying a message on the monitor indicating that a telephone call has been received.

The telephone call begins when user B presses the start call button . Since the collaborative application B is in the active state at this time the collaborative application B can control the communication of data DD between the interface device and the Skype application B. Hence a unique correspondence can be established between the device driver and the collaborative application B. Since data DD from the interface device is not inputted into the Skype application A at this time a telephone call is not initiated with the Skype application A while the Skype application B is engaged in a call thereby preventing the audio driver from inputting a combination of voices from two telephone calls into the interface device . Further since the Skype application A does not input data DD into the interface device even if an external terminal other than the IP telephone terminal issues an access request to the Skype application A the Skype application A will not initiate a telephone call at this time.

On the other hand if the communication status monitoring application issues a notification to the collaborative application B indicating that a busy flag has been written to the work area A the collaborative application B determines that a telephone call cannot be placed S NO and advances to S. In S the collaborative application B becomes idle without transmitting data to the interface device indicating that a telephone call has been received from the IP telephone terminal . The collaborative application B also notifies the Skype application B that a telephone call cannot be implemented since another user user A is engaged in a call. The Skype application B notifies the IP telephone terminal that a telephone call is not possible by modifying its status to not receiving and the process subsequently ends. Here the status of the Skype application B is data notifying external devices on the network of its current state. The Skype application B may also update the interface device in S by transmitting data indicating that a call was received but cannot be implemented at this time. The Skype application B may also identify the caller at this time.

As described above in the network terminal and network system according to the first embodiment the communication status monitoring application monitors currently running collaborative applications A and B to determine which if any is performing collaborative control. A collaborative application performs collaborative control after receiving notification from the communication status monitoring application that none of the other collaborative applications currently running is performing collaborative control and upon receiving notification from the interface device specifying the collaborative application itself. Accordingly the network terminal can unambiguously set one collaborative application for providing collaborative control between the corresponding Skype application and the interface device . Therefore the user can select a desired user environment from the interface device in a multi user environment and can place a telephone call through the telephone application operating in this environment. The network terminal also prevents interference of communications between the interface device and the plurality of Skype applications A and B.

With the network terminal according to the first embodiment the collaborative application notifies the interface device that collaborative control cannot be performed upon receiving notification from the communication status monitoring application that one of the currently running collaborative applications is performing collaborative control and upon receiving notification from the interface device specifying the collaborative application itself as the specified collaborative application. Since another Skype application is engaged in communications at this time the network terminal can notify the user via the interface device that communications cannot be established using the specified Skype application.

With the network terminal according to the first embodiment the collaborative application transmits user identification data user name in this embodiment to the interface device when the collaborative application is launched. The user identification data identifies the user corresponding to a Skype application associated with the collaborative application. Accordingly the interface device can learn whether any Skype application is running when the collaborative application is started and the user can be notified of information on the Skype application that is being used via the interface device .

With the network terminal according to the first embodiment the communication status monitoring application stores data in the work area A of the network terminal indicating that collaborative control is being performed when the specified collaborative application begins such collaborative control. The communication status monitoring application stores data in the work area A indicating that collaboration control has ended when the specified collaborative application ends collaborative control. Accordingly data indicating whether one of the collaborative applications is performing collaborative control can be shared among the collaborative application A and collaborative application B running in the user environments. The above data is updated each time a collaborative application is started or ended.

With the network terminal and network system according to the first embodiment the collaborative application sets itself as the specified collaborative application when monitoring results acquired from the communication status monitoring application indicate that none of the collaborative applications is performing collaborative control and when another IP telephone terminal requests via the network to the Skype application corresponding to the collaborative application. Accordingly regardless of whether the collaborative applications A and B running on the operating system are the specified collaborative application the collaborative applications A and B can receive an access request from another external IP telephone terminal on the network . Therefore each of the running Skype applications A and B can respond to an access request from the IP telephone terminal . The Skype applications A and B operated by users A and B can each await an access request. This configuration prevents communication interference between a Skype application collaborating with the interface device in response to an access request and a Skype application operating in another user environment and enables the Skype applications to respond without error to access requests from the IP telephone terminal .

With the network terminal and network system according to the first embodiment the collaborative applications A and B transfer data via the Skype applications A and B to the IP telephone terminal which is the source of an access request indicating that collaborative control cannot be controlled when the acquired monitoring results indicate that another collaborative application is currently performing collaborative control. Accordingly since another Skype application is currently engaged in communications the collaborative applications A and B can notify the source of the access request that communication cannot be established using the Skype application indicated in the access request.

Next a network system according to a second embodiment will be described with reference to . The network system according to the second embodiment periodically monitors users that can make telephone calls. Since the structure of the network terminal in the second embodiment is identical to that in the first embodiment a description of this structure will not be repeated.

Here the collaborative application launching process of periodically monitoring users that have launched collaborative applications will be described with reference to the flowchart in . is a flowchart illustrating steps in the collaborative application launching process according to second embodiment performed on the network terminal . The following description will assume that user A launches the collaborative application A when neither the collaborative application A nor collaborative application B is running. In S at the beginning of this process the collaborative application A acquires the Windows user name user A for the user environment A in which the collaborative application A is running as the user identification data. The collaborative application A transmits the acquired user name user A to the interface device via the USB interface . In S the interface device records the user name for user A in the memory A.

In S the collaborative application A performs an operation to wait for a prescribed interval one minute for example before returning to S and repeating the process described above. Naturally the interval of waiting can be set arbitrarily and is not limited to one minute.

Next a collaborative application ending process for periodically monitoring users who have ended the collaborative application will be described with reference to the flowchart in . is a flowchart illustrating steps in the collaborative application ending process performed on the interface device . The following example assumes that both the collaborative applications A and B are running in parallel and that the interface device has been shut down. When the interface device is started the interface device first receives the user names for the currently running collaborative applications user A and user B from the collaborative applications A and B and records this data in the memory A as user identification data.

In S of the interface device determines whether there exists a collaborative application that has not operated for a prescribed interval one minute for example or longer. Since the interface device receives in S user names from the running collaborative applications A and B every minute in the second embodiment the interface device determines that a collaborative application for a certain user has not been running for at least the prescribed interval when a user that existed in the previous reception no longer exists in the current reception. In such a case the interface device deletes the user name for the collaborative application that has not be running for a minute or more from the memory A canceling the registration.

The method of determining whether a collaborative application is not running for a prescribed interval or more is not limited to the method described above. For example the interface device may also receive in S the time at which a user name was acquired from the running collaborative applications A and B in addition to the user name of the user operating the collaborative application. By comparing the acquired time to the current time the interface device can determines whether the collaborative application has not been running for the prescribed interval or greater.

In S the interface device performs an operation to wait for a prescribed interval one minute before returning to S and repeating the process described above.

As described above with the network terminal and network system according to the second embodiment the collaborative applications A and B transmit user identification data possessed by the Skype applications A and B corresponding to the collaborative applications A and B to the interface device at prescribed intervals while the collaborative applications A and B are running. In this way the interface device can periodically update data indicating whether the collaborative applications A and B are running. Since user identification data for collaborative applications currently running is updated periodically it is possible to learn reliably which of the collaborative applications is running even when a collaborative application quits unexpectedly due to a program error for example.

While the invention has been described in detail with reference to the embodiments thereof it would be apparent to those skilled in the art that various changes and modifications may be made therein without departing from the spirit of the invention. For example while the communication status monitoring application operates on the network terminal in the first and second embodiments described above the present invention is not limited to this configuration. The communication status monitoring application may be executed on an interface device as shown in . In a communication status monitoring application and a control application operate on the interface device . The interface device has the same configuration as the interface device according to the first embodiment except that the interface device has the communication status monitoring application and the control application . The collaborative applications A and B exchange data DD with the communication status monitoring application via the device driver . A network terminal has the same configuration as the network terminal according to the first embodiment except that the network terminal has no communication status monitoring application .

The operations of this system will be described next. In this description it will be assumed that the user initiates a phone call while the collaborative applications A and B are running in parallel. The process according to this modification is the substantially same as the flowchart of according to the first embodiment. More specifically in S using the cursor moving button of the interface device user A selects user A as the specified user for initiating a phone call. The control application sets the collaborative application A to an active state via the device driver . Next the control application receives data of a contact list from the Skype application A via the collaborative application A and displays this contact list on the monitor of the interface device . In S user A uses the cursor moving button to select a desired contact from the contact list and presses the start call button to start the telephone call.

When beginning the phone call the control application queries the communication status monitoring application for the call status S . In S the communication status monitoring application reports the status to the control application based on whether a busy flag has been written to the memory A of the interface device . If a busy flag has not been written to the memory A indicating that a telephone call can be placed S YES the control application transfers start call data to the communication status monitoring application S . The collaborative application A now in an active state begins implementing collaborative control to enable the exchange of data DD between the interface device and the Skype application A S and the collaborative application A performs the processes of S and S. However if the busy flag has been written to the memory A indicating that a telephone call can be placed S NO the control application notifies the user A that a call cannot be placed because another user is engaged in communications S .

Consequently this configuration enables communication using only the Skype application A that user A has specified on the interface device while disallowing communications with the Skype application B even though both of the Skype applications A and B are running simultaneously. Therefore interference between the Skype applications A and B is also prevented in the configuration shown in .

While users are registered in the memory A of the interface device or in the embodiments and modification described above the present invention is not limited to this configuration and users may be registered in the work area A of the network terminal or instead. In this case the network terminal or transmits the list of registered users to the interface device or via the device driver . With this configuration a list of users can be shared among a plurality of interface devices or connected to the network terminal or .

Further in the first embodiment the collaborative application A makes the determination by checking whether the communication status monitoring application has written a busy flag to the work area A on the network terminal . However The collaborative application A makes the determination by checking whether the communication status monitoring application has written a busy flag to a storage device accessible from any application program running in the user environments A and B such as a registry on the hard disk .

In the embodiments and modification described above the collaborative applications SA and B transfer start call data and end call data to the communication status monitoring application but it should be apparent that the communication status monitoring application may be configured to query the collaborative applications A and B at prescribed intervals regarding whether collaborative control is being performed. Since data regarding collaborative applications performing control is updated periodically in this configuration the communication status monitoring application can reliably learn which of the collaborative application is performing control even when a collaborative application quits unexpectedly due to a program error for example.

While the two user environments A and B are described as user environments running in parallel on the network terminal and according to the first and second embodiments and modification it should be apparent that the effects of the present invention can be obtained when three or more user environments are running in parallel. Further in the first and second embodiments the collaborative applications perform handling of the device driver when in an active state and end such handling when leaving the active state. However the collaborative applications may be configured to handle the device driver at all times but to transfer data DD only when active and not when inactive.

