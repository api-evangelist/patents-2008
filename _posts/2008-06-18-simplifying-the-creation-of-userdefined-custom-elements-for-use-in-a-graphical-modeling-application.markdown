---

title: Simplifying the creation of user-defined custom elements for use in a graphical modeling application
abstract: The present invention can include a solution for capturing user-defined custom elements for use in a graphical modeling application. Such a system can include a graphical modeling application and a custom element definition tool. The graphical modeling application can be configured to create semantic models that contain a static graphical elements and semantic data elements. The custom element definition tool can be configured to create a user-defined custom element for the graphical modeling application. The user-defined custom element can consist of one or more static graphical element and/or one or more semantic data element.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08010479&OS=08010479&RS=08010479
owner: International Business Machines Corporation
number: 08010479
owner_city: Armonk
owner_country: US
publication_date: 20080618
---
The present invention relates to the field of graphical modeling applications and more particularly to simplifying the creation of user defined custom elements for use in a graphical modeling application.

Graphical modeling applications are popular tools for creating semantic models that are used across a wide variety of disciplines. Generally a graphical modeling application includes a multitude of static graphical elements objects and relationships that a user can manipulate when creating a semantic model. Through continued use of the graphical modeling application users often realize that they are repeatedly creating certain configurations of static graphical elements.

To eliminate this repetitive process graphical modeling applications often provide a mechanism for the user to save the selected elements as a custom element. However the provided mechanisms are generally cumbersome and require the user to understand how to create the custom element using an application programming interface API . Further the user defined custom element created by current mechanisms is static and unable to be shared among other users without repeating the creation process.

Attempts have been made to improve the process by which a user can define custom elements such as storing the custom element as a template of the graphical modeling application. Current processes however still lack simplicity and fail to capture the semantic content of the element. That is the graphical illustration of the custom element is captured without the additional data contained within the static graphical elements.

The present invention can be implemented in accordance with numerous aspects consistent with the materials presented herein. One aspect of the present invention can include a system that simplifies the creation of user defined custom elements for use in a graphical modeling application. Such a system can include a graphical modeling application and a custom element definition tool. The graphical modeling application can be configured to create semantic models that contain a static graphical elements and semantic data elements. The custom element definition tool can be configured to create a user defined custom element for the graphical modeling application. The user defined custom element can consist of one or more static graphical element and or one or more semantic data element.

Another aspect of the present invention can include a method f system that simplifies the creation of user defined custom elements for use in a graphical modeling application. Compositional and semantic data related to a user selected static graphical element of a semantic model can be captured within a graphical modeling application. The captured data can be stored as a user defined custom element within one or more custom element definition files. The custom element definition files can be stored in a user specified location that is local to and accessible by the graphical modeling application. The user defined custom element can be automatically registered with the graphical modeling application making the user defined custom element accessible within the graphical modeling application.

Still another aspect of the present invention can include a method for sharing user defined custom elements for use in a graphical modeling application. The user defined custom elements can be created using a custom element definition tool within a graphical modeling interface. The user defined custom element can include one or more static graphical elements and or one or more semantic data elements. A user defined custom element can be contained within a custom element definition file. A copy of the custom element definition file can be distributed to multiple users of the graphical modeling application.

The present invention discloses a solution that can simplify the creation of user defined custom elements for use in a graphical modeling application. This solution can utilize a custom element definition tool to capture elements identified by a user within the graphical modeling application. The custom element definition tool can save the captured elements as a user defined custom element. The user defined custom element can be stored as one or custom element definition files local to the graphical modeling application. The custom element definition tool can then interface with the graphical modeling application to make the user define custom element accessible within the graphical modeling application. Further the custom element definition files can be distributed to other users to share the user defined custom element.

The present invention may be embodied as a method system or computer program product. Accordingly the present invention may take the form of an entirely hardware embodiment an entirely software embodiment including firmware resident software micro code etc. or an embodiment combining software and hardware aspects that may all generally be referred to herein as a circuit module or system. Furthermore the present invention may take the form of a computer program product on a computer usable storage medium having computer usable program code embodied in the medium. In a preferred embodiment the invention is implemented in software which includes but is not limited to firmware resident software microcode etc.

Furthermore the invention can take the form of a computer program product accessible from a computer usable or computer readable medium providing program code for use by or in connection with a computer or any instruction execution system. For the purposes of this description a computer usable or computer readable medium can be any apparatus that can contain store communicate propagate or transport the program for use by or in connection with the instruction execution system apparatus or device. The computer usable medium may include a propagated data signal with the computer usable program code embodied therewith either in baseband or as part of a carrier wave. The computer usable program code may be transmitted using any appropriate medium including but not limited to the Internet wireline optical fiber cable RF etc.

Any suitable computer usable or computer readable medium may be utilized. The computer usable or computer readable medium may be for example but not limited to an electronic magnetic optical electromagnetic infrared or semiconductor system apparatus device or propagation medium. Examples of a computer readable medium include a semiconductor or solid state memory magnetic tape a removable computer diskette a random access memory RAM a read only memory ROM an erasable programmable read only memory EPROM or Flash memory a rigid magnetic disk and an optical disk. Current examples of optical disks include compact disk read only memory CD ROM compact disk read write CD R W and DVD. Other computer readable medium can include a transmission media such as those supporting the Internet an intranet a personal area network PAN or a magnetic storage device. Transmission media can include an electrical connection having one or more wires an optical fiber an optical storage device and a defined segment of the electromagnet spectrum through which digitally encoded content is wirelessly conveyed using a carrier wave.

Note that the computer usable or computer readable medium can even include paper or another suitable medium upon which the program is printed as the program can be electronically captured via for instance optical scanning of the paper or other medium then compiled interpreted or otherwise processed in a suitable manner if necessary and then stored in a computer memory.

Computer program code for carrying out operations of the present invention may be written in an object oriented programming language such as Java Smalltalk C or the like. However the computer program code for carrying out operations of the present invention may also be written in conventional procedural programming languages such as the C programming language or similar programming languages. The program code may execute entirely on the user s computer partly on the user s computer as a stand alone software package partly on the user s computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario the remote computer may be connected to the user s computer through a local area network LAN or a wide area network WAN or the connection may be made to an external computer for example through the Internet using an Internet Service Provider .

A data processing system suitable for storing and or executing program code will include at least one processor coupled directly or indirectly to memory elements through a system bus. The memory elements can include local memory employed during actual execution of the program code bulk storage and cache memories which provide temporary storage of at least some program code in order to reduce the number of times code must be retrieved from bulk storage during execution.

Input output or I O devices including but not limited to keyboards displays pointing devices etc. can be coupled to the system either directly or through intervening I O controllers.

Network adapters may also be coupled to the system to enable the data processing system to become coupled to other data processing systems or remote printers or storage devices through intervening private or public networks. Modems cable modem and Ethernet cards are just a few of the currently available types of network adapters.

The present invention is described below with reference to flowchart illustrations and or block diagrams of methods apparatus systems and computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and or block diagrams and combinations of blocks in the flowchart illustrations and or block diagrams can be implemented by computer program instructions. These computer program instructions may be provided to a processor of a general purpose computer special purpose computer or other programmable data processing apparatus to produce a machine such that the instructions which execute via the processor of the computer or other programmable data processing apparatus create means for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

These computer program instructions may also be stored in a computer readable memory that can direct a computer or other programmable data processing apparatus to function in a particular manner such that the instructions stored in the computer readable memory produce an article of manufacture including instruction means which implement the function act specified in the flowchart and or block diagram block or blocks.

The computer program instructions may also be loaded onto a computer or other programmable data processing apparatus to cause a series of operational steps to be performed on the computer or other programmable apparatus to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide steps for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

The user can utilize the graphical modeling application on a client device . The graphical modeling application can represent a variety of software applications designed for the creation and or manipulation of semantic models . A semantic model created within the graphical modeling application can include static elements relationship elements user defined custom elements and semantic data .

It is important to emphasize that the semantic models of system can utilize various model types modeling languages and or degrees of complexity. Examples of modeling types upon which the semantic model can be based can include but are not limited to the Component Object Model COM the Document Object Model DOM the System Object Model SOM the Network Object Model NOM the Topology Definition Model TDM and the like.

These various model types can support a variety of modeling languages including but not limited to the Unified Modeling Language UML the Business Process Execution Language BPEL the Model Definition Language MDL the Business Process Modeling Notation BPMN the Web Services Choreography Description Language WS CDL and the like. It is important to note that the specific model type and or modeling language used needs to be supported by the graphical modeling application .

Additionally the semantic model can contain multiple levels of complexity as found in the real world system that it represents. For example a semantic model of an enterprise business system can be modeled using the Topology Definition Model TDM . Such a semantic model can capture the relationship elements between various business applications and their corresponding server elements as well as the semantic data that describes the mapping between them. For example the business application can require a specific version of database software which can only be installed on a specific type of server.

The static elements can represent the multitude of graphical elements that come packaged with the graphical modeling application such as the rectangles and diamonds of a flow chart. It is important to note that the basic definition of the static elements is not modifiable by the user. That is a user cannot change a static rectangle element to a circular static element .

Relationship elements can represent the variety of graphical relational connectors that can be created between static elements . Examples can include but are not limited to solid lines single arrowhead lines double arrowhead lines dashed lines and the like.

A user defined custom element can represent a dynamic element defined by the user using the custom element definition tool . The user defined custom element can be a configuration of static elements and relationship elements selected by the user . For example static elements representing a computer a data store and a software program can be connected by relationship elements to be stored as a database server custom element . Unlike the static elements of the graphical modeling application the definition of the user defined custom element can be modified by the user .

Static elements user defined custom elements and relationship elements can additionally include semantic data . The semantic data can represent a variety of data items that can be defined and associated with the other elements and . For example a relationship element can have a specified cardinality or type that defines the association between the static and or user defined custom elements .

It is important to note that user defined custom elements created within the means of current graphical modeling applications lack the inclusion of the semantic data associated with their constituents. That is current graphical modeling applications can only capture the graphical presentation of the user defined custom element without the underlying semantic data .

The user defined custom element can be created by the custom element definition tool . The custom element definition tool can represent a software program configured to capture the graphical and semantic elements and of a user defined custom element and interface with the graphical modeling application to make the user defined custom element accessible to the user . The custom element definition tool can automate the definition process used by current graphical modeling applications such as interfacing with the API of the graphical modeling application .

The custom element definition tool can be invoked by the user from within the graphical modeling application such as through a menu item in a context menu. When defining a custom element the custom element definition tool can utilize a user interface not shown to request additional identifying information such as a label and a description for the custom element .

The custom element definition tool can generate one or more custom element definition files to contain the user defined custom element . It is important to emphasize that the custom element definition files detail not only the graphical configuration of the custom element but also includes the semantic data .

The custom element definition files can be stored in a data store local to the client device and accessible by the graphical modeling application . The storage location of the custom element definition files for the user defined custom element can be entered by the user as identifying information.

Once the user defined custom element is saved and made accessible to the graphical modeling application the user can utilize the custom element within the graphical modeling application like other static elements . For example the custom element can be displayed within a selection palette where the user can drag the custom element into a semantic model . Unlike the other static elements the user can be presented with additional commands for the modification of the custom element .

Since the user defined custom element is encapsulated in the custom element definition files a copy of the user defined custom element can be shared with other users utilizing the graphical modeling application and custom element definition tool . A copy of the custom element definition files can be transmitted over a network to the client device of another user .

User can store the custom element definition files in storage location within a data store that is identical to that of the authoring user . The custom element definition tool can interface with the graphical modeling application to enable the user to utilize the user defined custom element .

Further the custom element definition files can be managed like other business documents using a version control system VCS . A copy of the custom element definition files can be transmitted over a network for storage in the repository of the VCS . The custom element definition files stored within the repository can accessed by additional users who can store a copy of the custom element definition files in their local data store .

Network can include any hardware software and firmware necessary to convey data encoded within carrier waves. Data can be contained within analog or digital signals and conveyed though data or voice channels. Network can include local components and data pathways necessary for communications to be exchanged among computing device components and between integrated device components and peripheral devices. Network can also include network equipment such as routers data lines hubs and intermediary servers which together form a data network such as the Internet. Network can also include circuit based communication components and mobile communication components such as telephony switches modems cellular communication towers and the like. Network can include line based and or wireless communication pathways.

As used herein presented data stores and can be a physical or virtual storage space configured to store digital information. Data stores and can be physically implemented within any type of hardware including but not limited to a magnetic disk an optical disk a semiconductor memory a digitally encoded plastic memory a holographic memory or any other recording medium. Data stores and can be a stand alone storage unit as well as a storage unit formed from a plurality of physical devices. Additionally information can be stored within data stores and in a variety of manners. For example information can be stored within a database structure or can be stored within one or more files of a file storage system where each file may or may not be indexed for information searching purposes. Further data stores and or can utilize one or more encryption mechanisms to protect stored information from unauthorized access.

Method can begin with step where a user can select semantic model elements within a graphical modeling application. It is important to note that the selected semantic model elements can include static graphical elements and the relationship elements and semantic data between the static graphical elements. The user can select a command to save the selected elements as a custom element in step . In step the graphical modeling application can invoke the custom element definition tool.

The custom element definition tool can request additional identifying data from the user in step . In step the user can entered the requested data. The custom element definition tool can serialize the graphical and semantic data of the selected elements and the user entered identifying information into one or more custom element definition files in step .

In step the custom element definition tool can store the custom element definition files in a local storage are that can be accessed by the graphical modeling application. The custom element definition tool can interface with the graphical modeling application to make the custom element accessible within the graphical modeling application in step .

In step the graphical modeling application can present the custom element within a user interface. The user can make a copy of the custom element definition files accessible to other users in step . A secondary user can copy the custom element definition files to an identical location in a local data store in step .

In step the custom element definition tool can interface with the graphical modeling application to make the custom element accessible within the graphical modeling application. The secondary user can utilize the custom element within the graphical modeling application in step .

Interface can illustrate a general user interface of a graphical modeling application in which a user can create a user defined custom element . The interface can include an element selection palette and a modeling workspace . The element selection palette can be configured to visually present a multitude of static elements for use within the modeling workspace .

Static elements can be placed by a user from the element selection palette and into the modeling workspace . The modeling workspace can represent an area of the interface where the user can view and or manipulate static elements to build a semantic model.

An interaction mechanism such as a mouse can be used by the user to identify selected elements of a semantic model to save as a user defined custom element . Identification of the selected elements can be performed in a variety of manners including but not limited to a selection tool a context menu command a series of keystrokes a combination of one or more keystrokes and or one or more mouse clicks a toolbar command a drag and drop behavior and the like. In this example the selected elements have been identified with a rectangular box selection tool.

Once the selected elements have been identified the user can request to store the selected elements as a user defined custom element . Requesting to store the selected elements as a user defined custom element can invoke the custom element definition tool. The invocation of the custom element definition tool can be requested in a variety of ways including but not limited to a context menu command a toolbar button a shortcut key and interface button and the like.

It should be noted that the invocation of the custom element definition tool to create the user defined custom element can appear transparent to the user such as through the use of a menu command as shown in this example. That is the invocation of the custom element definition tool can appear similar to any other functions provided by the graphical modeling application.

In this example the user has accessed a context menu with the interaction mechanism . From the context menu the user can select a command that can invoke the custom element definition tool.

Selection of the custom element definition tool command can present the user with a definition window . The definition window can allow the user to enter additional identifying data items necessary for the custom element definition tool to save the user defined custom element . As shown in this example the identifying data items include the element name the element description the icon to visually represent the user defined custom element and the location where the custom element definition files are to be stored.

Once the identifying data items have been entered the user can select the save button to finalize the transaction. The custom element definition tool can then store the selected elements and make them accessible within the interface of the graphical modeling application as a user defined custom element .

The custom element can be presented to the user within the element selection palette . To emphasize the distinction of the custom element to the user the element selection palette can present the custom element in an area separate to the static elements. The user can utilize the custom element from the element selection palette such as by placing it in the modeling workspace .

Unlike the static elements of interface the custom element can have an associated set of modification commands that can be accessed within the interface . As shown in this example the modification commands can be accessed via a custom element context menu . A selection of a modification command by the user can allow the contents semantic textual and graphical of the custom element to be changed.

The diagrams in illustrate the architecture functionality and operation of possible implementations of systems methods and computer program products according to various embodiments of the present invention. In this regard each block in the flowchart or block diagrams may represent a module segment or portion of code which comprises one or more executable instructions for implementing the specified logical function s . It should also be noted that in some alternative implementations the functions noted in the block may occur out of the order noted in the figures. For example two blocks shown in succession may in fact be executed substantially concurrently or the blocks may sometimes be executed in the reverse order depending upon the functionality involved. It will also be noted that each block of the block diagrams and or flowchart illustration and combinations of blocks in the block diagrams and or flowchart illustration can be implemented by special purpose hardware based systems that perform the specified functions or acts or combinations of special purpose hardware and computer instructions.

The terminology used herein is for the purpose of describing particular embodiments only and is not intended to be limiting of the invention. As used herein the singular forms a an and the are intended to include the plural forms as well unless the context clearly indicates otherwise. It will be further understood that the terms comprises and or comprising when used in this specification specify the presence of stated features integers steps operations elements and or components but do not preclude the presence or addition of one or more other features integers steps operations elements components and or groups thereof.

The corresponding structures materials acts and equivalents of all means or step plus function elements in the claims below are intended to include any structure material or act for performing the function in combination with other claimed elements as specifically claimed. The description of the present invention has been presented for purposes of illustration and description but is not intended to be exhaustive or limited to the invention in the form disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art without departing from the scope and spirit of the invention. The embodiment was chosen and described in order to best explain the principles of the invention and the practical application and to enable others of ordinary skill in the art to understand the invention for various embodiments with various modifications as are suited to the particular use contemplated.

