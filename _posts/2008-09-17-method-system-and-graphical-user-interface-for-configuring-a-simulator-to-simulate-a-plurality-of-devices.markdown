---

title: Method, system and graphical user interface for configuring a simulator to simulate a plurality of devices
abstract: A method, system and graphical user interface for configuring a simulator. A graphical user interface may be used to define a configurable device profile, where a large number of devices for simulation by a simulator may be created based upon the configurable device profile. Once created, the devices may be individually configured and/or configured in groups. Additionally, the configuration of the devices may determine how the simulator generates and/or outputs simulated device data for the devices. For example, an attribute may be associated with a device which defines a format of the simulated device data, a rate at which the simulated device data is output, a range of values for the simulated device data, or an operating parameter of the device. An attribute specifying the communicative coupling of the devices may also be defined. Further, the simulated device data may include a data value.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08893035&OS=08893035&RS=08893035
owner: Accenture Global Services Limited
number: 08893035
owner_city: Dublin
owner_country: IE
publication_date: 20080917
---
The present application is related to U.S. patent application Ser. No. 12 212 555 filed Sep. 17 2008 entitled METHOD AND SYSTEM FOR SIMULATING A PLURALITY OF DEVICES naming Michael Biltz Jonathan Hsu Sean Stauth and Graeme MacDonald as inventors assigned to the assignee of the present invention. That application is incorporated herein by reference in its entirety and for all purposes.

Simulation is often used to monitor debug or otherwise analyze a system or device. For example a component designed to access an analog signal output by a sensor may be tested using a sensor simulator. The sensor simulator may be coupled to the component or device under test where a simulated signal voltage may be accessed by the device under test for analysis thereof.

One type of conventional sensor simulator that is commercially available provides for single sensor simulation. In other words the software and or hardware only provides a simulated output for a single sensor and therefore is not scalable. Additionally conventional sensor simulators simulate the signal characteristics of a signal output by a sensor e.g. a voltage level etc. Therefore conventional sensor simulators do not provide for good simulation of a sensor designed to output digital data in packetized formats.

Although systems with few devices may be analyzed using conventional simulators conventional simulators are not suitable for analyzing systems with a large number of devices. For example systems for monitoring or tracking data from automobiles other vehicles manufacturing sensors or the like often involve thousands or even millions of devices.

Accordingly many instances of a conventional single device simulator would have to be individually created and configured to enable simulation of the numerous devices thereby providing a costly and inefficient solution. Additionally even if such a solution were implemented the large amount of information output by the individual simulators would require extensive and costly processing resources. Moreover given that conventional simulators output a simulated signal voltage which must be converted or otherwise processed to produce usable data the amount of processing resources is further increased and the existing problems are exacerbated.

Accordingly a need exists for a simulator which enables a user to more easily and efficiently define a large number of devices for simulation. A need also exists for a simulator which enables a user to more easily and efficiently configure the defined devices ether individually or in groups. Further a need exists for such a simulator which generates simulated device data that is easier and less costly to process. Embodiments of the present invention provide novel solutions to these needs and others as described below.

Embodiments of the present invention are directed to a method system and graphical user interface for configuring a simulator. More specifically a graphical user interface may be used to define a configurable device profile where a large number of devices for simulation by a simulator may be created based upon the configurable device profile. Once created the devices may be individually configured and or configured in groups. Additionally the configuration of the devices e.g. defined by one or more attributes specified in the device profile configuration and or device configuration may determine how the simulator generates and or outputs simulated device data for the devices. For example an attribute may be associated with a device which defines a format of the simulated device data a rate at which the simulated device data is output a range of values for the simulated device data or an operating parameter of the device. An attribute specifying the communicative coupling of the devices e.g. a relationship of one device with respect to other coupled devices may also be defined. Further the simulated device data may include a data value e.g. as opposed to a simulated voltage level in one embodiment.

In one embodiment a method of configuring a simulator includes generating a graphical user interface for display on a computer system the graphical user interface for enabling a user to define at least one attribute associated with a device profile the graphical user interface further for enabling a user to define a plurality of devices for instantiation by the simulator based on the device profile the graphical user interface further for enabling a user to define a quantity of the plurality of devices for instantiation by the simulator wherein the plurality of devices are associated with the at least one attribute. Configuration data for configuring the simulator is generated based upon user interaction with the graphical user interface. The configuration data is stored for access by the simulator during a simulation of the plurality of devices wherein the simulator is operable to generate simulated device data for the plurality of devices in accordance with the configuration data and wherein the simulated device data is for use in analyzing performance of a component coupled to receive the simulated device data. The at least one attribute may be selected from a group consisting of a format of the simulated device data a rate at which the simulated device data is output by the simulator a range of values for the simulated device data and an operating parameter of at least one of the plurality of devices for inclusion in the simulated device data.

In another embodiment an on screen graphical user interface for configuring a simulator includes a first display region for enabling a user to define at least one attribute associated with a device profile. The graphical user interface also includes a second display region for enabling a user to define a plurality of devices for instantiation by the simulator based on the device profile wherein the second display region is further for enabling a user to define a quantity of the plurality of devices for instantiation by the simulator wherein the plurality of devices are associated with the at least one attribute. Configuration data generated based upon user interaction with the first and second display regions are for configuring the simulator to simulate the plurality of devices wherein the simulator is operable to generate simulated device data for the plurality of devices in accordance with the configuration data and wherein the simulated device data is for use in analyzing a component coupled to the simulator. The graphical user interface may also include a third display region for enabling a user to define a customized attribute for at least one device of the plurality of devices wherein the customized attribute is unique to the at least one device and wherein the customized attribute is for generating the configuration data for the at least one device. A fourth display region may enable a user to define a communicative coupling of the plurality of devices and wherein the communicative coupling of the plurality of devices is for generating the configuration data for the plurality of devices.

Reference will now be made in detail to embodiments of the present invention examples of which are illustrated in the accompanying drawings. While the present invention will be discussed in conjunction with the following embodiments it will be understood that they are not intended to limit the present invention to these embodiments alone. On the contrary the present invention is intended to cover alternatives modifications and equivalents which may be included with the spirit and scope of the present invention as defined by the appended claims. Furthermore in the following detailed description of the present invention numerous specific details are set forth in order to provide a thorough understanding of the present invention. However embodiments of the present invention may be practiced without these specific details. In other instances well known methods procedures components and circuits have not been described in detail so as not to unnecessarily obscure aspects of the present invention.

Some regions of the detailed descriptions which follow are presented in terms of procedures logic blocks processing and other symbolic representations of operations on data bits within a computer memory. These descriptions and representations are the means used by those skilled in the data processing arts to most effectively convey the substance of their work to others skilled in the art. In the present application a procedure logic block process or the like is conceived to be a self consistent sequence of steps or instructions leading to a desired result. The steps are those requiring physical manipulations of physical quantities. Usually although not necessarily these quantities take the form of electrical or magnetic signals capable of being stored transferred combined compared and otherwise manipulated in a computer system.

It should be borne in mind however that all of these and similar terms are to be associated with the appropriate physical quantities and are merely convenient labels applied to these quantities. Unless specifically stated otherwise as apparent from the following discussions it is appreciated that throughout the present invention discussions utilizing the terms such as aborting accepting accessing adding adjusting analyzing applying assembling assigning balancing blocking calculating capturing combining comparing collecting configuring creating debugging defining delivering depicting detecting determining displaying establishing executing forwarding flipping generating grouping hiding identifying initiating instantiating interacting modifying monitoring moving outputting performing placing presenting processing programming querying removing repeating resuming sampling simulating sorting storing subtracting suspending tracking transcoding transforming unblocking using or the like refer to the action and processes of a computer system or similar electronic computing device that manipulates and transforms data represented as physical electronic quantities within the computer system s registers and memories into other data similarly represented as physical quantities within the computer system memories or registers or other such information storage transmission or display devices.

In one embodiment system may enable monitoring or tracking of data generated by devices . For example devices may be sensors embedded devices portable electronic devices or components e.g. each within a different portion of a manufacturing line an automobile etc. which measure parameters of device environment e.g. the manufacturing line automobile etc. . The devices e.g. may output device data based upon those measurements. The device data may be accessed and or processed by business applications e.g. accessed via device abstraction layer to enable tracking or monitoring of the device environment e.g. by a user e.g. and or another system e.g. ERP system other system etc. .

Although only four devices e.g. are shown within device environment in it should be appreciated that device environment may include any number of devices in other embodiments. For example system may enable communication with a very large number e.g. hundreds thousands millions etc. of devices where the devices may be distributed remotely in one embodiment. Additionally it should be appreciated that more than one device environment may be coupled to device abstraction layer in other embodiments. For example where device environment represents a single automobile and system is capable of accessing and or processing data from millions of automobiles then there may be a large number e.g. millions etc. of device environments coupled to device abstraction layer in other embodiments. Further in one embodiment device environment may include devices e.g. which are physically separate from one another e.g. each disposed in different automobiles which are thousands of miles apart . As another example the sensors could be temperature sensors distributed over a large building where the sensors may be in communication with a fire system etc.

As shown more fully in embodiments of the present invention provide for simulation of the physical devices for performance testing of device abstraction layer and or business applications . Embodiments also provide for an efficient mechanism for generating devices for simulation.

During simulation of the devices e.g. simulator may output simulated device data for the devices e.g. where the simulated device data may represent a data value e.g. a temperature in degrees Fahrenheit instead of a signal voltage level e.g. 1.25 volts in one embodiment. The simulated device data may be accessed e.g. via device abstraction layer and or processed similar to the device data output by devices as explained with respect to .

It is appreciated that simulator may be used to perform load testing or otherwise analyze the performance of a component of a system under test e.g. components of device abstraction layer components of business applications etc. . The analysis may be based upon a result of the component s processing of the simulated device data e.g. output by simulator for devices . Additionally such analysis may be advantageously performed without deploying actual hardware e.g. devices in one embodiment.

Step involves configuring a simulator to simulate a plurality of devices. As shown in simulator configuration graphical user interface GUI is coupled to simulator for configuration thereof. More specifically configuration data generated based upon user interaction with GUI e.g. implemented in accordance with one or more of may be accessed by simulation engine and stored in database e.g. for access by simulation engine during simulation of devices . The configuration data may be generated based upon one or more attributes defined for a device profile e.g. using GUI and or for one or more devices automatically generated e.g. instantiated based upon the device profile e.g. using GUI . The instantiated devices can be simulated. For example the configuration data may include a format e.g. integer string decimal hex etc. of the simulated device data output by simulator a rate at which simulated device data is output by simulator a range of values for the simulated device data e.g. a temperature range for output data of a simulated temperature sensor an operating parameter e.g. battery life of one or more of the simulated devices etc.

In one embodiment step may involve a user defining a device profile e.g. using GUI with prescribed attributes that define a type or class of devices. The user may also advantageously define a number of devices e.g. to be automatically generated e.g. using GUI based upon the device profile. The devices may be configured individually and or in groups. Additionally the communicative coupling of the devices may be defined in step in one embodiment. Further device configuration data may be generated and or stored in step based upon the user interaction with the GUI e.g. for defining the device profile and or devices e.g. generated automatically based upon the device profile .

Step of process involves configuring a device abstraction layer e.g. to implement communication with the simulator e.g. . For example device configuration management component of device management component may download the configuration data e.g. generated in step from simulator and store it in database of device abstraction layer . Data may be accessed by component via data access layer in one embodiment. Component may configure device abstraction layer based upon the downloaded configuration data e.g. stored in database to enable communication with simulator . For example component may determine a format size etc. e.g. from the configuration data of the simulated device data output from simulator thereby enabling device abstraction layer to access process communicate etc. the simulated device data.

As shown in step involves the simulator automatically instantiating the plurality of devices e.g. for simulation by the simulator. For example individual memory constructs and or data structures may be created and or populated based upon device configuration data generated in step thereby instantiating the devices for simulation. The created data structure for each device to be simulated includes the information required to simulate the device including device profile attributes and or device state data. The data structure may include attributes associated with one device a group of devices a device profile e.g. used to define a plurality of devices or some combination thereof. The attributes may include a format for output of simulated device data a rate at which the simulated device data is output by the simulator a range of values for the simulated device data an operating parameter of a device for inclusion in the simulated device data output by the device current device state data etc. And in one embodiment the data structure may be a table organized into rows associated with different device types and columns associated with devices of each respective device type and therefore each cell of the table may include the attributes defined for the device associated with that cell and or attributes defined for a device profile upon which the device is based. Further although the instantiation of the plurality of devices is shown between steps and in it should be appreciated that the instantiation of the plurality of devices may occur at any time after user configuration of the devices and before simulation of the plurality of devices.

Step involves initiating simulation of the plurality of instantiated devices e.g. instantiated in step . In one embodiment the simulation may be initiated in response to an interaction with a button or graphical object e.g. of a GUI e.g. of for configuring the simulator.

Step involves communicating a request to a device abstraction layer for commands associated with the plurality of devices e.g. . For example notification client of simulator may communicate a request e.g. to notification management component of device abstraction layer where the request is for any commands associated with any of the simulated devices e.g. .

As shown in step involves the simulator accessing commands communicated from the device abstraction layer e.g. . One or more commands may be communicated to simulator in response to the request e.g. received from a simulator e.g. . The commands may include a request for simulated device data from one or more of the devices e.g. a request to change the frequency at which simulator outputs the simulated device data for the devices e.g. a customized command for execution by one or more of the devices or some combination thereof. Additionally one or more received commands e.g. may be forwarded e.g. represented by arrow of from a notification client e.g. to a device application programming interface API e.g. for execution in one embodiment. The commands may include identification information specifying an intended device for the command. It is appreciated that a command may also be specified for a class or grouping of devices as the case may be.

As shown in step involves automatically and simultaneously simulating a plurality of instantiated devices e.g. based upon execution of the commands. For example simulator e.g. simulation engine may generate and or output simulated device data in response to execution of a command for simulated output data thereby simulating an output of device data from the plurality of devices. As another example simulator e.g. simulation engine may adjust an output frequency for simulated device data e.g. a frequency at which the device automatically outputs data for one or more of the devices in response to execution of a command to change the output frequency of simulated device data thereby simulating a device responding to a configuration change affecting the frequency at which the device automatically outputs device data. And as a further example simulator e.g. simulation engine may perform a customized operation e.g. not reporting simulated device data for a predetermined period of time for one or more devices report simulated device data outside a predefined range to indicate the device has been placed in an alternate operating mode etc. in response to execution of a customized command thereby simulating performance of a customized command or operation by the device.

Simulation in step may only be performed for enabled devices in one embodiment. For example only commands associated with enabled devices e.g. enabled using button or region of GUI as shown in may be executed in step . Commands for disabled devices e.g. disabled using button or region of GUI as shown in may be ignored and therefore disabled devices may not be simulated in one embodiment.

Step involves generating simulated device data during simulation of the plurality of devices e.g. . As discussed herein simulator e.g. simulation engine may generate the simulated device data in response to a command e.g. from device abstraction layer e.g. notification management component . The simulated device data may be generated in accordance with configuration data e.g. accessed from database and therefore the simulated device data may have a format type size arrangement content etc. defined by the configuration data.

As shown in step involves communicating the simulated device data to a component coupled to the simulator e.g. . As discussed herein simulator e.g. simulation engine may output the simulated device data in response to a command e.g. from device abstraction layer e.g. notification management component . The simulated device data e.g. may be communicated to device monitoring component of device abstraction layer e.g. via data access layer in one embodiment where component may process the received simulated output data. And in one embodiment the simulated device data may be communicated to a component of business applications and or another component coupled thereto.

Step involves analyzing the performance of the component based upon a result of the processing of the simulated device data by the component e.g. of device abstraction layer of business applications etc. . In this manner the component accessing and or processing the simulated device data may be load tested to determine or improve processing efficiency of the component perform debugging operations on the component or the like. As another example the number of simulated devices the arrangement of simulated devices the format or other characteristics of the simulated device data output by the simulated devices etc. may be varied to further test the component.

As shown in step involves presenting the results of the simulation e.g. performed in one or more of steps to and or presenting the analysis of the component e.g. generated in step . The data may be presented using a GUI e.g. GUI of coupled to the simulator e.g. . Additionally in one embodiment the GUI for presenting the data in step may be implemented in accordance with GUI of .

Turning to shows exemplary on screen computer implemented GUI for presenting data associated with a simulation of a plurality of devices in accordance with one embodiment of the present invention. As shown in GUI includes data in columns associated with the devices listed in columns and . For example row is associated with the device e.g. one of devices identified by the device identifier in column of row e.g. TS120 and the device name in column of row e.g. Device A . In one embodiment the information listed in column for each device may be entered using region of GUI while the information listed in column may be entered using region of GUI .

Column contains simulated device data for each of the devices identified in columns and . For example where each of the devices are simulated temperature sensors the data listed in column may be temperature readings e.g. in degrees Fahrenheit in degrees Celsius etc. . Each row of column may include the date and time at which a respective data value of column was captured or generated. Additionally each row of column may include a battery status of a simulated device e.g. identified in a respective row of column and or . The battery status in column may be captured or generated at a time identified in a respective row of column in one embodiment.

The data listed in one or more of columns may be used to determine if a device is working correctly in one embodiment. For example where a data range is specified for a plurality of devices e.g. using region of GUI then a data value reported by the simulator e.g. and listed in column may indicate a problem with a device reporting a value outside of that range. For example where a range of 40 90 is specified e.g. using region then the data values in rows and of column may indicate that two devices e.g. Device C of row and Device H of row are not operating properly since they are not within the range of 40 90. Similarly unexpected data values reported in columns and or may also indicate a problem with a sensor. In this manner embodiments enable the simulation of faulty or inoperable devices thereby improving the accuracy and or realism of the simulation. The data from the faulty or inoperable devices may also enable the analysis of components which access this data for example as discussed with respect to step of .

In one embodiment the reliability of the simulated devices may be altered e.g. by configuring one or more devices using a GUI such as GUI GUI GUI GUI GUI GUI etc. to simulate real world device failure. In this manner the simulator e.g. may simulate one or more faulty or inoperable devices and therefore cause one or more devices to report bad data e.g. outside a predetermined range as discussed herein etc. . For example if a device is configured to have a 95 reliability factor or rate then the device may report good data 95 of the time and report bad data the other 5 of the time.

Although show the presentation of specific data it should be appreciated that GUI may include other data related to a simulation of devices e.g. and or analysis of a component accessing simulated device data e.g. as discussed with respect to step of . Additionally it should be appreciated that GUI may also enable a user to view past data transmissions e.g. simulated device data generated in the past of one or more simulated devices e.g. .

As shown in step involves displaying one or more computer implemented graphical user interfaces GUIs for creating and or configuring a device profile. A device profile may be a template or collection of configurable attributes e.g. defined by a user using the GUIs which may be used to create a plurality of device e.g. in one embodiment. The one or more GUIs displayed in step may be presented on a display device for interaction with a user thereby enabling a user to create and or configure a device profile. Additionally the GUIs displayed in step may be implemented in accordance with GUI of GUI of GUI of GUI of another GUI some combination thereof etc.

As shown in regions may be used to enter information for the device profile. For example region may be used to enter an identifier e.g. 28 for the device profile where the profile identification number may distinguish device profiles e.g. of the same device profile type with different attributes from one another. A profile type e.g. sensor for the device profile may be defined using region . For example if the device profile is associated with a sensor using region then the devices created from the device profile may be simulated sensors in one embodiment. Additionally region may be used to enter a name for the device profile where the profile name may distinguish device profiles e.g. of the same device profile type with different attributes from one another.

Regions may be used to define values for predetermined attributes. For example region may be used to define a profile data range. The profile data range may be an expected range associated with the simulated output data output by a simulator e.g. for a plurality of devices e.g. . Additionally the simulator e.g. may access the data range entered into region and generate simulated device data for one or more simulated devices e.g. which falls within the range entered into region .

Region may be used to define a frequency for generating or outputting simulated device data for the plurality of devices. For example if a value of 2 is entered into region then the simulator e.g. may output simulated device data for a simulated device e.g. created based upon the device profile defined using GUI every 2 minutes e.g. where the unit of frequency associated with region is minutes .

As shown in a battery life may be defined for the devices using region . For example if a value of 2 is entered into region then a battery life of 2 days e.g. where the unit of battery life associated with region is days may be associated with a device created based upon the device profile defined using GUI .

Region may be used to define a format for the simulated device data output for simulated devices e.g. created based upon a device profile defined using GUI . In one embodiment the format may correspond to how the simulated device data for the plurality of devices e.g. created based upon the device profile defined using GUI is assembled. Additionally a format defined using region may include decimal integer string hex another format etc.

Interaction with button or region may initiate display of GUI of in one embodiment where shows exemplary on screen computer implemented GUI for defining a custom attribute in accordance with one embodiment of the present invention. Region may be used to define a name for the custom attribute region may be used to define an attribute type for the custom attribute e.g. how the custom attribute will be expressed in the simulated device data region may be used to specify a description of the custom attribute and region may be used to define a data range for the simulated device data corresponding to the custom attribute e.g. similar to the predefined attribute data range defined using region of . Additionally interaction with button or region may associate the information defined in regions with the device profile e.g. defined using GUI and present the information in region of GUI .

Turning back to step involves associating one or more attributes with the device profile e.g. crated using GUI and or GUI . The one or more attributes may be predefined attributes e.g. associated with regions and or custom attributes e.g. defined using GUI and presented in region . Additionally the one or more attributes may be associated with the device profile in response to interaction with button or region in one embodiment.

Step involves displaying a GUI for creating devices e.g. to be simulated based upon the device profile e.g. created using GUI GUI etc. . The one or more GUIs displayed in step may be presented on a display device for interaction with a user thereby enabling a user to create a device for simulation by a simulator e.g. . Additionally the GUI displayed in step may be implemented in accordance with GUI of GUI of GUI of etc.

Region may enable a user to specify a name or root identifier for one or more of the devices created based upon the selected device profile. Additionally a description of the one or more devices may be entered in region .

Turning back to step involves associating the device profile with the devices. For example interaction with button or region of GUI may associate the device profile e.g. selected using region with one or more devices e.g. a number of devices specified in region . Once created the devices may be displayed in region of GUI e.g. as shown in .

Turning to step involves displaying a GUI for configuring the devices e.g. created using GUI . The one or more GUIs displayed in step may be presented on a display device for interaction with a user thereby enabling a user to further configure a device for simulation by a simulator e.g. . Additionally the GUI displayed in step may be implemented in accordance with GUI of GUI of etc.

Region may be used to change or define a device name e.g. similar to region of . In one embodiment the device name displayed in region may be automatically assigned upon creation of multiple devices using GUI . Additionally region may be used to change or define a device description e.g. similar to region of . In one embodiment the device description displayed in region may be automatically assigned upon creation of multiple devices using GUI .

As shown in region may be used to change or define a device data range e.g. similar to region of . Region may be used to change or define a frequency for generating or outputting simulated device data for the plurality of devices e.g. similar to region of . Additionally a battery life may be defined for the devices using region e.g. similar to region of . Region may be used to define a format for simulated device data e.g. similar to region .

Interaction with button or region may enable a user to define a custom attribute e.g. similar to button or region of where the interaction with region may initiate display of GUI of in one embodiment. Additionally interaction with button or region may apply the changes made to the device using GUI and or initiate display of GUI e.g. of etc. .

As shown in a device e.g. presented in region may be enabled for inclusion in a group of devices to be simulated using button or region . Alternatively an enabled device e.g. presented in region may be disabled for removing the device from a group of devices to be simulated where the device may be disabled using button or region .

Turning back to step involves accessing configuration information for the devices. The configuration information accessed in step may be based upon information entered using GUI GUI GUI or some combination thereof. In one embodiment the configuration information may include information entered using GUI and or GUI .

Step involves accessing grouping information defined for the devices. The grouping information accessed in step may include information about a number of groups into which devices e.g. those created using GUI are organized a name of each device grouping a listing of specific devices in each group and the like. It is appreciated that the simulator may respond to a command given to a device group. Additionally the grouping information may include configuration information defined for a group e.g. a data range applied to all devices of a group etc. . Information about a communicative coupling of the devices may also be included in the grouping information. For example information about how the devices are arranged with respect to one another and or the arrangement of communication channels or paths coupling the devices may be included in the grouping information accessed in step . Further in one embodiment the grouping information may be accessed based upon interaction with GUI as shown in GUI as shown in and or or the like.

As shown in devices displayed within region may be grouped into a plurality of groups. For example devices may be grouped into first group while devices may be grouped into second group . Grouping may be performed in one embodiment by highlighting or otherwise selecting devices to be grouped e.g. devices devices etc. and interacting with region e.g. of region to group the devices.

Once a grouping of devices is created information or attributes for each device within the grouping may be changed or defined e.g. using a GUI for configuring a device grouping . For example changing a data range of the simulated device data for the group of devices may change and or override a data range entered for individual devices of the group.

Additionally information about a communicative coupling of the devices may be defined using GUI in one embodiment. For example the simulator e.g. may be configured to generate and or output simulated device data for a single device e.g. Device A even though the group of device comprise multiple devices e.g. Device A Device B and Device C . As another example the simulator e.g. may be configured to generate and or output simulated device data for a group which represents an average of the respective simulated device data associated with each device of the group.

As shown in region of GUI includes device object group object hub object average object and select object . Instances of objects may be placed in region e.g. by dragging and dropping one of objects into region for defining components corresponding to the objects. For example device object may be dragged and dropped in region to create device e.g. similar to one of simulated devices where device may be a device for simulation by a simulator e.g. .

Group object may be dragged and dropped in region to create device group e.g. where the device group may be a group of devices for simulation by a simulator. For example group may include three devices as indicated by the number 3 within group . Further the devices within a device group e.g. may be viewed by interacting with the device group e.g. the graphical object representing device group where shows exemplary on screen computer implemented GUI with a device grouping including a plurality of devices in accordance with one embodiment of the present invention. As shown in device group may include devices and

Turning back to hub object may be dragged and dropped in region to create a hub component e.g. where the hub component may be a data hub for accessing packaging and communicating simulated output data from multiple devices or device groups. Average object may be dragged and dropped in region to create an average component e.g. where the average component may be a component for generating new simulated output data based upon an average of simulated device data for multiple devices e.g. and . Additionally select object may be dragged and dropped in region to create a select component e.g. where the select component may be a component for communicating simulated device data e.g. the simulated device data of device or selected from the simulated device data for multiple devices e.g. and .

In one embodiment objects may be placed and or arranged in region by dragging and dropping objects from region by dragging and dropping objects to new locations within region or the like. Additionally a communicative coupling may be defined using tools selected from region where the tools of region may include a line tool e.g. for connecting or coupling one object to another one object to a group of objects a group of objects to another group of objects etc. and or other tools. In this manner devices and may each be connected or coupled to average component device group may be connected or coupled to hub component or the like.

Accordingly GUI may be used to define how simulated device data is accessed collected and communicated. For example hub component may access and or package simulated device data from device group e.g. outputting simulated device data for each of the devices of device group and average component e.g. outputting simulated device data representing an average of the simulated device data from devices and . Hub component may access and or package simulated device data from select component e.g. outputting simulated device data from device or device device and device group e.g. outputting simulated device data for each of the devices of device group . Further hub component may access and or package simulated device data from hub components and . In this manner embodiments enable a user to define an arrangement and or communicative coupling of devices which may more accurately represent an arrangement of actual devices e.g. corresponding to each of the simulated components in a device environment e.g. of .

Components defined using objects may be configured using GUI . For example user interaction with an object representing the component to be configured may display a GUI e.g. of etc. for defining attributes or otherwise configuring the component. Alternatively the communication paths coupling the components in region may be configured. For example path may be configured e.g. by displaying a GUI or other configuration mechanism for configuring a path in response to a user interaction with path to report data for less than all of the devices of group

Turning back to step involves generating configuration data based upon configuration of a device profile and or devices e.g. . For example information entered using a GUI for defining a device profile e.g. GUI GUI GUI GUI etc. and or defining a device e.g. GUI GUI GUI GUI etc. may be accessed e.g. by simulation engine and used to generate configuration data. Step may be performed in response to interaction with button or region of GUI in one embodiment.

Step involves storing the configuration data for access by the simulator e.g. and or enabling simulation of the devices e.g. . The configuration data may be stored in a memory e.g. database accessible to the simulator e.g. . Step may be performed in response to interaction with button or region of GUI in one embodiment.

As shown in portions of the present invention are comprised of computer readable and computer executable instructions that reside for example in computer system platform and which may be used as a part of a general purpose computer network not shown . It is appreciated that computer system platform of is merely exemplary. As such the present invention can operate within a number of different systems including but not limited to general purpose computer systems embedded computer systems laptop computer systems hand held computer systems portable computer systems and stand alone computer systems for instance.

In one embodiment depicted by dashed lines computer system platform may comprise at least one processor and at least one memory . Processor may comprise a central processing unit CPU or other type of processor. Depending on the configuration and or type of computer system environment memory may comprise volatile memory e.g. RAM non volatile memory e.g. ROM flash memory etc. or some combination of the two. Additionally memory may be removable non removable etc.

In other embodiments computer system platform may comprise additional storage e.g. removable storage non removable storage etc. . Removable storage and or non removable storage may comprise volatile memory non volatile memory or any combination thereof. Additionally removable storage and or non removable storage may comprise CD ROM digital versatile disks DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store information for access by computer system platform .

As shown in computer system platform may communicate with other systems components or devices via communication interface . Communication interface may embody computer readable instructions data structures program modules or other data in a modulated data signal e.g. a carrier wave or other transport mechanism. By way of example and not limitation communication interface may couple to wired media e.g. a wired network direct wired connection etc. and or wireless media e.g. a wireless network a wireless connection utilizing acoustic RF infrared or other wireless signaling etc. .

Communication interface may also couple computer system platform to one or more input devices e.g. a keyboard mouse pen voice input device touch input device etc. . Additionally communication interface may couple computer system platform to one or more output devices e.g. a display speaker printer etc. .

As shown in graphics processor may perform graphics processing operations on graphical data stored in frame buffer or another memory e.g. etc. of computer system platform . Graphical data stored in frame buffer may be accessed processed and or modified by components e.g. graphics processor processor etc. of computer system platform and or components of other systems devices. Additionally the graphical data may be accessed e.g. by graphics processor and displayed on an output device coupled to computer system platform . Accordingly memory removable storage non removable storage fame buffer or a combination thereof may comprise instructions that when executed on a processor e.g. etc. implement a method of configuring a simulator e.g. and performing a simulation of a plurality of devices e.g. .

In the foregoing specification embodiments of the invention have been described with reference to numerous specific details that may vary from implementation to implementation. Thus the sole and exclusive indicator of what is and is intended by the applicant to be the invention is the set of claims that issue from this application in the specific form in which such claims issue including any subsequent correction. Hence no limitation element property feature advantage or attribute that is not expressly recited in a claim should limit the scope of such claim in any way. Accordingly the specification and drawings are to be regarded in an illustrative rather than a restrictive sense.

