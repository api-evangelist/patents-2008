---

title: Scroll-free user interface and applications
abstract: A scroll-free user interface comprises a display area; an interface panel included within the display area; and a data panel. The data panel includes a portion of a set of data items. The size and number of data items in the portion of the set of items is based on the size of the data panel. A user interface comprises a display area; an interface panel included within the display area; a first user interface control; and a layered user interface element. Web pages are analyzed to identify associated electronic documents. A retrieved web page is analyzed to identify at least one dynamic element. The dynamic element is analyzed to determine a network location of at least one associated electronic document. The dynamic element may be analyzed by applying a pattern matching or by executing the dynamic element to identify the network location of at least one associated electronic document.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08887037&OS=08887037&RS=08887037
owner: 
number: 08887037
owner_city: 
owner_country: 
publication_date: 20081123
---
This application claims priority to U.S. Provisional Patent Application No. 60 990 766 filed Nov. 28 2007 and entitled Scroll Free User Interface and Applications which is incorporated by reference herein for all purposes.

This invention relates to the field of user interfaces for search engines and other information retrieval and presentation systems. Search engines are online or offline applications that receive queries from users or other applications and return search results listing one or more search results including information potentially relevant to the queries. Often the search results will include hundreds or thousands of different items such as web pages electronic documents and or data files or data objects that are potentially relevant to a given query. Users or applications must then evaluate each item to decide whether the item includes some or all of the information desired.

Search engines typically rank items in a search result according to the search engine s estimate of the items relevance to the query with the most relevant items ranked highest. User interfaces for search engines then present the items in a search result to users with the most relevant or highest ranked items presented first. Typically the user interfaces for a search engine present only a subset of the items in a search result to users. The number of items in a subset of search results is typically fixed based on user or search engine preferences. If there are more items in a subset than are capable of being displayed on the user s window or display then the user must use a scroll function or scroll user interface element to view all of the items in a subset of search results. This increases the time coordination and effort required to view and evaluate items in a search results.

If the current subset of items in a search result do not include the desired information then the user may access one or more additional subsets of items in the search result by selecting a user interface element such as a forward or reverse arrow or an index number associated with a particular subset. Often these user interface elements may be located at the bottom of a window or subset of items in the search result. Because of this a user may have to scroll the window or display to access these user interface elements to select a different subset of items in the search results. This further increases the time coordination and effort required to view and evaluate items in a search results.

Additionally after submitting a search query a user may want to refine the query to narrow or restrict the search to particular types of information. Typical search engine interfaces require users or applications to identify additional terms or restrictions and manually add these to their previous queries. Often users may not know which additional terms or restrictions would be the most helpful for narrowing or refining their search queries. This makes searching for information more difficult and time consuming.

Thus there is an unmet need for a search engine interface that allows users to quickly and easily evaluate subsets of search results. There is also an unmet need for a search engine interface that allows users to quickly and easily select and access different subsets of search engine results. There is also an unmet need for a search engine interface that allows users to easily restrict or refine search queries to obtain relevant items.

A scroll free user interface comprises a display area an interface panel included within the display area and a data panel. The data panel includes a portion of a set of data items. The size and number of data items in the portion of the set of items is based on the size of the data panel. A user interface comprises a display area an interface panel included within the display area a first user interface control and a layered user interface element. Web pages are analyzed to identify associated electronic documents. A retrieved web page is analyzed to identify at least one dynamic element. The dynamic element is analyzed to determine a network location of at least one associated electronic document. The dynamic element may be analyzed by applying a pattern matching or by executing the dynamic element to identify the network location of at least one associated electronic document.

In an embodiment the display area of application is partitioned into at least an interface panel and a search results panel . The search results panel displays a subset of the search results. The search results may be generated dynamically or statically in response to a search query or other type of data access request. The subset of search results includes one or more search result items such as search result items 1 to P to where P is any positive integer. Each search result item can include text graphics and or animation providing information to the user. In a further embodiment a search result item can include one or more hyperlinks or other references to additional information pertaining to the search result item. For example a search result item can include a summary of an electronic document as well as a hyperlink to that electronic document. As discussed in detail below a search result item can include one or more user interface elements in addition to hyperlinks.

In an embodiment the number of search result items in a subset is determined by the size of the search results panel and each of the search items such that the entire subset is visible to the user without needing to scroll the window. If each search result item takes the same amount of vertical space then an embodiment divides the vertical size of the search results panel by the vertical size of a search result item to determine the number of search result items in a subset. In an embodiment this determination is made dynamically based on the current window size of the application . In an alternate embodiment a user may manually set the number of search result items in a subset so that an entire subset of search result items is visible within the search results panel .

In another embodiment each search result item may have a different vertical size. In this embodiment the total number of search results is dynamically partitioned into subsets based on the sizes of each search result item and the size of the search result panel so that the search results panel is filled with search result items for each subset of search results.

The interface panel includes one or more controls such as controls and for navigating through subsets of search results. In an embodiment the interface panel includes a previous subset access control and a next subset access control . The previous and next subset access controls and allow users to view subsets of search results sequentially by displaying the previous or next subset in a sequence of subsets of search results. Search result items can be arranged in a sequence according to properties of a search item such as a record number or alphabetically according to a title or name property or according to some external criteria such as a search ranking providing a metric of each search result item s relevance to a query.

In further embodiments the interface panel can include additional access control for accessing subsets of search results such as controls to access a particular subset directly controls for accessing the first or last subset directly number or letter controls to access a subset with a particular sequence position or beginning with a particular letter or letters. In an embodiment the number and type of access controls such as access controls and and any optional additional controls may be determined dynamically based on properties of the search result.

In this example the relatively large size of the access controls and and their fixed location on the application display make it easy for users to quickly navigate through search results. When combined with limiting the number of search result items displayed in the search results panel to eliminate the need for scrolling windows the speed and ease of navigation is greatly enhanced. Furthermore the access controls and are positioned in close proximity to each other making it generally easier to navigate through search results.

Additionally the access controls such as the previous subset access control and the next subset access control may be layered user interface elements that include additional controls. For example the previous subset access control includes N additional controls and the next subset access control includes M additional controls where M and N are positive integers. illustrate example layered active user interface elements according to an embodiment of the invention.

A further embodiment of the invention uses a cache on the client side to reduce the appearance of latency when accessing different subsets in a sequence of subsets of search results. The cache may also be used to improve performance when dynamically partitioning search results into subsets based on the sizes of each search result item and the size of the search result panel. In this embodiment the application prefetches and caches additional search result in excess of the number of search results required for display. As users access different subsets of search results search results are retrieved from the cache if possible rather than from a server application database or other source of search results. In still a further embodiment asynchronous data communications techniques such as asynchronous Javascript AJAX or DHTML are used to asynchronously retrieve and cache search results in the background.

In an embodiment a user can interact with both the first user interface element and the additional user interface elements and . For example a user can select the first user interface element to perform a first function and select additional user interface elements or to perform a second or third function.

For example additional user interface elements and may be associated with search filters for narrowing a set of search results. By selecting the first user interface element a user can access the next subset of search results. By selecting user interface element and or a user can narrow the set of search results according to a criteria associated with the user interface element. Once the search results have been narrowed by one or more criteria selecting the corresponding user interface elements again will remove this criteria and broaden the search results.

It should be noted that effects of layered user interface elements may be exclusive or cumulative. For example selecting user interface element may automatically deselect user interface element . Alternatively selecting user interface element may narrow the search results according to a first criteria and then selecting user interface element further narrows the search results according to a second criteria. The user can select the first user interface element to access the next subset of search results as determined by the initial query and one or more user selected criteria.

In an embodiment each of the additional user interface elements may include a guard band region. If the user attempts to make a selection within the guard band region neither the first user interface element or the additional user interface element is selected. In an embodiment if the user attempts to make a selection anywhere within the layered user interface element and outside of the guard band region or any additional user interface elements then the first user interface element will be selected.

In an embodiment the number and type of additional interface elements can be determined dynamically based on the type and content of the search results. For example if the search results correlate with a variety of wine then additional user interface elements may be added to the layered active user interface element to filter the search results to focus on the geographic region associated with the wine reviews of this variety of wine and or producers or distributors of this variety of wine. In another example if the search results correlate with a wine growing region then an embodiment of the invention may add additional user interface elements to the layered active user interface element to filter the search results to focus on maps tourism information wine varieties and or wine producers in this region.

The example layered active user interface element also includes one or more additional user interface elements such as additional user interface elements and . Additional user interface elements and may be associated with any type of function such as a reference to a version of an electronic document translated to a different language or to initiate an automatic translation of the electronic document to a different language . As discussed above the additional user interface elements may be dynamically added to the layered active user interface element based on the content and context of the a particular search result item. In an embodiment each of the additional user interface elements includes a guard band regions as described above.

In an embodiment a user can interact with both the first user interface element and the additional user interface elements and . For example a user can select the first user interface element to perform a first function such as access the associated electronic document and select additional user interface elements or to perform a second or third function such as to access a translated version of the electronic document.

In an embodiment a user may select anywhere within the layered active user interface element that is outside of the additional user interface elements and and any optional associated guard band regions to select the first user interface element and perform its corresponding function.

Example user interface is implemented within a web browser. Example user interface includes a search panel for receiving a search query from a user via search input box . In this example a user has entered a query for Barolo a type of Italian wine.

Search results panel includes a subset of search results including search result items to . In this example each search result item provides a summary of an electronic document pertaining to the Barolo wines. In this example the number of search result items in the subset of search results is selected so as to maximize the usage of the available space in the search results panel without requiring the user to vertically scroll to view all of these search result items.

In this example each search result item is a layered active user interface element providing a hyperlink with its associated electronic document. Additional user interface elements such as user interface elements and are added to each search result item to reference equivalent electronic documents in different languages.

Interface panel includes access controls and for accessing the previous and next subsets of search results. In this example the access control and are layered active user interface elements that include sets of additional user interface elements and respectively. The set of additional user interface elements includes a set of topic filters that can be applied to narrow the search results to focus on a particular topic. In an embodiment the topic filters in the set of additional user interface elements may be determined dynamically based on the content of the user query the content of the search results and or the context of the user query and search results. In this example in response to the user query of Barolo the topic filters can include official bodies for this wine reference material on this wine wine producers press and media articles about this wine commercial entities such as distributors for this type of wine wine events featuring this type of wine and or events in the region producing this type of wine research such as academic and agricultural resources about this type of wine the grapes used to make this wine and the regions where this type of wine is produced tasting notes for this type of wine regulations pertaining to the manufacturing packaging distribution and labeling of Barolo wines maps of the regions that produce this type of wine and the terroir or the attributes that regions give to this type of wine.

Similarly access control is a layered active user interface element that includes additional user interface elements includes a set of region filters that can be applied to narrow the search results to focus on a particular region that produces Barolo wine.

As discussed above users can select multiple elements to narrow or broaden the set of search results.

Many types of data are organized according to hierarchies. For example a website may include a home page providing general information as well as one or more sub pages providing information about specific topics. An embodiment of the invention may arrange search result items according to their respective hierarchical position with respect to other search items. For example a search item corresponding with a sub page of a website may be arranged underneath and indented from the search item corresponding with the home page of the website.

An embodiment of the invention includes drill down user interface elements adapted to indicate hierarchical relationships between search result items and to enable users to navigate to and from related search items.

In this example related search result items are grouped together and indented to indicate their association and hierarchical relationships. For example search result item corresponding with a home page of a website is a parent of search result item corresponding with a sub page of the website. Similarly search result items and corresponding with home pages of different websites are parents of search result items and respectively.

According to an embodiment of the invention example user interface includes drill down user interface elements including elements . Drill down user interface elements are each associated with a set of related search result items each of which may include one or more search items. In an embodiment each of the drill down user interface elements is vertically sized to span the height of a group of related search items. For example drill down user interface element spans the height of related search result items and . Drill down user interface element spans the height of search result item . By sizing each of the drill down user interface elements according to the height of its associated set of related search result items an embodiment of the drill down user interface elements provide a visual indication of related search result items.

In an embodiment of the invention the drill down user interface elements are active user interface elements. In this embodiment when a user selects one of the drill down user interface elements the search results panel displays an expanded set of search result items associated with the selected drill down user interface element. For example if a drill down user interface element associated with a wine producer website is selected then an embodiment of the invention will display additional search result items associated with this website.

Search results panel includes search result items and previously presented as a group of related search result items. Search results panel also presents additional search result items associated with the search result items and including search result items to . In this example search result items are associated with the same website as search result items and

Additionally search results panel includes an enlarged version of the drill down user interface element . The enlarged drill down user interface element spans at least the height of the expanded set of search result items including search result items and search result items . This provides a visual indication that all of these search result items are related. In a further embodiment selecting the enlarged drill down user interface element will return to the view of search result items shown in removing the additional search result items from the search results panel . Embodiments of the invention may use animation or other visual indicators during the transitions between normal and expanded views of search results to assist users in understanding the associations between search result items.

As described above the drill down user interface elements provide a visual indication of the associations or hierarchical groupings of search result items. In a further embodiment the positions of a drill down user interface element and its corresponding enlarged drill down user interface element remain in the same relative position. This ensures that when a user selects a drill down user interface element with a mouse pointer the corresponding enlarged drill down user interface element will still be under the mouse pointer. Thus a user can select a drill down user interface element to view additional related search result items such as additional sub pages of a website and then select the expanded drill down user interface element to return to the original set of search result items without moving the mouse pointer.

Embodiments of the invention may be applied to vertical search engines which are directed to specific topic areas. For vertical search engines the depth or comprehensiveness of search results is very important. Thus vertical search engines often desire to index every sub page within a website. Many simple websites are created using static HTML links. For these types of websites it is relatively easy to recursively parse the HTML source code of a web page to identify any linked sub pages. These sub pages are added to the index and parsed to identify further sub pages.

Unfortunately many web pages use dynamically generated links to sub pages. For example many web sites uses Javascript or Flash to create visually unique or animated menus of sub pages. Because these links are generated via script programs associated with the website traditionally web crawling techniques cannot identify these types of links to sub pages.

Embodiments of the invention extract dynamically generated links to sub pages by evaluating or parsing the program code that generates these links. In an embodiment a web crawler or other electronic document indexing program retrieves a home page of a web site or other type of hypertext document. The indexing program first analyzes the source code or other type of document markup metadata to identify any static links to additional electronic documents. These links are added to a list of electronic document to be potentially indexed.

Next the indexing program searches for scripts or other programs associated with the retrieved document. Scripts and programs may be embedded in the document source code or located external to the document source code and referenced by a link. For example an HTML document may include tags that included either embedded script code or a link or reference to an external script or program.

For each identified script or program an embodiment of the invention uses pattern matching techniques to identify potential dynamic links to additional web pages or other electronic documents. The type of pattern matching will vary depending upon factors such as the programming or scripting language supporting libraries APIs toolkits and frameworks and language of the electronic document e.g. English French or Italian .

For example if a web page includes a script in the Javascript programming language an embodiment of the invention searches the script code for standard Javascript commands that open windows or change the URL. Additionally an embodiment of the invention may extract a link to an electronic document by looking for markup tags that include onclick attributes which indicate an action to be performed when a user selects the corresponding portion of the electronic document. For example if a HTML anchor tag includes an onclick attribute the target of this attribute may be a link to another web page or electronic document.

Examples of pattern matching techniques used by an embodiment of the invention include searching for code that sets the document location to a string constant 

In another example an embodiment of an indexing program searches for and evaluates Javascript onchange forms to determine URLs to additional electronic documents.

In a further example an embodiment of the invention may look for user defined script functions that include keywords typically used by programmers to describe functions that open windows or change URLs. For example a function entitled doPopup may be adapted to open a window. An embodiment of the indexing program will search functions with descriptive names for text strings that appear to be URLs or other references to electronic documents. An embodiment of the invention may search for keywords in multiple languages in functions. For example apriFinestra means openWindow in Italian.

For example function names that include an action word such as do open create show make ouvre apri abre abrir oeffnen depending upon the language followed often but not necessarily by an object word hinting that this is a window such as win window page finestra browser ventana fenster fenetre pop popup and sometimes with an intervening word like a or extra . Some words like popup likely indicate an additional electronic document on their own without an action word. Examples of these structures include doPopup myWin.asp openWin something.jsp apri bob.jsp popup myDir myfile.swf and oeffnenfenster happywin.html .

For example an embodiment of the invention searches for functions known to open windows including built in functions of scripting languages or common web browser APIs and common libraries. Examples of this include 

In this example an embodiment of the invention may attempt to determine that the string constant extracted from a pattern is a relative or absolute URL and not a symbolic identifier. This can be done by searching for characters within the string such as file extensions or slash characters that are specific to URLs and illegal or rare in symbolic object names. Even if this embodiment occasionally misidentifies a symbolic object name as a URL the relative cost of attempting to index an invalid link is outweighed by the number of additional electronic documents correctly identified.

In still a further example an embodiment of the invention looks for patterns associated with commonly used menu or user interface libraries. For example Dreamweaver Coolmenus and Sothink are common menu libraries used by web site designers to create dynamic menus. An embodiment of the invention looks for standard functions and code patterns generated by these menu libraries and extracts the text and link associated with each menu item. These links and associated text are used to identify and potentially index additional electronic documents. An embodiment of the invention also uses the associated text extracted from a menu to determine the type of content on the associated electronic document.

 Note in this example that the second item here is a string literal indicating an action. As a result an embodiment of the invention passes the string literal recursively through the link extraction algorithm to identify the link associated with this action.

Although the above examples describe pattern matching techniques used to identify dynamic links within Javascript scripts embodiments of the invention are similarly applicable to any other programming or scripting language. Additionally embedded multimedia objects such as the objects websites and other content created using Adobe Flash standard and or Actionscript can be processed in a similar manner to identify potential links to additional electronic documents.

Additionally for embedded objects and scripts an embodiment of the invention takes into account the context of the parent page to evaluate relative paths. For example if an embedded object such as a Flash object refers to a path of another electronic document the path specified may be relative to the parent page. Thus an embodiment of the invention adds the path of the parent page to the relative path of a linked electronic document to determine the absolute path of the electronic document for use in indexing the electronic document. A further embodiment of the indexing application automatically downloads and caches embedded objects as part of parsing the parent page.

A further embodiment of the invention may include a scripting language interpreter that is capable of parsing all or portions of scripting language code. In this embodiment the interpreter may be used to evaluate variables and expressions to determine paths to additional electronic documents. For example an embodiment of the interpreter may trace script execution flow to identify symbolic names and evaluate variables and expressions. Additionally an embodiment of the interpreter may execute the script to evaluate variables and expressions.

A web server is used to process requests from web browsers and standalone applications for web pages electronic documents social media networking service content and other data from the user computers. The web server may also provide syndicated content such as RSS or Atom feeds of data.

Application server operates one or more data applications. The data applications can be implemented as one or more scripts or programs written in any programming language such as Java C C C or any scripting language such as JavaScript or ECMAScript Perl PHP Python Ruby or TCL. Data applications can be built using libraries or application frameworks such as Rails or .NET.

The data applications on application server process input data and user computer requests and can store or retrieve data from database. Database stores data created and used by the enterprise. In an embodiment the database is a relational database such as MySQL that is adapted to store update and retrieve data in response to SQL format commands. The application server may also scan or crawl other web sites to find and analyze web sites and other data pertinent to the user application. The results of this analysis may be stored in the database or in other types of data storage.

In an embodiment the application server is one or more general purpose computers capable of executing programs or scripts. In an embodiment the web server is implemented as an application running on one or more general purpose computers. The web server and application server may be combined and executed on the same computers.

An electronic communication network enables communication between user computers web server application server and database. In an embodiment network may further include any form of electrical or optical communication devices including wireless and wired networks. Network may also incorporate one or more local area networks such as an Ethernet network wide area networks such as the Internet and cellular carrier data networks and virtual networks such as a virtual private network.

The system is one example for executing data applications according to an embodiment of the invention. In another embodiment application server web server and optionally database can be combined into a single server computer application and system. In alternate embodiment all or a portion of the web server and application functions may be integrated into an application running on each of the user computers. For example a JavaScript application on the user computer may be used to retrieve or analyze data and generate display portions of the applications.

Computer typically includes components such as one or more general purpose processors and memory storage devices such as a random access memory RAM and non volatile memory . Non volatile memory can include floppy disks fixed or removable hard disks optical storage media such as DVD ROM CD ROM and bar codes non volatile semiconductor memory devices such as flash memories read only memories ROMS battery backed volatile memories paper or other printing mediums and networked storage devices. System bus interconnects the above components. Processors can include embodiments of the above described processors such as processors and .

RAM and non volatile memory are examples of tangible media for storage of data audio video files computer programs applet interpreters or compilers virtual machines and embodiments of the herein described invention.

Further embodiments can be envisioned to one of ordinary skill in the art from the specification and figures. In other embodiments combinations or sub combinations of the above disclosed invention can be advantageously made. The block diagrams of the architecture and flow charts are grouped for ease of understanding. However it should be understood that combinations of blocks additions of new blocks re arrangement of blocks and the like are contemplated in alternative embodiments of the present invention. The specification and drawings are accordingly to be regarded in an illustrative rather than a restrictive sense. It will however be evident that various modifications and changes may be made thereunto without departing from the broader spirit and scope of the invention as set forth in the claims.

