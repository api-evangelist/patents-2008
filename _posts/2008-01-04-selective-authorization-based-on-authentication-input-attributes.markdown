---

title: Selective authorization based on authentication input attributes
abstract: Embodiments for providing differentiated access based on authentication input attributes are disclosed. In accordance with one embodiment, a method includes receiving an authentication input at an authentication authority using an authentication protocol. The authentication input being associated with a client. The method also includes providing one or more representations for the authentication input, wherein each of the representations represents an attribute of the authentication input.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08621561&OS=08621561&RS=08621561
owner: Microsoft Corporation
number: 08621561
owner_city: Redmond
owner_country: US
publication_date: 20080104
---
As valuable or sensitive networked resources are being made accessible over computer networks in ever greater frequency there is an equally increasing need to selectively control networked access to these resources including applications data and services. Access to less sensitive or valuable networked resources may be sufficiently controlled based on logon identities and passwords. However other networked resources may require enhanced protection provided by more complex authentication methods and systems. For example a user desiring access to a web based resource may currently supply a specially issued web browser cookie in addition to a logon identity and password.

However at the present time there are no sophisticated end to end solutions that provide differentiated access to networked resources based on authentication input attributes such as the strength of the input the type of the input and the amount of trust placed in a user identity presented in the input. The type of the authentication input is the nature of the input e.g. password biometric data identity certificate etc . Further in an example where the authentication input is a password the strength may refer to character length of the password. Lastly the amount of trust placed in a user identity presented in the authentication input may be related to the strictness of the administrative rules under which the authentication input is obtained.

This Summary is provided to introduce a selection of concepts in a simplified form that is further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used to limit the scope of the claimed subject matter.

Described herein are embodiments of various technologies for implementing selective access to networked resources based on authentication input attributes. In one embodiment a method includes receiving an authentication input at an authentication authority using an authentication protocol. The authentication input being associated with a client. The method also includes providing one or more representations for the authentication input wherein each of the representations represents an attribute of the authentication input.

In an additional embodiment the method may further include receiving an access request from a client at a server the access request including the one or more representations of the authentication input. The method also includes comparing the one or more representations against an authorization policy accessible to the server. If the one or more representations meet requirements of the authorization policy the method also includes granting access to a resource.

In another embodiment a computer readable medium having computer executable instructions that when executed perform acts that comprise receiving an authentication input at an authentication authority using an authentication protocol. The authentication input being associated with a client. The acts also include validating the authentication input at the authentication authority. Moreover the acts include returning a token to the client using the authentication protocol. The token includes representations created from the validated authentication input.

In a further embodiment a system for providing selective access to networked recourses comprises one or more processors. The system also comprises memory to store a plurality of computer executable instructions for execution by the one or more processors. The computer executable instructions comprise instructions for receiving an authentication input at an authentication authority using an authentication protocol. The authentication input being associated with a client. The computer executable instructions also comprise instructions for providing one or more representations for the authentication input wherein each of the representations represents an attribute of the authentication input.

Other embodiments will become more apparent from the following detailed description when taken in conjunction with the accompanying drawings.

This disclosure is directed to embodiments that facilitate differentiated access to networked resources based on the attributes of authentication inputs. Specifically the embodiments described herein are directed to providing representations based on the authentication input attributes associated with the authentication request wherein some of the representations may be included in tokens. The representations may be tailored to provide different access permissions as a function of the authentication input attributes. The representations are then used to gain differentiated access to networked resources on a target server. In this way embodiments of the present disclosure provide differentiated access to resources so that productivity may be enhanced while protection for valuable or sensitive networked resources is simultaneously increased. Various examples of facilitating differentiated access to networked resources based on the attributes of authentication inputs are described below with reference to .

In one instance the user may authenticate the user s identity to the authentication server by entering an authentication input in the form of a logon identity and a password. In other instances the user may authenticate to the authentication server via an identity certificate that is issued to the user . For example in some embodiments the identity certificate may be in the form of software data stored in a computer readable storage media. In other embodiments the identity certificate may take the form of a hardware certificate that is stored as an algorithm that is hardwired into an integrated circuit card ICC also known as smart card. Accordingly in some instances where smart card authentication is implemented the user may authenticate the user s identity to the authentication server by presenting a smart card hardware certificate as well as one or more associated cryptographic keys to a smart card reader . The smart card reader is interactively linked to the client terminal . Nevertheless it will be appreciated that in alternative instances the identity certificates and or one or more cryptographic keys may be further stored in other computer readable media including flash drives radio frequency identification RFID tags as well as other portable data storage devices.

In other instances the user may also authenticate the user s identity to the authentication server using authentication inputs in the form of biometrics e.g. fingerprints palm prints retinal patterns etc. as well as other similar methods. Moreover the user may authenticate the user s identity to the authentication server via a variety of authentication protocols. These authentication protocols may include a NT LAN Manager NTLM protocol a Kerberos protocol a Web Services WS security protocol a Public Key Cryptography for Initial Authentication in Kerberos PKINIT protocol a Secure Sockets Layer SSL protocol and a Transport Layer Security TLS protocol.

The authentication server is configured to verify the authentication input provided by the user . The authentication server may be connected to rest of the network environment via one of a wired connection e.g. LAN WAN or a wireless connection e.g. cellular WiFi Ultrawideband . In turn the authentication server may generate representations based on the authentication inputs provided by users such as the user . Each of the generated representations may represent one or more attributes of the authentication input. Specifically the represented authentication input attributes may include for example the strength of the input the type of the input and the amount of trust in the user identity presented in an authentication input. According the various embodiments the authentication server may be further configured to form tokens wherein each of the tokens includes one or more generated representations . In some exemplary embodiments the generated tokens include Kerberos ticket granting tickets TGTs .

The type of the authentication input is the nature of the input e.g. password biometric data identity certificate etc . For example the authentication input may be a user logon and password combination an identity certificate embodied in a smart card or a biometric input. Further the strength of the authentication input refers to the resistance of the authentication input to tampering or circumvention. Typically but certainly not exclusively the strength of an authentication input is measured and compared in a quantitative manner. For example a 10 character password may have greater strength entropy than a 5 character password.

The amount of trust placed in a user identity presented in the authentication input may be related to the strictness of the administrative rules under which the authentication input is obtained. For example a first type of identity certificate authentication input that enables access to limited networked resources may simply be issued in response to an email certificate request. Alternatively other types of digital certification which enable access to wider arrays of networked resources may be issued in response to certificate requests only after mandatory in person identification verifications. Other types of identity certificates may be issued only after an extensive background check. These last types of identity certificates may allow the respective holders of the certificates to access networked resources or perform other tasks that are not permitted with the former types of identity certificates.

In one or more exemplary embodiments where the network environment includes a WINDOWS SERVER network the amount of trust in the user identity in an identity certificate also known as a level of assurance may be defined by issuance policies. In other words an issuance policy is one or more administrative rules that are implemented for the issuance of an identity certificate. In one implementation the issuance policies may be stored on a policy server . Accordingly the authentication server may be configured to access the policy server to retrieve the issuance policies. However it will be appreciated that in other embodiments at least some of the issuance policies may be stored directly on the authentication server . Issuance policies as well the association of an issuance policy with a particular issued identity certificate are further explained with respect to .

The trusted party may also be referred to as a certificate authority CA . In various instances the trusted party may processes each certificate request by pre established administrative rules or issuance policies. Put another way the issuance policies dictates the identification verification procedures that the certificate authority CA performs before issuing a specific type of identity certificate. In some embodiments the identification verification procedures dictated by the issuance policies may be dependent upon the nature of the user and or the intended use of the certificate.

Accordingly the trusted party may issue some types of identity certificates with no proof of identification. However other types identity certificates may be issued by the trusted party after users have met required proof requirements. For example an issuance policy may dictate that the trusted party issue the first type of identity certificate only after an in person identification verification meeting where an employee provides user identification documentation such as the user identification . This first type of certificate enables the employee to access sensitive employer owned networked resources. However an issuance policy may provide that the second type of certificate may be issued in response to an email request without additional security requirement as the second type of certificate only allows a customer limited access to a purchasing web site.

An issued identity certificate may store information regarding the issuance policy under which it is issued. For example in an instance where a network environment is a WINDOWS SERVER network environment the WINDOWS SERVER network environment may include four predefined issuance policies 1 all issuance 2 low assurance 3 medium assurance and 4 high assurance. Each of the four issuance policies is represented in identity certificates by a corresponding object identifier OID that is defined at the certification authority CA . The object identifiers OIDs are then included in the respective issued certificates. Thus when a user presents an identity certificate the identity certificate may be examined to verify the issuance policy and determine if that level of issuance policy is sufficient to perform the requested action.

According to various embodiments the all issuance policy contains all other issuance policies. The all assurance policy may be represented by the object identifier OID 2.5.29.32.0 . The low assurance policy permits certificates to be issued with no security requirements. The low assurance policy may be represented in an identity certificate by the object identifier OID 1.3.6.1.4.1.311.21.8.x.y.z.1.400 wherein the x.y.z portion of the object identifier is a randomly generated numeric sequence that is unique for each WINDOWS SERVER forest.

Furthermore the medium assurance object identifier OID may represent identity certificates that have additional security requirements for issuance. For example a smart card certificate that is issued in a face to face meeting with a smart card issuer trusted party may be considered a medium assurance certificate and contain the medium assurance object identifier. An exemplary medium assurance object identifier OID is 1.3.6.1.4.1.311.21.8.x.y.z.1.401 wherein the x.y.z portion of the object identifier is a randomly generated numeric sequence that is unique for each WINDOWS SERVER forest.

Additionally the high assurance object identifier is used to represent certificates that are issued with the highest security. For instance the issuance of a key recovery agent certificate may require additional background checks and a digital signature from a designated approver. This is due to the fact that a user holding this certificate is capable of recovering private key material from a WINDOWS SERVER network. An exemplary high assurance object identifier OID is 1.3.6.1.4.1.311.21.8.x.y.z.1.402 wherein the x.y.z portion of the object identifier is a randomly generated numeric sequence that is unique for each WINDOWS SERVER forest.

Nevertheless it will be further appreciated that other object identifiers OIDs may be created to represent custom issuance policies. For example two organizations involved in a purchaser seller relationship can define custom object identifiers OIDs to represent identity certificates for specific purchase amounts. Applications can then use these object identifiers OIDs to recognize whether a purchaser has the appropriate signing authority for a specific volume purchase.

While some identity certificates may be in the form of software data stored in computer readable storage media other identity certificates may take the form of hardware certificates that are hardwired into integrated circuit cards ICCs also known as smart cards. These cards are represented by certificate storage media . As further described below an identity certificate may be further submitted to an authentication server as an authentication input so that one or more corresponding representations may be generated.

Returning to the authentication server may generate representations based on the authentication inputs provided by users such as the user . The generated representations represent one or more attributes of the authentication input. Specifically the represented authentication input attributes may include the strength of the authentication input the type of the authentication input and the amount of trust in the user identity presented in an authentication input . The corresponding representation may be in the form of an object identifier OID a globally unique identifier GUID a security identifier SID or a strong representation. According to some embodiments the correspond representations are formatted using one of an Abstract Syntax Notation number One ASN.1 an Extensible Markup Language XML or eXtensible rights Markup Language XrML .

In embodiments where the authentication inputs are identity certificates the authentication server may modify the identity certificates to store the representations in generated tokens . In embodiments where the generated tokens are Kerberos ticket granting tickets TGTs the authentication server may store the representations as part of the Privilege Attribute Certificate PACs of the TGTs . Moreover the authentication server may forward the Kerberos TGTs to a server that the user intends to access such as target server . The target server may be a Windows operating system based target server. Nonetheless it will be further appreciated that in additional embodiments the representations may also be stored in other forms of tokens including authorization tokens service tokens or Security Assertion Markup Language SAML tokens.

With continued reference to the user may use one or more generated representations which may be included in tokens to access one or more networked resources on the target server . In one instance the user may submit a resource access request along with one or more representations to the target server . As described herein a network resource is any resource provided by one or more computing devices in a computing environment. For instance networked resources may include an operating system a mail server a file store a web server a gateway server an application program a messaging application a collaboration application a calendar application a print service and virtually any other type of computing data device or service. For instance networked resources may be any application data or service stored on the target server .

In turn the target server validates the one or more representations using an authorization policy. As described above the representations may be included in tokens . In various embodiments the target server may compare the representations against an authorization policy that is stored within the server. Alternatively the target server may validate the representations against an authorization policy that the target server accesses from a policy server .

In one embodiment if the one or more representations indicate that the user is permitted to access the one or more desired networked resources and or perform certain tasks on the target server the user is given rights to perform the tasks and or granted access to those networked resources. On the other hand if the representations do not permit the user to access the desired networked resources the user is denied rights and or access. The target server may relay the access permission decision that is the grant or denial of access permission to the user via the client terminal .

The issuance policy module is configured to extract issuance policy object identifiers from an authentication input that is an identity certificate. Each issuance policy object identifier OID represents an issuance policy or the level of assurance under which the identity certificate is issued. Moreover the issuance policy module may pass the issuance policy object identifier OID to the privilege generator module . In turn the privilege generator module may generate one or more representations such as the representations described in . Specifically as further described below the privilege generator module may access the directory service module to provide representations that correspond to each issuance policy object identifier. In some embodiments the privilege generator module may store the one or more representations in tokens such as the tokens further described in . For example in embodiments where a representation is in the form of security identifier SID the privilege generator module may build a Kerberos ticket granting ticket TGT that includes the security identifier SID in the Privilege Attribute Certificate PAC of the TGT.

The strength analysis module is configured to extract the strength attributes from authentication inputs. As described above the strength of an authentication input may be defined as the resistance of the authentication input to tampering or circumvention. Typically this resistance may be based on the permutational or cryptographical complexity of the authentication input. The strength analysis module may be further configured to pass the strength attributes of authentication inputs to the privilege generator module . For example the strength analysis module may provide the character length of a password to the privilege generator module . In another instance the strength analysis module may recognize and provide the encoding type of an identity certificate to the privilege generator . In turn the privilege generator module may access the directory service module which may store specific representations that correspond to strength attributes to retrieve the appropriate representations.

The method analysis module is configured to identify the type attribute of authentication inputs. As described above the type of an authentication input is the nature of the input e.g. password biometric data identity certificate etc . The type analysis module may be further configured to pass the type attributes of the authentication inputs to the privilege generator module . For example the type analysis module may inform the privilege generator module that a first authentication input has a type attribute of a password that a second authentication input has a type attribute of a fingerprint scan and so on and so forth. In turn the privilege generator module may access the directory service module which may store a representation that correspond each type attribute to retrieve representations that correspond to the respective type attributes.

It will be appreciated that while the directory service module which provides group policies is described as a part of the authentication server the directory service module may be located in other remote locations. For example the directory service module may be located in a networked policy server as described with respect to the exemplary network environment .

If the certificate authority CA determines at decision block that an issuance policy does not exists no at decision block the process may proceed to block . At block the certificate authority CA may create an object identifier OID for the issue policy. At block the certificate authority CA may store the object identifier OID in an Active Directory. Alternatively if it is determined that an object identifier OID for the issuance policy does exist the process may proceed to block . At block the certificate authority CA may select the appropriate object identifier OID for the issuance policy from the Active Directory and include it in the identity certificate. The inclusion of the issuance policy object identifier OID in the issued certificate indicates that the certificate meets the issuance requirements associated with the issuance policy.

At block the certificate authority CA may determine whether the object identifier OID that was included in the identity certificate is mapped to a particular identity group. In other words the certificate authority CA may determine whether the object identifier OID is a member of an identity group. According to various embodiments each identity group may be governed by a group policy that defines its membership. In one embodiment the group policy is stored in the policy server . The group policy may control the group members with respect to security policy for access to networked resources as well as perform tasks that include auditing software installation logon logoff scripts folder redirection and other tasks.

Accordingly if the certificate authority CA determines that the object identifier OID is not mapped to an identity group no at decision block the process may proceed to block . At block the certificate authority CA may create a new identity group for the object identifier in the Active Directory. However if it is determined that the object identifier OID is already mapped to an identity group yes at decision block the certificate authority CA may retrieve the existing identity group information for the object identifier OID from the Active Directory at block . At block the certificate authority CA may add an identification of the group as an attribute to the object identifier of the issuance policy. Thus in one embodiment identity certificates having identical object identifiers OIDs may provide access to the same networked resources and the ability to perform the same tasks.

At decision block the certificate authority CA may determine whether an additional issuance policy is applicable to the identity certificate. Such a case may occur for example if the identity certificate is issued under one or more issuance policies. For instance the identity certificate may be intended for multiple purposes that are governed by different issuance policies. Accordingly if the certificate authority CA determines that an additional policy is applicable to the identity certificate yes at decision block the process may loop back to block where the assignment of an object identifier to an issuance policy may be performed. However if the certificate authority CA determines that no additional issuance policies are applicable no at decision block the process may terminate at block .

At block the user may initiate an authentication process using an authentication input that includes an identity certificate. For example the user may submit the authentication input to access networked resources on the target server . The identity certificate may be a software certificate or a hardware certificate. The authentication input may be received by authentication server . At block the authentication server may process the identity certificate to extract an issuance policy object identifier OID . At decision block the authentication server may determine whether the issuance policy object identifier OID is extracted. If an issuance policy object is not extracted such as due to the fact that the identity certificate was not issued under any known issuance policy no at decision block the authentication server may assign a default domain relative security identifier SID at block . In one implementation the default security identifier SID indicates a default of level of trust placed in a user identity presented via the identity certificate. This default level of trust may be the lowest level of trust. For example this lowest level trust may provide considerably less access to network resource or tasks than other levels of trust.

However if the issuance policy object identifier OID was successfully extracted yes at decision block the authentication server may assign a corresponding group security identifier SID to the issuance policy object identifier OID at block . According to various examples the authentication server may assign a group security identifier SID using a number of mechanisms. These mechanisms include the creation of a static list mapping that associates the issuance policy identifier OID to a pre defined security identifier SID in an Active Directory. Furthermore a pre defined security identifier SID may be created by using the issuance policy object identifier OID as a seed value for the security identifier SID . In turn each of the security identifiers SIDs may be mapped to a particular group. This mapping of security identifiers SIDs is similar to the mapping of the object identifiers OID as described in .

Thus in various instances each group of security identifiers SIDs may be governed by a group policy. In one embodiment the group policy is stored in the policy server . The group policy may enable the target server to control access to its networked resources as well as control the performance tasks that include auditing software installation logon logoff scripts folder redirection and other tasks based on the security identifiers SIDs . For example a group policy may state that access to a particular network resource is permissible only if a security identifier SID indicates that an identity certificate is associated with a high level of assurance.

At block the authentication server may build a token such as the token described in with the one or more assigned security identifiers SIDs . In one embodiment the authentication server may create a token that includes the assigned security identifiers SIDs along with the associated identity certificate. For example the authentication server may build a token in the form of a Kerberos ticket granting ticket TGT that includes the security identifier SID in the Privilege Attribute Certificate PAC of the TGT.

At block the authentication server may process the authentication input determine a type attribute of the authentication input. At decision block the authentication server may determine whether the type attribute of the authentication input correlates i.e. capable of being mapped to a pre defined security identifier SID that is stored in an Active Directory. According to various embodiments the correlation between a security identifier SID and an authentication input type attribute may be pre defined using a number of mechanisms. These mechanisms include the creation of a static list mapping that associates the authentication input type to a pre defined security identifier SID that resides in an Active Directory. In turn each of the security identifiers SIDs may be mapped to a particular group. This mapping of security identifiers SIDs is similar to the mapping of the object identifiers OID as described in .

Thus in various instances each group of security identifiers SIDs may be governed by a group policy. In one embodiment the group policy is stored in the policy server . The group policy may enable the target server to control security policy for access to its networked resources as well as control the performance tasks that include auditing software installation logon logoff scripts folder redirection and other tasks based on the security identifiers SIDs . For example a group policy for the type attribute may state that access to a particular network resource is permissible if a security identifier SID indicates that the authentication input is a biometric input but does not permit access if the authentication input is not a biometric input.

Returning to if the authentication server determines that the authentication input type is not associated with a pre defined security identifier SID no at decision the process may proceed to block . At block the authentication server may assign a default security identifier SID to the type attribute. The default security identifier SID may indicate a default of level of trust associated with the authentication input type. For example this lowest level trust may provide considerably less access to network resource or tasks than other levels of trust.

However if the authentication server determines that the authentication input type is associated with a pre defined security identifier SID in an Active Directory yes at block the process may proceed to block . At block a security identifier SID that corresponds to the authentication input type may be retrieved from the Active Directory and assigned to the type attribute. At block the authentication server may build a token such as the token described in with the one or more assigned security identifiers SIDs .

At block the authentication server may process the authentication input determine a strength attribute of the authentication input. At decision block the authentication server may determine whether the strength attribute of the authentication input is mapped that is associated with a pre defined security identifier SID that is stored in an Active Directory. According to various embodiments the correlation between a security identifier SID and an authentication input strength attribute may be pre defined using a number of mechanisms. These mechanisms include the creation of a static list mapping that associates the authentication input type to a pre defined security identifier SID that resides in an Active Directory. In turn each of the security identifiers SIDs may be mapped to a particular group. This mapping of security identifiers SIDs is similar to the mapping of the object identifiers OID as described in .

Thus in various instances each group of security identifiers SIDs may be governed by a group policy. In one embodiment the group policy is stored in the policy server . The group policy may enable the target server to control security policy for access to its networked resources as well as control the performance tasks that include auditing software installation logon logoff scripts folder redirection and other tasks based on the security identifiers SIDs . For example a group policy for the strength attribute may state that access to a particular network resource is permissible if a security identifier SID indicates that the authentication input is a password of 10 character length but does not permit access if the authentication input is a password of less than 10 character length.

Returning to if the authentication server determines that the authentication input strength attribute is not capable of being associated with a pre defined security identifier SID no at decision the process may proceed to block . At block the authentication server may assign a default security identifier to the security identifier SID . The default security identifier SID may indicate a default of level of trust associated with the authentication input strength. For example this lowest level trust may provide considerably less access to network resource or tasks than other levels of trust.

However if the authentication server determines that the authentication input strength attribute is capable of being associated with a pre defined security identifier SID in an Active Directory yes at block the process may proceed to block . At block a security identifier SID that corresponds to the authentication input strength attribute may be retrieved from the Active Directory and assigned to the strength attribute.

At block the authentication server may build a token such as the token described in with the one or more assigned security identifiers SIDs . In other words the security identifiers SIDs are associated with the identity certificate. In one embodiment the authentication server may modify the identity certificate to store a token that includes the assigned security identifiers SIDs .

It will be appreciated that the various security identifiers SIDs described in may be also be referred to as representations such as the representations described in . The representations may enable a user such as the user to access the one or more desired networked resources and or perform certain tasks on a target server such as the target server . For example a server administrator may configure one or more access control settings that correlate the network resource on a server such as target server to the various security identifiers SIDs that reflect the level of assurance associated with the identity certificate.

Furthermore in additional to security identifiers SID representations may be constructed from other forms of data representations in alterative embodiments. In these embodiments the representations may also be represented by object identifiers OIDs globally unique identifiers GUIDs or strong representations.

While each authentication attribute e.g. issuance policy strength and type have been described as governed by a separate group policy. It will be appreciated that in other embodiments the sets of policies may be combined via logical operators to determine the permissibility of access to networked resources and or performance of tasks on a target server based on a plurality of authentication input attributes. For instance multiple policies may be combined via logical operator functions so that networked resources on a target server may only be accessible if the authentication input is an identity certificate and the security identifier SID stored in the identity certificate indicates that it was issued under an issuance policy of at least medium assurance.

As describe above the authentication input includes at least one of a password a biometric characteristic and an identity certificate. However it will be appreciated that other forms of identity validation data may also be received from the user provided that the identity validation data includes attributes such as type and strength or contain some information regarding an issuance policy under which the identity validation data is assigned to the user.

In embodiments where the authentication input is an identity certificate the target server may obtain the authentication input attributes stored in the certificate. In other instances the target server may request attributes of the authentication input from the authentication server . In turn the authentication server may forward the one or more attributes of the authentication input to the target server .

In alternative embodiments the user may login by providing an authentication input to a middle tier server. In one embodiment a middle tier server is a server that resides between the user client terminal such as client terminal and the data management server such as the target server . The middle tier server may be configured to forward the authentication input to a target server. The forward of the authentication input may be performed using various mechanisms including Kerberos delegation and Service for User to Proxy S4U2proxy . In these instances attributes of the authentication input such as issuance policy information is also carried forward from the middle tier server to the target server.

At block the target server may obtain a local authorization policy that includes group policies for the attributes of authentication inputs. In one embodiment the group policies in the authorization policy may be formatted in one of an Abstract Syntax Notation number One ASN.1 an Extensible Markup Language XML or an eXtensible rights Markup Language XrML . The authentication input attributes include the issuance policy under which an identity certificate is issued as well as the strength and type of the authentication inputs. The group policies govern networked resource access on the target server as well as control the performance tasks that include auditing software installation logon logoff scripts folder redirection and other tasks on the target server . In one embodiment the local authorization policy is stored in an Active Directory on the target server .

At block the target server may validate the authentication input using the authentication policy. According to various embodiments the validation may be carried out by one of an application an operating system a resource manager or an authorization system on the target server . Specifically the target server may obtain one or more representations that represent corresponding authentication input attributes. The one or more representations may be stored in a token. Furthermore the target server may compare the representations to one or more group policies to determine a list of networked resources and tasks are accessible to the user . The one or more group policies may be stored on the target server or alternatively on the policy server . At block the target server may determine permissibility of access to the resource i.e. network resource and or tasks by the user . Specifically the target server may compare the particular networked resources and task in the resource access request to the list of accessible networked resources and tasks. Thus a determination is made as to whether the user may access the resource.

At block the user is notified of the determination of the target server with regards to the permissibility of the access to the resource. According to various embodiments the target server may be configured to present a notification on a user interface of a remote terminal such client terminal used by the user .

In a very basic configuration computing device typically includes at least one processing unit and system memory . Depending on the exact configuration and type of computing device system memory may be volatile such as RAM non volatile such as ROM flash memory etc. or some combination of the two. System memory typically includes an operating system one or more program modules and may include program data . The operating system include a component based framework that supports components including properties and events objects inheritance polymorphism reflection and provides an object oriented component based application programming interface API such as but by no means limited to that of the .NET Framework manufactured by Microsoft Corporation Redmond Wash. The device is of a very basic configuration demarcated by a dashed line . Again a terminal may have fewer components but will interact with a computing device that may have such a basic configuration.

Computing device may have additional features or functionality. For example computing device may also include additional data storage devices removable and or non removable such as for example magnetic disks optical disks or tape. Such additional storage is illustrated in by removable storage and non removable storage . Computer storage media may include volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. System memory removable storage and non removable storage are all examples of computer storage media. Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by computing device . Any such computer storage media may be part of device . Computing device may also have input device s such as keyboard mouse pen voice input device touch input device etc. Output device s such as a display speakers printer etc. may also be included. These devices are well know in the art and are not discussed at length here.

Computing device may also contain communication connections that allow the device to communicate with other computing devices such as over a network. These networks may include wired networks as well as wireless networks. Communication connections are one example of communication media. Communication media may typically be embodied by computer readable instructions data structures program modules etc.

It is appreciated that the illustrated computing device is only one example of a suitable device and is not intended to suggest any limitation as to the scope of use or functionality of the various embodiments described. Other well known computing devices systems environments and or configurations that may be suitable for use with the embodiments include but are not limited to personal computers server computers hand held or laptop devices multiprocessor systems microprocessor base systems set top boxes game consoles programmable consumer electronics network PCs minicomputers mainframe computers distributed computing environments that include any of the above systems or devices and or the like.

The provision of differentiated access to networked resources based the attributes of the authentication inputs may enhance security. This enhanced security may be especially important for the protection of high end valuable expensive or sensitive resources applications or data. Thus embodiments in accordance with this disclosure may serve to ensure that only the intended authorized and properly authenticated entities access these resources.

In closing although the various embodiments have been described in language specific to structural features and or methodological acts it is to be understood that the subject matter defined in the appended representations is not necessarily limited to the specific features or acts described. Rather the specific features and acts are disclosed as exemplary forms of implementing the claimed subject matter.

