---

title: Managing analysis of a degraded service in a grid environment
abstract: A method, system, and program managing analysis of a degraded service in a grid environment are provided. In a grid environment of multiple diverse systems, a service availability management agent is enabled to receive multiple types of error messages generated from the multiple diverse systems within the grid environment. Each error message is parsed to determine a general error indicator. Then, the service availability management agent attempts to resolve the general error indicator and return a solution to each parsed error message. Solutions may include an adjustment of resource usage by a particular service, an explanation of a particular error message, or a recommendation of alternate resources. The service availability management agent preferably specifies the transmission of the solution in a format specified for the requester system.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07734679&OS=07734679&RS=07734679
owner: International Business Machines Corporation
number: 07734679
owner_city: Armonk
owner_country: US
publication_date: 20080916
---
This application is a continuation of commonly assigned U.S. patent application Ser. No. 10 757 270 filed Jan. 14 2004 which is hereby incorporated herein by reference.

The present invention relates in general to grid environments and in particular to managing errors in a grid environment. Still more particularly the present invention relates to managing analysis of errors indicating degraded service in a grid environment such that clients in a grid environment are provided with a response when the grid environment is operating at suboptimal conditions.

Ever since the first connection was made between two computer systems new ways of transferring data resources and other information between two computer systems via a connection continue to develop. In a typical network architecture when two computer systems are exchanging data via a connection one of the computer systems is considered a client sending requests and the other is considered a server processing the requests and returning results. In an effort to increase the speed at which requests are handled server systems continue to expand in size and speed. Further in an effort to handle peak periods when multiple requests are arriving every second server systems are often joined together as a group and requests are distributed among the grouped servers. Multiple methods of grouping servers have developed such as clustering multi system shared data sysplex environments and enterprise systems. With a cluster of servers one server is typically designated to manage distribution of incoming requests and outgoing responses. The other servers typically operate in parallel to handle the distributed requests from clients. Thus one of multiple servers in a cluster may service a client request without the client detecting that a cluster of servers is processing the request.

Typically servers or groups of servers operate on a particular network platform such as Unix or some variation of Unix and provide a hosting environment for running applications. Each network platform may provide functions ranging from database integration clustering services and security to workload management and problem determination. Each network platform typically offers different implementations semantic behaviors and application programming interfaces APIs .

Merely grouping servers together to expand processing power however is a limited method of improving efficiency of response times in a network. Thus increasingly within a company network rather than just grouping servers servers and groups of server systems are organized as distributed resources. There is an increased effort to collaborate share data share cycles and improve other modes of interaction among servers within a company network and outside the company network. Further there is an increased effort to outsource nonessential elements from one company network to that of a service provider network. Moreover there is a movement to coordinate resource sharing between resources that are not subject to the same management system but still address issues of security policy payment and membership. For example resources on an individual s desktop are not typically subject to the same management system as resources of a company server cluster. Even different administrative groups within a company network may implement distinct management systems.

The problems with decentralizing the resources available from servers and other computing systems operating on different network platforms located in different regions with different security protocols and each controlled by a different management system have led to the development of Grid technologies using open standards for operating a grid environment. Grid environments support the sharing and coordinated use of diverse resources in dynamic distributed virtual organizations. A virtual organization is created within a grid environment when a selection of resources from geographically distributed systems operated by different organizations with differing policies and management systems is organized to handle a job request.

An important attribute of a grid environment that distinguishes a grid environment from merely that of another management system is quality of service maintained across multiple diverse sets of resources. A grid environment preferably does more than just provide resources a grid environment provides resources with a particular level of service including response time throughput availability security and the co allocation of multiple resource types to meet complex user demands.

A reality of network systems in a grid environment however is that clients requesting services and resources handling services may fail or degrade in some way. Further the reality of network systems in a grid environment is that networks may become overloaded with traffic. In essence when some part of the grid environment is working at a suboptimal level errors occur because clients receive a degraded service in some manner.

In a typical client server system or cluster system limited error management systems only monitor for operating conditions of server systems as a whole and only respond to catastrophic errors rather than checking for a malfunction of a particular component of a server system. In addition a typical cluster system is self contained and thus any limited error management is handled by logic at the network layer level such as the TCP IP layer level. In a grid environment however a failed server system is not the only type of error that needs to be handled errors may occur in a grid environment as a result of any service degradation in a grid environment. Further in a grid environment as opposed to a cluster system multiple heterogeneous systems are combined such that limited error management at the network layer level is insufficient.

Thus when there is suboptimal performance within a grid environment an issue arises of how to maintain the quality of service and handle the diversity of errors that may occur across diverse system. Therefore it would be advantageous to provide a management agent within a grid environment that may be triggered by any of multiple systems operating within a grid environment when an error occurs wherein the management agent evaluates the error message and generates responses to the error. Further it would be advantageous to provide a management agent within a grid environment that may be triggered by errors resulting from suboptimal performance rather than only complete failure of performance.

The present invention relates in general to grid environments and in particular to managing errors in a grid environment. Still more particularly the present invention relates to managing analysis of errors in a grid environment such that clients accessing diverse systems providing resources in a grid environment are provided with a client specified response when the grid environment is operating at suboptimal conditions.

According to one embodiment of the invention a grid environment includes multiple diverse systems. A service availability management agent is enabled to receive multiple types of error messages generated from the multiple diverse systems within the grid environment. Each error message is parsed to determine a general error indicator. Then the service availability management agent attempts to resolve the general error indicator and return a solution to each parsed error message. Solutions may include an adjustment of resource usage by a particular service an explanation of a particular error message or a recommendation of alternate resources. The service availability management agent preferably specifies the transmission of the solution in a format specified for the requester system.

The service availability management agent may resolve the error first by using a policy defined for the general error indicator. According to one embodiment the policy is validated against an XML document type definition DTD . Alternatively the service availability management agent may resolve the error by distributing the parsed error message to a troubleshooting agent that is specialized in resolving specific types of errors. The troubleshooting agent may further distribute the parsed error message to another level of troubleshooting agents that further specialize the types of errors resolved.

The service availability management agent may be located within a single system or distributed across a selection of the diverse systems in a grid environment. Further the service availability management agent is operable on error returned from multiple layers of a grid architecture.

All objects features and advantages of the present invention will become apparent in the following detailed written description.

Referring now to the drawings and in particular to there is depicted one embodiment of a computer system which may be implemented in a grid environment and in which the present invention may be implemented. As will be further described the grid environment includes multiple computer systems managed to provide resources. Additionally as will be further described the present invention may be executed in a variety of computer systems including a variety of computing systems mobile systems and electronic devices operating under a number of different operating systems managed within a grid environment.

In one embodiment computer system includes a bus or other device for communicating information within computer system and at least one processing device such as processor coupled to bus for processing information. Bus preferably includes low latency and higher latency paths that are connected by bridges and adapters and controlled within computer system by multiple bus controllers. When implemented as a server system computer system typically includes multiple processors designed to improve network servicing power.

Processor may be a general purpose processor such as IBM s PowerPC processor that during normal operation processes data under the control of operating system and application software accessible from a dynamic storage device such as random access memory RAM and a static storage device such as Read Only Memory ROM . The operating system may provide a graphical user interface GUI to the user. In a preferred embodiment application software contains machine executable instructions that when executed on processor carry out the operations depicted in the flowcharts of and others described herein. Alternatively the steps of the present invention might be performed by specific hardware components that contain hardwired logic for performing the steps or by any combination of programmed computer components and custom hardware components.

The present invention may be provided as a computer program product included on a machine readable medium having stored thereon the machine executable instructions used to program computer system to perform a process according to the present invention. The term machine readable medium as used herein includes any medium that participates in providing instructions to processor or other components of computer system for execution. Such a medium may take many forms including but not limited to non volatile media volatile media and transmission media. Common forms of non volatile media include for example a floppy disk a flexible disk a hard disk magnetic tape or any other magnetic medium a compact disc ROM CD ROM or any other optical medium punch cards or any other physical medium with patterns of holes a programmable ROM PROM an erasable PROM EPROM electrically EPROM EEPROM a flash memory any other memory chip or cartridge or any other medium from which computer system can read and which is suitable for storing instructions. In the present embodiment an example of a non volatile medium is mass storage device which as depicted is an internal component of computer system but will be understood to also be provided by an external device. Volatile media include dynamic memory such as RAM . Transmission media include coaxial cables copper wire or fiber optics including the wires that comprise bus . Transmission media can also take the form of acoustic or light waves such as those generated during radio frequency or infrared data communications.

Moreover the present invention may be downloaded as a computer program product wherein the program instructions may be transferred from a remote virtual resource such as a virtual resource to requesting computer system by way of data signals embodied in a carrier wave or other propagation medium via a network link e.g. a modem or network connection to a communications interface coupled to bus . Virtual resource may include a virtual representation of the resources accessible from a single system or systems wherein multiple systems may each be considered discrete sets of resources operating on independent platforms but coordinated as a virtual resource by a grid manager. Communications interface provides a two way data communications coupling to network link that may be connected for example to a local area network LAN wide area network WAN or an Internet Service Provider ISP that provide access to network . In particular network link may provide wired and or wireless network communications to one or more networks such as network through which use of virtual resources such as virtual resource is accessible as provided by a grid management system . Grid management system may be part of multiple types of networks including a peer to peer network or may be part of a single computer system such as computer system .

As one example network may refer to the worldwide collection of networks and gateways that use a particular protocol such as Transmission Control Protocol TCP and Internet Protocol IP to communicate with one another. Network uses electrical electromagnetic or optical signals that carry digital data streams. The signals through the various networks and the signals on network link and through communication interface which carry the digital data to and from computer system are exemplary forms of carrier waves transporting the information. It will be understood that alternate types of networks combinations of networks and infrastructures of networks may be implemented.

When implemented as a server system computer system typically includes multiple communication interfaces accessible via multiple peripheral component interconnect PCI bus bridges connected to an input output controller. In this manner computer system allows connections to multiple network computers.

Additionally although not depicted multiple peripheral components and internal external devices may be added to computer system connected to multiple controllers adapters and expansion slots coupled to one of the multiple levels of bus . For example a display device audio device keyboard or cursor control device may be added as a peripheral component.

Those of ordinary skill in the art will appreciate that the hardware depicted in may vary. Furthermore those of ordinary skill in the art will appreciate that the depicted example is not meant to imply architectural limitations with respect to the present invention.

With reference now to a block diagram illustrates one embodiment of the general types of components within a grid environment. In the present example the components of a grid environment include a client system interfacing with a grid management system which interfaces with server clusters servers workstations and desktops data storage systems and networks . For purposes of illustration the network locations and types of networks connecting the components within grid environment are not depicted. It will be understood however that the components within grid environment may reside atop a network infrastructure architecture that may be implemented with multiple types of networks overlapping one another. Network infrastructure may range from multiple large enterprise systems to a peer to peer system to a single computer system. Further it will be understood that the components within grid environment are merely representations of the types of components within a grid environment. A grid environment may simply be encompassed in a single computer system or may encompass multiple enterprises of systems.

The central goal of a grid environment such as grid environment is organization and delivery of resources from multiple discrete systems viewed as virtual resource . Client system server clusters servers workstations and desktops data storage systems networks and the systems creating grid management system may be heterogeneous and regionally distributed with independent management systems but enabled to exchange information resources and services through a grid infrastructure enabled by grid management system . Further server clusters servers workstations and desktops data storage systems and networks may be geographically distributed across countries and continents or locally accessible to one another.

In the example client system interfaces with grid management system . Client system may represent any computing system sending requests to grid management system . In particular client system may send job requests and jobs to grid management system . Further while in the present embodiment client system is depicted as accessing grid environment with a request in alternate embodiments client system may also operate within grid environment .

While the systems within virtual resource are depicted in parallel in reality the systems may be part of a hierarchy of systems where some systems within virtual resource may be local to client system while other systems require access to external networks. Additionally it is important to note that systems depicted within virtual resources may be physically encompassed within client system .

One function of grid management system is to manage job requests and jobs from client system and control distribution of each job to a selection of computing systems of virtual resource for use of particular resources at the available computing systems within virtual resource . From the perspective of client system however virtual resource handles the request and returns the result without differentiating between which computing system in virtual resource actually performed the request.

To implement grid environment grid management system facilitates grid services. Grid services may be designed according to multiple architectures including but not limited to the Open Grid Services Architecture OGSA . In particular grid management system refers to the management environment which creates a grid by linking computing systems into a heterogeneous network environment characterized by sharing of resources through grid services.

Grid environment as managed by grid management system may provide a single type of service or multiple types of services. For example computational grids scavenging grids and data grids are example categorizations of the types of services provided in a grid environment. Computational grids may manage computing resources of high performance servers. Scavenging grids may scavenge for CPU resources and data storage resources across desktop computer systems. Data grids may manage data storage resources accessible for example to multiple organizations or enterprises. It will be understood that a grid environment is not limited to a single type of grid categorization.

Referring now to a block diagram illustrates one example of an architecture that may be implemented in a grid environment. As depicted an architecture includes multiple layers of functionality. As will be further described the present invention is a process which may be implemented in one or more layers of an architecture such as architecture which is implemented in a grid environment such as the grid environment described in . It is important to note that architecture is just one example of an architecture that may be implemented in a grid environment and in which the present invention may be implemented. Further it is important to note that multiple architectures may be implemented within a grid environment.

Within architecture first a physical and logical resources layer organizes the resources of the systems in the grid. Physical resources include but are not limited to servers storage media and networks. The logical resources virtualize and aggregate the physical layer into usable resources such as operating systems processing power memory I O processing file systems database managers directories memory managers and other resources.

Next a web services layer provides an interface between grid services and physical and logical resources . Web services layer implements service interfaces including but not limited to Web Services Description Language WSDL Simple Object Access Protocol SOAP eXtensible mark up language XML executing atop an Internet Protocol IP or other network transport layer. Further the Open Grid Services Infrastructure OSGI standard builds on top of current web services by extending web services to provide capabilities for dynamic and manageable Web services required to model the resources of the grid. In particular by implementing OGSI standard with web services grid services designed using OGSA are interoperable. In alternate embodiments other infrastructures or additional infrastructures may be implemented a top web services layer .

Grid services layer includes multiple services. For example grid services layer may include grid services designed using OGSA such that a uniform standard is implemented in creating grid services. Alternatively grid services may be designed under multiple architectures. Grid services can be grouped into four main functions. It will be understood however that other functions may be performed by grid services.

First a resource management service manages the use of the physical and logical resources. Resources may include but are not limited to processing resources memory resources and storage resources. Management of these resources includes receiving job requests scheduling job requests distributing jobs and managing the retrieval of the results for jobs. Resource management service preferably monitors resource loads and distributes jobs to less busy parts of the grid to balance resource loads and absorb unexpected peaks of activity. In particular a user may specify preferred performance levels so that resource management service distributes jobs to maintain the preferred performance levels within the grid.

Second information services manages the information transfer and communication between computing systems within the grid. Since multiple communication protocols may be implemented information services preferably manages communications across multiple networks utilizing multiple types of communication protocols.

Third a data management service manages data transfer and storage within the grid. In particular data management service may move data to nodes within the grid where a job requiring the data will execute. A particular type of transfer protocol such as Grid File Transfer Protocol GridFTP may be implemented.

Finally a security service applies a security protocol for security at the connection layers of each of the systems operating within the grid. Security service may implement security protocols such as Open Secure Socket Layers SSL to provide secure transmissions. Further security service may provide a single sign on mechanism so that once a user is authenticated a proxy certificate is created and used when performing actions within the grid for the user.

Multiple services may work together to provide several key functions of a grid computing system. In a first example computational tasks are distributed within a grid. Data management service may divide up a computation task into separate grid services requests of packets of data that are then distributed by and managed by resource management service . The results are collected and consolidated by data management system . In a second example the storage resources across multiple computing systems in the grid are viewed as a single virtual data storage system managed by data management service and monitored by resource management service .

An applications layer includes applications that use one or more of the grid services available in grid services layer . Advantageously applications interface with the physical and logical resources via grid services layer and web services such that multiple heterogeneous systems can interact and interoperate. It is important to note that while an application and a grid service are positioned within different layers of the grid architecture a reference to an application in general also encompasses grid services exposed through the application.

With reference now to a block diagram of a system operating within the grid environment from the perspective of the grid management system is depicted in accordance with the method system and program of the present invention. As illustrated in a computer system includes many hardware components. As part of a grid environment however these hardware components are viewed as resources. For example a system includes an application resource two CPU resources and a memory resource and a storage resource . The resources in system are typical of the types of resources when viewed within the grid environment however in an alternate embodiment other types of resources may be provided. Further the resources in system may be physically located within a single computer system or distributed across multiple computer systems connected by a network for example

As part of the grid management system described in a grid manager and router GM provides the interface between the resources of system and client systems sending requests.

In particular a resource monitor within GM monitors the working status of each of the resources available in system . GM preferably sends status reports to other grid managers and routers within the grid environment to indicate the availability of the resources in system . Additionally status reports may describe the computer hardware operating system and resources of system . Status reports may be generated for example when system joins or leaves the grid environment when a threshold is detected at predetermined time intervals and on specific predetermined events including but not limited to a hardware fault or a portion of a service failing.

Referring now to an illustrative representation depicts one embodiment of the logical infrastructure of a grid environment in which the present invention may be implemented. While depicts an example of general components of a grid environment in the present figure an example of how the general components are viewed logically within a grid environment is illustrated in a grid environment . In particular the grid management system functions are logically dispersed into multiple GMs such as GM GM and GM . Further the virtual resource is logically dispersed into multiple resources RSs such as RS RS RS RS RS and RS . It is important to note that a resource may not be a direct representation of a physical resource but rather a logical representation of one or more physical resources and or groups of physical resources.

In the example client system sends a job request to GM . GM searches for resources available to handle the job specified in the job request. In particular GM checks whether RS and RS can handle the job specified in the job request and may send queries to other GMs such as GM or GM . GMs and return reports on the availability of resources to handle the job request.

In particular a job request preferably includes a request made through a particular application for a grid service. In general an application is self contained but exposes the grid services layer. The resources necessary to handle the job request are those necessary to handle the request as specified by the application and services accessed.

For purposes of illustrations RS and RS are considered local resources or resources within the same discrete set of resources to which jobs from client system are submitted. In the examples following when RS and are not meeting performance requirements for a job from client system then additional resources may be allocated including other resources within the same discrete set of resources capacity on demand resources resources from internal grids and finally resources from external grids.

More specifically in the example GM RS and RS are part of one grid infrastructure grid A operated by a first business that provides a first specified number of grid services for a first specified price. Then GM RS and RS are part of another grid infrastructure grid B operated by a second business that provides a second specified number of grid services for a second specified price. When GM sends the job request to GM and GM the each GM preferably reports whether the job request can be handled and a price for handling the request. In relation to client system grids A and B may be internal grids operating within the same enterprise system as client system or external grids.

After receiving reports on the availability of resources GM collects the options for handling the job and returns the options to client system . Client system may then decide to select a preferred option and send the job to have handled according to the selected option. GM manages the return of the results of the job to client system .

The resources utilized in the option selected by client system form a virtual organization for handling the job. For example if client system selects an option to handle the job based on the option returned from GM then a virtual organization may be formed to process the job which would include GM GM RS and RS .

According to an advantage of the present invention if the virtual organization handling a job provides suboptimal performance then any of the GMs or RSs in the virtual organization may generate an error indicating degraded service in the grid environment. Further client system may generate an error if client system encounters degraded service from the grid environment. GMs RSs or client system may then pass the error message among each other and transmit the error message to a Service Availability Management Agent SAMA .

Service Availability Management Agent SAMA is preferably accessible within grid environment . In particular SAMA may be incorporated within a single system or cloned and distributed across multiple systems. Further within grid architecture of SAMA may be implemented to handle errors from multiple functional levels. For example SAMA may be implemented in part as a web service and in part as a resource management service.

In general SAMA performs the functions of monitoring grid resources policy coordination application profile management analytical processing and problem dispatch for grid environment . SAMA may be controlled by dynamic policies that manage its behavior while performing error management. In particular errors may occur within grid environment when degraded services are detected. Degraded services may be detected when jobs function at suboptimal conditions or the grid fails to provide required services. Such suboptimal performance may occur as a result of a system failure a network infrastructures dropping or becoming overloaded or other failures that occur within grid environment .

SAMA preferably analyzes and responds to each error message received. For example the response may include a solution to the error to the client system or may include an indicator that resource availability within grid environment was adjusted to solve the error.

It is important to note that while the present invention is described with reference to SAMA responding to errors indicating degraded service errors managed by SAMA may also indicate other types of degradation within grid environment .

With reference now to there is depicted a block diagram of one embodiment of an error management system with a grid environment. In general requester sends a job request to responder . Requester may include for example client systems or other organized systems operating within the grid environment or accessing the grid environment. Responder may represent a resource node or nodes logically represented within a grid environment. Responder provides an acknowledgement or response to the job request. In the case of an error response requester or responder may send an error message to SAMA .

SAMA preferably manages analysis of an error messages and returns a response in a format specified for requester . A response may specify a solution which includes an explanation of the error a recommendation of alternate resources of an indication that resource usage has been adjusted for example. In managing the analysis error message SAMA may dispatch the error message to a troubleshooting agent . Troubleshooting agent preferably includes additional tools for performing error analysis and problem solving. For example troubleshooter agent implements a problem determination and solution service . Further troubleshooting agent may distribute the error message to specialized troubleshooting agents that specialize in solving particular types of errors. For example a troubleshooting agent implements a network diagnostic service that specifically analyzes network related errors. Troubleshooting agents may be domain specific and may include but are not limited to network troubleshooters application troubleshooters and service troubleshooters.

In an example requester is a customer submitting an order to on line retailer A. Requester receives a general error message in return. Requester then transmits the general error message to SAMA for error management. SAMA determines that the network infrastructure for handling orders for on line retailer A is overloaded resulting in degraded service within the grid environment. SAMA may send the error message to troubleshooting agent for this error determination or may implement logic within SAMA for this error determination. Further SAMA or troubleshooting agent may determine that an alternate URL with access to additional network resources can handle the order or may adjust the distribution of network resources in the grid environment so that the order can be handled. SAMA preferably returns a result to requester . The result may include a message specifying the type of error such as a message specifying that the network is currently overloaded. In addition the result may include a recommendation in the form of an action for a user or automated process at requester to choose. Further the result may indicate an action that was taken to attempt to give additional resources to the degraded service.

Referring now to there is illustrated a block diagram one embodiment of the components of a SAMA in accordance with the method system and program of the present invention. In particular SAMA includes multiple controllers for providing error service management. While in the present embodiment a single controller is depicted in alternate embodiments SAMA may be distributed across multiple locations wherein selections of the available controllers may operate at each of the multiple locations. Further in one embodiment SAMA may be performed by a web application that runs when invoked by a system transmitting an error in a grid environment. In the embodiment the web application is supported by SAMA database to store data needed to manage error message.

Each of the functions performed by the controllers within SAMA is controlled by rules set by policies. These policies are preferably stored in SAMA database . SAMA database may be implemented in general in a database structure and more specifically in a Lightweight Directory Access Protocol LDAP directory. While depicted as combined with the controllers of SAMA SAMA database may be distributed across multiple storage systems or located within a single storage system.

First a service profiles database includes profile information about applications and services enabled to execute in the grid environment. In particular service profiles designate the operating characteristics of a service such as the minimal levels of processing resources required to perform the minimal service functions. It is important to note that in addition to service profiles applications profiles agent profiles and other profiles of controllers operating within the grid environment may be included in service profiles database . As described in U.S. patent application Ser. No. 10 757 282 SAMA may adjust the resources available to a service based on the service profile for the service when an error indicating suboptimal service is received or suboptimal service is monitored.

Second a SAMA policy database includes policies for analyzing error messages according to general error indicator type of service and requester or responder identifier. The policies may designate for example that if an error message indicates that business logic failed then a response is that the business service is not available and that the error message should be dispatched to the troubleshooter for additional error analysis. If the error message indicates however that business logic is not optimal then the policy may designate a response that the business service is intermittently functional. 

Within SAMA an analytical processing controller parses error messages to extract a general error indicator and other content such as a requester or responder identifier and a service type. From the general error indicator a requester or responder identifier and a service type analytical processing controller determines the relevant service profiles and SAMA polices for the error type from service profiles database and SAMA polices database . Once an error message is parsed and resolved then a problem dispatcher dispatches problem packets to other controllers within SAMA and to troubleshooting agents. The problem packets preferably include the parsed error message. A monitoring controller monitors the status of resources accessible within the grid environment for use by analytical processing controller in determining a solution to the error message.

Referring now to there is depicted a flow diagram for error management in a grid environment in accordance with the method system and program of the present invention. As depicted the process starts at block and thereafter proceeds to block . Block depicts a determination whether an error message is received. If an error message is not received then the process iterates at block . If an error message is received then the process passes to block . Block depicts parsing the error message to extract the details of the error including but not limited to a general error indicator an application identifier and a requester identifier. Next block illustrates determining the policy and rules for the service and the requester for a particular type of error. In particular SAMA policy database may be searched for rules and policies associated with the error. Next block depicts validating the policy or rule against the application DTD to determine an XML response. For purposes of example Table 1 depicts an application DTD which may be implemented in the invention. In an alternate embodiment a response may be formatted in an alternate protocol or method.

Next block depicts a determination of whether the error is resolved. If the error is resolved from the validated policy or rule then the process passes to block . Block depicts determining the policy for responses to the requester. For example responses may be formatted for particular requester systems depending on the type of grid service subscribed to by a requester system. Next block depicts adjusting the response according to the policy. Thereafter block depicts transmitting the response to the requester system and the process ends.

Alternatively at block if the error is not resolved then the process passes to block . Block depicts packing the message and generating a problem ticket to track the distribution of the error message. Next block depicts determining a distribution plan for the error message. Policies may indicate which troubleshooting agent should receive the error message and whether the error message should be distributed to a profile management controller. Block illustrates a determination whether the distribution plan includes distributing the packaged message to a profile management controller. If the plan includes the profile management controller then the process passes to block . Block depicts distributing the packaged message to the profile management controller. As described in more detail in U.S. patent application Ser. No. 10 757 720 a profile management controller preferably adjusts resource usage by a service or application. In particular the profile management controller may determine if a service can be rerouted to other resource nodes in the grid environment or if modules of a service can be shut down to maintain the minimal performance requirements of the service. Next block depicts a determination whether an acknowledgement is received indicating that resources were adjusted. If resources were not adjusted then the process passes to block . If resources were adjusted then the process passes to block . Block depicts forming a response to indicate the resource adjustment. Thereafter block depicts closing the problem ticket and the process passes to block .

At block if the plan does not include distributing the packaged message to a profile management controller then the process passes to block . Block depicts distributing the parsed message to a troubleshooting agent. Next block depicts a determination whether error analysis and an indicator to close the problem ticket are received. If the error analysis and indicator are received then the process passes to block . If the error analysis and indicator are not received then the process passes to block . Block depicts handling the response message received from the troubleshooting agent according to SAMA policies then the process passes to block . In particular it is important to note that as parsed error messages are distributed from the SAMA to a troubleshooting agent relevant service and application profiles are distributed with the message such that the SAMA enables use of service and application profiles as various troubleshooting stages.

With reference now to there is depicted a high level logic flowchart of the process and program for controlling a troubleshooting agent in accordance with the method system and program of the present invention. As depicted the process starts at block and thereafter proceeds to block . Block illustrates a determination of whether a parsed error message is received. If a parsed error message is received then the process passes to block . Block depicts determining policies for the error. In particular the type of error requester or responder identifier or type of service may specify the types of policies for an error. Next block depicts performing steps to determine a solution and the process passes to block . In particular a troubleshooting agent performs diagnostic steps to identify the problem and find a solution. Troubleshooting agents may advantageously be domain specific such that a troubleshooting agent can perform domain specific diagnostic testing.

Block depicts a determination whether a secondary troubleshooting agent is selected during the steps performed at block . If a secondary troubleshooting agent is not selected then the process passes to block . Block depicts a determination whether the error message is solvable at the troubleshooting agent. If the error message is solvable then the process passes to block which depicts sending the SAMA a message to close the ticket and sending a solution and the process ends. If the error message is not solvable then the process passes to block which depicts responding to the SAMA with a meaningful message and the process ends.

Alternatively at block if a secondary troubleshooting agent is selected then the process passes to block . Block depicts transmitting the error message packet to the secondary troubleshooting agent. Next block depicts a determination whether a response is returned from the secondary troubleshooting agent. If a response is not yet returned then the process iterates at block . If a response is returned then the process passes to block . Block depicts analyzing the response according to the policies of the troubleshooting agent and the process passes to block . In particular the troubleshooting agent may analyze the response from a secondary troubleshooting agent and decide to transmit the error message to another secondary troubleshooting agent with a different specialization.

While the invention has been particularly shown and described with reference to a preferred embodiment it will be understood by those skilled in the art that various changes in form and detail may be made therein without departing from the spirit and scope of the invention. In particular it is important to note that while the description of the present invention focuses on the invention operating in the context of grid applications services agents and controllers the present invention may also apply in the context of normal web services and in distributed architectures in general.

