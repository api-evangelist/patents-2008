---

title: Provisioning virtual resources using name resolution
abstract: A data string including a resource identifier and one or more resource attributes is parsed at a name resolution module and provided to a computing resource provisioning system. The computer resource provisioning system provisions a resource that corresponds to the resource identifier and that has the at least one. A handle is returned to provide access to the resource at a client system.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08336047&OS=08336047&RS=08336047
owner: International Business Machines Corporation
number: 08336047
owner_city: Armonk
owner_country: US
publication_date: 20080825
---
In a computing environment available physical resources may be allocated statically at the time the computing system is initially setup. For example physical resources such as memory processors and disks may be installed into particular machines and the particular machines assigned to particular users. The allocation process may be an out of band process that requires the user to specify resource requirements to an information technology department which then allocates and provisions the system for the user. Re provisioning resources typically requires a rebuild of the system or the allocation of a new system with redefined resource requirements.

In a cloud computing environment virtual resources are provisioned out of band in a manner similar to how physical resources are allocated in a conventional computing environment. For example a user may request a virtual resource using a web interface. In response to the request the user may receive access information for the virtual resource such as an internet protocol IP address associated with a new virtual resource a logical identifier associated with the new virtual resource or a network location of a virtual disk. The user may then use the virtual resource by updating user commands to include access information to the virtual resource before running the user commands or by configuring a system to include access information to the virtual resource before rebooting the system.

A system and method for provisioning virtual resources using name resolution is disclosed. In a particular embodiment the method includes receiving an instruction and a data string at an interface to a computing system. The data string includes a resource identifier and one or more resource attributes. The method includes parsing the data string to extract the resource identifier and the one or more resource attributes. The method also includes providing the resource identifier and the one or more resource attributes to a computing resource provisioning system. The computer resource provisioning system provisions a resource that corresponds to the resource identifier and that has the one or more resource attributes. The method also includes returning a handle to provide access to the provisioned resource during execution of the instruction at a client system coupled to the interface to the computing resource provisioning system.

In another particular embodiment a method includes provisioning a virtual resource of a cloud computing system in response to receiving a command including a name resolution request.

In another particular a system includes a command interface to receive a user command that includes a data string argument. The system includes a name resolution module to parse a resource identifier and one or more resource attributes from the data string argument. The system also includes a provisioning system interface to send a request to a provisioning system to create a resource having the one or more resource attributes and to return a handle to the resource to the name resolution module.

In another particular embodiment a computer program product includes a computer readable medium. The computer readable medium includes first program instructions to receive an instruction and a data string the data string including a resource identifier and one or more resource attributes. The computer readable medium also includes second program instructions to generate a request to a cloud computing system to create a virtual resource having the one or more resource attributes. The computer readable medium also includes third program instructions to enable access to the virtual resource using the resource identifier. The first program instructions the second program instructions and the third program instructions are stored on the computer readable medium.

The cloud computing system includes an interface such as an application programming interface API coupled to a network based graphical user interface GUI and coupled to a resource provisioning system . The provisioning system has access to physical resources and virtual resources . The virtual resources are associated with at least one available physical resource of the physical resources . The physical resources include representative servers S S S and S and a representative data center . The representative data center includes representative servers S S S and S . The virtual resources include representative virtual memories M M and M representative virtual processors P P and P representative virtual bandwidth B B and B and a representative newly created virtual resource C . The representative newly created virtual resource C may be a virtual memory unit a virtual processor unit a virtual bandwidth unit other virtual resource or any combination thereof. For example the cloud computing system may include multiple processors of the servers S S and S that are logically mapped to virtual processing resources P P and P that are accessible to users on an on demand basis. The virtual resources may be subdivisions of existing physical processors disks or memories of servers of the physical resources . For example one or more of the virtual resources may be created by subdividing a portion of the physical resources in response to user demand.

The physical resources include multiple networked computer systems that are accessible to subscribers such as the client on an on demand basis. The representative data center may be physically located at a different location than the representative servers and . The client is configured to execute software program instructions to perform various functions that make use of one or more of the virtual resources . The virtual resources are mapped to the physical resources . The virtual resources may include a logical processing resource that is associated with at least one physical processing unit at a multi processing unit computer system such as the physical resources . Each logical memory resource may be associated with at least one physical storage device.

The resource provisioning system is configured to respond to provisioning requests such as requests sent via an application programming interface API call by dynamically assigning the physical resources . A provisioning request including a user identifier and an account identifier is provided to the resource provisioning system via the application programming interface API of the resource provisioning system . The API is configured to receive provisioning requests from the network based GUI . For example the network based GUI may include one or more web forms to collect user input data and to display results corresponding to provisioning of a virtual resource. The results corresponding to provisioning the virtual resource may include a domain name system DNS address to enable access to the provisioned virtual resource. In a particular embodiment the results corresponding to provisioning the virtual resources may include a port number not shown .

The client is configured to access the virtual resources via the name resolution unit . The name resolution unit enables real time provisioning of resources to be used by the client during execution of software program instructions. Thus the name resolution unit enables the client to use resources without having to separately allocate and provision the resources before using them. For example when a software program instruction indicates to store a file at a disk identified as mydisk that has a capacity of thirty gigabytes the name resolution unit determines whether there is a disk called mydisk of thirty gigabytes. When mydisk exists and has a capacity of thirty gigabytes the name resolution unit returns the handle . When mydisk exists and has a capacity different than thirty gigabytes the name resolution unit sends a request to the cloud computing system to re provision mydisk to have a capacity of thirty gigabytes and returns the handle . When mydisk does not exist the name resolution unit sends a request to the cloud computing system to provision a disk with the identifier mydisk and a capacity of thirty gigabytes and returns the handle .

The name resolution unit may use regular expression rules to identify the identifier and the attributes of the data string . The name resolution unit is configured to generate the API call to request the cloud computing system to provision one or more virtual resources. The name resolution unit is further configured to receive the DNS address used to access a newly provisioned resource of the cloud computing system . The name resolution unit is further configured to return the handle that maps the newly provisioned virtual resource to a user identified name such as the identifier in the data string . The name resolution unit may be integrated into an operating system of the client may be external to the client or any combination thereof.

In operation the client receives a command and a data string for execution and forwards the command and the data string to the name resolution unit for resolution. The data string includes a resource identifier and resource attributes . In an illustrative embodiment the data string is a path to the resource. The name resolution unit receives the command and the data string from the client . The command may be an instruction associated with one of the virtual resources such as a store instruction a retrieve instruction or a modify instruction. The name resolution unit parses the data string to extract the resource identifier and the resource attributes .

The name resolution unit determines whether the data string references a previously provisioned resource. When the data string references a previously provisioned resource the name resolution unit returns a handle . The handle enables the client to access the previously provisioned resource referenced by the data string . When the data string does not reference a previously provisioned resource the name resolution unit generates a request to the cloud computing system to provision a new virtual resource. In a particular embodiment the request is an application programming interface API call that bypasses the network based GUI . The API call may include context information related to the command such as a user identifier or an account identifier . The user identifier and the account identifier may be used to track virtual resource usage information for billing purposes. For example the user identifier may be used to keep track of an individual user s usage of virtual resources. The account identifier may be used to keep track of a set of users usage of virtual resources.

The cloud computing system provisions and allocates the requested virtual resource and returns the DNS address to enable access to the virtual resource to the name resolution unit . The name resolution unit associates the DNS address with the handle and returns the handle to the client to enable the client to access the newly provisioned virtual resource via the handle .

Within the cloud computing system the resource identifier and the resource attributes are received at the resource provisioning system via the API . The resource provisioning system provisions the newly provisioned resource C that corresponds to the resource identifier and that has the resource attributes . For example when the resource identifier and the resource attributes identify a server with a particular capacity the representative newly provisioned resource C is provisioned as a virtual server having the particular capacity. To illustrate when the resource identifier is mydisc and the resource attributes is six terabytes the representative newly provisioned resource C is a virtual server with a six terabyte capacity that is referenced as mydisc . When the resource identifier and the resource attributes identify a processor cpu10k with a capacity often thousand floating point operations per second FLOPS the representative newly provisioned resource C is a virtual processor with a capacity of ten thousand FLOPS that is referenced as cpu10k . When the resource identifier and the resource attributes identify a memory mem100M with a capacity of one hundred megabytes the representative newly provisioned resource C is a virtual memory with a capacity of one hundred megabytes that is referenced as mem100M .

In response to making the API call via the API the name resolution unit receives a domain name system DNS address to access the resource C . The name resolution unit stores the DNS address and associates the DNS address with the handle . The name resolution unit returns the handle to enable the client to access the resource C during execution of the command . The handle may include context information for the command such as the user identifier or the account identifier as environment variables to further distinguish virtual resources such as when multiple users may duplicate virtual resource names.

After the resource C has been provisioned the data string may be resolved to access the resource C via the handle . When the data string is subsequently encountered by the client such as in a later instruction in the software program executed at the client the name resolution unit performs a lookup operation using the handle to retrieve the DNS address .

Thus the resource provisioning system provisions the virtual resource C of the cloud computing system in response to the command that triggers a name resolution request to the name resolution unit such as by including the data string as an argument to the command and the resource provisioning system provisions the virtual resource C during a runtime execution of the command at the client . A name of a resource such as a name based on the identifier and the attribute of the virtual resource C are received at the cloud computing system via the application programming interface API in response to the command that triggers the name resolution request. The cloud computing system receives the name and the attribute of the resource independent of the network based GUI avoiding any manual provisioning steps. The name resolution unit resolves the name resolution request by returning the handle to the virtual resource C . The handle can be used by the client to complete execution of the command . Thus the system enables the client to execute a command having the data string as its argument even when the data string does not reference a resource that was provisioned prior to execution of the command .

To illustrate a library interface may be provided to enable dynamic resource provisioning. For example the command 

includes a command dial a data string cloud storage mydisk capacity 2 GB having the attribute storage the capacity 2 GB and the identifier mydisk . In this example the resource is two gigabytes of virtual memory. The name resolution unit recognizes that cloud references a virtual memory resource in the cloud computing system that has a capacity of 2 GB. The name resolution unit may return dev sda1 as a handle to the virtual memory resource when virtual memory resources are available and may return an error when virtual memory resources are not available.

As another illustration an alternate file system interface may be provided to enable dynamic resource provisioning. For example the command 

As a third illustration a network interface may be provided to enable dynamic resource provisioning. For example 

The system enables a user of the cloud computing system to avoid the step often a manual step of provisioning a resource before using the resource because the system enables on the fly dynamic provisioning. The system enables provisioning and use of virtual resources at runtime while eliminating the need for out of band provisioning using the GUI by sending requests to the provisioning system independent of a graphical user interface. The dynamic provisioning may be enabled using a universal resource name URN that contains a name meaningful to the user and that identifies sufficient attributes to allow for provisioning of the resource when the resource is not previously provisioned. When a URN references an un provisioned resource the resource is provisioned with the attributes and name of the URN. The dynamic provisioning may be transparent to the clients in that the dynamic provisioning may take place without the clients being aware that a resource was provisioned in response to a reference to a previously non existent resource. The URN may be combined with additional context related information such as a user identity or a logical system identity to enable billing for use of the resource.

The user identity or logical system identity may be associated with a billing model that permits billing based on usage time provisioned bandwidth provisioned memory or provisioned processing power. Each user identity or logical system identity may have restrictions to restrict or limit the number of resources that can be provisioned. For example an employer may restrict the maximum number of resources each employee can use at a given time to ensure that the amount of resources used by employees do not exceed a budgeted amount.

The name resolution unit includes a command interface a name resolution module a resource table and a provisioning system interface . The command interface is configured to receive a user command that includes a data string as an argument to the user command . The name resolution module is configured to parse the data string to retrieve a resource identifier and a resource attributes from the data string . The name resolution module is configured to determine whether the resource attributes references a resource in the resource table .

The name resolution nodule includes a resolver that is configured to use regular expression rules to identify at least a first portion of the data string and to forward at least a second portion of the data string that is not identified by the resolver to a resolution hander. For example the resolver may be configured to access the first resolution hander to resolve file system identifiers the second resolution handler to resolve domain name system DNS identifiers and a cloud resolution handler that includes the provisioning system interface in communication with the provisioning system to resolve cloud or virtual resource identifiers. As an example if the resolver determines that a first portion of the data string includes the term cloud the resolver may be configured to send the remainder of the data string or the entire data string to the cloud resolution hander .

When the resource attributes does not reference a virtual resource identified in the resource table the provisioning system interface is configured to send a request to the provisioning system to create the resource . The provisioning system creates the resource with the resource attributes and associates the resource identifier with the resource . For example when the resource attributes is four gigabytes of memory and the resource identifier is mem1 the provisioning system creates a memory having four gigabytes of memory and associates the name mem1 with the created resource. In an illustrative embodiment the resource attributes may specify a capacity of a virtual memory device a throughput of a virtual processor device or a throughput of a virtual bandwidth.

The provisioning system interface is configured to receive a DNS address from the provisioning system . The DNS address enables access to the resource . The provisioning system interface is configured to associate a handle with the DNS address to enable access to the resource . The handle is returned to the name resolution module . The name resolution module uses a table entry of the resource table to associate the handle with the DNS address .

When the resource attributes references an entry in the resource table the name resolution module is configured to perform a lookup operation at the resource table using the resource attributes to retrieve the handle associated with the resource attributes . When the resource was previously provisioned and the resource attributes does not match the attributes of the resource the provisioning system interface is further configured to send a request to modify the resource that is associated with the resource identifier by re provisioning the resource . For example when the resource is a virtual processor having a particular number of processing units and the resource attributes indicates a different number of processing units associated with the resource the provisioning system interface is configured to send the request to modify the resource to have the number of processing units as specified by the resource attributes .

The system enables a client to execute a command having the data string as its argument even when the data string does not reference a resource that exists prior to execution of the command . The name resolution module determines whether the data string references a provisioned resource by performing a lookup operation at the resource table . When the data string does not reference a provisioned resource in the resource table the provisioning system interface sends the request to the provisioning system to provision the resource. The provisioning system creates the requested resource not shown and returns information used to access the newly provisioned resource. The name resolution module associates the information to access the newly provisioned resource with a handle that enables a client to access the newly provisioned resource and returns the handle to the client. When the client subsequently references the provisioned resource the name resolution module performs a lookup using the resource table to retrieve the handle used to access the resource.

The system enables on demand dynamic provisioning that creates a virtual resource in response to executing a command referencing a resource that cannot be resolved by a lookup of the resource in the resource table . In addition the system enables on the fly dynamic re provisioning that re provisions a resource when a command referencing the resource indicates that the resource has an attribute different than the current attribute of the resource. For example the resource may initially be provisioned to have two hundred gigabytes of memory capacity. During execution of the command when the attribute indicates that the resource has two terabytes of memory capacity name resolution unit determines that the resource does not currently have two terabytes of memory capacity and sends the request to re provision the resource accordingly.

The terminal is configured to access virtual resources via the DNS server and the synthetic file system . When the DNS server or the synthetic file system attempt to access a virtual resource the provisioning and name resolution unit is configured to determine whether the virtual resource has been provisioned. When the virtual resource has been provisioned the provisioning and name resolution unit performs a lookup for a handle to enable access to the virtual resource at the resource mapping database and returns the handle to the DNS server or the synthetic file system . When the virtual resource has not been provisioned the provisioning and name resolution unit is configured to send a request to provision the virtual resource to the resource provisioning system . The resource provisioning system receives the provisioning request and provisions a virtual resource of the resources and then returns information such as a DNS identifier to enable access to the virtual resource. The name resolution unit receives the information from the resource provisioning system associates a handle with the information stores the handle and the information in the resource mapping database and returns the handle to the DNS server or to the synthetic file system .

A command and a data string are received at . Moving to a type of the data string is determined. Continuing to a type of resolver is determined based on the type of the data string. For example each type of data string may have its own associated resolver. In an illustrative embodiment a first resolver is used to resolve a first data string associated with a memory resource a second resolver is used to resolve a second data string associated with a processor resource and a third resolver is used to resolve a third data string associated with a bandwidth resource. Advancing to user and system information associated with the data string is determined. The user and system information associated with the data string include information related to the context within which the command and data string are executed and may be used to distinguish resource requests when more than one user references the same resource. For example when multiple users access a common virtual resource the user and system information may be used to distinguish requests from the different users to access the common virtual resource.

Proceeding to a determination is made whether the data string matches an existing database entry. For example where the data string in matches a data string in the resource table the referenced resource has already been provisioned and the name resolution unit can return the corresponding handle from the resource table . Where the data string matches a database entry a determination is made at whether attributes of the data string match the database entry. The data string matches a database entry when the resource was previously provisioned.

Where the attributes match the database entry at a handle is returned at and the method ends at . Where the attributes do not match the database entry at a determination is made whether the resources are available at . When the attributes do not match the database entry at attempt is made to re provision the resource to have the attributes. Where the resources are not available at an error is reported at and the method ends at .

Where the resources are available at the method proceeds to . At the virtual resources are re provisioned with new attributes the handle is returned at and the method ends at . Where the data string does not match the database entry at the method proceeds to . For example in where the data string does not match an entry in the resource table the name resolution unit sends a request to the provisioning system to provision the resource referenced by the data string . At a new entry is created in a resource database. Proceeding to a determination is made whether the resources are available. For example the resources may be virtual resources such as processing power memory hard disk space bandwidth other computing related resources or any combination thereof. Where the resources are not available at an error is reported at and the method ends at . Where the resources are available at a new virtual resource is created at . Advancing to the new virtual resource is associated with a handle and the handle is stored in the resource database. Moving to the handle is returned and the method ends at .

A name of a resource is received at a resolver at . Moving to a handle is associated with a name of a device. In one illustrative embodiment the resolver may request that a resource be provisioned and assigned the received name. The resolver may receive the provisioned resource and associate a handle with the name of the provisioned resource. In another illustrative embodiment the resolver may perform a lookup to retrieve a handle for the name associated with the resource. Continuing to attributes of the device are mapped to a synthetic file. A synthetic file system provides a file system interface enabling software programs to use simple file operations without having to interact with the underlying protocols. Advancing to a normal mount operation preparing the resource for use is performed. For example when a mount operation is performed on a disk drive the file system of the disk drive is made available to the operating system. The method ends at .

A DNS host name is received at . Proceeding to a determination is made whether the DNS host name references a cloud address at a cloud computing system. Where the DNS host name does not reference an address at a cloud computing system a normal DNS host name resolution is performed at and the method ends at . Where the DNS host name references a cloud computing system at the DNS host name is resolved using device attributes at . Continuing to the device attributes of the virtual resource are mapped to a synthetic file. Moving to an address is returned to a new or existing resource and the method ends at .

Proceeding to a user identifier or an account identifier may be provided to the computing resource provisioning system. The user identifier and the account identifier may be used to bill for the use of resources. For example billing may be based on an individual user or based on an account that has multiple users accessing the resources. Advancing to a domain name system DNS address to access the resource may be received and the DNS address stored at . Moving to a handle is provided to access the resource during execution of the instruction at a client system coupled to the interface. Proceeding to the DNS address is retrieved in response to a lookup operation that includes the handle. The method ends at .

A virtual resource of a cloud computing system is provisioned in response to a command including a name resolution request at . Proceeding to a name of the virtual resource and an attribute of the virtual resource are provided to an interface to the cloud computing system in response to the name resolution request. Advancing to the name resolution request is resolved by returning a handle to the virtual resource. The method ends at .

An instruction and a data string are received at . The data string includes a resource identifier one or more resource attributes and a provisioning system indicator. Continuing to a request is generated to a cloud computing system to create a virtual resource having the one or more resource attributes. Proceeding to access to the virtual resource is enabled using the resource identifier. Advancing to the request is sent to the provisioning system independent of a graphical user interface. The method ends at .

In the depicted example the computing system includes a processor a main memory an input device such as a keyboard or mouse a display device and a network adapter . The network adapter is coupled to a remote computing system such as the cloud computing system in . The network adapter is also coupled to a client such as the client in .

The main memory includes computer instructions installed onto a computer readable medium. The main memory includes first program instructions to receive an instruction and a data string the data string including a resource identifier not shown and one or more resource attributes not shown . The main memory also includes second program instructions to generate a request to the remote computing system to create a virtual resource having the one or more resource attributes. The main memory also includes third program instructions to enable access to the virtual resource using the resource identifier.

The request to the remote computing system includes at least one command to an application program interface API of a provisioning system for an on demand computing resource system. In the API and the on demand computing resource system are included in the remote computing system and therefore not shown. The on demand computing resource system includes at least one set of networked computers at a data center having processing resources that are available to remote users as virtual resources that are provisioned on an on demand basis. The main memory also includes fourth program instructions to send the request independent of a graphical user interface to the provisioning system.

An operating system not shown runs on the processor and coordinates and provides control of various components within the computing system . The operating system may be a commercially available operating system such as Microsoft Windows XP Microsoft and Windows are trademarks of Microsoft Corporation in the United States other countries or both . An object oriented programming system such as the Java programming system may run in conjunction with the operating system and provide calls to the operating system from Java programs or applications executing on the computing system Java and all Java based trademarks are trademarks of Sun Microsystems Inc. in the United States other countries or both .

The hardware in computing system may vary depending on the implementation. Other internal hardware or peripheral devices such as flash memory equivalent non volatile memory or optical disk drives and the like may be used the computing system but are not illustrated in for clarity of explanation. Also the processes of the disclosed illustrative embodiments may be applied to a multiprocessor data processing system.

The depicted examples in and described above are not meant to imply architectural limitations. For example portions of the computing system also may be implemented in a personal computer server server cluster tablet computer laptop computer or telephone device.

Particular embodiments of the computing system can take the form of an entirely hardware embodiment an entirely software embodiment or an embodiment containing both hardware and software elements. In a particular embodiment the disclosed methods are implemented in software that is embedded in processor readable medium and executed by a processor which includes but is not limited to firmware resident software microcode etc.

Further embodiments of the present disclosure such as the one or more embodiments in can take the form of a computer program product accessible from a computer usable or computer readable medium providing program code for use by or in connection with a computer or any instruction execution system. For the purposes of this description a computer usable or computer readable medium can be any apparatus that can tangibly embody a computer program and that can contain store communicate propagate or transport the program for use by or in connection with the instruction execution system apparatus or device.

In various embodiments the medium can include an electronic magnetic optical electromagnetic infrared or semiconductor system or apparatus or device or a propagation medium. Examples of a computer readable medium include a semiconductor or solid state memory magnetic tape a removable computer diskette a random access memory RAM a read only memory ROM a rigid magnetic disk and an optical disk. Current examples of optical disks include compact disk read only memory CD ROM compact disk read write CD R W and digital versatile disk DVD .

A data processing system suitable for storing and or executing program code may include at least one processor coupled directly or indirectly to memory elements through a system bus. The memory elements can include local memory employed during actual execution of the program code bulk storage and cache memories which provide temporary storage of at least some program code in order to reduce the number of times code must be retrieved from bulk storage during execution.

Input output or I O devices including but not limited to keyboards displays pointing devices etc. can be coupled to the data processing system either directly or through intervening I O controllers.

Network adapters may also be coupled to the data processing system to enable the data processing system to become coupled to other data processing systems or remote printers or storage devices through intervening private or public networks. Modems cable modems and Ethernet cards are just a few of the currently available types of network adapters.

The previous description of the disclosed embodiments is provided to enable any person skilled in the art to make or use the disclosed embodiments. Various modifications to these embodiments will be readily apparent to those skilled in the art and the generic principles defined herein may be applied to other embodiments without departing from the scope of the disclosure. Thus the present disclosure is not intended to be limited to the embodiments shown herein but is to be accorded the widest scope possible consistent with the principles and features as defined by the following claims.

