---

title: Service binding
abstract: Embodiments for performing service binding between a client and a target server are disclosed. In accordance with one embodiment, a clear text client service binding value is received from a client at the target server, the client service binding value is compared to a server service binding value, and a communication channel is formed between the client and the target server when the client service binding value matches the server service binding value.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08850553&OS=08850553&RS=08850553
owner: Microsoft Corporation
number: 08850553
owner_city: Redmond
owner_country: US
publication_date: 20080912
---
Channel binding is a method of enabling secured communication between a client computer and a server over a network by cryptographically binding together an outer channel e.g. a transport layer security TLS channel with an inner channel e.g. NTLM Kerberos . However channel binding may have difficulty with gateway transversal where the server responsible for inner channel authentication is not the same server that is responsible for outer channel authentication. Channel binding also cannot be used when the outer secure channel does not exist e.g. the traffic is sent unprotected over TCP IP or when outer channel does exist but does not support channel binding e.g. IPSec .

This Summary is provided to introduce a selection of concepts in a simplified form that is further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used to limit the scope of the claimed subject matter.

Described herein are embodiments of various technologies for service binding between a client computer and a network server. In various embodiments service binding may address the limitations associated with channel binding. In one embodiment creating a communication channel to a target server includes receiving a cryptographically protected client service binding value from a client at the target server the client server binding value being available to the target server in clear text. The embodiment also includes comparing the client service binding value to a server service binding value and forming a communication channel between the client and the target server when the client service binding value matches the server service binding value. Other embodiments will become more apparent from the following detailed description when taken in conjunction with the accompanying drawings.

This disclosure is directed to embodiments of service binding between a client and a server to establish a secure communication channel in a network environment. Specifically the embodiments described herein are directed to making a clear text service binding value from a client available to a target server. In various embodiments the clear text service binding value may be derived from a persistent property of the target server. For example but not as a limitation the clear text service binding value may be a name recognized by the target server. The use of a persistent property of the target server as a clear text binding value may reduce the problem of built in obsolesce and or expiration associated with binding values derived from server certificates. The clear text service binding values may also enable the target server to implement service binding in conjunction with channel binding so that a secure communication channel may be established even in instances where channel binding cannot be established between the client and the server. Various examples of service binding are described below with reference to .

As shown in an outer communication channel may be established between the client and the gateway . In at least one embodiment the outer communication channel may be established using a Transport Layer Security TLS protocol.

Once the outer communication channel is established the client may establish an inner communication channel with the target server via the gateway . In various embodiments the inner communication channel may be created using one of a NT LAN Manger NTML protocol a Kerberos protocol or a Digest protocol.

Nevertheless while it is possible to establish the inner communication it is not possible to perform channel binding between the inner communication channel and the outer communication channel using channel binding values. As described above channel binding is a software security technique that binds together an outer communication channel e.g. a TLS protocol based communication channel with an inner channel communication e.g. a NTML protocol based communication channel to prevent security threats such as authentication relay attacks.

In order to perform channel binding it is necessary for the target server to match a client channel binding CB C value of the client to a server channel binding CB S value of the gateway . However the CB C value and the CB S value are derived properties of the outer channel . Further these channel binding values not readily transferrable to the target server for the performance of channel binding.

Accordingly service binding authentication techniques may be implemented on the inner communication channel between the client and the target server as an alternative to channel binding. In this way the inner communication channel may be protected from security threats such as authentication relay attacks without relying exclusively on channel binding.

In various embodiments following the creation of the inner communication channel the client may authenticate to the target server over the inner communication channel using service binding techniques. During the authentication the client may initiate an authentication exchange with the target server . In at least one embodiment the transfer of the authentication exchange from the client to the target server may be facilitated by the gateway that is a first gateway encountered by the client . In other words the client may initiate an authentication exchange with the gateway . In turn the gateway may relay the authentication exchange to the target server .

As part of the authentication exchange the client may transmit the clear text CB C value and a clear text client service binding SB C value to the target server in cryptographically protected manner to make them safe from tampering by a man in the middle MITM . As used herein clear text refers to a SB C value such as the SB C value not being irreversibly transformed into a different value via a one way function e.g. a one way hashed function that transforms an input into a hashed output.

The target server may use the received CB C value to verify that the clear text SB C value is transmitted over a valid outer communication channel such as outer communication channel . In at least one embodiment the target server may verify that the CB C value is non default e.g. the CB C value is not a default value that a client would use to indicate absence of an outer channel . Accordingly the target server may interpret a non default CB C value as indicating that the client has sent the authentication exchange over a valid outer channel and has verified that the gateway is a legitimate recipient.

The clear text SB C value may include an identifier of a service that the client intends to reach. In various embodiments the identifier of the service may include a name that is associated with the service. For example but not as a limitation the identifier may be a name assigned to a gateway such as the gateway during the initial configuration of the gateway by a system administrator.

Furthermore despite that fact that the SB C value is provided to the target server in clear text the SB C value is nevertheless cryptographically protected from tampering and or forgery e.g. man in the middle attack also referred to as MITM . That is in various embodiments the SB C value may be cryptographically protected during conveyance from the client to the target server by a protocol of the authentication exchange that creates the inner communication channel . For example but not as a limitation the SB C value may be protected by one of a NT LAN Manger NTML protocol a Kerberos protocol or a Digest protocol.

In embodiments where the outer communication channel is established based on the TLS protocol the client may derive the SB C value from a name of the gateway . In such embodiments the client may validate the certificate of the gateway and then obtain the name of the gateway for use as the SB C value .

Upon receiving the SB C value that originated from the client the target server may compare the clear text SB C value with a server service binding SB S value stored in the target server . For example but not as a limitation the SB S value may be a name of the gateway . The gateway name may be stored on the target server during the initial configuration of the server by a system administrator. As further described below the client may be authenticated to the target server when the SB C value matches the SB S value . Accordingly the inner communication channel may provide an authenticated i.e. service bound communication pathway between the client and the target server when the client is authenticated.

As shown the client may establish a communication channel with the target server via the gateway . In various embodiments the communication channel may be created using one of a NT LAN Manger NTML protocol a Kerberos protocol or a Digest protocol.

In various embodiments the client may further authenticate to the target server over the established communication channel . When this is the case the communication channel should be protected from security threats such as authentication relay attacks.

During the authentication the client may initiate an authentication exchange with the target server . In at least one embodiment the transfer of the authentication exchange from the client to the target server may be facilitated by the gateway that is a first gateway encountered by the client . In other words the client may initiate an authentication exchange with the gateway . In turn the gateway may relay the authentication exchange to the target server .

As part of the authentication exchange the client may transmit a clear text client service binding SB C value to the target server in cryptographically protected form. As used herein clear text refers to a SB C value such as the SB C value not being irreversibly transformed into a different value via a one way function e.g. a one way hashed function that transforms an input into a hashed output.

The clear text SB C value may include an identifier of a service that the client intends to reach. In various embodiments the identifier of the service may include a name that is associated with the service. In one embodiment the identifier may be a name assigned to a gateway such as the target server during the initial configuration of the gateway by a system administrator.

Furthermore despite that fact that the SB C value is provided to the target server in clear text the SB C value is nevertheless protected from tampering and or forgery e.g. man in the middle attack also referred to as MITM . That is in particular embodiments the SB C value may be protected during conveyance from the client to the target server by a protocol of the authentication exchange that creates the authenticated channel . For example but not as a limitation the SB C value may be protected by one of a NT LAN Manger NTML protocol a Kerberos protocol or a Digest protocol.

Upon receiving the SB C value the target server may compare the clear text SB C value with a server service binding SB S value stored in the target server . For example but not as a limitation the SB S value may be a name of the gateway . The gateway name may be stored on the target server during the initial configuration of the server by a system administrator. As further described below the client may be authenticated to the target server when the SB C value matches the SB S value . Once authenticated the communication channel between the target server and the client may be transformed into an authenticated i.e. service bound communication channel .

It will be appreciated that while in certain embodiments the client may establish a service bound communication channel with the target server via a gateway such as the gateway the client may also directly establish a service bound communication channel with the target server without routing the channel through an intermediate gateway.

As shown in a first outer communication channel may be established between the client and the gateway . In at least one embodiment the first communication channel may be established using a Transport Layer Security TLS protocol.

In some embodiments a second outer communication channel may be established by the gateway to the target server . For instance the gateway may be a multi hop gateway that redirects communication from the client to the target server via a secured communication channel. In at least one embodiment the second outer communication channel may also be created based on the Transport Layer Security TLS protocol or the IPSec protocol.

Once the first and second communication channels and are established the client may create an inner communication channel with the target server . In various embodiments the inner communication channel may be created using one of a NT LAN Manger NTML protocol a Kerberos protocol or a Digest protocol.

Nevertheless while it is possible to establish an inner communication channel it is not possible to perform channel binding between the inner communication channel and either the first communication channel or the second communication channel .

As shown in the first communication channel may include the first client channel binding CB C value and the first server channel binding CB S value that are independently derived from the first communication channel by the client and the gateway respectively. Likewise the second communication channel may include a second CB C value and a second CB S value that are independently derived from the second communication channel by the gateway and the server respectively.

Similar to described above in channel binding may be performed if a target server is able to match a known CB S value to a CB C value from a client. In this instance it is not possible for the target server to match the first CB C value to the second CB S value as they are derived from different communication channels. Thus as described below service binding may be implemented on the inner communication channel between the client and the server . In this way the inner communication channel may be protected from security threats without relying solely on channel binding. In various embodiments following the creation of the inner communication channel the client may authenticate to the target server using server binding techniques. During the authentication process the client may initiate an authentication exchange with the target server . As part of the authentication exchange the client may transmit the CB C value and a clear text client service binding SB C value to the target server in cryptographically protected form. As used herein clear text refers to a service binding value such as the SB C value not being irreversibly transformed into a different value via a one way function e.g. a one way hashed function that transforms an input into a hashed output.

The target server may use the received CB C value to verify that the clear text SB C value is transmitted over one or more valid outer communication channels such as the first outer communication channel . In at least one embodiment the target server may verify that the CB C value is non default e.g. the CB C value is not a default value that a client would use to indicate absence of an outer channel . Accordingly the target server may interpret a non default CB C value as indicating that the client has sent the authentication exchange over a valid outer channel and has verified that the gateway is the intended recipient.

The clear text SB C value may include an identifier of a service that the client intends to reach. In various embodiments the identifier of the service may include a name that is associated with the service. For example but not as a limitation the identifier may be a name assigned to a gateway server such as the gateway during the initial configuration of the gateway by a system administrator.

Furthermore despite that fact that the SB C value is provided to the target server in clear text the SB C value is nevertheless cryptographically protected from tampering and or forgery e.g. man in the middle attack also referred to as MITM . That is in particular embodiments the SB C value may be protected during conveyance from the client to the target server by a protocol of the authentication exchange that creates the inner communication channel . For example but not as a limitation the SB C value may be protected by one of a NT LAN Manger NTML protocol a Kerberos protocol or a Digest protocol.

In embodiments where the first outer communication channel is implemented based on the TLS protocol the client may derive the SB C value from a name of the gateway. In such embodiments the client may validate the certificate of the gateway and then obtain the name of the gateway for use as the SB C value . Upon receiving the SB C value that originated from the client the target server may compare the clear text SB C value with the server SB S value stored in the target server . For example but as a limitation the SB S value may be a name of the gateway . The gateway name may be stored on the target server during the initial configuration of the server by a system administrator. As further described below the client may be authenticated to the target server when the SB C value matches the SB S value . Accordingly the inner communication channel may provide an authenticated i.e. service bound communication pathway between the client and the target server when the client is authenticated.

As shown in one or more exemplary target servers may include servers that are configured with wild card server service binding SB S values. In some embodiments the one or more exemplary target servers may also perform similar functions. For example but not as a limitation the one or more servers may include a first mail server named mail 1.company.com and a second mail server named mail 2.company.com . The server may have the SB S value mail x.company.com and the server may have an identical SB S value mail x.company.com where x is a wild card representation.

The client may establish an authenticated communication channel with one of the target servers . During the establishment of the authenticated communication channel the client may initialize an authentication exchange to authenticate to one of the servers . In at least one embodiment the client may provide a clear text client service binding SB C value that enables wild card matching to both the SB S value and the SB S value . For example but not as a limitation the client may be configured to provide a clear text SB C value e.g. mail z.company.com . In various embodiments as described above the client may obtain the clear text SB C value dynamically from another server such as a gateway server.

In turn each of the target servers may be configured to receive the SB C value and compare it to a stored server service binding SB S value. For example the target server may compare the clear text SB C value e.g. mail z.company.com with a SB S value mail x.company.com . Likewise the target server may also compare the clear text SB C value with the SB S value .

Since x in each of the SB S value and the SB S value is a wild card representation the SB C value may match SB S value and or SB S value . Accordingly the client may use the SB C value to establish the authenticated communication channel with any one of the exemplary servers such as the server or the server . In various embodiments the establishment of the authenticated communication channel with a particular one of the servers may be dependent on the availability of each server e.g. workload available bandwidth etc. .

It will be appreciated that while wild card matching of a clear text SB C value to a SB S value for the establishment of a authenticated communication channel has been illustrated with respect to the servers and the concept of wild type matching may be implemented a server farm that includes any plurality of servers such as in a server farm that implements reverse proxy. Moreover for the purpose of wild card matching a SB S value may include any number of wild card representations in any combination so long as the SB C value is capable of being matched to a SB S value of a server. Accordingly the exemplary SB C and SB S values shown in are illustrative rather than limiting.

The client may store program instructions in the memory . The program instructions or modules may include routines programs objects components and data structures that perform particular tasks or implement particular abstract data types. The modules may be implemented as software or computer executable instructions that are executed by one or more processors . As shown in a service binding engine may include an input output module a binding value module and a packing module . However it will be appreciated that the client may also include other modules that perform other functions e.g. channel binding gateway certificate validation etc. .

The input output module may enable the client to establish communication with one or more servers such as the target server . The input output module may be configured to use a wireless interface and or a wired interface not shown . The wireless interface may include but is not limited to a wireless RF interface e.g. cellular PCS WiFi Ultrawideband Bluetooth satellite transmissions RFID etc. an infrared interface and the like. The wired interface may include a direct I O interface such as a category 5 interface a serial interface a USB interface and the like.

The binding value module may be configured to generate client service binding SB C values such as the SB C value . In embodiments where the client has previously establish a communication channel between a client and a gateway using the Transport Layer Security TLS protocol the binding value module may derive a SB C value from a name of the gateway. The binding value module may derive the SB C after the client has validated the certificate of the gateway. In other embodiments the binding value module may provide a SB C value that is obtained based on the service that a user intends to reach. For example when a user intends to reach a particular website e.g. http www.website.com the binding value module may consult one or more domain name servers DNS to obtain a name of the server that corresponds to the universal resource location URL of the particular website. In some instances the obtained server named is the name of a gateway server such as the gateway server . In various embodiments the name of a server that is obtained by the binding value module may be one of several forms. For example but not as a limitation the name may be in NetBIOS form a full domain name form and or other standard naming conventions.

The packing module may be configured to ensure that the SB C values generated by the binding value module are cryptographically protected from tampering and or forgery in the authentication exchange to a target server. In embodiments where the client may attempt to authenticate to a server and establish an authenticated communication channel using the Kerberos protocol the packing module may package a SB C value such as SB C value in the protected canonical name CNAME record of a Kerberos service ticket. In other embodiments where the client may attempt to establish an authenticated communication channel using the NTLM protocol the packing module may format the SB C value as a protected attribute value pair in an extensible field of a NTML authentication message. In additional embodiments where the client may attempt to establish an authenticated communication channel using Digest protocol the packing module may package the SB C value as a protected directive of a Digest message.

The target server may store program instructions in the memory . The program instructions or modules may include routines programs objects components and data structures that perform particular tasks or implement particular abstract data types. The modules may be implemented as software or computer executable instructions that are executed by one or more processors . As shown in a service binding engine may include an input output module an unpacking module a comparison module and a data storage module . However it will be appreciated that the target server may also include other modules that perform other functions e.g. channel binding .

The input output module may enable the target server to establish communication with one or more clients such as the client . The input output module may be configured to use a wireless interface and or a wired interface not shown . The wireless interface may include but is not limited to a wireless RF interface e.g. cellular PCS WiFi Ultrawideband Bluetooth satellite transmissions RFID etc. an infrared interface and the like. The wired interface may include a direct I O interface such as a category 5 interface a serial interface a USB interface and the like.

The unpacking module may be configured to extract the clear text SB C values from authentication exchanges sent by a client such as client . In embodiments where an authentication exchange sent by a client is encoded by the Kerberos protocol the unpacking module may derive a clear text SB C value such as SB C value from a protected canonical name CNAME record of a Kerberos service ticket. In embodiments where an authentication exchange sent by a client is encoded by the NTLM protocol the unpacking module may extract the SB C value from a protected attribute value pair in an extensible field of a NTML authentication message. In additional embodiments where an authentication exchange is encoded by a Digest protocol the unpacking module may unpack the SB C value from a protected directive of a Digest message.

The comparison module may be configured to ascertain whether a clear text CB C value as received from a client e.g. client is a non default value. In at least one embodiment comparison module may interpret a non default CB C value as received from a client to indicate that the client has sent the authentication exchange over a valid outer channel and has verified that the target server is a legitimate recipient.

The comparison module may be further implemented to compare the clear text SB C values as received from a client to a SB S value that is stored in the target server. As described above in various embodiments the SB S value may be a name of the target server a value derived from the name of a gateway and known to the target server a value that includes one or more wild card representations or some other value that matches a SB C value. The comparison module may be configured to employ wild card matching as described in to match a clear text SB C value to a SB S value as well as employ one to one match. Thus comparison module may direct the target server to establish an authenticated communication channel between the target server and a client e.g. client when the received CB value is non default and or the clear text SB C value matches the SB S value.

The data storage module is configured to store data in a portion of memory e.g. a database . In various embodiments the data storage module may be configured to store a SB S value e.g. a name of a gateway the domain name that corresponds to the gateway name service principal name SPN ports for forming communication connections as well as other pertinent information.

In various embodiments the name of a server unpacked by the unpacking module as well as server names stored in the data storage module may be one of several forms. For example but not as a limitation the name may be in NetBIOS form a full domain name form and or other standard naming conventions. Accordingly the comparison module may be further configured identify the form of the name received from a client such as the client prior to making a comparison.

Furthermore the order in which the operations are described is not intended to be construed as a limitation and any number of the described blocks can be combined in any order and or in parallel to implement the process. For discussion purposes the processes are described with reference to the exemplary network environments of although they may be implemented in other system architectures. The exemplary process may include steps that are implemented on any one of the clients described above such as the client as well as steps that are implemented on any one of the target servers described above such as the target server .

At block one or more outer communication channels may be established. In some embodiments the one or more established outer communication channels may include an outer communication channel for the client and a gateway that is interspersed between the client and the target server. In other embodiments the one or more established outer communication channels may include a plurality of outer communication channels connecting the client the gateway and the target server. In various embodiments the outer communication channels may be established using a Transport Layer Security TLS protocol and or the IPSec protocol.

At block the client may arrive at a client service binding SB C value and a client channel binding CB C value. The SB C value may include the name of a gateway. As described above the client may derive the name of the gateway after the client validates the certificate of the gateway. Alternatively the client may obtain a SB C value from one or more domain name servers DNS based on a domain name of a service that the user intends to reach. The CB C value may be derived from an outer communication channel between the client and the gateway.

At block the target server may arrive at a server service binding SB S value and a server channel binding value CB S value. For example but not as a limitation the target server may derive the CB S value from an outer communication channel between the client and the gateway. In other embodiments the target server may derive the CB S value may from a name of a gateway the gateway being interspersed between the client and the target server. It will be appreciated that blocks and may be implemented in parallel.

At block an inner communication channel may be established between the client and the target server. The inner communication channel may be established based on a NT LAN Manger NTML protocol a Kerberos protocol or a Digest protocol.

At block the client may send the clear text SB C value and the CB C value to the target server via the communication channels. The SB C and CB C values may be sent as part of an authentication exchange that seeks to establish an authenticated communication channel between the client and the target server. Both the CB C value and the clear text SB C value are cryptographically protected during the transit to the target server. In various embodiments these values may be protected by a communication protocol mechanism such as one of a NT LAN Manger NTML protocol a Kerberos protocol or a Digest protocol.

At block the clear text SB C value and the CB C value may be received by the target server over a network environment. The network environment may be one of the network environments or . While the clear text SB C value is cryptographically protected during its transit from the client it is nevertheless available to the target server in clear text form.

At decision block the target server may determine whether it is able to implement channel binding that binds an inner communication to an outer communication channel. In various embodiments the target server may be able to implement channel binding if it is able to match the CB S value to a client channel CB C value.

For example with respect to the target server may match the CB S value to a CB C value if the gateway and the target server are actually one server. In which case the gateway also playing the role of the target server may match the CB S value to the CB C value and perform channel binding of the inner communication channel to the outer communication channel .

If the target server determines that channel binding may be implemented yes at decision block the process may proceed to block . At block the target server may determine that no service binding needs to be performed. However if the target server determines that it is not able to implement channel binding no at decision block the process may proceed to decision block .

At decision block the target server may determine whether the CB C value received at block is not a default value that would have been used by the client to indicate absence of an outer channel. In various embodiments the target server may be configured to interpret a non default CB C value as received from a client to indicate that the client has sent the authentication exchange over a valid outer channel and has verified that the target server or gateway is a legitimate recipient.

Thus if the target server determines that the received CB C value is a default value no at decision block the process may process to block . At block the target server may deny server access to the client that provided the default CB C value at block . However if the target server determines that the received CB C value is non default yes at decision block the process may process to block .

At block the target server may compare the received clear text SB C value with a server service binding SB S value stored in the target server. In various embodiments the target server may perform one of a one to one matching. Alternatively the target server may perform a wild card matching of the clear text SB C value to the stored SB S value.

At decision block the target server may determine whether the received clear text SB C value matches the stored SB S value during the comparison. If the target server determines that the received clear text SB C value matches the stored SB S value yes at decision block the process may proceed to block .

At block the target server may form an authenticated i.e. service bound communication channel to the client that initiated the authentication exchange. However if the target server determines that the received clear text SB C value does not match the stored SB S value no at decision block the process may proceed to block .

At block the target server may fail the authentication exchange and deny server access for the client that initiated the authentication exchange.

In a very basic configuration computing device typically includes at least one processing unit and system memory . Depending on the exact configuration and type of computing device system memory may be volatile such as RAM nonvolatile such as ROM flash memory etc. or some combination of the two. System memory typically includes an operating system one or more program modules and may include program data . The operating system include a component based framework that supports components including properties and events objects inheritance polymorphism reflection and provides an object oriented component based application programming interface API such as but by no means limited to that of the .NET Framework manufactured by Microsoft Corporation Redmond Wash. The device is of a very basic configuration demarcated by a dashed line . Again a terminal may have fewer components but will interact with a computing device that may have such a basic configuration.

Computing device may have additional features or functionality. For example computing device may also include additional data storage devices removable and or non removable such as for example magnetic disks optical disks or tape. Such additional storage is illustrated in by removable storage and non removable storage . Computer storage media may include volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. System memory removable storage and non removable storage are all examples of computer storage media. Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by computing device . Any such computer storage media may be part of device . Computing device may also have input device s such as keyboard mouse pen voice input device touch input device etc. Output device s such as a display speakers printer etc. may also be included. These devices are well known in the art and are not discussed at length here.

Computing device may also contain communication connections that allow the device to communicate with other computing devices such as over a network. These networks may include wired networks as well as wireless networks. Communication connections are one example of communication media. Communication media may typically be embodied by computer readable instructions data structures program modules etc.

It is appreciated that the illustrated computing device is only one example of a suitable device and is not intended to suggest any limitation as to the scope of use or functionality of the various embodiments described. Other well known computing devices systems environments and or configurations that may be suitable for use with the embodiments include but are not limited to personal computers server computers hand held or laptop devices multiprocessor systems microprocessor base systems set top boxes game consoles programmable consumer electronics network PCs minicomputers mainframe computers distributed computing environments that include any of the above systems or devices and or the like.

The establishment of an authenticated communication channels using service binding may enable a client and server to establish a communication channel using a channel binding like mechanism without any modification to current channel binding systems. For example service binding may enable communication channels to be established over reverse proxies because of the client service binding SB C values are transmitted to one or more servers in clear text thereby making it possible to perform wildcard matching. Moreover the use of server names as the SB C values may reduce or eliminate the problem of built in obsolesce and or expiration associated with binding values derived from server certificates.

In closing although the various embodiments have been described in language specific to structural features and or methodological acts it is to be understood that the subject matter defined in the appended representations is not necessarily limited to the specific features or acts described. Rather the specific features and acts are disclosed as exemplary forms of implementing the claimed subject matter.

