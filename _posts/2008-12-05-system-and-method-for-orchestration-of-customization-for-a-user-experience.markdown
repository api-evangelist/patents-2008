---

title: System and method for orchestration of customization for a user experience
abstract: A system and method for orchestration of customization for a user experience is disclosed. The apparatus in an example embodiment includes identifying a plurality of modules included in a webpage; discovering dependencies between each of the modules of the plurality of modules; designating at least one module of the plurality of modules for retaining dependency state information, the dependency state information including information indicative of states of dependencies between modules of the plurality of modules; and executing the modules of the webpage in an order indicated by the dependency state information.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08904345&OS=08904345&RS=08904345
owner: eBay Inc.
number: 08904345
owner_city: San Jose
owner_country: US
publication_date: 20081205
---
This patent application claims the benefit of the filing date of U.S. Provisional Patent Application Ser. No. 61 101 587 filed on Sep. 30 2008 entitled SYSTEM AND METHOD FOR ORCHESTRATION OF CUSTOMIZATION FOR A USER EXPERIENCE and assigned to the same assignee as the present patent application.

This patent application is related to U.S. patent application Ser. No. 12 126 709 filed May 23 2008 and assigned to the same assignee as the present patent application.

A portion of the disclosure of this patent document contains material that is subject to copyright protection. The copyright owner has no objection to the facsimile reproduction by anyone of the patent document or the patent disclosure as it appears in the Patent and Trademark Office patent files or records but otherwise reserves all copyright rights whatsoever. The following notice applies to the software and data as described below and in the drawings that form a part of this document Copyright 2007 2008 eBay Inc. All Rights Reserved.

This disclosure relates to methods and systems supporting computing and data processing systems. More particularly a system and method for orchestration of customization for a user experience is described.

Conventional systems like Amazon.com can use a buyer s previously purchased product or product category genre to suggest new products in a same or similar category genre for the user. However these prior systems are typically one dimensional. That is one dimensional input e.g. product category genre leads to one dimensional output e.g. new products in a same or similar category genre . These conventional systems cannot provide multi dimensional context analysis to provide a multi dimensional output based on customized from a collection of activity from a community of users gathered over time.

U.S. Pat. No. 6 981 040 describes a method for providing automatic personalized information services to a computer user including the following steps transparently monitoring user interactions with data during normal use of the computer updating user specific data files including a set of user related documents estimating parameters of a learning machine that define a User Model specific to the user using the user specific data files analyzing a document to identify its properties estimating the probability that the user is interested in the document by applying the document properties to the parameters of the User Model and providing personalized services based on the estimated probability. Personalized services include personalized searches that return only documents of interest to the user personalized crawling for maintaining an index of documents of interest to the user and personalized navigation that recommends interesting documents that are hyperlinked to documents currently being viewed.

U.S. patent application Ser. No. 11 264 366 describes a method for providing advertising content for display in a page over a network. A plurality of advertisements are determined that are qualified for display at a location in the page. When an advertiser has stores located at a plurality of geographic sites only one advertisement for a store located at a first geographic site may be displayed. Thereafter the advertisement for a store located at a second geographic site different from the first geographic site may be displayed.

U.S. patent application Ser. No. 11 370 258 describes a system and method to facilitate expansion disambiguation and optimization of search queries over a network wherein an original query received from a user is parsed to obtain at least one query term. A plurality of keywords related contextually to one or more query terms are further retrieved from a database. Finally a set of modified queries is generated each modified query further comprising at least one query term and at least one retrieved keyword.

In the following description for purposes of explanation numerous specific details are set forth in order to provide a thorough understanding of some example embodiments. It will be evident however to one of ordinary skill in the art that the present invention may be practiced without these specific details.

As described further below according to various example embodiments of the disclosed subject matter described and claimed herein there is provided a system and method for orchestration of customization for a user experience. The user experience includes a computer implemented user interface and functionality supporting the processing capabilities provided for a computer user. Various embodiments are described below in connection with the figures provided herein.

In an example embodiment an automated community driven self learning system uses collected user activity feedback to customize the serving of web page content to users in a context sensitive manner. The system uses context input including the user s search query keywords a related product or service category a user segment profile site identifier ID domain etc. and user activity feedback to perform the following customization operations 

In various embodiments described herein the automated community driven self learning system uses multi dimensional input context input to produce multi dimensional output selections of page type widget set and or configuration all based on customized from a collection of activity feedback from a community of users gathered over time. As described herein a widget or module is an interface element with which a computer user interacts such as a window frame or a text box. The defining characteristic of a widget is to provide a single interaction point for the direct manipulation of a given kind of data. Widgets are visual basic building blocks which when combined in an application hold all the data processed by the application and the available interactions on this data.

In general various embodiments use context input including user and query information and user activity feedback to automatically generate and display the most relevant or most likely user favored next page for that context using a predictive model. User information can include explicitly or implicitly obtained demographic information explicitly or implicitly obtained user profile information user transaction history user activity history and or any other information explicitly or implicitly obtained that may indicate user preferences. Additionally a perturbation engine is used to include for some users a slightly sub optimal selection of page type widget set and or configuration to cause the system to re affirm the optimal selections and to introduce new selections that may have otherwise not been considered or selected. The perturbation engine enables a particular user or set of users to be exposed to a selection of page type widget set and or configuration to which the user users may not have otherwise been exposed. In some cases a particular user or set of users can be exposed to a sub optimal or under performing selection of page type widget set and or configuration.

As shown in this context input can be provided to user experience customizer . As will be described in more detail below user experience customizer includes predictive data and associated computer implemented rules that can be applied to the context input to produce decisions or selections related to the type of user experience to present to the user that will represent the most relevant or most likely favored user experience for the user based on the context input. As a result in a particular embodiment a user experience including user interface and available functionality in the form of a webpage can be generated by user experience customizer . This webpage can include a particular page type selected by the user experience customizer from a plurality of available page types described above e.g. AMI all matching items DLP dynamic landing page VIP view item page etc. . The page type can define the structure and or arrangement of information and images provided on the webpage. Based on the selected page type a plurality of modules or widgets can be placed in the available locations of the selected page type. The particular modules placed in page are selected by the user experience customizer from a plurality of available page modules or widgets e.g. list graphic data input etc. . Once the selected modules are placed in the page the information content for each of the modules is selected by the user experience customizer from a plurality of available information content sources e.g. store locations merchandise listings advertising items etc. . Once the content from the selected content sources are placed in the corresponding selected modules the predictive model can further configure the information content displayed in modules based on the context input. The particular configuration of information content displayed in modules of page is selected by the user experience customizer from a plurality of available information content configurations e.g. sort order list or gallery display expansion display etc. .

Referring now to a more detailed system view of a particular embodiment is shown. As described above context input is provided to user experience customizer . The user experience customizer of a particular embodiment is shown to include an input unit to receive the context input from the various sources described above. Once the context input is collected aggregated filtered and structured by input unit the processed context input is provided to predictive data unit . Predictive data unit can take the processed context data and form correlations between the context data and the likely desirable structure and content provided in a corresponding user experience. These correlations can be resolved into decisions or selections made by the decision unit based on the correlations made by the predictive data unit . The selections made by decision unit include a selection of page type for the output page a selection of modules for the selected output page type and a selection of configuration of content displayed in the selected modules of output page .

Once the user experience customizer produces and displays the output page the system of a particular embodiment shown in can collect user activity feedback from a community of users who interact with the output page . In the community of users networked computer users can use various servers e.g. websites available via a public network such as the Internet to perform various operations on user interfaces e.g. web pages including output page such as searching for items using search queries and a search engine performing e commerce transactions shopping or bidding on goods or services browsing for information or items of interest and the like. These user performed operations include various activities performed by the users such as using a pointing device e.g. computer mouse to select click or mouseover various options items or links on a webpage enter a search query or set of keywords update a user profile enter text into a user interface provided data entry field browsing shopping bidding or buying on line providing explicit feedback on a user experience and other types of well known user interactions with a computer implemented user interface. These user activities can be recorded and saved in combination with information indicative of the structure and content of the webpage or user interface e.g. page with which the user was interacting at the time the user activity was recorded. This retained user activity feedback can be used to correlate the user s actions with the user interface acted upon. In this manner user relevance or user desires is inferred from the user activity feedback. The use of this user activity feedback will be described in more detail below in connection with a particular embodiment.

As shown in the user activity feedback is collected from the user community by a user activity feedback aggregation unit . The user activity feedback aggregation unit produces structured and processed user activity feedback that can be used by the user experience customizer to adjust the predictive data unit . For example the rules implemented in predictive data unit can be biased or weighted to produce selections that are more likely favored by the user community based on the user activity feedback .

As also shown in user experience customizer can also include a separate customizer for each of a plurality of region sites as provided in tabs . Regions can include for example countries states geographical regions and the like. Sites can include areas served by one or more computing sites hubs servers or server farms and the like. Given a region sites tab selection the user experience customizer can be configured to produce a different set of customized user interface pages and different associated functionality that are specifically customized for a selected region site and based on user activity feedback that is relevant for that selected region site.

Referring now to the multiple input dimensions and multiple output dimensions of a particular embodiment are shown. The context input provided to user experience customizer can include multiple dimensions including for example site buyer segmentation domain keywords or search query and other context related data . Site information can include a user buyer name location community code IP address user profile and the like. Buyer segmentation can include information that classifies the user buyer into one or more purchaser bidder shopper groups based on pre determined criteria. Domain can include information identifying the server website merchant or location which the user buyer has accessed. Keywords or search query represents the user query entered by a user. The items or dimensions included in the context information can be dynamically prioritized re ordered and or re grouped so the user experience customizer can receive the best context input available in a given situation. For example if a particular item or dimension included in the context information does not provide sufficient or accurate information related to the particular dimension the insufficient or inaccurate dimension can be re ordered to a less valued position in the group of context information or the dimension can be eliminated from the context information altogether. In this manner items or dimensions included in the context information can be ordered or grouped to fall back progressively to other sufficient and accurate dimensions in the group if a particular dimension does not provide sufficient or accurate information for the user experience customizer .

The output produced by the user experience customizer can include multi dimensional output such as selections of page type module widget set configuration and or other selections all based on customized from a collection of user activity feedback from a community of users gathered over time. In general various embodiments use context input including user and query information and user activity feedback to automatically generate and display the most relevant next page for that context using a predictive model.

In some cases a dynamically built webpage can create problems when portions of the webpage have interdependencies. We need the ability to invoke modules in a generic manner on a webpage that is built dynamically. As described herein a module may represent a logical unit of code that can be reused on a web page or on multiple web pages. An example webpage with component modules is shown by example in .

We propose a solution herein that allows for modules to be executed generically on a web page. An orchestrator as described in more detail below in connection with an example embodiment reads the configuration for a page and dynamically determines which modules to invoke how to invoke the modules and in what order to invoke them. The orchestrator also manages dependencies between these modules on the webpage. This is achieved by building a Directed Asynchronous Graph of the modules to be invoked for a particular page. This process is described in more detail below.

In an ideal world all the modules on a web page would be completely independent of each other and therefore the order of execution of these modules would not be relevant or problematic. In reality however we do encounter dependencies between modules therefore we need to provide a mechanism to invoke modules that have inter dependencies among them. The dependencies between modules can be simple such as the one shown in where there are no cyclic dependencies. In this scenario the order of execution is Module A Module B and then Module C. Each module defines input and output properties. These input and output properties for the module define the application programming interface API for the module. These properties are also used to extract the dependency information. For example 

This example implies that Module B has a dependency on Module A because the Input Property for Module B is an output property for Module A.

In contrast to the less complex dependencies shown in the example of and described above many webpages can contain modules with complex dependencies that may cause cycles as well. This scenario is illustrated in . These more complex types of dependencies can lead to cycles which can be difficult to resolve. For example 

Now in this example Module C depends on Module B for its input property. However Module A depends on Module C and Module B depends on Module A. Thus a cycle of dependencies has been created. This kind of dependency cycle can cause problems in the execution of an application or the rendering of a webpage with modules having a dependency cycle. It would be advantageous to break or resolve the dependency cycle and thereby improve the reliability of the application or the rendering of a webpage.

One of the nodes modules within the dependency cycle can be made a stateful module. The number of states is determined by the number of edges in and out that are available at that node for that module in the Directed Asynchronous Graph for the corresponding page. In the example shown in Module A can have two states. One state is used to capture the dependency to Module B and another state can be used to capture the dependency from Module C to Module A. Therefore to address the cyclic dependency shown in the example of the graph would change to look as illustrated in or alternatively as illustrated in . This essentially breaks the cycle and gives us an acyclic graph.

In a second example embodiment the dependencies between modules can be discovered at design time. At runtime any cycles in the dependencies are ignored and logged as errors to be fixed. Additionally the modules can be coded as stateful modules as indicated above to break the dependency cycle.

In a particular example embodiment an orchestrator component is responsible for executing the modules of a page in the order of the dependencies indicated in the corresponding graph generated for the page. Given that what gets served to the user depends on many things including the segment variants testing optimization traffic driver rules etc. this framework attempts to execute and serve the finding pages dynamically based on factoring in a multitude of the aforementioned systems. This orchestration framework executes all the interdependent modules on the page dynamically leveraging an n pass mechanism until the convergence for the entire page is achieved.

With the dynamic nature of a buyer experience the execution path required to process various components of an application changes as well. This entails having a smart agent to orchestrate what needs to be executed and rendered for the buyer. This orchestration layer as described herein for an example embodiment attempts to achieve this. Finding pages are incredibly complex given that there are many modules on the page and many inter dependencies among them. This is the case mainly to invoke efficient common queries across multiple functionalities on the page. This adds a lot more complexity from a dependency and execution perspective. The Orchestration layer as described herein generates the dependency graph for a webpage based on the metadata of the page and the various modules on the page. Then the Orchestration layer uses an n pass technique to invoke the modules repeatedly based on the dependency graph until the full convergent page is materialized.

The example computer system includes a processor e.g. a central processing unit CPU a graphics processing unit GPU or both a main memory and a static memory which communicate with each other via a bus . The computer system may further include a video display unit e.g. a liquid crystal display LCD or a cathode ray tube CRT . The computer system also includes an input device e.g. a keyboard a cursor control device e.g. a mouse a disk drive unit a signal generation device e.g. a speaker and a network interface device .

The disk drive unit includes a machine readable medium on which is stored one or more sets of instructions e.g. software embodying any one or more of the methodologies or functions described herein. The instructions may also reside completely or at least partially within the main memory the static memory and or within the processor during execution thereof by the computer system . The main memory and the processor also may constitute machine readable media. The instructions may further be transmitted or received over a network via the network interface device .

Applications that may include the apparatus and systems of various embodiments broadly include a variety of electronic and computer systems. Some embodiments implement functions in two or more specific interconnected hardware modules or devices with related control and data signals communicated between and through the modules or as portions of an application specific integrated circuit. Thus the example system is applicable to software firmware and hardware implementations. In example embodiments a computer system e.g. a standalone client or server computer system configured by an application may constitute a module that is configured and operates to perform certain operations as described herein. In other embodiments a module may represent a logical unit of code that can be reused on a web page or on multiple web pages. In still other embodiments the module may be implemented mechanically or electronically. For example a module may comprise dedicated circuitry or logic that is permanently configured e.g. within a special purpose processor to perform certain operations. A module may also comprise programmable logic or circuitry e.g. as encompassed within a general purpose processor or other programmable processor that is temporarily configured by software to perform certain operations. It will be appreciated that the decision to implement a module mechanically in the dedicated and permanently configured circuitry or in temporarily configured circuitry e.g. configured by software may be driven by cost and time considerations. Accordingly the term module should be understood to encompass a tangible entity be that an entity that is physically constructed permanently configured e.g. hardwired or temporarily configured e.g. programmed to operate in a certain manner and or to perform certain operations described herein. While the machine readable medium is shown in an example embodiment to be a single medium the term machine readable medium should be taken to include a single medium or multiple media e.g. a centralized or distributed database and or associated caches and servers that store the one or more sets of instructions. The term machine readable medium shall also be taken to include any medium that is capable of storing encoding or carrying a set of instructions for execution by the machine and that cause the machine to perform any one or more of the methodologies of the present description. The term machine readable medium shall accordingly be taken to include but not be limited to solid state memories optical and magnetic media and carrier wave signals. As noted the software may be transmitted over a network using a transmission medium. The term transmission medium shall be taken to include any medium that is capable of storing encoding or carrying instructions for transmission to and execution by the machine and includes digital or analog communications signal or other intangible medium to facilitate transmission and communication of such software.

The illustrations of embodiments described herein are intended to provide a general understanding of the structure of various embodiments and they are not intended to serve as a complete description of all the elements and features of apparatus and systems that might make use of the structures described herein. Many other embodiments will be apparent to those of ordinary skill in the art upon reviewing the above description. Other embodiments may be utilized and derived therefrom such that structural and logical substitutions and changes may be made without departing from the scope of this disclosure. The figures provided herein are merely representational and may not be drawn to scale. Certain proportions thereof may be exaggerated while others may be minimized. Accordingly the specification and drawings are to be regarded in an illustrative rather than a restrictive sense.

Thus a system and method for orchestration of customization for a user experience are disclosed. While the present invention has been described in terms of several example embodiments those of ordinary skill in the art will recognize that the present invention is not limited to the embodiments described but can be practiced with modification and alteration within the spirit and scope of the appended claims. The description herein is thus to be regarded as illustrative instead of limiting.

