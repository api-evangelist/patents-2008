---

title: Method and system for accessing data in an enterprise information system
abstract: Systems and methods for requesting and receiving data from an enterprise information system are described. In accordance with one embodiment, the connector system includes an application server managed connection factory for receiving a data request, and a load balancer for assigning an enterprise information system server connection to the request.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08291086&OS=08291086&RS=08291086
owner: General Electric Company
number: 08291086
owner_city: Schenectady
owner_country: US
publication_date: 20080118
---
The field of the invention relates generally to information systems and more particularly to methods and systems for facilitating sharing of enterprise information system data.

A geographic information system GIS sometimes referred to as a geographical information system or geospatial information system is a system for capturing storing analyzing and managing data and associated attributes which are spatially referenced to the Earth. Such systems can for example integrate store analyze share and display geographically referenced information. Geographic information systems can be used for example for resource management asset management sales marketing and logistics. A well known GIS is commonly referred to as Smallworld and is commercially available from General Electric Company Fairfield Conn.

As one specific example a GIS can be used by a utility e.g. a public utility that distributes electricity that deploys complex GIS based applications to hundreds of people across the enterprise to manage complex utility and telecommunications networks. Such a GIS can be used in the utility setting for example to plan a distribution network within a particular region.

Many enterprises interested in deploying geographic information systems have significant investments in enterprise information systems EISs . Such EISs can sometimes be legacy systems that have been deployed for years. Integrating the numerous EISs across a large enterprise to facilitate data and application sharing can be very costly and difficult. Once integration is achieved continual maintenance support and creation of new applications can also be complicated and costly. In addition to integrating EISs including legacy systems adding new systems into an existing network can add additional cost and complexity.

In one embodiment a connector system for requesting information from an enterprise information system is described. In the example embodiment the connector system includes an application server managed connection factory for receiving a data request and a load balancer for assigning an enterprise information system server connection to the request.

In another embodiment a method for communicating a data request to an enterprise information system from a service is described. The method includes receiving the request at an application server managed connection factory and assigning an enterprise information system server connection to the request based on a load balance.

In yet another embodiment a connector system for requesting information from an enterprise information system is described. In this example embodiment the connector system includes a geographic information system connection factory for receiving a data request from a service and an application server managed connection factory for receiving the data request from the geographic information system factory. A resource adapter corresponds the request with a particular enterprise information system and a load balancer assigns an enterprise information system server connection to the request.

The present invention is described here in detail with reference to a particular geographic information system GIS commonly referred to as Smallworld which is commercially available from General Electric Company Fairfield Conn. The present invention is not limited to implementation and use in connection with any one specific GIS and can be used in connection with other GISs. In addition the present invention is specifically described below in connection with the Java 2 platform Enterprise Edition J2EE which is commercially available from Sun Microsystems Inc. Palo Alto Calif. The present invention is not limited to implementation and use in connection with J2EE and can be used in connection with other systems as well.

Set forth below are details relating to a J2EE connector for connecting to managing and administering service providers in a Smallworld system context. The connector is sometimes referred to herein as a Smallworld Java Connector and such connector is described as an implementation of a J2EE Connector Architecture JCA Resource Adapter. Such connector is an application server independent component that provides connectivity to a Smallworld Service Provider. Details relating to the JCA specification are publicly available from Sun Microsystems inc. Palo Alto Calif.

In one embodiment the Smallworld Java Connector has two principal classes JCA implementation classes and Smallworld Connection Management classes. In this particular implementation components outside of the JCA Resource Adapter are not permitted to create socket connections and are discouraged from creating additional threads.

The Smallworld Java Connector implements the necessary JCA classes for Connection Management. Exemplary interfaces are set forth in the table below. SIAS as referred to in the table and used herein refers to the Smallworld Internet Application Server.

The Smallworld Java Connector incorporates load balancing and physical connections to the EIS are allocated at the time a request is physically sent to the EIS based on the allocation rules of the load balancer for example least loaded round robin least recently used . The Smallworld Java Connector is a connection less Resource Adapter. The JCA Connection class can be implemented and used although use of the JCA Connection is optional.

Referring to three logical views of the system are illustrated in schematic form. Specficially illustrates an EIS Server view an EIS Host view and an EIS Logical Group view. The EIS Server view illustrates Service Provider instances managed by the system. There is a one to one relationship between an EIS Server and a Smallworld Service Provider instance. The EIS Host view illustrates all the EIS Servers Smallworld Service Provider instances running on a single machine EIS Host . Each EIS Host is managed by an agent as described below. The EIS Logical Group view contains one or more EIS Servers. These EIS Servers need not originate from the same EIS Host. Not all EIS Servers on an EIS Host need belong to the same EIS Logical Group. An example of this view in use would be for functional task. In this example a number of EIS Hosts within a system each configure a Smallworld Service Provider instance that handles only plot requests. An EIS Logical Group can then be created to allocate specifically plot requests to always be assigned to these EIS Servers. Additionally these instances can be administered collectively.

Specifically still referring to on the EIS Host there exists a single Agent component and one or more Smallworld Service Provider instances. The Smallworld Service Provider is responsible for communicating data between the Smallworld instance and the Application Server. Within the Smallworld Java Connector exists the EIS Server Connection which maps directly onto the EIS Server logical view and implements the physical connection between the Smallworld Service Provider instance and the Application Server. Logically this EIS Server Connection can be a member of a number of other logical views.

The administration of EIS Server Connections EIS Hosts and EIS Logical Groups is managed by an Agent Monitor. The Agent Monitor is responsible for acting as a broker between the Application Server and the EIS Server agent s to send receive administrative commands data.

The management e.g. when assigned connection limits crash detection recovery of the JCA components is assigned to the JCA interfaces within the system and the Load Balancer. The JCA interfaces shown in as Managed Connection Factory and Connection Factory are managed by the underlying implementation of the JCA within the Application Server. This underlying implementation deals with the memory security and transaction management of these components as well as their pooling how when they are created and or re used . As is well known a Connection Factory sometimes referred to as a Connection Factory object encapsulates a set of connection configuration parameters that has been defined by an administrator. A client uses this object to create a connection with a Java Message Service JMS provider.

The Load Balancer is not part of the JCA specification and works closely with all other components within the system to provide scalable and reliable system performance. The Load Balancer is described below in more detail.

The service layer is the overall consumer as illustrated in . The Services Layer sends a requests to the Connection Factory via the components provided as part of the JCA specification. The requests are processed by the managed counterparts that are allocated and managed by the Application Server. Each time the Managed Connection Factory desires to execute a request an appropriate EIS Server Connection is assigned from the Load Balancer. The Load Balancer monitors the overall usage and dynamically assigns the EIS Server Connection based on the algorithm assigned to it e.g. by default Round Robin . Once the request is complete the EIS Server Connection is returned to the Load Balancer and reused for subsequent calls.

The application programming interface of the connector is set forth in the appendices. Specifically Appendix I sets forth the EIS Request Appendix II sets forth the GIS Connection Factory Appendix III sets forth the SIAS Meta Request Appendix IV sets forth the SIAS Meta Response and Appendix V sets forth the Cancel Meta Request.

The Load Balancer component in the Smallworld Java Connector includes a pluggable facility to allow different load balancing algorithms to be used to allocate the connection without re compilation of the Smallworld Connector Code. The Load Balancer Algorithm interface includes a sub algorithm getConnection which supplies a List of EIS Server Connections and expects a single EIS Server Connection to be returned or null if no connection could be allocated . The algorithm can use the various helper methods of the Server Connection e.g. number of used connections to determine which connection to allocate.

Each EIS Logical Group has its own Load Balancer instance and individual Logical Groups can be configured to use different load balancing algorithms. By default the Smallworld Java Connector contains a Round Robin load balancing algorithm. In accordance with the Round Robin algorithm and starting from the last known position in the list of available EIS Server Connections or the connection listed at the beginning of the list for selecting the first connection the next EIS Server Connection with an available connection is selected. If the end of the list is reached operations return to the start of the list and continue until the original start point is reached. If no connection meets the above criteria a null is returned. In this case the Round Robin algorithm class need only store the last used position in the list. For more complicated algorithms the class may need to store more complex information.

Regarding Java Management Extension JMX interfaces JMX MBeans are available to any application Java Internet that can access the Application Server MBean Server implementation. The JMX MBeans provide a management interface to many of the components within the Smallworld Java Connector. As is well known an MBean managed bean is a Java object that represents a manageable resource. Details regarding such interfaces are set forth in Appendix VI.

The above described connector which is specifically described and illustrated as an Application Server Resource Adapter is an application server independent component that provides connectivity to a Smallworld Service Provider. Such a connector facilitates integrating geographic information systems and enterprise information systems into one network which facilitates not only integration of such systems but also facilitates ease of maintenance support and creation of new applications.

As used herein an element or step recited in the singular and proceeded with the word a or an should be understood as not excluding plural elements or steps unless such exclusion is explicitly recited. Furthermore references to one embodiment of the present invention are not intended to be interpreted as excluding the existence of additional embodiments that also incorporate the recited features.

While the invention has been described in terms of various specific embodiments those skilled in the art will recognize that the invention can be practiced with modification within the spirit and scope of the claims.

