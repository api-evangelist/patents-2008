---

title: System and program for handling anchor text
abstract: Disclosed is a system and program for processing anchor text for information retrieval. A set of anchors that point to a target document is formed. Anchors with same anchor text are grouped together. Information is computed for each group. Context information is generated for the target document based on the computed information.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08285724&OS=08285724&RS=08285724
owner: International Business Machines Corporation
number: 08285724
owner_city: Armonk
owner_country: US
publication_date: 20081203
---
This application is a continuation of and claims the benefit of application Ser. No. 10 764 801 filed Jan. 26 2004 the entire contents of which is incorporated herein by reference.

The World Wide Web also known as WWW or the Web is a collection of some Internet servers that support Web pages that may include links to other Web pages. A Uniform Resource Locator URL indicates a location of a Web page. Also each Web page may contain for example text graphics audio and or video content. For example a first Web page may contain a link to a second Web page. When the link is selected in the first Web page the second Web page is typically displayed.

A Web browser is a software application that is used to locate and display Web pages. Currently there are billions of Web pages on the Web.

Web search engines are used to retrieve Web pages on the Web based on some criteria e.g. entered via the Web browser . That is Web search engines are designed to return relevant Web pages given a keyword query. For example the query HR issued against a company intranet search engine is expected to return relevant pages in the intranet that are related to Human Resources HR . The Web search engine uses indexing techniques that relate search terms e.g. keywords to Web pages.

An anchor may be described as a link or path to a document e.g. a URL . Anchor text may be described as text associated with a path or link e.g. a URL that points to a document. For example anchor text may be text that labels or encloses hypertext text links in Web documents. Anchor text is collected by Web search engines and is associated with target documents. Also the anchor text and target documents are indexed together.

Web search engines use context information e.g. title summary language etc. to enrich search results. This provides a user with screened search results. Anchor text however may not be relevant for use as context information. For example anchor text may be in a different language than the target document and use of the anchor text without further processing may result in for example a Japanese title for an English document. Moreover anchor text may not be related to the content of the document. For instance anchor text may contain common words e.g. Click here that occur often and are used primarily for navigation but which do not have any meaningful value as a title. Also anchor text may be inaccurate impolite or may contain slang e.g. an anchor to a Network Security Guide has anchor text Looking for Trouble .

Moreover generation of context information is especially difficult when the contents of a Web page can not be retrieved e.g. due to server outage incompleteness of the retrieval of Web pages for processing by the search engine robots.txt prohibiting access or when a document is retrieved but cannot be analyzed e.g. because the file is a video audio multimedia file is in an unknown or unsupported format is ill formed or is password protected .

Most search engines display only a Uniform Resource Locator URL in the absence of content of a Web page. That however makes it hard for the user to capture the usefulness of a search result without looking at the Web page itself.

Thus there is a need for improved document processing to provide context information for documents such as Web pages.

Provided are a method system and program for processing anchor text. A set of anchors that point to a target document is formed. Anchors with same anchor text are grouped together. Information is computed for each group. Context information is generated for the target document based on the computed information.

In the following description reference is made to the accompanying drawings which form a part hereof and which illustrate several implementations of the present invention. It is understood that other implementations may be utilized and structural and operational changes may be made without departing from the scope of the present invention.

Certain implementations of the invention make a document available for searching by indexing anchor text instead of or in addition to content. Certain implementations generate context information from the anchor text of anchors that point to a document. For instance at least a portion of anchor text may be designated as a title or a summary of the document. However it may be difficult to identify meaningful anchor text because anchor text may be in a different language than the target document anchor text may not be related to the content of the document or anchor text may be inaccurate impolite or may contain slang. Furthermore special care is taken to remove noise in the anchor text that does not have meaningful value as for example a title e.g. URLs file names navigational text such as next column .

Thus certain implementations of the invention process raw anchor text to obtain high quality titles and summaries. Certain implementations of the invention distill raw anchor text to obtain high quality data that can be used for generating title or summary data for search result items. The result of the raw anchor text processing improves the overall search quality and therefore user experience in a document retrieval system.

The server computer includes system memory which may be implemented in volatile and or non volatile devices. A search engine executes in the system memory . In certain implementations the search engine includes a crawler component a static rank component a document analysis component a duplicate detection component an anchor text component and an indexing component . The anchor text component includes a context information generator . Although components and are illustrated as separate components the functionality of components and may be implemented in fewer or more or different components than illustrated. Additionally the functionality of the components and may be implemented at a Web application server computer or other server computer that is connected to the server computer . Additionally one or more server applications execute in system memory .

The server computer provides the client computer with access to data in at least one data store e.g. a database . Although a single data store is illustrated for ease of understanding data in data store may be stored in data stores at other computers connected to server computer .

Also an operator console executes one or more applications and is used to access the server computer and the data store .

The data store may comprise an array of storage devices such as Direct Access Storage Devices DASDs Just a Bunch of Disks JBOD Redundant Array of Independent Disks RAID virtualization device etc. The data store includes data that is used with certain implementations of the invention.

In block documents that are to be indexed by the search engine are obtained. In certain implementations the documents are published or pushed e.g. as may be the case with newspaper articles to the indexing component . In certain implementations the crawler component discovers fetches and stores the documents. In certain implementations the crawler component may discover documents based on for example certain criteria e.g. documents were accessed within the last month . Additionally the crawler component may discover documents in one or more data stores connected directly e.g. data store or indirectly e.g. connected to server computer via another computing device not shown to server computer . In certain implementations the crawler component discovers fetches and stores Web pages in data store . These stored documents may be referred to as a collection of documents .

In block the document analysis component performs per document analysis. In particular the document analysis component reviews the stored documents parses and tokenizes the documents and determines for each document the language in which each document was written extracts anchor text and performs other tasks such as categorization and classification of the documents. The language information is stored for later use. For example the document analysis component determines whether the primary language used in the document is English Japanese German etc. As part of extracting the anchor text the document analysis component also associates a proximity class with each anchor. A proximity class may be described as specifying how close a source document is to a target document e.g. whether they are on the same server and if so whether they are in the same directory . Also the extracted anchor text is ready to be processed by the anchor text component .

In block the static rank component reviews the stored documents and assigns a rank to the documents. The rank may be described as the importance of the source document relative to other documents that have been stored by the crawler component . Any type of ranking technique may be used. For example documents that are accessed more frequently may receive a higher rank.

In block the context information generator sorts the anchors by target document. This results in the set of anchors for a target document being grouped together in a set for further processing. Each set is separately processed for each target document as will be described with reference to .

In block the context information generator removes anchors that have anchor text that contains a path e.g. URL or a portion of a path to the target document. In block the context information generator removes anchor text based on whether and in which order or combination the anchor text contains words from a configurable set of words e.g. anchor text that contains only words from the configurable set that contains at least a number of words from the configurable set or contains words from the configurable set in a certain order may be removed . The configurable set of words may be for example determined by a system administrator. For example the configurable set of words may include stop words such as click here or the .

In block the context information generator sorts the set of anchors by anchor text and groups together anchors having the same anchor text. In block the context information generator computes a weighted sum of occurrences of the text for each group. The weight of each individual occurrence of the text may be determined by the proximity class of the anchor. For example if a first document has a proximity class A a second document has a proximity class B and a third document has proximity class C and classes A B and C have weight 10 5 and 2 respectively the weighted sum is 17.

In block the context information generator computes an accumulated rank for each group. That is each anchor in the group contributes to this rank according to the rank of its source document and its proximity class. For example if a first document has a proximity class A a second document has a proximity class B and a third document has proximity class C and classes A B and C have weight 10 5 and 2 respectively if the first second and third documents have static ranks 9 13 and 16 respectively and if the accumulated rank is computed by weighted average the accumulated rank is 9 10 13 5 16 2 10 5 2 187 17 11. Other techniques of computing accumulated rank include minimum maximum or both of these in combination with preferring the ranks of one proximity class over the others etc.

In block the context information generator computes a linguistic score for each group. In certain implementations this score may be computed by a linguistic analysis of the text that scores the text for displayability as a title. For example displayability as a title may be determined by considering the number of words in the text e.g a title should be brief further linguistic analysis of the text statistical analysis of each word or the number of occurrences of the words in all anchors in the set of anchors that point to a target document or the similarity of the anchor to the content of the target document when the target document is available for access.

In block the context information generator computes a combined relevance score from the weighted sum of occurrences the accumulated static rank and the linguistic score for each group.

In block the context information generator generates context information for the target document. In certain implementations the context information generator selects the text of the group with the highest combined relevance score as a pseudo title composes an anchor based static summary for the target document from the anchor texts of the n groups with the highest relevance score and concludes the language of T from the predominant source language.

Once anchor text processing is completed the indexing component generates an index using the processed anchor text.

Thus certain implementations of the invention provide a technique for generating high quality context information for search result items from a collection of anchors. In certain implementations an analysis of each document is performed to identify the language in which the document was written a global analysis of all documents is performed to assign a static rank to each document and anchors are sorted by target document to obtain for each target document a logical collection of all anchors that point to the target document. For each collection of anchors pointing to a target document the following may be performed analysis of the distribution of the languages of the source documents pruning of anchors from the collection based on the language distribution noise filtering based on stop word and URL detection classification of each anchor according to the proximity of the source to the target and assigning of a weight to each proximity class. Additionally each anchor may be scored based on linguistic analysis of anchor text of the anchor. Furthermore relevance ordering of remaining unique anchor texts i.e. the same text can be on different anchors may be performed based on the weighted sum of occurrences in each proximity class the accumulated rank of all source documents and the linguistic score of the text.

The results of the anchor text processing are high quality titles summaries and other contextual information e.g the most likely language for each target . For search results where the target document is not available this context information may be displayed to the user. If the target document itself is available the generated context information may be used to enrich the information gained from the target document e.g. by finding similarities between the document and its anchors .

The described techniques for handling anchor text may be implemented as a method apparatus or article of manufacture using standard programming and or engineering techniques to produce software firmware hardware or any combination thereof. The term article of manufacture as used herein refers to code or logic implemented in hardware logic e.g. an integrated circuit chip Programmable Gate Array PGA Application Specific Integrated Circuit ASIC etc. or a computer readable medium such as magnetic storage medium e.g. hard disk drives floppy disks tape etc. optical storage CD ROMs optical disks etc. volatile and non volatile memory devices e.g. EEPROMs ROMs PROMs RAMs DRAMs SRAMs firmware programmable logic etc. . Code in the computer readable medium is accessed and executed by a processor. The code in which various implementations are implemented may further be accessible through a transmission media or from a file server over a network. In such cases the article of manufacture in which the code is implemented may comprise a transmission media such as a network transmission line wireless transmission media signals propagating through space radio waves infrared signals etc. Thus the article of manufacture may comprise the medium in which the code is embodied. Additionally the article of manufacture may comprise a combination of hardware and software components in which the code is embodied processed and executed. Of course those skilled in the art will recognize that many modifications may be made to this configuration without departing from the scope of the present invention and that the article of manufacture may comprise any information bearing medium known in the art.

The logic of A B and describes specific operations occurring in a particular order. In alternative implementations certain of the logic operations may be performed in a different order modified or removed. Moreover operations may be added to the above described logic and still conform to the described implementations. Further operations described herein may occur sequentially or certain operations may be processed in parallel or operations described as performed by a single process may be performed by distributed processes.

The illustrated logic of A B and may be implemented in software hardware programmable and non programmable gate array logic or in some combination of hardware software or gate array logic.

The computer architecture may comprise any computing device known in the art such as a mainframe server personal computer workstation laptop handheld computer telephony device network appliance virtualization device storage controller etc. Any processor and operating system known in the art may be used.

The foregoing description of implementations of the invention has been presented for the purposes of illustration and description. It is not intended to be exhaustive or to limit the invention to the precise form disclosed. Many modifications and variations are possible in light of the above teaching. It is intended that the scope of the invention be limited not by this detailed description but rather by the claims appended hereto. The above specification examples and data provide a complete description of the manufacture and use of the composition of the invention. Since many implementations of the invention can be made without departing from the spirit and scope of the invention the invention resides in the claims hereinafter appended.

