---

title: Method, apparatus and system for sharing multimedia content within a peer-to-peer network
abstract: A system, method and communication device configuration for sharing multimedia content between network devices, such as UPnP or UPnP/DLNA devices and mobile communication devices, across different local networks or subnets. One possible system arrangement or architecture is based on the communication devices forming groups and then sharing UPnP control messages across the groups. The system arrangement supports enabling group member access to UPnP devices that are in other group devices or reachable via other group devices. By enabling devices to form groups across wide-area networks and distribute UPnP messages within the group members, the system effectively extends the range of a UPnP network. Devices include an overlay middleware and an xDLNA application to provide the functionality to form or join a device group and communicate multimedia content with other devices in the group as if the devices are within the same local network.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09106490&OS=09106490&RS=09106490
owner: Google Technology Holdings LLC
number: 09106490
owner_city: Mountain View
owner_country: US
publication_date: 20080109
---
This application claims priority to the filing date of a U.S. provisional patent application having Ser. No. 60 977 125 entitled Method Apparatus And System For Network Mobility Of A Mobile Communication Device filed on Oct. 3 2007 which is incorporated herein by reference in its entirety.

The invention relates to sharing information and multimedia content and controlling its behavior among networked devices having local network applications. More particularly the invention relates to sharing multimedia content between local network devices including mobile communication devices using wide area networks and broadband wireless networks.

Recent years have seen a significant increase in the adoption of local network protocols such as Universal Plug and Play UPnP and Digital Living Network Alliance DLNA specifications for media sharing in many consumer devices such as televisions digital video recorders DVRs set top boxes and music players. Such specifications also can be used to share information with and control other devices such as home gateways lighting equipment controllers and home temperature controllers. Applications supporting UPnP and DLNA also are built into many PC based applications such as Windows Media Player. For example a UPnP based application may be used to transmit a photo from a mobile phone to a DLNA compatible printer at home for printing a television for display and a set top box for long term archival. Similarly a mobile phone can also interact with a home lighting controller to adjust lighting conditions in a home. As UPnP DLNA forums have specified an extensive set of features for sharing content and controlling media sessions it would be advantageous if the same protocols and applications can be used for sharing content controlling media sessions and managing device behavior not just between devices in a local network or a local broadcast domain but more generically across any network. However as UPnP applications rely on network based multicast for discovery conventional UPnP devices are not able to discover each other and share content over a wide area network. Also conventional UPnP devices and applications use a relatively significant amount of bandwidth due to periodic advertisement messages and size of control messages. Furthermore many local networks have private address spaces and since many UPnP and DLNA messages carrying address information these protocols currently can be used only in their local network.

The UPnP Forum is an industry initiative designed to enable simple and robust connectivity among consumer electronics intelligent appliances and mobile devices from different vendors. UPnP specifications typically define two kinds of logical devices controlled devices and control points. Controlled devices respond to requests from control points. Multiple logical devices may reside in a physical endpoint simultaneously. Additionally multiple services may exist on a given logical device. Once a device has an IP address control points rely on periodic announcements or advertisements to multicast address 239.255.255.250 and SSDP port 1900 from other logical devices and their services using NOTIFY messages to enable discovery and maintain liveliness. Devices and services also respond to search queries called M SEARCH from control points with an HTTP OK response. While M SEARCH is multicast the response message is unicast to the source IP address and port that was present in the M SEARCH packet. Once a control point has discovered a device it may use the URL in the message from the device to obtain the device description. The device description will be in XML format and provided by the device vendor. The control point can then invoke actions on the devices and poll for values.

The UPnP Audio Video AV architecture defines the mechanisms for enabling a control point to coordinate the flow of multimedia content directly between a source device termed the MediaServer and a sink device termed the MediaRenderer. The UPnP AV architecture also describes services such as a content directory service and a connection manager server that will reside in a MediaServer. Similarly UPnP also has standardized device and service descriptions for home lighting controllers home gateway controllers and other controller devices.

One objective of DLNA is to provide seamless interoperability for consumer electronic computing and mobile devices using a communications and control backbone based on existing technologies and standards. DLNA uses the UPnP Device Control Protocol Framework which provides relatively simple device networking in the home. DLNA Interoperability Guidelines use the UPnP AV architecture to provide the media management and control solution for devices. Two classes of DLNA certified devices currently are defined Digital Media Servers DMS and Digital Media Players DMP or Renderers DMR . Player devices e.g. television monitors and printers can find and play or display multimedia content that is shared on a home or local network by server devices. Server devices e.g. set top boxes and DVRs can record and store multimedia content and share the multimedia content on the local network.

Consider for example a scenario including a group of friends each with a mobile communication device. Assume that their mobile devices each have a number of UPnP based applications. One objective is to enable these users to securely share content and control media flow between their devices independent of type of network connectivity using UPnP and DLNA. For example if one user has a photo in their mobile phone another user should be able be access the photo using DLNA even if the users do not share the same subnet. Also if one of the friends in a group of friends has a DLNA device and is located in a hotspot other friends in the group of friends should be able to access the DLNA device in the hotspot. Furthermore the system should be able to accommodate all use cases that are possible using UPnP specifications. Also users should be able to access data from their local network DLNA devices using their mobile device when outside their local network. For example a first user should be able to initiate a session between a home set top box and a second user s mobile device.

However each user may potentially obtain service from a different access provider and thus likely will be part of different access networks or subnets. A subnet typically is considered to be a physical network that forms a broadcast domain and shares a single IP address prefix and often is served by one router. However even if the users are part of or use the same access subnet their ability to perform local multicast is relatively limited or non existent. For example a 3G access network will not allow a device to send periodic local multicast announcements because such would reduce network bandwidth and can induce battery drain by waking other devices from their respective idle modes. Also devices in the home or local network may have only an IP address resulting from a Network Address Translation NAT . Alternatively the devices may be off the shelf devices thus it may not be possible to add new capabilities to the devices or to modify the behavior of the devices.

As discussed UPnP uses periodic multicast announcements for device discovery. UPnP assumes the presence of a local broadcast network. When mobile devices with a wireless broadband interface such as 3G or WiMax have a UPnP stack some applications such as DLNA media players cannot be used to share multimedia content directly between mobile devices. For example if there are a group of friends in different networks or even in the same network they cannot use DLNA applications to share and or control multimedia content between their phones.

Conventional methods exist that bridge UPnP devices. U.S. Patent Publication No. 20070127394 A1 discloses a scheme for bridging a Bluetooth network with a UPnP device in an 802.11 network using an Inter Working unit IWU . The IWU prevents the transmission of UPnP multicast messages from the 802.11 domain into the Bluetooth domain. Thus only if the Bluetooth devices in the Bluetooth domain query for a UPnP device or service will that request reach the 802.11 domain and the response will reach the device that initiated the query. U.S. Patent Publication No. 20070143488 A1 discloses a method for bridging a device in an Internet Protocol Multimedia Subsystem IMS network with a UPnP domain. The method involves the creation of a virtual control point that can look for local devices and communicate such information to the remote device using session initiation protocol SIP .

Conventional work involved with sharing multimedia content between mobile devices typically has focused on local area sharing using Bluetooth applications or using SIP over wide area networks. Similarly to access in home content conventional methods have proposed the use of SIP to access in home devices. For instance the SIP subscribe and notify mechanism is used to communicate the profile and status of devices in a home network to remote devices. Also another conventional system uses a home gateway with an SIP UPnP bridge therein to accesses in home DLNA certified devices from remote devices.

One conventional method proposes a scheme to extend UPnP for wide area service discovery using an Intentional Naming System INS . The method uses an UPnP INS transcoder to convert UPnP M Search queries to INS queries. The method creates a virtual device in the local network for remote devices. Another system tunnels all UPnP packets sent in a home network to a remote device. Such systems typically have significant bandwidth overhead and restrictions such as accommodating only a single home network and not accommodating sharing between mobile devices.

Despite these existing methods and systems there remains a need for securely sharing and controlling the flow of multimedia content between network devices such as UPnP DLNA devices across different local networks or subnets independent of the type of network connectively of the devices. Also it is desirable for end users to be able to control and access data from their local network devices such as DLNA devices from outside of their local network e.g. using their mobile communication device in a second local network or a public network. Similarly end users should be able to access information in a remote device such as a mobile communication device or another device that may be connected to the remote device.

In the following description like reference numerals indicate like components to enhance the understanding of the multimedia content sharing methods devices and systems through the description of the drawings. Also although specific features configurations and arrangements are discussed herein below it should be understood that such specificity is for illustrative purposes only. A person skilled in the relevant art will recognize that other steps configurations and arrangements are useful without departing from the spirit and scope of the invention.

The methods systems and devices described herein involve sharing information and multimedia content across subnets and controlling devices across subnets e.g. between a local network device such as a UPnP or UPnP DLNA device in a first subnet and another network device in a second network or subnet. For purposes of discussion herein the terms UPnP device and DLNA device are used interchangeably to refer to a device with an UPnP or DLNA based application. One possible system arrangement or architecture is based on the communication devices forming groups and then sharing UPnP control information and other DLNA protocol information across the groups. The system arrangement supports enabling group member access to UPnP devices that are in other group devices or devices reachable via other group devices. By enabling devices to form groups across wide area networks and distribute UPnP information within the group members the system effectively extends the range of a UPnP network. The system also reduces bandwidth use and enhances device battery life as only selected messages or selected information from the messages are shared. Also the devices can generate proxy advertisements and responses on behalf of remote UPnP devices that are reachable from other devices in the group.

In one embodiment the system architecture is based on a peer to peer model. That is the service logic is implemented by self similar nodes cooperating with one another without relying on any service specific intelligence in a network based server. The system architecture is characterized by organizing devices into peer groups. In the inventive systems methods and device configurations described herein groups are determined or defined based on different logical notions. For example one group of mobile communication devices may correspond to a particular set of friends regardless of their respective device networks. There may be another group consisting of a few home gateways PCs and mobile phones corresponding to the members of a particular family. In addition to such social groups there may be groups based on end user context or interests. For example a group may be defined by set of users who have purchased the same music album or have a matching interest profile. Since creating and maintaining groups is logically separate from the specific use of the group to share information and implement any service logic the inventive system architecture methods and device configurations described herein may be implemented to include a middleware that securely creates a group overlay without tying the group overlay to a particular protocol or service logic. The application to effectively extend DLNA referred herein as xDLNA may use the functions of this middleware to exchange information about UPnP devices and establish communication paths. Such functions are implemented in such a way that conventional or off the shelf DLNA applications can take advantage of its features without making any changes to their existing UPnP stacks or DLNA applications. Alternatively both the middleware and xDLNA may be implemented in a single module. Unlike conventional approaches the methods and systems described herein involve a purely UPnP based solution that enables access to local network devices such as UPnP and or UPnP DLNA devices but also enables DLNA or UPnP based sharing across groups of devices such as mobile devices home PCs home gateways or devices that are reachable via devices in the group. Furthermore the methods and systems described herein are optimized to accommodate the bandwidth constraints associated with using different networks.

Referring to shown is a block diagram of a communication system including one or more local or private networks such as a local area network LAN and a second network such as a public network. The local networks can be coupled to the second network via one or more suitable wired connections and or wireless communications. The local networks may have private and overlapping address spaces.

The local network includes a router and one or more local network devices coupled to the router . The router can be a residential gateway or other network element that allows the local network devices to communicate with each other in a local network arrangement and with the network e.g. via the Internet and or other appropriate connection or communication.

The local network can include one or more local network communication devices such as network devices configured to operate within a local network structure according to a set of guidelines established by the Digital Living Network Alliance DLNA and or that support one or more universal plug and play UPnP protocols or other local network protocols. Such DLNA or DLNA UPnP devices include multimedia content processing devices such as televisions set top boxes and digital video recorders computers printers servers information storage devices information playback devices and other suitable DLNA and or DLNA UPnP devices. The local network devices also can include other UPnP devices such as home lighting controllers. The local network devices can communicate with the router via any suitable wireline connection e.g. as shown generally with the device or wirelessly e.g. as shown generally with the device .

The second network can be or include any suitable communications network such as one or more wired networks e.g. a DSL or cable network wireless telephone networks e.g. 3G or WiMax and or one or more wireless local area networks WLAN . The network also can be or include the Internet and one or more intranets.

The communications system also can include one or more end user communication devices such as mobile communication devices . Each of the mobile communication devices can be any suitable mobile communication device configured to communicate with one or more devices in the local network via the router and with the second network . The mobile communication device can communicate with the local network and the second network wirelessly as shown or alternatively via one or more appropriate wired connections. For example the mobile communication device can be a mobile device having DLNA and or DLNA UPnP capabilities i.e. a DLNA or DLNA UPnP device. The mobile communication device also can have Wi Fi Ethernet WiMax or other similar IP based connectivity although such is not necessary.

As will be discussed in greater detail hereinbelow the mobile communication devices and other end user devices can form one or more groups across networks. For example the mobile communication device can form a group with one or more devices in the local network and one or more devices in the network . The group is shown generally as a dashed group .

Referring now to with continuing reference to shown is a block diagram of a communication device that can be part of a group e.g. the communication device . Suitable communication devices include any mobile or non mobile communication device configured for joining groups. For example suitable non mobile communication devices can include personal computers digital video recorder DVR or digital video server DVS devices including any signal converter or decoder set top box with internal and or external recording capabilities and local and or remote storage which often are referred to as personal video recorder PVR devices. Other suitable non mobile communication devices include home or residential gateways home media server systems digital video disk recorders televisions or other suitable computing devices or video devices including internet protocol IP satellite and cable digital video recorders and home area network HAN devices and systems. Suitable mobile communication devices can include mobile and handheld computing devices such as cellular telephones smart telephones personal digital assistants PDAs wireless handheld devices digital cameras music players laptop personal computers PCs and notebook PCs. As discussed hereinabove in addition to having local network connectivity compatibility e.g. Wi Fi the mobile communication device can be configured to also have IP based connectivity capability e.g. Ethernet WiMax or other suitable IP based connectivity although such is not necessary.

The mobile communication device includes a controller or processor and a content storage element or memory device coupled to the controller . In general the controller processes multimedia content and other information received and or generated by the mobile communication device . In addition to the mobile communication device having the content storage device the controller can include at least one type of memory or memory unit not shown and a storage unit or data storage unit coupled to the controller for storing processing instructions and or information received and or created by the mobile communication device .

The mobile communication device also can include one or more input and or output interfaces for receiving and or transmitting multimedia content and other data and information. For example the controller and other components in the mobile communication device can be coupled between a transmit interface and a receive interface . It should be understood that one or more of the interfaces can be a single input output interface e.g. transceiver coupled to the controller and or other components in the mobile communication device .

One or more of the controller the memory element and the interfaces can be comprised partially or completely of any suitable structure or arrangement e.g. one or more integrated circuits. Also it should be understood that the mobile communication device includes other components hardware and software not shown that are used for the operation of other features and functions of the mobile communication device not specifically described herein.

The mobile communication device can be partially or completely configured in the form of hardware circuitry and or other hardware components within a larger device or group of components. Alternatively the mobile communication device can be partially or completely configured in the form of software e.g. as processing instructions and or one or more sets of logic or computer code. In such configuration the logic or processing instructions typically are stored in a data storage device e.g. the content storage device or other suitable data storage device not shown . The data storage device typically is coupled to a processor or controller e.g. the controller . The controller accesses the necessary instructions from the data storage device and executes the instructions or transfers the instructions to the appropriate location within the mobile communication device .

With respect to the memory element some end user communication devices typically include or have access to a hard drive or other storage element for recording multimedia content. However the memory element can be any suitable information storage unit such as any suitable magnetic storage or optical storage device including magnetic disk drives magnetic disks optical drives optical disks and memory devices including random access memory RAM devices and flash memory. Also although the memory element is shown within the mobile communication device the memory element can be located external to the mobile communication device and suitably coupled thereto.

The mobile communication device also includes overlay middleware or an overlay middleware module and an xDLNA application or application module as will be discussed in greater detail hereinbelow. Although the overlay middleware and the xDLNA application are shown generally as being coupled to the controller and the memory element it should be understood that one or both of the overlay middleware and the xDLNA application can be partially or completely configured in the form of hardware circuitry and or other hardware components within a larger device or group of components within the mobile communication device . Alternatively one or both of the overlay middleware and the xDLNA application can be partially or completely configured in the form of software e.g. as processing instructions and or one or more sets of logic or computer code within the mobile communication device . Furthermore each of the xDLNA application and the overlay middleware can be implemented in the form of multiple components or the xDLNA application and the overlay middleware may be implemented together as a single module.

As will be discussed in greater detail hereinbelow it should be understood that a communication device that has an xDLNA application is not required to host any DLNA application or contain a UPnP stack. Also in a given subnet such as the local network there may be more than one device with the xDLNA application and or the overlay middleware. One or both of the local network and the second network can include other UPnP and DLNA network devices including residential gateways and network routing devices including devices that do not have the xDLNA application or the overlay middleware. Other such suitable UPnP and DLNA network devices include one or more of a signal converter box a signal decoder box a digital video recorder a digital video disk recorder a personal video recorder device a home media server a digital video server a printer a television a video camera a residential gateway a video receiver and a computer.

In one embodiment the overlay middleware provides the control path functions of secure group creation and maintenance and data path functions of enabling group communication. The overlay middleware provides an application programming interface API to enable the xDLNA application to join a group to find peer xDLNA applications in other devices and to coordinate with those found peer xDLNA applications to extend UPnP DLNA from a single subnet to an extended group of devices. Each group is uniquely identified by a tuple. Similarly the overlay middleware identifies each device in a group irrespective of the device s underlying IP address using a device identifier device ID . In one instantiation device ID can be a random number in another the device ID may be 128 bit truncation of a public key generated during the installation of the overlay middleware . A device can be a member of multiple groups but must have the necessary group specific credentials such as a password or a certificate to claim membership.

For a new device to join a group the overlay middleware in the new device first finds at least one current group member and then learns information about other peer devices in that group from that group member. A group member that enables new devices to bootstrap into the group is known as a super peer SP . Each identity domain may use domain specific schemes for secure directory lookup and update. A domain name server DNS can be used for a directory service. Alternatively other forms of directories such as Dynamic DNS DDNS SIP registrar and Distributed Hash Table DHT can be used and may all coexist. If the identity domain field is itself a routable value such as an IP address or phone number such value may be used directly to contact the super peer e.g. by sending an IP packet or SMS message without requiring a directory lookup.

Since all nodes essentially are equivalent any group member that has the credentials to register in the directory can play the role of a super peer. When there are more capable nodes in a group such as a node without battery constraints those particular nodes can take over the role of a super peer from one or more less capable super peers. For fault tolerance group members track each other and any group member can take over as a super peer when an existing super peer leaves or becomes unavailable. Once there is at least one super peer in a group a simple directory lookup using the group name as the key can serve the purpose of enabling a new device to find the super peer s contact such as IP address port or an identifier such as a phone number or an NAT server login name to contact the super peer. The new device can then query the super peer for information about other peers in the group.

A new device joins a particular group by informing other devices in the group of the new device s presence. The exchange of presence information is used to authenticate the new device s node s membership within the group as well as to diffuse information about the available of at least the xDLNA application in the local device to other devices in the group. In one instance an identifier termed application ID can be used to identify an application. The overlay middleware builds a list of application IDs based on applications that have joined a group. In another instance the overlay middleware can build the application list based on installed applications in a device. The overlay middleware in devices that are behind a Network Address Translation NAT firewall can use conventional schemes e.g. using STUN TURN servers or configuring the gateway for port forwarding to enable new devices to communicate therewith. As is known STUN Simple Traversal of UDP through NAT firewalls is a protocol for assisting devices behind an NAT firewall or router to determine their public IP address port and thereby assist with their packet routing and TURN Traversal Using Relay NAT is a protocol that allows for an element behind an NAT firewall to receive incoming data over TCP or UDP connections.

For example when a device behind an NAT firewall joins a group the device determines and provides its reachable identifier information such as a public IP address port or an account name in an NAT traversal server to the existing group members so that subsequent group members can obtain the reachable identifier required to reach the device currently joining the group. For NAT firewalls that support UPnP gateway device specifications the overlay middleware also can configure the NAT firewall to forward packets destined to the overlay middleware port to the appropriate NAT ed IP address of the device hosting the middleware. These measures relieve xDLNA and other applications that use the middleware from having to address issues related to communicating with peer applications that reside in devices behind an NAT firewall. Therefore in general in one embodiment the overlay middleware handles the generic functions of secure group formation and maintenance service discovery and group communication. In other embodiments these functions may be provided by multiple different modules or may be built into the xDLNA application along with the features discussed hereinbelow.

The xDLNA application implements the necessary service logic to effectively extend DLNA functionality across multiple subnets. In one embodiment the xDLNA application uses the API of the overlay middleware to join one or more groups. For example the xDLNA application may join a group called . The xDLNA application can then find its peer xDLNA applications in other devices in the group using callbacks that are provided by the overlay middleware . The xDLNA application also can send receive messages with one or more members in the group using the APIs provided by the overlay middleware . In another embodiment an xDLNA application can create a connection such as a TCP connection with the second xDLNA application for subsequent message exchanges without using the middleware. For example a first xDLNA application in a mobile communication device e.g. the mobile communication device can send its public IP address and port to other xDLNA applications in its group such as to the router using an NAT traversal server account and to another mobile communication device using an SMS message. Then each of the xDLNA applications in the router and the mobile communication device can create a TCP session with the first xDLNA application in the mobile communication device . Alternately the second xDLNA application may be registered in an SIP server and the first xDLNA application can use SIP to establish a session with the second xDLNA application.

To extend UPnP functionality the xDLNA application discovers local UPnP devices and services based on their multicast advertisements and responses to search requests . When an xDLNA application finds another xDLNA application in its group the xDLNA application selectively sends information about UPnP devices in its local network to its peer xDLNA application. On receiving this information the peer xDLNA application re advertises this information in their local domain. In the relatively simple case where the address included in the information provided by the first xDLNA application corresponding to UPnP devices in its network is routable from the second xDLNA application network the address information needs no modifications. In some instances the xDLNA may enable routability by appropriately configuring the routing table. For example in the xDLNA application in Device can make an address in the local network corresponding to Device reachable from Device by creating a UDP tunneled route for IP address corresponding to Device to a public address port of a device in the local network . Once the remote UPnP applications have discovered each other the UPnP applications can communicate directly between each other without the intervention of the xDLNA application .

Next consider a scenario involving the system shown in . Assume that the local network is Alice s home network and Alice s home network includes a personal computer PC that hosts a DLNA media server and a residential gateway e.g. as part of the router . In this scenario Alice with the mobile communication device visits the second network which is a hotspot or the home network of one of Alice s friends. As part of this example assume that the second network includes a DLNA television not shown and a WLAN router not shown . In addition to the local network and the second network there is the mobile communication device which in this example belongs to Alice s spouse.

In the above scenario many of the devices e.g. the network devices and the mobile communication device may have a NAT ed IP address. Such addresses are not routable outside of their local networks. Also because of the manner in which the address of many network devices are assigned e.g. by the various device manufacturers Alice s PC in the home network may have the same address as the DLNA television in the second network . Furthermore not all devices will have the overlay middleware or the xDLNA application .

In this scenario the objective is to enable all the use cases that are possible using DLNA as if all the devices were in the same broadcast domain. For example the mobile communication device should be able to view multimedia content located in Alice s PC in the home network e.g. using the DLNA television in the second network even though neither Alice s PC in the home network nor the DLNA television or WLAN router in the second network is equipped with the overlay middleware or the xDLNA application .

To address the objective in this case in the domains that are being extended there should be at least one node with the overlay middleware and the xDLNA application. As indicated earlier it is not necessary for that node to also have a DLNA application or UPnP stack. That particular node will receive information about remote UPnP devices and services advertise them locally with the necessary identity translations and handle communication destined to the translated identity. The node also will inform other remote members about UPnP devices and services in its local domain. For example assume that only the residential gateway in the home network and the mobile communication devices have the overlay middleware and the xDLNA application. Although the process of finding peer xDLNA applications in other devices behind an NAT firewall and communicating with the discovered xDLNA applications is handled by the overlay middleware for the xDLNA application the key issue in this case is that the advertisements and many subsequent messages generated by the UPnP devices within an NAT ed network will have an NAT ed address embedded inside them. If a remote DLNA device receives this information and tries to contact the NAT ed address those packets will not reach the intended recipient.

To address this issue on receiving information about a remote UPnP device in a message from a remote peer the xDLNA application maps the IP address and port number in the message to its local IP address and a local port number. Also when the xDLNA application receives messages destined to this local port the xDLNA application may respond directly if the xDLNA application has access to sufficient information. Alternately the xDLNA application can reverses the local IP address and port information in the message content to the original IP address and port number and send the information to a remote xDLNA application. In the latter case the xDLNA application also determines the peer device corresponding to this connection and forwards the packet to the peer device using the API provided by the overlay middleware . It should be noted that in addition to the information obtained from UPnP discovery messages such as NOTIFY the NAT ed IP address will be embedded in other messages. For example the content directory service embeds the IP address of the media server as part of the rtsp URLs sent in response to a request from control points. Therefore in this approach all message exchanges between non local UPnP devices will traverse the xDLNA application.

Referring now to with continuing reference to and shown is a data flow diagram of two communication devices Device and Device in different subnets discovering each other and subsequently sharing multimedia content across the subnets. The two devices each include an overlay middleware and an xDLNA application. also shows one DLNA media application which can be co resident in Device or Device or can be present in the respective local subnets of the devices.

Initially the xDLNA application in Device joins the group. Upon receiving a request to join a group e.g. its overlay middleware first determines the super peer. In one instance the overlay middleware does a lookup of alice friends.id domain in a directory service of id domain to determine if there is any member already registered in the directory for the group. If no member is present the overlay middleware registers the IP address of the requesting device using the protocol corresponding to the directory service. Accordingly the requesting device becomes a super peer for the group.

Using a similar lookup the overlay middleware in Device finds the super peer Device and initiates a connection to the overlay middleware in Device . It should be noted that if the id domain portion is itself an IP address or another reachable identity such as a phone number then no directory service or lookup is needed the overlay middleware can use that IP address as the super peer. For example if the domain portion is sip 1234567890 then the overlay middleware can directly call the phone number 1234567890 super peer using Session Initiation Protocol SIP to establish a connection. The super peer may validate the new member using the security credential corresponding to the group and provide the device id and the reachable ids such as IP address ports NAT traversal server account names and or phone number of other members of the group. Based on the reachable ids the middleware may establish and maintain the appropriate communications path to the peer devices. This communications path may be modified by the middleware when the context changes e.g. when a shorter or longer bandwidth path becomes available . In one implementation a TCP connection can be established between peer middleware applications and the communications between peer xDLNA applications flow via this TCP connection. Using a hello exchange via this connection the respective middlewares learn that both devices have an xDLNA application and provide a callback Peer Found to their respective local xDLNA applications. As part of the call back the middleware may provide various information such as device identification and alias names of the peer device and whether the peer device is behind an NAT firewall.

The xDLNA application typically uses standard UPnP schemes to determine information about devices in its local network. For example as shown in as defined in the UPnP standard a periodic advertisement message NOTIFY is generated by the Media Server DMS in the local network of Device . The xDLNA application uses a Berkeley socket interface or other suitable interface to receive these messages and thus find information about devices in its local network. Upon finding a new peer such as receiving a Peer Found call back from the overlay middleware the xDLNA application selectively sends information it has about local UPnP devices and services to the new peer device. Similarly upon finding new UPnP devices in a local network the xDLNA application may use the API provided by the overlay middleware to send this message to all or selected the peer xDLNA applications. The peer xDLNA applications that receive information about particular local UPnP devices may be selected e.g. based on the configuration information provided by the user thus matching the capability of the source device with remote devices. The message is sent via the connection that the overlay middleware maintains with its other peer devices.

At Device the overlay middleware in Device receives this message and sends the message to its xDLNA application. The xDLNA application modifies the original IP address and port number ip2 port2 in the received information to a local IP address and port number ip1 port1 to create a new message compatible with the local network protocol. The xDLNA application also may modify other information such as the name of the remote device the keep alive time and other information e.g. based on local policy to create the new message. The xDLNA application then transmits this new message within its local network domain. The xDLNA application also may combine information about multiple devices in a remote network to create a single virtual device and create a new message corresponding to the virtual device. Based on its policy the message may be transmitted only to a loop back address if only Device should be able to see remote devices or to a SSDP multicast address to enable anyone in Device s broadcast domain to see remote devices or to a unicast address of selected devices reachable from Device . If the new port number is used in the received messages then the xDLNA application also creates a new local IP address port pair and a listener socket for TCP connections to that new port. For devices in the group corresponding to that device s ip port tuple there is a unique local ip port tuple. In upon receiving the NOTIFY message from DMS Device stores the information. When the connection with Device has been established Device sends information about selected devices in its local network to the new xDLNA application. Though not shown Device also may receive similar information from the xDLNA application in Device . Upon receiving this information as new port port2 is present a new mapping to port1 is created and a corresponding TCP listener socket is created. When more NOTIFYs are received from Device with ip2 port2 the xDLNA application in Device uses the same ip1 port1 mapping instead of ip2 port2. Upon receiving a packet to ip port the xDLNA application e.g. ip1 and port1 at Device can determine the intended peer device and the IP address port reachable from that device e.g. Device and ip2 port2 .

The control point CP receives this advertisement and learns about the DMS in Device . The control point can then receive more information about the DMS using the HTTP GET and other such messages defined in the UPnP or DLNA standards. When the control point or DMR in Device or in the subnet within which Device is located initiates a TCP connection to IP1 port1 the xDLNA application in Device will receive this connection. The xDLNA application then sends an INITIATE message with the local connection identifier CID to its peer in Device corresponding to ip1 port1. This INITIATE message triggers Device to in turn initiate a TCP connection to the real device at ip2 port2. Device initiates this connection and may send a connection identifier CID to Device . This exchange of connection identifiers is one way to enable the xDLNA applications to discover the state identifiers of each other. The xDLNA applications can use the discovered state identifiers to refer to connections when packets need to be sent via a specific connection when more connection information is needed or when connections are torn down. Thus in this embodiment the logical connection from the control point to the DMS consists of physical connections first from the control point to the xDLNA application in Device second between the xDLNA application in Device and the overlay middleware in Device third between the overlay middleware in Device and the overlay middleware in Device fourth between the in Device and the xDLNA application in Device and fifth to the DMR.

One of the advantages of this embodiment is that the DLNA devices such as the DMR CP and the DMS in need not be aware of the changes in the IP address or the temporary disconnections of the remote devices. For example if a DMR that is reachable via Device is receiving data from a DMS that is reachable via Device and Device moves from a one network e.g. a hotspot into another network e.g. a wide area network such as WiMax the temporary disconnection and address change will be handled by the xDLNA applications. The xDLNA application in Device will realize that it cannot send any data to the xDLNA application in Device and will pause reception from the DMS. In the case of using socket interfaces such process can be implemented by not calling the read system call on the socket descriptor that is sourcing the packets to be sent to the xDLNA application in Device . This will result in a TCP flow control window becoming shut thus pausing the transmission of data from the DMS. When the connection with the xDLNA application in Device has been re established the home xDLNA application resumes packet reception from its connection to DMS. The renderer application in the mobile device that changed the IP address also is not affected because its connection is only to the local xDLNA application. The same approach also handles temporary disconnections.

An issue with splitting connections between a media server and a media renderer is that if their congestion levels are different significant overhead will be needed to buffer the data in the intermediate points. To avoid such situations when no more data can be sent via a connection the xDLNA application stops receiving data from the corresponding source connection s that is feeding data into the connection that cannot receive data. In one embodiment the xDLNA application can determine this situation when the xDLNA application sends n bytes of data using a send system call but receives a return value that is less than n. This approach closes the flow control window in the source and prevents the intermediate device from having to buffer large amounts of data. The same approach also is used to temporarily pause the transmission of packets from one xDLNA application to another xDLNA application. In embodiments where the overlay middleware and the xDLNA application are separate modules the overlay middleware also can use a similar approach to pause the transmission of data from the xDLNA application and from a peer overlay middleware. This in turn will result in the xDLNA application pausing the reception of data from the source. In another embodiment the middleware or the xDLNA application can send a PAUSE message to the peer application to trigger the peer application to close the flow control window.

The xDLNA application in Device receives this message via a TCP connection. If the xDLNA application in Device has already received the information necessary to respond to this message from the xDLNA application in Device then the xDLNA application in Device generates the response. Otherwise the xDLNA application in Device reverses the address in the Host field to ip2 port2 and calls its corresponding overlay middleware to send this message to its xDLNA application peers e.g. Device in . The overlay middleware in Device uses its TCP connection with the overlay middleware in Device to deliver this message to the xDLNA application in Device . The xDLNA application in Device may cache this information and use it to respond to subsequent requests for the same information. In another embodiment xDLNA application in Device can obtain the description file and additional information such as the list of files and folders when it discovers the DMS and can provide all or parts of that information to the xDLNA application in Device as part of the Info DMS Info message. Such information may be sent in a compressed form to save bandwidth. Such information also may be encrypted to protect the information e.g. a group key and or a share key between the xDLNA applications. Alternately the overlay middleware can provide the functions of compression and encryption. Such information can then be used to rapidly respond to a request.

One of the issues in using UPnP with mobile devices is that UPnP relies on periodic advertisements to keep track of devices in the network. This can be a significant drain on battery power and a significant load on the wireless network. In the methods systems and devices described hereinabove these issues are addressed by enabling the xDLNA application in a device to proxy for remote devices. Therefore even when a mobile device goes idle the xDLNA application in other devices in its group can be configured to generate advertisements on behalf of the UPnP services in the mobile device. When a mobile device is shutdown the group middleware sends a BYE message to the group triggering the xDLNA application in the gateway to stop advertising for UPnP services in that mobile device.

Continuing with the message flow in the xDLNA application in Device does not forward further NOTIFY messages for the same UPnP device identified using UUID field to Device . Instead Device and other xDLNA applications in the group that have received the NOTIFY message sends the periodic NOTIFY message locally. Therefore a NOTIFY message is sent only to remote xDLNA applications that have not yet been sent the NOTIFY message. When a local UPnP device sends a BYE message a NOTIFY message with state set to ByeBye or has not sent NOTIFY messages for an extended period the xDLNA application may inform its peers to stop sending proxy advertisements corresponding to that device in their local domain. When a device hosting the xDLNA application gets disconnected other xDLNA applications find that information e.g. by receiving callbacks from their respective overlay middlewares and remove states corresponding to the disconnected xDLNA application and its UPnP devices. Also the xDLNA application can readily respond to an M SEARCH request in the local domain using a locally generated or stored HTTP response without the addition of the wide area network latency.

Now referring to shown are the steps in an xDLNA application upon receiving a packet while in its local network. On receiving a packet in its local network step if the packet was destined to a standard control port step such as an SSDP port the xDLNA application determines whether the xDLNA application is a gateway into the local network for the xDLNA application s group step . If the xDLNA application is the only xDLNA application corresponding to a group in a subnet the xDLNA application is the gateway for that group in that local network. If there is more than one xDLNA application for a group in a given local area network at least one of the xDLNA applications is elected as the gateway that shares information about local devices with remote group members and enables remote members to communicate with the local devices step .

In one embodiment xDLNA applications in a given subnet discover each other via local multicast and elect one device to act as the gateway based on device capability e.g. processing power and bandwidth . Only the elected device shares information about devices in the local subnet with other devices. Other devices only monitor the availability of the elected device and take over if the elected device becomes unavailable. In other embodiments when there are multiple xDLNA applications in a given local network the xDLNA applications can share the load by acting as the gateway for subsets of group members or by acting as the gateway for a subset of local devices. The xDLNA application can be configured to enforce the policies that specify the remote devices and groups that have access to devices in its local subnet or domain. The xDLNA application also can be configured to send information about local UPnP devices and services only to select groups or selected devices. For example if an xDLNA application is part of a home group and a friends group a user can configure certain UPnP devices and services to be shared only with home group. An elected gateway device determines if the advertisement is a search message or an informational message step . For an informational message such as a NOTIFY message about a new device e.g. a new UUID field in the message or new information e.g. state information new IP address port values step the xDLNA application will save the information locally step . The xDLNA application also may obtain additional other information such as device description information as described hereinabove and save the information locally. The information about local devices will also be shared with selected remote gateway devices in its groups. As described hereinabove the saved information about local devices also will be transmitted to new xDLNA applications that join the group step .

If the packet is a search request or the packet is not sent to the control port but instead to another port then the xDLNA application determines if it needs to generate a response step . For a search request such as an M SEARCH message the local elected xDLNA application will respond with information about remote devices. To prevent redundant advertisements an elected device will not respond with information about a remote device if it has seen an advertisement from another member corresponding to that remote device. Since a packet may be larger than Maximum Transmission Unit MTU a single message may be received as multiple packets. In such case the xDLNA application may determine that the xDLNA application has to wait for more data step e.g. by checking content length and wait to receive the entire message step . The xDLNA application then assembles the packets to create the message and then replaces the IP address value. The xDLNA application then determines if xDLNA application has sufficient information to generate a response message locally. If so the xDLNA application sends the response message step . For example a response to an M SEARCH request or a request for a description file may be generated locally. If some remote files are cached locally the request for such files may also be served locally. Otherwise the xDLNA application determines if information in the request message such as the IP address port in the packet needs to be modified step . In one instance this determination is made by searching for the IP port value in the received packet. For instance in the example shown in when the xDLNA application in Device receives a message from DMR CP the Device xDLNA application checks if there is an ip1 port1 value in the received packet and if so the xDLNA application reverses the address in the message step to ip2 port2 which represents the original value.

Once the message to be sent to the remote device is obtained the xDLNA application determines the recipient device and sends the message to the xDLNA application in the recipient device step . For example in when the xDLNA application in Device receives the GET message the Device xDLNA application maps the connection from where the packet was received e.g. socket descriptor CID to the destination device in this case Device and send the message to the xDLNA application in Device .

In the embodiment shown in Device uses the overlay middleware. If the data is not fully sent step the reason may be because of a temporary disconnection or congestion in the link between the xDLNA application in Device and the xDLNA application in Device . In that case the xDLNA application schedules the packet for later transmission step . For example a SELECT SYSTEM call can be used to determine when more data can be sent. The xDLNA application also stops receiving data from the source that is feeding data into this congested link. In the example shown in the xDLNA application in Device will pause reception from DMS CP step . In one embodiment this is done by not reading more data from CID. If an xDLNA application in a remote network changes an IP address or becomes unavailable then the overlay middleware will handle the process of finding the new IP address of the remote peer or find a new xDLNA application that can act as a gateway in the remote network. In one embodiment the new IP address can be determined using a message or a new connection request from the remote peer. The message then will be transmitted to the remote xDLNA application via the new connection. Since the connection of the local UPnP device is with its local xDLNA application such changes in addresses are hidden from the UPnP device.

Referring now to shown are the steps in the xDLNA application upon receiving a packet from a peer xDLNA application in a remote network step . For example such messages may be received when an xDLNA application joins a group when new devices are discovered in remote networks by other xDLNA application or when there is an exchange of data between UPnP or DLNA applications in the local domain and the remote domain. The xDLNA application first determines if the information in the receive message needs to be modified step . For example the name of the device e.g. UUID may be modified based on local configuration and state. For example if the same UUID is received from devices in two different networks that information may be modified. The xDLNA application also determines if the IP address in the received packet should be modified. This is determined based on the type of packet header and the content type. The xDLNA application intelligently scans for IP addresses only in selected messages that carry Content Type text xml e.g. messages that start with HTTP POST SUBSCRIBE or NOTIFY. For messages that carry media the xDLNA application looks at the header and then forwards the packet. Therefore the processing overhead of scanning for addresses and modifying them is required only for a small subset of messages.

As a message can be split across multiple packets using the content length to determine the total size of message the xDLNA application waits for the entire message to arrive steps . Then the xDLNA application checks for IP address markers such as Location and http and replaces the remote IP address port that follows them step . If the address being replaced already has been seen from the source device then the same mapping is used. However if IP port from the device is new then a new unused port is located in the device and a TCP listener is created. When data is sent over the connection to a device in the local subnet step if all the data is not fully transmitted step then the xDLNA application schedules the unsent part of the message for later transmission step and pauses reception from the source step .

The received message may be an informational message about remote devices or the received message may be data packets e.g. corresponding to a media stream step . For informational packets the xDLNA application may choose to store the information locally step so that the xDLNA application can generate the periodic advertisement messages or responses to request messages. such as M SEARCH messages. Also the local state may be updated to reflect changes in the remote network step . For example if the informational message indicates that a device in the remote network has left the network the local state corresponding to that device may be updated or removed. For informational messages the xDLNA application may generate a local advertisement to inform UPnP applications in the local domain or network step . Such advertisements about remote devices may be sent to a loopback address step selected unicast addresses or a SSDP multicast address step . In the case with the loopback address only the local host will be able to see remote UPnP devices. For example this occurs when a device that has the xDLNA application does not want the other devices in its current network to get information about remote UPnP DLNA devices in its group. However in cases where advertisements about remote devices are sent to a SSDP multicast address the entire local subnet will be able to see the remote device. The xDLNA application also can be configured to share local devices with remote group members but NOT expose remote devices to other devices in the local subnet. For example a mobile device in a public hotspot may send information about a local printer to its group members but may not broadcast information about DLNA devices in its remote group to other devices sharing the hotspot.

For example referring again to when the control point CP in Device subscribes to events from the DMS the control point sends a message similar to the following to IP1 port1 which corresponds to Device 

In this case the xDLNA application in Device will receive this message and reverse the HOST field in the message and replace ip1 port1 with ip2 port2. Note that in previous discussions herein the xDLNA application in Device modified ip2 port2 with ip1 port1. Such process is being reversed by the xDLNA application in Device thus making its changes transparent to remote devices. The xDLNA application will map the connection in which the message is received to Device and transmit the message to the xDLNA application in Device . On the other end the xDLNA application in Device will receive this message and check for the presence of any remote address. In this case the xDLNA application in Device modifies the IP address and port that follows the marker http in the CALLBACK field from ip1 port3 to ip2 port4 and forwards this message using the corresponding connection to the DMR. If ip1 port3 is being used from Device for the first time then the xDLNA application in Device also creates a new TCP listener socket connection and creates the necessary state to map connections to this socket to Device .

While in the above example addresses are modified only in the headers in some cases addresses are modified in the content that is carried inside the header. In the example message 

In the presence of an NAT firewall the methods and systems in the embodiment described hereinabove rely on the overlay middleware to handle issues related to establishing a communication path between peer devices and enabling the xDLNA applications to communicate. The xDLNA applications simply handle re mapping the NAT ed address in message exchanges between non local DLNA devices to a local address that is routable from all local members of a domain. One advantage of this approach is that it can accommodate cases with multiple NAT ed domains in a group. Depending on the type of NAT firewall the overlay middleware can handle NAT traversal using a variety of schemes without requiring any modifications in the xDLNA application.

Security issues related to group formation are handled by the overlay middleware. Different groups may have different schemes for securing group membership. One implementation relies on simple password based security. When a new node contacts a super peer to obtain information about other group members the new node and the super peer mutually authenticate each other using the group s password. Similarly the HELLO and BYE message exchange also carries authentication codes for mutual authentication.

The methods systems and devices described hereinabove enable network devices including mobile communication devices to use or re use their UPnP DLNA applications for directly sharing multimedia content between each other over wide area networks. The overlay middleware described hereinabove enables UPnP peers to find each other across networks. The xDLNA application provides optimization to conserve device bandwidth and battery while retaining all existing UPnP features. The method uses only generic network functions and service specific state and protocol awareness is limited to devices in the group. Such approaches enable relatively rapid proliferation of new services as these new services can be easily deployed with enhancements only in the devices that need those services.

The methods shown in may be implemented in a general multi purpose or single purpose processor. Such a processor will execute instructions either at the assembly compiled or machine level to perform that process. Those instructions can be written by one of ordinary skill in the art following the description of and stored or transmitted on a computer readable medium. The instructions may also be created using source code or any other known computer aided design tool. A computer readable medium may be any medium capable of carrying those instructions and includes random access memory RAM dynamic RAM DRAM flash memory read only memory ROM compact disk ROM CD ROM digital video disks DVDs magnetic disks or tapes optical disks or other disks silicon memory e.g. removable non removable volatile or non volatile packetized or non packetized wireline or wireless transmission signals.

It will be apparent to those skilled in the art that many changes and substitutions can be made to the multimedia content sharing methods devices and systems herein described without departing from the spirit and scope of the invention as defined by the appended claims and their full scope of equivalents.

