---

title: Method and apparatus for managing configuration memory of reconfigurable hardware
abstract: Provided is a method of managing a configuration memory of reconfigurable hardware which can reconfigure hardware according to hardware configuration information. The method includes: determining at least one slot capable of currently storing the hardware configuration information on the basis of the states of a plurality of slots of the configuration memory; and storing hardware configuration information, which is stored in an external memory, in the determined at least one slot capable of currently storing the hardware configuration information. Accordingly, memory utilization can be improved even in dynamic environment such as data dependent control flow or multi-tasking.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08402410&OS=08402410&RS=08402410
owner: Samsung Electronics Co., Ltd.
number: 08402410
owner_city: Suwon-si
owner_country: KR
publication_date: 20080314
---
This application claims priority form Korean Patent Application Nos. 10 2007 0086276 filed on Aug. 27 2007 and 10 2008 0006700 filed on Jan. 22 2008 in the Korean Intellectual Property Office the disclosure of which is incorporated herein in its entirety by reference.

Methods and apparatuses consistent with the present invention relate to managing a configuration memory of reconfigurable hardware and more particularly to dynamically managing a configuration memory of reconfigurable hardware.

Application specific integrated circuits ASICs are non memory semiconductor chips customized for specific electronics and information and communications products. A field programmable gate array FPGA is a semiconductor device containing programmable logic components called logic blocks and programmable interconnects. The logic blocks can be programmed to perform the functions of basic logic gates such as AND and XOR and more complex combinational functions such as decoders. The FPGA may be manufactured to verify the behavior and performance of previously designed hardware before the hardware is finally produced as a semiconductor chip. A hierarchy of the programmable interconnects allows the logic blocks to be interconnected as needed. Furthermore modern FPGAs can be programmed at runtime so that some circuits perform other works.

Reconfigurable systems using an FPGA or coarse grained array CGA are 10 times or more slower than general circuits and require many disconnected unnecessary elements resulting in inefficient space usage. Accordingly reconfigurable systems using an FPGA or CGA have been used for limited purposes for example for programming and verifying the functions of circuits as emulation before prototypes are developed or for developing small quantity products in a short time. Recent developments in technology have offered high speed high density hardware. Also as system verification is becoming increasingly important and product cycle is changing rapidly the applications of reconfigurable systems are increasing.

Hardware reconfigurable systems refer to systems that can reconfigure hardware through programming. Programming is performed using hardware configuration information stored in a memory called a configuration memory. Accordingly if a plurality of pieces of hardware configuration information necessary for hardware components having different functions are stored in a configuration memory a hardware reconfigurable system can perform a variety of functions using necessary hardware configuration information pieces. The hardware reconfigurable system meets requirements of application due to its performance that is the advantage of hardware and its flexibility that is the advantage of software.

Here a configuration memory which stores hardware configuration information usable to reconfigure hardware included in a hardware reconfigurable system is a memory that can most rapidly access the reconfigurable hardware. If new hardware configuration information is stored in the configuration memory the hardware reconfigurable system reconfigures the hardware using the new hardware configuration information stored in the configuration memory. In general when M denotes the number of a plurality of storage areas constituting the configuration memory and each of the storage areas is a slot the size of the configuration memory is determined by M the size of the slot . Since the configuration memory has M slots the hardware reconfigurable system including the configuration memory supports multi context.

Here multi context is a method of storing a plurality of pieces of hardware configuration information used to reconfigure hardware in a memory updating the stored hardware configuration information with other hardware configuration information as needed and reconfiguring the hardware by using the updated hardware configuration information. A hardware reconfigurable system using multi context rapidly reconfigures hardware through switch between hardware configuration information stored in a configuration memory.

The present invention provides a method and apparatus for managing a configuration memory of reconfigurable hardware which can optimize the determination of a storage area of the configuration memory when the determination of the storage area is dependent on the kind or size of data or when a plurality of programs simultaneously use the configuration memory by providing the state of a storage area of the configuration memory and a command to change the state of the storage area and dynamically determining the position of the storage area in which hardware configuration information is to be stored.

The present invention also provides a computer readable recording medium having embodied thereon a computer program for executing the method.

According to an aspect of the present invention there is provided a method of managing a configuration memory of reconfigurable hardware which can reconfigure hardware according to hardware configuration information the method comprising 

determining at least one slot capable of currently storing the hardware configuration information on the basis of the states of a plurality of slots of the configuration memory and

storing hardware configuration information which is stored in an external memory in the determined at least one slot capable of currently storing the hardware configuration information.

According to another aspect of the present invention there is provided an apparatus for managing a configuration memory of reconfigurable hardware which can reconfigure hardware according to hardware configuration information the apparatus comprising a memory managing unit determining at least one slot capable of currently storing the hardware configuration information on the basis of the states of a plurality of slots of the configuration memory and storing hardware configuration information which is stored in an external memory in the determined at least one slot capable of currently storing the hardware configuration information and a storing unit storing the states of the plurality of slots of the configuration memory.

According to another aspect of the present invention there is provided a computer readable recording medium having embodied thereon a computer program for executing the method.

Technical problems to be solved by the present invention are not limited to the aforesaid problems which will be clearly understood from the following description by those of ordinary skill in the art.

The present invention will now be described more fully with reference to the accompanying drawings in which exemplary embodiments of the invention are shown.

A process of reconfiguring hardware will be explained first. A program for a specified purpose is compiled a code resulting from the compiling of the program is stored in a code memory not shown and hardware configuration information is controlled using the stored code to reconfigure hardware.

Static allocation determines at compile time the positions of all slots of a configuration memory in which hardware configuration information for reconfiguring hardware is to be stored and does not use any external memory. Referring to a hardware reconfigurable system includes a configuration memory consisting of first through Mslots a multiplexer and reconfigurable hardware .

Hardware configuration information to be input to the reconfigurable hardware through the multiplexer is stored in predetermined slots of the configuration memory . The hardware configuration information respectively stored in the slots is data used to reconfigure the reconfigurable hardware . Since the static allocation determines at compile time the positions of slots mapped to all the pieces of hardware configuration information used to reconfigure the hardware and does not use an external memory to store the hardware configuration information as described above the slots in which all the pieces of hardware configuration information are to be stored are determined in advance during memory management. Accordingly since the slots in which all the hardware configuration information is to be stored are determined during the memory management there is no overhead caused by insufficient slots of the configuration memory but the hardware functions of the hardware reconfigurable system are limited by the maximum size of the configuration memory .

Memory overlay stores a plurality of pieces of hardware configuration information used to perform different functions in the external memory maps the pieces of hardware configuration information stored in the external memory with the slots of the configuration memory and uses the mapped pieces of hardware configuration information to reconfigure hardware. Accordingly the memory overlay can use more hardware configuration information to reconfigure hardware than the static allocation can.

Referring to the memory overlay stores hardware configuration information which is stored in the external memory in the configuration memory as needed. Accordingly the hardware functions of the hardware reconfigurable system of are affected by the size of the external memory whereas the static allocation is affected by the size of the configuration memory . Since hardware configuration information stored in the second storage area and hardware configuration information stored in the fifth storage area of the external memory can be mapped to the second slot of the configuration memory the memory overlay can store more hardware configuration information than the static allocation can.

Accordingly the memory overlay allows the hardware functions of the hardware reconfigurable system to increase as the size of the external memory increases. However like the static allocation the memory overlay determines at compile time the positions of all slots of the configuration memory in which a plurality of pieces of hardware configuration information are to be stored. Accordingly codes resulting from the compiling of a program contain information on which slots of the configuration memory are mapped to the pieces of hardware configuration information stored in the storage areas of the external memory . Both the hardware configuration information stored in the second storage area and the hardware configuration information stored in the fifth storage area of the external memory are mapped to the second slot of the configuration memory and information on the mapping is already determined at compile time. Accordingly although the static allocation and the memory overlay are suitable for a program having a simple structure that allows a user to previously determine mapping between storage areas and slots the static allocation and the memory overlay cannot optimally use an external memory and a configuration memory when mapping between storage areas and slots is dependent on the kind or size of data or when a plurality of programs simultaneously use the storage areas and slots.

The hardware reconfigurable system using the dynamic allocation stores a plurality of pieces of hardware configuration information in the storage areas of the external memory and determines at runtime which slots of the configuration memory are mapped to the pieces of hardware configuration information while codes resulting from the compiling of a program for reconfiguring hardware are executed. While the memory overlay of determines at compile time which slots of the configuration memory are mapped to the hardware configuration information stored in the external memory the dynamic allocation of determines at runtime which slots of the configuration memory are mapped to the hardware configuration information stored in the external memory while the codes resulting from the compiling of the program for reconfiguring the hardware are executed. The hardware reconfigurable system using the dynamic allocation will now be explained in detail.

Referring to the hardware reconfigurable system includes a configuration memory a memory managing unit an external memory table a configuration memory table a multiplexer and reconfigurable hardware .

An external memory which stores hardware configuration information is located outside the hardware reconfigurable system. The external memory includes a plurality of storage areas and hardware configuration information for reconfiguring hardware requires at least one storage area.

The configuration memory stores hardware configuration information received from the external memory . The configuration memory includes a plurality of slots and a plurality of pieces of hardware configuration information is respectively stored in the slots. Here the slots are storage areas of the configuration memory in which the pieces of hardware configuration information are stored.

The external memory table shows information on the storage state of the external memory . The information on the storage state of the external memory includes the state information of each of the plurality of storage areas constituting the external memory the index information of each of the slots of the configuration memory mapped to the storage areas and the size of the hardware configuration information stored in each of the storage areas. The external memory table will be explained later in detail with reference to .

The configuration memory table shows information on the storage state of the configuration memory . The information on the storage state of the configuration memory includes the state information of each of the plurality of slots constituting the configuration memory and the index information of each of the storage areas of the external memory mapped to the slots.

The memory managing unit receives command signals for the external memory or the configuration memory from a code memory not shown in which codes are stored and performs an operation according to the command signals. When codes resulting from the compiling of a program for reconfiguring hardware are executed the memory managing unit manages the external memory and the configuration memory using commands stored in the memory managing unit . For example when codes are executed a specific command among the codes is called and the memory managing unit executes the specific command with respect to the external memory or the configuration memory in response to the call. The memory managing unit uses the pieces of information stored in the external memory table and the configuration memory table to execute the command called from the codes. Commands executed by the memory managing unit will now be explained.

When the memory managing unit receives a prefetch command from the codes as a result of code execution the memory managing unit stores hardware configuration information stored in a storage area of the external memory in a slot of the configuration memory . According to an exemplary embodiment of the present invention in order to store the hardware configuration information in the slot of the configuration memory according to the prefetch command the index of the storage area of the external memory and the index of the slot of the configuration memory are necessary.

When the memory managing unit receives an execute command from the codes as a result of code execution the memory managing unit outputs the hardware configuration information stored in the slot of the configuration memory to the multiplexer .

When the memory managing unit receives an invalidate command from the codes as a result of code execution the memory managing unit changes the state of the storage area or slot which are corresponding to the invalidate command and are stored in the external memory table and the configuration memory table to an invalid state. Here the invalid state means a state where the slot of the configuration memory and the storage area of the external memory are not mapped to each other. The fact that the slot of the configuration memory and the storage area of the external memory are not mapped to each other means that the hardware configuration information stored in the slot cannot be used to reconfigure hardware. That is when the state of the slot is an invalid state the memory managing unit does not use the hardware configuration information stored in the slot of the invalid state. New hardware configuration information can be stored in the slot of the invalid state and the hardware configuration information stored in the slot of the invalid state does not have to be eliminated. The memory managing unit makes the state information of the storage area of the external memory table to be the same as the state information of the slot of the configuration memory table mapped with the storage area. Accordingly the state information of the storage area of the external memory table does not show the state information of the storage area but shows the state information of the slot of the configuration memory for convenience of memory management.

When the memory managing unit receives a lock command for a first slot and a first storage area from the codes as a result of code execution the memory managing unit changes the state of the first storage area of the external memory table and the state information of the first slot of the configuration memory table to an exclusive state or an exclusive loading state where the first storage area of the external memory can exclusively use the first slot of the configuration memory mapped thereto. When the memory managing unit receives the lock command if the state information of each of the first storage area and the first slot is a valid state the memory managing unit changes the state of each of the first storage area and the first slot to an exclusive state and if the state information of each of the first storage area and the first slot is a loading state the memory managing unit changes the state of each of the first storage area and the first slot to an exclusive loading state. Here the state where the first storage area can exclusively use the first slot means that a second storage area other than the first storage area cannot be mapped to the first slot. The invalid state the loading state the valid state the exclusive loading state and the exclusive valid state will be explained later in detail with reference to .

When the memory managing unit receives an unlock command for a first slot and a first storage area from the codes as a result of code execution the memory managing unit reads the state information of the first storage area and the first slot from the external memory table and the configuration memory table . If the state of each of the first storage area and the first slot is an exclusive valid state the memory managing unit changes the state to a valid state and if the state information is an exclusive loading state the memory managing unit changes the state of each of the first storage area and the first slot to a loading state. The state information of the storage areas and the slots will be explained later in detail with reference to .

The multiplexer is controlled by the memory managing unit to output only hardware configuration information selected among one or more pieces of hardware configuration information received from the configuration memory to the reconfigurable hardware .

The reconfigurable hardware is a device capable of reconfiguring hardware components such as a fine grained array FGA or a coarse grained array CGA .

The memory managing unit determines at least one slot among slots considering the states of the slots constituting a configuration memory when hardware configuration information is transmitted from an external memory to the configuration memory . A method of determining at least one slot is. performed as follows.

The memory managing unit first selects and determines one or more slots of invalid state among the slots constituting the configuration memory . The invalid state is a state where a slot of the configuration memory and a storage area of the external memory are not mapped to each other. However when there is no slot of an invalid state or when the size of the hardware configuration information is greater than the size of the slot of the invalid state a slot of a valid state is further selected. The valid state is a state where a slot of the configuration memory and a storage area of the external memory are mapped to each other.

The memory managing unit executes commands called from codes as a result of code execution. The commands executed by the memory managing unit will be explained later with reference to .

The storing unit stores information on the storage areas constituting the external memory and information on the slots constituting the configuration memory . The information on the storage areas includes the state information of the slots mapped to the storage areas the index information of the mapped slots and the size of the hardware configuration information. The information on the slots includes the state information of the slots and the index information of the mapped storage areas. The information on the storage areas and the information on the slots are shown in tables which will be explained later in detail with reference to .

The configuration memory receives and stores therein the hardware configuration information that is stored in the external memory . The configuration memory includes a plurality of slots that are respectively storage areas. The slots are respectively mapped to the storage areas of the external memory .

A hardware reconfiguring unit reconfigures hardware using the hardware configuration information received from the configuration memory of the apparatus for managing the configuration memory of the reconfigurable hardware. The hardware reconfiguring unit may be an FPGA or a CGA.

Referring to the external memory table includes the number of a storage area state information the index information of a slot and the size of hardware configuration information.

The number of a storage area is allocated to each storage area to distinguish the plurality of storage areas constituting the external memory .

The state information is information on the state of a slot of the configuration memory corresponding to a storage area of the external memory . The state of a slot of the configuration memory is divided into an invalid state a loading state a valid state an exclusive loading state and an exclusive valid state.

When the state of a slot is an invalid state hardware configuration information stored in the slot is not valid and the slot of the configuration memory is not mapped to any storage area of the external memory . When the state of the slot is a loading state hardware configuration information stored in the storage area of the external memory is being transmitted to the slot of the configuration memory . When the state of the slot is a valid state the slot of the configuration memory and the storage area of the external memory are mapped to each other and hardware can be reconfigured using hardware configuration information stored in the slot.

When the state of the slot is an exclusive loading state the hardware configuration information stored in the storage area of the external memory is being transmitted to the slot of the configuration memory and also the slot of the exclusive loading state is not mapped to a storage area other than the storage area mapped to the slot. When the state of the slot is an exclusive valid state the slot of the exclusive valid state of the configuration memory is not mapped to a storage area other than the storage area mapped to the slot of the exclusive valid state and hardware can be reconfigured using the hardware configuration information stored in the slot of the exclusive valid state.

The index information on a slot is information on the index of the slot of the configuration memory mapped to the storage area of the external memory .

The size is the size of hardware configuration information stored in a storage area of the external memory . The size of the hardware configuration is defined by the number of storage areas of the external memory in which the hardware configuration information is stored.

Referring to the configuration memory table includes the number of a slot state information and the index information of a storage area.

The number of a slot is allocated to each slot to distinguish the plurality of slots which are the plurality of storage areas constituting the configuration memory .

The state information is information on the state of a slot of the configuration memory corresponding to a storage area of the external memory similarly to the state information of the external memory table. The state of a slot is divided into an invalid state a loading state a valid state an exclusive loading state and an exclusive valid state.

The index information of a storage area is information on the index of the storage area of the external memory mapped to the slot of the configuration memory .

An invalid state a loading state a valid state an exclusive loading state and an exclusive valid state of may be changed when the memory managing unit changes the state information on the external memory table and the configuration memory table of . The initial state of a storage area or a slot is an invalid state and may be changed to another state according to an executed command.

When the state of a slot is an invalid state and a prefetch command is received the apparatus for managing the configuration memory of the reconfigurable memory of changes the state of the corresponding slot and storage area on the external memory table and the configuration memory table to a loading state and transmits hardware configuration information stored in the storage area of the external memory to the slot of the configuration memory .

When the state of a slot is a loading state and the execution of a prefetch command is completed the apparatus changes the state of the corresponding slot and storage area on the external memory table and the configuration memory table to a valid state.

When the state of a slot is a valid state and a lock command is received the apparatus changes the state of the corresponding slot and storage area on the external memory table and the configuration memory table to an exclusive valid state. When the state of a slot is a loading state and a lock command is received the apparatus changes the state of the corresponding slot and storage area on the external memory table and the configuration memory table to an exclusive loading state.

When the state of a slot is an exclusive loading and the execution of a prefetch command is completed the apparatus changes the state of the corresponding slot and storage area on the external memory table and the configuration memory table to an exclusive valid state.

When the state of a slot is an exclusive valid state and an unlock command is received the apparatus changes the state of the corresponding slot and storage area on the external memory table and the configuration memory table to a valid state. When the state of a slot is an exclusive loading state and an unlock command is received the apparatus changes the state of the corresponding slot and storage area on the external memory table and the configuration memory table to a loading state.

The apparatus can execute an execute command when the state of a slot is a valid state or an exclusive valid state. When the state of a slot is a valid state or an exclusive valid state and an invalidate command is received the apparatus changes the state of the corresponding slot and storage area on the external memory table and the configuration memory table to an invalid state.

In operation the apparatus for managing the configuration memory allocates at least one slot of an invalid state among the slots of the configuration memory for hardware configuration information stored in at least one storage area of the external memory .

In operation it is determined whether the slot of the invalid state for the hardware configuration information is allocated. When it is determined in operation that the slot of the invalid state is allocated the method proceeds to operation and when it is determined in operation that the slot of the invalid state is not allocated the method proceeds to operation .

In operation the apparatus allocates at least one slot considering all slots of invalid and valid states. In this case a slot of an invalid state is allocated first and when there is no slot of an invalid state or the size of hardware configuration information is greater than the size of the slot of the invalid state a slot of a valid state is allocated. The slot of the valid state may be allocated according to a predetermined standard. For example a slot storing hardware configuration information whose usage is the lowest may be selected first of all or a slot of a valid state may be randomly selected.

In operation it is determined whether the allocation of slot is completed. When it is determined in operation that allocation of slot is completed the method proceeds to operation and when it is determined in operation that allocation of slot is not completed the method proceeds to operation and returns an error value.

In operation the apparatus changes a slot of a valid state among the slots allocated in operation to a invalid state. If there is no slot of a valid state operation is not performed.

In operation the apparatus stores mapping information between the storage area of the external memory and the slot allocated in operation in the storing unit . Referring to mapping information is the index information of a slot of the external memory table and the index information of a storage area of the configuration memory table and shows from which storage area a slot receives hardware configuration information or to which slot hardware configuration information of a storage area is transmitted.

In operation the apparatus transmits hardware configuration information stored in the storage area of the external memory to the slot of the configuration memory allocated in operation .

In operation the apparatus changes the state of each of the storage area and the slot stored in the storing unit to a loading state.

In operation the apparatus determines whether the transmission of the hardware configuration information from the storage area of the external memory to the slot of the configuration memory is completed and waits until the transmission is completed.

When it is determined in operation that the transmission of the hardware configuration information from the storage area of the external memory to the slot of the configuration memory is completed the method proceeds to operation . In operation the apparatus changes the state of each of the storage area and the slot stored in the storing unit to a valid state.

In operation the apparatus determines whether the state of a slot is an invalid state from the external memory table and the configuration memory table stored in the storing unit . When it is determined in operation that the state of the slot is an invalid state the method proceeds to operation and when it is determined in operation that the state of the slot is not an invalid state the method proceeds to operation .

In operation the apparatus executes a prefetch command. Once a hardware reconfigurable system executes a prefetch command the state of the slot is changed to any one of a loading state a valid state an exclusive loading state and an exclusive valid state.

In operation the apparatus determines whether the state of the slot which is the object of the execute command is a valid state or an exclusive valid state from the external memory table and the configuration memory table stored in the storing unit . When it is determined in operation that the state of the slot is any one of the valid state and the exclusive valid state the method proceeds to operation and when it is determined in operation that the state of the slot is not any one of the valid state and the exclusive valid state the method proceeds to operation .

In operation the apparatus determines whether the state of the slot which is the object of the execute command is a loading state or an exclusive loading state from the external memory table and the configuration memory table stored in the storing unit . When it is determined in operation that the state of the slot is any one of the loading state and the exclusive loading state the method proceeds to operation and when it is determined in operation that the state of the slot is not any one of the loading state and the exclusive loading state the method proceeds to operation .

In operation the apparatus determines whether the transmission of the hardware configuration information from the storage area of the external memory to the slot of the configuration memory is completed and waits until the transmission of the hardware configuration information is completed.

In operation when the state of the slot of the configuration memory is determined to be a loading state from the external memory table and the configuration memory table stored in the storing unit the apparatus changes the state of the slot to a valid state and when the state of the slot of the configuration memory is determined to be an exclusive loading state the apparatus changes the state of the slot to an exclusive valid state.

In operation the apparatus reconfigures hardware of the reconfigurable system using the hardware configuration information stored in the slot.

In operation the apparatus changes the state of a slot of the configuration memory which is the object of an invalidate command to an invalid state. Since the state of the slot is changed to an invalid state using the invalidate command the hardware configuration information stored in the corresponding slot becomes invalid and the slot is not mapped to a storage area. The apparatus may input hardware configuration information in a slot of an invalid state ahead of slots of any other states.

In operation the apparatus determines whether the state of a slot of the configuration memory which is the object of a lock command is a loading state from the external memory table and the configuration memory table stored in the storing unit . When it is determined in operation that the state of the slot is not a loading state the method proceeds to operation and when it is determined in operation that the state of the slot is a loading state the method proceeds to operation .

In operation the apparatus determines whether the state of the slot which is the object of the lock command is a valid state from the external memory table and the configuration memory table stored in the storing unit . When it is determined in operation that the state of the slot is a valid state the method proceeds to operation and when it is determined in operation that the state of the slot is not a valid state the method proceeds to operation .

In operation the apparatus changes the state of the slot stored in the storing unit to an exclusive valid state.

In operation the apparatus changes the state of the slot stored in the storing unit to an exclusive loading state.

In operation the apparatus determines whether the state of a slot of the configuration memory which is the object of an unlock command is an exclusive loading state from the external memory table and the configuration memory table stored in the storing unit. When it is determined in operation that the state of the slot is not an exclusive loading state the method proceeds to operation and when it is determined in operation that the state of the slot is an exclusive loading state the method proceeds to operation .

In operation the apparatus determines whether the state of the slot which is the object of the unlock command is an exclusive valid state from the external memory table and the configuration memory table stored in the storing unit . When it is determined in operation that the state of the slot is an exclusive valid state the method proceeds to operation and when it is determined in operation that the state of the slot is not an exclusive valid state the method proceeds to operation .

In operation the apparatus changes the state of the slot stored in the storing unit to a valid state.

In operation the apparatus changes the state of the slot stored in the storing unit to a loading state.

A method of effectively managing a configuration memory by using reconfigurable hardware when there exist a plurality of tasks which are independent tasks including one or more pieces of hardware configuration information that can change the configuration of the reconfigurable hardware according to another exemplary embodiment of the present invention will now be explained. Although two tasks that is a task A and a task B are accomplished by using the reconfigurable hardware below the present invention is not limited thereto and two or more tasks may be accomplished.

It is assumed that that task A includes one or more pieces of hardware configuration information a through aN where N is a natural number and the task B includes one or more pieces of hardware configuration information b through bM where M is a natural number. The tasks A and B may be independent tasks or may be dependent tasks exchanging inputs and outputs. When the hardware configuration information of the task A and B is used to reconfigure hardware by using the configuration memory in order to efficiently use the configuration memory a time for which the configuration memory is used needs to be scheduled for the tasks A and B. If the tasks A and B are independent tasks a time for which the configuration memory or the reconfigurable hardware is used may be scheduled equally or differently for the tasks A and B. If the tasks A and B are dependent tasks that is if an output corresponding to the task A is used as an input corresponding to the task B a time for which the configuration memory or the reconfigurable hardware is used may be determined so that the task B can be accomplished after the accomplishment of the task A is completed.

In operation the apparatus for managing the configuration memory stores a plurality of pieces of hardware configuration information a through aN of the task A which are stored in the external memory in the configuration memory according to the method of .

In operation the apparatus reconfigures the reconfigurable hardware by using the pieces of hardware configuration information stored in the configuration memory .

In operation the apparatus determines whether the time set for the task A has passed. When it is determined in operation that the time set for the task A has not passed the apparatus waits until the time set for the task A has passed. When it is determined in operation that the time set for the task A has passed the method proceeds to operation .

In operation the apparatus determines whether the accomplishment of the task B is completed. The fact that the accomplishment of a task is completed means that the reconfigurable hardware is no longer used to implement the task. When it is determined in operation that the accomplishment of the task B is not completed the method proceeds to operation to accomplish the task B. When it is determined in operation that the accomplishment of the task B is completed the method proceeds to operation . In operation it is determined whether the accomplishment of the task A is completed.

In operation the apparatus stores a plurality of pieces of hardware configuration information b through bM of the task B which are stored in the external memory in the configuration memory . In order to store the hardware configuration information of the task B in the configuration memory the apparatus changes the states of slots of the configuration memory to invalid state such that the hardware configuration information of the task A already stored in the slot is no longer used and the hardware configuration information of the task B can be stored in the slot of the invalid state. If some of the pieces of the hardware configuration information of the task A are the same as some of the pieces of the hardware configuration information of the task B only different pieces of hardware configuration information between the task A and the task B may be newly stored.

In operation the apparatus reconfigures the reconfigurable hardware by using the hardware configuration information of the task B stored in the configuration memory .

In operation the apparatus determines whether the time set for the task B has passed. When it is determined in operation that the time set for the task B has not passed the apparatus waits until the time set for the task B has passed. When it is determined in operation that the time set for the task B has passed the method proceeds to operation .

In operation the apparatus determines whether the accomplishment of both the task A and the task B is completed. When it is determined in operation that the accomplishment of both the task A and the task B is completed the method ends. When it is determined in operation that the accomplishment of either the task A or the task B is not completed the method proceeds to operation .

In operation the apparatus determines whether the accomplishment of the task A is completed. When it is determined in operation that the accomplishment of the task A is not completed the method returns to operation to accomplish the task A. When it is determined in operation that the accomplishment of the task A is completed it is determined that the accomplishment of the task B is not completed and thus the method returns to operation to set a time for the task B and accomplish the task B. Since the reconfigurable hardware is already designed to accomplish the task B a separate process for reconfiguring hardware is not necessary.

When it is determined in operation that the accomplishment of the task B is completed the method proceeds to operation . In operation the apparatus determines whether the accomplishment of the task A is completed. When it is determined in operation that the accomplishment of the task A is not completed the method returns to operation to set a time for the task A and accomplish the task A. Since the reconfigurable hardware is already designed to accomplish the task A a separate process for reconfiguring hardware is not necessary.

When the time set for the task A has passed the apparatus reconfigures the reconfigurable hardware with the task B and then accomplishes the task B. Likewise when the time set for the task B has passed the apparatus reconfigures the reconfigurable hardware with the task A and then accomplishes the task A. Even when there exist three or more tasks since a time is scheduled for the plurality of tasks the plurality of tasks can share one reconfigurable hardware .

As described above when there exist a plurality of tasks including a plurality of pieces of hardware configuration information since the plurality of tasks can share the configuration memory and the reconfigurable hardware memory utilization can be improved even in dynamic environment such as data dependent control flow or multi tasking. Also since a slot of a configuration memory in which hardware configuration information is to be stored is dynamically determined at runtime the determination of the slot of the configuration memory can be optimized when the determination of the slot is dependent on the kind or size of data or when a plurality of programs simultaneously use the configuration memory. Also since the state of a slot of the configuration memory and a command capable of changing the state of the slot are provided the configuration memory can be managed by using user application programming interface API .

The exemplary embodiments of the present invention may have embodied in a general purpose digital computer by running a program from a computer readable recording medium. Data used in the exemplary embodiments of the present invention may be recorded by various means on the computer readable recording medium. Examples of the computer readable recording medium include storage media such as magnetic storage media e.g. read only memories ROMs floppy disks or hard disks optically readable media e.g. compact disk read only memories CD ROMs or digital versatile disks DVDs .

While the present invention has been particularly shown and described with reference to exemplary embodiments thereof it will be understood by those of ordinary skill in the art that various changes in form and details may be made therein without departing from the spirit and scope of the present invention as defined by the following claims.

