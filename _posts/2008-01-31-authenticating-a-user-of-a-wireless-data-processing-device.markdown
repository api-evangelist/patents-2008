---

title: Authenticating a user of a wireless data processing device
abstract: A system and method for authenticating a user with a wireless data processing device. For example, a method according to one embodiment of the invention comprises: generating a new authentication code for a user at a data service, the data service communicatively coupled to a wireless device over a wireless network and to a client data processing device over a data network; transmitting the new authentication code to the wireless device; receiving a request from the user to connect to the service through the client data processing device over the data network; requesting the new authentication code from the user over the data network; receiving an authentication code entered by the user on the client data processing device over the data network; comparing the new authentication code with the authentication code entered by the user on the client data processing device; allowing access to resources on the service if the authentication code entered by the user matches new the authentication code; and denying access to resources on the service if the authentication code entered by the user does not match the new authentication code.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08065715&OS=08065715&RS=08065715
owner: Microsoft Corporation
number: 08065715
owner_city: Redmond
owner_country: US
publication_date: 20080131
---
This application relates generally to the field of data processing systems and more particularly to dynamically changing service characteristics based on device and network connectivity attributes.

The use of wireless devices has become an increasing part of everyday life. Wireless devices have become popular due to their portability convenience and ease of use. Today wireless devices offer a myriad of functions including telephony functions location services email multimedia playback and electronic calendaring to name a few. Integrated circuit technology has allowed for the miniaturization of circuits into smaller and smaller form factors allowing for additional functionality and services to become available on wireless devices. Additionally decreasing memory sizes have permitted wireless devices to store larger and larger amounts of information. As a result wireless networks are rapidly expanding bandwidth and services to accommodate this increase in wireless information and functionality.

Various techniques exist for authenticating users on networks. For example many networks require a user to enter a user name and password to gain access to network resources. A more secure and more complex mechanism for user authentication is accomplished with a SecureID card. The SecureID card generates an authentication code at periodic intervals e.g. 30 or 60 seconds using a built in clock and the card s factory encoded random key referred to as a seed which is different for each SecureID card. A user authenticating to a network resource such as a server or a firewall needs to enter both a personal identification number and the authentication code being displayed at that moment on their RSA SecurID token. The server or other network resource has a real time clock synchronized with the built in clock of the SecureID card. The server checks the authentication code against what the user entered and makes the decision to allow or deny access.

One problem with SecureID authentication is that users are required to continually carry around a SecureID card in order to gain access to network resources. Moreover SecureID cards are relatively complex and costly.

A system and method are described for authenticating a user with a wireless data processing device. For example a method according to one embodiment of the invention comprises generating a new authentication code for a user at a data service the data service communicatively coupled to a wireless device over a wireless network and to a client data processing device over a data network transmitting the new authentication code to the wireless device receiving a request from the user to connect to the service through the client data processing device over the data network requesting the new authentication code from the user over the data network receiving an authentication code entered by the user on the client data processing device over the data network comparing the new authentication code with the authentication code entered by the user on the client data processing device allowing access to resources on the service if the authentication code entered by the user matches new the authentication code and denying access to resources on the service if the authentication code entered by the user does not match the new authentication code.

Throughout the description for the purposes of explanation numerous specific details are set forth in order to provide a thorough understanding of the present invention. It will be apparent however to one skilled in the art that the present invention may be practiced without some of these specific details. In other instances well known structures and devices are shown in block diagram form to avoid obscuring the underlying principles of the present invention.

Embodiments of the invention may be implemented on a wireless device which communicates with a data processing service as illustrated generally in . Embodiments of a service and data processing device are described for example in U.S. Pat. No. 6 721 804 entitled NETWORK PORTAL SYSTEM APPARATUS AND METHOD Ser. No. 09 714 897 filed Nov. 15 2000 which is assigned to the assignee of the present application and which is incorporated herein by reference. Certain features of the service will now be described followed by a detailed description of a system and method for dynamically changing service characteristics based on device and network connectivity attributes. As an initial matter however it should be noted that the specific data processing device and system architecture described in U.S. Pat. No. 6 721 804 are not required for implementing the underlying principles of the invention. Rather the embodiments of the invention described below may be implemented on virtually any type of data processing device including standard personal computers personal digital assistants and wireless telephones.

In one embodiment the service converts standard applications and data into a format which each data processing device can properly interpret. Thus as illustrated in one embodiment of the service includes content conversion logic for processing requests for Internet content . More particularly the service acts as a proxy for the data processing device forwarding Internet requests to the appropriate Internet site on behalf of the data processing device receiving responses from the Internet site in a standard Internet format e.g. Web pages with embedded audio video and graphical content e mail messages with attachments . . . etc and converting the standard Internet responses into a format which the data processing device can process e.g. bytecodes as described in the co pending applications .

For example the conversion logic may include a hypertext markup language HTML rendering module not shown for interpreting HTML code and downloading any embedded content in the HTML code e.g. graphics video sound . . . etc to the service . The conversion logic may then combine the HTML code and embedded content and generate a set of bytecodes for accurately reproducing the requested content on the data processing device . As described above in one embodiment the bytecodes may be Java bytecodes applets. However the conversion logic may generate various other types of interpreted and or non interpreted code depending on the particular type of data processing device being used e.g. one with an interpreter module or one without .

Because one embodiment of the service maintains an intimate knowledge of the capabilities configuraten of each data processing device e.g. screen size graphics audio capabilities available memory processing power user preferences . . . etc it can reconstruct the requested Internet content accurately while at the same time minimizing the bandwidth required to transmit the content to the device . For example the conversion logic may perform pre scaling and color depth adjustments to the requested content so that it will be rendered properly within the data processing device s s display. In making these calculations the conversion may factor in the memory and processing power available on the data processing device . In addition the conversion logic may compress the requested content using a variety of compression techniques and thereby preserve network bandwidth.

In one embodiment of the invention an authentication module provides user authentication services for users connecting to the service via a desktop interface on a client computer . The client computer is connected to the service over a data network such as the Internet. In one embodiment the desktop interface comprises a Java applet or other type of applet or application executed within the context of a Web browser such as Internet Explorer . However the underlying principles of the invention are not limited to any particular client side implementation.

In one embodiment the authentication code generator module periodically generates new authentication codes for the user of the wireless device and stores the authentication codes within the user database via the DB proxy . In one embodiment different authentication codes are randomly generated for each user e.g. using a random number generator and associated with each user within the user database . In addition once the authentication codes are generated the authentication code generator transmits the authentication codes to the wireless device via the dispatcher and wireless network .

Various different time periods for generating new authentication codes may be used while still complying with the underlying principles of the invention e.g. every minute hour day week etc . Moreover in one embodiment the frequency with which the authentication code generator generates new authentication codes depends on the current load on the service . For example if the service is heavily loaded with connected users then new authentication codes may be generated relatively less frequently than if the service is not heavily loaded.

In operation when a user initially connects to the service through the desktop interface of a client computer the service generates a Web page with at least one field for the current authentication code or some derivative of the code . The user retrieves the current authentication code from the wireless device the authentication code having been previously received from the authentication code generator and enters the authentication code in the data field. The Web page may also include data fields for a user name password and or other types of user authentication data. In response to the user selecting a login button or other type of user interface element the authentication code entered by the user is transmitted to the authentication module on the service. The authentication module then looks up the current authentication code associated with the user in the user database and compares the current authentication code from the database with the authentication code entered by the user. If the codes match then the authentication module logs the user in to the service thereby allowing the user to access his her data. If the codes do not match then the authentication module generates a login failure which is transmitted to the desktop interface .

In one embodiment the authentication code generator generates a new authentication code dynamically rather than periodically in response to a user accessing the service via the client computer . Thus in this embodiment the user initially identifies him herself to the service using for example a user name and or password. In response the authentication code generator dynamically generates a new authentication code and transmits the new authentication code to the wireless device . The user then reads the authentication code from the display of the wireless device and provides the authentication code to the authentication module via the desktop interface to complete the authentication process.

In another embodiment authentication codes may be generated both periodically and dynamically. For example the authentication code generator may periodically generate new authentication codes for each user if the service is not heavily loaded with connected users. In this case the current authentication code will be readily available on the user s wireless device when the user initially connects to the service. However if the service becomes heavily loaded e.g. due to a number of users above a specified threshold then the authentication code generator may only generate new authentication codes in response to users attempting to log in via client computers as described above .

In one embodiment the user is not required to manually enter the authentication code via the desktop interface . Rather in this embodiment the wireless device communicates the authentication code to the desktop interface over a communication link such as for example a Bluetooth link a universal Serial Bus link or a WiFi link e.g. an 802.x link . Various other communication standards may be used to connect the wireless device to the client computer while still complying with the underlying principles of the invention.

A method according to one embodiment of the invention is illustrated in . At step the service generates a new authentication code for a user either dynamically in response to user input or periodically as described above . At step the authentication code is stored in the user database on the service and transmitted over the wireless network to the wireless device . At step the user initially establishes a connection to the service from the client computer system . At the service requests the authentication code from the user e.g. in the form of a Web page with a data field for the authentication code . At step the user provides the authentication code to the service . At step the service retrieves the authentication code from the user database and compares the authentication code from the database with the authentication code provided by the user. If the authentication codes match determined at step then at the user is authenticated and provided with access to the service. If however the authentication codes do not match then an authentication failure occurs at . The service may then transmit a notification of the failure to the user and may provide the user with the opportunity to re enter the authentication code.

In one embodiment the desktop interface module is linked to the service through an adapter based Web services interface such as the one described in the co pending U.S. application entitled SYSTEM AND METHOD FOR PROVIDING WEB SERVICES FOR WIRELESS COMMUNICATION DEVICES Ser. No. 11 653 661 Filed Jan. 12 2007 which is assigned to the assignee of the present application and which is incorporated herein by reference. In particular as illustrated in in one embodiment the desktop interface module communicates with the service through a desktop interface adapter . also illustrates one embodiment of a Web Service integration proxy employed within the service . In the illustrated embodiment the Web Service integration proxy includes a local Web Services proxy i.e. local in this sense that it runs on the service a plurality of Web Services adapters communicably connected to the Web Services proxy and an authentication proxy for performing the authentication operations described herein.

Certain Web Services exchange information with clients and servers on the Internet using various protocols and encodings for example the Simple Object Access Protocol SOAP . SOAP is a message based protocol which employs an XML syntax to send text commands across the Internet using the Hypertext Transport Protocol HTTP . Other Web Services protocols such as XML RPC and REST Representational State Transfer may also be used consistent with the underlying principles of the invention.

Although most Web Services use these standard protocols many Web Services employs their own specific format e.g. data schema and rules for communication which must be followed in order to communicate with those Web services. In addition each Web service employs its own unique API i.e. the set of functions and interfaces exposed by the Web service. Thus in one embodiment of the invention a separate Web Services adapter is used to communicate with Web Services proxies and client based Web services programs e.g. desktop interface using the formats require by those proxies programs. In addition as illustrated in one embodiment of the invention includes a global or default Web Services adapter for communicating with web services using standardized i.e. non proprietary Web Services communication formats.

The Web Services adapters are plugged in to the Web Services Proxy through an API exposed by the Web Services Proxy . Each of the Web Services adapters exchange data and program code with the Web Services Proxy Web Services proxy via this API.

In operation each adapter communicates with a particular Web Service or program e.g. the desktop interface using the data schema required by that Web service or program. The adapter provides the data to the Web Services proxy via the Web Services proxy API. In one embodiment the adapter may also convert the data into a format interpretable by the Web Services proxy . The Web Services proxy extracts the underlying data and encapsulates the data into the communication format required for communicating to the wireless device . If the wireless device is currently online then the dispatcher to which the wireless device is currently connected transmits the data to the wireless device using an asynchronous protocol specifically adapted for transmission over high latency networks e.g. wireless networks . For upstream communication when the user of the wireless device transmits information to the Web Service or program the information is transmitted through the dispatcher using the same protocol. The Web Services proxy extracts the information and communicates the information to the appropriate Web Services adapter via the Web Service proxy API. The Web Services adapter then communicates the new information to its associated Web Service or program using the required data schema and other communication standards required by the Web Service or program.

One notable benefit of this architecture is that if a particular Web Services proxy or program e.g. the desktop interface modifies its communication standards protocol then only the specific adapter for that web services proxy needs to be modified or replaced. The remaining software executed on the Web Services Proxy and each of the wireless devices does not need to be changed. Thus the network bandwidth as well as the engineering time which would normally be required to upgrade each individual wireless device is conserved.

Embodiments of the invention may include various steps as set forth above. The steps may be embodied in machine executable instructions which cause a general purpose or special purpose processor to perform certain steps. Alternatively these steps may be performed by specific hardware components that contain hardwired logic for performing the steps or by any combination of programmed computer components and custom hardware components.

Elements of the present invention may also be provided as a machine readable medium for storing the machine executable instructions. The machine readable medium may include but is not limited to floppy diskettes optical disks CD ROMs and magneto optical disks ROMs RAMs EPROMs EEPROMs magnetic or optical cards or other type of media machine readable medium suitable for storing electronic instructions.

Throughout the foregoing description for the purposes of explanation numerous specific details were set forth in order to provide a thorough understanding of the invention. It will be apparent however to one skilled in the art that the invention may be practiced without some of these specific details. For example although the embodiments described above are limited to a wireless implementation the underlying principles of the invention may be employed in a variety of different types of networks. Similarly while the protocol stack described above is implemented using Java the underlying principles of the invention are not limited to any particular programming language.

Accordingly the scope and spirit of the invention should be judged in terms of the claims which follow.

