---

title: Methods, systems, and media for providing content-aware scrolling
abstract: Methods, systems, and media for providing content-aware scrolling are provided. In accordance with some embodiments, a method for providing content-aware scrolling is provided, the method comprising: determining whether one or more regions of content in a document are important regions; generating a scroll path that passes through the important regions, wherein at least one of direction, speed, and zoom are varied along the scroll path based on characteristics of the important regions; and, in response to receiving a user input, traversing the generated scroll path through the important regions.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09086791&OS=09086791&RS=09086791
owner: The Trustees of Columbia University in the City of New York
number: 09086791
owner_city: New York
owner_country: US
publication_date: 20080822
---
This application claims the benefit of U.S. Provisional Patent Application No. 60 957 398 filed Aug. 22 2007 which is hereby incorporated by reference herein in its entirety.

This invention was made with government support under Grant No. ITS 0121239 awarded by the National Science Foundation NSF and under Grant No. N00014 04 1 0005 awarded by the Office of Naval Research ONR . The government has certain rights in the invention.

The disclosed subject matter relates to methods systems and media for providing content aware scrolling.

In many applications such as Adobe Acrobat Microsoft Internet Explorer and Google s Picasa scrollbars are provided for navigating large documents on small display screens or in small windows. Scrolling is generally performed with two separate scrollbars i.e. one scrollbar placed to the right of the window that allows a user to scroll along the vertical axis and another scrollbar placed at the bottom of the window that allows the user to scroll along the horizontal axis. Note that when using these scrollbars scrolling along either the vertical axis or the horizontal axis can be done independently but not simultaneously.

Moreover interacting with multiple column multiple page documents in small windows or on small displays e.g. on a mobile device often results in the user being interrupted when transitioning from the end of one column or page to the beginning of the next column or page. In addition navigating these transitions typically requires the use of a two dimensional input device such as a mouse for scrolling between columns and pages. This can be especially tedious when the display is smaller than the size at which a page of the document can comfortably be read.

Various approaches and hardware devices attempt to address these problems by allowing users to scroll in an arbitrary two dimensional direction. For example a mouse button may be used to define an initial anchor position such that the scrolling direction is determined by the vector between the anchor position and the potentially changing position of the mouse cursor and the scrolling speed is proportional to the magnitude of that vector. However each such approach or device requires precise steering to navigate a potentially complex two dimensional path required for reading for example a multiple column multiple page document. Furthermore systems that allow two dimensional panning often require that the user clutch and declutch the mouse i.e. physically lift and move the mouse to reposition it due to large traversal distances.

Another approach attempts to address these problems by reformatting the content to provide user with one dimensional navigation in the vertical direction. For example the content may be reformatted by turning a multiple column document into a single column document that fits within the width of the display device. This however makes it difficult for users to relate material in the reformatted document to material in the original document. More particularly this approach ignores the importance of the intended layout of the document.

Other approaches designate an ordered set of discrete items in a display and use keystrokes to navigate from one discrete item to another. For example Microsoft Internet Explorer and other web browsers allow users to navigate through a set of hyperlinks on a webpage using the tab and shift tab keys. This approach however is not effective on documents that do not contain author constructed hyperlinks. That is a content path cannot be automatically extracted from the webpage or other document.

There is therefore a need in the art for approaches that provide content aware scrolling. Accordingly it is desirable to provide methods systems and media that overcome these and other deficiencies of the prior art.

Methods systems and media for providing content aware scrolling are provided. In accordance with some embodiments a method for providing content aware scrolling is provided the method comprising determining whether one or more regions of content in a document are important regions generating a scroll path that passes through the important regions wherein at least one of direction speed and zoom are varied along the scroll path based on characteristics of the important regions and in response to receiving a user input traversing the generated scroll path through the important regions.

In some embodiments a system for providing content aware scrolling is provided the system comprising means for determining whether one or more regions of content in a document are important regions means for generating a scroll path that passes through the important regions wherein at least one of direction speed and zoom are varied along the scroll path based on characteristics of the important regions and means for traversing the generated scroll path through the important regions in response to receiving a user input.

In some embodiments a system for providing content aware scrolling is provided the system comprising a processor that determines whether one or more regions of content in a document are important regions generates a scroll path that passes through the important regions wherein at least one of direction speed and zoom are varied along the scroll path based on characteristics of the important regions and in response to receiving a user input traverses the generated scroll path through the important regions.

In some embodiments a computer readable medium storing computer executable instructions that when executed by a processor causes the processor to perform a method for providing content aware scrolling is provided. The method comprising determining whether one or more regions of content in a document are important regions generating a scroll path that passes through the important regions wherein at least one of direction speed and zoom are varied along the scroll path based on characteristics of the important regions and in response to receiving a user input traversing the generated scroll path through the important regions.

In accordance with various embodiments mechanisms for providing content aware scrolling are provided. These mechanisms can be used in a variety of applications. For example content aware scrolling can be provided to significantly enhance a user s experience when viewing portable document format PDF files on handheld displays or mobile devices. A scroll path can be automatically mapped where one or more of the direction speed and or zoom can be varied during scrolling based on the content properties of the document. For example when reading a multiple column multiple page text document a scroll path is mapped through the text such that when reaching the end of one column the user is automatically steered towards the beginning of the next column. As another example for an image displaying the faces of multiple people a scroll path can be automatically mapped through each face in the image where one or more of the direction speed and or zoom between each face are varied during scrolling. As yet another example for reviewing keyword or textual search results a scroll path can be automatically mapped through each search result where one or more of the direction speed and or zoom between each search result are varied during scrolling.

In some embodiments these mechanisms can detect that a document e.g. a document in PDF format an image contained in a file a document contained in a file etc. has been accessed. In response to detecting that the document has been accessed the contents of the document can be extracted. For example in response to opening a PDF document each character word and line of text and associated attributes e.g. pixel location dimensions font style font size font face etc. are extracted. Upon extracting the contents of the document these mechanisms can determine which portions of the extracted content are important regions. A scroll path can then be generated for the document along which one or more of the direction speed and or zoom are varied during scrolling based on the extracted content and its attributes. A viewport or any suitable window that provides the viewable portion of the document can be provided in some embodiments with a single scrollbar that in response to receiving a user input allows the user to traverse through the important regions along the generated scroll path. The user can view the unmodified content of the document in its intended layout along a two dimensional scroll path while using a single scrollbar mouse wheel scrolling or any other suitable approach to traverse it.

It should be noted that in some embodiments these mechanisms can detect that a particular operation or task is being performed. For example in response to detecting that a search operation associated with an application has been executed and upon receiving the search results the mechanism can designate the search results as the important regions. A scroll path can be generated where one or more of the direction speed and or zoom between each search result are varied during scrolling.

It should also be noted that in some embodiments these mechanisms can detect that a particular type of document or file has been accessed. For example in response to detecting that an image e.g. a digital photograph has been opened using an image viewing application the mechanisms can designate the faces or other particular objects in the image as the important regions. A scroll path through each of the faces or objects can be generated where one or more of the direction speed and or zoom between each face or object are varied during scrolling. This can for example allow the user to traverse quickly through unimportant regions of the image.

It should also be noted that these mechanisms are not limited to a particular type of content that can be navigated. Typical types of content can include word processing documents including those containing images and other objects in addition to text text documents images in various formats maps which can be a particular type of image web pages etc. Other typical types of documents include spreadsheets drawings and illustrations.

In accordance with some embodiments a scroll path can be provided using a process as illustrated in . As shown in response to detecting that a document has been accessed at important regions of the content of the document are determined at .

As described previously in response to determining that a document e.g. a document contained in a file has been accessed the contents of the document can be extracted. For example a text extraction tool e.g. PDFBox can be used to extract each character word and line of text and associated attributes e.g. pixel location dimensions font style font size font face etc. . To create a scroll path that assists the user in reading and or reviewing the document an important region can be an area as illustrated in . For a document one of the important regions can be region having an area where the width spans the left edge of the first character B of But to the right edge of the last character s of engineers on a line and where the height is the height of that line. These text line sized important regions e.g. important region can form contiguous stacks of rectangular areas which can vary in width and height. As the path between these stacked areas is continuous the regions between these rectangular areas are designated as unimportant regions. For example when the next line of text is in a different column or on a different page the distance along the path that lies within unimportant regions can be as large as thousands of pixels.

As another example when reviewing directions from a map service e.g. Google Maps Mapquest etc. one of the important regions can be a region that includes one line of directions e.g. turn left on Main Street and its associated map e.g. a detailed map of the area including the turn onto Main Street . As yet another example when reviewing search results from a keyword search e.g. a search for the word people in a document one of the important regions can be an occurrence of the keyword e.g. as shown in the word people in the first paragraph of the first page . Any suitable portion of a document can be designated as an important region.

It should be noted that the solid portions of the scroll path and the dotted or dashed portions of the scroll path shown in A B and are presented for purposes of illustration only. These portions of the scroll path are not displayed to the user or overlaid onto the document for example when the user is scrolling through search results in a document.

Referring back to a scroll path is generated where one or more of the direction speed and or zoom are varied during scrolling based on the content of the document e.g. document attributes document content properties designated important regions etc. at . A viewport or any suitable window that provides the viewable portion of the document can be provided that in response to receiving a user input allows the user to traverse through the important regions along the generated scroll path at .

As shown in as opposed to treating the document as a single undifferentiated layer of information a scroll path is generated where the properties and or attributes of the content e.g. pixel location dimensions font style font size font face etc. are taken into account to identify important regions of the content in which to vary the scroll direction speed and or zoom. In where the content of the first page of document is divided into two columns the scroll path is a reading path or the path in which the document is intended to be read . The scroll path begins with solid region at the title portion of document varies its direction from the top of the first column to the bottom of the first column the bottom of the first column to the top of the second column and the top of the second column to the bottom of the second column and ends with solid region at the bottom of the second column for that particular page. With the scroll path the intended layout of the document is preserved thereby allowing the user to view the unmodified content of the document. It should be noted that a scroll path that continues for multiple pages can be generated but the scroll path in is shown for a single page to avoid overcomplicating the drawing.

In some embodiments scrollbar can include an additional inactive knob that indicates the conventional scroll position. For example scrollbar can include both scroll path knob to indicate the position along the scroll path and a conventional scroll knob to indicate the conventional scroll position. Alternatively the user can be provided with an option to remove the additional inactive knob from the viewport.

In some embodiments scrollbar includes buttons . In response to the user selecting one of the buttons e.g. using a mouse the viewport can incrementally traverse forwards or backwards along the scroll path in the selected direction. In some embodiments in response to the user positioning the mouse and selecting outside knob on track the viewport can advance the document along the scroll path by a given portion of the scroll path. For example the portion of the document in the newly displayed viewport slightly overlaps the portion of the document displayed in the previously displayed viewport. In another example each click of the mouse on track can advance the viewport by a predetermined portion of the scroll path e.g. one eighth of the scroll path five percent of the scroll path etc. .

In some embodiments the viewport can be provided without scrollbar scroll path knob and additional inactive knob . In one example the user can be provided with options relating to the presentation of the viewport. The options can include selectable buttons or any other suitable user interface that allow the user to select whether to display scrollbar while traversing the generated scroll path through important regions. In another example these content aware scrolling mechanisms can provide the viewport without providing scrollbar while traversing the generated scroll path through important regions.

It should be noted that in some embodiments these content aware scrolling mechanisms can be initiated within an application e.g. Adobe Acrobat Microsoft Internet Explorer etc. by changing the scrolling mode. For example the user can change the scrolling mode from normal e.g. a conventional scrolling approach to CAS a content aware scrolling approach in accordance with some embodiments through a menu option a toolbar option the depression of a button on a keyboard e.g. the alt key and or any other suitable approach. In response to enabling the content aware scrolling mode if the current viewport position does not contain a part of the document along the scroll path or reading path the viewport can automatically pan to the nearest point along the scroll path. If the viewport is too narrow for a particular point along the scroll path a horizontal scrollbar can be provided that allows left right scrolling that spans only the width of the content on the scroll path. Note that the document orientation does not change along the scroll path.

It should also be noted that in some embodiments mouse wheel scrolling or any other suitable scrolling mechanism can be supported which assists users in maintaining precise control when traversing long scroll paths. As described previously these content aware scrolling mechanisms can provide the viewport without providing a scrollbar such as scrollbar . For example in some embodiments only the mouse scroll wheel is required to scroll forwards and backwards along the scroll path of the document.

In some embodiments the user can temporarily venture away from the generated scroll path. For example in response to depressing a particular key on the keyboard e.g. a shift key depressing a button on a mouse e.g. a right mouse button and or using any other suitable approach the current location on the scroll path can be anchored. In response to releasing the particular key or button the viewport can return to the anchored location on the scroll path. For example an animation e.g. a slow out animation or any other suitable effect can be used to return the user to the current location on the scroll path.

Alternatively the user can change from the content aware scrolling mode to a conventional scrolling mode. In response to the user changing back to the content aware scrolling mode the user can be returned to the previous location on the scroll path.

In some embodiments in addition to varying the scroll direction during scrolling the scrolling speed can be modified during scrolling. For example the scrolling speed can be modified based on the location of important regions. The scrolling distance mapping m can be defined as d d or the ratio of the pixel distance that the knob of is dragged d to the pixel distance that the document is scrolled d . This ratio varies as a function of the distance D from the current path point to the next important region relative to the size of the viewport. For example when a scroll path is generated to traverse through search results within a text document the continuous scroll path can contain multiple and possibly large unimportant regions regions that do not contain search results . Accordingly the scrolling distance mapping is changed through these unimportant regions shown as the dotted parts of the path in while receiving a constant physical scrolling gesture. For example the scrolling speed can be increased to three times the current scrolling speed or any other suitable speed to traverse the unimportant regions.

In some embodiments the scrolling speed can be modified using animations through substantially large distances between unimportant regions. For example for distances larger than the diagonal of the viewport e.g. viewports and the viewport can automatically traverse to the next important region using a slow in slow out animated change in speed. As shown in the distance between the bottom of the first column and the top of the second column dashed region is larger than the diagonal of the viewport. Accordingly through an animation the user quickly traverses the unimportant region to the next important region.

It should be noted that in some embodiments a visual indication can be provided to the user where the visual indication notifies the user that an animation e.g. a slow in slow out animation is about to occur. For example by providing such a visual indication e.g. a graphic an icon etc. the user can decide whether to inhibit the animation from occurring or continue scrolling to proceed with the animation. In another example if the user receives the visual indication and the user has not finished reading the portion of content in the viewport the user can stop scrolling along the scroll path thereby inhibiting the animation from occurring.

As shown in the value m is the ratio of scrollable pixels in the scrollbar to those along the document path. Note that this value is typically constant in conventional scrolling as shown by the dashed line . Note that in Dis defined as a distance equivalent to about half the diagonal of the viewport and Dis defined as a distance equivalent to about the diagonal of the viewport. If D is greater than D the mapping m is reduced by 1 x e.g. to triple the scrolling speed . If D is substantially larger e.g. greater than D a slow in slow out animation or any other suitable animation is performed to automatically traverse the scroll path to the next important region and no scrolling is required mapping m 0 .

Consider the scrollbar length s scrollable path length p parts of the scroll path not containing large unimportant regions through which animations are used the sum of the parts of the path containing important regions p and the speedup factor through unimportant regions not traversed by an animation x e.g. to triple the scrolling speed x 3 . The scrolling distance mapping m can be represented as 

It should be noted that the variable sis defined as the sum of the parts of the scrollbar through which important regions are scrolled. It should also be noted that the variable is the fraction of the path that contains unimportant regions.

In some embodiments the zoom level can be modified. The zoom level of the document can be modified based on the size of and distance between important regions. For example a zoom level initially set at 200 can be reduced e.g. to 150 while traversing through unimportant regions if the width of the regions cannot fit within the current viewport. In some embodiments a reduction in zoom level is only performed through unimportant regions.

In some embodiments page breaks can be detected and the position of the viewport can be adjusted in response to such page breaks. To account for user interactions with content near column and page boundaries the scrolling animation can be modified to anticipate column and screen edges. For example an animation between the bottom of a column to the top of an adjacent column can occur as soon as the page edge is visible within the viewport as shown in . In another example to ensure that the user does not ignore or fail to review content at the bottom of a column an animation between the bottom of a column to the top of an adjacent column can occur in response to the top edge of the viewport being a particular distance from the page edge. Similarly in response to an animation that leads to the beginning of a new column or a new page the viewport can be positioned to show the leading page break as shown in .

In accordance with some embodiments these mechanisms can detect that a particular operation or task is being performed. For example shows an example where a scroll path that follows the path in which the document is intended to be read is generated in response to detecting that a document has been opened. As another example shows an example where in response to detecting that a text or keyword search operation associated with an application has been executed a scroll path that follows the path in which the search results are to be reviewed is generated. The path for example can start at the first string occurrence pan directly to the second occurrence etc. As described previously if two consecutive search results or occurrences are substantially far apart e.g. greater than a distance equivalent to the diagonal of the viewport the scrolling speed can be sped up and or animated between those two search results.

It should be noted that the solid portions of the path shown in represent the important regions of content while the dotted or dashed portions of the path represent the unimportant regions e.g. regions without search results . Again it should also be noted that the solid portions of the scroll path and the dotted or dashed portions of the scroll path shown in A B and are presented for purposes of illustration only. These portions of the scroll path are not displayed to the user or overlaid onto the document for example when the user is scrolling through search results in a document.

In accordance with some embodiments these mechanisms can detect that a particular type of document has been accessed and generate a corresponding scroll path. For example as shown in in response to detecting than an image e.g. a digital photograph an image in Graphics Interchange Format GIF an image contained in a file etc. a scroll path can be generated through particular objects where one or more of the direction speed and or zoom through each object are varied during scrolling.

In response to detecting that an image e.g. a digital photograph an image in GIF format etc. has been accessed using an image viewing application or any other suitable application at the content of the image can be analyzed at . For example an image analysis application can be used to determine the location of the faces in a photograph. Each face in the photograph can be designated as an important region. A scroll path can be generated or automatically extracted that traverses through the important regions at . As shown in each face in the photograph has been detected and a scroll path has been generated that with scrolling traverses through each face in the photograph with a one dimensional gesture e.g. a mouse scroll wheel a single scrollbar arrow depression etc. .

In some embodiments the user can request that particular objects within an image be detected. For example in response to selecting a view faces option a face and eye detection web service e.g. Betaface by Betaface Software or any other suitable face detection and or recognition application can be used to detect faces in a photograph.

It should be noted that as shown in the scroll path can be a Hamiltonian path through each of the faces in the photograph. Generally speaking a Hamiltonian path is a path that visits each vertex or node exactly once.

In some embodiments a scroll path can be defined by the user. For example in response to opening the photograph in the user can manually indicate the location of each face in a particular order. A scroll path is generated based on the user indicated locations. In another example the content aware scrolling mechanisms can generate a scroll path and display the scroll path to the user e.g. the solid portions of the scroll path and the dotted or dashed portions of the scroll path shown in A B and . While these portions of the scroll path are generally not displayed to the user or overlaid onto the document the user can edit the scroll path to create a user generated scroll path.

In some embodiments the user generated scroll path can be stored as metadata which is associated with the image. For example a labeling application e.g. Adobe XMP can be used to store and associate the user generated scroll path with the image. It should be noted that multiple scroll paths e.g. reading scroll paths search scroll paths image scroll paths etc. can be stored in the metadata of a document. It should also be noted that the user can modify and or remove scroll paths stored in the metadata of a document.

In some embodiments a scroll path can be modified by a user in response to detecting that the content of a document has been changed e.g. edited . For example in response to detecting that the content of a document has been changed after the last scroll path was generated the user can be provided with a path editor. Using the path editor the user can modify the scroll path to account for the changed content. As another example the user can use the path editor to create a new scroll path that accounts for the changed content.

In system server can be any suitable server for executing the application such as a processor a computer a data processing device or a combination of such devices. Communications network can be any suitable computer network including for example the Internet an intranet a wide area network WAN a local area network LAN a wireless network a digital subscriber line DSL network a frame relay network an asynchronous transfer mode ATM network a virtual private network VPN or any combination of any of the same. Communications links and can be any communications links suitable for communicating data between workstations and server such as network links dial up links wireless links hard wired links etc. Workstations can be personal computers laptop computers mainframe computers dumb terminals data displays Internet browsers personal digital assistants PDAs two way pagers wireless terminals portable telephones etc. or any combination of the same. Workstations and server can be located at any suitable locations. In one embodiment workstations and server can be located within an organization. Alternatively workstations and server can be distributed between multiple organizations.

The server and one of the workstations which are depicted in are illustrated in more detail in . Referring to workstation can include processor display input device and memory which can be interconnected. In a preferred embodiment memory contains a storage device for storing a workstation program for controlling processor . Memory can also contain an application for providing content aware scrolling in accordance with some embodiments. For example memory can contain a content aware scrolling widget. In some embodiments the application can be resident in the memory of workstation or server .

In one particular embodiment the application can include client side software hardware or both. For example the application can encompass one or more Web pages or Web page portions e.g. via any suitable encoding such as HyperText Markup Language HTML Dynamic HyperText Markup Language DHTML Extensible Markup Language XML JavaServer Pages JSP Active Server Pages ASP Cold Fusion or any other suitable approaches .

Although the application is described herein as being implemented on a workstation this is only illustrative. The application can be implemented on any suitable platform e.g. a personal computer PC a mainframe computer a dumb terminal a data display a two way pager a wireless terminal a portable telephone a portable computer a palmtop computer a handheld personal computer HIPC an automobile PC a laptop computer a personal digital assistant PDA a combined cellular phone and PDA etc. to provide such features.

Processor can use the workstation program to present on display the application and the data received through communication link and commands and values transmitted by a user of workstation . It should also be noted that data received through communication link or any other communications links can be received from any suitable source such as web services. Input device can be a computer keyboard a mouse a touch sensitive screen a cursor controller a dial a switchbank lever or any other suitable input device as would be used by a designer of input systems or process control systems.

Server can include processor display input device and memory which can be interconnected. In a preferred embodiment memory contains a storage device for storing data received through communication link or through other links and also receives commands and values transmitted by one or more users. The storage device further contains a server program for controlling processor .

Although the invention has been described and illustrated in the foregoing illustrative embodiments it is understood that the present disclosure has been made only by way of example and that numerous changes in the details of implementation of the invention can be made without departing from the spirit and scope of the invention which is only limited by the claims that follow. Features of the disclosed embodiments can be combined and rearranged in various ways.

