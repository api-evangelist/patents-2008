---

title: Methods and system for orchestrating services and data sharing on mobile devices
abstract: A method and system relating to a mobile orchestration platform to facilitate share of data between orchestration endpoints. The orchestration endpoints may include data applications or data services located on a mobile device or remotely from the mobile device. An example platform includes a first endpoint connector associated with a first orchestration endpoint to communicate between the mobile orchestration platform and the first orchestration endpoint. A second endpoint connector associated with the second orchestration endpoint to communicate between the mobile orchestration platform and the second orchestration endpoint is included. A service module to translate a data record in an intermediate data format to either the first data format or the second data format is included.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09401966&OS=09401966&RS=09401966
owner: ProntoForms Corporation
number: 09401966
owner_city: Kanata
owner_country: CA
publication_date: 20080101
---
This application is a U.S. national stage filing of International Application No. PCT IB2008 000052 filed Jan. 11 2008 and this application claims priority to the International Application No. PCT IB2008 000052 filed Jan. 11 2008 and U.S. Provisional Application No. 60 880 328 filed Jan. 12 2007 to the same inventors and hereby incorporates by reference those applications in their entirety.

The present invention relates generally to mobile device orchestration and more particularly to a system and method for orchestrating services and data sharing on mobile devices.

Today most data in field force industries e.g. field sales field services inspection and reporting etc. is distributed and captured on paper based forms. The data entered on paper based forms are typically returned to the business office to be manually entered electronically and integrated with a back office system. Furthermore an enterprise business process might require the captured data to be reviewed by other members of the organization e.g. authorization up sell opportunity billing etc. before during or after the field has interacted with the data. The process of distributing updating capturing and returning form data and adapting it to a unique business process applies to a large number of mobile workers performing a variety of tasks such as but not limited to data collection solutions such as inspections e.g. property health etc. field sales solutions reporting e.g. lead capture timesheet expense reports etc. and field service solutions such as work order dispatches e.g. HVAC insurance claims etc. .

Typically in more complex forms based business processes work requests and form data are initially dispatched to field force workers using a voice channel e.g. cell phone or pre printed paper forms e.g. clipboard that is then manually filled out or updated by the mobile worker e.g. technician . A completed work request might also require one or many subsequent requests e.g. required parts required authorization up sell opportunities etc. that are typically done through a call over a cellular phone or return trip to the office or may cause the displacement of the mobile worker. In addition field inspectors may also capture data in the field using a series of paper forms and binders to complete their inspection tasks resulting in a slow and inefficient process.

Businesses incur high wireless voice and vehicle fleet costs due to the above described processes used in dispatching field workers capturing or updating form data and completing work orders or inspection forms in the field. Additionally there are significant costs and inefficiencies with slow manual processes for the exchange of data using paper based forms from the cost of the paper based forms to duplicate data entry to errors made in data capture on paper to waiting for the person with the data to update another person or system etc.

In order to reduce the use of paper electronic forms and mobile applications are used in conjunction with mobile devices such as portable computers. More recently mobile devices are increasingly used for data collection as more and more mobile devices become available laptops cell phones PDAs tablet PCs Ultra Mobile PCs etc. and as more and more content is available in electronic form documents email pictures commerce videos data etc. and as access to data services and applications via the devices and content becomes more and more ubiquitous internet wireless etc. . The mobile devices are increasingly used by organizations that have the need to collect data from remote locations which prevent the use of traditional fixed computers.

Mobile device applications are increasingly supporting multiple means of manually and automatically capturing or updating information through different interfaces and methods interacting with data services and applications. The need for securely managing this information and providing a flexible secure framework for working with online and offline content on a mobile device is critical to improve the productivity and effectiveness of mobile field workers and mobile application solutions. Currently no workable solution provides a means for a mobile user to make best use of any captured information on a mobile device to be shared by other mobile applications and mobile services whether being on line i.e. a server or web connection or off line on the mobile device itself . At best the data applications or services may be rewritten to provide data compatibility but such a process is expensive time consuming and often unfeasible. Captured data on one mobile device data application or service may be in an incompatible format which prevents integration to data applications and services on the mobile device as well as legacy back office systems databases applications or other hosted data applications and services. Thus organizations with a mobile workforce who rely on business processes that rely on the timely and secure exchange of data while providing easy to use flexible accurate and fast data capture in the field are hampered by the incompatibility of the data format used by different mobile applications.

Therefore it would be desirable to have a system and method for rapid sharing of data and rapid configuration of required data across different mobile data applications or services. There is a further need to facilitate orchestration of data between mobile data applications or services without reprogramming the applications or services. There is a further need for a mobile data collection system to enable clients to capture or update data from mobile data applications services and share the data with other different mobile data applications and services. There is also a need for a mobile data system which allows data to be communicated and shared with other remote data applications and services.

According to one example a method is disclosed of providing a mobile orchestration platform on a mobile device to share data between a first orchestration endpoint managing data in a first data format and a second orchestration endpoint managing data in a second data format. A first endpoint connector associated with the first orchestration endpoint to communicate between the mobile orchestration platform and the first orchestration endpoint is created. A second endpoint connector associated with the second orchestration endpoint to communicate between the mobile orchestration platform and the second orchestration endpoint is created. The mobile orchestration is enabled to translate a data record in an intermediate data format to either or both of the first data format or the second data format.

Another example disclosed is a method for sending data in a first format from a first orchestration endpoint operating on a mobile device to a second orchestration endpoint managing data in a second format. An endpoint connector associated with the second orchestration endpoint the endpoint connector to establish communication with the second orchestration endpoint is created. A data record in a first format is made available from the first orchestration endpoint. An event to notify an orchestration platform to capture the data record in the first format from the first orchestration endpoint is created. The data record is translated to the second data format. The endpoint connector is used to send the data record from the orchestration platform in the second data format to the second orchestration endpoint.

Another example disclosed is a method of providing a first orchestration endpoint operating on a mobile device capable of managing data in a first format data from a second orchestration endpoint managing data in a second format. An endpoint connector associated with the second orchestration endpoint is created. The endpoint connector establishes communication with the second orchestration endpoint. A data record in the second data format is made available via the second orchestration endpoint. An event is created to notify an orchestration platform to capture the data in the second data format from the second orchestration endpoint. The endpoint connector is used to send the data record in the second data format to the orchestration platform. The data record is translated to the first data format. The data in the first data format is made available to the first orchestration endpoint.

Another example disclosed is a mobile orchestration platform installable on a mobile device for orchestrating data between a first orchestration endpoint managing data in a first data format and a second orchestration endpoint managing data in a second data format. The platform includes a translation module to translate a data record in an intermediate data format to either or both of the first data format or the second data format. A first endpoint connector is associated with the first orchestration endpoint to communicate between the mobile orchestration platform and the first orchestration endpoint. A second endpoint connector is associated with the second orchestration endpoint to communicate between the mobile orchestration platform and the second orchestration endpoint.

Another example disclosed is a system of sharing data for a mobile device. The system includes a first orchestration endpoint managing data in a first data format. A second orchestration endpoint manages data in a second data format. An orchestration platform on the mobile device includes a translation module to translate a data record in an intermediate format to either or both of the first data format or the second data format. A first endpoint connector is associated with the first orchestration endpoint to communicate between the mobile orchestration platform and the first orchestration endpoint. A second endpoint connector is associated with the second orchestration endpoint to communicate between the mobile orchestration platform and the second orchestration endpoint.

Yet another example disclosed is a mobile device allowing the use of data in different formats. The mobile device includes a first orchestration endpoint managing data in a first format. An endpoint connector is in communication with a second orchestration endpoint managing data in a second format. A mobile orchestration platform is in communication with the first orchestration endpoint and the endpoint connector. The mobile orchestration platform allows the translation of a data record between the first and second data formats.

Still another example disclose is an article of manufacture for sharing of data between a first orchestration endpoint managing data in a first format and a second orchestration endpoint managing data in a second format. The article of manufacture includes a computer readable medium for storage on a mobile device. A plurality of instructions is provided wherein at least a portion of said plurality of instructions is storable in the computer readable medium. The plurality of instructions are configured to cause a processor to create a first endpoint connector associated with the first orchestration endpoint to communicate between the mobile orchestration platform and the first orchestration endpoint. The instructions also cause the processor to create a second endpoint connector associated with the second orchestration endpoint to communicate between the mobile orchestration platform and the second orchestration endpoint. The plurality of instructions also case the processor to translate a data record in an intermediate data format to either or both of the first data format or the second data format.

The above summary of the present invention is not intended to represent each embodiment or every aspect of the present invention. Additional features and benefits of the present invention are apparent from the detailed description figures and claims set forth below.

While the invention is susceptible to various modifications and alternative forms specific embodiments have been shown by way of example in the drawings and will be described in detail herein. It should be understood however that the invention is not intended to be limited to the particular forms disclosed. Rather the invention is to cover all modifications equivalents and alternatives falling within the spirit and scope of the invention as defined by the appended claims.

Referring now to an example system for sharing of data from multiple orchestration endpoints is shown. The term business process is used herein to refer to a sequence of events or transitions from one business state to another where the state is characterized by the information captured context information and any business process policies and or rules that govern sharing of data between users or with network services. The term network service refers to a service that can provide information capture or that can be a source of information.

As can be seen in the system includes at least one mobile device having a plurality of mobile applications running or otherwise available thereon. In general such mobile applications may include any application capable of using one or more forms to automatically and or manually capture information via the mobile device . Examples of such applications may include LeadGenesys from LeadGenesys Inc. of San Francisco Calif. Outlook from Microsoft Corp. of Redmond Wash. and other similar applications. A single instance of data collected by these mobile applications in an electronic form is generally referred to as an electronic forms data instance or simply a data record or a data instance. The mobile device in this example is a smart phone but may be other mobile devices such as a tablet PC a laptop computer a cellular telephone a cradled personal digital assistant PDA a wireless PDA and an Ultra Mobile PC. In this example the applications shown include a survey application an inventory control application and a lead generation application . These applications typically but not necessarily have one or more electronic forms e.g. a checklist manifest contact sheet etc. on which information may be captured and stored as an electronic forms data record. The state e.g. completed ready to be sent etc. of the electronic forms data records usually dictate when they are shared or sent to other users or to back end services available through the managed service provider.

A managed service provider provides the mobile device with the various electronic forms and supporting services and files and in some instances the mobile applications corresponding to the electronic forms. The managed service provider typically provides the electronic forms and or mobile applications to the mobile device over a network e.g. the Internet via a suitable wireless connection e.g. a cellular link .

In this example the different mobile applications which allow user functions such as data collection via the mobile device and access data from other data applications and services. For example the device in this example may run Outlook for communications and other specialized mobile form applications. An example of such specialized mobile form applications such as the mobile applications may be developed via the mXDesigner application available from TrueContext of Ottawa Canada. Of course many other types of mobile oriented and non mobile oriented applications may be created using other applications and be run by the mobile device . The mobile device may also allow access to remote applications such as the Salesforce remote data application available from Salesforce.com of San Francisco Calif. via either the network or a web server not shown for managing collected data. In this example the Outlook application may have different data formats than other mobile form applications installed on the mobile devices and remote data applications and services accessible to the mobile device . As will be explained below a mobile service orchestration platform allows data sharing between different data applications and services on a mobile device such as the mobile device between other mobile devices and with remote data applications and services. Of course it is to be understood that these data orchestration processes may be used on multiple devices running multiple data applications and services with multiple data formats.

The control system includes a display coupled to the bus . The display may be any suitable display such as a liquid crystal display LCD or may be another type of handheld active or passive display for displaying information to a computer user. An input device including alphanumeric and other keys is coupled to bus for communicating information and command selections to processor . Other user input devices include cursor control or microphone . The cursor control may include one or more of any number of devices such as for example a mouse a trackball or cursor direction keys for communicating direction information and command selections to processor and for controlling cursor movement on display . The cursor control typically has two degrees of freedom in two axes a first axis e.g. x and a second axis e.g. y allowing the device to specify positions in a plane.

Execution of sequences of instructions contained in main memory causes processor to perform the process steps described below. One or more processors in a multi processing arrangement may also be employed to execute the sequences of instructions contained in main memory . In alternative embodiments hard wired circuitry may be used in place of or in combination with software instructions and it is to be understood that no specific combination of hardware circuitry and software are required. Instructions may be provided in any number of forms such as source code assembly code object code machine language compressed or encrypted versions of the foregoing and any and all equivalents thereof. Computer readable medium refers to any medium that participates in providing instructions to processor for execution and program product refers to such a computer readable medium bearing a computer executable program. The computer usable medium may be referred to as bearing the instructions which encompass all ways in which instructions are associated with a computer usable medium. Computer readable mediums include but are not limited to non volatile media volatile media and transmission media. Non volatile media include for example optical or magnetic disks such as storage device . Volatile media include dynamic memory such as main memory . Transmission media include coaxial cables copper wire and fiber optics including the wires that comprise bus . Transmission media can also take the form of acoustic or light waves such as those generated during radio frequency RF and infrared IR data communications. Common forms of computer readable media include for example a floppy disk a flexible disk hard disk magnetic tape any other magnetic medium a CD ROM DVD any other optical medium punch cards paper tape any other physical medium with patterns of holes a RAM a PROM and EPROM a FLASH EPROM any other memory chip or cartridge a carrier wave as described hereinafter or any other medium from which a computer can read.

Various forms of computer readable media may be involved in carrying one or more sequences of one or more instructions to processor for execution. For example the instructions may initially be borne on a magnetic disk of a remote computer. The remote computer can load the instructions into its dynamic memory and send the instructions over a telephone line using a modem. A modem local to the control system can receive the data on a telephone line and use an infrared transmitter to convert the data to an infrared signal. An infrared detector coupled to bus can receive the data carried in the infrared signal and place the data on bus . The bus carries the data to main memory from which processor retrieves and executes the instructions. Instructions received by main memory may optionally be stored on storage device either before or after execution by processor .

The control system may also include a communication interface coupled to bus to provide a two way data communication coupling to a network link connected to a local network . For example communication interface may be an integrated services digital network ISDN card or a modem to provide a data communication connection to a corresponding type of telephone line. As another example communication interface may be a local area network LAN card to provide a data communication connection to a compatible LAN. Wireless links may also be implemented. In any such implementation communication interface sends and receives electrical electromagnetic or optical signals that carry digital data streams representing various types of information.

Network link typically provides data communication through one or more networks to other data devices. For example network link may provide a connection through a network socket to a host computer such as the managed service provider in . Alternatively the network link may provide a connection to data equipment operated by an Internet Service Provider ISP . The ISP in turn provides data communication services through the worldwide packet data communication network now commonly referred to as the Internet . The network and the Internet both use electrical electromagnetic or optical signals that carry digital data streams. The signals through the various networks and the signals on network link and through communication interface which carry the digital data to and from the control system are exemplary forms of carrier waves transporting the information. Thus the processing required by method of the invention described by way of example herein may be implemented on a local computer utilizing storage device or may be implemented for example on a LAN or over the Internet.

The control system can send messages and receive data including program code through the network s network link and communication interface . In the Internet example a server might transmit a requested code for an application program through the Internet the ISP network and communication interface . The received code may be executed by processor as it is received and or stored in storage device or other non volatile storage for later execution. In this manner the control system may obtain application code in the form of a carrier wave.

The mobile service orchestration platform is a native application that runs on the mobile device in . The mobile service orchestration platform contains components written in several different programming languages including C C C NET and Java. The mobile service orchestration platform is adapted to run on a variety of different devices including devices running the Microsoft Windows Mobile OS formerly Pocket PC or PPC the Symbian OS the Windows 2000 OS Win2K Windows Millenium the Windows XP OS the Windows XP tablet OS the RIM OS and the Palm OS.

According to one example the mobile service orchestration platform runs in the native file system of the mobile device . Thus a user is able to utilize the mobile service orchestration platform without any additional training. Further the mobile service orchestration platform supports the full capabilities of the native file system on the mobile device . This provides a highest common denominator approach to content management.

The mobile service orchestration platform includes a communication stack module which allows for communication between the mobile service orchestration platform and networks such as the network in and any other data services. According to one example the communication stack module allows the mobile service orchestration platform to communicate with the network in the Hypertext Transfer Protocol over Secure Socket Layer HTTP over SSL and the Transport Layer Security TLS protocol. SSL is an open nonproprietary protocol that uses a 40 bit key size for the RC4 stream encryption algorithm which is considered an adequate degree of encryption for commercial exchange. Further HTTP over SSL supports the use of X.509 digital certificates from the server so that if necessary a user can authenticate the sender. Other encryption techniques such as but not limited to Advance Encryption Standard AES may be utilized. For example an s mime technique could also be adopted where the target application is e mail. Furthermore the forms designer can specify that the data captured as an XML document on the mobile device may be encrypted using a public or secret key cryptosystem e.g. Kerberos PKI etc. to properly secure the content on the mobile device if the device was stolen or lost or if any of the networked devices or the portal server was compromised.

According to one example the communication protocol of the system in utilizes HTTP S as the preferred protocol to transport all data files. The system may utilize as the preferred protocol to distribute and notify other internal or external resources e.g. users other machines etc. HTTP HTTPS SyncML ActiveSync SOAP SMTP FTP SMS SNMP SMPP RMI IIOP etc. Other communication protocols can be utilized without nullifying the key attributes of the above described implementation. For example web extensions such as SOAP and .NET can also be utilized as well as proprietary communication protocols. A policy based mobile content engine may also act as an authorizing proxy for each of these protocols that allows the mobile form applications to communicate in real time with one or more enterprise content sources hosted behind the enterprise firewall. For example a drop down list in a mobile form application could be dynamically generated by a SOAP request to an enterprise content source. The mobile content engine would apply appropriate policies both before and after routing the SOAP request from the mobile form application onto the enterprise content source. As will be explained below the business orchestration platform obviates the need for specialized programming of the applications to exchange data with the enterprise content sources.

The mobile service orchestration platform also includes encryption libraries which are native device libraries that support encryption. According to one example the mechanism for encrypting can be SSL and the libraries are native SSL libraries and TLS. The mobile service orchestration platform is extendable by a Configuration User Interface Wizard CUIW as will be detailed below. The CUIW provides a mechanism for defining new policy definitions used to capture data from data applications and services and transform the data in a usable format to be used by the local device application.

The mobile service orchestration platform also contains an authentication and authorization module. This authentication and authorization module enables a user of the mobile device to be authenticated and authorized against the network and any data services and can be extended with communication and user interface components.

The unified mobile service orchestration platform used by any of the local orchestration endpoints e.g. mobile applications or data services on the mobile device or remote orchestration endpoints e.g. data applications or data services to automate real time data capture and data sharing between orchestration endpoints on any of the devices which are accessible to the mobile device in . Orchestration endpoints include but are not limited to end user applications installed on mobile devices e.g. Personal Information Management PIM applications such as Outlook data capture applications installed on mobile devices associated with peripherals installed or attached to the mobile device e.g. cameras audio recorders bar code scanners GPS devices remote enterprise applications accessible via a dedicated network or the Internet and the like e.g. Customer Relationship Management CRM systems time tracking systems etc. as well as data services such as web services that give access to remote file systems location based services maps or even data management systems and databases.

In this example the unified mobile service orchestration platform is installed on the storage device of the control system in for execution by the processor of an example mobile device such as the mobile device . The mobile service orchestration platform includes an event and action processing engine a mobile Business Process Orchestration BPO engine a services module a secure framework a mobile Business Activity Monitoring BAM engine and a mobile customization wizard Application Programming Interface API .

The mobile service orchestration platform allows the sharing of data in different formats between orchestration endpoints such as local orchestration endpoints installed on the mobile device in . Each local orchestration endpoint has an associated endpoint connector. The local orchestration endpoints include a file system the survey mobile application the inventory control mobile application the lead generation mobile application and a personal information manager PIM database managed by Microsoft Outlook. The file system mobile applications and the PIM database are managed by a mobile applications operating system which may also have an associated endpoint connector to share data with the mobile service orchestration platform . The mobile applications operating system in this example is a common mobile operating system such as Microsoft Windows Mobile OS formerly Pocket PC or PPC Symbian OS Palm OS RIM OS etc. The orchestration endpoints may also include remote orchestration endpoints such as an enterprise application a web service a database a discovery service to find other remote endpoints and a file system . The endpoint connectors provide communication of data between the associated orchestration endpoint and the mobile orchestration platform without any modification of the local or remote applications or services that receive data from endpoint connectors. The endpoint connectors transform the data into the exact format used by those local or remote applications. In this example the file system the mobile applications and the PIM database are stored on the storage device . Of course it is to be understood that modifications and new data and applications may be received from remote devices via the network or the Internet for storage on the storage device .

In this example the file system may be used to store data which may be collected by the mobile service orchestration platform using hardware or software supported by the mobile device . Such data may be stored in text based formats audio formats image formats video formats etc. In this example the mobile applications as well as the BPO engine provide specialized support for XML based data management using an extensible markup language format but of course other mobile based applications may be used and communicate data via the mobile service orchestration platform . In this example the PIM database contains contact data which may be compiled by all users of a business organization and synchronized with both local data and remote orchestration endpoints such as data managed by remote applications such as the Salesforce application accessible via a web server. The mobile service orchestration platform is capable of capturing data in the native formats from orchestration endpoints such as the file system and the PIM database . Data may in turn be requested by each of the local orchestration endpoints e.g. file system mobile applications and PIM database via policies managed by the mobile service orchestration platform . The requested data is sent to the requesting orchestration endpoint in the proper format from the appropriate endpoint connector.

The mobile applications used by the mobile device according to this example are specified in XML based forms application definition markup language based on the W3C XForms specification to define a rich presentation of forms rendered in a Graphical User Interface GUI by the mobile form application thick or thin client and the data used by those applications are represented in XML. The application definition markup language may be used by application designers to define application functionality such as the lead generation and survey functions of the example mobile applications which are form based. Other functions may include billing timesheets weekly expenses and user surveys. Of course other functions may be incorporated in mobile applications. Further applications may user many other data formats other than XML.

Some enhancements have been made to extend the XForms schema to make it more efficient for mobile form applications as well as to support layout of form controls on mobile devices and integrating routing of forms between users in a mobile form application. An XML based policy model is utilized by the mobile form applications to define application and form states workflow validations conditions and actions to be processed for the life cycle of a new or updated form data instance. The policy model defines how the form data is managed e.g. transformation and validation of data publication of data to targeted resources publication of data based on the type network connection notifications and alerts to users based on form actions and events etc. and distributed as well as to whom people systems resources etc. it is distributed.

As discussed above the mobile extensible forms markup language mXForms used in the mobile form applications is based on the XForms W3C recommendation. The mXForms markup language defines how to render rich GUIs online or offline for mobile devices and display update and captures data. mXForms and XForms distinctly define the presentation definition look and feel the format of the data captured form controls and the behavior of the forms based application e.g. data validation navigation workflow actions etc. . The mXForms language can fully leverage the limited display and functionality including native and external peripherals e.g. barcode scanner GPS module etc. of some of the targeted mobile devices. Multiple views or mobile forms applications may be required to complete the data capture of a forms based application including support for contextual e.g. dynamic views or interaction with the form e.g. Y happens only if the user has selected X in the form . Unique form controls are also needed to display add edit and delete repeating line items on such limited devices. The markup language also affords for creation of unique form controls that future business processes may require. These multiple views and form controls can be used on or off line via thin thick clients on mobile devices that are OS enabled.

The event and action processing engine is used to capture data from one or more endpoint connectors. The endpoint connectors are defined for orchestration endpoints including local applications e.g. mobile applications and data services e.g. file system or the PIM database as well as remote applications and services for a mobile device such as the mobile device . Further endpoint connectors may be defined for remote orchestration endpoints accessible by the mobile device over a network such as via the network or the Internet. The endpoint connectors are registered for any orchestration endpoint that manages data that is minimally compatible with the data managed by the mobile service orchestration platform . The event and action processing engine is triggered by an event API to share data or from an orchestration endpoint based on a policy managed by the mobile Business Process Orchestration BPO engine .

The services module includes the functionality to perform services that integrate the mobile service orchestration platform into the mobile device and in particular facilitate data sharing between orchestration endpoints. The services module includes a remote manager an inline transformation module a transport manager and connectors . The connectors are extensible containers that allow each orchestration endpoint remote or local integrated with the mobile service orchestration platform to create and plug in its own connector that defines the actions it supports and the data that it will share. The remote manager tracks the status of communications and connections involving the mobile orchestration platform in order to support the remote endpoint connectors. This may be used to inform the user of the mobile device of failure of connection or communications. The inline transformation module translates data from other orchestration endpoints on the mobile device such as the PIM database or from remote orchestration endpoints such as the Salesforce application running on a remote server into the extensible markup intermediate data format used by the BPO engine . Some orchestration endpoints like the mobile applications may use the same extensible markup format without requiring any transformation. The inline transformation module has access to various translation modules which are specialized to the convert the native data formats of data received from different orchestration endpoints to the extensible markup intermediate data format. Thus for example an Outlook format on the mobile device is translated into the extensible markup format using one translation module. Salesforce application data may be translated into the extensible markup format using another translation module. The transport manager manages transfer of data to remote sources and enables communication with remote orchestration clients via communication protocols such as SOAP or HTTP.

The mobile Business Process Orchestration BPO engine defines how when and where to share data with other orchestration endpoints. The BPO engine is provided definitions via a suite of default policy templates relating to organizational business models and processes. A business model or process is the sequence of events or state transitions from one business state to another where the state is characterized by relevant forms data instances context information and business process policies rules for sharing data between orchestration endpoints. The default policy templates are used by the BPO engine to define mobile application integration e.g. connector endpoints and what data can be captured e.g. PIM database integration . The BPO engine accesses data records data actions and data conditions which make up the default policy templates . In this example the data records also known as data instances are all of the data records managed by the BPO engine and are in a usable extensible markup intermediate data format which in this example is a canonical XML format. In this example the canonical XML format is also used by the mobile applications but it is to be understood that such applications do not have to manage data in a format that is identical to that of the BPO engine . The data actions are different operations which the BPO engine may perform with the data such as translations or capture and transmission via calls to endpoint connectors. The data conditions are requirements which are the attributes of the data records or the state of the data records. For example a data condition may apply conditional logic to the sharing of a data record between different endpoint connectors.

In this example the BPO engine includes policy templates to invoke data capture from the PIM database for different functions performed by orchestration endpoints such as the mobile applications . For example one of the mobile applications may have a drop down menu which includes contact data. In order to obtain the contact data the mobile application initiates an event to the event and action processing engine . The event triggers a policy template to obtain the contact data from another orchestration endpoint via its associated endpoint connector in this example the policy template has been instantiated specifically for the Microsoft Outlook application which manages the PIM database and supply it to the requesting mobile application. This policy template then invokes the action to access the contact data of the PIM database via an API call. The BPO engine then converts the contact data from the PIM database into contact data in the canonical XML format via the services module and sends the data to the requesting mobile application. Alternatively another policy could be defined to invoke the action to obtain the contact data from a remote orchestration endpoint via its associated endpoint connector such as the Salesforce contact management application accessible via a web server. In such a case the BPO engine invokes the action on the endpoint connector to achieve communication with the remote orchestration endpoint. In another example a policy may direct the BPO engine to convert a data record from the canonical XML format to send the converted data record such as a new contact data record from the mobile application to another orchestration endpoint via its associated endpoint connector such as the PIM database . In this example such a policy would require the action of translating the data from the canonical XML format to the Outlook data format.

The secure framework allows enterprise administrators to control what data may be captured and how it may be shared with mobile applications and mobile services. The secure framework also ensures that the data securely flows from its orchestration endpoint source to an authorized destination orchestration endpoint.

The mobile Business Activity Monitoring BAM engine provides real time metrics gathering on activities processed from the different endpoint connectors. The BAM engine keeps a log file in order to provide orchestration platform performance data. Such data may be used to analyze the effectiveness use etc. of devices or other metrics of the organization. For example such data may include statistics for network availability access to PIM databases use of mobile applications etc. This is useful for analyzing device specific performance by either the mobile device or a central server coupled to many mobile devices for analyzing overall system performance.

The mobile customization wizard API is used to manage customize clone and create policies for the BPO . As noted above the suite of policy definitions includes default policies. The mobile customization wizard API allows a user to modify or create other policies for using the BPO via an interface which may be displayed by the mobile device on the display .

The process in is used to initialize the BPO engine in for use in the example mobile device in . The data formats are first defined to represent the types of data records in the mobile applications and any other orchestration endpoints in potential communication with the mobile orchestration platform in step . In this example the data type is generally defined by the extensible markup format used by the BPO engine canonical XML format . The types of data records are registered with the event and action processing engine in step .

The process then defines remote endpoint connectors to remote orchestration endpoints in step . Example remote orchestration endpoints may include but are not limited to a remote customer relationship management CRM application on a remote server such as Microsoft CRM or a customer data management application such as Salesforce.com available via a web based server. The remote endpoint connectors are registered with the services module in step . The services module is provided with the necessary translation modules to translate the data formats of the remote orchestration endpoints to the extensible markup format used by the BPO engine if needed in step .

The process then defines local endpoint connectors to local orchestration endpoints such as the mobile applications or the PIM database on the mobile device in step . The local endpoint connectors are registered with the services module in step . The services module is provided with the necessary translation modules to translate data formats used by the local orchestration endpoints to the extensible markup format used by the BPO engine if needed in step . The default policies are them provided to the BPO engine in step .

The user may be offered an option to add new policies in step . If no new policies are added the initialization of the mobile service orchestration platform is completed. If a new policy is desired the process allows the creation of new policies via the mobile customization wizard API in step . The new policy is then added to the BPO engine in step and the initialization is completed.

A remote endpoint connector has been defined and registered for a CRM customer relationship management enterprise application accessible via the network in . The remote endpoint connector allows access to a back end Microsoft CRM application running on a server using the MS CRM data format. The endpoint connector is a plug in to the connectors in the services module that uses the in line transformation module to convert between the MS CRM data format and the extensible markup format used by the BPO engine . It also provides actions that can be triggered by the BPO engine to create a new contact or return a list of contacts.

A local endpoint connector has been defined and registered for the PIM database managed by Microsoft Outlook in this example. The local endpoint connector is a plug in to the connectors in the services module that uses the in line transformation module to convert between the Outlook data format and the extensible markup format used by the BPO engine . It also provides actions that can be triggered by the BPO engine to create a new contact or return a list of contacts.

The new contact policy pushes a new contacts record into the local PIM database via the local PIM endpoint connector and to the remote CRM enterprise application via the remote endpoint connector whenever a new contact event is generated by the lead generation application . The synchronize contacts list policy provides an up to date consolidated list of contact data record from both the local PIM database via the endpoint connector and the remote CRM enterprise application via the endpoint connector whenever a synchronize contacts list event is triggered by the lead generation application . Such an event may be triggered on a scheduled basis or an as needed basis from the lead generation mobile application . Alternatively orchestration endpoints such as the PIM database and or the CRM enterprise application may generate the event as a notification when their respective contact lists are updated. It is to be understood that the various data record types and policies and and endpoint connectors and are simply illustrative examples and many additional data record types policies and endpoint connectors could be used by the mobile service orchestration platform .

The user opens the lead generation mobile application on the mobile device in . The lead generation mobile application includes a user interface which is rendered on the display in . The user interface may include various controls which allow the user to perform different lead generation functions including a list of existing contacts button. Selecting this button triggers the synchronize contacts list event in the event and action processing engine and the up to date consolidated list of contacts data record is assembled by the BPO engine following the synchronize contacts list policy . The policy obtains data from both the local PIM endpoint connector and the remote CRM enterprise application endpoint connector . The consolidated contacts data record is converted via the services module to the canonical XML format and displayed in the interface generated by the lead generation mobile application

A user may also create a new contact record which may be made available to different orchestration endpoints on the mobile device and remotely via the mobile service orchestration platform . For example a create new contact function may be requested by a user if the user could not find a contact in the contact list in the lead generation mobile application . The lead generation mobile application includes a control to allow a user to create a new contact via data entry from the mobile device . When the new contact data is saved to create a new contact data record the new contact event is triggered in the event and action processing engine . The new contact record is a contact data record type and is pushed by the BPO engine according to the new contact policy to the local PIM endpoint connector and the Remote CRM enterprise application endpoint connector . The new contact data is transformed via the services module to the Outlook and CRM formats and is made available in the respective data formats to the PIM database and the CRM enterprise application .

This application incorporates by reference in its entirety the following U.S. Patent Applications Mobile Core Client Architecture by Marc Ch n Liam Peyton Kevin McGuire and Brant Drummond Method And System For Customizing A Mobile Application Using A Web Based Interface by Mitch A. Brisebois Brant Drummond Arjun Mehta Marc Ch n and Mark Flannigan and Real Time Records And Dashboards From Aggregated Mobile Data by Mitch A. Brisebois Arjun Mehta Kevin McGuire and Cyril Soga each of which is being filed concurrently herewith on Jan. 12 2007. Each of the aforementioned U.S. patent applications are assigned to or under obligation of assignment to TrueContext Corp. of Ottawa Canada.

This application expressly incorporates herein by reference in its entirety U.S. Published Patent Application Nos. US2006161646 entitled Policy Driven Mobile Forms Applications published Jul. 20 2006 US20060080397 entitled Content Management Across Shared Mobile File Systems published Apr. 13 2006 and 20060089938 titled Distributed Scalable Policy Based Content Management published on Apr. 27 2006 each of which are assigned to TrueContext Corp. of Ottawa Canada. This application also expressly incorporates herein by reference in its entirety International Publication No. WO 2004 013782 A1 titled Contextual Computing System published on Feb. 12 2004 which is assigned to TrueContext Corp. of Ottawa Canada.

While the presently disclosed concepts have been described with reference to one or more particular embodiments those skilled in the art will recognize that many changes may be made thereto without departing from the spirit and scope of the presently disclosed concepts. Any combination and or sub combination of the examples embodiments aspects claims methods acts processes claim elements or components disclosed herein however termed are expressly contemplated as falling within the present concepts. For example although various aspects of the present concepts are set forth in the appended claims wherein the dependent claims relate back to selected preceding claims including the independent claim it is to be understood that each of the dependent claims may properly depend from any of the preceding claims to the extent not logically excluded in accord with aspects of the present concepts. Thus for example the present concepts expressly include every possible combination of dependent claims with their respective independent claim regardless of stated dependency. Further the presently disclosed concepts are considered to include without limitation any combination and or sub combination of the disclosed examples embodiments aspects claims methods acts processes claim elements or components disclosed herein with the examples embodiments aspects claims methods acts processes claim elements or components disclosed in the references and applications incorporated by reference herein.

