---

title: Unified session signaling system for use in multimedia communications
abstract: A design for a unified session signaling system for use in multimedia communications is disclosed. In one embodiment, a method includes interfacing, via an application interface, with an associated application and a session, tracking, via a call state/session manager, a call state and session properties across multiple calls associated with the session, managing, via a server interoperation module, registration and proxying services associated with the session, managing, via a basic SIP services module using a third party SIP stack, a basic set of SIP services associated with the application and the session, and determining and advertising, via a media negotiator module, media capabilities of devices associated with the session. The method may also include managing, via an additional SIP services module using the third party SIP stack, a set of additional services associated with the session.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08477761&OS=08477761&RS=08477761
owner: Ittiam Systems (P) Ltd.
number: 08477761
owner_city: Bangalore, Karnataka
owner_country: IN
publication_date: 20080327
---
The present invention relates generally to multimedia communications and more particularly relates to a design for a unified session signaling system for use in multimedia communications.

Session Initiation Protocol SIP is a signaling protocol used for establishing sessions in an Internet Protocol IP network. There are various commercial and open source implementations of SIP which may differ significantly in their interfaces and SIP features functionality they provide. Typically systems using SIP also require some additional capabilities beyond basic signaling services. Systems such as IP Video Phone IPVP for example may require call conferencing multi call support media negotiation and Network Address Translator NAT traversal. The above mentioned requirements may involve significant system design variations and development efforts depending on various factors such as end application and deployment scenarios.

Other features of the present embodiments will be apparent from the accompanying drawings and from the detailed description that follows.

A design for a unified session signaling system for use in multimedia communications is disclosed. In the following detailed description of the embodiments of the invention reference is made to the accompanying drawings that form a part hereof and in which are shown by way of illustration specific embodiments in which the invention may be practiced. These embodiments are described in sufficient detail to enable those skilled in the art to practice the invention and it is to be understood that other embodiments may be utilized and that changes may be made without departing from the scope of the present invention. The following detailed description is therefore not to be taken in a limiting sense and the scope of the present invention is defined only by the appended claims.

The SIP user agent provides features such as call establishment and termination SIP proxy server interoperation media negotiation call hold call resume call transfer instant messaging and presence network address translator NAT traversal multi call support and or SIP services for authentication and secure communication. In some embodiments the SIP user agent provides the call establishment and termination feature to establish calls between end points to negotiate call parameters and to terminate the calls.

The SIP user agent provides the SIP proxy server interoperation feature to allow users to register with the SIP proxy server such that all user agents connected to a particular server may communicate with each other through that server.

Further the SIP user agent provides the call hold call resume feature to set an active call on hold or resume a call that is on hold. The SIP user agent also provides the call transfer feature to transfer calls to other endpoints. The SIP user agent includes the instant messaging and presence feature to send instant message receive instant message send presence information and or receive presence information. The SIP user agent provides the NAT traversal feature. In some embodiments the SIP user agent operates transparently behind any NAT firewall. For example the SIP user agent takes steps necessary to keep open port mappings to ensure that users behind NAT devices can communicate over extended periods of time.

In addition the SIP user agent provides the multi call support feature to allow an endpoint to initiate and participate in multiple independent calls simultaneously. The multi call support feature allows the application to easily implement conferencing sessions involving two or more users at a same time. Further the SIP user agent provides an authentication and secure communication feature. In these embodiments the SIP user agent may setup a session securely using hypertext transfer protocol HTTP authentication and or over a secure channel using methods such as transport layer security TLS .

The call state session manager tracks a call state and session properties across multiple calls associated with the session. The server interoperation module manages registration and proxying services associated with the session. The basic SIP services module manages a basic set of SIP services associated with the application and the session using a third party SIP stack . In some embodiments the basic set of SIP services includes making a call receiving a call setting calls on hold setting calls off hold and or registering with a SIP registrar and or a SIP proxy server.

The media negotiator module determines and advertises media capabilities of devices associated with the session. Further the media negotiator module enables sending and receiving Session Description Parameters via an SDP module such as a stand alone SDP module A implemented within the SIP user agent and or an SDP module provided as part of the third party SIP stack e.g. the SDP module associated with a third party SIP stack vendor B . The additional SIP services module manages a set of additional services using the third party SIP stack . In some embodiments the set of additional services includes transferring call forwarding call sending instant message receiving instant messages sending presence information and or receiving presence information.

The NAT traversal system module implements at least one method of an NAT device traversal transparent to a user and the application . In some embodiments the method of an NAT device traversal includes sending keep alive packets UPnP TURN ICE and or STUN.

Further as shown in the application interface includes the configuration and control interface which translates user commands and communicates the user commands with other parts of the system such as the call state session manager the server interoperation module the basic SIP services module and the additional SIP services module . The application interface also includes event notification interface that interfaces with the server interoperation module the basic SIP services module and the additional SIP services module . In some embodiments the call state session manager is coupled to the basic SIP services module to track a call state and session properties across multiple calls associated with the session.

Further as shown in the media negotiator module is coupled to the basic SIP services module and the additional SIP services module . The media negotiator module is coupled to the SDP module . The SDP module may be present within the SIP stack itself or alternatively the SDP module present in third party SIP stack may directly be used. The NAT traversal system module interfaces with the server interoperation module the basic SIP services module and the additional SIP services module . The third party SIP stack communicates with the server interoperation module the basic SIP services module and the additional SIP services module .

As illustrated above the call state session manager tracks a call state and session properties across multiple calls associated with the session. In some embodiments the session includes the multiple calls whereby each call goes through various stages such as set up active teardown etc. Further each call may have distinct set of capabilities.

The server interoperation module manages registration and proxying services associated with the session. In these embodiments in case of the SIP user agent chooses to register with a SIP server then signaling information is routed through the SIP proxy server to other participants of the session.

The basic SIP services module manages a basic set of SIP services associated with the application and the session using the third party SIP stack . The media negotiator module determines and advertises media capabilities of devices associated with the session. In some embodiments the media negotiator module is configured with local devices codec set and priority. For example when a new session is established the media negotiator module takes into account local priority and remote devices priority and decides the media capabilities of the devices by negotiating with the remote end. The local device s codec priority choice used during negotiation may be set at run time by the application depending on the clock cycles and memory availability for a particular codec at the time of negotiation.

The additional SIP services module manages a set of additional services such as transferring call forwarding call sending instant message receiving instant messages sending presence information and receiving presence information using the third party SIP stack . The media negotiator module further enables sending and receiving Session Description Parameters via an SDP module e.g. the stand alone SDP module A and or the SDP module associated with a third party SIP stack vendor B .

The IPv4 address space is divided into two basic types i.e. publicly routable addresses and private addresses. A publicly routable address is accessible from anywhere on the internet whereas a private address is only accessible within a private network such as a LAN environment e.g. an office or home network . One private network with many networked devices inside it is typically connected to the public internet via a single external publicly routable IP address. A Network Address Translator NAT is a device designed to share this one external publicly routable IP address among the multiple clients on the private network. The NAT device then acts as a gateway between the private and the public networks and assigns an external port for each connection between the external network and the internal network.

Further the NAT traversal system module implements a method of NAT device traversal transparent to a user and the application . For example users of SIP devices are typically situated in homes or offices with their own LAN and a private IP address. They connect to public networks through NAT devices. The NAT devices designed to share the IPv4 address space may cause problems with SIP due to their nature i.e. since SIP messages contain IP and port information inside the body of network packets. When a SIP device inside a NAT generates a SIP message it places the private IP address and port in the message and sends it through the NAT. When the remote device receives this it sees the private IP address which is not usable. The SIP message should be modified to include the public IP instead of the private IP or enable the SIP proxy server to route the incoming packets appropriately as the server may have mechanisms such as maintaining a mapping table of users and routable IP addresses. Therefore the SIP user agent implements NAT device traversal methods such as sending keep alive packets UPnP TURN ICE and or STUN to provide additional features that are needed to overcome the above mentioned problem.

The configuration and control interface enables call control functionality via at least one SIP stack independent interface. In these embodiments the application may configure and use the SIP user agent through a set of well defined stack independent interfaces that enable required call functionalities. The event notification interface indicates SIP events to the application . In these embodiments the SIP user agent includes the event notification interface to indicate the SIP events to the application through a system of callbacks. In one example embodiment whenever a SIP event e.g. incoming call alert outgoing call succeeded etc. that the application needs to be aware of occurs only then these call backs are called.

The diagrammatic system view may indicate a personal computer and or a data processing system in which one or more operations disclosed herein are performed. The processor may be a microprocessor a state machine an application specific integrated circuit a field programmable gate array etc. The main memory may be a dynamic random access memory and or a primary memory of a computer system. The static memory may be a hard drive a flash drive and or other memory information associated with the data processing system.

The bus may be an interconnection between various circuits and or structures of the data processing system. The video display may provide graphical representation of information on the data processing system. The alpha numeric input device may be a keypad keyboard and or any other input device of text e.g. a special device to aid the physically handicapped . The cursor control device may be a pointing device such as a mouse. The drive unit may be a hard drive a storage system and or other longer term storage subsystem.

The signal generation device may be a bios and or a functional operating system of the data processing system. The network interface device may perform interface functions e.g. code conversion protocol conversion and or buffering required for communications to and from the network between a number of independent devices e.g. of varying protocols . The machine readable medium may provide instructions on which any of the methods disclosed herein may be performed. The instructions may provide source code and or data code to the processor to enable any one or more operations disclosed herein.

For example a storage medium having instructions that when executed by a computing platform result in execution of a method of the SIP user agent associated with the application and the session includes interfacing via the application interface with the associated application and the session tracking via the call state session manager a call state and session properties across multiple calls associated with the session managing via the server interoperation module registration and proxying services associated with the session managing via the basic SIP services module using the third party SIP stack a basic set of SIP services associated with the application and the session and determining and advertising via the media negotiator module media capabilities of devices associated with the session. In some embodiments the application interface enables via the configuration and control interface call control functionality via at least one SIP stack independent interface and indicates via the event notification interface SIP events to the application .

The storage medium may have instructions to manage via the additional SIP services module using the third party SIP stack a set of additional services associated with the session. The storage medium may also have instructions to enable via the media negotiator module sending and receiving Session Description Parameters via the stand alone SDP module A and or the SDP module associated with a third party SIP stack vendor B. Further the storage medium may have instructions to implement via the NAT traversal system module a method of an NAT device traversal transparent to a user and the application .

In operation a call state and session properties are tracked across multiple calls associated with the session via the call state session manager . In operation registration and proxying services associated with the session are managed via the server interoperation module . In operation a basic set of SIP services associated with the application and the session are managed using a third party SIP stack via the basic SIP services module . In some embodiments the basic set of services includes making a call receiving a call setting calls on hold setting calls off hold registering with a SIP registrar and or a SIP proxy server and the like.

In operation media capabilities of devices associated with the session are determined and advertised via the media negotiator module . In operation a set of additional services associated with the session are managed using the third party SIP stack via the additional SIP services module . In some embodiments the set of additional services includes transferring call forwarding call sending instant message receiving instant message sending presence information receiving presence information and the like.

In operation sending and receiving Session Description Parameters via the stand alone SDP module A and or the SDP module associated with a third party SIP stack vendor B are enabled via the media negotiator module . The SDP module may be present within the SIP user agent itself or it may make use of the SDP module provided by the third party SIP stack vendor. In operation at least one method of an NAT device traversal transparent to a user and the application is implemented via the NAT traversal system module . For example the method of an NAT device traversal includes sending keep alive packets UPnP TURN ICE STUN and or the like.

The above described SIP user agent operates over any SIP stack thus allowing a user to license a SIP stack of his her choice. The SIP user agent can be built for that licensed SIP stack with all the features provided as described above. The application configures the SIP user agent once and the SIP user agent decides media to be negotiated since the media negotiation need not be handled by the application . Further the SIP user agent communicates the negotiated media to the application .

The above described SIP user agent manages NAT traversal internally and keeps the process hidden from the user. The NAT traversal is a mandatory requirement for majority of deployments. This feature is usually implemented in the SIP user agent and may not be present in the conventional SIP stack. Further the SIP user agent makes the signaling process convenient and simple for multi way conferencing. For example the multi way conferencing is useful for connecting diverse teams separated by large distances.

The SIP user agent communicates with the application by raising events when a particular SIP activity is started or completed. This feature allows the application to handle SIP events only when needed and leaves the application free to perform its own processing when not needed.

The above described SIP user agent also includes capabilities to register with a SIP server and route all session communications through that server. For example commercial deployments of videophones and other IP communications require a central server that behaves as a SIP registrar and or a SIP proxy.

Further the above described SIP user agent is not application dependent and it can be used for any purpose. While many conventional SIP solutions are often geared towards a particular application the design of the SIP user agent can be extended to any application that requires signaling. Further the SIP user agent consists of well defined APIs Application Programming Interface that are maintained constant for any underlying implementation. The SIP user agent architecture hides the core application from implementation deployment usage variations across multiple applications enabling significant reuse maintainability and extensibility thereby reducing system integration effort and time to market. Further the SIP user agent maintains event driven nature of SIP and frees applications to perform other tasks in the period between SIP events thus increasing efficiency of the system.

Although the present embodiments have been described with reference to specific example embodiments it will be evident that various modifications and changes may be made to these embodiments without departing from the broader spirit and scope of the various embodiments. For example the various devices modules analyzers generators etc. described herein may be enabled and operated using hardware circuitry e.g. CMOS based logic circuitry firmware software and or any combination of hardware firmware and or software e.g. embodied in a machine readable medium . For example the various electrical structure and methods may be embodied using transistors logic gates and electrical circuits e.g. application specific integrated ASIC circuitry .

In addition it will be appreciated that the various operations processes and methods disclosed herein may be embodied in a machine readable medium and or a machine accessible medium compatible with a data processing system e.g. a computer system and may be performed in any order. Accordingly the specification and drawings are to be regarded in an illustrative rather than a restrictive sense.

