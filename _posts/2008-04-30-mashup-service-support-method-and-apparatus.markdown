---

title: Mashup service support method and apparatus
abstract: A mashup service support method includes externally receiving a mashup service application, acquiring and managing an authentication key corresponding to the received mashup service application, and executing the received mashup service application using the acquired authentication key. A user can use a variety of web services by normally operating a mashup service application through Open API due to the storing and managing of an authentication key.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09141775&OS=09141775&RS=09141775
owner: SAMSUNG ELECTRONICS CO., LTD.
number: 09141775
owner_city: Suwon-Si
owner_country: KR
publication_date: 20080430
---
This application claims the benefit of Korean Patent Application No. 2007 89400 filed in the Korean Intellectual Property Office on Sep. 4 2007 the disclosure of which is incorporated herein by reference.

Aspects of the present invention relate to an electronic device providing a web service and more particularly to a technology for providing a mashup service suitable for a device using one or more Open APIs application programming interface .

A conventional electronic device providing a web service includes a processing unit that processes web information a wireless interface that connects the electronic device to a network in order to acquire the web information from a web server and a storage medium that stores the web information. Since the conventional technology merely provides a single web service using the above elements only the information that the web service provides is available to the user. Recently a mashup service has been suggested that provides totally new services or fusion applications by receiving data from web services or companies that provide Open API. Since an authentication process needed to provide the mashup service is not properly managed to date the user may have difficulty in using the mashup service.

Aspects of the present invention provide a method and apparatus for supporting a mashup service by storing an authentication key value to normally operate a mashup service application through Open API in a device and managing the authentication key value so that a user can use a variety of mashup services.

According to an aspect of the present invention a mashup service support method is provided. The method comprises externally receiving a mashup service application acquiring and managing an authentication key corresponding to the received mashup service application and executing the received mashup service application using the acquired authentication key.

According to another aspect of the present invention a computer readable recording medium comprising a program to execute a mashup service support method is provided. The method comprises externally receiving a mashup service application acquiring and managing an authentication key corresponding to the received mashup service application and executing the received mashup service application using the acquired authentication key.

According to another aspect of the present invention a mashup service support apparatus is provided. The apparatus comprises a network interface unit to transmit and receive data a control unit to externally receive a mashup service application to acquire and manage an authentication key corresponding to the received mashup service application and to execute the mashup service application using the acquired authentication key a storing unit to store the mashup service application and an authentication key database and a user interface unit to assign an interface with a user.

Additional aspects and or advantages of the invention will be set forth in part in the description which follows and in part will be obvious from the description or may be learned by practice of the invention.

Reference will now be made in detail to the present embodiments of the present invention examples of which are illustrated in the accompanying drawings wherein like reference numerals refer to the like elements throughout. The embodiments are described below in order to explain the present invention by referring to the figures.

A mashup service application is an application including device executable codes including binary codes execution codes source codes web pages or other content. The mashup service application can be acquired from mashup service providers connected to a wired or wireless network or from mashup service providers connected to a local area network LAN . The wired wireless network includes Ethernet and Internet a wired interface using a cable and a wireless interface such as Bluetooth or Wi Fi. The mashup service provider connected to a LAN includes a local computer or a portable memory.

Returning to an authentication key corresponding to the provided mashup service application is acquired and managed in Operation . The Open API service provider assigns an authentication key for each user or service to manage or limit the user of a web service. Since the mashup service using Open API needs to provide the authentication key in response to a query of the Open API the authentication key is stored in the storage space of the device and managed.

Returning to if the authentication key is not inserted in the provided mashup service application an authentication key acquisition process is provided in Operation . The authentication key acquisition process can be provided in a variety of fashions according to the design of an Open API provider. The authentication key acquisition process can be provided as an instruction to acquire an authentication key needed for each Open API online or through UI of a device whenever the service is provided.

Returning to the authentication key is acquired following the provided acquisition process in Operation . For example as shown in when the IP address or URL of a device is input following the authentication key acquisition process an authentication key corresponding to the Open API is provided by the Open API. The authentication key can be acquired as either a push download or a pull download. In push download the authentication key is pushed down by the Open API provided to the device. In pull download a device requests the Open API provider for the authentication key so that the authentication key is acquired from the Open API provider.

Whether the storage capacity of the device is sufficient to store the acquired authentication key is determined in Operation . However since Operation is not necessary it is possible to execute Operation after Operation . If the storage capacity of the device is sufficient to store the acquired authentication key the acquired authentication key is stored by matching the acquired authentication key to the Open API address of the mashup service application in Operation .

Table 1 lists the matching results of the authentication keys and the Open API addresses as table information.

As shown in Table 1 the information on the authentication key is stored in a predetermined area of a device. The Open API address may include a URL uniform resource locator . However if the storage capacity of a device is insufficient to store the acquired authentication key an error message such as The acquired authentication key cannot be stored is displayed in Operation .

Returning to the mashup service application is executed using the acquired authentication key in Operation . is a flowchart explaining Operation of . The Open API address of the mashup service application is confirmed in Operation . For example assuming that the mashup service application to be executed is the one shown in the Open API address of the mashup service application http maps.google.com maps file api amp v 2 amp key is confirmed by checking the script of .

Whether the authentication key corresponding to the confirmed Open API address is inserted is determined in Operation . For example determining whether the authentication key corresponding to the Open API address http maps.google.com maps file api amp v 2 amp key is written is performed by checking the script of . If the authentication key is written since there is no need to insert a separate authentication key Operation is performed to execute the mashup service application.

However if the authentication key is not inserted whether the authentication key corresponding to the Open API address exists in an authentication key database stored in the device is determined in Operation . If the authentication key is not written to the script of the mashup service application whether the authentication key corresponding to the Open API address of the mashup service application exists in the authentication key database matching the Open API address stored in Operation is determined. For example whether the authentication key corresponding to the Open API address of http maps.google.com maps file api amp v 2 amp key exists in Table 1 is determined. If the authentication key corresponding to the Open API address exists in the database a corresponding authentication key is extracted and inserted in the mashup service application in Operation . For example the index number 3 of Table 1 stores the authentication key CCCC corresponding to the Open API address of http maps.google.com maps file api amp v 2 amp key . Thus the authentication key CCCC is extracted and inserted in the script of the mashup service application.

The mashup service application where the authentication key is inserted is executed in Operation . By executing the mashup service application a mashup service desired by the user is provided.

Information on a position on a map where the image is photographed is extracted from exit information about the image provided by the digital camera. The information abcdefg of the authentication key is inserted in a box in the execution code of the mashup service application. The extracted position information is inserted in GPS positional information Lat Long corresponding to a box of the mashup service application. Then the mashup service application is executed. is a printout of the position of a photographed image on a map and a corresponding image by the execution of the mashup service application of . Thus the user can easily identify the position where the image is photographed.

Returning to if the authentication key corresponding to the Open API address does not exist in the database an error message such as The mashup service application cannot be executed is displayed in Operation . Since the mashup service application can only be executed when the authentication key exists if the authentication key does not exist in the database a message is displayed. The above described mashup service support process can be executed at a host or an image forming apparatus independent of the host.

Aspects of the invention can also be embodied as computer readable codes on a computer readable recording medium. The computer readable recording medium is any data storage device that can store data which can thereafter be read by a computer system. Examples of the computer readable recording medium include read only memory ROM random access memory RAM CD ROMs magnetic tapes floppy disks optical data storage devices and DVDs. The computer readable recording medium can also be distributed over network coupled computer systems so that the computer readable code is stored and executed in a distributed fashion. Also functional programs codes and code segments for accomplishing the present invention can be easily construed by programmers skilled in the art to which the present invention pertains.

A mashup service support apparatus according to an embodiment of the present invention will be described below with reference to the accompanying drawings.

The mashup service provider is a mashup service provider connected to the device and includes a local computer or a portable memory. The mashup service provider transmits a mashup service application to the device through a USB universal serial bus cable. The mashup service application may be an application including device executable codes including binary codes execution codes source codes and or web pages.

The network includes Ethernet and Internet connected to the device through a wired wireless network. The mashup service provider transmits a mashup service application to the device through the network . The network interface unit of the device transmits and receives data and receives a mashup service application from mashup service providers and and . The received mashup service application is stored in the storing unit under the control of the control unit . The network interface unit receives the mashup service application and the authentication key through a universal interface including USB and Bluetooth.

The control unit determines whether the storage capacity of the device is sufficient to store the mashup service application. When the storage capacity of the device is sufficient to store the mashup service application the control unit controls the mashup service application to be stored in the device . However when the storage capacity of the device is insufficient to store the mashup service application the control unit controls an error message such as The mashup service application cannot be stored to be displayed. The error message is displayed through the user interface unit under the control of the control unit .

The control unit acquires and manages an authentication key corresponding to the mashup service application provided by the mashup service provider and uses the acquired authentication key to execute the mashup service application. The control unit determines whether the authentication key is inserted in the provided mashup service application. If the authentication key is not inserted in the mashup service application the control unit controls the acquisition of the authentication key following an authentication key acquisition process. The authentication key acquisition process can vary according to the design of an Open API provider. The authentication key acquisition method can be provided as an instruction to acquire an authentication key needed for each Open API online or through UI of a device whenever the service is provided. The acquisition key may be acquired from Open API providers and using a push download or a pull download. The control unit determines whether the storage capacity of the device is sufficient to store the acquired authentication key. If the storage capacity of the device is sufficient to store the acquired authentication key the control unit stores the acquired authentication key by matching the acquired authentication key to the Open API address of the mashup service application. The Open API address includes URL.

However when the storage capacity of the device is insufficient to store the acquired authentication key the control unit controls an error message such as The authentication key cannot be stored to be displayed. The error message is displayed through the user interface unit according to the control of the control unit .

The user interface unit displays the error message as described above. Also the user interface unit receives an instruction from a user to instruct the execution of a mashup service application and outputs an execution command signal of the user to the control unit .

According to the execution command signal the control unit determines whether an authentication key corresponding to the mashup service application exists in the storing unit extracts the authentication key corresponding to the mashup service application and inserts the extracted authentication key in the mashup service application to execute the mashup service application. The storing unit stores a database of mashup service applications and authentication keys.

As described above since the mashup service support method and apparatus according to aspects of the present invention stores and manages an authentication key value to normally operate a mashup service application through Open API a user can use a variety of web services. Since the Open API may need an authentication process to allow use the authentication key is managed by a device and a method to provide the authentication key to a web service is provided so that the web service using the Open API can be efficiently used.

Although a few embodiments of the present invention have been shown and described it would be appreciated by those skilled in the art that changes may be made in this embodiment without departing from the principles and spirit of the invention the scope of which is defined in the claims and their equivalents.

