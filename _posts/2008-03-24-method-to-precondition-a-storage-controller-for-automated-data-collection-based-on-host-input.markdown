---

title: Method to precondition a storage controller for automated data collection based on host input
abstract: An FTDC interface with the host or user. The interface can include a command application programming interface (API) or a data storage Command-Line Interface (DS CLI)/Graphical User Interface (GUI). In certain embodiments, the FTDC interface allows a host or user to customize a desired FTDC on a two-tiered system. The first tier is one in which a host/user selects, from a list of conditions, which ones, upon occurrence of those conditions, they would like the controller to perform FTDC. In the second tier a second selection is made such that for each first tier item, the host/user will select the level of FTDC (collection and offloading of logs and/or the forcing and offloading of a statesave).
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08250402&OS=08250402&RS=08250402
owner: International Business Machines Corporation
number: 08250402
owner_city: Armonk
owner_country: US
publication_date: 20080324
---
The present invention relates in general to the field of computers and similar technologies and in particular to software utilized in this field. Still more particularly the present invention relates to preconditioning a storage controller for automated data collection.

Storage controllers such as those available from the International Business Machines Corporation are known. In storage controllers it is known for an enterprise storage server to manage Input Output I O requests from networked hosts to one or more storage units such as a direct access storage device DASD Redundant Array of Independent Disks RAID Array and Just a Bunch of Disks JBOD . Storage controllers include host bus adapters or interfaces to communicate with hosts over a network and adapters or interfaces to communicate with the storage units.

Data integrity is an important factor in large computer data systems. Thus backup systems have been developed and integrated into storage controllers to prevent the loss of data in the event of various types of failures. If an error occurs on a storage controller it is desirable to provide a first time data capture or collection FTDC type function also referred to as first failure data capture FFDC type function which can support analysis of the error and eventually enable obtaining a root cause and or resolution of that error. With a FTDC type system much of the data collection such as error report errpt data trace logs etc. is automatically gathered but is not automatically offloaded. This automatically collected data is often collected in a round robin basis so that new data overlays older data in the collection. This overlay function means that if these logs are not offloaded until well after an error event the pertinent data can be lost.

Another important aspect of a data collection system is known as a statesave operation in which control and data structures are accumulated and off loaded when a statesave is triggered. Many error events can automatically trigger these statesaves e.g. panics data storage interrupts DSIs but there are some error events in which automatic triggers are not set because the condition is not necessarily considered an error. Some examples of these pseudo error conditions include selective resets system resets Peer to Peer Remote Copy suspends of paths or pairs. Additionally some of these conditions are not considered errors until some form of threshold is crossed. A notable example of this type of issue is a performance problem where as long as response time or throughput e.g. in MB sec stays below or above respectively some defined threshold no problem is identified. However when the thresholds are exceeded the user host is impacted. In all these examples a statesave can be manually forced or forced by triggers set in host software. However such a manual statesave operation is often well after the event and as such data critical to the analysis is no longer in the collected data.

Accordingly it is desirable to allow a user or host to define automated FTDC for both automatically collected data and for pseudo error type conditions based on the environments and needs of a customer.

In accordance with the present invention an FTDC interface with the host or user is provided. The interface can include a command application programming interface API a data storage Command Line Interface DS CLI or a Graphical User Interface GUI . In certain embodiments the FTDC interface allows a host or user to customize a desired FTDC on a two tiered system. The first tier is one in which a host user selects from a list of conditions which ones upon occurrence of those conditions they would like the controller to perform FTDC. The second tier a second selection such that for each first tier item the host user will select the level of FTDC collection and offloading of logs and or the forcing and offloading of a statesave .

More specifically in one embodiment the invention relates to a computer implementable method for providing a first time data collection FTDC function to a storage controller. The method include providing an FTDC interface the FTDC interface allowing a host to interface with the storage controller and enabling customization of an FTDC operation operating on the storage controller via the FTDC interface.

In another embodiment the invention relates to a system that includes a processor a data bus coupled to the processor and a computer usable medium embodying computer program code the computer usable medium being coupled to the data bus. The computer program code includes instructions executable by the processor and configured for providing a first time data collection FTDC interface the FTDC interface allowing a host to interface with the storage controller and enabling customization of an FTDC operation operating on the storage controller via the FTDC interface.

In another embodiment the invention relates to a computer usable medium embodying computer program code. The computer program code includes computer executable instructions configured for providing a first time data collection FTDC interface the FTDC interface allowing a host to interface with the storage controller and enabling customization of an FTDC operation operating on the storage controller via the FTDC interface.

The above as well as additional purposes features and advantages of the present invention will become apparent in the following detailed written description.

The host includes a processor that executes routines and issues read and write commands to the storage controller . The host also includes memory which can include volatile and non volatile memory. A FTDC system is stored on the memory and may be executed by the processor . The storage controller interacts with and controls a plurality of drives . The host and the storage controller each include a respective FTDC interface and .

Referring to within the FTDC interface when an FTDC system is accessed at step two selection lists are presented a two tier selection process is presented . More specifically with a first list at step the host user selects conditions under which FTDC will occur on the controller at step . These conditions are then translated into appropriate triggers on the controller at step . For each condition selected from the first list a second selection list is presented at step . In this list the host user can select from a plurality of types of FTDC information.

Next at step the FTDC system determines whether there are any remaining conditions. To prevent multiple FTDC operations from occurring in the case of recursive reoccurring errors either internal or host user selected limits on the number of FTDCs may be set. This limit can be based on a number of FTDC operations or a time between FTDC operations. This interface may be modified at any time by the host user and these current settings will survive controller initial machine loads IMLs .

Some of these conditions may involve setting threshold values and for these conditions additional input will be allowed beyond the binary yes no. 

The described system may be implemented as a method apparatus or article of manufacture using standard programming and or engineering techniques to produce software firmware hardware or any combination thereof. The term article of manufacture refers to code or logic implemented in hardware logic e.g. magnetic storage medium such as hard disk drives floppy disks and tape optical storage e.g. CD ROMs optical disks etc. volatile and non volatile memory devices e.g. EEPROMs ROMs PROMs RAMs DRAMs SRAMs firmware programmable logic etc. . Code in the computer readable medium is accessed and executed by a processor. The code in which implementations are made may further be accessible through a transmission media or from a file server over a network. Those skilled in the art will recognize the article of manufacture may comprise any information bearing medium known in the art.

While the present invention has been particularly shown and described with reference to a preferred embodiment it will be understood by those skilled in the art that various changes in form and detail may be made therein without departing from the spirit and scope of the invention. Furthermore as used in the specification and the appended claims the term computer or system or computer system or computing device includes any data processing system including but not limited to personal computers servers workstations network computers main frame computers routers switches Personal Digital Assistants PDAs telephones and any other system capable of processing transmitting receiving capturing and or storing data.

