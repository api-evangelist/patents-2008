---

title: Generation and use of an email frequent word list
abstract: Technologies are described herein for generating a mailbox specific frequent word list associated with a mailbox. In one method, an index scan is performed on catalogs to retrieve search data mapping words to emails containing the words. The search data is provided across multiple mailboxes. A universal frequent word list is generated based on the search data. The mailbox specific frequent word list is generated based on the universal frequent word list.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09165056&OS=09165056&RS=09165056
owner: Microsoft Technology Licensing, LLC
number: 09165056
owner_city: Redmond
owner_country: US
publication_date: 20080619
---
In recent years electronic mail email has become one of the most important forms of communication for various personal and business uses. The growth of e mail communications has been spurred at least in part by the increasing number of devices capable of remotely accessing email. For example many mobile devices such as cellular phones smartphones and personal digital assistants PDAs are now capable of remotely and wirelessly accessing email through various pull based and push based e mail access protocols.

A typical user s mailbox may contain hundreds or thousands of e mails on a wide variety of topics ranging from the user s plans for lunch at her favorite cafe to the user s input regarding her workgroup s latest business project. A user s e mails may also be utilized to infer information about the user. For example a higher frequency of e mails to certain people may indicate that the user has a closer relationship with those people. As a result a user s mailbox can be a valuable source of relevant information about the user especially for application programs that can utilize or benefit from such information.

Technologies are described herein for generating organizing storing and utilizing a frequent word list associated with a user s mailbox. In particular through the utilization of the technologies and concepts presented herein an application program interface API is described that is adapted to generate a frequent word list based on email messages contained in a user s mailbox and to respond to requests from external application programs requesting the frequent word list. The frequent word list may include a mapping of words to a frequency of use for each of the words.

In one method an index scan is performed on catalogs to retrieve search data that maps words to emails containing the words. The search data is provided across multiple mailboxes. A universal frequent word list is generated based on the search data. The mailbox specific frequent word list is generated based on the universal frequent word list.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended that this Summary be used to limit the scope of the claimed subject matter. Furthermore the claimed subject matter is not limited to implementations that solve any or all disadvantages noted in any part of this disclosure.

The following detailed description is directed to technologies for generating organizing storing and using a frequent word list associated with a user s mailbox. An API is described herein that is adapted to generate a frequent word list based on emails contained in a user s mailbox. This frequent word list is referred to herein as a mailbox specific frequent word list because it contains only words associated with the user s mailbox. The API may further be adapted to respond to requests from application programs or other services requesting the mailbox specific frequent word list.

While the subject matter described herein is presented in the general context of program modules that execute in conjunction with the execution of an operating system and application programs on a computer system those skilled in the art will recognize that other implementations may be performed in combination with other types of program modules. Generally program modules include routines programs components data structures and other types of structures that perform particular tasks or implement particular abstract data types. Moreover those skilled in the art will appreciate that the subject matter described herein may be practiced with other computer system configurations including hand held devices multiprocessor systems microprocessor based or programmable consumer electronics minicomputers mainframe computers and the like.

In the following detailed description references are made to the accompanying drawings that form a part hereof and which are shown by way of illustration specific embodiments or examples. Referring now to the drawings in which like numerals represent like elements through the several figures aspects of a computing system and methodology for generating organizing and storing a frequent word list for a given mailbox will be described. shows an illustrative email server in which multiple caller applications A B collectively referred to as caller applications request a frequent word list for a specific mailbox associated with a given user. An example of a frequent word list for a specific mailbox is a mailbox specific frequent word list . For the sake of simplicity in the example shown in each of the caller applications requests the mailbox specific frequent word list . However it should be appreciated that the caller applications may each request frequent word lists for other mailboxes. It should further be appreciated that other types of application programs and or services may request the mailbox specific frequent word list and the like.

According to embodiments the mailbox specific frequent word list includes a list of frequent words found in a user s mailbox and a corresponding frequency associated with each of the words. The list of frequent words may be sorted in order of frequency. For example the most frequent words may be shown at the top of the mailbox specific frequent word list and the remaining words may be shown in a descending order of frequency. The frequency may be specified as a raw frequency e.g. the absolute number of email messages that include a word or a percentage ratio e.g. the number of email messages that include a word in relation to the total number of messages across the user s mailbox .

The mailbox specific frequent word list may be formatted in Extensible Markup Language XML or other suitable representation. An example of an XML data structure for an entry in the mailbox specific frequent word list is shown below. 

The TopNWord tag specifies a word found in a user s mailbox. The frequency property specifies the frequency that the word is found in the user s mailbox. It should be appreciated that other forms for representing entries in the mailbox specific frequent word list may be contemplated by those skilled in the art.

As shown in the email server includes a variety of application programs such as an advertising application A a voice transcription application B and an organization application C collectively referred to as applications . The advertising application A includes a first caller application A which is adapted to transmit a request for the mailbox specific frequent word list to a search API . The voice transcription application B includes a second caller application B which is adapted to transmit a request for the mailbox specific frequent word list to the search API . The organization application C includes a third caller application which is adapted to transmit a request for the mailbox specific frequent word list to the search API .

In one embodiment the advertising application A may tailor advertisements to a user based on the contents of a mailbox specific frequent word list associated with the user. For example the mailbox specific frequent word list may include a high frequency of baby related words such as crib diapers and stroller. As a result the advertising application A may recognize these baby related words and tailor advertisements to the user in accordance with baby related products and services. For example tailored advertisements may be displayed to the user within an ad supported web application such as a hosted email application.

In another embodiment the voice transcription application B may supplement a transcription dictionary with proper nouns slang abbreviations and other colloquial terminology found in the mailbox specific frequent word list . Voice transcription applications are increasingly included in email application programs especially in unified messaging application programs whereby a voicemail or other audio message is transcribed into text so that a user can read the voicemail. In an exemplary implementation the voice transcription application B may receive an audio sequence of speech and then phonetically map the audio sequence to one or more words in the transcription dictionary . This implementation may be adequate when the audio sequence corresponds to words in the transcription dictionary . However problems can occur when the audio sequence corresponds to words not found in the transcription dictionary .

In an example an audio sequence may include the name Gautam which is a name that is common in some non U.S. countries. An American implementation of the transcription dictionary may not include proper nouns or foreign names such as Gautam. As a result the voice transcription application B may incorrectly transcribe the audio representation of Gautam as Gotham got him or got them. Alternatively the voice transcription application B may indicate that it does not recognize the word by providing an error message.

The mailbox specific frequent word list may indicate that the name Gautam is frequently used in the user s emails. As such the voice transcription application B may add Gautam to the transcription dictionary . In one embodiment the voice transcription application may place a greater weight on words such as Gautam that are frequently included in the user s emails over similarly sounding counterparts such as Gotham that are not frequently included in the user s emails. By supplementing the transcription dictionary with colloquial words associated with a user the accuracy of the voice transcription application B can be significantly improved. In particular the transcription dictionary can be effectively customized for a given user by adding words from the user s own real world vocabulary found in the mailbox specific frequent word list .

In yet another embodiment the organization application C may generate email tags based on frequently used words found in the mailbox specific frequent word list . As used herein an email tag refers to a word that is associated with emails. The email tags essentially serve as reference markers enabling users to quickly identify browse and search for classes of emails as specified by the email tags. By restricting email tags to the most frequently used words more relevant email tags can be provided for various automatic and manual tagging applications.

It should be appreciated that the applications described herein are merely exemplary. Other applications that can utilize or benefit from the data provided in the mailbox specific frequent word list may be contemplated by those skilled in the art. It should further be appreciated that the applications may be external applications executed on other computers. For example the advertising application A may be an external application that is capable of communicating with the email server through a network not shown .

As shown in the email server further includes a plurality of catalogs and a universal frequent word list . As described in greater detail below with respect to the search API is adapted to search the catalogs for frequent words across multiple mailboxes. Upon receiving the frequent words from the catalogs the search API may generate the universal frequent word list . The universal frequent word list may contain a list of frequent words across multiple mailboxes and a frequency associated with each of the words. The search API may utilize the universal frequent word list to generate mailbox specific frequent word lists such as the mailbox specific frequent word list as requested by the applications .

Referring now to additional details will be provided regarding the operation of the search API . In particular shows an illustrative process flow for generating the mailbox specific frequent word list . The process flow begins at where the caller application transmits to the search API a request for a mailbox specific frequent word list such the mailbox specific frequent word list associated with a given user. In one embodiment the request may specify among other things the number of entries included in the mailbox specific frequent word list the minimum maximum frequency of the entries included in the mailbox specific frequent word list and the minimum maximum age of the entries included in the mailbox specific frequent word list .

The process flow proceeds to where upon receiving the request for the mailbox specific frequent word list the search API performs an index scan on the catalogs . The catalogs may include search data which contains an inverted index data structure mapping words to the emails that contain the words. The emails may be identified by a document identifier. For example an illustrative entry in the catalogs may include the following 

The process flow proceeds to where the search API receives the search data in response to performing the index scan. Once the search API receives the search data the process proceeds to where the search API generates the universal frequent word list based on the search data . In one embodiment the API generates the universal frequent word list by counting the number of document identifiers associated with each of the words in the search data . For example in the example shown above the word apple is included in five emails while the word bear is included in three emails. As such apple has a frequency of five and bear has a frequency of three.

The process flow proceeds to where the search API creates the mailbox specific frequent word list based on the universal frequent word list . The universal frequent word list includes words and associated frequencies across multiple mailboxes. As such the search API may filter the universal frequent word list for only words contained in emails associated with a specific mailbox. In one embodiment the email server maintains a mapping for each mailbox and its corresponding emails. This mapping may be used by the search API to filter the universal frequent word list . The process flow then proceeds to where the search API provides the mailbox specific frequent word list to the caller application .

The mailbox specific frequent word list may be formatted in XML or other suitable representation. Although not so limited the mailbox specific frequent word list may be stored as a folder associated item FAI and compressed using suitable compression technology. In one embodiment the mailbox specific frequent word list may be represented by a data structure specifying a particular mailbox which is identified by a mailbox identifier. An exemplary XML representation of the mailbox specific frequent word list which is denoted as TopNWords is shown below.

As shown above the mailbox identifier mailGuid associates the mailbox specific frequent word list with a particular mailbox.

Further the mailbox specific frequent word list may include a data structure containing words and a frequency associated with each of the words. An exemplary XML representation of this data structure which is denoted as WordFrequency is shown below.

Turning now to additional details will be provided regarding the operation of the search API . In particular is a flow diagram illustrating aspects of one method provided herein for generating the mailbox specific frequent word list . In one embodiment the search API includes a plurality of objects or other entities capable of performing one or more of the operations described below.

It should be appreciated that the logical operations described herein are implemented 1 as a sequence of computer implemented acts or program modules running on a computing system and or 2 as interconnected machine logic circuits or circuit modules within the computing system. The implementation is a matter of choice dependent on the performance and other requirements of the computing system. Accordingly the logical operations described herein are referred to variously as states operations structural devices acts or modules. These operations structural devices acts and modules may be implemented in software in firmware in special purpose digital logic and any combination thereof. It should be appreciated that more or fewer operations may be performed than shown in the figures and described herein. These operations may also be performed in a different order than those described herein.

Referring to a routine begins at operation where the search API receives from one of the caller applications a request for a mailbox specific frequent word list such as the mailbox specific frequent word list for a given mailbox. The request may also specify among other things the number of entries included in the mailbox specific frequent word list the minimum maximum frequency of the entries included in the mailbox specific frequent word list and the minimum maximum age of the entries included in the mailbox specific frequent word list . Upon receiving the request for the mailbox specific frequent word list the routine proceeds to operation .

At operation the search API determines whether the universal frequent word list has been created. If the universal frequent word list has not been created then the routine proceeds to operation where the search API performs an index scan on the catalogs to retrieve the search data . In one embodiment the search data includes an inverted index data structure mapping words to the email identifiers corresponding to emails containing the words. Upon retrieving the search data the routine proceeds to operation where the search API generates the universal frequent word list based on the search data . In one embodiment the universal frequent word list includes a mapping of the words to a frequency associated with each of the words across multiple mailboxes. The frequency may be determined by counting the number of email identifiers corresponding to each of the words. Upon generating the universal frequent word list the routine proceeds to operation .

If the universal frequent word list has been created then the routine proceeds to operation where the search API determines whether the universal frequent word list is current. As previously described the request transmitted by the calling applications may specify the minimum or maximum age of the entries in the mailbox specific frequent word list . If the universal frequent word list is not current then the routine proceeds to operation where the search API performs an index scan on the catalogs to retrieve the search data and to operation where the search API updates the universal frequent word list based on the search data . Upon generating the universal frequent word list the routine proceeds to operation .

If the universal frequent word list is current then the routine proceeds to operation where the search API generates the mailbox specific frequent word list based on the universal frequent word list . In one embodiment the search API filters the words and corresponding frequencies from the universal frequent word list that are associated with only one mailbox. The filtered words and corresponding frequencies then form the mailbox specific frequent word list which may be sorted according to the frequencies. Upon generating the mailbox specific frequent word list the routine proceeds to operation where the search API transmits the mailbox specific frequent word list to the caller applications in response to their request.

Referring now to an exemplary computer architecture diagram showing aspects of a computer is illustrated. An example of the computer is the email server . The computer includes a processing unit CPU a system memory and a system bus that couples the memory to the CPU . The computer further includes a mass storage device for storing one or more program modules and one or more databases . Examples of the program modules may include the search API and the applications . Examples of the databases may include the catalogs the universal frequent word list the mailbox specific frequent word list and the dictionary . The mass storage device is connected to the CPU through a mass storage controller not shown connected to the bus . The mass storage device and its associated computer readable media provide non volatile storage for the computer . Although the description of computer readable media contained herein refers to a mass storage device such as a hard disk or CD ROM drive it should be appreciated by those skilled in the art that computer readable media can be any available computer storage media that can be accessed by the computer .

By way of example and not limitation computer readable media may include volatile and non volatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. For example computer readable media includes but is not limited to RAM ROM EPROM EEPROM flash memory or other solid state memory technology CD ROM digital versatile disks DVD HD DVD BLU RAY or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by the computer .

According to various embodiments the computer may operate in a networked environment using logical connections to remote computers through a network . The computer may connect to the network through a network interface unit connected to the bus . It should be appreciated that the network interface unit may also be utilized to connect to other types of networks and remote computer systems. The computer may also include an input output controller for receiving and processing input from a number of input devices not shown including a keyboard a mouse a microphone and a game controller. Similarly the input output controller may provide output to a display or other type of output device not shown .

Based on the foregoing it should be appreciated that technologies for generating and using a mailbox specific frequent word list are presented herein. Although the subject matter presented herein has been described in language specific to computer structural features methodological acts and computer readable media it is to be understood that the invention defined in the appended claims is not necessarily limited to the specific features acts or media described herein. Rather the specific features acts and mediums are disclosed as example forms of implementing the claims.

The subject matter described above is provided by way of illustration only and should not be construed as limiting. Various modifications and changes may be made to the subject matter described herein without following the example embodiments and applications illustrated and described and without departing from the true spirit and scope of the present invention which is set forth in the following claims.

