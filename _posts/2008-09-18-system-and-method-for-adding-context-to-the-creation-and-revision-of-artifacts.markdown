---

title: System and method for adding context to the creation and revision of artifacts
abstract: A system includes a process-related-data handling component operative to handle process-related data corresponding to an operation associated with an artifact, such as the creation or revision of the artifact. An application component is operatively coupled to the process-related-data handling module and is operative to interact with the artifact. A storage element is also operatively coupled to the process-related-data handling module and is operative to store the process-related data. The process-related data may be displayed, created, or otherwise manipulated through a data management tool, which may include, a calendar interface, a task interface, and/or a media capture module. A method is also directed towards establishing process-related context concerning at least one artifact.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08745052&OS=08745052&RS=08745052
owner: Accenture Global Services Limited
number: 08745052
owner_city: Dublin
owner_country: IE
publication_date: 20080918
---
This disclosure generally relates to facilitating collaboration and more particularly to collaboration efforts in relation to work being performed on one or more computer systems.

Advances in technology and software have increased the reliance that both individuals and businesses have on computer implemented solutions for performing common tasks such as creating documents in word processing applications creating spreadsheets in spreadsheet applications creating presentations in presentation applications and utilizing applications for any other suitable reason. A user uses any one of various software applications e.g. word processing application text editor spreadsheet application presentation application code editor integrated development environment IDE to generate an artifact e.g. documents diagrams spreadsheets code files slides or any other output file used to store information based on a user s input. Each artifact is often revised multiple times until the user is ultimately satisfied with the final artifact.

While many artifacts are created by one individual artifacts are also commonly generated in a collaborative environment and as such an artifact may be revised multiple times by different people who are separated by both time and distance. For example most large scale software development projects are distributed across teams located in different geographic locations and in different time zones. In such projects the communication between teams remains largely asynchronous and as such concurrent discussion editing and other tools cannot be used to enhance collaboration.

One known solution that enhances collaboration between individuals is commonly referred to as tracking changes. When an application tracks changes the application stores history data associated with every change that a user makes to an original document. In a word processing document for example history data is stored within an artifact that describes what new text a user adds what text a user deletes formatting changes user comments or any other information that describes the actual changes the user makes to the artifact.

Multiple problems exist with the known solution of tracking changes however. For example the known methods for displaying the history data do not adequately exhibit the changes over time but instead only show that changes were made. Furthermore the history data does not capture the context and process in which the artifact was captured or revised so a user reviewing history data is left guessing why another user or perhaps the user him or herself made the changes indicated in the history data.

For these reasons among others a need exists for improved systems and methods for enhancing the development of and collaboration for artifacts created by software applications.

A system includes a process related data handling component operative to handle process related data corresponding to an operation associated with an artifact such as the creation or revision of the artifact. An application component is operatively coupled to the process related data handling module and is operative to interact with the artifact. A storage element is also operatively coupled to the process related data handling module and is operative to store the process related data. The system may also include a management component operative to retrieve at least a portion of the process related data from either a storage element or another application.

In one embodiment the system further includes a display operatively coupled to the management component wherein the management component is operative to output display data for displaying on the display a process related data management tool.

In a processing device implementing one or more artifact processing applications and having a graphical user interface including a display and at least one user input device a method for establishing process related context concerning at least one artifact includes displaying on the display an artifact. Furthermore a calendar interface is displayed that includes a plurality of date indicators including a highlighted date indicator of the plurality of date indicators based on the existence of process related data associated with the artifact and a date corresponding to the highlighted date indicator. Via a user input device selection input is received that corresponds to the highlighted date indicator. In response thereto data corresponding to at least some of the process related data associated with the artifact and the date corresponding to the highlighted data indicator is displayed on the display.

In another example the method further includes receiving the process related data from a storage element upon invocation of the artifact.

In another example the method further includes receiving change data for the artifact via the at least one user input device storing the change data on a storage element as associated with a current date to provide updated process related data and then re displaying the calendar interface based on the updated process related data.

In one example the method includes selecting at least some of the process related data based on a selected portion of the artifact such as a cell a paragraph a slide or any other suitable divisible portion of an artifact.

In another example the method further includes displaying data corresponding to at least some of the process related data further includes displaying a history for the artifact up to the date.

In one embodiment a task interface is displayed having a list of tasks associated with a selected portion of the artifact. Via at least one input device input may be received that corresponds to at least one task in the list of tasks. The process related data may then be updated based on the input.

In yet another example the method includes displaying a media capture interface and receiving via the at least one input device input associated with the artifact. The process related data is then updated based on this input.

In yet another example embodiment change data is received for the artifact via the at least one user input device. In response thereto updated process related data is provided based on the change data to a second application. The second application may be associated with a second artifact or it may not be associated with the same artifact or it may not have any association with any artifacts in the case for example of a newsreader collecting various newsfeeds .

Using these techniques for capturing maintaining displaying and or sharing process related data a greater and more efficient understanding of the process and context leading to the current state of an artifact may be developed.

As shown in the system may be at least in part implemented using the device as the stored executable instructions stored on a storage device . The stored executable instructions may be passed as storage data to one or more processors and executed thereby thus causing the desired functionality described herein. The processor s may comprise one or more central processing units CPUs distributed processing circuitry application specific integrate circuits ASICs state machines discrete logic or any other suitable processing circuitry known in the art or any combination thereof. It is further understood that system may not be implemented as stored executable instructions but may instead be implemented in distributed processing circuitry ASICs state machines discrete logic or any other suitable processing circuitry. The storage device may be any type of storage device conventionally known in the art such as random access memory RAM read only memory ROM programmable memory PROM erasable PROMs EPROM electrically erasable PROM EEPROM flash memory magnetic storage devices e.g. hard disks floppy disks magnetic tape optical disc drives or any other suitable non volatile memory now known or later developed.

Turning back to the application component may be any suitable application for creating an artifact. Common examples of an application component include a word processing application a spreadsheet application a presentation application or any other suitable application for the creation or revision of artifacts. The application component is operative to interact with the artifact. For example the application may produce create an artifact view an artifact edit modify an artifact extract information from an artifact or perform any other suitable operation known in the art typically in response to user inputs.

The application component is operatively coupled to the process related data handling component . In this example the application component is operatively connected to the process related data handling component via the connection the management component and the connection . The application component is operative to both provide and receive process related data to and from the process related data handling component corresponding to an operation associated with an artifact. Unlike history data which track changes features require process related data relates to the context and process in which an artifact was created or revised. For example team members often utilize email to collaborate on projects. The content of the email messages may describe desired changes for an artifact or outline the specifications for a new artifact. If a user views the artifact however the user may not be able to readily determine why the artifact was created or revised. History data may help the user determine what was revised but history data will not show process related data i.e. data describing the context and reasoning behind the changes.

The process related data handling component is also operatively coupled to the storage element that is operative to store the process related data which may pass between the process related data handling module and the storage element via the connection . The storage element may be any suitable storage element such as random access memory RAM read only memory ROM programmable memory PROM erasable PROMs EPROM electrically erasable PROM EEPROM flash memory magnetic storage devices e.g. hard disks floppy disks magnetic tape optical disc drives or any other suitable non volatile memory now known or later developed. In one example the connection is over a network such as a wired or wireless network and storage element may include storage programming not shown that organizes and indexes the process related data for retrieval. As one example storage element may be a Microsoft Office SharePoint Server. One advantage of using Microsoft Office SharePoint Server is that the storage programming is known and already built into the server.

The management component is operatively coupled to the application component and the process related data handling component . The management component interfaces with the application component and is operative to retrieve at least a portion of the process related data from the storage element and or the application component . The management component may retrieve the process related data from an application provide process related data to an application provide process related data to the process related data handling component for storage in a storage element and retrieve process related data from the process related data handling component .

After retrieving at least a portion of the process related data from the storage element the management component is further operative to send at least a portion of the retrieved process related data to the application component . As further discussed below a display not shown in may be operatively coupled to the management component and may be operative to output display data for displaying a process related data management tool on the display as discussed below. The process related data management tool provides a graphical representation of data on a display that displays information relating to at least a portion of the process related data. The process related data management tool may further provide a user the ability to provide user input for associating portions of an artifact or operations associated with an artifact with the process related data. In other words the process related data management tool allows users to interact e.g. see review create modify delete etc. process related data associated with an artifact.

For example a process related data management tool may include a calendar interface a task tool or a multimedia capture module all of which are discussed in more detail below. The process related data handling component is also operative to receive the portion of the process related data from the management component and is further operative to provide the portion of the process related data to a second application component not shown . The operation of the system will be better understood with reference to the further description below.

The management component interacts with the application component via any suitable programming means. In one example the application component contains an application programming interface API through which the management component retrieves process related data and or history data from the application that is associated with an artifact or presents process related data and or history data to the application from any of i a process related data handling component ii a storage element iii another application component or iv any other suitable source.

Turning now to the processing device implements one or more artifact processing applications e.g. a word processing application spreadsheet application presentation application etc. . In the illustrated embodiment the storage device comprises executable instructions and the storage element including but not limited to executable instructions for implementing the process related data handling component the application component s and or the management component as noted above. It is further understood that the storage element may be implemented using a separate storage device or viewed from a different perspective the storage device may be distributed potentially through use of one or more intervening communication networks e.g. a public communication network such as the Internet or World Wide Web private communication network such as a local area or wide area network or combination thereof . The one or more processors are operatively coupled to the storage device . User input data which may include user inputs relevant to operations performed by an application on an artifact or the operation of a graphical user interface is also communicated between the one or more processors and at least one user input device such as a keyboard mouse microphone touch screen etc. Processing device also includes a display having a graphical user interface which is operative to display data provided by the processor s . It is understood that the processing device may be distributed or may have any additional suitable components e.g. network or peripheral interfaces etc. not shown in any suitable location.

The operation of the processing device will be better understood in view of illustrating an example of an application operating upon an artifact on graphical user interface and in view of illustrating a method for implementing the graphical user interface . First as shown in block the method includes displaying on the display an artifact . Techniques for generating rendering and updating display data i.e. including graphical elements to be displayed on the display are well known in the art and need not be described in further detail here. As shown in the artifact is opened by the application as known in the art. The application contains for example a title bar and any other common components known in the art but not shown in such as a menu bar status bar or any other suitable components typically dependent upon the nature of the application . In this particular example the artifact is a spreadsheet containing rows through and columns A through D. The various cells comprised of a column row pair such as cell B as commonly known in the art may contain any suitable information. For example cell A contains the text Title and the adjacent cell B contains the title text Example 1. In this example cell B is the selected cell i.e. it has the current focus as indicated by the bolded border of the cell.

A process related data management tool is also displayed on the graphical user interface . As shown in block the method includes displaying on the display a calendar interface . The calendar interface is part of the process related data management tool . The process related data management tool may also include a task interface and a media capture interface discussed in more detail below. The calendar interface includes a plurality of date indicators generally referenced as but shown as numbers in this particular example which correspond to the days of the month of April 2008. It is understood that any suitable date indicators may be used however. Some of the date indicators of the calendar interface are highlighted date indicators such as the date indicators corresponding to the 8th 17th and 30th days of the month of April. It is understood that highlighted means any type of indicia that differentiates the highlighted date indicators. For example highlighted may mean underlined bolded displayed in a different color or any other suitable highlighting means or method known in the art.

A highlighted date indicator indicates the existence of process related data associated with the artifact and a date corresponding to the highlighted date indicator. Thus in this particular example process related data is associated with the artifact and the dates of Apr. 8 17 and 30 2008. For example a person may have previously associated information with artifact instructing a person to update the artifact . It is also contemplated that the highlighted date indicators may not just correspond to artifact but may more specifically indicate that process related data is associated with a portion of the artifact that has focus. In this example the selected cell B is the portion of the artifact that has focus but any suitable i.e. selectable subcomponent of the artifact may be used as a base subcomponent such as a row a column a sheet etc. As a further example in the case of a word processing document artifact a subcomponent may be a paragraph or a page. Other suitable subcomponents of artifacts dependent upon the type of application used to operate upon the artifacts will be recognized by one having ordinary skill in the art. It is understood that while the process related data may be selected based on a selected portion of an artifact e.g. a cell a paragraph a slide the selected process related data may be selected based on any other suitable criteria such as the date the artifact as a whole keywords or any other suitable criteria.

As shown in block the method includes receiving via the at least one user input device a selection input corresponding to the highlighted date indicator . For example a user may use a mouse to click on the highlighted date of April 30. In response thereto as shown in block the method includes displaying on the display and in response to the selection input received from the at least one user input device data corresponding to at least some of the process related data associated with the artifact and the date corresponding to the highlighted date indicator. For example as shown in a portion of a graphical user interface in the form of for example a popup window may be displayed which contains the data corresponding to at least some of the process related data associated with the artifact and the date corresponding to the highlighted date indicator April 30 . In this particular example the process and context for which the cell s information was changed can be seen. J. Smith asked Is Phase 2 complete yet To this S. Adams noted Updated status to Phase 3. Even if S. Adams did not make this note but instead simply updated cell B to Phase 3 the context in which this change was made would be evident in view of the process related data whereby J. Smith inquired about whether Phase 2 is complete yet. While the actual change of the value in cell B may be tracked via history data the process context i.e. the reason for the change was stored as process related data. As such the displaying of the data corresponding to the at least some of the process related data may further include displaying a most current change made to the selected portion of the date. For example although not shown in S. Adams note about updating the status to Phase 3 could also indicate that Phase 2 not shown was deleted and replaced with Phase 3. 

In one embodiment the process related data is captured by building plug ins i.e. extensions to the applications that can capture the actions on the artifact. In the case of Microsoft Excel an example of a spreadsheet application a programmer may use Microsoft Visual Studio Tools to create the plug in.

A plug in taking the form of the calendar interface for example may listen to events within the application and capture the events and send them to the storage element . For example if a cell in a spreadsheet is changed an event is triggered in the application as known in the art. The calendar interface may trap this event and capture the change.

For the task interface and the media capture interface the interfaces and may be shown as a sidebar as known in the art in the application and the sidebar may receive user input to allow users to add content. It is noted that each interface i.e. the calendar interface the task interface and the media capture interface may independently store the process related data associated therewith. In other words process related data displayed in the calendar interface may be stored in a different file than process related data associated with the task interface or the media capture interface .

It is further contemplated that when displaying the data corresponding to the at least some of the process related data a history for the artifact up to the selected date may also be displayed. Thus a user may be able to view the process related data indicating the context in which changes were made e.g. another user may have instructed somebody to update something or questioned whether something should be updated and the changes made in response thereto up to the selected date may be displayed. Thus a person reviewing an artifact will better understand not only what was changed but the context in which it was changed. As such a user may for example be able to anticipate the next required revisions based not only on the previous changes but also on the context in which those changes were made.

To further elaborate on this example an additional optional step of the method includes receiving change data for the artifact via the at least one user input device . In the example described above user J. Smith used a user input device such as a keyboard to enter the process related comment question asking if Phase 2 was complete yet. This change data was then stored on a storage element received from the process related data handling component that received the change data from the management component that in turn received the change data from the API of the application and was associated with the current date at that time to provide updated process related data. If this was the first process related data associated with Apr. 30 2008 then the calendar interface after the user provided the change data would be re displayed based on the updated process related data to now show the date indicator of April 30 to be highlighted thereby indicating that for this artifact April 30 now has process related data associated therewith.

The method may also include receiving the process related data from a storage element at any suitable time. For example the process related data management tool may receive the process related data from a storage element upon invocation of the artifact i.e. loading of a file such as the artifact by the application . It is understood however that the process related data may be received at any suitable time not just upon invocation loading of the artifact . For example the process related data management tool may receive the process related data in response to a user selecting a highlighted date indicator with the user input device . In this manner the initial invocation of the artifact may be made more efficient by avoiding the need to obtain all of the process related data initially in favor of obtaining only a portion of the available process related data for the artifact when it is requested. It is also noted that the process related data management tool retrieves the process related data corresponding to the artifact based on any suitable link therebetween. For example the artifact may contain an embedded link that corresponds to a location on the storage element where the process related data corresponding to the particular artifact is located or otherwise indicates a reference suitable for locating the process related data.

The process related data may be stored on the storage element in any suitable format. In one embodiment the process related data is stored in plain text files separate from the artifact with carriage returns acting as separating indicators to separate the process related data stored therein. The plain text file storing process related may be viewed as a log of every process related operation associated with an artifact. The data within the plain text file may then be parsed by a data management tool for example and utilized to provide process context to a user. It is understood however that the process related data may be stored in any suitable format such as for example in an XML file or in a database.

It is further understood that the process related data management tool may also display a task interface having a list of tasks associated with a selected portion of the artifact . As shown in for example cell B is the selected portion of artifact and the list of tasks includes two tasks namely Task 1 and Task 2. The task interface may include any suitable buttons such as for example a new button to create a new task associated with the selected portion of the artifact a delete button to delete a task associated with the selected portion of the artifact and or a complete button to mark a task associated with the selected portion of the artifact as complete. A user may use user input device to give input corresponding to at least one task in the list of tasks and when received by the task interface process related data is updated based on the input. For example a user may mark a task as complete edit the task s caption provide additional information relating to the task assign a task to a particular user or perform any other function known in the art commonly associated with task lists. In this case however the task list and the items thereon are associated with process related data for an artifact . In one embodiment a task is automatically associated with the date or dates on which the task was created and or revised. For example when a user creates a task in the task interface the task interface automatically captures the date on which the task is created and includes the date as part of the process related data.

Another example of a component of a process related data management tool is a media capture interface . Using the media capture interface any of the above described methods may include displaying the media capture interface and receiving via the at least one user input device and the media capture interface input e.g. audio voice data screen capture data video data or any other suitable audio or visual data associated with the artifact. Upon receiving the input the process related data may be updated in response thereto. For example the media capture interface contains a list of media files associated with either the artifact in general and or the selected portion of the artifact cell B in this example . The media files may be in any suitable format and may contain any suitable form of media such as video recording a person video recording screen captures a series of stills representing screen captures audio etc. The media capture interface also includes any suitable buttons such as start button stop button and delete button which may be used using known techniques to control the capture of media. A media file may be played back for example by clicking on one of the captions e.g. Video 1 in the list of media files.

As one skilled in the art will appreciate the media capture module allows a user to capture the context process for creating and or revising artifacts in the form of audio and or visual forms. As such for example a user may conveniently record his or her thoughts with respect to an artifact or particular subcomponent thereof e.g. a cell paragraph etc. and then another user may use that process related data to understand the context of changes that have been made or that are desired.

Turning now to a block diagram is shown that further illustrates the relationship between multiple instances of the application and management components and the process related data handling component and the storage element . also illustrates an example method for establishing process related context concerning at least one artifact that may be implemented by any suitable device such as device . As shown in block a method includes receiving at least a portion of process related data corresponding to an operation associated with a first artifact in a first application . For example the process related data handling component may receive the at least a portion of process related data corresponding to an operation associated with the first artifact in the first application . The first application may be any suitable application for creating and or revising an artifact such as a word processing application a spreadsheet application or a presentation creating application for example. As shown in several application components are operatively coupled to a process related data handling component via management components . Each application component may be on one computer or may be distributed across multiple computers having different users. The process related data handling component may also be distributed or implemented across any suitable number of machines.

As shown in block the method further includes providing the portion of process related data to a second application . The second application may be the same type of application as the first application may be a different artifact creating revising application or may be any other suitable applications such as for example a newsfeed reader. It should be noted that the second application may be provided with the portion of process related data by retrieving it from the storage element via the process related data handling module. The method may further include displaying on a display data corresponding to the at least a portion of process related data in a process related data management tool associated with the second application.

In the case of the second application being a newsfeed reader as known in the art a user may view the process related data in the form of a newsfeed. As such for example the user may gain an understanding of the context of the creation and or revision of artifacts without needing to actually access or open the artifact. Furthermore a user may be provided with updated process related data as soon as it is available so that for example the user may provide guidance if he or she sees the context of the creation or revision of a document going astray from a desired direction. As those having ordinary skill in the art will appreciate other methods of obtaining subscription based access such as a newsfeed to process related data for specific artifacts for example all of the artifacts related to a given work project may be equally employed. For example instead of a push model where the process related data is automatically sent to a subscriber a pull model may be employed where the subscriber may request updates to process related data for the artifacts to which he she is subscribed.

While particular embodiments have been shown and described it will be obvious to those skilled in the art that changes and modifications may be made without departing from the instant teachings. It is therefore contemplated that any and all modifications variations or equivalents of the above described teachings fall within the scope of the basic underlying principles disclosed above and claimed herein.

