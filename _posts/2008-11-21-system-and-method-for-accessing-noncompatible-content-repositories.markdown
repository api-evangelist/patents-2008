---

title: System and method for accessing non-compatible content repositories
abstract: Systems and methods access non-compatible content repositories that are not natively accessible to a content management system. A metadata registry maintains metadata about content stored in both compatible and non-compatible repositories. For content in a non-compatible repository, the metadata indicates a repository interface capable of accessing the non-compatible repository. The content manager communicates with the repository interfaces to access the content in non-compatible repositories. The content manager may receive a request for content in a non-compatible repository, refer to the metadata registry to select a repository interface to employ, transmit a request for the requested content to the selected repository interface, and receive the requested content from the repository interface. A repository interface registry maintains information about available repository interfaces. Entries may be added to either the metadata registry and the repository interface registry, thus allowing the systems and methods to be extended to be able to access additional non-compatible repositories.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08260815&OS=08260815&RS=08260815
owner: International Business Machines Corporation
number: 08260815
owner_city: Armonk
owner_country: US
publication_date: 20081121
---
This application is a continuation of and claims the benefit of U.S. Pat. No. 7 483 879 issued on Jan. 27 2009 entitled SYSTEM AND METHOD FOR ACCESSING NON COMPATIBLE CONTENT REPOSITORIES having Application Ser. No. 10 745 474 filed Dec. 23 2003 which application claims the benefit of U.S. Provisional Application No. 60 441 512 which was filed Jan. 17 2003 and U.S. Provisional Application No. 60 505 017 which was filed Sep. 17 2003 each of which is hereby incorporated in its entirety by this reference. This application is related to U.S. Pat. No. 7 415 716 issued on Aug. 19 2008 having U.S. patent application Ser. No. 10 745 463 titled entitled Component Integrator U.S. patent application Ser. No. 10 745 346 entitled System and Method for Directing Content Entry and U.S. patent application Ser. No. 12 175 424 entitled Component Integrator each of which is hereby incorporated in its entirety by this reference. Thus the foregoing applications are hereby incorporated in their entirety by these references.

Aspects of the invention are related to the access of content storage systems or repositories to retrieve content when the protocols method and location of storage the user interface or programming interface for accessing the content storage systems or repositories are not native to a content management system.

In recent years organizations have faced an increasingly large burden of managing content. In response to this increased burden many organizations employ a variety of content management systems in order to address specific departmental needs house a particular department s content or more effectively store retrieve index search edit approve publish and otherwise manipulate content. These systems often are provided by different vendors and often use a variety of proprietary and sometimes incompatible user interfaces application programming interfaces and data access protocols and methods for accessing content. In light of the foregoing multi departmental organizations can have difficulty sharing content between and among departments even within one organization. Accessing content outside of an organization may be even more difficult.

Content management systems have typically responded to this need by attempting to natively support a number of content retrieval methods interfaces and protocols. Providing native support for every retrieval method interface and protocol however often costs significant resources including development time and money. These costs impede developers ability to natively support a wide range of methods interfaces and protocols. As a result content management systems are most likely to natively support well known and widely used methods interfaces and protocols for accessing content such as for example the Hypertext Transfer Protocol HTTP . Even very expensive content management systems are less likely to support methods interfaces and protocols that are proprietary less well known not widely used or the like.

In addition many organizations store vast amounts of content. For a variety of reasons content management systems may not want to natively access these content repositories. Content repositories that cannot be natively accessed by a content management system because they are accessible only through methods interfaces and protocols not supported by the content management system are referred to herein as non compatible content repositories or external content repositories. Note that the phrase external content repository as used herein is equivalent to non compatible data repository and has no reference to a geographical logical or any other location of any particular content. An external content repository may for example be located within the same computer that also houses the content management system for which the repository is non compatible. To access content stored on non compatible repositories organizations often convert or import the content to native repositories such that they may access that content. Such conversion or importation however may be time consuming expensive and otherwise unwanted. For example organizations with terabytes of content stored on proprietary legacy systems or repositories may not have the resources to transfer that content to a native repository. Legacy systems or content include their broadest ordinary meaning and include those applications or content in which a company has already invested considerable time and money.

Compounding the foregoing problems and drawbacks is that many organizations still want to access such legacy repositories and legacy content using legacy applications that will continue to be employed for various tasks such as accounting customer tracking other proprietary systems or the like. Under these circumstances importation of content may not even be an option as the content needs to remain available to these legacy systems.

The foregoing drawbacks and difficulties may deter many organizations from pursuing either conversion or importation. Therefore such organizations may have some content accessible to some automated systems while other content remains usable only to legacy systems.

This disclosure describes one or more systems and methods for accessing potentially non compatible content repositories without requiring unduly expensive and time consuming content conversion or importation. Embodiments of the system allow registration of one or more repository interfaces also referred to as external services that may access content from one or more repositories such as for example a proprietary external repository. Note that the term external service does not indicate any geographical logical or any other location but refers to its function of accessing external repositories or non compatible content repositories an external service may be on the same computer on which the content management system resides or may be in a different location.

As described herein repository interfaces often perform the function of retrieving content from external storage repositories. A repository interface communicates with the external repository using for example one or more protocols understood by the external repository. Upon receiving content from the external repository the repository interface transfers the content to the requesting system or application. A repository interface may also be configured to retrieve content from non compatible repositories. A repository interface may be located on the local computer or an external computer accessible to the local computer via a network or other connection. Advantageously providing repository interfaces at external network locations allows multiple users to access a repository service without requiring installation of the repository service on any of the users computers thus simplifying deployment of the repository interface.

In one embodiment a content management system may access external reference metadata upon receipt of a request for content associated with the external reference metadata. The external reference metadata may include for example a name identifying the content the location of the repository that stores the content the repository interface used for accessing the content if any and the like. The external reference metadata may be combined in one field or may comprise several fields. In one embodiment a content management system manages the process of accessing both compatible and non compatible content repositories. The content management system may determine whether the repository is accessible through a known protocol such as for example a protocol native to the content management system. When the repository uses known protocols the content management system may natively access the content with or without using a repository interface. On the other hand when the content resides in a non compatible repository the content management system can retrieve location and or identification information from the external reference metadata and transmit a request to an appropriate repository interface. The interface accesses the appropriate repository requests the content and receives the content from the repository. The interface then returns the content to the requesting content management system. The content management system may also include a repository interface registry with recorded information about each repository interface. Such information may include a name that identifies each repository interface the location of each repository interface a template of a content identifier that each repository interface uses to uniquely identify content any parameters that may be necessary to identify content to each repository interface and the like.

After the content management system has acquired the requested content the content management system may advantageously launch an appropriate application for viewing editing or otherwise manipulating the content and or launch one or more workflow processes relating to the content or actions associated with the content. For example certain legacy applications may need to first open content stored in non compatible repositories before it can be used.

The foregoing request handling by the content management system may advantageously be in response to a user request for content a request by a software process or the like. For example a workflow process step or steps may be associated with the external reference metadata at design time. Then during execution of the process step or steps the content management system uses the external reference metadata to identify and retrieve the actual content through for example the repository interfaces and the non compatible repository.

In one embodiment the system may allow automated processes or users to add additional content to the metadata registry or additional repository interfaces to a repository interface registry. For example a graphical user interface or similar entry mechanism may prompt a user to enter information into fields of an entry in the metadata registry or the repository interface registry. Advantageously the foregoing capability provides for extension of the content management system such that the content management system may access additional non compatible content repositories. Advantageously the system allows the registration of repository interfaces designed and programmed by the provider of the content management system or even by third parties such as for example providers of non compatible content repositories. Advantageously registering a repository interface is not dependent upon knowledge of the internal workings of the repository interface. Advantageously in an embodiment a registrant knows a location of the repository interface an identification template that defines a format for a unique identifier that the repository interface uses to uniquely identify content and parameters that are entered to identify content. As used herein a unique identifier of specific content is an identifier that unambiguously identifies the specific content. Designers of repository interfaces may publish such information to aid registration of the repository interfaces.

Therefore embodiments of the foregoing system provide access to local and non local content stored within compatible and non compatible repositories through for example proxy metadata. Proxy metadata refers to metadata that may take the place of content within a content management system such that to a user or automated process of the content management system the metadata may appear to be stored within the content management system. In fact the proxy metadata may not contain content but a reference to that content to make it accessible such as a reference to content within a non compatible content repository. Additionally the proxy metadata may contain useful information for categorizing the content and searching for the content such as for example a title a creation date an author keywords for searching a content type and the like. Such access to non compatible content repositories may not be dependent upon content conversion or content importation. Furthermore embodiments of the system allow providers of content management systems and third parties to extend the content management system s access capabilities beyond its native access capability.

Each of the foregoing advantages or some of them together with additional advantages recognized by a skilled artisan in light of this disclosure may be achieved by various embodiments disclosed herein. A skilled artisan will appreciate in light of this disclosure how to practice the invention according to other embodiments that are not explicitly described herein. A skilled artisan will appreciate in light of this disclosure that each embodiment has its own characteristics and advantages making each embodiment appropriate under given circumstances. Thus the presence or lack of a certain characteristic or advantage in one embodiment does not in any way indicate the scope of the invention. Indeed nothing within this disclosure except for the claims should be interpreted to limit the scope of the invention. The claims alone and no other portion of this disclosure define the invention.

Often in processing environments where one or more of content management systems workflow processing systems web content management systems or the like organize store and process content content may be stored in any number and type of content repositories. An exemplary environment can include one or more processes applications or systems that govern some or all of content defining and handling definable business process execution security management versioning public and private web publication performance monitoring replication storage management legacy systems compatibility and the like. In some environments content may be added manipulated modified and deleted. Additionally metadata describing and identifying the content such as for example an identifier keywords for searching for the content a location for the content information about how where when or by whom content is collected stored formatted and the like may be added manipulated modified and deleted in place of or in addition to the content. For example the following disclosure includes systems and processes that in an exemplary embodiment execute within or in conjunction with content management software commercially available from FileNet Corporation of Costa Mesa Calif. marketed under the names of FileNet Business Process Manager FileNet Content Manager and FileNet Web Content Manager the details of which are incorporated herein by reference.

 Content as used herein is a broad term encompassing all types of content that can be managed by one or more of the foregoing systems as understood by a skilled artisan. Examples of such content include all types of electronic data including binary data structured data such as are stored in databases unstructured data such as image documents folders word processing documents CAD CAM documents source code files object code files web pages web page descriptions physical documents physical objects and the like. Content management systems are able to manage physical documents and objects not because the physical documents and objects reside within content management systems but because the content management systems store metadata about the physical documents and objects.

In the foregoing and other processing environments a need exists to access content across often differing content storage platforms or repositories. For example a legacy accounting application may create large amounts of financial content that could be useful to other processing systems. Moreover an executive may wish to compile reports or the like using the legacy financial content from within a content management system. Alternatively or in addition one or more workflow processes executed by a workflow processing system may dictate that a reviewer periodically review various specific legacy financial content. As can be seen from the foregoing example a need exists for a system that can provide access to the legacy content to a content management system and a workflow processing system.

The present disclosure includes a content manager that tracks metadata in order to supply client applications server applications and or workflow processing systems with the content they request even when such content is stored within a non compatible repository. The metadata includes external reference metadata containing location information and information as to one or more external services or repository interfaces that can act as the go between to ensure requests for content are filled and other information about the content such as for example a title a date and time created a date and time last modified an author keywords for searching and the like. By using the metadata and the one or more repository interfaces a content management system advantageously provides for seamless access to content stored on compatible and non compatible repository systems without expensively importing the content from the non compatible repositories to the compatible ones. As mentioned in the foregoing such importation may have negative consequences for existing and potentially highly needed legacy systems.

To facilitate a complete understanding of the invention the remainder of the detailed description describes the invention with reference to the figures wherein like elements are referenced with like numerals throughout.

In general the content management system may include a content manager one or more applications including client applications server applications or applications that are a combination of client applications and server applications and a workflow process engine . In an embodiment the content manager receives requests for content from the applications or the workflow process engine and processes the requests to obtain the requested content. For example the content manager may determine that the request is for content stored on the native repository and may simply request the content from the same through the communications network . Alternatively or additionally the native repository may be located on the same computer as the content management system in which case the content manager may directly request content from the native repository without using the communications network . On the other hand the content manager may determine that the requested content is stored within the external repository and may employ one or more of the external services to retrieve the content. For example the repository interface or external service may include a variety of functions processes or methods such as for example the displayed getExtContent method that communicates with the external repository to acquire the requested content. In one embodiment methods included in the external service such as the getExtContent method are implemented using Java servlets. However any programming language or scripting language capable of constructing functions methods procedures operations and the like for communicating with a content repository may be used. According to an embodiment legacy applications may continue to access modify and delete content from the external repository directly.

In an embodiment the content manager also includes a metadata registry and a repository interface registry . The metadata registry may comprise a data structure such as one or more tables or objects that associate various metadata with requestable content registered with the content management system . The metadata registry will be disclosed in greater detail herein with respect to the disclosure referencing .

The repository interface registry may comprise a data structure such as one or more tables or objects that associate each repository interface with location and identifier information usable to define a format for requests to the repository interface . The repository interface registry will be disclosed in greater detail herein with respect to the disclosure referencing .

The compatible repository may comprise one or more content storage systems native to the content management system storing all types of content. shows the compatible repository including exemplary content illustratively titled Native Document . Internally the content management system may identify the document using a code such as for example OOOOOA1. Similarly the external repository may comprise one or more content storage systems incompatible with the content management system storing all types of content. also shows the external repository including exemplary content illustratively titled Legacy Graphic . Again internally the content management system may identify this content by a code such as for example 00000B2. 

The communication network may comprise one or more computer networks including but not limited to one or more connected public or private networks including the World Wide Web and or the Internet LANs WANs public phone networks kiosk systems ATM or other communication systems messaging systems wired or wireless systems combinations of the same or the like that provide for data communication between two computing systems.

While the non compatible content repositories and the compatible content repositories are shown for ease of understanding as being separate physically a skilled artisan will appreciate in light of this disclosure that a single repository may contain both compatibly accessible content and non compatibly accessible content and that such a repository may be treated as a compatible repository when requesting compatible accesses and as non compatible when requesting non compatible accesses.

Generally the content management system manages a wide variety of content including for example all types of electronic data including binary data structured data such as are stored in databases unstructured data such as image documents word processing documents CAD CAM documents source code files object code files web pages web page descriptions physical documents physical objects and the like. The content management system provides tools that allow powerful processing of this content including indexing categorizing editing versioning comparing deleting approving and the like. A skilled artisan will appreciate in light of this disclosure that some of the foregoing processing features may not be available for certain forms of content.

In addition the content manager may be configured to load any received content into one or more of the applications or to launch one or more of the applications . As illustrated the applications may comprise client applications server applications or any combination of client and server applications. This allows a user to use the applications to for example view edit or otherwise manipulate the received content. Moreover the content manager may communicate with the workflow engine . The workflow engine will be understood by a skilled artisan in light of this disclosure to encompass its ordinary meaning in the broadest sense and to include a workflow engine as found in commercially available business process management systems such as FileNet Business Process Manager a business process management system publicly available from FileNet Corporation of Costa Mesa Calif.

In one embodiment the compatible repository ID may comprise an alphabetic numeric or alphanumeric code that identifies a particular content item to the content management system . The content title may provide a text string for identifying the data to a user much like a file name as used in a typical file system of an operating system. In one preferred embodiment the external reference metadata may identify if applicable a repository interface for accessing the content. A skilled artisan will appreciate in light of this disclosure that the external reference metadata could alternatively or additionally identify more than one repository interface that is able to access the content. If the access to the content is compatible with the content management system such as for example the illustrated Memo file the external reference metadata may be an empty set marked N A for not applicable or some similar indicator. The external reference metadata may include parameter values that assist in uniquely or otherwise identifying the content item and an appropriate repository interface.

A skilled artisan will appreciate in light of this disclosure that the various repository interfaces may have different identification schemes. As such the content of each parameter value may mean different things to different repository services. In addition the content format may indicate a format for viewing or manipulating the content such as in the exemplary metadata shown Microsoft Word s content format .doc TIFF for a type of image content and Oracle for Oracle database content.

It should be appreciated that the external reference metadata stored in the metadata registry may be transparent to the user or requesting application or process. Advantageously hiding from the user details about how content is accessed allows the user to view and manipulate content residing in compatible and non compatible repositories without having to appreciate the technical distinction between the two. Advantageously hiding the foregoing details may enhance any security associated with the content management system . In some cases it may be or become desirable for the user requesting application or requesting process to view the underlying external reference metadata or to understand what type of content he or she is viewing and the content management system may provide tools for allowing such detailed access. Such tools may include security features such as password protection that ensure that only authorized users have access.

The content manager refers to the metadata registry for sufficient identifying information to access the content requested by the user or process. According to an embodiment the content manager determines whether the content can be accessed through one or more compatible or non compatible repositories. In one embodiment if the external reference metadata field contains N A or a similar indication the repository may be determined to be compatible. If the content is stored on a compatible system the content manager may request the content directly from for example the compatible content repository .

As illustrated in the content item with the title Legacy Graphic content item has an entry for the external reference metadata and is therefore stored on a non compatible repository such as the repository . The content manager generates a unique identifier based on the external reference metadata . In one embodiment the external reference metadata is the identifier and retrieving it from storage constitutes generating the identifier. Alternatively or additionally the content manager may seek additional information from the repository interface registry to generate the identifier. is a table illustrating one embodiment of the repository interface registry . The repository interface registry may comprise records with a repository interface ID a repository interface location an identifier template and a plurality of parameter labels . The repository interface location may specify a path for locating the repository interface including the name of the method procedure function or the like executed by the repository interface to communicate with a content repository. For example the repository interface location for the repository interface may be getExtContent which as illustrated in is the name of the method executed by the repository interface . Additionally the repository interface location for a repository interface located on an external network site may have a path such as a URL that identifies the network site such as for example http myserver 8080 FileNet getExtContent. 

As indicated according to one embodiment a unique identifier for accessing particular content may be generated from information contained in the external reference metadata or from some combination of information contained in the external reference metadata and the repository interface registry . Such combination may be generated by an algorithm. An example of such a combination is now given with respect to the external reference metadata entry for the content item titled Legacy Graphic. As illustrated the external reference metadata for that content item is filenet extserviceX LibraryName Forms ID ABC Type Graphic Page 4. The filenet extserviceX portion of this external reference metadata indicates that this content item may be accessed using the External Service X illustrated on . According to one embodiment a unique identifier may be generated that combines some of the external reference metadata with some of the information stored in the repository interface registry such as for example the location which is in this example getExtContent. A generated identifier combining the location information with a portion of the external reference metadata may be for example getExtContent LibraryName Forms ID ABC Type Graphic

Advantageously generating an identifier by combining information from the metadata registry and the interface repository registry means that 1 the external reference metadata need not be directly invokable and 2 changes to information in the external repository interface such as for example changes to location information need not require changing large numbers of records within the metadata registry . Avoiding changing large numbers of records within the metadata registry which it is anticipated will generally be large containing potentially millions of records may save large amounts of computational resources. According to one advantageous embodiment the identifier may be dynamically generated at run time.

In an embodiment the identifier template defines a format that one or more of the repository interfaces use to uniquely identify content. The identifier template may have placeholders for receiving parameter values. The placeholders may be indicated for example by 0 1 2 or the like. In one embodiment the identifier template may have the form of a Uniform Resource Identifier URI as known in the art and defined in Request for Comment 2396 RFC 2396 a document distributed by the Network Working Group and first published in August 1998 which is herein incorporated by reference in its entirety. However an artisan will recognize from the disclosure herein many formats such as for example a standard Uniform Resource Locator URL known in the art. Following is one example of an identifier template in the form of a URI filenet extserviceX LibraryName 0 id 1 Type Graphic Page 2 

A skilled artisan will appreciate that filenet identifies a URI scheme extserviceX identifies an absolute path for the content such that this is the path from the root of an identified file system and various variables following the symbol define a query. The 0 1 and 2 are placeholders indicating where actual parameter values should be inserted to form an actual identifier. The placeholders may be filled by actual parameter values such as the parameter values illustrated with regard to an add content module user interface of such that the filled template forms a unique identifier or external reference metadata as shown in that when passed to the repository interface enables the repository interface to retrieve the requested content. In some embodiments relative paths may be used instead of absolute paths. Additionally a skilled artisan will appreciate in light of this disclosure that any form of unique identifier for content items may be used in addition to or in place of URIs. Preferably the form will be consistent throughout the content management system . For example whereas an identifier in the form of a URI is a single string an identifier may comprise more than one string. Such a multiple string identifier may be received by the repository interface in a series of transmissions or in a series of fields within one transmission. Herein string is used generically to refer to any grouping of data regardless of data type and may include for example numerical data types such as integers and real numbers or character data types string data types and the like.

As shown External Service X which is the repository interface corresponding to the content with a Legacy Graphic title is one entry in the repository interface registry . The location or method corresponding to this repository interface is getExtContent. For purposes of this example getExtContent corresponds to the repository interface . In one embodiment other repository interfaces may be located by use of a URL such as for example http myserver 8080 FileNet getExtContent. A skilled artisan will appreciate that any alternative way to designate the location of repository interfaces is acceptable so long as the system is able to interpret the location and access the repository interface.

Returning to the repository interface may request the content from the non compatible content repository . As illustrated the non compatible content repository has a document titled Legacy Graphic . As illustrated in metadata for this content is stored within the metadata registry . The non compatible content repository may process the content request and in response return the requested content the Legacy Graphic document to the repository interface . The repository interface may then transmit the requested content to the content manager . In one embodiment the content management system may load the requested content into one or more applications that the user may use to view edit or otherwise manipulate the requested content. In one embodiment the one or more applications may save the content within the content management system . In one embodiment after modification of the content using for example an application a repository interface may also be used to upload the modified content to an appropriate repository. The same repository interface as used to initially access the content or a different repository interface may be used for this purpose.

If in the decision block the system determines that the content is stored in a non compatible repository the system may generate in a block a unique identifier of the content to be accessed based on at least some of the external reference metadata or based on at least some of the external reference metadata in combination with at least some of the information stored in the repository interface registry . In one embodiment such as illustrated in the external reference metadata may already be in the form of a unique identifier. Thus according to one embodiment the unique identifier is generated by retrieving it from storage. Additionally according to one embodiment the unique identifier may be partially or wholly constructed at run time by an algorithm that utilizes the external reference metadata and information stored in the repository interface registry such as for example by replacing the URI scheme and absolute path information in the external reference metadata with corresponding repository interface location information based upon a search of the repository interface registry .

The generated unique identifier may then be transmitted to a repository interface configured to access the content as shown by a block . In one embodiment the content manager transmits the unique identifier to the repository interface. In one embodiment the content manager determines which repository interface to employ. The content manager may make this determination by referring to the external reference metadata that associates the selected content with a repository interface. In a block the content may be received from the repository interface. In one embodiment the content manager receives the content. Additionally the content may be displayed on a display device. Additionally the content may be provided to a human user using a software application appropriate for the content type of the content.

In a block the accessed content may be loaded into an application for further processing. In one embodiment the content manager performs this loading. The further processing may include in a block manipulation of the content. The further processing may include saving the content within the content management system . After processing any modified content may be uploaded to the repository from whence it came as shown in an optional block . The repository interface that initially accessed the content may perform this operation or a different repository interface may be used.

Advantageously each repository interface may contain all code necessary to access a non compatible content repository. Thus advantageously the content manager may not participate in the accessing of non compatible content repositories beyond forwarding a request to a repository interface and waiting for a reply. In some embodiments the content manager may perform additional access functions beyond the foregoing. Advantageously the content manager may be able to access a repository interface as soon as the repository interface has been registered without requiring any additional modification to the content manager or the content management system . In this way the repository interface registration module may provide a relatively straightforward user friendly way to extend the capacity of a content management system to access content. In some embodiments modifications to the content manager or the content management system in addition to registering an additional repository interface may be performed.

In one embodiment each repository interface handles security issues related to accessing content from a non compatible content repository. For example a repository interface may identify itself to a non compatible content repository using a user name and password or may use any other security mechanism that will be appreciated by an artisan in light of this disclosure. In this way the system advantageously ensures security and integrity of the content sought without requiring the user to know access parameters such as passwords or the like for every repository to be accessed. Additionally access parameters may be stored in a format that cannot be read by the user such as by being encrypted to further enhance security. Advantageously restricting the number of people that must know access parameters and that could potentially abuse them enhances overall security.

A skilled artisan will appreciate in light of this disclosure that the various components described herein can generally be combined into fewer components or divided into more components without fundamentally altering the structure or function of the embodiments described. For example the functions of the content manager described herein may be performed by the content manager alone or the content manager may be divided into multiple modules. Additionally the workflow process engine may be part of the content manager . Additionally the metadata registry and the repository interface registry or one of them may be separated from the content manager . Furthermore the utility modules or one of them may be within the content management system . Moreover one or more repository interfaces may be provided within the content manager . Additionally compatible repositories non compatible repositories or both may be housed within the content management system itself. All such embodiments and any other such embodiments in which the components described herein are combined or divided but retain their properties do not fundamentally alter the structures or functions described herein and are within the scope of this disclosure.

In light of this disclosure a skilled artisan will appreciate that the disclosed system provides a secure user friendly way to access compatible and non compatible repositories of content without requiring each user to understand where each piece of content is located or which protocol is used to access the content. Furthermore the disclosed system reduces or eliminates an organization s need to convert or import content stored in legacy systems.

The foregoing describes embodiments of the invention but does not define the invention. While several features of the various embodiments are advantageous no such feature is an essential limitation of the invention. The claims alone and no other part of this disclosure define the scope of the invention.

