---

title: Acceptance of inputs from various interfaces to a telephony system
abstract: A telephony system that accepts inputs, such as account codes, from a variety of devices and interfaces. The system includes a server with a telephony management software (TMS) unit, a telephony application programming interface (TAPI) unit, and an application unit. The application unit includes a control module, a call status module, an endpoint interface module, a storage interface module, a call transfer module, a TAPI interface module, a configuration module, and an extension library module. A server is capable of prompting several devices for an input and then accepting an input from any of the devices. Thus, a server enables a user to initiate a phone call on one device and then input information using a different device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08284910&OS=08284910&RS=08284910
owner: ShoreTel, Inc.
number: 08284910
owner_city: Sunnyvale
owner_country: US
publication_date: 20081008
---
This application is a continuation of U.S. patent application Ser. No. 10 807 967 titled Acceptance Of Inputs From Various Interfaces Of A Telephony System filed Mar. 23 2004 which is incorporated by reference herein in its entirety.

This invention relates generally to distributed telephony and more particularly to servers that accept client inputs from various interfaces and devices.

Enterprises often have several offices or call centers that are located in a plurality of locations. To interconnect all of these sites enterprise telephony systems have been developed. Enterprise telephony systems which consist of a distributed set of voice switches and servers offer enterprise applications enabled by the integration of computer systems with telephony services. The software that supports the computer integrated functionality is generally implemented as a client server environment in which the participants or clients distributed telephony users communicate directly with the server. Computer integrated features rely not only on a server s application platform but also on the availability of the network that connects the switches server and application services.

Account codes are one example of an enterprise application. Account codes enable an enterprise to restrict phone calls made by employees and to associate phone calls with various entities such as customers. This is accomplished by requiring a telephony user to enter an account code before his call can be completed. Once a phone call has been associated with an entity the enterprise can use this information for example to track time spent communicating with customers or to bill customers for phone calls. Depending on the situation a phone call may require an account code or an account code may be optional.

In general account codes are implemented as follows A user initiates a phone call thereby generating a phone call request. A server receives the request and determines whether an account code is necessary or optional for the phone call. If an account code is necessary or optional the server prompts the user for an account code. In addition if an account code is necessary the server flags the phone call accordingly. The phone call is completed once the user has entered a valid account code. The phone call may also be completed if an account code is optional and the user has declined to enter an account code.

A user may initiate a phone call using any of a variety of devices. Each of these devices is different and has its own advantages and disadvantages for the user to initiate a conversation. These devices include both endpoints such as analog phones Internet Protocol IP based phones and software phones softphones and software applications that control these endpoints. These software applications sometimes known as call managers run on computers and offer users an interface through which the users may perform call related functions such as transferring calls placing calls on hold and obtaining caller ID information in addition to initiating calls.

Assume that a user initiates a phone call using a first device such as an endpoint that will be used during the phone call. Traditionally if the user wants to enter an account code the account code must be entered using the first device. However the user may prefer to use a second device to enter the account code such as a call manager that has a user interface that enables the user to enter a name associated with an account code e.g. a customer name rather than the account code itself. Similarly a user who has initiated a call using a call manager may wish to enter an account code using an endpoint. Traditional enterprise telephony systems require a user to enter an account code using the same device that was used to initiate the phone call.

What is needed is a system and method that enables a user to enter an account code using a device other than the device that was used to initiate the phone call.

Computer integrated functionality is implemented using a server in a distributed telephony environment. The server includes a telephony management software TMS unit a telephony application programming interface TAPI unit and a computer integrated functionality unit. The server is coupled to one or more endpoints such as analog phones IP based phones and software phones. The server is also coupled to one or more software applications that control these endpoints. These endpoints and software applications may be used to input information into the telephony system that will then be associated with a call. Examples of such information are account codes and authorization codes. The server is also coupled to a storage device that stores such information.

When a server receives a request to make a call it determines whether information may be associated with the call. If information may be associated with the call the server sends a signal to the device that initiated the call and a signal to the endpoint or software application that is associated with this device. The signals cause the device and the associated endpoint or software application to prompt a user for input. The user may then input the information using either the device or the associated endpoint regardless of which was used to initiate the call. The server then receives the information and determines whether it is valid. If it is the server attaches the information to the call and completes the call.

Further features of the invention its nature and various advantages will be more apparent from the accompanying drawings and the following detailed description.

The present invention is now described more fully with reference to the accompanying figures in which several embodiments of the invention are shown. The present invention may be embodied in many different forms and should not be construed as limited to the embodiments set forth herein. Rather these embodiments are provided so that this disclosure will be thorough and complete and will fully convey the invention to those skilled in the art.

One skilled in the art will recognize that methods apparatus systems data structures and computer readable media implement the features functionalities or modes of usage described herein. For instance an apparatus embodiment can perform the corresponding steps or acts of a method embodiment.

For simplicity purposes the invention is described in the context of inputting account codes into a telephony system. However the invention may be used to input any type of information into a telephony system such as authorization codes and numbers for navigating automated message systems.

The first site A includes a server a switch A two endpoints analog phone A and IP phone a device running a call manager software application and a storage device . The switch A represents a Voice over Internet Protocol VoIP device to which a number of endpoints e.g. telephone devices can be coupled such as analog phones IP phones and software phones. In the illustrated embodiment the switch A is coupled to the network . The switch A is also coupled to the public switched telephone network PSTN via an analog or digital trunk line e.g. a T1 or E1 interface . In the illustrated configuration the switch A provides an interface for calls originating from or terminating on the PSTN .

An endpoint enables a user to carry on a phone call. Although in the illustrated embodiment the first site A has two endpoints one analog phone A and one IP phone in other embodiments the first site A has different numbers of endpoints and different types of endpoints such as software phones softphones . An endpoint is coupled to a switch a server or both. An endpoint has a user interface to send data to and receive data from a user. In one embodiment this interface enables a user to specify an account code based on an account name and also enables a user to search for an account code or account name. A set of account codes and names to search may be accessed through the server or it may be stored on the endpoint itself.

The analog phone A has for example a Telephone User Interface TUI that sends data through a speaker and receives data through a microphone and a keypad. The IP phone has for example both a TUI and a graphical user interface that sends data through a display device associated with the IP phone . In one embodiment the IP phone s graphical user interface also receives data from a touchscreen display device associated with the IP phone . A softphone not shown has for example a software application that runs on a computer and sends data through a display device and a speaker and receives data through a microphone a keyboard and a pointing device.

A device running a call manager software application such as a computer controls one or more endpoints with which it is associated. The call manager offers a user an interface through which the user may perform call related functions such as initiating calls transferring calls placing calls on hold and obtaining caller ID information.

In one embodiment the call manager enables a user to enter an account code that will be associated with a phone call. B and C are graphical user interfaces of a call manager according to one embodiment of the present invention. In one embodiment such as the embodiment shown in a user may enter an account code. In another embodiment such as the embodiment shown in a user may choose an account code from several displayed account codes account names or pairs of account code and account names. If the list of possible account codes or account names is large the user may filter the list by typing in one or more characters of the desired account code or account name as illustrated in . The device running the call manager may access the set of account codes and names through the server or it may store this information itself.

Although in the illustrated embodiment the first site A has only one call manager in other embodiments the first site A has a different number of call managers . Also more than one call manager may control the same endpoint. The association between a call manager and an endpoint that it controls is accessed through the server .

The server is configured to implement features or functions of the present invention. The server is coupled to the network and may also be coupled to one or more endpoints such as IP phone . The server will be further discussed below with reference to .

The storage device contains account code information including account codes and the names of customers associated with the account codes. In the illustrated embodiment the storage device is coupled to the server . In an alternate embodiment the storage device is coupled to the network .

One skilled in the art will appreciate that additional networking devices can be added to the first site A for example if needed to support additional endpoints servers or other systems. For example the first site A may include a second switch and an edge router to couple the first site A to the network and to provide local area connectivity for the first and second switches. One skilled in the art will also recognize that numerous configurations of switches and communications links are contemplated. For example PSTN links can be coupled to multiple switches at several points within the topology and softswitches can also be used.

The second site B similarly includes an endpoint analog phone B and a switch B. The configuration of the second site B demonstrates that a server is not required for each site. Switch B of the second site B can be managed by server that is illustrated in the first site A. A call can involve more than one switch. For example a call that originates from the PSTN and terminates on an endpoint that is communicatively coupled to switch B of the second site B involves two switches switch A of the first site A and switch B of the second site B. In addition each switch may be managed by a different server .

In one embodiment of the present invention the network is a partially public or a wholly public network such as the Internet. The network can also be a private network or include one or more distinct or logical private networks e.g. virtual private networks or wide area networks . Additionally the communication links to and from the network can be wireline or wireless i.e. terrestrial or satellite based transceivers . In one embodiment of the present invention the network is an IP based wide or metropolitan area network.

Server also includes a memory . The memory includes program instructions or functional units that implement features of the present invention. Specifically the memory includes a telephony management software TMS unit and a telephony application programming interface TAPI unit .

In one embodiment the memory also includes one or more application units that interact with the TMS unit by using the TAPI unit to enable a specific computer integrated function. An application unit uses the TAPI unit to exchange data with the TMS unit . The TMS unit is able to communicate with and manage one or more switches. For example with reference to the TMS unit included in the server can manage the switches A B. Through the TAPI unit the TMS unit presents an application with a computer telephony integration CTI view of these switches A B. This allows the application to manage the switches A B. Such switches A B can operate without an associated TMS unit if CTI features are not being used.

In the illustrated embodiment the server includes one application unit account code ACC unit . In general the ACC unit handles a request to make a call prompts for an account code and completes the call. The functionality of the ACC unit will be further described below with reference to .

In one embodiment ACC unit is implemented as a service that is used by the TMS unit . Communication or data exchange between the TMS unit and the ACC unit is further described with reference to . Although ACC unit is illustrated as executing on the server ACC unit may be distributed among computing devices as is known to one of skill in the art. For example the functionality enabled by ACC unit may be implemented in a client server fashion by having the client user s local system perform some functions and the server ACC unit perform others.

The modules include program instructions that can be executed on for example processor to implement the features or functions of the present invention. The modules are typically stored in a memory such as memory . For server the program instructions can be distributed on a computer readable medium or storage volume. The computer readable storage volume can be available via a public network a private network or the Internet. Program instructions can be in any appropriate form such as source code object code or scripting code.

The ACC control module centrally controls the operation and process flow of ACC unit transmitting instructions and data to as well as receiving data from each module . Details of its operation will be discussed below with reference to .

The call status module determines whether an account code is required or optional for a given call. In order to do this the call status module queries the TMS unit through the TAPI interface module and the TAPI unit . This gives the call status module access to the call on the switch itself As previously described the TAPI interface module enables other modules to use the server s TAPI unit .

The endpoint interface module sends data to and receives data from endpoints such as analog phone A and IP phone and devices running call manager software that controls these endpoints. Endpoint interface module communicates with a call manager directly while it communicates with an endpoint directly or via a switch depending on the type of the endpoint. For example endpoint interface module communicates with IP phone directly but communicates with analog phone A through switch A.

Data sent to an endpoint or a call manager comprises information such as for example whether an account code is required or optional and if an account code has been received whether the code is valid or invalid. Data received from an endpoint comprises information such as for example an account code to use for the phone call.

The storage interface module accesses information stored in storage device . As described above storage device contains account code information including account codes and the names of customers associated with the account codes.

The call transfer module completes a phone call by transferring it to the call s destination phone number.

The configuration module provides information about how the ACC control module should operate. For example the configuration module determines how long the ACC control module should wait for an account code to be entered before the ACC control module times out and how many times an invalid account code may be entered before a phone call is terminated. Lastly the extension library module provides common functions that are used by the other modules.

Details of modules will be further explained with reference to . illustrates a method performed by a server for handling a request to make a call prompting for an account code and completing the call according to one embodiment of the present invention. The method of would be performed once for each call coming into a site. In one embodiment different calls are handled in parallel.

Before the method of begins a switch A in the local site A receives a request to make a call. The request is associated with a user. The switch determines whether account codes are enabled for the call. If account codes are not enabled then the switch processes the call normally. If account codes are enabled then the switch diverts the call to the server and method begins.

The ACC control module determines which devices endpoints and call managers are associated with the user who initiated the call. The ACC control module then sends a signal to each of these devices using the endpoint interface module . These signals may be identical or they may differ based on the destination device. These signals cause the devices to prompt the user for an account code and in one embodiment indicate whether an account code is required or optional.

In traditional telephony systems only the device that was used to initiate the call prompts the user for an account code. In contrast in one embodiment the ACC control module sends signals to multiple devices including devices that were not used to initiate the call causing the devices to prompt the user for input. The ACC control module then instructs the endpoint interface module to wait for either a reply from a device or a timeout whichever occurs first. In one embodiment a reply indicates which device generated it.

In this way a user can initiate a call on one device and then use a different device to enter an account code. For example a user may want to initiate a call on an analog phone because he plans to use the phone during the conversation. Then when the user realizes that he must enter an account code he can use a call manager to search for the appropriate account code using a software account code directory. Once he has located the account code he can merely click on it using the call manager rather than entering the code into the analog phone digit by digit. As another example a user may initiate a call using a call manager and then enter an account code using an IP based phone .

If the endpoint interface module times out first then the ACC control module instructs the call status module to determine whether an account code is required for the call. If an account code is not required then the ACC control module processes the call normally using the call transfer module and the method ends. If an account code is required then the method passes to step which is described below.

If a reply is received first then the ACC control module determines whether the received reply contains a valid account code. The ACC control module does this by using storage interface module to check whether the storage device contains the received account code. If multiple account codes are received e.g. one account count from each device that prompted the user then the ACC control module checks the validity of each one in the order that is was received until it has found a valid one. If the received account code is valid then the ACC control module attaches the account code to the phone call and sends a signal to the devices that are associated with the user who initiated the call using the endpoint interface module that it no longer needs an account code. After a device has received this signal it stops prompting the user for an account code. Then the ACC control module processes the call normally using the call transfer module and the method ends.

If the received account code is not valid then the ACC control module determines whether the maximum number of attempts to enter a valid account code has been reached. If the maximum number has not been reached then the method returns to step and the ACC control module again prompts the devices for an account code using the endpoint interface module . If the maximum number has been reached then the phone call is disconnected and the method ends.

Having described embodiments of a server with account code capability for distributed IP telephony systems which are intended to be illustrative and not limiting it is noted that modifications and variations can be made by persons skilled in the art in light of the above teachings. It is therefore to be understood that changes may be made in the particular embodiments of the invention disclosed that are within the scope and spirit of the invention as defined by the appended claims and equivalents.

