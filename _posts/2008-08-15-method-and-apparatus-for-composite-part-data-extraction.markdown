---

title: Method and apparatus for composite part data extraction
abstract: A computer implemented method for generating a section cut in a model of a part. A location on the part is identified. An axis system is created at the location in the model of the part, wherein the axis system has an axis that is normal to a surface at the location in the model of the part. Section cuts intersecting the surface and plies below the surface are created. A plurality of sampling points on the surface is identified based on the section cuts. Core sampling is preformed using the plurality of sampling points to generate sampled data.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08442804&OS=08442804&RS=08442804
owner: The Boeing Company
number: 08442804
owner_city: Chicago
owner_country: US
publication_date: 20080815
---
The present invention is a continuation in part CIP of and claims priority from the following patent application entitled Method and Apparatus for Composite Part Data Extraction Ser. No. 11 924 107 filed Oct. 25 2007 now U.S. Pat. No. 8 321 180 and is related to the following patent application entitled Method and Apparatus for Composite Part Data Extraction Ser. No. 12 192 162 filed Aug. 15 2008 now U.S. Pat. No. 8 285 407 and all of which are incorporated herein by reference.

The present disclosure relates generally to composite parts and in particular to a method and apparatus for obtaining information about composite parts. Still more particularly the present disclosure relates to a computer implemented method apparatus and computer usable program product for obtaining ply lay up data for composite parts.

Aircraft are being designed and manufactured with ever increasing percentages of composite materials. Some aircraft may have more than fifty percent of its primary structure made from composite materials. Composite materials are used in aircraft to decrease the weight of the aircraft. This decreased weight improves performance features such as payload capacities and fuel efficiencies. Further composite materials provide longer service life for various parts in an aircraft.

Composite materials are strong light weight materials created by combining two or more dissimilar components. For example a composite may include fibers and resins. The fibers and resins are combined and cured to form a composite material.

Further by using composite materials parts of an aircraft may be created in larger sections with fewer pieces eliminating many fasteners. For example the fuselage of an aircraft may be created in cylindrical sections with integral stringers. Another example is a stabilizer of an aircraft which may be created as a single piece incorporating spars and upper and lower skins with integral stiffeners.

When performing repairs on damaged aircraft composite parts ply lay up data such as an identification of the number of plies orientation of each ply the location of each ply within the composite part the ply material and the cured part thickness is needed to replace the damaged material.

In some instances two dimensional drawings may be present in a manual. Details of composite parts in these drawings include ply lay up and part thickness data. This information includes an identification of each ply the orientation of the ply the location of the ply in the lay up the ply material as well as thickness information for the part itself. This type of data is typically used to perform repairs to composite parts.

In one advantageous embodiment a computer implemented method is present for generating a section cut in a model of a part. A location on the part is identified. An axis system is created at the location in the model of the part wherein the axis system has an axis that is normal to a surface at the location in the model of the part. Section cuts intersecting the surface and plies below the surface are created. A plurality of sampling points on the surface is identified based on the section cuts. Core sampling is preformed using the plurality of sampling points to generate sampled data.

In another advantageous embodiment an apparatus comprises a data extraction tool and a data processing system. The data extraction tool is capable of identifying a location on a part creating an axis system at the location in the model of the part wherein the axis system has an axis that is normal to a surface at the location in the model of the part creating section cuts intersecting the surface and plies below the surface identifying a plurality of sampling points on the surface based on the section cuts and performing core sampling using the plurality of sampling points to generate sampled data. The data extraction tool executes on the data processing system.

In yet another advantageous embodiment a computer program product comprises a computer recordable storage medium and program code stored on the computer recordable storage medium. Program code is present for identifying a location on a part. Program code also is present for creating an axis system at the location in a model of the part wherein the axis system has an axis that is normal to a surface at the location in the model of the part. Program code also is capable of creating section cuts intersecting the surface and plies below the surface. Program code is present for identifying a plurality of sampling points on the surface based on the section cuts. Program code also is capable of performing core sampling using the plurality of sampling points to generate sampled data.

The features functions and advantages can be achieved independently in various embodiments of the present disclosure or may be combined in yet other embodiments in which further details can be seen with reference to the following description and drawings.

Referring more particularly to the drawings embodiments of the disclosure may be described in the context of the aircraft manufacturing and service method as shown in and aircraft as shown in . Turning first to a diagram illustrating an aircraft manufacturing and service method is depicted in accordance with an advantageous embodiment. During pre production exemplary aircraft manufacturing and service method may include specification and design of aircraft in and material procurement .

During production part and subassembly manufacturing and system integration of aircraft in takes place. Thereafter aircraft in may go through certification and delivery in order to be placed in service . While in service by a customer aircraft in is scheduled for routine maintenance and service which may include modification reconfiguration refurbishment and other maintenance or service.

Each of the processes of aircraft manufacturing and service method may be performed or carried out by a system integrator a third party and or an operator. In these examples the operator may be a customer. For the purposes of this description a system integrator may include without limitation any number of aircraft manufacturers and major system subcontractors a third party may include without limitation any number of venders subcontractors and suppliers and an operator may be an airline leasing company military entity service organization and so on.

With reference now to a diagram of an aircraft is depicted in which an advantageous embodiment may be implemented. In this example aircraft is produced by aircraft manufacturing and service method in and may include airframe with a plurality of systems and interior . Examples of systems include one or more of propulsion system electrical system hydraulic system and environmental system . Any number of other systems may be included. Although an aerospace example is shown different advantageous embodiments may be applied to other industries such as the automobile industry and the boat and ship building industry.

Apparatus and methods embodied herein may be employed during any one or more of the stages of aircraft manufacturing and service method in . For example parts or subassemblies produced in part and subassembly manufacturing in may be fabricated or manufactured in a manner similar to parts or subassemblies repaired or modified while aircraft is in service in .

Also one or more apparatus embodiments method embodiments or a combination thereof may be utilized during production stages such as part and subassembly manufacturing and system integration in for example without limitation by substantially expediting the assembly of or reducing the cost of aircraft . Similarly one or more of apparatus embodiments method embodiments or a combination thereof may be utilized while aircraft is in service in or during maintenance and service in . More specifically the different advantageous embodiments may be used during maintenance and service in to provide ply lay up data for use in maintenance operations such as for example repair or modification of composite parts.

Turning to a diagram illustrating a cross section of a portion of an aircraft is depicted in accordance with an advantageous embodiment. In this example part is a composite part having plies . Part may be for example without limitation a portion of a fuselage a wing a stabilizer or some other portion of an aircraft.

In this particular example damage has occurred in section . Plies may have different orientations and may include different materials in this particular example. To perform maintenance and or repair on section of part knowledge of the ply lay up data may be needed to properly repair part . Ply lay up data is data describing the plies within a part. Ply lay up data may include for example without limitation ply stacking sequences ply orientation and ply materials. This type of data may be found within three dimensional models containing the composite part.

In this particular example plies and are used to perform the repair of section . These different plies are selected to have the same sequence orientation and materials to match up to plies within plies to perform the repair in this example.

The different illustrative embodiments recognize that although two dimensional drawings are currently used if those drawings are unavailable maintenance on composite parts would become more difficult. The different illustrative embodiments recognize that one potential solution is to extract the ply lay up data from the three dimensional models themselves. These three dimensional models are engineering data sets that may be managed by a computer aided design program.

The different illustrative embodiments recognize that one potential solution to this problem is that the data for the composite parts may be extracted from the three dimensional models by the manufacturer or suppliers in advance for every composite part or on demand during fleet support of the aircraft.

These types of solutions however have been recognized by the advantageous embodiments to be cost prohibitive in many cases depending on the quantity of the composite parts for a particular aircraft. Further providing this information on demand may not comply with service level agreements between the aircraft manufacturer and customers.

Another potential solution is to provide the three dimensional models to the customers. This potential solution is recognized by the different illustrative embodiments also as being undesirable in many cases because of the requirements for the customers. For example to view the models customers would require access or use of computer aided design programs or viewers for those programs. These types of programs and viewers may have a cost that is unattractive to customers. Also in addition to the cost for the additional software needed to extract the information the customers also would need to have users that are trained to use the programs to locate the composite lay up data for particular locations in the aircraft.

Another potential issue recognized by the advantageous embodiments is that the three dimensional models or information in the three dimensional models may be trade secret. This data may include specification and performance information about the aircraft. Other trade secret information in these models includes for example without limitation architectural and structural information for the different parts of the aircraft as well as their integration to form the aircraft. As a result a manufacturer is often unwilling to provide these models to customers or maintenance companies.

Another potential issue recognized by the advantageous embodiments is that the three dimensional models or information in the three dimensional models may be regulated by export laws in the United States and other countries. This data may include production or development information about composite materials or laminates. Other export controlled information in these models includes for example without limitation composite material properties and the design of tools used to manufacture composite parts. As a result a manufacturer is often legally unable to provide these models to customers or maintenance companies.

In recognizing the potential for an absence of two dimensional drawings and the other issues related with existing three dimensional models the different advantageous embodiments provide a method apparatus and computer program product for obtaining ply lay up data for composite parts.

With reference now to exemplary diagrams of data processing environments are provided in which advantageous embodiments may be implemented. It should be appreciated that are only exemplary and are not intended to assert or imply any limitation with regard to the environments in which the different embodiments may be implemented. Many modifications to the depicted environments may be made.

Network data processing system is a network of computers in which the illustrative embodiments may be implemented. Network data processing system contains network which is the medium used to provide communications links between various devices and computers connected together within network data processing system . Network may include connections such as wire wireless communication links or fiber optic cables.

In the depicted example server and server connect to network along with storage unit . In addition clients and connect to network . Clients and may be for example workstation computers or network computers. In the depicted example server provides data such as boot files operating system images and applications to clients and . Clients and are clients to server in this example.

As depicted client is located in maintenance facility while server is located in manufacturer facility . Maintenance facility is a location where maintenance and repairs may be performed on aircraft. The maintenance and repairs are referred to collectively as maintenance operations. Manufacturer facility is a location where three dimensional models for aircraft may be created and or maintained.

In these different examples server in manufacturer facility may provide ply lay up data for use in performing maintenance and repairs on aircraft to client at maintenance facility . Manufacturer facility may be owned by the same or separate entities from maintenance facility .

The ply lay up data may be provided using network data processing system in a manner that avoids some or all of the issues associated with an unavailability of two dimensional drawings and manuals or another hard copy form. For example this data may be provided in a manner that avoids having a customer purchase and operate computer aided design software to view three dimensional models.

The different embodiments also may be used to limit the amount of data that is provided to other parties or users. The manufacturer of the aircraft does not need to supply three dimensional models that may contain confidential data to customers. Instead only data relating to the ply lay up of the part for which maintenance is being performed is provided in the different examples.

Network data processing system may include additional servers clients and other devices not shown. In the depicted example network data processing system is the Internet with network representing a worldwide collection of networks and gateways that use the Transmission Control Protocol Internet Protocol TCP IP suite of protocols to communicate with one another.

At the heart of the Internet is a backbone of high speed data communication lines between major nodes or host computers consisting of thousands of commercial governmental educational and other computer systems that route data and messages. Of course network data processing system also may be implemented as a number of different types of networks such as for example an intranet a local area network LAN or a wide area network WAN . is intended as an example and not as an architectural limitation for the different embodiments.

With reference now to a block diagram of a data processing system is shown in which illustrative embodiments may be implemented. Data processing system is an example of a computer such as server or client in in which computer usable program code or instructions implementing the processes may be located for the illustrative embodiments. In this illustrative example data processing system includes communications fabric which provides communications between processor unit memory persistent storage communications unit input output I O unit and display .

Processor unit serves to execute instructions for software that may be loaded into memory . Processor unit may be a set of one or more processors or may be a multi processor core depending on the particular implementation. Further processor unit may be implemented using one or more heterogeneous processor systems in which a main processor is present with secondary processors on a single chip. As another illustrative example processor unit may be a symmetric multi processor system containing multiple processors of the same type.

Memory in these examples may be for example a random access memory or any other suitable volatile or non volatile storage device. Persistent storage may take various forms depending on the particular implementation. For example persistent storage may contain one or more components or devices. For example persistent storage may be a hard drive a flash memory a rewritable optical disk a rewritable magnetic tape or some combination of the above. The media used by persistent storage also may be removable. For example a removable hard drive may be used for persistent storage .

Communications unit in these examples provides for communications with other data processing systems or devices. In these examples communications unit is a network interface card. Communications unit may provide communications through the use of either or both physical and wireless communications links.

Input output unit allows for input and output of data with other devices that may be connected to data processing system . For example input output unit may provide a connection for user input through a keyboard and mouse. Further input output unit may send output to a printer. Display provides a mechanism to display information to a user.

Instructions for the operating system and applications or programs are located on persistent storage . These instructions may be loaded into memory for execution by processor unit . The processes of the different embodiments may be performed by processor unit using computer implemented instructions which may be located in a memory such as memory . These instructions are referred to as program code computer usable program code or computer readable program code that may be read and executed by a processor in processor unit . The program code in the different embodiments may be embodied on different physical or tangible computer readable media such as memory or persistent storage .

Program code is located in a functional form on computer readable media and may be loaded onto or transferred to data processing system for execution by processor unit . Program code and computer readable media form computer program product in these examples. In one example computer readable media may be in a tangible form such as for example an optical or magnetic disc that is inserted or placed into a drive or other device that is part of persistent storage for transfer onto a storage device such as a hard drive that is part of persistent storage . In a tangible form computer readable media also may take the form of a persistent storage such as a hard drive or a flash memory that is connected to data processing system . The tangible form of computer readable media is also referred to as computer recordable storage media.

Alternatively program code may be transferred to data processing system from computer readable media through a communications link to communications unit and or through a connection to input output unit . The communications link and or the connection may be physical or wireless in the illustrative examples. Computer readable media also may take the form of non tangible media such as communications links or wireless transmissions containing the program code.

The different components illustrated for data processing system are not meant to provide architectural limitations to the manner in which different embodiments may be implemented. The different illustrative embodiments may be implemented in a data processing system including components in addition to or in place of those illustrated for data processing system . Other components shown in can be varied from the illustrative examples shown.

As one example a storage device in data processing system is any hardware apparatus that may store data. Memory persistent storage and computer readable media are in a tangible form. In another example a bus system may be used to implement communications fabric and may be comprised of one or more buses such as a system bus or an input output bus.

Of course the bus system may be implemented using any suitable type of architecture that provides for a transfer of data between different components or devices attached to the bus system. Additionally a communications unit may include one or more devices used to transmit and receive data such as a modem or a network adapter. Further memory may be for example memory or a cache such as found in an interface and memory controller hub that may be present in communications fabric .

The different advantageous embodiments provide a computer implemented method apparatus and computer usable program product for locating ply lay up data for a composite part. In the different examples a designation of a location for a composite part is received. The location of the composite part is used to extract ply lay up data for a section of the composite part within a three dimensional model to form extracted ply lay up data sent to the requester.

In these examples this extracted ply lay up data is sent in a format allowing the requester to perform maintenance on the composite part without having access to a three dimensional model containing the composite part. Further the different advantageous embodiments provide this information without requiring a user or operator to have access to or have knowledge to operate a computer aided design program.

Turning now to a block diagram illustrating components used to provide ply lay up data for a composite part is depicted in accordance with an advantageous embodiment. In this example maintenance environment is an environment in which lay up data for composite parts may be identified for use in performing maintenance operations.

As depicted maintenance environment includes client server and server . Client includes part application and user interface . Server includes data extraction tool and server contains part file generation tool . In these examples client may be for example client located in maintenance facility in . Server may be implemented using server in maintenance facility in . Also server may be implemented using the same server or another server such as server in .

These maintenance operations may include repairs of composite parts such as composite part in . Part application may access part files database to identify the composite part in part files database . Further when a user or other operator of part application selects or identifies a part part application may display a three dimensional representation of the part on user interface to identify a location on the composite part for maintenance. For example the user may select a particular location on a three dimensional object of a part displayed through user interface to indicate the location at which a repair or other maintenance operation is to occur for that composite part.

The selection of this location generates location data . In these examples location data may be three dimensional coordinates defining a location on the composite part that needs maintenance. More specifically location data includes the location in X Y and Z coordinates. Of course other coordinate systems may be used depending on the particular implementation.

As another example a spherical coordinate system may be used to identify the location of the composite part. Further location data also may include an identification of the composite part. This identification may be for example a part number. Location data also may include for example without limitation an identification of the type of aircraft or even a specific aircraft using a tail number.

Data extraction tool executing on server receives location data from part application . Data extraction tool may be a separate program or application which makes calls to a computer aided design application to obtain access to three dimensional models. In other embodiments data extraction tool may take the form of a process that is part of the computer aided design application. In these examples the computer aided application may be for example CATIA V5R17. This type of program is available from Dassault Systemes.

When implemented as a separate application data extraction tool may access files for three dimensional models within three dimensional model database in a number of different ways. For example data extraction tool may directly access these files. In other embodiments data extraction tool may make calls to the computer aided design application to obtain and manipulate data about plies.

In these examples standard computer aided design application programming interfaces are used to obtain the composite part in the document the sequences in the part the plies in a sequence the surface that supports the ply the geometry of the ply the materials the ply is made of and the orientation of the ply. Data extraction tool identifies a three dimensional model containing the composite part within three dimensional model database using location data .

Additionally data extraction tool extracts a set of sections from three dimensional model database to generate output . The set of sections may be one or more sections in these examples. The number of sections extracted may vary depending on different implementations. These sections may be selected to contain and be around the location identified in location data . In the depicted examples the set of sections is selected to be sufficient to provide enough information for performing the maintenance operation.

In these examples a section is a cross section of the composite part. The section is generated perpendicular to the surface of the part for some maximum allowable or selected length. For example a section cut may be a cross section that is up to 36 inches long. A section may be made or cut some number of set inches away from another section. The distances between sections may be for example 3 inches 6 inches or 9 inches. These sections are parallel to each other in these examples.

Output may be for example a drawing identifying the ply stacking sequence for the composite part. Further output also may include other information such as orientation and materials for each ply. Output also may include other information. For example a three dimensional object for the part may be returned with an indication of identification of the location for each section for which ply lay up data is present within output .

In other examples a two dimensional drawing or grid may be returned with identifications of the sections with respect to the part in output . Output is returned as ply lay up data to part application . Part application may then display ply lay up data to the user for use in performing the maintenance operation on the composite part.

The three dimensional objects in part files database are for example without limitation solid objects that provide sufficient detail for a user to select a location for which ply lay up data is needed. These three dimensional objects however do not include other data that may be sensitive or confidential to a manufacturer of the aircraft.

For example details about other parts their assembly and architecture are not provided in these examples. For example information about wiring electronics and assembly of substructures do not need to be provided for use in maintenance of composite parts. Additionally this type of implementation allows a manufacturer to provide ply lay up data in a faster manner as compared to having their own users locate and extract the data themselves. This type of architecture provides a quicker means for communication and avoids having the user manually measure and identify the coordinates on the aircraft.

As can be seen in this illustrative embodiment ply lay up data may be supplied to a user to perform maintenance on an aircraft without needing manuals containing three dimensional drawings of the composite parts. Further access to a three dimensional model also is unnecessary with this type of method and apparatus.

Part file generation tool in these examples may be implemented using any software that is capable of creating a three dimensional solid object for display from a three dimensional model such as a computer aided design file for a particular part. For example the Right Hemisphere 5 platform is an example of a software product that may be used to create three dimensional object s part files in part files database . Right Hemisphere 5 platform is a software product available from Right Hemisphere . Further part file generation tool also may include processes to create code or scripts to display and receive identifications of location data .

Part application or client may display a part file from part files database or user interface . Each part file allows a user to see and select a location on a part to generate location data .

In these examples part files database may be generated by part file generation tool executing on server . Part file generation tool may use data from three dimensional model database to generate three dimensional objects for part files database .

The different components illustrated in maintenance environment have been presented for purposes of depicting one or more advantageous embodiments. The particular organization of components is not meant to limit the manner in which different functions may be placed in different embodiments. For example in some embodiments server and server may be the same data processing system.

With reference now to a diagram of a data extraction tool is depicted in accordance with an advantageous embodiment. In this example data extraction tool is an example of one implementation for data extraction tool in . Data extraction tool includes core identification unit surface generation unit core sampling unit and output generation unit .

Core identification unit receives location data and part model . Core identification unit creates an axis system including a damage axis in part model at the damage location based on the location data. This damage axis is normal to the surface at the damage location in part model and parallel to a rosette axis. Further core identification unit creates section cuts that intersect the surface and plies based on these section cuts and part model . Each section cut is a plane that intersects the surface of part model .

Core identification unit may store this information as processed part model . Additionally core identification unit also may generate points . Points are a file containing points where core sampling is to be performed. In these examples the points are points along the section cuts. For example for a section cuts a number of points are selected on the surface for the section cut. Points takes the form of an extensible markup language file in these examples. Of course these points may be saved in other types of data structures depending on the implementation.

Surface generation unit creates surface files based on processed part model . Master file ties the different surfaces identified in surface files together. In these examples master file contains a pointer to the surface file including the path to its directory structure.

Master file includes for example the part name the sequence the ply name and other attributes. These attributes include for example a link to a surface file in surface files containing the surface visualization data. The data is ordered in the master file according to the ply sequence in the part.

Each file within surface files represents a portion of the surface of the part where sampling is to occur. Each file in surface files includes for example without limitation an identification of a point on the surface and other data used to identify and or visualize the surface at that point. Core sampling unit performs sampling using processed parts model surface files and master file . Core sampling unit is used to perform the actual sampling. In these examples core sampling unit may be an OpenGL based application program and or process. Of course any type of application program and or process that is capable of obtaining information about layers in a model may be used.

Core sampling unit generates core sampling data . For example master file is used to identify a surface file from surface files for processing or sampling. The identified surface file is used to perform sampling for the point identified by the surface file. This sampling generates data about different layers in a line below the sampling point in these illustrative examples. The line may be selected base on the damage axis that is identified.

In these examples surface files and master file take the form of extensible markup language files. Core sampling data also takes the form of an extensible markup language file in these examples.

Core sampling data includes core sample data. In other words this data includes data obtained from sampling based on the identification of the core or section to be sampled in the part. Core sampling data also includes for example an identification of plies that were pierced data and other suitable information.

Output generation unit takes core sampling data and generates ply lay up data . Ply lay up data may be for example a file or other document containing ply lay up information in a form that is suitable for presentation. In these examples the format takes the form of a portable document format. This format may include text images two dimensional vector graphics or other information. Of course ply lay up data may be stored using other formats. Other formats may provide a capability to display or view data using three dimensional graphics.

Turning now to a block diagram illustrating components used to generate a part file is depicted in accordance with an advantageous embodiment. In this example part file generation tool is an example of part file generation tool in . As depicted part file generation tool includes control process and object creator . Control process may send call to computer aided design tool to retrieve three dimensional model . In these examples computer aided design tool may be for example CATIA V5R17.

Control process uses object creator to create a three dimensional object for part file . Additionally control process also adds code to part file to complete part file . Control process may be used to ensure that the transfer of three dimensional model from computer aided design tool is performed in a secure manner.

Turning now to a diagram illustrating a part file is depicted in accordance with an advantageous embodiment. In this example part file includes three dimensional object and code . Code provides processes for receiving user input to identify a location on three dimensional object . Further code may include processes to send the location information to another process such as part application or data extraction tool in .

In these examples code allows a user to select a location on three dimensional object . In these examples code takes the form of JavaScript . JavaScript is a scripting language typically used for client side web development. Of course code may be implemented using any type of language suitable for the particular implementation. JavaScript is a registered trademark of Sun Microsystems Inc.

The selection of this location may be translated into three dimensional coordinates such as X Y and Z coordinates. Three dimensional object in these examples is a solid representation of the particular part. Three dimensional object only provides a visual view of the part and does not include other information that may be found within a three dimensional model. In this manner part file may be smaller in size. The user may perform various manipulations of three dimensional object . These manipulations include rotate zoom measure and change lighting.

When a user has confirmed the selection of the particular location on three dimensional object the three dimensional location information is then transmitted to a part application such as part application in . In turn the part tool may send the location data to a data extraction tool such as data extraction tool in . In other implementations code may directly send the location data to the data extraction tool.

In these examples part file may be implemented using a number of different types of files. For example part file may be for example a three dimensional PDF document. Further other types of files may be created to contain three dimensional object . For example three dimensional object may be included in a word processing document generated using Word 2007 which is a product of Microsoft Corporation.

With reference now to a diagram illustrating ply layout data is depicted in accordance with an advantageous embodiment. In this example ply layout data file is an example of a file containing ply layout data for a particular part. Ply layout data file is an example of output in . This data file may be transmitted as ply lay up data in .

Ply layout data file includes in these examples two dimensional ply stacking sequence drawing orientation information materials information and grid .

In the different advantageous embodiments two dimensional ply stacking sequence drawing is a two dimensional drawing identifying the stacking sequence for the particular section of the part selected by the user. Although the ply stacking sequence is presented as a two dimensional drawing in these examples other embodiments may provide the ply stacking sequence information in different forms. For example a table may be presented to identify the sequence of plies within the composite part.

Orientation information identifies the orientation of each ply within the stacking sequence. Materials information identified the type of material for each ply within the stacking sequence. Grid in these examples provides a two dimensional diagram of the composite part in which the different sections are associated with the set of sections containing ply lay up data.

In this example ply layout data file contains a single section around the location selected by the user. In other advantageous embodiments ply layout data file may include sections for other areas of the part in addition to the location selected by the user. Of course ply layout data file may include other information in addition to or in place of information illustrated in these examples.

For example ply layout data file also may include a three dimensional object identifying the location for which the ply layout data is provided. This three dimensional object may be the same three dimensional object used by the operator to select a location for which ply lay up data is desired. The three dimensional object may be in addition to or in place of grid depending on the particular implementation.

With reference now to a diagram illustrating a portion of a part is depicted in accordance with an advantageous embodiment. In this example part may be a part found in part files database in .

In this illustrative example part has base surface and top surface . Plies may be found between top surface and base surface . In this illustrative example plane intersects part . In this example the intersection may be substantially normal to top surface at line . Plane is a virtual mathematical plane used as a boundary to form the intersection with part to identify ply data.

This planar intersection by plane may be performed using data extraction tool in . In these examples coordinates U and V may define the planar intersection with plies in part . As shown in this illustrated example part has U axis and V axis . These axes are relative to plane . Plane is used as a boundary with the coordinates defining the plane intersecting each ply within plies within part .

The intersection with each ply in plies results in a line such as for example lines and . In this illustrative example each line represents a top portion of a ply intersected by plane . Of course other lines may be present depending on the number of plies present in the intersection of plane in part . These lines may be described using UV coordinates that are relative to plane . Further the intersection represented by the lines may be given a linear approximation using XYZ coordinates. In other words the UV coordinates for plane may be translated into XYZ coordinates or some other coordinate system.

Based on this information ply data may be obtained for each line within plane . Each line may be placed on top of the next line starting from base surface all the way up through top surface . This data may be used to generate a presentation of ply layup data for part .

Turning now to a diagram of a user interface for searching for lay up data for composite parts is depicted in accordance with an advantageous embodiment. In this example window provides a user interface for composite parts. Window is an example of a user interface such as user interface in .

In these examples window contains fields and . Field allows a user to select a model for the particular aircraft. Field allows a user to enter a part number for the composite part of interest. Field allows the user to enter a customer code to identify a specific customer. The code is a three digit alpha numeric code that identifies a customer. A part name may be entered in field . This part name is an identifier of the part such as a fastener rib or wing panel. A product may be entered in field . Field allows the user to enter a product.

Window also includes fields and . Field allows a user to select an aircraft identification type. Fields and allow a user to select from different airplanes of the particular type. The airplane identification type offers a choice of methods by which a specific airplane can be identified. Fields and then allow a user to enter the airplane identification for the specific airplane s such as for example the line number for the actual airplane that requires repair.

When the user has entered information for the search the user may begin the search for the part file by selected control . If the user wishes to re enter or change some information the user may select control .

Turning now to a diagram illustrating a user interface for searching for composite parts is depicted in accordance with an advantageous embodiment. In this example window is shown as presenting examples of results from a search for composite parts. As depicted entries and are examples of results returned from a search for a composite part. Each entry includes a part number part name revision identification and status.

Further each entry also allows a user to select a part for presentation. This selection may be made through icons and . Selection of one of these icons initiates the display of a part file such as part file in . Alternatively a user may manually submit a request for a section by selecting links or . Selection of these links allows a user to manually enter location information for a particular part. In some embodiments a user may desire to manually enter the location information if measurements of the actual part have been made.

Turning now to a diagram illustrating a display of a part file is depicted in accordance with an advantageous embodiment. Display is an example of a display that may be presented within user interface in . Display is an example of a part file that is displayed to obtain user input identifying a location on a composite part. In this example display includes three dimensional object which is a solid three dimensional object from which a user may select a location on three dimensional object to obtain location information.

As depicted three dimensional object is a solid representation of the composite part. Although a solid model is present in these examples other types of representations may be used. For example a surface model may be used. Other information that may be contained in a three dimensional model other than the graphical presentation of the part may be left out of the part file. In this manner trade secret confidential or export controlled information may be maintained due to this type of distribution of information.

When the user selects a point on three dimensional object such as point window displays three dimensional coordinate information data . In this example this coordinate information includes X coordinate Y coordinate and Z coordinate . As the user selects different points on three dimensional object three dimensional coordinate information displayed in window changes to indicate the selected location. In these examples the selection may be made by moving a pointer such as pointer to a desired location on three dimensional object and initiating a command. This command may be for example without limitation a right click of a mouse button or the pressing of a function key.

When the user has selected a particular point on which ply layout data is desired the user may select control to send three dimensional coordinate information data to a server for processing. In these examples three dimensional coordinate information data may be sent to part application in which in turns sends the information as location data to data extraction tool in . In other embodiments location data may be sent directly to data extraction tool in .

With reference next to a diagram illustrating ply lay up data returned in response to sending location data is depicted in accordance with an advantageous embodiment. Display is an example of a display that may be presented through user interface in . In this example display presents ply lay up data extracted from a three dimensional model in response to receiving location data about a particular part.

In this example section in display shows a stacking sequence for eight plies. The identification of the sequence the ply number the orientation and the material are shown in entries and . These entries correspond to the display in section . Entries and are for a particular section within the part.

The location of section may be identified through grid . As described above grid may be a three dimensional drawing of a top surface of the part with grid markings to associate section with the appropriate place on the part. In this particular example grid includes sections and . Each of these sections represents a section or cross section of the composite part. These sections may also be referred to as cuts.

In these examples the orientation of section and plies and is made relative to the part. An example without limitation is shown using reference axis is an axis system used to relate this ply lay up data to grid .

In this example the display of information is for section . Section is identified as being associated with section through a graphical indicator to identify the location on the part for which ply lay up data is displayed. Each of these sections may be for example 9 inches 6 inches or 3 inches apart. The length of these sections may vary depending on a selection by the user or a default value in these examples. Grid covers an entire part in these examples. In this particular illustrative example information for section is displayed. Reference axis may be included in the output file to show the orientation relationship of section and plies and relative to grid .

In other embodiments additional sections may be present in the lay up data. These additional sections in the set of sections may be presented in the same manner as illustrated in display . The different sections may be associated with other entries within grid .

With reference now to another example of a diagram illustrating ply lay up data returned in response to sending location data is depicted in accordance with an advantageous embodiment. In this example drawing presents ply lay up data extracted from a three dimensional model in response to receiving location data by the particular part. Drawing is similar to display in .

In this advantageous embodiment drawing also provides a drawing of the part. As can be seen in this example grid is overlaid or displayed on drawing . Drawing is a two dimensional drawing of the part in this illustrative example. In other advantageous embodiments drawing may take the form of a three dimensional drawing. If drawing takes the form of a three dimensional display that may be manipulated manipulation or movement of drawing also results in grid moving in the same fashion because of the association of grid with drawing .

With reference now to a diagram illustrating an example of a three dimensional drawing in association with a grid identifying ply lay up data is depicted in accordance with an advantageous embodiment. In this example drawing is a three dimensional drawing of a wing with grid displayed or overlaid on drawing . In this example reference axis provides reference information to the orientation of drawing in grid . In this illustrative example other drawing information such as for example stacking sequences ply number orientation and material also may be displayed in association with drawing in grid . This information may be displayed on the same display or a separate display depending on the particular implementation.

Turning now to a flowchart of a process for generating ply lay up data is depicted in accordance with an advantageous embodiment. The process illustrated in may be implemented in a software component such as data extraction tool in in these examples.

The process begins by receiving a designation of the location on a composite part operation . In these examples the designation of the location may be received as location data in . Further the designation also may include an identification of the part for which ply lay up data is desired. The process then extracts the ply lay up data for a section of the composite part within a three dimensional model containing the composite part to form extracted ply lay up data operation .

Of course depending on the particular implementation more than one section may be extracted in operation . Additionally in other embodiments the section extracted in operation may be sub divided into a set of sections or sub sections. Thereafter the extracted ply lay up data is sent to the requester operation . The process then performs the maintenance operation on the composite part using the extracted ply lay up data operation . The process terminates thereafter.

With reference now to a flowchart of a process for generating a section cut is depicted in accordance with an advantageous embodiment. The process in is a more detailed explanation of operation in .

The process begins by receiving the location data operation . The process finds the composite part operation . In these examples the composite part may be identified from the part application that may be received from the location information. The process then finds the surface and rosette for the part operation . A rosette is an axis system in which the ply orientations are defined on the Z 0 plane relative to the X axis. Reference axis in is an example of a rosette.

Next the process creates an axis system at the selected location operation . The selected location is identified from the coordinate information received in the location data. In these examples the axis system has a Z vector normal to the surface of the composite part. The axis system has an X vector that is parallel to the x axis of the rosette.

The process identifies the size of the part operation . The process then selects a set of sections using the size of the part operation . In identifying or selecting the set of sections a number of sections and the location of the sections may be selected. Default or maximum sizes for the sections may be identified. For example the area to be cut may be no more than 18 inches on either side of the X 0 and Y 0 planes. The set of sections may be for example a set of subsections for a section around the location selected by the user. For example the set of sections may be subdivided from a section that is 0.5 yards to the right and left of the location and 0.5 yards above and below the location.

The process then creates section cuts operation . Operation is used to identify the ply stacking sequence in these examples. In generating section cuts the process generates the section cuts along the x axis first then along the y axis.

Additionally the process retrieves orientation and material information for the sections operation . The process then creates the output file operation with the process terminating thereafter. In these examples the output file includes the section cuts as well as the orientation and material data. Further a grid may be present to identify the location of each section.

Turning now to a flowchart of a process for creating section cuts is depicted in accordance with an advantageous embodiment. The process illustrated in is a more detailed description of operation in . The process in may be implemented in a software component such as for example data extraction tool in . The process in is an example of a process that may be used to generate ply layup data as described with respect to in .

The process begins by identifying a base surface supporting the plies at the selected location operation . Next the base surface is intersected with a plane operation . A linear approximation of the surface and a plane intersection is performed operation .

The resulting U and V coordinates are stored in a base coordinates array operation . The process generates intersections between the plane and the ply. A linear approximation of the resulting intersection is performed. The result is a series of points with x y and z coordinates. The points are all on the plane which has its own u v coordinate system. The values that are stored are the u and v coordinates of the point on the plane relative to the plane origin.

These coordinates are copied into a top coordinates array operation . At this point the base coordinates array and the top coordinates array have the same values. As processing of the different plies in the section occur the top coordinates array is updated. The final resulting values for the top coordinates array is the top surface of the upper most ply in the section.

Thereafter an unprocessed ply intersected by the plane closest to the base surface is identified operation . A linear approximation of the ply and plane intersection is performed operation . The resulting U and V coordinates are stored in a coordinate array operation .

Next a determination is made as to whether the direction of the coordinates in the coordinate array is the same as the direction of the coordinates in the base coordinate array operation . If the coordinates are not in the same direction in the two arrays the direction of the values for the coordinates in the coordinate array are reversed to match the same direction as the base coordinate array operation .

When the ply plane intersection is performed the result is one or more curves. These curves have inherent start and end points used by the process. The process projects the start and end points of the segment in a direction normal to the base coordinate array onto the top coordinate array operation . The process proceeds directly to this operation from operation if the direction of the coordinate array and the base coordinate array are the same.

The process offsets the portion of the top coordinates array between the segment end points by the thickness of the ply operation . Operation changes the values in the top coordinate array to reflect the top of the ply that is being processed. The offset represents the plies actual position in space. The process then updates the top coordinate array to reflect the top of the ply operation .

The end points of the ply plane intersection curve are projected onto the line segments defined in the top coordinate array defining the bottom of the ply. The segments between the endpoints are offset by the scaled thickness defining the top of the ply. Next a determination is made as to whether additional unprocessed plies are present operation . If additional plies are present the process returns to operation as described above to select another ply for processing.

If additional unprocessed plies are not present the process then draws or creates the offset segments for each of the plies for the output operation . These offset segments for the plies are used in a two dimensional drawing to identify the ply stacking sequence. The process labels the segments so that each segment may be identified operation with the process terminating thereafter.

In these examples operations may be implemented in a unit such as for example core identification unit within data extraction tool in . Operations and may be implemented in a unit such as for example core sampling unit in . Operations and may be implemented in a unit such as output generation unit in .

In these examples the planes are created perpendicular to the X vector and the Y vector. These planes may have various spacing. For example the X planes may range from X 18 to X 18 and the Y planes may range from Y 18 to Y 18 with respect to the damage location. The range of the planes may be smaller if the part does not extend as far as the plane for the selected value. With the selected plane a number of cuts are created. These different cuts are based on the length and width of the part. The cuts however in these examples have a default value that is not less than 3 inches. The actual spacing may be adjusted such that all of the cuts are the same distance apart. Of course other default values may be used depending on the particular implementation.

As an example if the damage location is 16 inches from the edge of the part the range of the cuts in the X direction would be from 16 to 18 for a total of 34 inches. If the spacing is specified as 6 inches it is adjusted to 5.667 so the cuts are taken at the following X values 16 10.333 4.667 1 6.667 12.333 and 18. As another example if the part is 14 inches wide the damage is in the center of the part and a spacing of 3 inches is requested the spacing may adjusted to provide cuts that are 2.8 inches apart. These cuts may be at X values as follows 7 4.2 1.4 1.4 4.2 and 7.

Turning now to a flowchart of a process for selecting a location on a part is depicted in accordance with an advantageous embodiment. The process illustrated in may be implemented in a software component such as code in part file in .

The process begins by displaying the three dimensional object in the part file operation . The process then waits for a user input operation . This user input may take various forms such as for example without limitation manipulating the three dimensional object selecting a location on the three dimensional object and submitting the location information to obtain ply lay up data.

A determination is made as to whether the user input is to manipulate the three dimensional object operation . If the user input is to manipulate the three dimensional object the selected manipulation is performed operation with the process then returning to operation . In operation the user may perform various actions such as for example rotate the object zoom or pan.

If in operation the user input is not to manipulate the three dimensional object a determination is made as to whether the user input selects a location on the three dimensional object operation . If the user input selects a location the location identification is identified based on the user selection operation . The location information is displayed operation with the process then returning to operation as described above. This location information may be for example in the form of X Y and Z coordinates.

With reference again to operation if the user does not select a location a determination is made as to whether the user is to submit location information operation . If the user is to submit the location information the process sends the location information operation with the process terminating thereafter. In these examples the location information may be sent to another application such as for example part application or data extraction tool in .

Turning back to operation if the user input is not a submission of the location information a determination is made as to whether the user has decided to end the process operation . If the user has decided to end the process the process terminates. Otherwise the process returns to operation to wait for additional user input. In this instance the user input is some input not handled by the process illustrated in this figure.

Turning now to a flowchart for creating part files is depicted in accordance with an advantageous embodiment. The process illustrated in may be implemented in a software component such as part file generation tool in to make part files for part files database in . An example of a part file is part file in .

The process begins by selecting an unprocessed part operation . Thereafter the process sends a call to the computer aided design application for a three dimensional object for the part operation . This call may be made through various application program interface calls that are available on many computer aided design programs. In these examples the computer aided design program may be CATIA V5R17. The process then receives a three dimensional model in response to the call operation .

The process creates a three dimensional object in a file from the three dimensional model operation . Operation creates a three dimensional object without additional data that may be present in the three dimensional model. Operation may be performed using a software program such as for example the Right Hemisphere 5 platform.

Thereafter code is added to the file to enable identification of three dimensional coordinate information operation . Operation may add a code such as code in . Thereafter the completed file is stored in a parts file database operation . The process then determines whether additional unprocessed parts are present operation . If additional unprocessed parts are present the process returns to operation to select another unprocessed part otherwise the process terminates.

With reference now to a flowchart of a process for creating ply lay up data is depicted in accordance with an advantageous embodiment. The process illustrated in may be used to generate ply lay up data such as for example the ply lay up data presented in display in and the ply lay up data displayed in drawing in . This process may be implemented in a software component such as for example data extraction tool in .

The process begins by receiving a location on a part operation . Next the process creates an axis system at the location in the model of the part operation . This axis system has an axis that is normal to the surface at the location in the model in the part. In these examples this axis may be a z axis that is normal to the surface at the location and also may be referred to as a damage axis. This axis system may be parallel to a reference axis such as reference axis in .

The process creates section cuts using the axis system operation . In these examples these section cuts may take the form of planes that intersect the surface and plies below the surface. The process identifies points for core sampling operation . In these examples the points are points for the section cuts. The identified points are stored in a file operation . In these examples this file may be for example an extensible markup language file. The process saves the model of the part containing the axis system in the section cuts operation .

The process then creates a set of files based on the surface in the model of the part operation . These files are created from the points identified for core sampling. These files may be referred to as surface files. Each file in this set of files is based on a portion of the surface associated with an identified point. The process creates a master file operation . This master file ties together or identifies all of the files in the set of files. The collective set of files identifies locations for samples. Each file provides a location for core sampling to be performed. In other words each file may correspond to a point identified in operation .

The process selects an unprocessed file from the set of files using the master file operation . The process performs core sampling of data at the point identified in the file operation . The core sampling results in identifying core sample data for the point. This data may also be referred to as sampled data. The process stores the core sample data operation . This core sample data contains information regarding the surface and plies below the surface at the point identified by the file. A determination is made as to whether additional unprocessed files are present operation . If additional unprocessed files are present the process returns to operation .

Otherwise the process creates an output file based on the stored core sample data operation with the process terminating thereafter. In operation the output may take various forms. For example the output may be stored in a portable document format file that may contain text images and two dimensional graphics that may be manipulated. Of course in other advantageous embodiments other types of formats may be used. In some formats the file may include a three dimensional graphical image or model that may be manipulated.

The flowcharts and block diagrams in the different depicted embodiments illustrate the architecture functionality and operation of some possible implementations of apparatus methods and computer program products. In this regard each block in the flowchart or block diagrams may represent a module segment or portion of computer usable or readable program code which comprises one or more executable instructions for implementing the specified function or functions.

In some alternative implementations the function or functions noted in the block may occur out of the order noted in the figures. For example in some cases two blocks shown in succession may be executed substantially concurrently or the blocks may sometimes be executed in the reverse order depending upon the functionality involved.

Thus the different advantageous embodiments provide a computer implemented method apparatus and computer program product for providing ply lay up data for a composite part. A location on a composite part is received from a requester. Ply lay up data is extracted for a section of the composite part within a three dimensional model containing the composite part to form extracted ply lay up data. The extracted ply lay up data is sent to the requester.

In this manner some or all of the different advantageous embodiments may allow for an identification of ply layout data for use in performing maintenance operations. This identification of the ply layout data may be made without an operator or requester of the data having to access a three dimensional model. Instead the operator may identify a location on the part for which a maintenance operation is needed and receive the ply lay up data for that location. In these examples a section or sections is returned containing the ply lay up data.

The different advantageous embodiments may provide an ability to process the request for ply lay up data using a tool to automatically generate the cuts. In this manner the operator does not need to have access to the three dimensional model. Further the operator also does not need to have knowledge of how to operate the applications used in creating the three dimensional models. Further the different advantageous embodiments also provide an ability to restrict access to data in three dimensional models but still provide ply lay up data.

The different embodiments also create output files that do not require obtaining export licenses for customers who might be in other countries because any sensitive information is not included. The output or ply lay up data generated can be exported to other countries not under embargoes without export licenses.

Another feature provided by the different embodiments is the ability to only provide ply lay up data on demand for a limited portion of the aircraft. Further requests made by users can be tracked and access to data may be terminated or restricted if abuses are detected. For example if a user makes requests for different portions of an aircraft that exceed some threshold then the ability to receive ply lay up data can be terminated.

The description of the different advantageous embodiments has been presented for purposes of illustration and description and is not intended to be exhaustive or limited to the embodiments in the form disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art. Although the different advantageous embodiments have been described with respect to aircraft other advantageous embodiments may be applied to other types of objects. For example other advantageous embodiments may be applied to a mobile platform an aircraft a spacecraft an aquatic vehicle a land vehicle a stationary platform a land based structure an aquatic based structure and a space based structure.

Further different advantageous embodiments may provide different advantages as compared to other advantageous embodiments. The embodiment or embodiments selected are chosen and described in order to best explain the principles of the embodiments the practical application and to enable others of ordinary skill in the art to understand the disclosure for various embodiments with various modifications as are suited to the particular use contemplated.

