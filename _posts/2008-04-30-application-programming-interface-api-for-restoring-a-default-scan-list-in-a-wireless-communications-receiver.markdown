---

title: Application programming interface (API) for restoring a default scan list in a wireless communications receiver
abstract: A signal may be received in accordance with a protocol stack having a first portion () that contains a control layer and a stream layer, and a second portion () that contains a physical layer and a MAC layer. The first portion may invoke an application program interface (API ) to instruct the second portion to replace a current set of signal acquisition parameters with an initial set of signal acquisition parameters.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08645976&OS=08645976&RS=08645976
owner: QUALCOMM Incorporated
number: 08645976
owner_city: San Diego
owner_country: US
publication_date: 20080430
---
The present application for patent claims priority to co pending Provisional Application Nos. 60 915 929 filed May 3 2007 and 60 915 931 filed May 4 2007 both assigned to the assignee hereof and both hereby expressly incorporated by reference herein.

The present application for patent is related to co pending U.S. patent application Ser. No. 11 828 167 filed Jul. 25 2007 assigned to the assignee hereof and expressly incorporated by reference herein.

The present disclosure relates generally to communication systems and methods and more particularly to an application programming interface API for a receiver in a wireless communication device.

Forward Link Only FLO is a digital wireless technology that has been developed by an industry led group of wireless providers. FLO technology uses advances in coding and interleaving to achieve high quality reception both for real time content streaming and other data services. FLO technology can provide robust mobile performance and high capacity without compromising power consumption. The technology also reduces the network cost of delivering multimedia content by dramatically decreasing the number of transmitters needed to be deployed. In addition FLO technology based multimedia multicasting compliments wireless operators cellular network data and voice services delivering content to the same cellular mobile terminals used in 3G networks.

Today FLO technology is used to create and broadcast real time multimedia content across various networks to a large number of mobile subscribers. These mobile subscribers generally employ a FLO receiver which can be described conceptually with a reference model comprising a number of processing layers typically referred to as a protocol stack . Each processing layer includes one or more entities that perform specific functions.

An attractive feature of the protocol stack employed by the FLO receiver is that each layer is self contained so that the functions performed by one layer can be performed independently of the functions performed by the other layers. This allows improvements to be made to the FLO receiver for one layer without adversely affecting the other layers. However various challenges are posed when designing the interface between layers in the FLO receiver. Efficient communications across layers in terms of efficient reception of multicast services is always an objective the FLO receiver designer.

A signal may be received in accordance with a protocol stack having a first portion that contains a control layer and a stream layer and a second portion that contains a physical layer and a MAC layer. The first portion may invoke an application program interface API to instruct the second portion to replace a current set of signal acquisition parameters with an initial set of signal acquisition parameters.

The detailed description set forth below in connection with the appended drawings is intended as a description of various embodiments of the invention and is not intended to represent the only embodiments in which the invention may be practiced. The detailed description includes specific details for the purpose of providing a thorough understanding of the invention. However it will be apparent to those skilled in the art that the invention may be practiced without these specific details. In some instances well known structures and components are shown in block diagram form in order to avoid obscuring the concepts of the invention.

In the following detailed description various concepts will be described in the context of a FLO technology. While these concepts may be well suited for this application those skilled in the art will readily appreciate that these concepts are likewise applicable to other technology. Accordingly any reference to FLO technology is intended only to illustrate theses concepts with the understanding that such concepts have a wide range of applications.

The content providers provide content for distribution to mobile subscribers in the communications system . The content may include video audio multimedia content clips real time and non real time content scripts programs data or any other type of suitable content. The content providers provide content to the content provider network for wide area or local area distribution.

The content provider network comprises any combination of wired and wireless networks that operate to distribute content for delivery to mobile subscribers. In the example illustrated in the content provider network distributes content through a broadcast network . The broadcast network comprises any combination of wired and wireless proprietary networks that are designed to broadcast high quality content. These proprietary networks may be distributed throughout a large geographic region to provide seamless coverage to mobile devices. Typically the geographic region will be divided into sectors with each sector providing access to wide area and local area content.

The content provider network may also include a content server not shown for distribution of content through a wireless access network . The content server communicates with a base station controller BSC not shown in the wireless access network . The BSC may be used to manage and control any number of base transceiver station BTS s not shown depending on the geographic reach of the wireless access network . The BTSs provide access to wide area and local area for the various devices .

The multimedia content broadcast by the content providers include one or more services. A service is an aggregation of one or more independent data components. Each independent data component of a service is called a flow. By way of example a cable news service may include three flows a video flow an audio flow and a control flow.

Services are carried over one of more logical channels. In FLO applications a logical channel is often referred to as a Multicast Logical Channel MLC . A logical channel may be divided into multiple logical sub channels. These logical sub channels are called streams. Each flow is carried in a single stream. The content for a logical channel is transmitted through the various networks in a physical frame. In FLO applications the physical frame is often referred to as a superframe.

The air interface used to transmit the physical frames to the various devices shown in may vary depending on the specific application and the overall design constraints. In general communication systems employing FLO technology utilize Orthogonal Frequency Division Multiplexing OFDM which is also utilized by Digital Audio Broadcasting DAB Terrestrial Digital Video Broadcasting DVB T and Terrestrial Integrated Services Digital Broadcasting ISDB T . OFDM is a multi carrier modulation technique that effectively partitions the overall system bandwidth into multiple N sub carriers. These sub carriers which are also referred to as tones bins frequency channels etc. are spaced apart at precise frequencies to provide orthogonality. Content may be modulated onto the sub carriers by adjusting each sub carrier s phase amplitude or both. Typically quadrature phase shift keying QPSK or quadrature amplitude modulation QAM is used but other modulation schemes may also be used.

The receiver blocks located below the API will be collectively referred to as a media processing system. The media processing system provides the physical and MAC layer functionality of the protocol stack . The receiver stack block located above the API will be referred to as the receiver stack processing system which provides the stream and control layer functionality of the protocol stack . The exact division of the protocol functionality in the media processing system or in the receiver stack processing system is implementation dependent. By way of example the MAC layer can be localized in the ASIC specific software block for one implementation while for another implementation it may be spread across all blocks in the media processing system namely the receiver hardware block the driver block and the ASIC specific software block .

The functionality of the receiver blocks will now be described. This description is informative in nature and broadly defines the functionality of each block. Only the pertinent functionality to various concepts described throughout this disclosure will be described. Those skilled in the art will recognize that these blocks can provide other functionality that is not described herein.

The receiver hardware block represents the semiconductor hardware that provides the functionality of demodulating a wireless signal and retrieving data carried by the physical layer. This block provides various functions such as RF front end processing ADC timing and frequency estimation channel estimation turbo decoding etc. In summary the receiver hardware block provides the complete physical layer implementation of the protocol stack. Depending upon the implementation this block may also provide full or partial MAC layer functionality e.g. low level MAC layer functionality like R S decoding and or MAC layer interleaving .

The host processor block represents the functionality provided by a host processor in the receiver . More specifically the host processor block represents the host processor hardware and the software implementation residing in the host processor. The host processor hardware may be implemented with one or more processors including by way of example a general purpose processor such as a microprocessor and or a specific application processor such as a digital signal processor DSP . The host processor block may also include a machine readable medium for storing software executed by the one or more processors. Software shall be construed broadly to mean any combination of instructions data structures or program code whether referred to as software firmware middleware microcode or any other terminology. The machine readable medium may include one or more storage devices that are implemented either in whole or part by the host processor hardware. The machine readable medium may also include or more storage devices remote to the host processor a transmission line or a carrier wave that encodes a data signal. Those skilled in the art will recognize how best to implement the described functionality for the host processor block for each particular application.

The host processor block communicates with the receiver hardware block to retrieve and process information recovered from the wireless transmission. The retrieved information includes control information received on a control channel content received on an overhead channel and the application layer content carried in a logical channel.

The driver block represents the driver level software in the host processor block that directly interfaces with the receiver hardware block . The driver block provides controller functions e.g. turning on or turning off the receiver hardware block and data exchange functions e.g. retrieving the data from the receiver hardware block or conveying the characteristics of a logical channel to be received . The driver level software may be specific to the type of hardware interface mechanism that exists between the host processor and the receiver hardware. For example the driver level software may be different depending upon whether the hardware interface between the one or more processors in the host processor and the receiver hardware is interrupt driven implemented with memory mapped address registers or packet based transaction interface like SDIO. Some examples of tasks performed by the driver block include hardware interactions such as initialization sleep or wakeup triggers data exchange with hardware such as emptying hardware buffers into main memory or providing ISR implementation and MAC layer implementation to support inner frame sleep logic.

Generally the driver block functions are tightly coupled with the receiver hardware and are considered time sensitive in nature. Therefore the driver block may be given a higher priority with respect to other blocks shown in For example the driver block may perform the tasks of retrieving the data received by the receiver hardware or instructing the receiver hardware to tune to a frequency as requested by the application layer.

The ASIC specific software block provides the MAC layer functionality not handled by the driver block . Depending upon the division of MAC layer functionality across different blocks it may provide complete or partial MAC layer functionality. At the very least ASIC specific software block will generally provide high level MAC layer functionality that is not practical to be delegated to driver block .

The receiver stack block communicates with the ASIC specific software block using the API . The receiver stack block implements the control and stream layers and provides the interface with the application layer protocols. The receiver stack block triggers the ASIC specific software block to receive the specified contents as requested by the application layer. The receiver stack block acts on the notifications or content provided by the ASIC specific software block and delivers any content received from the ASIC specific software block to the application layer protocols.

The API defines the interfaces that allow the ASIC specific software block to communicate with the receiver stack block . Any receiver stack that adheres to the interfaces defined by the API will work with an ASIC specific software that adheres to these interfaces as well. The API is representative of an API facility that includes a plurality of distinct APIs which respectively define the aforementioned interfaces that allow communication between the ASIC specific software block and the receiver stack block . Examples of these APIs and the interfaces they define are presented in greater detail below.

The hardware interface block represents the hardware interface mechanism that exists between the host processor block and the receiver hardware block . This interface provides the communication and data exchange functionality. The driver block uses this interface to exchange commands and data with the receiver hardware block . The hardware interface block can be any desired interface such as proprietary bus interface or a standard based interface e.g. SDIO .

Various examples will now be presented illustrating the communication that takes place within the receiver across the API . The following examples will be described in connection with containing call flows. In these figures solid arrows indicate communication occurring over the API . The role played by the receiver blocks and communication occurring within the blocks in the receiver stack processing system and media processing system is presented for the sake of completeness only. As previously mentioned the actual role played by the individual receiver blocks and the communication between the blocks located in either of these processing systems i.e. on the same side of the API is implementation dependent and can vary from one implementation to another. This communication is depicted as dashed arrows in the figures.

In step a command from the receiver stack processing system is sent to the ASIC specific software block specifying a set of frequencies along with the bandwidth channel plan from which the receiver selects a frequency to acquire the wireless signal. The set of frequencies and bandwidth may be retrieved from information provisioned at the wireless device.

In step the receiver stack processing system sends a command to the ASIC specific software block to acquire the system. This command causes the ASIC specific software block to read the overhead information on the selected frequency.

In step a network event from the ASIC specific software block is received by the receiver stack processing system indicating that the overhead information has been acquired along with a network ID and the type of overhead information acquired i.e. local area or wide area information . Once the overhead information has been acquired the ASIC specific software block sends in step a control information update message to the receiver stack processing system indicating that control information is available along with the latest control information sequence numbers that have been received. In step the receiver stack processing system commands the ASIC specific software block to get the control information. In response the ASIC specific hardware block reads the control channels and sends packets of control information in step to the receiver stack processing system every frame. Included in each frame is side information which identifies the location of the control packet s in the frame and the sequence number of each packet. Once the receiver stack processing system has determined that the control information has been received in its entirety it instructs the ASIC specific software block to stop receiving the control channel in step .

In step the receiver stack processing system commands the ASIC specific software block to get the content on the specific logical channel ID. Along with logical channel ID the physical layer characteristics of logical channel are provided e.g. frequency transmit mode outer code rate . Also the sequence numbers for the control packets are provided for the ASIC specific software block . This allows the ASIC specific software block to determine if the control information maintained by the control layer is current and if there is a need to receive the control channel prior to receiving the logical channel.

In step the ASIC specific software acknowledges whether or not it will be able to service the command to get the requested logical channel.

In step the ASIC specific software block returns the contents on the logical channel retrieved from the receiver hardware block . The content on the logical channel is returned after the R S decoding has been performed. The content is returned every frame until the receiver stack processing system requests the ASIC specific software block to stop receiving content on that logical channel in step .

In step the ASIC specific software block sends a control information update message to the receiver stack processing system indicating that updated control information is available along with the latest control sequence numbers received. In step the receiver stack processing system commands the ASIC specific software block to get the control information for the new area that the wireless device has moved into. In response the ASIC specific hardware block reads the control channels and sends packets of control information in step to the receiver stack processing system . Included in each frame is side information which identifies the location of the control packet s in the frame and the sequence number of each packet. In step the receiver stack processing system determines that the control information has been received in its entirety and instructs the ASIC specific software block to stop receiving the control channel.

In step the receiver stack sends a command to the ASIC specific software to abandon receiving data on the active logical channels and to free up any resources allocated towards receiving those logical channels.

Once a network is successfully acquired in step the ASIC specific software block sends a network event indication to receiver stack specifying the successful acquisition. If the acquired network is different form the last acquired network or the control sequence numbers have been updated the ASIC specific software block sends a control information update message to the receiver stack processing system in step indicating that updated control information is available along with the latest control sequence numbers received. In step the receiver stack processing system commands the ASIC specific software block to get the control information for the network that has been required. In response the ASIC specific hardware block reads the control channels and sends packets of control information in step to the receiver stack processing system . Included in each frame is side information which identifies the location of the control packet s in processing system determines that the control information has been received in its entirety and instructs the ASIC specific software block to stop receiving the control channel in step .

When ASIC specific software block receives the overhead information in step it compares the control sequence numbers received with the last stored. If there is an update detected the ASIC specific software block sends a control information update message to the receiver stack processing system in step indicating that an update in the control information is available. In step the receiver stack processing system commands the ASIC specific software block to get the control information. In response the ASIC specific hardware block reads the control channels and sends packets of control information in step to the receiver stack processing system . Included in each frame is side information which identifies the location of the control packet s in the frame and the sequence number of each packet. In step the receiver stack processing system determines that the control information has been received in its entirety and instructs the ASIC specific software block to stop receiving the control channel.

In step the receiver stack processing system commands the ASIC specific software to enable monitoring of the overhead information based on the periodicity defined by the system parameters message. The ASIC specific software block ensures that overhead information is monitored with at least this periodicity in absence of any other event causing it to read the overhead information.

In step an update of the control information is detected by the ASIC specific software block when the control sequence numbers received in the overhead information are different than the last received. The receiver stack receives a control information update message from the ASIC specific software block indicating that an update in the control information is available. In step the receiver stack processing system commands the ASIC specific software block to get the control information. In response the ASIC specific hardware block reads the control channels and send packets of control information in step to the receiver stack processing system . Included in each frame is side information which identifies the location of the control packet s in the frame and the sequence number of each packet. In step the receiver stack processing system determines that the control information has been received in its entirety and instructs the ASIC specific software block to stop receiving the control channel.

Upon being commanded to disable the periodic monitoring of the overhead information the ASIC specific software block disables it in step . Steps are conditional and are performed only when an update of control information is detected in the overhead information received.

In step the receiver stack processing system commands the ASIC specific software block to get the control information. In response the ASIC specific hardware block reads the control channels and sends packets of control information in step to the receiver stack processing system . Included in each frame is side information which identifies the location of the control packet s in the frame and the sequence number of each packet. In step the receiver stack processing system determines that the control information has been received in its entirety and instructs the ASIC specific software block to stop receiving the control channel.

In step the receiver stack processing system makes a consolidated list of the neighboring systems by processing the neighborhood description message in the control information. The receiver stack processing system then conveys this list to the ASIC specific software block . The ASIC specific software blocks uses this list to execute handoff algorithms by using this list to monitor signals from the neighboring systems. If a handoff to a neighboring system is performed an indication is sent to the receiver stack processing system in step along with wide area and local area differentiators for the destination system. Step is conditional and performed only when the handoff is performed. After handoff the new system is acquired and overhead information received on it is used to detect further network events.

The information provisioned in a wireless device receiving transmission from a broadcast system contains a list also referred to as a set of scan parameters including frequency and bandwidth applicable for the transmission of a signal. This provisioned scan list also referred to herein as an initial scan list or a default scan list allows the wireless device to search for and acquire a desired signal being transmitted in the designated frequencies and bandwidths when the wireless device is first turned on. Once the wireless device starts receiving a given signal after being turned on it builds up a new scan list based on the signaling information being transmitted by the network. This new scan list supersedes any scan list that is provisioned in the wireless device as the device uses the new scan list to select a desired signal from multiple signals being transmitted at any given location.

As a wireless device traverses different networks it receives signaling information transmitted by the various networks. The scan list built from the signaling information contained in the current transmission of a currently visited network supersedes any existing scan list whether the initially provisioned scan list or a scan list built using previous signaling information from a previously visited network .

Network configurations may allow for a situation where a wireless device moving into a new transmission area receives associated signaling information that conveys a scan list that is mutually exclusive from the originally provisioned scan list. Under these circumstances if the device subsequently moves back into the coverage of the network for which the provisioned scan list was built the device will not be able to acquire any signal. This situation is depicted in .

In the example of a wireless device turns ON with its scan list entries initially provisioned for transmissions from Network . The device then moves from Network to Network path and builds a new scan list based on the signaling information transmitted by Network . This new scan list supersedes the provisioned scan list. Subsequently the device moves from Network to Network path and builds a further new scan list based on the signaling information transmitted by Network . This further new scan list supersedes the scan list that was built for Network . Finally the wireless device moves from Network back into Network path . The wireless device will attempt to acquire a signal in Network based on the scan list built for Network . But the scan list built for Network is mutually exclusive from the scan list used by Network so the wireless device will not acquire a signal in Network .

In exemplary embodiments of the present work the last scan list built from the signaling information from the last network visited may be superseded by the scan list with which the wireless device was originally provisioned. Then in the situation of the device entering Network from Network will be able to acquire a signal from Network based on the originally provisioned scan list.

In some embodiments shown by broken line in the receiver stack processing system automatically invokes the API if it determines that a candidate scan list and the default scan list are mutually exclusive. If this mutually exclusive relationship is detected then the receiver stack processing system does not invoke the API but rather invokes the API immediately. Thus the candidate scan list which would have replaced the current scan list if API had been invoked is not passed to the media processing system . Instead the media processing system replaces the current scan list with the default scan list as instructed by the API .

The previous description is provided to enable any person skilled in the art to practice the various embodiments described therein. Various modifications to these embodiments will be readily apparent to those skilled in the art and the generic principals defined herein may be applied to other embodiments. Thus the claims are not intended to be limited to the embodiments shown herein but is to be accorded the full scope consistent with the language claims wherein reference to an element in the singular is not intended to mean one and only one unless specifically so stated but rather one or more. All structural and functional equivalents to the elements of the various embodiments described throughout this disclosure that are known or later come to be known to those of ordinary skill in the art are expressly incorporated herein by reference and are intended to be encompassed by the claims. Moreover nothing disclosed herein is intended to be dedicated to the public regardless of whether such disclosure is explicitly recited in the claims. No claim element is to be construed under the provisions of 35 U.S.C. 112 sixth paragraph unless the element is expressly recited using the phrase means for or in the case of a method claim the element is recited using the phrase step for. 

