---

title: Dynamic cluster expansion through virtualization-based live cloning
abstract: Methods and apparatus, including computer program products, are provided for transitioning one or more aspect of a dynamic cluster of computers to one or more virtual machines. In one aspect, there is provided a computer-implemented method. The method may include receiving a selection representing a node of a cluster selected for cloning. An indication may be provided to the node to prepare for cloning. The indication may be provided by accessing an interface at the node. When the selection is received and the node is prepared for cloning, the cloning of the node may be initiated. In some implementations, the node comprises a virtual machine including an application. Related apparatus, systems, methods, and articles are also described.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08887158&OS=08887158&RS=08887158
owner: SAP SE
number: 08887158
owner_city: Walldorf
owner_country: DE
publication_date: 20080307
---
The present disclosure generally relates to distributed computing systems. More particularly the present disclosure relates to cloning i.e. copying a virtual machine to expand a cluster.

Computers have now become an integral part of our society both in business and in residential settings. Almost every business of sufficient size in Germany the United States and other developed countries has one or more computers to assist them in running their businesses. Similarly many families in those countries now have computers at home that are used to run various applications including games.

Some attribute the popularity of computers to the Internet. The Internet provides people with a ready access to vast amounts of data. Many people now get their news sports stock entertainment and other information primarily from the Internet. But businesses have also embraced the Internet. The Internet provides the opportunity for computers to communicate instantly with other computers or individuals. Business processes that were once restricted to intranets and their users are now moving to the Internet. Accordingly companies are moving more and more of their data to electronic forms. In addition companies have amassed huge amounts of data in an effort to understand their business improve performance and build stronger employee customer and partner relationships.

Today distributed computing systems are widely used by various organizations to accommodate the ever increasing demand for the computer resources from consumers and businesses alike. In a distributed computing system nodes e.g. computers processors servers etc. are grouped or clustered to perform certain functions. Generally a cluster is a collection of computer nodes that work together to perform a function so that in many respects the cluster can be viewed as a single computer. The nodes of a cluster are usually coupled by a network such as the Internet or an intranet. The cluster may be managed dynamically.

A dynamic cluster is a cluster system that is managed by a controller or manager that dynamically optimizes the performance of the cluster. Moreover a dynamic cluster specifically its controller may start and stop individual instances of application servers as required. A dynamic cluster may also dynamically balance the workloads of the nodes of the cluster based on performance information collected from cluster nodes. As a consequence dynamic clusters optimize the use of the processing capabilities of the computers in the clusters. When compared to a single computer hosting a single application server the dynamic cluster may provide increased performance and overall lower total cost of ownership by better utilizing the existing processing capabilities of the cluster.

One example of a dynamic cluster system is provided by SAP AG s NetWeaver Adaptive Computing infrastructure. The Adaptive Computing infrastructure enables the dynamic assignment of hardware resources to serve specific application services. In this way SAP NetWeaver enables an Adaptive Computing infrastructure to provide business solutions based on SAP NetWeaver running at peak efficiency. In most cases SAP s Adaptive Computing provides lower total cost of ownership by optimizing processing e.g. better server utilization .

Virtualization technology provides another mechanism for optimizing processing. Virtualization technology provides a software layer that when executed allows multiple virtual machines with in some cases different operating systems to run side by side with other virtual machines running on the same physical machine e.g. a node computer processor server and the like . The virtualization software provides a so called container that wraps and isolates the virtual machine from other virtual machines. For example in a server complex including fifty physical servers each of which hosts its own application server virtualization permits the server complex to instead operate with for example twenty five physical servers each of which includes virtualization software providing two virtual machines for the application servers. In both cases fifty application servers are deployed but with virtualization the number of physical servers is reduced to twenty five.

Virtualization technology including virtual machines may also provide one or more of the following functions running multiple virtual machines with different operating systems at the same time on the same physical machine generating fully configured isolated virtual machines with a set of virtual hardware including an operating system and applications saving copying and provisioning of virtual machines and moving virtual machines from one physical machine to another physical machine for workload management.

When a virtual machine is used the virtual machine may include an operating system and one or more applications. An operating system OS is the program that after being initially loaded into a computer by a boot program manages other programs on the computer. The other programs also referred to as application programs or programs may use the operating system by making requests for services through one or more application program interfaces APIs of the operating system. An application may perform one or more specific functions or tasks directly for a user or in some cases another program or application program. Examples of applications include spreadsheets word processing browsers databases and the like. For example a virtual machine may include an operating system such as Linux or Windows Vista and one or more application programs such as a browser all of which operate in the so called container provided by the virtual machine.

In some cases the virtual machine may also include some data for use by the application. When this is the case the virtual machine may be referred to as a virtual appliance. The phrase virtual appliance refers to an example of a virtual machine that may include the application operating system and other items e.g. data drivers and etc. to enable simplification of the installation and the configuration process associated with running the application. An example of a virtual appliance is the MediaWiki software that powers Wikipedia which is available as a virtual appliance. The MediaWiki appliance contains the necessary software including operating system database and MediaWiki to run a wiki installation as a so called black box. 

The subject matter disclosed herein provides methods and apparatus including computer program products for expanding a cluster using a clone of a node.

In one aspect there is provided a computer implemented method. The method may include receiving a selection representing a node of a cluster selected for cloning. An indication may be provided to the node to prepare for cloning. The indication may be provided by accessing an interface at the node. When the selection is received and the node is prepared for cloning the cloning of the node may be initiated. In some implementations the node comprises a virtual machine including an application.

It is to be understood that both the foregoing general description and the following detailed description are exemplary and explanatory only and are not restrictive. Further features and or variations may be provided in addition to those set forth herein. For example the implementations described herein may be directed to various combinations and subcombinations of the disclosed features and or combinations and subcombinations of several further features disclosed below in the detailed description.

The subject matter described herein relates to a mechanism for expanding or contracting nodes of clustered application servers using virtualization technologies. In particular the subject matter described herein provides a mechanism referred to herein as live cloning. Live cloning provides a copy of a node of a cluster to allow the cluster to be expanded using virtualization technology such as virtual machines and virtual appliances rather than physically installing hardware and associated software. Live cloning refers to copying an existing virtual machine including an application e.g. a running cluster node . The copied virtual machine and application acts as a template for another node to be provisioned i.e. adapted for use as part of the expansion of the cluster. Moreover the cloning may be live i.e. during runtime although cloning may be performed at other times as well. Although the examples described herein refer to cloning a virtual machine including a node of a cluster the virtual machine that is cloned may include any other type of application as well. Moreover in some implementations the application includes an interface such as an application programming interface to enable a controller to notify the application to prepare for the live cloning.

In some implementation the use of live cloning as described herein provides one or more of the following benefits no installation sources or procedures have to be maintained by a customer and provisioning can be performed quickly when compared to a physical installation and associated software since live cloning makes a copy from an existing running node. Moreover since the live clone is created from a running node the state of a node such as a cluster node may be preserved. For example if the live clone preserves the caches of the node from which it was cloned i.e. the parent node the newly provisioned live clone of the cluster node may be ready to use very quickly e.g. online and ready for use when compared to approaches that start with an empty cache.

In some implementations controller enables the addition and removal of computing resources with minimal administrative effort. The controller may also manage workloads and assign instances of applications to a computing resource. The controller may also build connections between computing and storage resources provide a transport layer for virtualization and support different network topologies such as TCP IP iSCSI and Fibre Channel. The controller may be coupled to or include a registry such as SAP s system landscape directory SLD with information representative of the current and past state of the clusters.

In the system of when an increase capacity is required a physical machine may be installed and another application server such as a dialog instance may be installed as well. For example if the system of was associated with a database for looking up credit card information as demand peaks e.g. during different times of day or during the holidays increased capacity may be required at which time additional hosts and an additional dialog instance may be instantiated to augment querying for credit card information.

Network attached storage provides a storage mechanism and in particular a shared file system or file server . For example network attached storage may store copies of application servers such as a central instances CI dialog instances DI and DI and a database instance DBI .

The central instance is an application server that controls the processes within a cluster and may include a message server for communications.

The dialog instances and are also application servers configured on dynamic cluster system . The dialog instance may be an application server providing applications such as a customer relationship management CRM application an enterprise resource planning ERP application a product lifecycle management application a supply chain management SCM application a supplier relationship management application as well as any other application. For example when a client computer accesses an SCM application at the central instance it is dispatched to any of the dialog instances and from then on an instance of the SCM application runs on the physical machine on which the dialog instance runs. If another client computer accesses the central instance the SCM application may be served from a different dialog instance or from the same dialog instance. In this example the dialog instance operates as an application server that wraps each instance of the SCM application so that the two SCM applications can run independently regardless of whether they run on the same or different nodes within the cluster. Moreover these aforementioned dialog instances may represent complex applications requiring complex and burdensome installation of the application operating system and associated data.

Dynamic cluster system may also include an instance of a database instance i.e. a database application server .

Dynamic cluster system includes a cluster . Cluster further includes a central instance A implemented on virtual machine VM A dialog instance A implemented on virtual machine B dialog instance B implemented on virtual machine C and database instance implemented on virtual machine D. Virtual machines A C may be implemented on a physical machine such as host A while virtual machine D may be implemented on host D. The hosts may be implemented as physical machines i.e. a server a computer a processor a blade and the like and each host may include a hypervisor such as hypervisors A and D and an operating system OS such as operating systems A D. The nodes of the cluster are represented by each of central instances A dialog instances A B and database instance .

User interface may be implemented as any type of interface that enables interaction with aspects of system including controller hypervisors A and D operating systems A D virtual machines A D central instance dialog instances A B and database instance . For example user interface may be implemented as a browser e.g. Netscape Navigator or a client application to interface with and or access controller .

At controller may initiate preparation for cloning. To prepare for cloning controller may contact the selected template to prepare for cloning. For example controller may access a standard interface such as an application program interface API at the node selected as the template and notify the selected template node to prepare for cloning. Specifically controller may access an API at dialog instance B. When that is the case dialog instance B may reject any additional calls from a dispatcher such as central instance A and suspend or terminate a pending session. The selected template node such as dialog instance B may also forward the request to virtual machine C although controller may also contact virtual machine C directly with the prepare for cloning request. In any case the application serving as the template which in this example is dialog instance B prepares for cloning. By enabling the dialog instance B to prepare for cloning any cloning that subsequently occurs results in a so called graceful cloning when compared to merely cloning the dialog instance B without such preparation. For example when allowed to prepare for cloning the state of the application such as dialog instance B is typically in a more stable state and is ready to be executed e.g. run and used after immediately after cloning. The prepare to clone request may also initiate a detachment of the node selected as the template. For example the selected node in this example dialog instance B may be detached from cluster . When a node is detached the detached node will not be served any additional requests from central instance A although the node may complete requests e.g. processes or sessions currently being executed. In some implementations a node may reject the request to clone e.g. the node is not capable of or not willing to clone .

At controller initiates the live cloning of the node. In some implementations controller initiates the live cloning after it receives from the selected template node a response indicating that the preparation to clone has taken place. For example dialog instance B virtual machine C and or hypervisor A may respond e.g. by sending a message that the cloning can take place. When cloning can take place controller may initiate cloning by instructing e.g. sending a message hypervisor A to migrate e.g. copy the running virtual machine C at hypervisor to another virtual machine at another hypervisor. Moreover controller may also instruct hypervisor A to keep a copy of virtual machine C and its contents e.g. dialog instance B operating system applications any state information and the like . Since the entire virtual machine C is cloned during runtime the cloning results in a copy including the entire contents of the virtual machine e.g. the operating system the application data any state information and the like .

At controller provides an indication e.g. a message to enable use of the cloned node. For example controller may notify the dialog instance virtual machine and or the hypervisor to begin operation as part of cluster . Moreover controller may also provide an indication to the hypervisor e.g. hypervisor of the selected template e.g. dialog instance B to resume use of the selected node used as the template e.g. reattach to the cluster and processes requests from a dispatcher such as central instance A . In this example the selected template node is dialog instance B so cloning results in an additional dialog instance for processing at cluster . For example when an increase capacity is required rather than require a physical installation the cloning provides an additional virtual machine including an application such as a dialog instance.

Controller may also detach a node and destroy a virtual machine. In some implementations rather than waiting until the template node selected at is in a state where it can be cloned controller initiates the cloning regardless of the state of the template node. Controller may also purge all sessions of the cloned node before starting the node as part of the cluster.

The systems and methods disclosed herein may be embodied in various forms including for example a data processor such as a computer that also includes a database digital electronic circuitry firmware software or in combinations of them. Moreover the above noted features and other aspects and principles of the present disclosed embodiments may be implemented in various environments. Such environments and related applications may be specially constructed for performing the various processes and operations according to the disclosed embodiments or they may include a general purpose computer or computing platform selectively activated or reconfigured by code to provide the necessary functionality. The processes disclosed herein are not inherently related to any particular computer network architecture environment or other apparatus and may be implemented by a suitable combination of hardware software and or firmware. For example various general purpose machines may be used with programs written in accordance with teachings of the disclosed embodiments or it may be more convenient to construct a specialized apparatus or system to perform the required methods and techniques.

The systems and methods disclosed herein may be implemented as a computer program product i.e. a computer program tangibly embodied in an information carrier e.g. in a machine readable storage device or in a propagated signal for execution by or to control the operation of data processing apparatus e.g. a programmable processor a computer or multiple computers. A computer program can be written in any form of programming language including compiled or interpreted languages and it can be deployed in any form including as a stand alone program or as a module component subroutine or other unit suitable for use in a computing environment. A computer program can be deployed to be executed on one computer or on multiple computers at one site or distributed across multiple sites and interconnected by a communication network.

Moreover although the subject matter described above was described with respect to virtual machines the virtual machines may be implemented as virtual appliances as well.

The foregoing description is intended to illustrate but not to limit the scope of the invention which is defined by the scope of the appended claims. Other embodiments are within the scope of the following claims.

