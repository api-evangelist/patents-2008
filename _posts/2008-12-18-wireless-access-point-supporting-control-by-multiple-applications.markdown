---

title: Wireless access point supporting control by multiple applications
abstract: A computing device configurable as a wireless network access point that can be controlled from multiple applications. The computing device provides an interface through which applications may input commands to change the state of the access point. The interface responds to these commands and other events, such as association or disassociation of a wireless client, in a manner that does not disrupt the applications or devices using the access point. To determine an appropriate response to any event, the interface may maintain state information, including a count of the number of applications and/or wireless devices that have taken action indicating an operating state of the wireless access point.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08855087&OS=08855087&RS=08855087
owner: Microsoft Corporation
number: 08855087
owner_city: Redmond
owner_country: US
publication_date: 20081218
---
Computer users frequently have a need to connect their computer to other computing devices. For example a user may wish to transfer audio files to his MP3 player synchronize his calendar and contact list on his PDA device with that on his computer or print a document onto his printer. The use of wireless communication for connections between computing devices has resulted in increased flexibility and mobility for computer users.

Wireless connections between a computer and another computing device may be made in a variety of ways. Computing devices may communicate directly with one another using a wireless peer to peer protocol. For example devices suited for low data rates may communicate over a protocol such as Bluetooth or ZigBee. Some devices also support Wi Fi protocol ad hoc mode which is another example of a peer to peer protocol as it supports devices communicating directly with one another.

Devices supporting the Wi Fi protocol may also operate in infrastructure mode in which they do not connect directly to one another as in a peer to peer protocol but communicate over a wireless local area network WLAN . In a typical WLAN a wireless client such as a computer or a device e.g. MP3 player PDA connects to an access point AP and communication is enabled between the client and a network through the AP.

Wireless access points frequently advertise their presence by broadcasting beacons at regular intervals. The broadcasted beacons may enable wireless clients to locate an access point and may also serve as a timing mechanism so that communications to and from devices connected in the network may be synchronized. APs may be self contained hardware devices. Alternatively computing devices e.g. laptops or mobile phones can be adapted to act as APs through the use of software. Such software based access points or soft APs may allow a wireless client to access services not only on a network to which the computing device is connected but also on the computing device itself.

A computer configured to operate as wireless access point may serve as a wireless host to a number of devices each of which may interact with one or more applications executing on the computer. An interface to the access point conditionally responds to events that can alter the operating state of the access point. Processing in response to such events places the access point in a state in which it can satisfy the requirements of each of the one or more applications. The events to which the interface responds may include commands from applications to set the state of the access point or indications that wireless devices have associated or disassociated from the access point.

Processing in response to these events may be based on the nature of the event the operating state of the access point and other state information such as a number of previous commands processed.

In some embodiments the access point supports multiple operating states including an active state in which the access point both beacons and listens for association requests from wireless devices an inactive state in which the access point neither beacons nor listens for association requests from wireless devices and a silent state of operation in which the access point listens for association requests from wireless devices without beaconing.

Accordingly when an application executing on the computer such as a syncing application for a PDA device sends a start command over the interface to the access point the wireless access point may update state information and transition to the silent state in which it listens for connection requests from devices. The start command may be sent when the syncing application starts execution indicating a request to communicate with a device such as the PDA device. While the hosted access point is in the silent state when the application sends an advertise command over the application programming interface the hosted access point may update its state information and transition to the active state. The hosted access point may also transition to active state when a device successfully associates with the computer.

Conversely while the hosted access point is in an active state if a device disassociates itself from the access point or if an application sends a hide network command over the interface to the access point the access point may update its state information. Based on the state information the access point may transition back to the silent state. Though for some values of the state information the access point may not change state. Similarly while the device is in the silent state if an application sends a stop command over the interface to the access point the wireless access point may update its state information. Based on the state information the wireless access point may transition back to the inactive state. Though for some values of the state information the access point may not change state.

The inventors have recognized and appreciated that improved control mechanisms for wireless access points may simplify their use and increase the number of applications that can use wireless communications. By providing a control interface for a wireless access point that conditionally responds to events applications can be written more simply while still taking advantage of the functionality of the wireless access point. Nonetheless multiple applications concurrently using an access point to exchange data with other devices wirelessly can perform in a more intuitive fashion by avoiding conflicts between those applications as they use the wireless access point functionality. As a result wireless technology may be more readily applied to control program or transfer data between devices and applications on a computer. This capability can be used for example to synchronize wireless devices such as PDAs or smart phones with applications on a computer or to wirelessly access devices such as printers.

In some embodiments an improved control interface is provided for a wireless access point such as may be hosted on a computing device that also hosts multiple applications each of which may control the operating state of the wireless access point. In response to commands from the applications or other events that may influence the operating state of the access point the control mechanism may determine an appropriate state transition. The state transition may depend both on the current operating state of the wireless access point and other conditions such as the number of applications using the access point or the number of clients associated with it.

Additionally when responding to an event the control mechanism may update stored state information so that subsequent events may also be conditionally processed based on up to date state information. The state information may include for example the number of applications using the access point the number of applications using the access point in one or more states or the number of client devices associated with the wireless access point.

An improved control mechanism according to embodiments of the invention may be implemented in any suitable computing environment. However is a conceptual block diagram of a computer environment in which embodiments of the invention may be practiced. The computer environment may be in any suitable location including home or office and indoor or outdoor as the invention is not limited in this respect. Computer environment includes a computer such as laptop computer . While laptop computer is a mobile computer the invention is not limited to being practiced in environments with a mobile computer. In some environments in which the invention is practiced laptop computer may be connected to one or more external computer network s such as the Internet. However in other environments in which the invention is practiced a computer such as laptop computer may not have any connection to any external network such as external computer network s . If there exists a connection between laptop computer and external computer networks s the connection may be over any suitable communications medium including wired or wireless communications media as the invention is not limited in this respect.

Laptop computer may include a wireless network interface and may be configured to act as a wireless access point over the wireless network interface. The wireless access point may communicate using any suitable wireless protocol e.g. Wi Fi as the invention is not limited in this respect. Access point functionality may allow one or more wireless devices to communicate through laptop computer to network or to other devices also associated with the access point in a wireless local area network WLAN .

Any number or type of devices may communicate with laptop computer by connecting to the wireless access point provided on laptop computer . The devices may be any suitable computing devices capable of communicating over a wireless protocol understood by the wireless access point . In the computer environment for example the devices illustrated are MP3 player mobile device laptop and printer . In the example illustrated by each device is of a different device type and serves a different function but it is to be appreciated that the type or number of devices is not a limiting feature of this invention as long as each device is capable of communicating over a wireless protocol understood by the wireless access point .

A wireless network connection between laptop computer and a device such as mobile device may be established in any suitable way as the invention is not limited in this respect. In some environments in which the invention may be practiced the laptop computer and mobile device may engage in a Wi Fi Protected Setup handshake involving inputs from the user or any other suitable form of enrollment such as for example manual configuration of mobile device . The mobile device and laptop computer may then perform an 802.11i and 802.1X key exchange. In some environments in which the invention is practiced laptop computer may be configured to use different pre shared keys PSKs for different devices. If the key exchange proceeds successfully in some environments in which the invention may be practiced the connection may be successfully established at this point. The steps described above for establishing a connection however serve as an example as any suitable way of establishing a connection between a device and laptop computer may be used. Once a connection is established between the device and the wireless access point on laptop computer the device comprises a portion of the wireless local area network WLAN hosted by laptop computer .

Applications running on laptop computer may communicate with the devices connected to WLAN . For example the user may wish to synchronize email calendar or contact information between laptop computer and mobile device using a synchronization application running on laptop computer . As an another example the user of laptop computer may wish to transfer music files between MP3 player and an application running on laptop computer that serves a digital music library. As a third example the user of laptop computer may wish to run a peer to peer application that exchanges data with laptop . Laptop computer may also be configured with an application such as a device center that provides a user interface for displaying or managing connections to devices such as mobile device connecting over the wireless access point .

Wireless access point may operate at different times in different states. The operating state of wireless access point at any time may be influenced by actions of the applications executing on laptop computer that access devices connected to WLAN . Actions of devices associated with or requesting to associate with wireless access point may also influence the operating state of wireless access point . For example wireless access point may operate in an active state in which it is actively beaconing. When operating in a silent state wireless access point may listen for communications from devices without actively beaconing. The wireless access point when operating in an inactive state may neither beacon nor listen for communications from wireless devices.

The wireless access point may configure its operating state based on its processing of events which may originate from any of a plurality of sources. In some embodiments of the invention the events may be the receipt of commands originating from software components executing on laptop computer . The events in some embodiments may additionally or alternatively be communications originating from devices other than laptop computer and be sent over a computer communications medium to which laptop computer is connected. For example the events may be messages sent over external computer network s or may be sent over WLAN by a device such as mobile device and be received through the wireless access point . In general the events may originate from any suitable source or via any suitable communications medium if the event is not originating from laptop computer as the invention is not limited in this respect.

When events are received from multiple sources in some embodiments of the invention the wireless access point may conditionally respond to the events with the response dependent on the state of the wireless access point at the time of the event and other considerations. For example in some scenarios when the wireless access point receives a particular type of event it may change its configuration to operate in a different state. In other scenarios however the wireless access point may respond to the same type of event without making any configuration change.

Any suitable considerations may influence the conditional processing of events as the invention is not limited in this respect. In some embodiments the considerations taken into account may include the number of applications actively using the wireless access point and or the number of devices associated with the wireless access point. The conditional processing may additionally or alternatively be based on a state of operation of the wireless access point .

For example in some embodiments of the invention the wireless access point may be by default in the inactive state. In some embodiments of the invention commands may be sent to the wireless access point from software applications executing on laptop computer . In the example in which the wireless access point may currently be in the inactive state an application running on laptop computer that has requested the wireless access point to start communication with one of the devices may send a start command to the wireless access point . The functions of the application that trigger such a start command are not critical to the invention. However the command could be triggered by a user starting the synchronization application for example to exchange data with a device over WLAN such as mobile device . The wireless access point may process the start command and based on a number of conditions may change its state to the silent state. If other applications running on the laptop computer also each send a start command to the wireless access point while it is already in the silent state the wireless access point may not make any change to its state. In some embodiments of the invention the wireless access point may keep track of a number of applications which have sent a start command and use that information as part of its conditional processing. While this may be done in any suitable way as the invention is not limited in this respect in some embodiments the wireless access point may maintain one or more counters for this purpose.

Similarly in the example above an application executing on the laptop computer may send a stop command to the wireless access point . The stop command may be sent from the application to the wireless access point in any suitable way including via an application programming interface. For example the stop command may constitute a notification that the application such as a synchronization application requests to no longer communicate with devices over WLAN . Having received the stop command wireless access point may process it and based on one or more conditions it may change its state from the silent state to the inactive state. In some embodiments of the invention the wireless access point however upon processing the stop command may not make a state change. This decision may take into account any suitable considerations as the invention is not limited in this respect. In some embodiments the wireless access point may take into account a number of software applications which have indicated a request to initiate communication over WLAN such as by issuing a start command which may be tracked in any suitable way as discussed above. In some embodiments when the wireless access point determines that no applications have indicated a request to access devices over WLAN in response to a stop command from an application it may change its state to the inactive state although the decision to change state may also take into account additional or alternative considerations.

As discussed above events may originate from any suitable source including from a device such as mobile device indicating a request to initiate communication with the laptop computer over WLAN . Events may take any suitable form. In some embodiments the successful association of a device with wireless access point may constitute another example of an event. Based on its processing of the association event the wireless access point may configure itself to operate in a different state. The decision by wireless access point to operate in a different state may take into account any suitable considerations as the invention is not limited in this respect. In some embodiments the decision may be at least partly based on the current state of the wireless access point . For example the wireless access point may be operating in the silent state but based on its processing of an association event the wireless access point may transition the active state. However the wireless access point may not make any configuration state change upon receiving an association event if it is currently already in the active state.

It is to be appreciated that components pictured as separate components in may be grouped together in a single component in some embodiments of the invention while other embodiments of the invention may include several components to implement the functionality ascribed to a single component in the embodiment illustrated in . Additionally in some embodiments of the invention the components may be distributed differently between the operating system and the wireless network interface . Components illustrated as being within the wireless network interface may additionally or alternatively be comprised within the operating system and vice versa.

However the architecture illustrated allows conditional components processing of events to be incorporated into a logic component without requiring applications or network interface to be specially constructed. In the example illustrated by wireless network interface may comprise a driver which may communicate over an application programming interface API to other software components executing on the computing device . The driver may control radio . Radio may be operable in multiple states which may be set by commands sent to the driver through API .

The computing device may include a logic component which may conditionally process events and may communicate with the wireless network interface via the API . Logic component may be implemented using computer executable instructions or using any other suitable implementation. Logic component may respond to events to determine the operating state of the wireless access point and may generate commands to the wireless network interface . The commands may cause configuration changes of the wireless network interface according to the state determined by the logic component . One or more application s may be executing on the operating system . The application s may also communicate with the logic component via an API . An example application may be a synchronization application which initiates a request to communicate with a device such as mobile device through the wireless access point in order to synchronize data with the device as discussed in conjunction with . Applying the example of the synchronization application in to the architecture illustrated in a command sent by the synchronization application such as a start command may be sent over API to the logic component for conditional processing. In the example of the association event discussed in conjunction with the association event may be sent to the logic component from the wireless network interface over the API for processing. Thus while events may be sent from any suitable source as the invention is not limited in this respect in the example illustrated in logic component may receive events from either application s over API or from the wireless network interface via API . However in other embodiments events may be received from other sources both within and external to the wireless access point as well as via any other suitable computer communications medium.

As discussed in conjunction with in some embodiments the wireless access point may be configured to operate in multiple states. As part of its event processing the logic component may store state information associated with the wireless access point. In some embodiments at least a portion of the state information may be one or more counters which may track for example a number of currently associated devices or a number of the application s which have requested the wireless access point to start communication with one or more devices. However state information may be tracked in any suitable way as the invention is not limited in this respect.

The device may operate in any suitable number or type of states as this invention is not limited in this respect. The example illustrated in shows four states the inactive state the silent state the active state and the unavailable state . In the inactive state as discussed in conjunction with the device may be powered on but not listening to requests from devices and not sending wireless beacons. If the device is in the silent state it does actively listen for device requests but does not send wireless beacons. When the device is operating in the active state it both listens for device requests and sends wireless beacons. Additionally the device may be in an unavailable state in which it cannot readily transition based on the receipt of one or more events to any of states or .

As an example of the unavailable state if the radio discussed in conjunction with ceases to function the wireless access point may be unavailable. As indicated by transitions and the wireless access point may transition from any of states or to the unavailable state . Multiple possible events or scenarios could cause the functionality provided by the wireless access point to become unavailable. The determination whether to make the wireless access point unavailable may be done in any suitable way as the invention is not limited in this respect. Additionally in some embodiments of the invention a transition to the unavailable state may not be intentional. For example it may be as a result of a hardware or software failure.

When an application is in the inactive state the processing such as by the logic component in of an event may lead the device to transition to the silent state . In an embodiment of the invention the transition from the inactive state to the silent state may be as a result of receiving a start command from an application. As discussed in conjunction with the start command may indicate that the application has requested that the wireless access point start communication with a device. For example a synchronization application may request that the wireless access point start communication with a device such as mobile device in order to synchronize calendar or email data. Commands from applications to the wireless access point may be sent in any suitable way. In an embodiment of the invention commands from applications are sent over an API such as the API in .

The wireless access point may also implement a transition between the silent state and the inactive state . Transition may be caused by an application issuing a stop command which may indicate that the application has requested to no longer communicate with any devices through the wireless access point. In some embodiments of the invention the transition does not occur at every receipt of a stop command but conditionally only upon the receipt of the stop command from the last application which had sent a start command but no follow on stop command.

A transition from the silent state to the active state may also occur as the result of the processing of events. In some embodiments of the invention transition may result if any application issues an advertise command in which it indicates that it has requested that the wireless access point advertise the device network. Transition may alternatively or additionally be caused when a device successfully associates with the wireless access point as discussed in conjunction with .

A transition is also possible in the reverse direction from the active state to the silent state . Transition may occur conditionally when the last active application issues a hide command indicating a request to the wireless access point to hide the device network. This last remaining application in transition refers to the last remaining application which had issued an advertise command but no hide command. As with transition in some embodiments transition may also occur for other reasons. In some embodiments for example transition may be caused by an event such as the receipt of an indication that the last active client has disconnected or disassociated from the wireless access point.

Embodiments of the invention may process any number or type of events. illustrate processing in response to events that may occur in some embodiments of the invention. illustrates a flowchart for the conditional processing of the wireless access point of a start device network command in accordance with an embodiment of the invention. As discussed above a start device network command may be sent from an application executing on the wireless access point and may indicate that the application has requested that the wireless access point start communication with an external device such as mobile device . This flowchart may be implemented in any suitable way. In the embodiment of the invention illustrated by the logic of the flowchart may be implemented by the logic component .

The flowchart starts at block with the receipt of the start device network command . At block the process may check whether the wireless access point is currently in the inactive state. Checking the current state of the wireless access point may be done in any suitable way. In the embodiment illustrated by the process may do so by means of checking state information maintained by logic component . Alternatively the state of the wireless access point may be determined by polling the wireless network interface such as wireless network interface illustrated by through API . Regardless of the manner of checking the current state of the wireless access point if the current state is the inactive state it checks at block if this is the first time the wireless access point has received a request to start communication with any devices i.e. the wireless access point has not hosted a wireless network before . If so it may at block create a secure profile for the hosted network such as WLAN . The secure profile may be created any suitable way as the invention is not limited in this respect. In the embodiment of the invention illustrated by the operating system may be configured to select wireless settings that are sufficiently secure and unique by default to host a wireless network.

The process then proceeds to block . As discussed in conjunction with above in some embodiments of the invention the wireless access point may keep track of the number of current applications which have issued a request to communicate with devices over the wireless access point. While various embodiments of the invention may keep track of this information in a variety of ways the embodiments illustrated by do so by means of at least one counter. The embodiments of make use of two counters for this purpose although other embodiments may make use of a lesser or greater number of counters. A global access point counter Global AP Count maintains counts across all applications and may be used for determining when to start or stop the hosted wireless device network. Additionally a per application access point counter per Application AP count maintains a counter for each application. In some embodiments the per Application AP count may be used to validate events received from applications as well as to clean up the Global AP Count in the event that an application exits abnormally such as via a crash. Thus at block the process may initialize the Global AP Count and per Application AP Count to one. If at block it was determined that this was not the first time that the wireless access point has received a request to start communication with any devices the process may skip the secure profile creation at block proceeding to block and performing the same steps as described above.

The flowchart next proceeds to block . Some embodiments of the invention also keep track of a number of entities which have indicated a request for the wireless access point to send out beaconing information. While the invention is not limited to the type of entity which has requested beaconing from the wireless access point in some embodiments of the invention a device may trigger an event indicating a request for beaconing. In other embodiments an application executing instructions on the same computing device as that which is configured to act as a wireless access point may also request beaconing from the wireless access point. As in the discussion of the AP count above this information may be tracked in any suitable way. In the embodiment of the invention illustrated by the information is tracked using an additional set of one or more counters referred to in this embodiment as beacon counters. As in the discussion of the AP counters above applications tracking this information using counters may do so using any suitable number of counters. In the embodiments of this information is tracked using two counters. A Global Beacon Count may record references across all applications and may be used for determining when to advertise or hide the wireless device network. Additionally a per Application Beacon Count may be maintained for each application and may be useful for validating events received from applications as well as to clean up the Global Beacon Count in the event that an application exits abnormally such as via a crash. In block both the Global Beacon Count and the per Application Beacon Count may be initialized to zero. In the embodiment of the invention illustrated by the sending of a start device network command by an application does not indicate that the application requests beaconing. Other embodiments of the invention may have different states or different types of commands from the embodiment illustrated by in which case the one or more beacon counters may be set to a value other than zero.

The flow proceeds to block in which the wireless access point transitions its state to the silent state which in the embodiment discussed in conjunction with signifies that the wireless access point listens for device requests but does not send beacons.

Returning momentarily to block in which a check is performed of the current operating state of the wireless access point the process may branch depending on the current operating state. In block if the wireless access point determines that its current state is not the inactive state the flow proceeds to block in which it increments the Global AP Count and the per Application AP Count discussed in conjunction with block above. The discussion above does not take into account embodiments which may include an unavailable state as discussed in conjunction with . In embodiments with the unavailable state the Global AP Count and the per Application AP Count would not be incremented if the current state is the unavailable state.

The processing of the start device network command may be finished at this point accordingly the flow may proceed to end block .

The flowchart starts at block with the receipt of the advertise device network command . At block the process may check if the access point is currently operating in the silent state or the active state. As discussed in conjunction with in the embodiment illustrated by the process may check the state by means of state information . If the current state is not the silent state or the active state the process may terminate with an error at block . The process may perform any suitable processing in response to an error condition and different error conditions may elicit different responses as the invention is not limited in this respect. In an embodiment of the invention the advertise command may only be validly received while the wireless access point is operating in the silent state or the active state.

Otherwise the flowchart proceeds to blocks and in which it may increment the Global Beacon Count and per Application Beacon Count respectively discussed in conjunction with . The process may then branch at block depending on whether the wireless access point is in the silent state. If it is not in the silent state in some embodiments of the invention the process may assume it is already in the active state at which point it may be done processing the advertise command and may proceed to block .

If the process determines at block that it is in the silent state it proceeds to block in which it may set the beacon period and transmission power. In some embodiments of the invention the beacon period and transmission power may be set in such a way as to reduce the power consumption of the wireless access point as well as the power consumption of any devices connecting through it. In some embodiments of the invention setting the beacon period and transmission power may effectively turn on beaconing. Setting the beacon period and transmission power may be done in any suitable way including in the embodiment of by sending one or more commands to the wireless network interface through API .

The flow then proceeds to block in which the process may transition to the active state. In some embodiments of the invention the processing of the advertise device network command may be finished at this point and the process may proceed to end block .

As discussed in conjunction with in some embodiments of the invention the receipt of additional or alternative events such as the successful association of a device with the wireless access point may also signify a requirement for the access point to send beacons. In some embodiments of the invention the successful association of a device may follow a similar process as that illustrated by the flowchart of . In the embodiment of the invention illustrated by the successful association of a device follows an identical process as the receipt of an advertise device network command with the exception of block illustrated with a dashed border which may not apply to the successful association of a device.

The flowchart starts at block with the receipt of the hide device network command . At block the process may check whether it is in the active state. As discussed in conjunction with in the embodiment illustrated by the process may check its state by means of state information . If the process determines at block that the wireless access point is not currently operating in active state the process may proceed to block in which it may terminate with an error.

In some embodiments the hide device network command cannot be validly processed if the per Application Beacon Count discussed in conjunction with is not greater than zero since the per Application Beacon Count should have been incremented upon the receipt of a corresponding advertise network command for the same application. Accordingly at block the process may check whether the per Application Beacon Count is less than or equal to zero and if so it may terminate with an error at block .

Otherwise the process may proceed to block at which point it may decrement the Global Beacon Count which was discussed in conjunction with above. Proceeding to block the process may then decrement the per Application Beacon Count. At step the process may then check if the current Global Beacon Count is set to zero. If not then the processing of the hide device network command may be finished and the flow may proceed to end block . If the current beacon count is set to zero in block the process may transition to the silent state as discussed in conjunction with and then may proceed to end block .

As discussed in conjunction with in some embodiments of the invention the receipt of additional or alternative events such as the disassociation of a device with the wireless access point may signify that the device no longer requires beaconing from the wireless access point. In some embodiments of the invention disassociation of a device may follow a similar process as that illustrated by the flowchart of . In the embodiment of the invention illustrated by the disassociation of a device with the access point follows an identical process as the receipt of a hide device network command with the exception of blocks and illustrated with a dashed border which may not apply to the disassociation of a device.

The flowchart starts at block with the receipt of the stop device network command . At block the process may check whether it is in the inactive state. As discussed in conjunction with in the embodiment illustrated by the process may check its state by means of state information . In some embodiments of the invention if the process determines at block that it is currently operating in the inactive state it may proceed to block in which it may terminate with an error.

Otherwise the process proceeds to block in which it may check whether the per Application AP Count discussed in conjunction with is less than or equal to zero. If it is the process may terminate with an error in block . If not at block the process may check if the per Application AP Count is equal to 1 and the per Application Beacon Count is greater than zero. If both conditions are true the process may terminate with an error in block .

Otherwise the process proceeds to block in which it checks whether its current state of operation is the silent state. If it is not in the silent state in some embodiments of the invention the process may then assume it is in the active state. It may then proceed to block in which it may decrement the Global AP count and per Application AP Count which was discussed in conjunction with . Some embodiments of the invention may have at that point finished processing stop device network command and proceed to end block .

Returning to block if the process instead determines that the wireless access point is currently operating in the silent state at block it may it may decrement the Global AP count and per Application AP Count. At block the process may then check to see whether the Global AP count is set to zero. If the Global AP count is not set to zero the processing may be finished at this point and it may proceed to end block . If on the other hand the Global AP count is set to zero the process may transition in block to the inactive state at which point the process may now have finished processing the stop device network command and may proceed to end block .

Having thus described several aspects of at least one embodiment of this invention it is to be appreciated that various alterations modifications and improvements will readily occur to those skilled in the art.

Such alterations modifications and improvements are intended to be part of this disclosure and are intended to be within the spirit and scope of the invention. Accordingly the foregoing description and drawings are by way of example only.

The above described embodiments of the present invention can be implemented in any of numerous ways. For example the embodiments may be implemented using hardware software or a combination thereof. When implemented in software the software code can be executed on any suitable processor or collection of processors whether provided in a single computer or distributed among multiple computers.

Further it should be appreciated that a computer may be embodied in any of a number of forms such as a rack mounted computer a desktop computer a laptop computer or a tablet computer. Additionally a computer may be embedded in a device not generally regarded as a computer but with suitable processing capabilities including a Personal Digital Assistant PDA a smart phone or any other suitable portable or fixed electronic device.

Also a computer may have one or more input and output devices. These devices can be used among other things to present a user interface. Examples of output devices that can be used to provide a user interface include printers or display screens for visual presentation of output and speakers or other sound generating devices for audible presentation of output. Examples of input devices that can be used for a user interface include keyboards and pointing devices such as mice touch pads and digitizing tablets. As another example a computer may receive input information through speech recognition or in other audible format.

Such computers may be interconnected by one or more networks in any suitable form including as a local area network or a wide area network such as an enterprise network or the Internet. Such networks may be based on any suitable technology and may operate according to any suitable protocol and may include wireless networks wired networks or fiber optic networks.

Also the various methods or processes outlined herein may be coded as software that is executable on one or more processors that employ any one of a variety of operating systems or platforms. Additionally such software may be written using any of a number of suitable programming languages and or programming or scripting tools and also may be compiled as executable machine language code or intermediate code that is executed on a framework or virtual machine.

In this respect embodiments of the invention may be provided using a computer readable medium or multiple computer readable media e.g. a computer memory one or more floppy discs compact discs optical discs magnetic tapes flash memories circuit configurations in Field Programmable Gate Arrays or other semiconductor devices or other tangible computer storage medium encoded with one or more programs that when executed on one or more computers or other processors perform methods that implement the various embodiments of the invention discussed above. The computer readable medium or media can be transportable such that the program or programs stored thereon can be loaded onto one or more different computers or other processors to implement various aspects of the present invention as discussed above.

The terms program or software are used herein in a generic sense to refer to any type of computer code or set of computer executable instructions that can be employed to program a computer or other processor to implement various aspects of the present invention as discussed above. Additionally it should be appreciated that according to one aspect of this embodiment one or more computer programs that when executed perform methods of the present invention need not reside on a single computer or processor but may be distributed in a modular fashion amongst a number of different computers or processors to implement various aspects of the present invention.

Computer executable instructions may be in many forms such as program modules executed by one or more computers or other devices. Generally program modules include routines programs objects components data structures etc. that perform particular tasks or implement particular abstract data types. Typically the functionality of the program modules may be combined or distributed as desired in various embodiments.

Also data structures may be stored in computer readable media in any suitable form. For simplicity of illustration data structures may be shown to have fields that are related through location in the data structure. Such relationships may likewise be achieved by assigning storage for the fields with locations in a computer readable medium that conveys relationship between the fields. However any suitable mechanism may be used to establish a relationship between information in fields of a data structure including through the use of pointers tags or other mechanisms that establish relationship between data elements.

Various aspects of the present invention may be used alone in combination or in a variety of arrangements not specifically discussed in the embodiments described in the foregoing and is therefore not limited in its application to the details and arrangement of components set forth in the foregoing description or illustrated in the drawings. For example aspects described in one embodiment may be combined in any manner with aspects described in other embodiments.

Also embodiments of the invention may be provided via a method of which an example has been provided. The acts performed as part of the method may be ordered in any suitable way. Accordingly embodiments may be constructed in which acts are performed in an order different than illustrated which may include performing some acts simultaneously even though shown as sequential acts in illustrative embodiments.

Use of ordinal terms such as first second third etc. in the claims to modify a claim element does not by itself connote any priority precedence or order of one claim element over another or the temporal order in which acts of a method are performed but are used merely as labels to distinguish one claim element having a certain name from another element having a same name but for use of the ordinal term to distinguish the claim elements.

Also the phraseology and terminology used herein is for the purpose of description and should not be regarded as limiting. The use of including comprising or having containing involving and variations thereof herein is meant to encompass the items listed thereafter and equivalents thereof as well as additional items.

