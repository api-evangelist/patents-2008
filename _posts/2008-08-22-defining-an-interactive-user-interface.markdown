---

title: Defining an interactive user interface
abstract: A system and method for defining an interactive user interface having one or more states and one or more interactive elements. An exemplary implementation of the method comprises the steps of inputting one full screen graphics of an interactive user interface for each state of the interactive user interface; defining an area within the interactive user interface for each of the one or more interactive elements, and automatically generating computer readable code or graphics enabling a graphic display of each state of each interactive element. The method may further comprise the step of storing the geometric properties and positional information of the defined area of the interactive user interface corresponding to each of the one or more interactive elements. The stored geometric properties and positional information can be used to facilitate the editing and modification of the interactive user interface.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09442703&OS=09442703&RS=09442703
owner: Proscope Technologies, Inc.
number: 09442703
owner_city: Horsham
owner_country: US
publication_date: 20080822
---
This application claims benefit of U.S. Provisional Application Ser. No. 60 957 354 filed Aug. 22 2007 entitled Defining an Interactive User Interface which application is incorporated herein by reference.

This invention relates generally to a method and system to define interactive computer user interfaces.

Interactive applications generally have a user interface composed of interactive elements e.g. buttons . The interactive elements usually have multiple states that respond to user action. A user may use a pointing device usually a computer mouse to place a pointer at different locations within the interface. Responding to the user s action such as placing the mouse pointer over an interactive element rollover a different graphic of the interactive element under the mouse pointer may be displayed to indicate the different state of the interactive element.

Customarily interactive elements within an interactive interface can be as simple as having only one state normal or two states normal and rollover or could be as complex as having four normal rollover pressed and disabled or even more states. The author of the interactive interface can associate a variety of predetermined functions to any defined element.

Today interactive applications are generally constructed by a method known as cutting and placing. First graphics creation and editing software such as Microsoft Paint or Adobe Photoshop is used to author the overall appearance and layout of the interface. Graphics for each state of each individual interactive element are created usually by defining and cutting the element from an overall layout and then saving as an individual file. For a two state element such as a button it is typically displayed in a normal state but then displayed in a rollover state in response to mouse location. The author manually creates and saves at least one image for the rollover state of the button and a background image containing the normal image of the button at the correct geometric position. This method requires the cutting and placing of a large number of graphic files when the interactive interface is complex such as when multiple interactive elements are desired. In certain instances for an interface containing multiple elements having multiple states the number of images I requiring creation would be at least I E S 1 1 where E is the number of interactive elements in the interface and S is the number of states assuming all elements have the same number of states . Other instances require that a graphic be created for each state of each of the individual interactive elements. In these other instances the number of graphics an author must create and manage increases to I E S 1.

The second step of the construction process requires placement of the created images at their proper geometric position within the interface. To create the final interface the author would usually need a second software application such as Adobe Flash or Microsoft Visual Studio . Using these tools the author places an individual image for each state of each interactive element against a background graphic trying to place the respective state image of the interactive element back in the exact original location of the element within the overall layout. When individual graphic files are created and saved for each element at the cutting stage the files only retain their size information but not their positional information in relation to the overall interface from which the element was cut. Because of the lack of inherent positional information in the files the author must manually line up each of the completed individual pieces of graphic to achieve the intended look usually through multiple rounds of painstaking trial and error.

Lastly the graphic for each state of each interactive element must be assembled and functionality defined so that a pre determined function is assigned to each state of each element in response to user input. Depending on the output platform the defining can occur during reassembly of the element layers in the overall interface or as a separate step. The entire process is time consuming and prone to error making the cutting and placing and the defining and reassembly inefficient and labor intensive. If the author later decides to change an image for one or more states of one or more elements or decides to add a state the entire process of cutting and placing and defining and reassembly of the respective elements must be completely performed again.

The present invention provides a system for defining an interactive user interface and includes a graphical user interface for inputting at least one full screen graphics of an interactive user interface having one or more states. Each of the at least one full screen graphics can be associated with one state of the interactive user interface. An interactive graphical tool can be included for defining an area within the interactive user interface that corresponds to any each of one or more interactive elements displayed within any each of the at least one full screen graphics. A data storage device can be included for storing geometric properties and positional information of the defined area of the interactive user interface corresponding to each of the one or more interactive elements. An output generator can also be included for automatically generating computer readable code or graphics enabling a display of each state of each of the one or more defined interactive elements.

In one aspect of the invention the code or the graphics for each state of each of the one or more defined interactive elements is generated from the respective full screen graphics inputted for the respective state and from the geometric properties and positional information defined and stored for the respective interactive element. In another aspect the graphics for each state of each of the one or more defined interactive elements corresponds to a portion of the full screen graphics inputted for the respective state delimited by the geometric properties and positional information defined and stored for the respective interactive element.

In a further aspect the computer readable code generated by the output generator enables a computer to display each state of each of the one or more interactive elements in the area defined within the interactive user interface for the respective interactive element in response to user input for the respective state and for the respective interactive element. In certain embodiments of the system the interactive user interface is displayed in a web browser.

The system of the present invention may also comprise a second graphical tool for defining association of each of the at least one full screen graphics to one state of the interactive user interface. A third graphical tool could also be included for assigning functionality to each state of each of the interactive elements.

The present invention also provides a method implemented at least in part by machine for defining an interactive user interface. The method can include the steps of inputting one full screen graphics of an interactive user interface for each state of the interactive user interface where the interactive user interface has one or more states and one or more interactive elements defining an area within the interactive user interface for each of the one or more interactive elements and automatically generating computer readable code or graphics enabling a graphic display of each state of each interactive element.

In one embodiment of the method a further step would store the geometric properties and positional information of the defined area of the interactive user interface corresponding to each of the one or more interactive elements. In another embodiment the code or the graphics for each state of each of the one or more defined interactive elements is generated from the respective full screen graphics inputted for the respective state and from the geometric properties and positional information defined and stored for the respective interactive element. In a further embodiment the graphics for each state of each of the one or more defined interactive elements corresponds to a portion of the full screen graphics inputted for the respective state delimited by the geometric properties and positional information defined and stored for the respective interactive element.

In one aspect of the invention the computer readable code generated enables a computer to display each state of each of the one or more interactive elements in the area defined within the interactive user interface for the respective interactive element in response to user input for the respective state and for the respective interactive element. In another aspect the interactive user interface is displayed in a web browser.

In one embodiment of the invention further editing the interactive user interface includes defining an area within the interactive user interface for each interactive element to be added or revised and automatically generating computer readable code enabling a graphic display of each state of each interactive element including the added and revised interactive elements. In another embodiment further editing of the interactive user interface includes inputting one full screen graphics of the interactive user interface for each state of the interactive user interface to be added or revised retrieving from the stored geometric properties positional information corresponding to each of the one or more interactive elements and automatically generating computer readable code enabling a graphic display of each state of each interactive element based on the added or revised full screen graphics.

The present invention further provides a second method implemented at least in part by machine for defining an interactive user interface. In this method involves inputting one full screen graphics of an interactive user interface for each state of the interactive user interface where the interactive user interface has one or more states and one or more interactive elements defining an area within the interactive user interface for each of the one or more interactive elements and automatically generating an individual graphic for each state of each interactive element.

In one aspect of the second method of the invention the individual graphic for each state of each interactive element is generated from the full screen graphics for the respective state and from the area defined for the respective interactive element. In another aspect the individual graphic for each state of each interactive element is a portion of the full screen graphics for the respective state delimited by the area defined for the respective interactive element.

One embodiment of this second method further involves storing the geometric properties and positional information of the defined area of the interactive user interface corresponding to each of the one or more interactive elements. In another embodiment the method further includes creating a computer readable code of the interactive user interface causing a computer to display each individual graphic in the area defined within the interactive user interface for the respective interactive element and in response to user input for the respective state.

Although not required the invention can be implemented via an application programming interface API for use by a developer or tester and or included within the network browsing software which will be described in the general context of computer executable instructions such as program modules being executed by one or more computers e.g. client workstations servers or other devices . Generally program modules include routines programs objects components data structures and the like that perform particular tasks or implement particular abstract data types. Typically the functionality of the program modules may be combined or distributed as desired in various embodiments. Moreover those skilled in the art will appreciate that the invention may be practiced with other computer system configurations. Other well known computing systems environments and or configurations that may be suitable for use with the invention include but are not limited to personal computers PCs server computers hand held or laptop devices multi processor systems microprocessor based systems programmable consumer electronics network PCs minicomputers mainframe computers and the like. An embodiment of the invention may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network or other data transmission medium. In a distributed computing environment program modules may be located in both local and remote computer storage media including memory storage devices.

With reference to an example system for implementing the invention includes a general purpose computing device in the form of a computer . Components of computer may include but are not limited to a processing unit a system memory and a system bus that couples various system components including the system memory to the processing unit . The system bus may be any of several types of bus structures including a memory bus or memory controller a peripheral bus and a local bus using any of a variety of bus architectures. By way of example and not limitation such architectures include Industry Standard Architecture ISA bus Micro Channel Architecture MCA bus Enhanced ISA EISA bus Video Electronics Standards Association VESA local bus Peripheral Component Interconnect PCI bus also known as Mezzanine bus and PCI Express bus.

Computer typically includes a variety of computer readable media. Computer readable media can be any available media that can be accessed by computer and includes volatile and nonvolatile removable and non removable media. By way of example and not limitation computer readable media may comprise computer storage media and communication media. Computer storage media includes volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Computer storage media includes but is not limited to random access memory RAM read only memory ROM Electrically Erasable Programmable Read Only Memory EEPROM flash memory or other memory technology compact disc read only memory CDROM digital versatile disks DVD or other optical disk storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by computer . Communication media typically embodies computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term modulated data signal means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media includes wired media such as a wired network or direct wired connection and wireless media such as acoustic radio frequency RF infrared and other wireless media. Combinations of any of the above should also be included within the scope of computer readable media.

The system memory includes computer storage media in the form of volatile and or nonvolatile memory such as ROM and RAM . A basic input output system BIOS containing the basic routines that help to transfer information between elements within computer such as during start up is typically stored in ROM . RAM typically contains data and or program modules that are immediately accessible to and or presently being operated on by processing unit . By way of example and not limitation illustrates operating system application programs other program modules and program data . RAM may contain other data and or program modules.

The computer may also include other removable non removable volatile nonvolatile computer storage media. By way of example only illustrates a hard disk drive that reads from or writes to non removable nonvolatile magnetic media a magnetic disk drive that reads from or writes to a removable nonvolatile magnetic disk and an optical disk drive that reads from or writes to a removable nonvolatile optical disk such as a CD ROM or other optical media. Other removable non removable volatile nonvolatile computer storage media that can be used in the example operating environment include but are not limited to magnetic tape cassettes flash memory cards digital versatile disks digital video tape solid state RAM solid state ROM and the like. The hard disk drive is typically connected to the system bus through a non removable memory interface such as interface and magnetic disk drive and optical disk drive are typically connected to the system bus by a removable memory interface such as interface .

The drives and their associated computer storage media discussed above and illustrated in provide storage of computer readable instructions data structures program modules and other data for the computer . In for example hard disk drive is illustrated as storing operating system application programs other program modules and program data . Note that these components can either be the same as or different from operating system application programs other program modules and program data . Operating system application programs other program modules and program data are given different numbers here to illustrate that at a minimum they are different copies. A user may enter commands and information into the computer through input devices such as a keyboard and pointing device commonly referred to as a mouse trackball or touch pad. Other input devices not shown may include a microphone joystick game pad satellite dish scanner or the like. These and other input devices are often connected to the processing unit through a user input interface that is coupled to the system bus but may be connected by other interface and bus structures such as a parallel port game port or a universal serial bus USB .

A monitor or other type of display device is also connected to the system bus via an interface such as a video interface . In addition to monitor computers may also include other peripheral output devices such as speakers and printer not shown which may be connected through an output peripheral interface .

The computer may operate in a networked environment using logical connections to one or more remote computers such as a remote computer . The remote computer may be a personal computer a server a router a network PC a peer device or other common network node and typically includes many or all of the elements described above relative to the computer although only a memory storage device has been illustrated in . The logical connections depicted in include a local area network LAN and a wide area network WAN but may also include other networks. Such networking environments are commonplace in offices enterprise wide computer networks intranets and the Internet.

When used in a LAN networking environment the computer is connected to the LAN through a network interface or adapter . When used in a WAN networking environment the computer typically includes means for establishing communications over the WAN such as the Internet. In a networked environment program modules depicted relative to the computer or portions thereof may be stored in the remote memory storage device. By way of example and not limitation illustrates remote application programs as residing on memory device . Remote application programs include but not limited to web server applications such as Microsoft Internet Information Services IIS and Apache HTTP Server which provides content resides on the remote storage device or other accessible storage device to the World Wide Web. It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used.

One of ordinary skill in the art can appreciate that a computer or other client devices can be deployed as part of a computer network. In this regard the present invention pertains to any computer system having any number of memory or storage units and any number of applications and processes occurring across any number of storage units or volumes. An embodiment of the present invention may apply to an environment with server computers and client computers deployed in a network environment having remote or local storage. The present invention may also apply to a standalone computing device having programming language functionality interpretation and execution capabilities.

The present Interface Definition software of the present invention Carving Station introduces a novel approach to the creation of interactive applications by uniquely organizing information and automating much of the process of defining an interactive user interface. The automation process of the present invention can be customized for any platform. In a preferred embodiment Carving Station provides a Design mode for composition of the interactive interface and a Preview mode for visualization and validation of the created interactive interface.

More specifically the author first decides on a layout of the interactive user interface including the number of states for the interactive elements. Instead of inputting an individual graphic for each state of each element as customarily done the author inputs one full screen graphics for each state where the one full screen graphics contains all of the interactive elements displayed in the respective state. For example for a rollover state the author inputs only one full screen graphics where the one full screen graphics shows each interactive element in its rollover state. A full screen graphics as used herein can refer to a graphic that occupies the entire intended display area of the interactive interface or to a graphic of a portion of the interactive interface within which the interactive elements would reside.

Accordingly the number of images the author must create is equal to the number of states I E. Therefore the present invention greatly reduces the number of individual data points such as graphics and positional information the author must supply and manage. illustrate an example of the prior art cutting and placing method. For an interface having five two state buttons a total of 11 individual graphics must be created one graphic for each of five buttons for the normal state one graphic for each of five buttons for the rollover state and one background graphic . illustrate two images input by the author in the present invention to generate the same five button two state interface shown in . Using Carving Station the author inputs only one full screen graphics for the normal state which shows all elements in their normal state and one full screen graphics for the rollover state which shows all elements in their rollover state .

Referring now to Carving Station provides a graphical user interface for the input graphics in a Design mode . The author inputs each created full screen graphics into Carving Station and assigns the graphic to its corresponding state . illustrates a screen shot of the graphical user interface of a preferred embodiment of the present invention in the design mode . In the embodiment Carving Station is a stand alone Windows application although the present invention can be adapted for other applications or as a component of a larger software package such as Adobe Photoshop Flash or Microsoft Visual Studio . As shown the interface provides the author an option to select between the Design mode and a Preview Mode . The author can also designate a location for Source Art where the full screen graphics input graphics can be located. A file name for each full screen graphics can be entered into the corresponding space for each respective layer each included state representing a layer . The full screen graphics are displayed as layers in a display area . In one embodiment of the invention Carving Station provides four state layers Normal Mouse Over i.e. Rollover Pressed and Disabled . In the example illustrated in only two states are used Normal and Mouse Over with the unused states left blank. The author can also designate a location for the collection of the output files such as store to Repository File System Oracle Database SQL Server database and Microsoft Content Manager Server. The output files can be made compatible with various formats such as Adobe Flash Movie PowerPoint file HTML Page and Microsoft Sharepoint server etc.

As a final author step in the design process of the present invention the author uses tools provided by Carving Station to graphically identify areas on the full screen graphics corresponding to the desired individual interactive elements . In the example of the individual elements are defined as rectangles . The areas selected Hot Spots to define the interactive elements are highlighted in a different color . Each Hot Spot is assigned a name and is displayed in a list . All of the interactive elements for all of the states or layers are defined at the same time. The size and positional information of each interactive element in relation to the full screen graphics Carved geometry is inherent to the definition of the geometrical area that represents each interactive element and is recorded and saved when defined by the author. Therefore the customary need to retain positional information externally is eliminated along with the requirement of placing or replacing the elements manually through trial and error.

At any time during the interactive interface defining process the author can define and save an entire composition including all of the graphics and all of the positional and size information of the interactive elements to a computer readable media . Functionality for each state of each of the interactive element can be assigned during element definition or as a separate step at a later time . If the author later desires to change the look of a state all the author needs to do is input a full screen graphics incorporating the desired change replacing the original graphic associated with the respective state . The present invention then detects that a source graphic has changed and automatically updates the composition. The author could then store the updated composition. If an author desires to add states to an already defined interface the author merely inputs one full screen graphics for each state the author would like to add and associates the respective full screen graphics with the proper state . If the author desires to add an interactive element the author merely identifies an area on the full screen graphics for the interactive element to be added . A name is assigned to the newly added element and the size and positional information of the added interactive element is automatically recorded and saved . Accordingly there is no need to supply manage and place numerous graphics or to define and reassemble every element layer in the interactive user interface. Since the design process of the present invention is platform independent the author needs focus only on aesthetics of the interface with no concern to platform specific coding.

Preview mode enables the author to visualize and validate the interactive interface designed . In a preferred embodiment a specific platform is selected by the author at the beginning of the design process. When the Preview mode is selected the Carving Station using the dimension and positional information Carved geometry and supplied source graphics automatically generates graphics and code specific for the selected platform . The interactive interface designed by the author is previewed as native code for the platform of intended interactive interface publication. For example if the author chooses to publish the final interactive interface as a regular web page Carving Station would automatically generate graphics for the individual interactive elements. Because the composition retains both positional and size information of the element graphics Carving Station can then automatically generate an HTML file that references graphics containing the correct layout of the respective interactive elements. There is no need for the author to input or adjust the positional information manually. In one embodiment an instance of the appropriate viewer for the platform selected is invoked within the Carving Station Preview window. In the example of an HTML webpage the Internet Explorer Web Browser Control is used. Carving Station can easily output interactive interfaces conforming to other platforms such as Microsoft .NET PowerPoint and Adobe Flash without any alteration to the design process. When the author is satisfied with the interactive interface designed the author can instruct Carving Station to publish the interactive interface . All corresponding graphics and codes are automatically generated by Carving Station and stored in the author defined output destination such as a repository directory .

In a preferred embodiment such display is generated by the automated operation of file creation after author completion of the two step creation process i.e. after author creation of a full screen graphics for each desired state and after geometric identification of each interactive element . After author input of a full screen graphics for each state and author definition identification of positional information for each interactive element Carving Station automatically generates an image file for each state of each element. Accordingly Carving Station automatically generates the multiple images and records the respective positional information once painstakingly created by the user through the cutting and placing process. For instance in the example for an interface having five two state buttons Carving Station will automatically generate the ten individual graphics i.e. one graphic for each of five buttons for the normal state and one graphic for each of five buttons for the rollover state after author input of one full screen graphics for the normal state and one full screen graphics for the rollover state and after author identification of the five interactive elements. So as shown in when the mouse pointer is placed on top of the second element the present invention retrieves the automatically generated file for the second element in the rollover state and accordingly displays that image in the second element location of the preview area .

In further embodiments of the present invention such displays occur alternatively. For instance rather than automatically generate and later retrieve the specific image for the rollover state of the second element in the example the present invention could reference the full screen graphics created and stored for the rollover state and present the respective portion thereof as previously defined by the author for the second element when the mouse pointer is placed on top of the second element as in the example. An additional alternative embodiment would have the full screen graphics for the normal state displayed in the preview area for instance a look similar to that in and when the mouse pointer is placed on top of the second element as in the example the present invention essentially cuts out the second element as previously positionally defined by the author to reveal the full screen graphics for the rollover state existing as an underlying layer. Since only the positional location of the second element has been removed the only portion of the full screen graphics for the rollover state visible to the user is the second element portion.

In conclusion Carving Station greatly reduces the number of individual data points and graphic files that an author must supply and manage eliminating the need for the author to manually define and reassemble each element layer to achieve the final interactive interface. Alteration and addition of elements using Carving Station does not require that the author repeat the cutting and placing steps or repeat the defining and reassembly of each element layer in the interface.

These and other advantages of the present invention will be apparent to those skilled in the art from the foregoing specification. Accordingly it will be recognized by those skilled in the art that changes or modifications may be made to the above described embodiments without departing from the broad inventive concepts of the invention. It should therefore be understood that this invention is not limited to the particular embodiments described herein but is intended to include all changes and modifications that are within the scope and spirit of the invention.

