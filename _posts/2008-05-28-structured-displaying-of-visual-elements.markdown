---

title: Structured displaying of visual elements
abstract: Presentation descriptions are provided to an operating system of a computing device to present outputs associated with the applications in an organized and intuitive manner to the user. The presentation descriptions provide the operating system with information about the structure and meaning of the output element. The task of organizing at least part of the output elements associated with applications is delegated to the operating system. The operating system analyzes the presentation descriptions, and organizes the output elements associated with the applications at least partly based on the presentation descriptions.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09280255&OS=09280255&RS=09280255
owner: Qualcomm Incorporated
number: 09280255
owner_city: San Diego
owner_country: US
publication_date: 20080528
---
The disclosure generally relates to the field of user interfaces and more specifically to a user interface that scales visual elements of windows at different ratios.

On conventional computing devices more than one application may be launched and operated simultaneously. Each application may display related information in one or more windows. Graphical user interfaces of such conventional computing devices generally allow one or more windows to be displayed on the screen of the computing devices. Such windows may be resized and relocated based on user s preferences. Specifically the size of a window may be decreased or minimized to display more numbers of windows or provide a more general overview of applications running of the computing device. Conversely the size of the window may be increased or maximized to display more detailed information about the application.

One class of conventional operating systems allows users to locate windows by providing descriptions of the windows at predetermined locations of the windows for example at the top of the windows . When the windows are minimized into thumbnails the description of the windows may be provided adjacent to the minimized thumbnails. The users may identify the windows from the descriptions of the windows and then perform predetermined actions for example double clicking cursor on the thumbnail to expand the thumbnails into windows.

Another class of conventional operating systems allows users to locate a desired window by displaying thumbnails of windows. The thumbnails are scaled down versions of the windows which displays all of the contents in the open window in a shrunk format. The users may move cursors over the thumbnail and select the thumbnail to expand it into a window. All the contents in the thumbnails however are scaled down at equal ratio. Therefore the letters or other identifications appearing in the thumbnails are also scaled down making it difficult for the users to discern which thumbnails represent which windows. The scaling of windows into thumbnails also requires computational resources because all the contents displayed on the open windows must be bitmap scaled.

Hence the current state of the art lacks inter alia a user interface and corresponding system and method for allowing users to easily and promptly identify a certain window from multiple windows or thumbnails displayed on a display screen of a computing device.

One embodiment of a disclosed system and method provides a presentation description associated with an application program to allow presenting of the output elements e.g. visual elements in a format suitable for a view e.g. window of the application program. The presentation descriptions describe the structure of the output elements e.g. importance of one output element over another output element and relationships between the output elements . The presentation descriptions are provided to and analyzed by a hardware component or a software component e.g. operating system that is responsible for presenting the output elements to the user. The hardware or software component responsible for presenting the output elements to the user may selectively choose the output elements to be presented and their configuration based at least on the presentation descriptions.

In one embodiment the presentation descriptions describe the structure of visual elements e.g. bars cursors icons images texts associated with applications on a display screen e.g. handheld computing device screen . Each of the applications generates or stores a presentation description provided to a display manager to render views e.g. windows of the applications on the display screen. The display manager may be a component of the operating system running on a computing device. Each presentation description defines the logical structure of visual elements associated with an application. The display manager analyzes the presentation description received from the application and determines how and which visual elements should be displayed in the view of the application.

In one embodiment the display manager determines whether a visual element should be displayed in a resized view of the application. For example visual elements that convey information of lower priority e.g. texts indicating properties of an image are removed when the resized view is decreased in size. Visual elements that have higher priority e.g. image itself may be maintained in the resized view. The removed visual elements may be reintroduced when the view is expanded.

In one embodiment the display manger also determines the configuration of the visual elements present in the resized view of the application. The configuration of the visual elements includes among others the size the location the color and the orientation of the visual elements.

In one embodiment the display manager also receives display device information representing the hardware configuration e.g. size of the display screen of the display screen. The display manager may determine the visual elements and the configuration of the visual elements based on the hardware configuration of the display screen.

In one embodiment the display manager also receives user preferences for displaying the visual elements on the display screen. The user preferences may indicate a user s preferences such as the minimum size of visual elements the priority of visual elements to be displayed on the display screen and the size of reduced views.

In one embodiment the display manager stores transition schemes for generating the subsequent views for one or more classes of applications. The predetermined transition scheme for a class of applications may indicate whether a visual element associated with the application should be predominantly cropped or scaled down when the size of the transitioned view is reduced. The display manager may also determine the class of an application based on the presentation description of the application.

The features and advantages described in the specification are not all inclusive and in particular many additional features and advantages will be apparent to one of ordinary skill in the art in view of the drawings specification and claims. Moreover it should be noted that the language used in the specification has been principally selected for readability and instructional purposes and may not have been selected to delineate or circumscribe the disclosed subject matter.

The Figures FIGS. and the following description relate to preferred embodiments by way of illustration only. It should be noted that from the following discussion alternative embodiments of the structures and methods disclosed herein will be readily recognized as viable alternatives that may be employed without departing from the principles described herein.

Reference will now be made in detail to several embodiments examples of which are illustrated in the accompanying figures. It is noted that wherever practicable similar or like reference numbers may be used in the figures and may indicate similar or like functionality. The figures depict embodiments of the disclosed system or method for purposes of illustration only. One skilled in the art will readily recognize from the following description that alternative embodiments of the structures and methods illustrated herein may be employed without departing from the principles described herein.

Embodiments relate to separating presentation and contents of output elements associated with applications. The applications provide presentation descriptions representing presentation of the output elements which provide the operating system with information about the logical structure of the output element. The applications also provide output messages representing content of the output elements. The operating system analyzes the presentation descriptions to organize and render the output elements associated with the applications on one or more output devices in response to receiving the output messages. Advantages of employing the presentation description includes among others i more efficient generation of outputs for applications ii providing a consistent outputs across multiple applications and iii facilitation of a user s interaction with computing devices by automatically selecting the information to be presented to the user.

An output element refers to any units of outputs that may be generated and outputted by an output device of a computing device. The output element includes among others visual elements. The visual elements includes among others bars cursors icons images and a string of characters that may be recognized and understood by a user as conveying one or more pieces of information. The output elements of an application are selected scaled or organized based on the presentation descriptions of the application.

A view of an application refers to a portion of an image on a display screen that displays information associated with the application. The view may include among others a window in a rectangular format. The view of the application may be resized or reoriented manually by the user or automatically by an algorithm executed on the computing device.

A logical structure of the output elements refers to the relationship between the output elements from which logical meaning of the output elements can be determined.

The presentation description refers to information representing the logical structure of the output elements. Like other information an output generated by applications may be separated into content and presentation. The content represents the actual information that the applications conveys to the user e.g. turn by turn direction to a destination on a map whereas the presentation represents how the information is to be conveyed to the user e.g. plotted on an image map or by a string of characters . The presentation description corresponds to the presentation of the output. The content portion of the output separate from the presentation description is referred to as an output message herein. The presentation description may be stored in the application or be generated by the application upon request. In one embodiment the presentation descriptions follow a uniform convention that is used by one or more applications operable on a computing device. For example the presentation description may be described in a markup language e.g. Extensible Markup Language with tags indicating the category or relationship between the output elements.

The mobile computing device includes a speaker a screen a navigation area a keypad area and a microphone . The mobile computing device also may include one or more switches collectively referred to as switches . The one or more switches may be buttons sliders or rocker switches and can be mechanical or solid state e.g. touch sensitive solid state switch .

The screen of the mobile computing device is implemented for example by an active matrix liquid crystal display AMLCD a thin film transistor liquid crystal display TFT LCD an organic light emitting diode OLED an interferometric modulator display IMOD a liquid crystal display LCD or other suitable display device. In an embodiment the display displays color images. In another embodiment the screen further comprises a touch sensitive display e.g. pressure sensitive resistive electrically sensitive capacitative acoustically sensitive SAW or surface acoustic wave photo sensitive infra red including a digitizer for receiving input data commands or information from a user. The user may use a stylus a finger or another suitable input device for data entry such as selecting from a menu or entering text data. The navigation area is configured to control functions of an application executing in the mobile computing device and visible through the screen .

Referring next to a block diagram illustrates one embodiment of an example architecture of a mobile computing device with telephonic functionality. By way of example the architecture illustrated in will be described with respect to the mobile computing device of . The mobile computing device includes among other components a processor a memory an input module a display screen and a speaker . These components of the mobile computing device communicate via a bus .

The processor is associated with the memory to execute instructions for operating mobile computing device . The memory stores various software components as described below in detail with reference to . The memory can be implemented by various storage devices including a flash memory device a hard disk a floppy disk and Random Access Memory RAM .

The input module receives various user inputs associated with the operation of the mobile computing device . The input module includes among others switches keypads and touch sensitive displays. The mobile computing device includes one or more output modules or elements. In the example of the mobile computing device includes a display screen and a speaker .

In one embodiment the presentation description for an application is provided to the operating system for registration and stored in the operating system for reference. In another embodiment the presentation description is provided by each of the applications when a new view for the application is to be generated. The following is an illustrative pseudo code for a presentation description provided by an email client program that allows users to reading emails.

The output messages are generated by the applications to convey the actual contents of the output elements. The operating system may determine the logical structure or meaning of the visual elements included in the output message by referencing the presentation description . The operating system then generates output signals for the output device to process by formatting the information in the output messages according to the presentation description . The output device converts the output signal into physical manifestations e.g. image and sound that is presented to the user.

Example embodiments described herein are described primarily with reference to visual elements for displaying images on the display screen as the output elements. The visual elements however are merely illustrative and the same principle disclosed herein may be used for other types of outputs such as sounds.

The operating system includes among other components a display manager display device information and a display driver . The display manger in conjunction with the display driver functions to generate the output signal provided to the display. The display device information indicates the capability e.g. resolution or screen size of the display screen . In one embodiment the display device information is generated and stored in the operating system during the installation of the operating system or the display screen . The display manager references the display device information to generate the visual elements on the screen suitable for the display screen as described below in detail with reference to .

In one embodiment the display manager includes among other components a visual layout scaler and a transition manager . The visual layout scaler functions to determine the presence and the configuration of the visual elements associated with each application A through N as described below in detail with reference to .

In one embodiment the visual layout scaler receives the presentation description and the output messages from the applications to generate information representing the visual elements in a present view and in a subsequent view of the application. Specifically the visual layout scaler creates three groups e.g. sets for visual elements 1 visual elements common to the present view and the subsequent view 2 visual elements in the present view that are removed in the subsequent view and 3 visual elements that are not present in the present view and introduced into the subsequent view. Information about these three groups of visual elements and the configuration of these visual elements are sent to the transition manager to generate transition views and the subsequent view.

The transition manager uses information received from the visual layout scaler and applies one or more transition styles to remove the present view and render transition views and the subsequent view for example as described in a co pending U.S. patent application Ser. No. 12 021 173 titled Structured Display System with System Defined Transitions filed on Jan. 28 2008 which is incorporated by reference herein in its entirety. An example of the transition manager is described below in detail with reference to .

By delegating the task of determining the visual elements to the visual layout scaler the applications are relieved of the task of generating and organizing the outputs for different views. Other advantages of processing the visual elements at the visual layout scaler includes among others elimination of code needed for rendering formatting and processing visual elements from the applications. Because such code need not be included in the applications the applications can be made more compact e.g. fewer lines of codes . Further the application view may be consistent across multiple applications. Also the computation associated with displaying the visual elements may be reduced because visual elements are bitmap scaled selectively.

The scaling manager also determines the configuration of the visual elements to be displayed in the subsequent view. The configuration of the visual elements includes among others size location color and orientation of each visual element. The configuration of the visual elements may differ depending on for example the rank of importance as determined by the structured display element classifier or the user preference. For example if the visual element is ranked high in priority the visual element may maintain its size or undergo slight decrease in size while visual elements having lower priority are eliminated or reduced in size significantly in an application view with reduced size. These examples are further described below in detail with reference to .

The scaling manager includes among other components transition schemes and a user preference . The transition schemes store various schemes for generating and transitioning to application views having different sizes. The transition schemes describe how the application view should be modified in a subsequent application view depending on the type of applications. For example the transition schemes determines whether a visual element should be cropped scaled down or both when the size of the application view is reduced in size.

In one embodiment the transition schemes include a predetermined number e.g. four 4 distinct schemes for a predetermined number e.g. four 4 different types of applications i applications displaying regular or repeating visual elements with equal importance e.g. email client programs as described below in detail with reference to ii applications displaying irregular and arbitrary visual elements with equal importance e.g. a photograph editing program as described below in detail with reference to iii applications displaying regular or repeating visual elements having a point of interest e.g. an instant messenger program as described below in detail with reference to and iv applications displaying irregular and arbitrary visual elements having a point of interest e.g. a map service application as described below in detail with reference to . These four types of applications need different scaling schemes to determine which visual element representing which information should be removed or maintained and how the configuration of the visual elements should be changed as described below in detail with reference to . The classification into four types of applications is merely illustrative and different classification may also be used.

In one embodiment the schemes stored in the transition schemes may be overridden by the user preference or limitations of the display device as indicated by the display device information . For example assume that the default scheme of transition schemes is to a scaled down visual element by a ratio of 1 N where N is a value greater than 1 with no cropping. But if the visual elements are scaled down scaled at this ratio the visual elements become unrecognizable or illegible at the current screen size of the display device. Then the visual layout scaler may modify the scheme stored in the transition schemes so that cropping is performed on the visual elements in conjunction with scaling down of the visual elements at a lower ratio.

The user preference stores user preference identified by the user of the mobile computing device . The user preference indicates among others the minimum font size for visual elements preferred color schemes for the resized application views transition schemes to be used for different applications the priority of information to be displayed and the size of reduced views.

The zoom module functions to render the scaled versions of the visual elements having a size as determined by the visual layout scaler . In one embodiment the zoom module scales the bitmap of the visual elements to a larger or a smaller size. In another embodiment the zoom module also scales visual elements that are vector images.

The cropping module functions to crop the visual elements to a smaller size. The area of the visual elements to be cropped may be determined by the scaling manager . The cropping module may be used in conjunction with the zoom module to generate visual elements that are scaled and cropped at a certain ratio as determined by the visual layout scaler .

The crossfading module functions to implement visual effects where one visual element gradually fades out while another visual element gradually appears. To render such effect the crossfading module is provided with a set of visual elements that appears in the present view but disappears in the subsequent view and another set of visual elements that does not appear in the present view but newly appears in the subsequent view. The crossfading module then renders transient visual elements for display on the display screen .

The sliding module functions to implement visual effects where one or more visual elements move from one location in the present view to another location in the subsequent view. The rotating module functions to implement visual effects where one or more visual elements are rotated from one orientation to another orientation.

As the size of the application view is reduced there may be insufficient space to display all the visual elements associated with the application. Therefore the visual elements selected by the scaling manager are retained in the application views of smaller sizes whereas some visual elements are discarded from the application views. Contrast this with bitmap downscaling of all the visual elements where all of the visual elements are scaled down at the same ratio. When all of the visual elements are scaled down at the same ratio it becomes difficult to obtain meaningful information from the application views.

Described below are examples of four applications changing from the present view to the subsequent view. These examples are merely illustrative and different configurations or combination of transition views and the subsequent views may be rendered. Further although the following examples illustrate scaling down or cropping of the images to transition to a smaller application view it is also possible to transition to an application view that is larger rotated shifted to a different location colored differently or any combinations thereof.

In the example of visual elements regarding the sender of the emails are determined important whereas visual elements related to the bodies of the emails are deemed less important. In one embodiment the importance of the visual element is determined by analyzing the presentation description for the email client program as described above with reference to . In another embodiment the importance of the visual elements is also determined by user preferences received from the user. In this example because the visual element regarding the sender of the email is more important than the visual elements representing the bodies of the emails the visual elements indicating the sender of the email are retained in the application view of reduced size whereas the text boxes indicating the body of the emails are removed or discarded.

By having different visual elements the text box and the map modified in a different manner more information can be conveyed to the user compared to the case where all the visual elements are modified in the same manner. For example if the map was scaled down in size instead of being cropped the name of the roads appearing in the map may be too small to be legible. Therefore the scaled down map will not provide meaningful information to the user.

As illustrated in the above examples the visual elements are modified in different views based on the presentation description provided by the applications. In one embodiment the presentation description describes which of the following four 4 classes the application corresponds to i applications displaying visual elements that are regular or repeated and have no point of interest for example as described above with reference to ii applications displaying visual elements that are irregular or arbitrary and having point of interest for example as described above with reference to iii applications displaying visual elements that are regular or repeated and having points of interest for example as described above with reference to and iv applications displaying visual element that are irregular or arbitrary and having no point of interest for example as described above with reference to . It is also possible to use any combination of scaling schemes for different visual elements in one application.

The transition views between the present application view and the resized application view are then displayed on the display screen . The transition views provide continuous and seamless transition of visual elements from the present view to the resized view. The resized application view is then displayed on the display screen . The sequence of steps as illustrated in is merely illustrative and alternative sequences of steps may also be used.

In one embodiment the visual layout scaler receives user preferences for resized application views. The user preferences may indicate among others the minimum font size for visual elements preferred color schemes for the resized application views transition schemes to be used for different applications the importance of the visual elements and size of the reduced views. The visual layout scaler also receives output messages from the application indicating the actual visual element to be displayed on the application view.

Based on the presentation description the display device information the user preference and the transition schemes and the output message the visual layout scaler determines the visual elements to be present in the resized application view. Then the visual layout scaler determines the configuration e.g. size color and orientation of the visual elements to be presented in the resized application view.

The sequence of steps illustrated in is merely illustrative. Alternative sequences of steps may also be used to determine visual elements to be displayed on the resized window and configure the visual elements to be presented. Further two or more steps in may be performed in parallel.

The transition manager then applies transition styles to the visual elements that appear disappear or become modified in the resized screen for example as described in a co pending U.S. patent application Ser. No. 12 021 173 titled Structured Display System with System Defined Transitions filed on Jan. 28 2008 which is incorporated by reference herein in its entirety. Then the transition manager generates one or more transition views that show continuous and seamless transition from the present application view to the subsequent application view.

The sequence of steps illustrated in is merely illustrative and alternative sequences of steps may be used to displaying transition of the visual elements. Further two or more steps in may be performed in parallel.

Although the process described herein has been in the context of a mobile computing device and display of the resized application views the principles disclosed herein are applicable to other computing devices and platforms.

Also the process described herein may be used to generate outputs other than visual elements such as audio sounds tactile haptic or any other sensation that a user can perceive and producible by a machine.

As noted above embodiments may be configured as software elements or modules. The software may be processes e.g. as described with reference to that are written or coded as instructions using a programming language. Examples of programming languages may include C C BASIC Perl Matlab Pascal Visual BASIC JAVA ActiveX assembly language machine code and so forth. The instructions may include any suitable type of code such as source code object code compiled code interpreted code executable code static code dynamic code and the like. The software may be stored using any type of computer readable media or machine readable media. Furthermore the software may be stored on the media as source code or object code. The software may also be stored on the media as compressed and or encrypted data. Examples of software may include any software components programs applications computer programs application programs system programs machine programs operating system software middleware firmware software modules routines subroutines functions methods procedures software interfaces application programming interfaces API instruction sets computing code computer code code segments computer code segments words values symbols or any combination thereof. The embodiments are not limited in this context.

Some embodiments may be implemented for example using any tangible computer readable media machine readable media or article capable of storing software. The media or article may include any suitable type of memory unit memory device memory article memory medium storage device storage article storage medium and or storage unit such as any of the examples described with reference to a memory. The media or article may comprise memory removable or non removable media erasable or non erasable media writeable or re writeable media digital or analog media hard disk floppy disk Compact Disk Read Only Memory CD ROM Compact Disk Recordable CD R Compact Disk Rewriteable CD RW optical disk magnetic media magneto optical media removable memory cards or disks various types of Digital Versatile Disk DVD subscriber identify module tape cassette or the like.

As used herein any reference to one embodiment or an embodiment means that a particular element feature structure or characteristic described in connection with the embodiment is included in at least one embodiment. The appearances of the phrase in one embodiment in various places in the specification are not necessarily all referring to the same embodiment.

As used herein the terms comprises comprising includes including has having or any other variation thereof are intended to cover a non exclusive inclusion. For example a process method article or apparatus that comprises a list of elements is not necessarily limited to only those elements but may include other elements not expressly listed or inherent to such process method article or apparatus. Further unless expressly stated to the contrary or refers to an inclusive or and not to an exclusive or. For example a condition A or B is satisfied by any one of the following A is true or present and B is false or not present A is false or not present and B is true or present and both A and B is true or present .

Also use of the a or an are employed to describe elements and components of embodiments of the present invention. This was done merely for convenience and to give a general sense of the embodiments of the present invention. This description should be read to include one or at least one and the singular also includes the plural unless it is obvious that it is meant otherwise.

Embodiments of the present disclosure provide a system and a method that presents visual elements to a user in a manner that allows information associated with the application to be presented to the users in an efficient and optimal manner within the constraints of the limited available space on a display screen. The users may obtain more information about the application from even a reduced application view to allow the users to take informed actions.

Upon reading this disclosure those of skill in the art will appreciate still additional alternative structural and functional designs for a system and a process that generates outputs via an output device of a computing device. Thus while particular embodiments and applications have been illustrated and described it is to be understood that the disclosed embodiments are not limited to the precise construction and components disclosed herein and that various modifications changes and variations will be apparent to those skilled in the art may be made in the arrangement operation and details of the method and apparatus of the present embodiments disclosed herein without departing from the spirit and scope as defined in the appended claims.

