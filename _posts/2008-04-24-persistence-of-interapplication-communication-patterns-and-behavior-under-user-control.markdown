---

title: Persistence of inter-application communication patterns and behavior under user control
abstract: An end-user or administrator is allowed to couple portlets in a portal through user interface events taking place on the portal display itself. When the portal is displayed, if the user actuates a control corresponding to a property in a portlet, a menu of actions that can be performed with that data by other portlets is provided to the user. In addition to this “conventional” manner, an alternative manner of actuating the component is provided to the user such that if the user actuates the control in this alternative manner, the user is provided the option of making the chosen action “persistent,” so that the next time the control is actuated by the user, or the associated property is otherwise produced, the chosen action is performed automatically, without requiring the user to choose an action.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07930364&OS=07930364&RS=07930364
owner: International Business Machines Corporation
number: 07930364
owner_city: Armonk
owner_country: US
publication_date: 20080424
---
This application is a continuation application of U.S. Non Provisional patent application Ser. No. 10 776 040 entitled Persistence of Inter Application Communication Patterns and Behavior Under User Control filed on Feb. 11 2004 now U.S. Pat. No. 7 376 739.

The present invention relates in general to a system and method for integrating applications based upon a user s actions. More particularly the present invention relates to a system and method of integrating portlets so that source portlets are able to automatically provide data to target portlets.

The portal market is one of the fastest growing markets of computer software. A portal in the context of a preferred embodiment of the present invention may be defined as an application that provides a secure single point of interaction with diverse information business processes and people personalized to a user s needs and responsibilities. A portal or Web portal is a Web site or service that offers a broad array of resources and services such as e mail forums search engines and on line shopping malls. Portals are typically accessed by a user on the Internet using a software application such as a Web browser. A Web browser or browser is a software application used to locate and display Web pages. Two popular browsers are NETSCAPE NAVIGATOR and MICROSOFT INTERNET EXPLORER . Both of these are graphical browsers which means that they can display graphics as well as text. In addition most modern browsers can present multimedia information including sound and video though they often require plug ins in order to handle some formats.

The demand for portals drives rapid development of new technologies by different portal vendors in order to place their products in advantageous market positions. Not surprisingly portals have evolved to their current state from a more primitive beginning. Originally portals were mainly used as access points to different information sources with content being chosen by the portal operator. Next portal customization provided users with the ability to choose the content that was displayed on the user s view of the portal using a Web browser. In this phase the user was able to select information according to the user s interests and retrieve information related to his or her interests more expeditiously. Customized information delivery led to the introduction of business or corporate portals. Business portals were introduced to provide intra business data within an organization.

The ongoing evolution of portals also left its footprint in the architecture of portal products. At first portal like products were delivered as pre packaged applications that could be installed out of the box and included standard applications which provided the portal functionality. As new applications were needed vendors extended their products in order to satisfy requirements of the new applications. Due to the use of proprietary designs portal vendors added exclusive functionality to their portals tying the success of a portal to the applications that the portal included. This led to the decomposition of monolithic portal structures and the creation of portal frameworks.

Portal products offered today employ architectures whereby the portal itself only implements standard functionality such as security authorization authentication aggregation caching user management enrollment rendering and the like. The portal provides the infrastructure to integrate other application components. A typical embodiment of this type of architecture includes APIs for integrating applications so that applications from different vendors can be used so long as they match the portal product s API. According to current computing jargon these applications are commonly called portlets. Other synonyms for portlets in current use in the art include iViews a term utilized by SAP AG of Walldorf Germany or web parts a term utilized by Microsoft Inc. of Redmond Wash. .

Portlets are components that can be added to portals and are designed to run inside a portal s portlet container. Portlets may provide different functions ranging from simple rendering of static or dynamic content to application functions such as e mail electronic calendaring and the like. Portlets are invoked indirectly via the portal infrastructure and produce content that is suited for aggregation in larger pages.

While portlets allow separation of application components from each other and from the underlying portal a challenge of using portlets is the difficulty in transmitting data that appears on one portlet to another portlet. For example if one portlet displays orders for an organization and another portlet displays details for orders vendors would have to couple the portlets to allow the user to send data from one portlet to another. In a business system many portlets may be driven from the same pieces of information such as order numbers account numbers and customer numbers. Closely coupling portlets to one another increases development requirements and maintenance of each portlet. In addition coupling portlets may require activation of each of the coupled portlets even though the user only wants to view a subset of the coupled portlets.

In commonly assigned and copending application U.S. Ser. No. 10 448 968 CHOUDHARY ET AL. May 30 2003 entitled System and Method for User Driven Interactive Application Integration a manner of using information from a first portlet in performing an action in a second portlet referred to as Click to Action is disclosed. When a user selects one of the Click to Action icons or controls displayed in a Source portlet he or she sees a menu of actions invocable with respect to target portlets on the page that can process the properties i.e. data items that the icon or control is associated with. The user selects one of the actions from the menu which results in a request being delivered to a Target portlet to perform the given action. The Click to Action feature described in the CHOWDHURY ET AL. patent application however does not provide a way to persistently couple portlets.

In another commonly assigned copending patent application U.S. Ser. No. 10 292 074 DUNNE ET AL. Nov. 12 2002 a tool for allowing a user or administrator to couple portlets through a web based interface was described. The DUNNE ET AL. application describes the creation of wires. A wire as the term is used in the DUNNE ET AL. application and herein is a persistent association between a property in a source portlet and an action in a target portlet. When an event occurs that affects the property of a wire the action associated with that property is triggered.

Although DUNNE ET AL. tool significantly enhanced a user s ability to custom configure a portal interface one drawback to the tool was that a user would have to first interact with the portlets on the portal page itself or in complex cases read additional documentation then navigate to a separate tool interface display in order to couple or de couple portlets. In a moderately complex portal a user might have to switch back and forth between the portal and the tool interface a number of times in order to complete the user s configuration of the portal which can be inconvenient.

What is needed therefore is a system and method for allowing a user to couple portlets without having to switch back and forth between a tool interface display and the portal itself.

The present invention provides a method computer program product and apparatus for allowing an end user or administrator to couple portlets in a portal so that information may be shared between the portlets. In particular a preferred embodiment of the present invention provides a simplified interface through which portlets may be coupled through user interface events taking place on the portal display itself. A database stores information about the data items called properties produced and consumed by the portlets.

When the portal is displayed if the user actuates a control corresponding to a property in a registered portlet a menu of actions that can be performed with that data by other portlets is provided to the user. In addition to this conventional manner of actuating the component an alternative manner of actuating the component is provided to the user such that if the user actuates the control in this alternative manner the user is provided the option of making the chosen action persistent so that the next time the control is actuated by the user or the associated property is otherwise produced the chosen action is performed automatically without requiring the user to choose an action.

Turning now to an exemplary web browser is provided in accordance with a preferred embodiment of the present invention. Web browser is shown displaying a portal page. Included within this portal page are a number of portlets map portlet weather information portlet and tourist information portlet . Each of map portlet weather information portlet and tourist information portlet is a separate web based application executing on the web application server hosting the portal and each portlet provides different but related information. For example weather information portlet provides a text entry field for entering the name of the city. When the user clicks submit button the current contents of portlet s portion of the display is replaced with information about the current weather conditions in the city specified in text entry field . Likewise when the user clicks submit button in tourist information portlet the current contents of portlet s portion of the display is replaced with tourism related information regarding the city entered in text entry field .

Web application server is shown serving a portal page portal interface generated via portal server . Portal server is a specialized application to which requests for a portal indicated in a preferred embodiment by URLs having a certain prefix are handed over for processing. Since from the perspective of web application portal server is an application like any other web application web application server may invoke portal server through any of a number of standard web application interfaces such as the widely used JAVA servlets interface standard for example. Portal server processes portlets such as portlets and aggregates their markup adds additional header footer formatting markup and returns a resulting portal page to web application server . In a preferred embodiment portal server is implemented as WEBSPHERE PORTAL SERVER which is also a product of International Business Machines Corporation of Armonk N.Y. and which is executed on a WEBSPHERE APPLICATION SERVER platform. One of ordinary skill in the art will recognize however that various portal servers are available from a number of vendors and that the present invention is not limited to the use of any particular portal server web server or web application server.

Portlets and are two portlets that make up a portal served by web application server . In a preferred embodiment portlets and are implemented in the form of specialized servlets. However Hypertext Markup Language HTML or extensible HTML XHTML pages with embedded server side scripting code and or server side includes SSIs may also be used in alternative embodiments of the present invention.

A preferred embodiment of the present invention makes use of what is known as the servlet paradigm of web application development where servlets house the program control logic. A servlet is a piece of code that follows certain standard APIs application programming interfaces that allow it to be invoked by a web application server. Usually the term servlet is used in conjunction with the JAVA programming language of Sun Microsystems Inc. although those skilled in the art will recognize that the term may be applied in the context of other programming languages and run time environments as well and it is in this more general sense that the term servlet is used in this document. In a typical JAVA based implementation of a web application however servlets are used to house the program control logic of the application JAVA Server Pages JSPs are used to create the view i.e. what is displayed to the user and JavaBeans are created and passed to the JSPs by the servlets in order to allow the JSP generated view to reflect the computational results and or the computational state of the servlets.

Servlets JSPs and JavaBeans allow the design of a web application to be decomposed cleanly according to a model view controller MVC pattern. MVC is a manner of partitioning the design of interactive software into conceptual levels of abstraction that fall into the three categories of model view and controller . In general the model represents the internal data of the program and the relationships between the data the view represents how a user views the state of the model and the controller is represents the manner in which the user changes the state or provides input. The data and code encapsulation provided by servlets JSPs and JavaBeans simplifies the design of web applications by allowing the applications to conform to an MVC design pattern.

 Server side scripting code is program code that is directly embedded into the content of an HTML XHTML document through the use of special markup tags. When a web page with server side scripting code is served by a web server the web server identifies the presence of server side scripting code and causes the code to be executed before the web page is transmitted to the client. Typically server side scripting code is used to place dynamic content into a web page before the page is transmitted to a web client. A number of server side scripting languages and programming tools are available in the art. Java Server Pages JSP for example is a technology available from Sun Microsystems Inc. that allows Java program code to be embedded in an HTML document for server side execution. Other server side programming systems include Active Server Pages a product of Microsoft Inc. and PHP which is a popular open source programming language and interpreter for producing server side scripting code. Server side include SSI is a similar mechanism for placing dynamic text in web documents in which the web server replaces special tags in a source HTML XHTML document with other text and or markup such as a time date stamp or the contents of another HTML file for example . The popular Apache open source web server provides SSI capabilities. Server side scripting and server side includes were designed as a simplification over previous forms of providing dynamic web content such as CGI Common Gateway Interface scripting which are less commonly used today as a result. One of ordinary skill in the art will recognize that although a preferred embodiment of the present invention utilizes servlets one may also practice the teachings of the present invention using other forms of dynamic content production including server side scripting and CGI without departing from the scope and spirit of the present invention.

Portal server in a preferred embodiment combines the data and program content of portlets and by simply consolidating the raw source HTML XHTML including any server side scripting code or SSIs into a single HTML XHTML document with some additional glue wrapper HTML XHTML markup to specify the arrangement of portlets on portal page . The additional markup may itself be quite significant to the operation of the portal and can include in addition to markup for arranging portlet views and in a non limiting sense headers footers portal navigation links links to common services search bars client side executable code such as JavaScript q.v. and the like.

Portal page is served to browser via web application server in this preferred embodiment as if it were a monolithic page. Since server side scripting code for both portlets and is included in portal page web application server may execute whatever server side scripting code is present in portal page as if the page were originally written as a single HTML XHTML page with server side scripts. Web application server then serves the resulting page with server side scripts processed to browser . Alternatively the server side scripting code may be executed prior to assembly of portal page from its constituent portlets. For example in a preferred embodiment utilizing WEBSPHERE PORTAL SERVER portal server runs as an application within web application server and utilizes the JSP processor of web application server to execute the JSP scriptlets for portlets and individually prior to the assembly of portal page so that no post processing of the assembled portal page by web application server is necessary.

One of ordinary skill in the art will recognize that an alternative method of serving dynamic portal content would be to execute each of portlets and as a separate process for example as separate CGI scripts to obtain HTML XHTML output and then consolidate the output of the two portlets into a single HTML XHTML page for serving to browser . One of ordinary skill in the art will also recognize the content served to browser need not be HTML XHTML content but may comprise any of a number of content types presently in existence or developed in the future. For example the content produced by portal may be in a format based on the eXtensible Markup Language XML such as eXtensible Stylesheet Language Formatting Objects XSL FO Scalable Vector Graphics SVG or Wireless Markup Language WML . In addition the content types produced by the different portlets need not be homogeneous. For example portlet may produce an SVG graphic while portlet produces a document in PDF Portable Document Format . PDF is a published document format produced by Adobe Inc.

The present invention is directed to a method computer program product and data processing system for allowing a user to couple or wire a pair of portlets to allow information to be shared between portlets on a portal page in the context of using the portlets. is a diagram of a web browser displaying a portal having portlet wiring capabilities in accordance with a preferred embodiment of the present invention. In this preferred embodiment the user interface controls provided by the portlets can be actuated in two alternative manners a conventional manner and an alternative manner. When a portlet control is actuated in the conventional manner the portlet exhibits its normal behavior. For example the normal behavior of map portlet would be to display a menu such as menu in and allow the user to select an action or actions to be taken in response to that menu selection e.g. display city information on map portlet display weather information for the selected city on portlet etc. . The Click to Action techniques described in U.S. Ser. No. 10 448 968 CHOUDHARY ET AL. May 30 2003 hereby incorporated herein by reference may be applied to achieve this behavior.

When a portlet control is actuated in the alternative manner the user is given also provided with a menu of action choices but prior to dispatching the selected action an additional dialog is shown. This additional dialog asks the user whether or not to persist the selected action i.e. by wiring the property corresponding to the actuated portlet control to an action to be performed by a target portlet . According to our terminology a property is a data item that is produced by consumed by stored by or otherwise associated with a portlet. For instance in the example provided in if the user holds down the Control or Ctrl key while clicking on city in map portlet as opposed to simply clicking city with no keypress a menu is displayed to allow the information represented by city i.e. Houston Tex. to be provided to the same or another portlet to perform an action. For example menu gives the user the option of sending the information to weather information portlet tourist information portlet map portlet or to all three portlets.

Once the user has made a selection of an action the user is then prompted to specify whether to make that action persistent. That is the user is given the option of having that action be associated with the user interface control or property in the future. In for instance a dialog box is displayed in response to the user s selecting a particular action for example sending the city information from map portlet to weather information portlet . If the user clicks Yes button the selected action will be associated with the city information from map portlet such that whenever a city on map portlet is clicked the identity of that city is submitted to one or more of portlets and . For the purpose of example we will assume that the user selected that the information be submitted to weather information portlet so that whenever a city is clicked such as city that city s current weather report is displayed by weather information portlet as depicted in . According to our terminology weather information portlet is said to be wired to map portlet by associating the city information from map portlet with the city submission and weather reporting action of weather information portlet the user is said to have created a wire coupling the two portlets.

Returning now to the display of dialog box may be triggered by the use of client side scripting code embedded in the HTML XHTML code for the portal. Unlike server side scripting code such as JSP or PHP code client side scripting code is transmitted in raw unprocessed form to the user s browser. The browser then executes the embedded code. JavaScript is a popular client side scripting language that is supported by most modern web browsers in current use. JavaScript and other client side scripting languages generally allow certain procedures function or other client side scripting code to be associated with user interface events in the browser such that when a particular user interface event such as a mouse click occurs particular lines of client side scripting code are executed. Thus one method of triggering dialog box is to embed client side scripting code e.g. JavaScript code into the portal page that is triggered by the user interface event of Control clicking on particular controls in the portal page. The client side scripting code displays the dialog box and communicates the user s response back the web application server to direct further processing. In a preferred embodiment of the present invention the client side scripting code is added to the portal page by the portal server in the process of assembling the component portlets into a single portal page.

Other options are provided by dialog box in . The user has the option of deciding to perform the associated action for a single time only in which case the user may click No button to opt out of creating a wire and to exit dialog box . If the user has administrative privileges with respect to the web application server hosting the portal an additional Yes all users button may also be provided in order to allow that administrative user to create a wire that holds for all users of a portal. One of ordinary skill in the art will recognize that it is not unusual for websites to require their end users to log in with a user name and or password in order to access certain services or in order to provide certain user customized features. A preferred embodiment of the present invention expands upon this general concept by allowing a user to customize the manner in which portlets collaborate when that particular user accesses a portal. The additional feature of allowing an administrative user to create wires that apply to all users allows such an administrative user to enjoy the same flexibility in producing a base portal site design.

In a preferred embodiment of the present invention the reverse operation namely deleting a wire may be executed in a similar fashion as shown in . In this example the user has clicked a city in map portlet while holding down the Control key i.e. the user has employed the alternative manner of actuating the map portlet s imagemap control . This Control click operation causes a dialog box to be displayed to allow the user to delete the wire associated with map portlet that was created in .

The on the portal user interface for creating and deleting wires depicted in may also be supplemented with a tool based interface for creating and deleting wires such as that described in U.S. Ser. No. 10 292 074 DUNNE ET AL. Nov. 12 2003. Such an interface tool based interface is shown in . An advantage of providing the option of using tool based interface is that a user has the ability to see a list of all of the wires that have been created. This allows the user to understand the operation of the entire portal at a glance. Delete icons such as delete icon are provided to allow a user to delete wires from list . A submissable form made up of drop down lists and allow a new wire to be specified by mapping a property list from a source portlet list to a receiving action list of a target portlet list . Checkbox allows an administrative user to specify whether the wire should exist for all users i.e. that the wire should be a global wire . Clicking New Wire button causes the web form to be submitted and the new wire to be created.

The depicted process begins with browser requesting the portal page from web application server message . Web application server then determines from the URL of the request that a portal page is requested message . This causes web application server to pass the request on to portal server message . Portal server then queries a database to determine a list of portlets present on the requested page messages . Database described in more detail in provides information about which portlets are present on which pages and also provides information about the properties and actions associated with each portlet. Since database queries are relatively expensive operations in a computational sense a preferred embodiment of the present invention in order to enhance performance caches the results of its database queries to allow those results to be utilized without necessarily requiring that the query be actually executed in the database each time. Portal server then assembles the portlets into a portlet page adding additional markup for headers and layout and client side scripting code as necessary message .

The process of invoking the portlets themselves then begins. If a particular action for a portlet is specified in the URL of the request an identification of that action is then delivered to the portlet e.g. portlet messages . Portal server then requests the markup for each portlet in the page messages . To the obtained portlet markup portal server adds additional markup for footers and other features that are located after the portlet markup itself in the portal page message . This portal page is then returned to web application server message which then serves the generated portal page as a monolithic page of markup message .

As can be observed from a preferred embodiment of the present invention relies on a database e.g. database for storing information regarding the properties produced and consumed by portlets. provides a diagrammatic view in the form of an entity relationship diagram of a possible schema for such a database. is intended to be an example of the organization of such a database and also to provide a semantic description of wires properties and actions.

The E R entity relationship approach to database modelling provides a semantics for the conceptual design of databases. With the E R approach database information is represented in terms of entities attributes of entities and relationships between entities where the following definitions apply. The modelling semantics corresponding to each definition is illustrated in . is adapted from Elmasri and Navathe 3rd Ed. Addison Wesley 2000 pp. 41 66 which contains additional material regarding E R diagrams and is hereby incorporated herein by reference.

Entity An entity is a principal object about which information is collected. For example in a database containing information about personnel of a company an entity might be Employee. In E R modelling an entity is represented with a box. An entity may be termed weak or strong relating its dependence on another entity. A strong entity exhibits no dependence on another entity i.e. its existence does not require the existence of another Entity. As shown in a strong entity is represented with a single unshaded box. A weak entity derives its existence from another entity. For example an entity Work Time Schedule derives its existence from an entity Employee if a work time schedule can only exist if it is associated with an employee. As shown in a weak entity is represented by concentric boxes.

Attribute An attribute is a label that gives a descriptive property to an entity e.g. name color etc. . Two types of attributes exist. Key attributes distinguish among occurrences of an entity. For example in the United States a Social Security number is a key attribute that distinguishes between individuals. Descriptor attributes merely describe an entity occurrence e.g. gender weight . As shown in in E R modelling an attribute is represented with an oval tied to the entity box to which it pertains.

In some cases an attribute may have multiple values. For example an entity representing a business may have a multi valued attribute locations. If the business has multiple locations the attribute locations will have multiple values. A multi valued attribute is represented by concentric ovals as shown in . In other cases a composite attribute may be formed from multiple grouped attributes. A composite attribute is represented by a tree structure as shown in . A derived attribute is an attribute that need not be explicitly stored in a database but may be calculated or otherwise derived from the other attributes of an entity. A derived attribute is represented by a dashed oval as shown in .

Relationships A relationship is a connectivity exhibited between entity occurrences. Relationships may be one to one one to many and many to many and participation in a relationship by an entity may be optional or mandatory. For example in the database containing information about personnel of a company a relation married to among employee entity occurrences is one to one if it is stated that an employee has at most one spouse . Further participation in the relation is optional as there may exist unmarried employees. As a second example if company policy dictates that every employee have exactly one manager then the relationship managed by among employee entity occurrences is many to one many employees may have the same manager and mandatory every employee must have a manager .

As shown in in E R modelling a relationship is represented with a diamond if it relates one or more entities and may also be represented with an n sided polygon if it relates more than two entities. The cardinality ratio one to one one to many etc. in a relationship is denoted by the use of the characters 1 and N to show 1 1 or 1 N cardinality ratios or through the use of explicit structural constraints as shown in . When all instances of an entity participate in the relationship the entity box is connected to the relationship diamond by a double line otherwise a single line connects the entity with the relationship as shown in . In some cases a relationship may actually identify or define one of the entities in the relationship. These identifying relationships are represented by concentric diamonds also shown in .

We now turn to the semantic content of . A portal entity is associated relationship with a number of pages entity each of which is made up of relationship portlets entity . Each page being accessible through a web browser has a URL uniform resource locator as an attribute attribute . A layout attribute is also associated with relationship providing information about the manner in which the constituent portlets are to be arranged in a portal page. Relationship maps users entity with portals entity since different users may have access to different portals.

Turning now to portlet entity a portlet produces relationship properties entity and performs relationship various actions entity that consume relationship properties entity . A wire entity maps a single producer entity to a single consumer entity relationships and . A producer entity is relationship a portlet entity that produces relationship a particular property entity while a consumer entity is relationship an action entity that consumes relationship the property entity produced by the corresponding producer entity as associated by wire entity and relationships and . A producer and consumer may be able to share a property based on some criterion associated with the property such as a data type. A user entity may make use of relationship a number of wires entity .

PCI bus provides an interface for a variety of devices that are shared by host processor s and Service Processor including for example flash memory . PCI to ISA bridge provides bus control to handle transfers between PCI bus and ISA bus universal serial bus USB functionality power management functionality and can include other functional elements not shown such as a real time clock RTC DMA control interrupt support and system management bus support. Nonvolatile RAM is attached to ISA Bus . Service Processor includes JTAG and I2C busses for communication with processor s during initialization steps. JTAG I2C busses are also coupled to L2 cache Host to PCI bridge and main memory providing a communications path between the processor the Service Processor the L2 cache the Host to PCI bridge and the main memory. Service Processor also has access to system power resources for powering down information handling device .

Peripheral devices and input output I O devices can be attached to various interfaces e.g. parallel interface serial interface keyboard interface and mouse interface coupled to ISA bus . Alternatively many I O devices can be accommodated by a super I O controller not shown attached to ISA bus .

In order to attach computer system to another computer system to copy files over a network LAN card is coupled to PCI bus . Similarly to connect computer system to an ISP to connect to the Internet using a telephone line connection modem is connected to serial port and PCI to ISA Bridge .

While the computer system described in is capable of executing the processes described herein this computer system is simply one example of a computer system. Those skilled in the art will appreciate that many other computer system designs are capable of performing the processes described herein. It is important to note that while the present invention has been described in the context of a fully functioning data processing system those of ordinary skill in the art will appreciate that the processes of the present invention are capable of being distributed in the form of a computer readable medium of instructions or other functional descriptive material and in a variety of other forms and that the present invention is equally applicable regardless of the particular type of signal bearing media actually used to carry out the distribution. Examples of computer readable media include recordable type media such as a floppy disk a hard disk drive a RAM CD ROMs DVD ROMs and transmission type media such as digital and analog communications links wired or wireless communications links using transmission forms such as for example radio frequency and light wave transmissions. The computer readable media may take the form of coded formats that are decoded for actual use in a particular data processing system. Functional descriptive material is information that imparts functionality to a machine. Functional descriptive material includes but is not limited to computer programs instructions rules facts definitions of computable functions objects and data structures.

While particular embodiments of the present invention have been shown and described it will be obvious to those skilled in the art that based upon the teachings herein that changes and modifications may be made without departing from this invention and its broader aspects. Therefore the appended claims are to encompass within their scope all such changes and modifications as are within the true spirit and scope of this invention. Furthermore it is to be understood that the invention is solely defined by the appended claims. It will be understood by those with skill in the art that is a specific number of an introduced claim element is intended such intent will be explicitly recited in the claim and in the absence of such recitation no such limitation is present. For non limiting example as an aid to understanding the following appended claims contain usage of the introductory phrases at least one and one or more to introduce claim elements. However the use of such phrases should not be construed to imply that the introduction of a claim element by the indefinite articles a or an limits any particular claim containing such introduced claim element to inventions containing only one such element even when the same claim includes the introductory phrases one or more or at least one and indefinite articles such as a or an the same holds true for the use in the claims of definite articles.

