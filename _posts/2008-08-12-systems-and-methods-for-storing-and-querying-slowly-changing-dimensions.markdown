---

title: Systems and methods for storing and querying slowly changing dimensions
abstract: A system and method for processing both Type 1 and Type 2 effective dated slowly changing dimension (SCD) date attributes. Two sets of date fields may be provided, an effective from/effective to set for dimensions with effective date logic; and an effective start date/effective end date for all dimensions. A current indicator is used to indicate a currently valid dimension. By processing and setting the date fields, both Type 1 and Type 2 dimensions can be processed and queried similarly. This enables generating an accurate and consistent report of information representing information in a data warehouse as it is now, or as it was at any point in time. The methods also enable for reporting and analysis of historical and trends, as well as future forecasting.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08260822&OS=08260822&RS=08260822
owner: United Services Automobile Association (USAA)
number: 08260822
owner_city: San Antonio
owner_country: US
publication_date: 20080812
---
The subject matter described in this application is related to subject matter disclosed in the following commonly assigned applications U.S. patent application Ser. No. 12 190 003 filed on even date entitled SYSTEMS AND METHODS FOR STORING AND QUERYING SLOWLY CHANGING DIMENSIONS and U.S. patent application Ser. No. 12 190 042 filed on even date entitled SYSTEMS AND METHODS FOR STORING AND QUERYING SLOWLY CHANGING DIMENSIONS. 

In data management and data warehousing a dimension refers to logical groupings of data such as personnel data geographical location customer information or product information. Slowly Changing Dimensions SCD are dimensions that have data that change over time. Conventionally there are three methods to handle slowly changing dimensions designated as Type 1 Type 2 and Type 3. Which technique to use depends on business requirements as each technique behaves differently.

Using Type 1 SDC s the old data is overwritten with new data. The dimension attribute reflects the latest state but any historical values are lost. This technique is often utilized for processing corrections or when the old value has no business significance. While the type 1 technique appears simple to implement unexpected complications may arise with type 1 attribute changes. For example if fact data have been previously aggregated based on the type 1 attribute when the dimension value is overwritten then any ad hoc summarization based on the new value will no longer tie to the pre aggregated data.

With a Type 2 change a new row with a new surrogate primary key is inserted into the dimension table to reflect the new attribute values. Both the prior and new rows include the natural key or durable identifier as an attribute along with a row effective date row expiration date and current row indicator. The type 2 technique is used when a meaningful change to the dimension has taken place and it is appropriate to partition history by the changed attribute. Each surrogate key corresponds to a unique version of the dimension row that was true for a span of time. Thus each surrogate key is used in the corresponding fact rows during the time when the particular instance was valid.

The Type 3 technique is usually utilized when the change like the redrawing of sales district boundaries or redefinition of product category boundaries is a soft change. In other words although the change has occurred it is still logically possible to act as if the change had not occurred. For example a business entity may want to track sales performance with either the old or the new sales district definitions. In this case history cannot be partitioned as in a Type 2 methodology but rather the Type 3 methodology simultaneously provides both the old attribute value and new value in the same dimension row. This allows users to choose between the two versions. With a type 3 response a new column is added to the dimension table. The old attribute value is pushed into a prior attribute column and the new attribute value is overwritten in the existing column.

However as noted above the behaviors of each Type are different. As such the methodology for processing and consuming information contained in warehouses where both types are used together can be complex especially when the dimensional source data itself is equally complex.

Type 1 and Type 2 slowly changing dimensional SCD date sub records that are based on effective dated source data may be processed and maintained in dimensional tables in a data warehouse system. Two sets of date fields may be provided an effective from effective to set for dimensions with effective date logic and an effective start date effective end date for all dimensions. A current indicator is used to indicate a currently valid dimension. By processing and setting both sets of date fields both Type 1 and Type 2 dimensions may be stored in dimension tables with similar data structures. This enables generating an accurate and consistent report of information representing information in a data warehouse as it is now or as it was at any point in time based on the both the source effective dating as well as the date the rows were created in the warehouse. The methods also enable for reporting and analysis of historical and trends as well as future forecasting.

In some implementations a method for representing data in a data warehouse for historical and current reporting may be provided that includes receiving effective dated dimensions in sequential rows and setting date attributes associated with the effective dated dimensions for each row the date attributes including an effective to date an effective from date an effective start date and an effective end date. The method may further include setting an effective start date of a first row to a date prior to any of the date attributes and setting an effective end date of a last row to a date after any of the date attributes.

In some implementations a system for representing data in a data warehouse for historical and current reporting may be provided. The system may include at least one subsystem for receiving effective dated dimensions in sequential rows and at least one subsystem for setting date attributes associated with the effective dated dimensions for each row the date attributes including an effective to date an effective from date an effective start date and an effective end date. A subsystem for setting an effective start date of a first row to a date prior to any of the date attributes may be provided as well as a subsystem for setting an effective end date of a last row to a date after any of the date attributes.

The foregoing is a summary and thus contains by necessity simplifications generalizations and omissions of detail. Those skilled in the art will appreciate that the summary is illustrative only and is not intended to be in any way limiting.

Referring to there is illustrated an exemplary configurable data warehouse. shows a data warehouse environment including an enterprise resource planner ERP data source a user an administrator and a configurable data warehouse system . The user is a person and or system that accesses the data warehouse system . The administrator refers is the person and or system that administers the data warehouse system . These roles may be performed by the same person and or system.

The configurable data warehouse system may include a business model a data model an operational framework connectors and a content explorer . The business model may include measures and dimensions . The data model may include fact tables and dimension tables . The operational framework may include a console .

The configurable data warehouse system may be understood to be a system for measuring the performance of an organization. The data warehouse system may be applicable to various organizations and is not limited to only one organization. The data warehouse system may be configured to a specific organization.

The business model includes a set of analytics and paths used to measure the performance of an organization. The business model may contain measures which map the business questions to which users of a data warehouse may want answers. The measures may represent measurements of business activity aspects of an organization. For example a business activity may be a sales order. A measure for a sales order may be sales order volume. Another example of a measure is inventory amounts. In this example inventory is the business activity measured.

Numerous business questions for numerous businesses are categorized into different areas of analysis. The set of measures in the business model represents a union of measures used to perform analysis for different organizations. This union of measures may comprise the minimum set of measures needed to perform the desired analysis for all of the different organizations to which the business model applies. The business model may also include a set of dimensions that represent the structure of an organization from an informational or dimensional viewpoint. In other words the dimensions represent the business reference aspects of an organization. An example of a dimension is the class of customers of an organization. Further examples of dimensions and measures are provided below.

The business model may be implemented in the data model . The data model is organized to facilitate the analysis performed at the business model level. The data model may contain fact tables that contain the measures used to measure the performance of an organization. The data model may also include a set of dimension tables that represent the structure of an organization from a dimensional viewpoint. Another example of a dimension is the class of employees of an organization.

Data may be collected from the organization ERP and passed into the data model through the connectors . For example connectors may be created through an extraction transformation and loading ETL tool. The data warehouse system may be operated by an administrator through the console of the operational framework . The operational framework may also be used to configure the data warehouse system . Finally the content explorer contains a set of reports used by the user to review the analysis performed by the data warehouse system .

With reference to in some implementations dimension tables may contain attributes that describe records regarding data that measures the organization s business operations. Some of the attributes may provide descriptive information whereas others may be used to specify how data should be summarized to provide useful information to the user . Dimension tables may contain hierarchies of attributes that aid in summarization. For example a dimension containing personnel information may contain a hierarchy that separates individuals into categories such as job titles reporting roles and pay grades with each of these categories further subdivided a number of times until e.g. each person in an organization s structure is reached at a lowest level.

Dimensional modeling may produce dimension tables in which each table contains fact attributes that are independent of those in other dimensions. For example a customer dimension table contains data about customers a services dimension table contains information about services and a personnel dimension table contains information about people. Queries use attributes in dimensions to specify a view into the fact information. For example a query might use the personnel store and time dimensions to ask the question What was Jane Doe s title in 1999 Subsequent queries might drill down along one or more dimensions to examine more detailed data such as Who reported to Jane Doe when she was Manager of Operations 

In the exemplary dimension table of columns may be configured to store human resources information for a specific organization. In particular column contains a job code column contains an effective date EFFDT column is a job code description column is job code manager level description column is a effective from date field column is an effective to date field column is an effective date start field column is an effective date end field and column is a current record indicator.

In some implementations the EFFDT field column may be used in by applications to enable the viewing of data that changes over time. The EFF START DT column and EFF END DT column represent an effective start date and effective end date of the dated dimension based on the date the row e.g. rows was received into the warehouse. The EFFDT FROM column and EFFDT TO column represent an effective from date and effective to date date range that defines a period of transactional history based on the business transaction date i.e. when the record is effective in the source system .

In some implementations through the use of two sets of date ranges EFF START DT EFF END DT and EFFDT FROM EFFDT TO data contained in the dimension EFFDT TO enables an organization to view current personnel information as well as historical personnel information at any point in tracked history with great accuracy. In addition the dimension table provides a mechanism to implement what if scenarios by altering the EFFDT FROM EFFDT TO date ranges. It is noted that the dimension table may contain information other than personnel information any may include any type of information that an organization may track in the data warehouse system . Personnel information is being used herein for exemplary purposes only and should not limit the teaching of the present disclosure.

At the effective to date of the current row is set to one day minus the effective from date from the previous row. For example the EFFDT TO date for row 4 15 2007 may be set to one day prior to row 4 16 2007 . At the effective end date is set to one day minus the created date from the previous row. For example the EFF END DT for row is set to one day prior to the EFF START DT i.e. the created date of row .

At it is determined if processing of the dimension data is complete. If not then the loop returns to to process the next sequential record. If yes then at for the first row in the dimension table after processing the effective start date is set to minus infinity. For example in row the EFF START DT field in column is set to 1 1 1753 i.e. minus infinity for purposes of the data warehouse system . It is noted that any date in the past may be interpreted to be minus infinity. Next at for the last row in the dimension table the effective end is set to infinity and the current indicator is set to Y . For example for row the EFF END DT is set to 12 31 9999 to indicate positive infinity to the data warehouse system . Any other suitable date may be used. The current indicator column is used to identify the record containing the current data.

Referring to there is an operational flowchart illustrating implementations of the present disclosure to create the dimension table where non effective dated dimensions are received. For example the operational flowchart may be implemented as a result of a no decision at in .

At the data is read in sequentially descending order based on natural keys an effective date and a created time. For example the business model or data model through the connectors may have determined at that the ERP data source is communicating data without an EFFDT field. Next for each row that is read in a loop begins at until the last row is processed. At a previous row s effective date and created data are retrieved. At the effective start date is set to the created date for the current row. For example EFF START DT may be set to the created date for a particular row.

At the effective end date is set to one day minus the created date from the previous row. For example the EFF END DT for the current row is set to one day prior to the EFF START DT of the previous row. At it is determined if processing of the dimension data is complete. If not then the loop returns to to process the next sequential record. If yes then at for the first row the effective start date is set to minus infinity. For example the EFF START DT field may be set to 1 1 1753 i.e. minus infinity for purposes of the data warehouse system . It is noted that any date in the past may be interpreted to be minus infinity. Next at for the last row the effective end is set to infinity. For example the EFF END DT may be set to 12 31 9999 to indicate positive infinity to the data warehouse system . Any other suitable date may be used.

By populating the dimension tables as described with reference to information may be reported as it is now or as it was at any point in time. In addition reporting and analytics related to both historical and trend analysis as well as future forecasting may be performed. For example if column is a primary key then the use of the date attributes described with reference to may provide reporting of the JOBCODE ID at any point in time to accurately reflect changes such as that which occurred on Jan. 8 2008 when the manager level changed from manager to AVP and the change back on Jan. 9 2008 to manager. In addition the data may be queried to indicate that the JOBCODE ID currently represents a manager level of AVP. In addition what if scenarios can be created by modifying the date attributes to determine who an organization would have looked and to determine what if any affects a change may have had on the organization. Thus as is now evident from the disclosure and the implementations described herein maintain Type 1 and Type 2 dimensions in dimension tables in a data warehouse provides unique reporting querying and analysis flexibilities.

Numerous other general purpose or special purpose computing system environments or configurations may be used. Examples of well known computing systems environments and or configurations that may be suitable for use include but are not limited to PCs server computers handheld or laptop devices multiprocessor systems microprocessor based systems network PCs minicomputers mainframe computers embedded systems distributed computing environments that include any of the above systems or devices and the like.

Computer executable instructions such as program modules being executed by a computer may be used. Generally program modules include routines programs objects components data structures etc. that perform particular tasks or implement particular abstract data types. Distributed computing environments may be used where tasks are performed by remote processing devices that are linked through a communications network or other data transmission medium. In a distributed computing environment program modules and other data may be located in both local and remote computer storage media including memory storage devices.

With reference to an exemplary system for implementing aspects described herein includes a computing device such as computing device . In its most basic configuration computing device typically includes at least one processing unit and system memory . Depending on the exact configuration and type of computing device system memory may be volatile such as random access memory RAM non volatile such as read only memory ROM flash memory etc. or some combination of the two. This most basic configuration is illustrated in by dashed line .

Computing device may have additional features and or functionality. For example computing device may include additional storage removable and or non removable including but not limited to magnetic or optical disks or tape. Such additional storage is illustrated in by removable storage and non removable storage .

Computing device typically includes a variety of computer readable media. Computer readable media can be any available media that can be accessed by computing device and include both volatile and non volatile media and removable and non removable media. By way of example and not limitation computer readable media may comprise computer storage media and communication media.

Computer storage media include volatile and non volatile and removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. System memory removable storage and non removable storage are all examples of computer storage media. Computer storage media include but are not limited to RAM ROM Electrically Erasable Programmable Read Only Memory EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by computing device . Any such computer storage media may be part of computing device .

Computing device may also contain communication connection s that allow the computing device to communicate with other devices. Communication connection s is an example of communication media. Communication media typically embody computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and include any information delivery media. The term modulated data signal means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media include wired media such as a wired network or direct wired connection and wireless media such as acoustic radio frequency RF infrared and other wireless media. The term computer readable media as used herein includes both storage media and communication media.

Computing device may also have input device s such as a keyboard mouse pen voice input device touch input device etc. Output device s such as a display speakers printer etc. may also be included. All these devices are well known in the art and need not be discussed at length here.

Computing device may be one of a plurality of computing devices inter connected by a network. As may be appreciated the network may be any appropriate network each computing device may be connected thereto by way of communication connection s in any appropriate manner and each computing device may communicate with one or more of the other computing devices in the network in any appropriate manner. For example the network may be a wired or wireless network within an organization or home or the like and may include a direct or indirect coupling to an external network such as the Internet or the like.

It should be understood that the various techniques described herein may be implemented in connection with hardware or software or where appropriate with a combination of both. Thus the methods and apparatus of the presently disclosed subject matter or certain aspects or portions thereof may take the form of program code i.e. instructions embodied in tangible media such as floppy diskettes CD ROMs hard drives or any other machine readable storage medium wherein when the program code is loaded into and executed by a machine such as a computer the machine becomes an apparatus for practicing the presently disclosed subject matter. In the case of program code execution on programmable computers the computing device generally includes a processor a storage medium readable by the processor including volatile and non volatile memory and or storage elements at least one input device and at least one output device. One or more programs may implement or utilize the processes described in connection with the presently disclosed subject matter e.g. through the use of an application programming interface API reusable controls or the like. Such programs may be implemented in a high level procedural or object oriented programming language to communicate with a computer system. However the program s can be implemented in assembly or machine language if desired. In any case the language may be a compiled or interpreted language and it may be combined with hardware implementations.

Although exemplary embodiments may refer to utilizing aspects of the presently disclosed subject matter in the context of one or more stand alone computer systems the subject matter is not so limited but rather may be implemented in connection with any computing environment such as a network or distributed computing environment. Still further aspects of the presently disclosed subject matter may be implemented in or across a plurality of processing chips or devices and storage may similarly be effected across a plurality of devices. Such devices might include personal computers network servers and handheld devices for example. Although the subject matter has been described in language specific to structural features and or methodological acts it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather the specific features and acts described above are disclosed as example forms of implementing the claims.

