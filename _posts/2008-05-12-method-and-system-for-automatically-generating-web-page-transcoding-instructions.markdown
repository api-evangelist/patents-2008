---

title: Method and system for automatically generating web page transcoding instructions
abstract: A system and method are provided for generating transcoding instructions to identify and extract a subset of data from a web page. Input describing the subset of data is received where the input describes one or more data fields and, for each data field, respective field values from at least two sample web pages of a web page family for the web site. For each field, respective web page code defining the respective field values may be compared for commonality to find a matching pattern with which to locate the respective field values. The matching pattern comprises a signature for the data field. Transcoding instructions are defined using the matching pattern to locate and extract field values within web pages of the web page family. The subset of data may be expressed in a target format to transcode the web page for particular client machines (e.g. a wireless mobile device).
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08396881&OS=08396881&RS=08396881
owner: Research In Motion Limited
number: 08396881
owner_city: Waterloo
owner_country: CA
publication_date: 20080512
---
This application claims the benefit of the prior filing of U.S. Provisional Patent Application Ser. No. 60 924 503 filed May 17 2007 the disclosure of which is incorporated herein by reference.

A portion of the disclosure of this patent document contains material which is subject to copyright protection. The copyright owner has no objection to the facsimile reproduction by anyone of the patent document or patent disclosure as it appears in the Patent and Trademark Office patent file or records but otherwise reserves all copyright rights.

The present application relates generally to telecommunications and more particularly to a method and system for automatically generating web page transcoding instructions.

Web sites host and provide information using web pages that are communicated electronically via a telecommunications network. Accessing this information by some client computing devices can be challenging. Computing devices are becoming smaller and increasingly utilize wireless connectivity. Examples of such computing devices include portable computing devices that include wireless network browsing capability as well as telephony and personal information management capabilities.

The smaller size of most wireless mobile client devices necessarily limits their display capabilities. Furthermore the wireless connections to such devices typically have less or more expensive bandwidth than corresponding wired connections. The Wireless Application Protocol WAP was designed to address such issues but WAP can still provide a very unsatisfactory experience or even completely ineffective experience particularly where the small client device needs to effect a connection with web sites that host web pages that are directed to traditional full desktop browsers.

A system and method are provided for generating transcoding instructions to identify and extract a subset of data from a web page. Input describing the subset of data is received where the input describes one or more data fields and for each data field respective field values from at least two sample web pages of a web page family for the web site. For each field respective web page code defining the respective field values may be compared for commonality to find a matching pattern with which to locate the respective field values. The matching pattern may define a signature for the data field. Transcoding instructions are defined using the matching pattern to locate and extract field values within web pages of the same web page family. The subset of data may be expressed in a target format to transcode the web page for particular client machines e.g. wireless mobile device .

In accordance with an aspect there is provided a method of automatically generating transcoding instructions to locate and extract a subset of data from a selected web page of a web site. The method comprises receiving an input describing the subset of data said input comprising one or more data fields and for each data field respective field values from at least two sample web pages of a web page family for the web site and for each data field comparing respective web page code defining the respective field values for commonality to find a matching pattern with which to locate the respective field values said matching pattern comprising a signature for the data field and defining the transcoding instructions in accordance with the matching pattern to locate and extract field values for the data field within web pages of the web page family.

Comparing respective web page code defining the respective field values may comprise locating the respective field values in the respective web page code. Comparing respective web page code defining the respective field values may further comprise locating object tags within the web page code. The method may further comprising constructing a programmatic data structure representing a hierarchy of object tags within the web page code and reviewing the hierarchy to determine the commonality.

Comparing respective web page code may comprise performing pattern recognition to define a common pattern within the web page code with which to locate the respective field values.

The web page code may comprise markup language in plain text. Each signature may comprise characters selected from the plain text of the web page code.

The method may further comprising automatically defining the input in accordance with a tagging tool that identifies the respective field values from the sample web pages. The web site may comprise an e commerce web site for making a purchase.

The method may further comprise defining transcoding instructions to express the extracted subset of data in a target format thereby to transcode the web page.

In accordance with another aspect there is provided a system for automatically generating transcoding instructions to locate and extract a subset of data from a selected web page of a web site. The system comprises a processor and memory coupled thereto said memory storing instructions and data to configure the processor for receiving an input describing the subset of data said input comprising one or more data fields and for each data field respective field values from at least two sample web pages of a web page family for the web site and for each data field comparing respective web page code defining the respective field values for commonality to find a matching pattern with which to locate the respective field values said matching pattern comprising a signature for the data field and defining the transcoding instructions in accordance with the matching pattern to locate and extract field values for the data field within web pages of the web page family.

Yet another aspect provides a computer program product for automatically generating transcoding instructions to locate and extract a subset of data from a selected web page of a web site the computer program product storing computer readable instructions which when executed by a computer processor configure the processor to A computer program product for automatically generating transcoding instructions to locate and extract a subset of data from a selected web page of a web site the computer program product storing computer readable instructions which when executed by a computer processor configure the processor to receive an input describing the subset of data said input comprising one or more data fields and for each data field respective field values from at least two sample web pages of a web page family for the web site and for each data field compare respective web page code defining the respective field values for commonality to find a matching pattern with which to locate the respective field values said matching pattern comprising a signature for the data field and define the transcoding instructions in accordance with the matching pattern to locate and extract field values for the data field within web pages of the web page family.

Referring now to there is illustrated a system for content navigation via a telecommunications network. In a present embodiment system comprises a plurality of client computing devices in the form of client machines A and B collectively a web site server hosting a web site and a gateway and schema server . Devices are respectively coupled to communicate with gateway and schema server to obtain web pages e.g. transcoded from web site .

In the present embodiment a web server serves web pages e.g. which comprise web site . The web pages are defined from a plurality of web page family templates A D collectively and web page content described further herein below from data store . For ease within the present embodiment only a single web site is shown coupled via gateway and schema server however in another embodiment a plurality of different web sites may be so coupled. In the present embodiment of system gateway and schema server is coupled to a schema repository from which to obtain a signature schema for a particular web site. Signature schema documents e.g. provide instructions and data with which an engine of server can extract data from web pages e.g. and transcode same to a target format to provide transcoded web page data e.g. and to the respective requesting client machines A and B as described more fully below. Gateway and schema server may also be coupled to a database for retrieving storing data extracted from web sites in accordance with its operations. The database may be a relational database storing extracted data from web sites in relation to the defined signature schema. The stored data can be accessed by a Structured Query Language SQL . Signature schemas for respective web sites may be defined e.g. coded using a computing device as described herein below.

Representative client machines include any type of computing or electronic device that can be used to communicate and interact with content available via web sites. Each of the client machines may be operated by a respective user U not shown . Interaction with a particular user includes presenting information on a client machine e.g. by rendering on a display screen as well as receiving input at a client machine e.g. such as via a keyboard for transmitting to a web site . In the present embodiment client machine A comprises a mobile electronic device with the combined functionality of a personal digital assistant cell phone email paging device and a web browser. Such a mobile electronic device may comprise a keyboard or other input device s a display screen a speaker and other output device s e.g. LEDs and a chassis for housing such components. The chassis may further house one or more central processing units volatile memory e.g. random access memory persistent memory e.g. Flash read only memory and network interfaces to allow client machine A to communicate over the telecommunication network.

Referring now to a schematic block diagram shows an exemplary client machine A in greater detail. It should be emphasized that the structure in is purely exemplary and contemplates a device that may be used for both wireless voice e.g. telephony and wireless data e.g. email web browsing text communications. Client machine A includes a plurality of input devices which in a present embodiment includes a keyboard and typically additional input buttons collectively an optional pointing device e.g. a trackball or trackwheel and a microphone . Other input devices such as a touch screen and camera lens are also contemplated. Input from keyboard buttons pointing device and microphone may be received at a processor . Processor may be further operatively coupled with a non volatile storage unit e.g. read only memory ROM Erasable Electronic Programmable Read Only Memory EEPROM or Flash Memory and a volatile storage unit e.g. random access memory RAM speaker display screen and one or more lights LEDs . Processor may be operatively coupled for network communications via a subsystem . Wireless communications are effective via at least one radio e.g. such as for Wi Fi or cellular wireless communications. Client machine A also may be configured for wired communications such as via a USB or other port and for short range wireless communications such as via a Bluetooth radio all not shown .

Programming instructions that implement the functional teachings of client machine A as described herein are typically maintained persistently in non volatile storage unit and used by processor which makes appropriate utilization of volatile storage during the execution of such programming instructions. Of particular note is that non volatile storage unit persistently maintains a web browser application and in the present embodiment a native menu application each of which can be executed on processor making use of volatile storage as appropriate. An operating system and various other applications not shown are maintained in non volatile storage unit according to the desired configuration and functioning of client machine A one specific non limiting example of which is a contact manager application also known as an address book not shown which stores a list of contacts addresses and phone numbers of interest to user U and allows user U to view update and delete those contacts as well as providing user U an option to initiate telecommunications e.g. telephone email instant message IM short message service SMS directly from that contact manager application.

Native menu application may be configured to provide menu choices to user U according to the particular application or other context that is being accessed. By way of example while user U is activating the contact manager application user U can activate menu application to access a plurality of menu choices available that are respective to contact manager application . For example menu choices may include options to invoke other applications e.g. a mapping application to map a contact s address or communication functions e.g. call SMS IM email etc. on the client machine A for a particular contact. Menu application may be associated to a particular input button e.g. one of buttons and invoked to provide a contextual menu comprised of a plurality of menu choices that are reflective of the context in which the button was selected. Note that the options in a contextual menu are stored within non volatile storage as being specifically associated with a respective application. Menu application may be therefore configured to generate a plurality of different contextual menus that are reflective of the particular context in which the menu application is invoked. For example in an email application where an email is being composed invoking menu application would generate a contextual menu that included the options of sending the email cancelling the email adding addresses to the email adding attachments and the like. The contents for such a contextual menu would also be maintained in non volatile storage . Other examples of contextual menus will occur to those of ordinary skill in the art.

As noted gateway and schema server applies a signature schema to transcode a web page and provide transcoded data to a requesting client machine . Signature schema may be configured to transcode navigational features of a web site to provide menu options to menu application for use when browsing the web site with browser . The signature schema may further transcode web site content for presentation by the browser .

Returning now to web server and gateway and schema server which can if desired be implemented on a single server can be based on any commonly available server environments or platforms including a module that houses one or more central processing units volatile memory e.g. random access memory persistent memory e.g. hard disk devices and network interfaces to allow servers and to communicate over the telecommunications network. Web server hosts software applications comprising instructions and data for generating and serving web pages dynamically from the template families and current informational content therefore from data store . Load balancing security firewall billing account and other applications may also be present.

Gateway and schema server hosts software applications comprising instructions and data for proxying requests and responses between the client machines and web site . In addition to software for maintaining HTTP communications performing requests maintaining sessions handling cookies etc. engine may be implemented in software to apply the signature schemas to web pages from web sites. There may be provided an interpreter that interprets the signature schema document and applies the actions against the web page code as an ASCII plain text document to extract the subset of data to produce a result set. A renderer may be provided to express the subset of data result set i.e. transcode to a target format such as cHTML Compact HTML for a mobile device browser for transmitting to the client machines also in accordance with the signature schema. A cache feature may also be provided for storing retrieving data from database . Caching may comprise storing web pages from the web site as well as extracted data from which to build a relational database of object and elements and their relationships. The gateway and schema server or a separate server not shown may host a web site engine to provide content extracted from the relational database e.g. stored web site data to the client machines .

Devices schema server and web site are coupled via a telecommunication network not shown typically comprising a plurality of interconnected networks that may include wired and at least for device A wireless networks. It should now be understood that the nature of the network is not particularly limited and is in general based on any combination of architectures that will support interactions between client machines and servers and . In a present embodiment the network includes the Internet as well as appropriate gateways and backhauls.

More specifically in the present embodiment a wireless network for client machine A may be based on core mobile network infrastructure e.g. Global System for Mobile communications GSM Code Division Multiple Access CDMA Enhanced Data rates for GSM Evolution EDGE Evolution Data Optimized EV DO High Speed Downlink Packet Access HSPDA Universal Mobile Telecommunications System UMTS etc. or on wireless local area network WLAN infrastructures such as the Institute for Electrical and Electronic Engineers IEEE 802.11 Standard and its variants or Bluetooth or the like or hybrids thereof. In the present embodiment of system it is contemplated that client machine B may be another type of client machine such as a PC desktop or laptop configured to include a full desktop computer or as a thin client . Typically such have larger display monitors screens than portable machines like A. A wired network for system and device B can be based on a T1 T3 or any other suitable wired connection.

As previously stated in relation to each of the client machines is configured to interact with content available over the network including web pages on web site . In a present embodiment client machines A and B may navigate for content using a browser application e.g. . As will be explained further below on client machine A browser application may be a mini browser in the sense that it may be configured to render web pages on the relatively small display of client machine A. Often during such rendering those pages are presented in a format that may be different from how those pages are rendered on a traditional desktop browser application e.g. browser of client machine B . Mini browsers typically attempt to convey substantially the same information as if the web pages had been rendered on a full browser such as Internet Explorer Safari or Firefox on a traditional desktop or laptop computer like client machine B.

The engine for example in parallel or without waiting for a response from server makes a request to the signature repository for the signature schema document for the web site which request may use the domain in the URL as an identifier for obtaining the document . The engine receives the schema. The engine does not render the web page per se but instead uses the instructions in the signature schema document to extract the subset of data from the web page for transcoding. In the present embodiment signature schema is configured to transcode the web page in accordance with the specific characteristics of the requesting client device A having knowledge of display capabilities such as screen size resolution and other parameters useful in determining the way in which the transcoded data is to be displayed on the machine A.

Optionally the web page or extracted data or both can be stored in database . Engine transmits the transcoded data that has been extracted and transcoded to a target format from web page in accordance with the schema to the requesting client machine A. As noted above transcoded data may comprise transcoded navigational data for menu application and informational content data e.g. a list of products and related information from a web page for displaying by browser application .

Signature schemas are pre defined documents and may be eXtensible Markup Language XML documents utilizing an SQL like query language to incorporate instructions and data with which to intelligently extract the data from web pages which web pages are typically coded in HTML DHTML XHTML XML RSS JavaScript etc . This extracted data may be transcoded and provided to client machines or used to dynamically generate a relational database e.g. or both. Each signature schema incorporates an understanding of a particular web site s data including relationships among the various data e.g. among its primary informational content found in the body of its web pages as well as among such content and associated navigational data e.g. web page links that govern the data in the page . As described further herein below prior knowledge of the web page code including specific identifiers tags and text i.e. strings used within the code sometimes referred to as signatures herein may be used to define instructions to identify portions of the code of interest and to extract specific data.

As a further feature transcoding may be configured to provide continuity of browsing transactional session experience enabling a user to switch client machines e.g. starting with client machine A and switching to machine B or vice versa . A user may be enabled to start an interaction with a web site and have displayed data published content and navigational data on the client machine A. The browsing session may then be continued on a second client machine B while retaining the transcoding as provided to the first client machine. For example a user on a desktop can continue to browse the published content and navigational data of the web site as previously experienced on a mobile device using only a portion of the desktop screen for example for data display.

In accordance with the present embodiment a signature schema document may be defined for all the pages of a particular web site. Large data driven web sites e.g. don t maintain thousands of individual web pages per se. The sites typically adopt a few page family templates and dynamically populate these with pertinent content from database comprising information e.g. weather stock data news shopping product data patent data trade mark data etc. as applicable when a client requests a particular page. Each template represents a family of pages having objects and attributes. Below are representative example page family templates and their objects and attributes for a web site offering news and an e commerce web site offering products for sale electronically 

Each family of pages the family template can be identified by a signature or unique set of one or more features that automatically identifies a given page on a web site as part of the family and differentiates that family from another family of pages. Similarly each object and attribute field of interest can be identified with its respective unique signature within a family of pages. A signature schema document typically comprise numerous pieces of information commands for example information that instructs the engine for 

A signature schema document may also be configured to enable special functionality for the target web site including searching logging in a user purchasing items etc.

In accordance with a present embodiment the structure and syntax of a representative signature schema document for a representative e commerce site eshop.ca is shown and described. Engine may be configured to receive web page code comprising text data and search through the text in accordance with the schema document instructions that provide SQL query like language instructions. Engine maintains a pointer within the text as it moves through the web page code performing various actions as described below in accordance with the schema instructions. Table 1 illustrates a snippet of a representative signature schema 

In the XML code snippet of Table 1 instructions at line 4 are for verifying that the web page under consideration and the signature schema relate to the same web site domain eshop.ca. Instructions at lines 9 15 are for determining the particular page family to which the web page under consideration belongs. A respective signature that defines the particular page family has been previously identified for use to distinguish the page. The engine processes the tag by registering the identification strings for each page family. When a web page is obtained by the engine as input the engine may be able to identify the page family by its unique string ref and the command provides the related tag within the signature schema document where further instructions for the particular web pages are found 

For example at line 10 the instructions identify a web page using the alternative signatures Compare products or Sort Products . Web pages with these strings are of the same family type. The instructions at line 10 provide a reference tag to further instructions for this family providing a link to instructions for the list elements page family with and ID of mylist1 see lines 16 17 . Similarly the other lookup instructions provide references to the specific instructions within the signature schema document for handling a web page of each web page family. Representative instructions for some of the web page families are provided in Table 1 for example at lines 16 17 and 18 29 with others omitted for brevity.

With reference to the extraction instructions for one of the web page families e.g. item elements id myitem1 at lines 18 29 the instruction at line 20 advances the scan pointer within the text file of the web page code to a beginning limit of a region of interest indicated by a signature reference. This establishes an upper limit for review within the text file. Though not shown in this table an end limit may be defined as well See Table 4 . Further such instructions at lines 22 28 may comprise commands to locate the subset of data using signatures such as string identifiers that uniquely identify the data within the region of interest. In the present example the instructions locate and extract a plurality of elements namely product image title price sale price and description for a product of the item web page family. For example instructions at line 23 extract a string in between the first lt img src quot and quot that appears after next appearance of largeimageref . The string returned is the path relative URL at web site eshop.ca to the product image. By advancing a search scan pointer within the web code to a particular location references before that location can be skipped when searching. Any prior instances of a signature string such as largeimageref may be ignored. In this way otherwise ambiguous signature references can be avoided.

The example in Table 1 shows at least some of the instructions e.g. lines 23 27 including one or more directional references relative to the signatures to locate and extract the subset of data. For example directional references such as before or after command the engine to extract the data that is in a relative position in the web page before or after the signature string i.e. ref . Moreover such instructions may further include at least one of a start reference or an end reference further pinpointing the location of the data in accordance with that direction. Additional directional reference information is discussed herein with reference to code snippets in other Tables and the discussion of an embodiment of signature transcoding engine syntax presented below.

The example within Table 1 demonstrates the extraction of data and the establishment of relationships between objects and elements within a same page of a web site. However signature schema documents may further capture relevant attributes of an object across pages. For example a user of client machine A may click through a number of web pages in eshop.ca to get to a specific product page e.g. Department Product Category Product Sub Category Specific Product such as TV Video 19 21 TVs LCD TVs BrandX Product. The navigational hierarchy representing a categorization may be captured and associated to the extracted objects and there elements.

For brevity certain instructions were omitted from Table 1. Tables 2 4 provide representative instructions for further web page families for e shop.ca that may be read with Table 1. Table 2 below provides representative instructions e.g. for lines 16 and 17 of Table 1 including instructions for a web page family related to a list of items products for sale. Whereas instructions at lines 22 28 provided product data extraction instructions for a web page family showing a single item i.e. product the instructions of Table 2 provide additional instructions that repeat product data extractions for each product in the list.

If the engine identifies that the page is of the mylist1 family the engine determines the location in the signature schema document that contains the signature for the objects and elements of that family and applies the instructions therefor. A product list at e shop.ca may span multiple web pages. Instructions at lines 2 6 of Table 2 find the number of pages and generate the links for each of the pages. Instructions at lines 7 9 action tag advance the search scan pointer to the region of web page code that may be of interest i.e. in this case the start of the list . In this way a local signature reference can be used and any earlier ambiguous references skipped. Skipping to the local region of interest may also make the specification of the signature reference less complicated.

Taking advantage of inherent repeated patterns in the web page code instructions at lines 10 16 elements tag of Table 2 provide product data extraction instructions that may be repeated for each product in the list. The engine may be provided with commands to scan for each data element of interest using a signature reference e.g. ref an action one or more positional instruction s to further identify the data within the text of the web page code and any additional text data manipulation instructions to extract the data e.g. to remove HTML formatting characters or add characters . The instruction at line 15 moves the scan pointer to the end of the object in this example a product in a list of products to ready the instructions for application against the next object product in the list.

If the engine has identified that the page is of the mysearch1 family the engine applies the portion of the signature schema document that contains the signature for the objects and elements of that family shown above in Table 3.

If the engine has identified that it is looking for a menu on a page that contains the menu style of the mymenu1 family the engine applies the portion of the signature schema document that contains the signature for the objects and elements of that family shown above in Table 4.

Though the example described relates to extracting informational content for an e commerce oriented site no limitation should be applied. Similar instructions may be defined for other types of sites for pages which permit a user to input information and for navigational data extraction.

Signature schema document may further comprise transcoding instructions not shown for use by engine to express the extracted subset of data in a target format e.g. a format of HTML XML script etc. for use by the requesting client machine . For example the transcoding instructions may define a web page for displaying the extracted data in browser application that is suitable for display on the client device . The formatting rules can be system and or user defined and can include parameters such as but not limited to object positioning object colour object size object shape object font image characteristics background style and navigational item display e.g. in a menu as described above or for display with the content in the generated page on the client screen. Browser application e.g. of machine A may be configured for using a markup language e.g. cHTML or other code format that is not identical to the code provided by web page . Alternatively transcoding instructions may be defined to express the extracted subset of data in XML or another code format such as for use by a different client application or plug in to a client application such as menu application or another application not shown on client machine .

Signature schema documents may be prepared i.e. coded using a computing device such as computing device . Computing device may be any suitable desktop or laptop device capable of coding documents which may be but need not be XML type documents and may be configured to automate or semi automate coding of such documents.

Computing device may be coupled to web site to retrieve web pages from the site for reviewing to prepare the custom signature schema document for the site. Computing device may be configured to automatically review the web page code and apply heuristics or other techniques e.g. spatial analysis to determine probable content of interest i.e. subset of data and generate code to extract the subset of data. For example primary content of interest tends to be located toward the centre of the web page. In another embodiment the computing device may facilitate a user coding signature schema to manually assist with the analysis of the web page and identification of subset of data and the generation of the instructions. Computing device may be further coupled to repository to provide e.g. up load or publish coded signature schema documents for use by server .

Referring to in one embodiment the computing device of system comprises an automatic signature generation tool for preparing a custom signature schema document for web pages of a web site. Computing device may further comprise a desktop tagging tool having a graphical user interface which may be adapted to cooperate with a web browser application for assisting a user to identify the desired data e.g. product title image description and price data in a web browser window . User interface may comprise a portion of the window while the remaining portion displays the rendered web page A for which a signature schema is to be constructed. User interface may present a form showing the desired data fields and values therefor where candidate data values from data of the web page A populates the form . User interface may facilitate confirming or amend the candidate data values. For example data replacing the candidate data may be selected and captured not shown from the rendered web page A through drag and drop or highlighting copying user gestures.

User interface may be predefined to present candidate desired data i.e. for particular desired data types that are expected to be found on web pages for such web sites of a similar genre . That is a user interface for an e commerce web site selling products may be defined to present product title image price etc. If a particular candidate value was incorrect for example product image A title B etc. such may be selected and dropped or copied into form of interface . Optionally the interface may permit the user to add data types fields and field values to the presented data. In association with these actions tool examines the associated HTML source code tags of the rendered web page for capturing this data. Desktop tagging may be useful to assist with the identification of the desired data within the web page code so that signatures therefor within the web page code of similar pages may be determined for defining the signature schema documents.

Although the desktop tagging tool and the automatic signature generation tool are described in relation to computing device it will be understood that any one of the client machines may be configured to comprise the tools and . Further it will be understood that the exemplary operation of the automatic signature tool may be implemented similarly on the client machines . Similarly the flow of interactions may apply similarly for either one or both of the computing device or the client machine .

Although signature schema documents may be manually coded these activities may be time consuming and subject to human error. Therefore by providing an automatic signature tool to automate coding of signature schema transcoded web pages e.g. and thus transcoded web sites may be readied for use faster and more reliably.

Referring to shown are exemplary operations of the automatic signature generation tool . A detailed example of two sample web pages used to define a signature schema will be presented below. At the automatic signature generation tool receives an input identifying the desired data that is to be located and extracted that is for which signatures and instructions are desired. Tool receives an input identifying a set of fields and corresponding field values for extraction from at least two sample web pages of a web page family. The fields and field values have also been referred to as elements herein. That is the fields may refer to the categories or attributes by which an object such as an item for sale may be defined. For example a product object such as a camera may have the following fields image title price description. The values for each of the fields related to the camera may be referred to as field values. The field value for the title field may include BrandX 7.2 MP Digital Camera .

The input identifying the fields and field values for extraction as defined in may be provided by a manual review of the web page to identify desired fields e.g. locating the desired image within object tags of a web page and to indicate the content type of various tags in the web page e.g. navigation title price image item description etc. . Alternatively the input fields and field values of step may be semi automated using the desktop tagging tool to highlight portions on the web page and therefore visually select which content data corresponds to what meaning e.g. to select the elements on a page linked to a field . Further alternately the desktop tagging tool may be used to automatically populate fields and estimated values for the fields and to allow a user to confirm correct estimated fields e.g. by using heuristics or other rules automatically applied in combination with pre defined locations of fields e.g. confidence intervals to web pages to identify likely data provided by tagging tool or other module not shown .

At each identified field and corresponding field value is located within object tags of each of the at least two sample web pages. For example if for the first sample web page the input received identifies an image field having the value product image.gif then this value is first located within an object tag of the first web page. For example the object tag may be and it is the second image object tag e.g. a second instance of the 

At the automatic signature generation tool compares the object tags of identical fields e.g. image field between the two sample web pages to identify a commonality between the object tags for the identical fields such as common location string identifiers attribute type and other patterns i.e. a pattern comprising characters that describe a set of strings that can uniquely identify a field value within the plain text ASCII web page code. A pattern may include string1 sting2 where represent 0 or more characters between the characters of string1 and string 2 .

In the above example the commonality between the two identified object tags may be that the object tag was the second instance of the img attribute within the code of each web page that the object for the two sample web pages starts with src and that ends the string that provides the field value for each object. For example the object tag of the first web page provided the string product image.gif . Further the object tags corresponding to each web page and having the identical image field type may be identified by the attribute 

At automatic signature generation tool uses the commonality between object tags of identical fields of the two sample web pages to define instructions to locate and extract the desired data which instructions comprise a portion of the signature schema for web pages of the same family type. Operations may be repeated for each of the identified fields and field values elements to determine the commonality and patterns between the two sample web pages in turn defining signatures and instructions with which to define at least a portion of signature schema . Further operations may be repeated for other web pages of other family types in the web site to generate the instructions to code other respective portions of schema .

An example of the operations and will now be described with reference to two illustrative sample web pages and their illustrative HTML code in Table 6 . As described earlier pre identified fields and field values indicating the subset of data to be located and extracted from the web page code for this web page family are provided Table 5 for each of the sample web pages for operations . As also described the pre defined fields may either be identified manually by the user or using the desktop tagging tool including estimated locations of the fields to generate the desired fields and field values.

As noted automatic signature generation tool repeats operations for each of the input fields e.g. image price title description to define a commonality between the web page code e.g. tags etc. used to describe each of the respective fields and thereby define the signature schema for that field.

First the automatic signature generation tool examines the web page code of Item1 for the identified image field . Tool may initially identify src as an attribute corresponding to the image field and scan the source HTML document of the Item1 web page for src product image.gif . It does find a match as it ought to since the field was previously selected from this code and the location thereof. It then scans item2 but no match is found in item2. Next the automatic signature generation tool looks at 

From Item1 the object Product title is selected by the automatic signature generation tool based on the identified fields to review. Tool identifies that it is a text node within the code and looks to its parent to identify uniqueness. There are no attributes for the parent . Next the automatic signature generation tool looks at 

From Item1 the object 79.99 is selected by the automatic signature generation tool . There are no attributes to be checked for this element. Next the element looks at 

From Item1 the object 99.99 is selected by the automatic signature generation tool . There are no attributes to be checked for this element. Next the signature generation tool looks at 

From Item1 the next identified field for automatic signature generation tool is object provides a description for Sample title made by Sample Manufacturer . This object represents the pre identified Description field and field value of Item1. There are no attributes to be checked for this object. Next the signature generation tool looks at 

Accordingly as illustrated in Step 5 of the example above in one embodiment the automatic signature generation tool examines the HTML document or other format of web page and constructs a programmatic data structure to model a hierarchy of the tags. The resulting structure may be a tree which defines the parent siblings and children of each object. The operations may identify the key objects that contain the data required for the signature schema document . Once a particular object is identified as being a desired data field i.e. is one of the fields in Table 5 the uniqueness of the object may be identified by examining its properties for example class style id within the structure. If the properties of the object are not unique then the task to identify the uniqueness for the object would expand to its parent siblings and children. For example if the object is a text node of the tree or other hierarchical structure the object may use the properties of its parent to assist with the identification of is uniqueness for expression as a signature. The operations may expand in all directions uniformly i.e. examine parent then previous sibling then next sibling then first child . The properties of each of these items may also be merged with the desired object to build out the uniqueness. This process would then be repeated on the parent then the previous sibling etc until a unique identifier was found. Once a unique identifier was found an expression would be created for the signature.

Accordingly in view of the above the automatic signature generation tool provided by the computing device provides the signature schema for a new web page family using at least two sample web pages. As illustrated in steps and the tool compares two or more delimiters pertaining to a common schema of the definition of the pages from each of the sample web pages in order to identify common uses of the delimiters and their contents . Once identified as a match the corresponding object for example is placed in the hierarchical structure or other ordered list etc. for defining the signature schema .

It is recognized that the hierarchy can link entities either directly or indirectly and either vertically or horizontally. The only direct links in a hierarchy insofar as they are hierarchical can be to the entities immediate superior or to the entities subordinates although a system that is largely hierarchical can also incorporate other organizational patterns. Indirect hierarchical links can extend vertically upwards or downwards via multiple links in the same direction. Traveling up the hierarchy to find a common direct or indirect superior and then down again can nevertheless horizontally link all parts of the hierarchy which are not vertically linked to one another. Further the structure may also be a list implemented using arrays or linked indexed lists of some sort. The structure may have certain properties associated with arrays and linked lists.

Further it is recognized that the structure would be represented in the signature file as the entries or instructions as noted above. It is recognized that a user of the device could manually amend or otherwise review the automatically generated signature file as desired.

It will be apparent to a person of ordinary skill in the art that as a web site may be re designed or otherwise changed such that the code of one or more web page families may be changed or a family added an existing signature schema may require re coding to account for the change addition as applicable.

It will be apparent to a person of ordinary skill in the art that as a web site may be re designed or otherwise changed such that the code of one or more web page families may be changed or a family added an existing signature schema may require re coding to account for the change addition as applicable.

In accordance with a present embodiment further details concerning the syntax of schema instructions are described.

Type Defines the data type of the lookup. Type may be pex for a string expression. Type may also support more advanced options such as regular expressions API calls and SQL queries.

The page syntax extracts the paging information from the data. This allows the end user the ability to change pages just as on the desktop.

Make a web site family s search feature functional by specifying details such as what variable to post.

The advanced tag defines global properties for the site. This at a minimum includes the path to the initial page of the site.

The page type is a collection of lookup queries that have an id associated with them. Lookup queries may be processed in a top down fashion. The first successful lookup will trigger another section in the signature schema document. For example if the following evaluates to true 

Elements include list elements menu elements item elements search elements form elements. Each element has an ID. For example a menu element 

Settings syntax varies based on the type of element it resides in. Settings allow customizations that only apply to a specific page family.

The actions tag primary function is data manipulation. It contains lookup queries that modify data with actions of move ptr or end ptr .

Persons of ordinary skill in the art will appreciate that alternative embodiments are contemplated. Though not shown a client machine may incorporate a transcoding engine applying a signature schema document obtained from a repository such as repository to web pages received from a web site. For example client machine B may be configured with an engine in cooperation with a mini browser application or plug in to another application. The engine obtains the schema document to apply against web page content from a particular web site. Communications with the web site may be direct and not via a gateway . The transcoding engine may apply the commands from the schema and transcode appropriately for rendering content by the mini browser or via the plug in.

Large public database driven web sites do not typically encrypt data that is publicly available. Instead the sites encrypt specific pages that contain user information for example login signup checkout and account management pages. One reason why all content is not encrypted may be that SSL TLS is resource intensive and reduces scalability. Another reason why all content is not encrypted may be that SSL TLS increase response times for the end user due to the time spent encrypting and decrypting content. Examples of web sites that follow this model include online stores news sites sports information and weather. Therefore since the number of SSL TLS pages is relatively small signature schema can be created to define a mobile friendly layout. Another benefit of the signature schema is that each field in an HTML form can be classified and populated with user data from an external application. It will be understood that each individual SSL TLS page will likely require its own respective page family template within a schema.

In contrast to shows a client machine C comprising a browser application C similar to browser for communicating with web site via gateway and schema server . In a similar way a signature schema may be used to transcode un encrypted communications of web pages to provide transcoded data . However browser C may be further configured to communicate through secure transcoding engine handing off communications for secure web pages when such communications between machine C and web site are to be encrypted. Secure transcoding engine may communicate with gateway and schema server to obtain the signature schema document which may be applied to transcode secure communications with web site .

Schema document may include instructions for populating secure responses to web site with data previously stored to client machine C. Such information may include personal information that has been stored using an external client application such as a password keeping application for securely storing encrypted personal information. Schema documents may be coded with suitable instructions to invoke communications or application programming interfaces between the secure transcoding engine and external application to securely obtain such data. Such information may be available via a plug in not shown to browser C.

System may be implemented so that a plurality of web sites are coupled to the telecommunication network either alone by a server or by a plurality of web servers like web server and that a corresponding plurality of schemas for each of those web sites or each of the web pages therein or both can be maintained by gateway and schema server and repository . There can in fact be a plurality of gateway and schema servers like server . Client machines can be configured for proxied connection through different servers . Servers can be hosted by a variety of different parties including for example but without limitation a a manufacturer of client machine b a service provider that provides access to the telecommunication network on behalf of user U of a client machine c the entity that hosts web site or d a third party intermediary. In web site host example it can even be desired to simply combine the web server and schema server engine on a single server to thereby obviate the need for separate servers.

Accordingly signature schemas may be defined to provide custom browsing experiences for small e.g. mobile devices among others and the proposed framework avoids changing web site code for existing web sites. Data extracted from the web sites may be intelligently stored to a relational database using knowledge of the web pages i.e. the objects and their attributes incorporated into the signature schemas. Query language may be used to direct a search of the web page as an ASCII text file to look for signatures to distinguish the web page s family from other web page families of a site and to identify the subset of data to be extracted.

