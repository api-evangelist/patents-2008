---

title: Method and apparatus for providing a host-independent name to identify a meta-device that represents a logical unit number
abstract: A method and apparatus for providing a host-independent name to identify a meta-device that represents a Logical Unit Number (LUN) is described. In one embodiment, the method comprises processing information regarding at least one storage enclosure that comprises at least one Logical Unit Number (LUN) represented by at least one meta-device and generating at least one host-independent name based on the information regarding the at least one storage enclosure, wherein the at least one host-independent name is used to identify the at least one meta-device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08271725&OS=08271725&RS=08271725
owner: Symantec Corporation
number: 08271725
owner_city: Mountain View
owner_country: US
publication_date: 20080630
---
Embodiments of the present invention generally relate to a data storage management and more particularly to a method and apparatus for providing a host independent name that identifies a meta device to which a plurality of host computers share access through such a host independent name.

A plurality of host computers may use one or more storage devices e.g. a storage array comprising a plurality of hard disks for managing critical data. The one or more storage devices may be maintained in one or more storage enclosures and partitioned into a plurality of storage volumes. In a Small Computer System Interface SCSI configuration the plurality of storage volumes are referred to as Logical Units which are represented by Logical Unit Numbers LUNs . Disk array controllers which typically have more than one port virtualize the disks within the array and present them to the plurality of host computers as LUNs. Furthermore one or more LUNs of the plurality of LUNs may be represented as a meta device. As such the meta device is a representation of the one or more LUNs on a particular host computer that as viewed through multiple paths e.g. cables from the particular host computer.

The plurality of host computers may retrieve data from and store data in the meta device through an Applicant Programming Interface API for the LUNs. The data is transmitted through one or more Input Output I O paths that include a host bus adapter cables a storage network switch a storage device adapter port and in the case of storage arrays i.e. disk arrays a disk controller. Multi pathing software e.g. Dynamic Multi pathing software for VERITAS STORAGE FOUNDATION manages multiple and distinct I O paths to a particular LUN in order to maintain availability of the data.

When the LUN is shared amongst the plurality of host computers software e.g. an operating system on each host computer assigns a different name to the LUN based on an I O path to the LUN as seen by each host computer. Hence each host computer may assign a host centric that may include a Host Bus Adapter HBA instance number a SCSI target identifier and a LUN identifier. Such information is provided by software operating on the HBA and or the storage array. Multi pathing software may use the Operating System assigned name or a name that is created using another host centric algorithm. As a result the same LUN in the storage subsystem is represented through meta devices with different names across the plurality of host computers that share the LUN.

The assignment of different names to the same LUN causes confusion and difficulties for administrators and storage management software. Consequently the computing environment is more error prone. Another consequence of typical host centric names is that such names do not identify the LUN when system administrators communicate with storage administrators. Furthermore the only LUN identifiers that can be provided in a reliable and array independent fashion are the LUN serial number. The LUN serial number may be a long hexadecimal string that would be challenge to use for day to day operational tasks.

Therefore there is a need in the art for a method and apparatus for providing a host independent name for a meta device that is consistently used by host computers to access a LUN represented by the meta device.

The present invention generally comprises providing a host independent name to identify a meta device that represents a LUN. In one embodiment a method for providing at least one host independent name for a meta device to at least one host computer comprises processing information regarding at least one storage enclosure that comprises at least one LUN and generating at least one host independent name based on the information regarding the at least one storage enclosure wherein the at least one host independent name is used to identify the at least one meta device.

The host computer is a computing device e.g. a laptop a desktop a Personal Desk Assistant PDA a tablet a mobile phone and the like that comprises a central processing unit CPU various support circuits and a memory . The CPU may comprise one or more commercially available microprocessors or microcontrollers that facilitate data processing and storage. Various support circuits facilitate operation of the CPU and may include clock circuits buses power supplies input output circuits and or the like. The memory includes a read only memory random access memory disk drive storage optical storage removable storage and the like. The memory includes various data such as host independent name information . The memory includes various software packages such as a name generator a dynamic multi pathing module and a support library .

The storage subsystem generally includes various components i.e. hardware and software that are configured to manage storage resources within a computing environment. The storage subsystem facilitates permanent storage i.e. backup of critical computer data. The storage subsystem includes one or more data storage devices e.g. hard disk drives optical drives magnetic tape drives a storage array e.g. a RAID configuration and or the like one or more controllers and software that provides an interface e.g. Integrated Drive Electronics AT Attachment IDE ATA Small Computer Systems Interface SCSI and or the like to the one or more data storage devices for the host computer . For example a storage array may be partitioned into a plurality of storage volumes where each storage volume is represented by a Logical Unit Number LUN . In one embodiment the storage subsystem comprises a plurality of LUNs illustrated in as a LUN . . . a LUN that represent the plurality of storage volumes.

In one embodiment the host computer is a server computer that provides various computing services and resources to one or more client computers. The host computer may be one of the plurality of host computers that share access to the LUN in the storage subsystem . As described further below the host computer uses the host independent name to retrieve data from and store data in a LUN associated with the meta device.

The network comprises a communication system that connects computers by wire cable fiber optic and or wireless links facilitated by various types of well known network elements such as hubs switches routers and the like. The network may employ various well known protocols to communicate information amongst the network resources. For example the network may be part of the Internet or intranet using various communications infrastructure such as Ethernet WiFi WiMax General Packet Radio Service GPRS and the like. Furthermore the network may form a portion of a Storage Network Area SAN using various communications infrastructure such as Ethernet Fibre Channel and or the like.

The dynamic multi pathing module includes software code for maintaining multiple I O paths between the host computer and the LUNs such as VERITAS dynamic multi pathing software. In one embodiment the dynamic multi pathing module presents one or more host independent names to the host computer to facilitate access with a particular LUN of the LUNs . As a result one or more host computers that share access to the particular LUN use a same name for identifying a meta device that represents the particular LUN. A storage enclosure within the storage subsystem exports the particular LUN to the host computer . The dynamic multi pathing module on the host computer creates the meta device to represent the particular LUNs exported by the storage enclosures according to one embodiment.

In one embodiment a support library may be used by the dynamic multi pathing module and or the name generator to interact with various components e.g. the LUNs within the storage subsystem . Such a support library may include an implementation of an Application Programming Interface API for interacting with the LUNs . For example the support library may be an Array Software Library ASL that may be used to retrieve information regarding one or more storage enclosures within the storage subsystem such as a cabinet serial number a LUN serial number and or an array volume ID property. In another embodiment the name generator does not use the software library to retrieve information regarding the storage enclosures that house the LUNs within the storage subsystem .

The name generator cooperates with storage array management software to identify the LUNs using one or more host independent names. The name generator is configured to provide the host computer with the one or more host independent names that identify one or more meta devices that represent the LUNs within the storage subsystem according to one embodiment. The one or more host independent names facilitate shared access to the LUNs for one or more host computers including the host computer . In one embodiment the one or more host independent names map directly to identifiers being used locally by the storage array management software in the storage subsystem to access the LUNs . Furthermore system administrators that manage the one or more host computers in a datacenter and storage administrators that manage storage arrays in the storage subsystem are able to use a host independent name to refer to a particular meta device that represents a particular LUN.

In another embodiment the name generator cooperates with the dynamic multi pathing module to provide access to the LUNs for the host computer . In one embodiment the name generator produces the host independent name information which is used for an I O Input output request e.g. Read or Write operations initiated by the host computer to the dynamic multi pathing module . Hence such an I O request includes a host independent name to identify a particular LUN represented by a meta device instead of host centric name e.g. a path . The host independent name is consistent for each and every host computer that shares access to the particular LUN represented by the meta device. During a failure e.g. a failure at a network component such as a switch or a cable the dynamic multi pathing module maps the host independent name to one or more alternate paths to the particular LUN.

In operation the name generator produces one or more host independent names for one or more meta devices based on information regarding one or more storage enclosures according to one embodiment. The one or more storage enclosures include the LUNs which are represented by the one or more meta devices. In one embodiment the name generator determines one or more classes e.g. EMC IBM and or the like for the one or more storage enclosures. Subsequently the name generator sorts one or more cabinet serial numbers in order to determine one or more indices that identify the one or more storage enclosures. In one embodiment the name generator sorts one or more cabinet serial numbers associated with a same storage enclosure class. By sorting the cabinet serial numbers the one or more indices are not dependent upon an order in which the one or more storage enclosures were discovered by an operating system at the host computer . Instead the one or more indices are dependent upon the cabinet serial numbers. As a result another host computer besides the host computer may sort the same cabinet serial numbers in a similar manner to determine the same indices according to one embodiment.

Afterwards the name generator maps unique LUN identifiers e.g. indices array volume ID properties and or the like to the LUNs . In one embodiment the unique LUN identifiers may be short user friendly identifier discovered from the storage enclosure that houses a LUN represented by a particular meta device. In one embodiment the name generator sorts one or more LUN serial numbers in order to determine one or more indices that identify the LUNs . Alternatively the one or more storage enclosures implement an array volume identifier ID property for identifying a particular LUN e.g. a disk within a particular storage enclosure. In one embodiment the name generator populates each array volume ID property of the LUNs using one or more portions of the LUN serial numbers. As a result a particular array volume ID property may uniquely identify a particular LUN of the LUNs .

In one embodiment the array volume ID property may be provided to the name generator by the software library. As such the array volume ID is a unique identifier that is native to the storage enclosure that includes the particular LUN and is claimed by the software library e.g. an Array Software Library . The name generator processes the array volume ID properties associated with the LUNs to determine the one or more indices that identify the particular LUN. In one embodiment the array volume ID properties of the LUNs are used as the one or more indices.

According to one embodiment a unique LUN identifier may be provided for the LUNs that are exposed by various storage enclosures e.g. storage arrays . For example the name generator uses a third fourth and fifth bytes of a LUN serial number associated with a meta device to generate a unique LUN identifier that provides an American Standard Code for Information Interchange ASCII representation of a Symmetrix volume number in an EMC Symmetrix storage enclosure. As another example the name generator uses a last four bytes of the LUN serial number of the meta device to generate the unique LUN identifier that provides an ASCII representation of a Hitachi 9900 LUN device identifier i.e. a controller unit and a LUN device ID in Hitachi 9900 series storage enclosure.

As another example the name generator uses a last four bytes of the LUN serial number of the meta device to generate the unique LUN identifier that provides an ASCII representation of an HP XP series LUN device identifier i.e. controller unit and LUN device ID in a HP XP series storage enclosure. As yet another example the name generator uses one hundred and nineteenth and one hundred and twentieth bytes in standard inquiry data to generate a virtual LUN number of an EMC Clariion LUN in a EMC Clariion storage enclosure. As another example the name generator uses fourty third to fourty sixth bytes of standard inquiry data to generate the unique LUN identifier that provides an ASCII representation of a unique volume ID for every LUN configured on a storage array in a IBM DS8000 storage enclosure.

In one embodiment a host independent name for a meta device includes a first portion a second portion and a third portion. The name generator creates the host independent name based on information regarding a storage enclosure that maintains the meta device. Furthermore the host independent name is consistently used by one or more host computers to identify the meta device as a destination LUN for an I O operation. In one embodiment the name generator creates the first portion of the host independent name using a class for the storage enclosure. For example the first portion may be EMC to represent an EMC storage enclosure. The name generator creates the second portion i.e. an instance of the storage enclosure of the host independent name with an index for a cabinet serial number associated with the storage enclosure. For example the second portion may be 10 or an index of ten that indicates e.g. maps to a tenth instance of a EMC class storage enclosure.

Additionally the name generator creates the third portion using a unique LUN identifier that includes a portion of a LUN serial number for a LUN represented by the meta device. For example since the unique LUN identifier may be 0x4BA the third portion may simply be 4BA . Accordingly the host independent name is generated to be EMC104BA where EMC10 identifies the EMC storage enclosure that maintains the meta device and 4BA identifies the LUN within the EMC storage enclosure that is represented by the meta device. Several host computers may use EMC104BA to access the LUN. Furthermore the host computer may include the host independent name in an I O request communicated to the dynamic multi pathing module . Since the host independent name is not based on information specific to the host computer e.g. an order of operating system discovered meta devices a path visible to the host computer and or the like the dynamic multi pathing module is able to quickly identify the LUN.

Alternatively an external storage management computer provides one or more host computers e.g. the host computer with one or more host independent names for identifying one or more meta devices that represent the LUNs . Such an external storage management computer includes the name generator and the host independent name information . The external storage management computer presents the one or more host computers with the host independent name information . Furthermore the dynamic multi pathing module uses the host independent name information during communications e.g. I O requests with storage array management software on the storage subsystem in order to identify the one or more meta devices and access the LUNs .

It is appreciated that one or more embodiments of the present invention do not include the dynamic multi pathing module . As such the name generator is a component of a monolithic software package executed by the host computer to identify the one or more meta devices and access the LUNs . Such a monolithic software package uses one or more host independent names that map to the LUNs while communicating with storage array management software according to one embodiment. Furthermore the monolithic software package is configured to retrieve information regarding one or more storage enclosures that house the LUNs within the storage subsystem .

While the foregoing is directed to embodiments of the present invention other and further embodiments of the invention may be devised without departing from the basic scope thereof and the scope thereof is determined by the claims that follow.

