---

title: Calculating a webpage importance from a web browsing graph
abstract: Method for creating a graph representing web browsing behavior, including receiving web browsing behavior data from one or more web browsers; adding a node on the graph for each web page listed in the web browsing behavior data; adding a first link connecting two or more nodes on the graph, wherein the first link representing a hyperlink for accessing a webpage; calculating an amount of time in which each web page is being accessed; determining a number of units of time in the calculated amount of time; adding one or more virtual nodes to the graph based on the number of units of time; and adding a second link connecting two or more virtual nodes on the graph, wherein the second link representing a virtual hyperlink for accessing a webpage.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08368698&OS=08368698&RS=08368698
owner: Microsoft Corporation
number: 08368698
owner_city: Redmond
owner_country: US
publication_date: 20080924
---
Search services currently use conventional link analysis algorithms to compute the importance of a particular web page. The input data for link analysis algorithms are obtained from link graphs which represent the web pages and the hyperlinks that link to those particular web pages. The link analysis algorithms employ a discrete time Markov process to model the behavior of a web user given the web pages and links listed in a link graph. Unfortunately link graphs may not accurately represent the importance of each webpage because links can be easily added and deleted by webmasters. Some webmasters even create web pages with link spam different link functions and other crawling strategies that may skew the calculation of the importance of a webpage.

Described herein are implementations of various technologies for calculating a webpage importance using a web browsing graph. The web browsing graph may be used to model the web browsing behavior of web users. The web browsing graph may be created as follows.

In one implementation a web page importance application may receive data from the web users that may describe their web browsing behavior. Using the web browsing behavior data the web page importance application may reorganize the data into a browsing thread that may display an identification number of the user s machine in which the data has been obtained from a list of Universal Resource Locator URL addresses that the user has accessed from his machine a time at which each URL address was accessed and the manner in which the user accessed each URL address via hyperlink or URL address entry .

After creating the browsing thread for each user the web page importance application may create a browsing graph. Initially the browsing graph may be blank but the web page importance application may use the browsing thread to add nodes and lines or links to the browsing graph.

A node denoted by a circle may be created on the browsing graph for each URL address listed in each browsing thread. In one implementation only one node may be created for each specific URL address. If a URL address was accessed after the user clicked a hyperlink from a different webpage a line or link may be drawn from the node which represents the URL address having the hyperlink to the node that represents the accessed URL address. The link may point to the destination URL address. The browsing graph may be stored on a browsing graph file. In addition to the browsing graph the time in which each URL address was accessed by each machine may also be stored in the metadata portion of the browsing graph file.

In order to represent the web users staying time on a particular webpage virtual nodes or self loops may be added to the newly created browsing graph. In one implementation the web page importance application may calculate the time in which each webpage was being used by analyzing the time data stored in the metadata of the browsing graph file. The web page importance application may then establish that each node in the browsing graph may represent a certain amount of time in which a web user may have been accessing a webpage.

Since each node on the browsing graph represents an amount of time a number of virtual nodes may be added to the browsing graph to represent the total duration of time in which a web user may have been accessing a particular webpage. A link may then be added from the original node to a first virtual node to represent a web user s action of staying on a particular webpage for one second then clicking a hyperlink to the same webpage and staying on that webpage for another second. The web page importance application may continue connecting each added virtual node together until the time in which the user stayed on the webpage represented by the virtual node has been indicated on the browsing graph.

Similarly the computer program may add self loops to a node on the browsing graph to represent the time in which a web user was accessing a particular webpage. Each self loop may represent a web user s action in accessing the same webpage again after the established unit of time expired. Self loops may be indicated on the browsing graph as arrows that originate and end at the same node.

The browsing graph with virtual nodes or self loops may then be used as an input into a link analysis algorithm to determine the importance of each node or the corresponding webpage. The link analysis algorithm may evaluate the number of links in the graph to determine the importance of each webpage. The browsing graph with virtual nodes or self loops may indirectly incorporate the time in which a web user stays on a webpage into the link analysis algorithm by adding the links to the virtual nodes or self loops to original nodes.

The above referenced summary section is provided to introduce a selection of concepts in a simplified form that are further described below in the detailed description section. The summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used to limit the scope of the claimed subject matter. Furthermore the claimed subject matter is not limited to implementations that solve any or all disadvantages noted in any part of this disclosure.

In general one or more implementations described herein are directed to creating a graph to model the web browsing behavior of one or more web users. One or more implementations of various techniques for calculating webpage importance will now be described in more detail with reference to in the following paragraphs.

Implementations of various technologies described herein may be operational with numerous general purpose or special purpose computing system environments or configurations. Examples of well known computing systems environments and or configurations that may be suitable for use with the various technologies described herein include but are not limited to personal computers server computers hand held or laptop devices multiprocessor systems microprocessor based systems set top boxes programmable consumer electronics network PCs minicomputers mainframe computers distributed computing environments that include any of the above systems or devices and the like.

The various technologies described herein may be implemented in the general context of computer executable instructions such as program modules being executed by a computer. Generally program modules include routines programs objects components data structures etc. that performs particular tasks or implement particular abstract data types. The various technologies described herein may also be implemented in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network e.g. by hardwired links wireless links or combinations thereof. In a distributed computing environment program modules may be located in both local and remote computer storage media including memory storage devices.

The computing system may include a central processing unit CPU a system memory and a system bus that couples various system components including the system memory to the CPU . Although only one CPU is illustrated in it should be understood that in some implementations the computing system may include more than one CPU. The system bus may be any of several types of bus structures including a memory bus or memory controller a peripheral bus and a local bus using any of a variety of bus architectures. By way of example and not limitation such architectures include Industry Standard Architecture ISA bus Micro Channel Architecture MCA bus Enhanced ISA EISA bus Video Electronics Standards Association VESA local bus and Peripheral Component Interconnect PCI bus also known as Mezzanine bus. The system memory may include a read only memory ROM and a random access memory RAM . A basic input output system BIOS containing the basic routines that help transfer information between elements within the computing system such as during start up may be stored in the ROM .

The computing system may further include a hard disk drive for reading from and writing to a hard disk a magnetic disk drive for reading from and writing to a removable magnetic disk and an optical disk drive for reading from and writing to a removable optical disk such as a CD ROM or other optical media. The hard disk drive the magnetic disk drive and the optical disk drive may be connected to the system bus by a hard disk drive interface a magnetic disk drive interface and an optical drive interface respectively. The drives and their associated computer readable media may provide nonvolatile storage of computer readable instructions data structures program modules and other data for the computing system .

Although the computing system is described herein as having a hard disk a removable magnetic disk and a removable optical disk it should be appreciated by those skilled in the art that the computing system may also include other types of computer readable media that may be accessed by a computer. For example such computer readable media may include computer storage media and communication media. Computer storage media may include volatile and non volatile and removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Computer storage media may further include RAM ROM erasable programmable read only memory EPROM electrically erasable programmable read only memory EEPROM flash memory or other solid state memory technology CD ROM digital versatile disks DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by the computing system . Communication media may embody computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and may include any information delivery media. The term modulated data signal may mean a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media may include wired media such as a wired network or direct wired connection and wireless media such as acoustic RF infrared and other wireless media. Combinations of any of the above may also be included within the scope of computer readable media.

A number of program modules may be stored on the hard disk magnetic disk optical disk ROM or RAM including an operating system one or more application programs a browser application program data and a database system . The operating system may be any suitable operating system that may control the operation of a networked personal or server computer such as Windows XP Mac OS X Unix variants e.g. Linux and BSD and the like. The browser application may be a web browsing software that may be capable of recording the browsing activity of its user. The browser application will be described in more detail with reference to in the paragraphs below.

A user may enter commands and information into the computing system through input devices such as a keyboard and pointing device . Other input devices may include a microphone joystick game pad satellite dish scanner or the like. These and other input devices may be connected to the CPU through a serial port interface coupled to system bus but may be connected by other interfaces such as a parallel port game port or a universal serial bus USB . A monitor or other type of display device may also be connected to system bus via an interface such as a video adapter . In addition to the monitor the computing system may further include other peripheral output devices such as speakers and printers.

Further the computing system may operate in a networked environment using logical connections to one or more remote computers The logical connections may be any connection that is commonplace in offices enterprise wide computer networks intranets and the Internet such as local area network LAN and a wide area network WAN .

When using a LAN networking environment the computing system may be connected to the local network through a network interface or adapter . When used in a WAN networking environment the computing system may include a modem wireless router or other means for establishing communication over a wide area network such as the Internet. The modem which may be internal or external may be connected to the system bus via the serial port interface . In a networked environment program modules depicted relative to the computing system or portions thereof may be stored in a remote memory storage device . The remote memory storage device may include the webpage importance application . In one implementation the webpage importance application may be stored on the hard disk magnetic disk optical disk ROM or RAM . The webpage importance application will be described in more detail with reference to below. It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used.

It should be understood that the various technologies described herein may be implemented in connection with hardware software or a combination of both. Thus various technologies or certain aspects or portions thereof may take the form of program code i.e. instructions embodied in tangible media such as floppy diskettes CD ROMs hard drives or any other machine readable storage medium wherein when the program code is loaded into and executed by a machine such as a computer the machine becomes an apparatus for practicing the various technologies. In the case of program code execution on programmable computers the computing device may include a processor a storage medium readable by the processor including volatile and non volatile memory and or storage elements at least one input device and at least one output device. One or more programs that may implement or utilize the various technologies described herein may use an application programming interface API reusable controls and the like. Such programs may be implemented in a high level procedural or object oriented programming language to communicate with a computer system. However the program s may be implemented in assembly or machine language if desired. In any case the language may be a compiled or interpreted language and combined with hardware implementations.

At step the webpage importance application may collect web browsing data from the browser application of one or more web users. In one implementation the browser application may keep a record of the URL addresses web pages it may have accessed the time at which each URL address may have been accessed and the manner in which the URL address was accessed in a toolbar log. The URL address may have been accessed by a user from a hyperlink on a different webpage or it may have been accessed after a user entered the URL address into the URL address input of the browser application .

In one implementation the webpage importance application may receive a log or record of the web browsing data that occurred on the browser application of one or more users. The webpage importance application may obtain a log from multiple web users in order to create a comprehensive and accurate browsing graph. Prior to receiving the web browsing data from one or more web users the webpage importance application may receive permission to receive the data from each user of the browser application via legal agreements or the like. In one implementation the identity of each user may remain anonymous when obtaining the log of the web browsing data from any web user.

At step the webpage importance application may create a browsing thread from the user browsing behavior data obtained from the one or more browser applications . In one implementation the web browsing data of each individual browser application may be separated into different browsing threads. The browsing thread may include a machine identification number to indicate where the web browsing data may have been obtained from the URL addresses accessed by the browser application the time at which each URL address was accessed and the means in which each URL address was accessed. In one implementation a browsing thread may be created for each machine identification number.

At step the webpage importance application may add a node for each URL address listed in each browsing thread created at step to a browsing graph. In one implementation the browsing graph may initially contain a blank page. A node may be represented on the browsing graph as a circle. In one implementation each URL address may be represented by only one node in the browsing graph.

At step the webpage importance application may add a line or link from a first node to a second node to represent a hyperlink utilized from a first URL address to a second URL address. The webpage importance application may use the browsing thread created at step to determine where the links should be added on the browsing graph . In one implementation if one hyperlink may have been used multiple times to access a URL address it may be represented by only one link in the browsing graph. In this case the webpage importance application may indicate the amount of times in which the URL address may have been accessed by coloring the link that connects to the URL address darker or storing that information in the metadata of the browsing graph file. In one implementation the link may be represented by an arrow that may point from a node representing a first webpage to a node representing a second webpage accessed by a hyperlink on the first webpage.

At step the webpage importance application may store the browsing graph and the time information pertaining to each accessed URL address in a browsing graph file. In one implementation the time information may be stored in the metadata portion of the browsing graph file.

Each user browsing thread may include information pertaining to a user s digital browsing behavior. In one implementation the user may use the browser application to access various URL addresses on the Internet. The information stored in the user browsing thread may include the user identification the URL address the URL access time stamp and the URL access method . In one implementation the browsing thread may list the URL addresses in chronological order according to their respective URL access time stamps . The user identification may be assigned a random number to keep the actual identity of each user anonymous.

The URL address may indicate a URL address that may or may not exist on the Internet. The URL access time stamp may indicate the time in which the URL address was initially accessed or the time in which the URL address was completely loaded on the browser application of the user. The URL access method may include either input or click. Input may refer to a user navigating to a URL address by entering the URL address into the browser application . Click may refer to a user clicking a hyperlink from a webpage that may connect to the URL address .

The browsing thread may be used by the webpage importance application to create the browsing graph as described in . In one implementation the browsing graph may include one or more nodes and one or more arrows . Each node may represent each URL address located in the browsing thread . Each arrow may represent a hyperlink that existed on one webpage that connected to another webpage. The head of the arrow may be directed at the node that represents the destination of the hyperlink and the tail of the arrow may be connected to the node that represents the webpage that contained the hyperlink.

In one implementation the information contained in each browsing thread obtained by the webpage importance application may be represented on a single browsing graph . The browsing graph may then more precisely represent a user s random URL address access process and thus it may be more useful in calculating webpage importance than other methods. The browsing graph may be capable of storing billions of web users browsing behavior patterns and these patterns may be interpreted as an implicit voting on webpage importance by each of the web users.

At step the webpage importance application may receive a browsing graph file that may have been created as described in . The browsing graph file may contain the browsing graph and the corresponding time data of the browsing graph .

At step the webpage importance application may calculate a time in which each webpage represented by a node in the browsing graph was being accessed. The time in which a webpage was being accessed may refer to the time in which a user navigates to a webpage and remains on that webpage. The time in which each webpage was being accessed may be determined using the time data contained in the browsing graph file. In one implementation the webpage importance application may obtain the time at which a webpage was accessed from the browsing graph file and subtract the time at which the previous webpage was accessed. The difference between these two times may indicate the time in which that particular webpage was being accessed. In one implementation the time in which a webpage was being accessed may be referred to as a webpage staying time.

At step the webpage importance application may set a unit time or unit of time to describe an amount of time in which one or more web users may have stayed on a webpage. The unit time may be determined to be a minimum amount of time in which a webpage was being accessed. Each node may correspond to the unit time in which one or more web users were accessing the webpage represented by the node . For example if the webpage importance application sets the unit time to be one second each node on the browsing graph may represent one second of the time in which a web user was accessing the webpage.

At step the webpage importance application may add one or more virtual nodes to the browsing graph to accurately reflect the time in which the webpage was being accessed by each web user. The virtual nodes may correspond to a specific node such that they may both represent the same webpage and the same unit time in which a webpage was being accessed. Therefore the virtual node and the node may be illustrated on the graph using similar icons. The webpage importance application may then determine a number of virtual nodes that may need to be added to accurately represent the total time that one or more web users may have been accessing a webpage represented by a specific node. For example if the webpage importance application established that the unit of time was one second at step each node or virtual node may represent one second of the time in which a web user was accessing that particular webpage. If the time data from the browsing graph file indicated that one or more web users were accessing webpage A for a total of 3 seconds the webpage importance application may add two virtual nodes in addition to the node to indicate that the web users were accessing webpage A for three seconds.

After adding the virtual nodes the webpage importance application may add a link from the node to the first virtual node that may have been created to represent the same webpage of the node . The webpage importance application may also add a link from the first virtual node to a second virtual node from the second virtual node to a third virtual node and so on until each virtual node is connected to by one link. The virtual nodes and links may represent a web user s behavior such that he may stay on a webpage for a unit time and then click a hyperlink that may connect the same webpage. In one implementation the link may be represented on the browsing graph as a line or an arrow. An arrow may be directed from the node to a virtual node to represent the time in which a web user was accessing the webpage.

At step the webpage importance application may send the browsing graph with virtual nodes to a link analysis algorithm. In one implementation the link analysis algorithm may be the PageRank algorithm. The PageRank algorithm may be used to determine the rank of each webpage based on the number of links from which each webpage may be accessed. Since the number of links may also correlate to the time in which a web user stayed on a particular webpage the link analysis algorithm may now account for the time in which a web user stays on a webpage in its calculations. The link analysis algorithm may calculate the importance for each node and virtual node in the browsing graph .

At step the webpage importance application may aggregate the importance value results for each virtual node that may represent the same webpage with the importance value of its corresponding node. As a result the link analysis algorithm may account for the time in which a web user stayed on each webpage by evaluating the links contained in the browsing graph.

The browsing graph may have one or more virtual nodes to represent a web user s staying time on the webpage. In addition to the virtual nodes the browsing graph with virtual nodes may have one or more virtual links connected to the node or another virtual node . The node may correspond to the node as described in . The browsing graph will be described in more detail with reference to below.

At step the webpage importance application may receive a browsing graph file. The browsing graph file may contain the browsing graph and time data for each accessed webpage.

At step the webpage importance application may calculate a time in which each webpage represented by a node in the browsing graph was being accessed. In one implementation the webpage importance application may obtain the time at which a webpage was accessed from the browsing graph file and subtract the time at which the webpage that was previously accessed. The difference between these two times may be used as the time in which a webpage was being accessed.

At step the webpage importance application may set a unit time to describe a time in which a webpage was being accessed by one or more web users. The unit time may be determined using a similar process as described in step on .

At step the webpage importance application may add one or more self loops to the nodes on the browsing graph to represent the time in which a webpage was being accessed by one or more web users. The self loop may be represented by an arrow that starts and ends at the same node . The webpage importance application may first determine the number of self loops it may need to add for each node . Since each node may represent the unit time defined in step the number of self loops that may need to be added may relate to the time in which one or more web users stayed on the webpage represented by the node . For example if a unit of time was set at one second and a web user remained on webpage A for 3 seconds the webpage importance application may add two self loops to indicate that the user was on webpage A for three seconds. Since each node may indicate the unit time specified at step the addition of self loops may be considered to represent a web user clicking a hyperlink on the webpage represented by the node to the same webpage. Therefore the time in which a web user may have stayed on a webpage may be represented by the number of times the node may have been accessed via a hyperlink self loop or by entering the URL address into the browser application . After determining the number of self loops may be required the webpage importance application may the required number of self loops to one or more nodes on the browsing graph to accurately represent the time in which one or more web users may have been accessing a webpage.

At step the webpage importance application may send the altered browsing graph with self loops to a webpage importance algorithm. In one implementation the webpage importance algorithm may be a link analysis algorithm. The link analysis algorithm may determine the rank of each webpage based on the number of links in which each webpage may be accessed from. In this implementation the link analysis algorithm may calculate the importance for each node in the altered browsing graph with self loops. The importance of each node may correspond to the importance of the webpage represented by the node .

The browsing graph with self loops may have one or more self loops to be used to indicate a web user s staying time on the webpage. The self loop may start and end at the same node . The node may correspond to the node as described in .

Although the subject matter has been described in language specific to structural features and or methodological acts it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather the specific features and acts described above are disclosed as example forms of implementing the claims.

