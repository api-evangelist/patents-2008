---

title: Method and system for desktop tagging of a web page
abstract: A system and method are provided for identifying and extracting a subset of data from a selected web page of a web site for display on a client machine. One or more instructions are applied to the selected web page for identifying and displaying a candidate subset of data on the client machine (i.e. a wireless mobile device). The instructions are applied in accordance with one or more pre-defined criteria defining one or more types of the subset of data, and one or more pre-defined confidence intervals defining a pattern for locating the subset of data in accordance with said one or more types on the selected web page. An interface may further be provided to allow the amendment or confirmation of the candidate subset of data.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08572105&OS=08572105&RS=08572105
owner: BlackBerry Limited
number: 08572105
owner_city: Waterloo
owner_country: CA
publication_date: 20080512
---
This application claims the benefit of the prior filing of U.S. Provisional Patent Application Ser. No. 60 924 503 filed May 17 2007 the disclosure of which is incorporated herein by reference.

A portion of the disclosure of this patent document contains material which is subject to copyright protection. The copyright owner has no objection to the facsimile reproduction by anyone of the patent document or patent disclosure as it appears in the Patent and Trademark Office patent file or records but otherwise reserves all copyright rights.

The present application relates generally to telecommunications and more particularly to a system and method for desktop tagging of a web page.

Web sites host and provide information using web pages that are communicated electronically via a telecommunications network. Accessing this information by some client computing devices can be challenging. Computing devices are becoming smaller and increasingly utilize wireless connectivity. Examples of such computing devices include portable computing devices that include wireless network browsing capability as well as telephony and personal information management capabilities.

The smaller size of most wireless mobile client devices limits their display capabilities. Furthermore the wireless connections to such devices typically have less or more expensive bandwidth than corresponding wired connections. The Wireless Application Protocol WAP was designed to address such issues but WAP can still provide a very unsatisfactory experience or even completely ineffective experience particularly where the small client device needs to effect a connection with web sites that host web pages that are directed to traditional full desktop browsers.

In accordance with one aspect there is provided a method and system of identifying a subset of data from a selected web page of a web site for display on a client machine. Instructions are applied to the selected web page for identifying and displaying a candidate subset of data on the client machine. The instructions applied are defined in accordance with one or more pre defined criteria defining one or more types of the subset of data and one or more pre defined confidence intervals defining a pattern for locating the subset of data in accordance with said one or more types on the selected web page.

The pre defined criteria may refer to the types of data for defining an item such as an image field a description field and a price field. In one aspect the subset of data includes an item such as an e commerce item for purchase and its corresponding characterizing information such as image description and price.

In one aspect an interface is provided to confirm or amend the candidate subset of data wherein the candidate subset of data comprises at least one type of the subset of data and at least one value corresponding to each type for an item on the web page. In another aspect the candidate subset of data as confirmed or amended may be stored to define a rich bookmark the rich bookmark comprising an address of the web page and the stored candidate subset of data for subsequent retrieval and display.

In another aspect a response is received via the interface amending the candidate subset of data and in accordance with the response at least one of the pre defined confidence intervals or the pre defined criteria is updated.

In another aspect the pre defined confidence intervals are updated in response to receiving at least a pre determined number of amendments to the candidate subset of data having a same type i.e. belonging to an same type of field .

In another aspect the client machine is a wireless mobile device requesting the selected web page and the interface is presented on the wireless mobile device to allow the amend or confirm of the candidate subset of data the amend or confirm defining the subsequent display of the candidate subset of data when requesting another web page.

In another aspect the web site comprises an e commerce web site and identifying a subset of data comprises identifying at least one e commerce item for purchase from at least some of the web pages of the web site to conduct an e commerce transaction on the wireless mobile device.

In another aspect each of the pre defined confidence intervals is based on information selected from the group consisting of an estimated size estimated relative location on the web page estimated style and estimated identifier associated with each type of the subset of data.

In another aspect identifying the candidate subset of data further comprises determining a plurality of probable candidate data matching the pre defined criteria and at least one of the confidence intervals defining a weight for each of the pre defined confidence intervals to define a relative importance thereof and ranking the plurality of probable candidate data based upon the weighting to determine at least one candidate data from the plurality of probable candidate data.

In another aspect the pre defined criteria are provided in accordance with a genre of said web site said genre selected from the group of genres comprising e commerce news sports and weather.

In another aspect the one or more types of the subset of data is selected from the group consisting of an image a description a price a title and text data for characterizing the subset of data.

In yet another aspect there is provided a computer program product storing one or more computer readable instructions for identifying a subset of data from a selected web page of a web site for display on a client machine. The instructions when executed by a computer processor configure the processor for applying instructions to the selected web page for identifying and displaying a candidate subset of data on the client machine. The instructions are applied in accordance with one or more pre defined criteria defining one or more types of the subset of data and one or more pre defined confidence intervals defining a pattern for locating the subset of data in accordance with said one or more types on the selected web page.

Referring now to there is illustrated a system for content navigation via a telecommunications network. In a present embodiment system comprises a plurality of client computing devices in the form of client machines A and B collectively a web site server hosting a web site and a gateway and schema server . Devices are respectively coupled to communicate with gateway and schema server to obtain web pages e.g. transcoded from web site .

In the present embodiment a web server serves web pages e.g. which comprise web site . The web pages are defined from a plurality of web page family templates A D collectively and web page content described further herein below from data store . For ease within the present embodiment only a single web site is shown coupled via gateway and schema server however in another embodiment a plurality of different web sites may be so coupled. In the present embodiment of system gateway and schema server is coupled to a schema repository from which to obtain a signature schema for a particular web site. Signature schema documents e.g. provide instructions and data with which an engine of server can extract data from web pages e.g. and transcode same to a target format to provide transcoded web page data e.g. and to the respective requesting client machines A and B as described more fully below. Gateway and schema server may also be coupled to a database for retrieving storing data extracted from web sites in accordance with its operations. The database may be a relational database storing extracted data from web sites in relation to the defined signature schema. The stored data can be accessed by a Structured Query Language SQL . Signature schemas for respective web sites may be defined e.g. coded using a computing device as described herein below.

Representative client machines include any type of computing or electronic device that can be used to communicate and interact with content available via web sites. Each of the client machines may be operated by a respective user U not shown . Interaction with a particular user includes presenting information on a client machine e.g. by rendering on a display screen as well as receiving input at a client machine e.g. such as via a keyboard for transmitting to a web site . In the present embodiment client machine A comprises a mobile electronic device with the combined functionality of a personal digital assistant cell phone email paging device and a web browser. Such a mobile electronic device may comprise a keyboard or other input device s a display screen a speaker and other output device s e.g. LEDs and a chassis for housing such components. The chassis may further house one or more central processing units volatile memory e.g. random access memory persistent memory e.g. Flash read only memory and network interfaces to allow client machine A to communicate over the telecommunication network.

Referring now to a schematic block diagram shows client machine A computing device in greater detail. As will be understood by a person skilled in the art that client machine B may include similar architectural components as those illustrated in . That is client machine B may include one or more central processing units volatile memory persistent memory and network interfaces. The network interfaces allow the client machine B to communicate over a telecommunication network including the World Wide Web to connect to other client machines and to other computing devices as will be needed. As well the client machine B may include an input device such as a keyboard and a mouse a display screen and output devices including a speaker and one or more LEDs.

It should be emphasized that the structure in is purely exemplary and contemplates a device that may be used for both wireless voice e.g. telephony and wireless data e.g. email web browsing text communications. Client machine A computing device includes a plurality of input devices which in a present embodiment includes a keyboard and typically additional input buttons collectively an optional pointing device e.g. a trackball or trackwheel and a microphone . Other input devices such as a touch screen and camera lens are also contemplated. Input from keyboard buttons pointing device and microphone may be received at a processor . Processor may be further operatively coupled with a non volatile storage unit e.g. read only memory ROM Erasable Electronic Programmable Read Only Memory EEPROM or Flash Memory and a volatile storage unit e.g. random access memory RAM speaker display screen and one or more lights LEDs . Processor may be operatively coupled for network communications via a subsystem . Wireless communications are effective via at least one radio e.g. such as for Wi Fi or cellular wireless communications. Client machine A also may be configured for wired communications such as via a USB or other port and for short range wireless communications such as via a Bluetooth radio all not shown .

Programming instructions that implement the functional teachings of client machine A as described herein are typically maintained persistently in non volatile storage unit and used by processor which makes appropriate utilization of volatile storage during the execution of such programming instructions. Of particular note is that non volatile storage unit persistently maintains a web browser application and in the present embodiment a native menu application each of which can be executed on processor making use of volatile storage as appropriate. An operating system and various other applications not shown are maintained in non volatile storage unit according to the desired configuration and functioning of client machine A one specific non limiting example of which is a contact manager application also known as an address book not shown which stores a list of contacts addresses and phone numbers of interest to user U and allows user U to view update and delete those contacts as well as providing user U an option to initiate telecommunications e.g. telephone email instant message IM short message service SMS directly from that contact manager application.

Native menu application may be configured to provide menu choices to user U according to the particular application or other context that is being accessed. By way of example while user U is activating the contact manager application user U can activate menu application to access a plurality of menu choices available that are respective to contact manager application . For example menu choices may include options to invoke other applications e.g. a mapping application to map a contact s address or communication functions e.g. call SMS IM email etc. on the client machine A for a particular contact. Menu application may be associated to a particular input button e.g. one of buttons and invoked to provide a contextual menu comprised of a plurality of menu choices that are reflective of the context in which the button was selected. Note that the options in a contextual menu are stored within non volatile storage as being specifically associated with a respective application. Menu application may be therefore configured to generate a plurality of different contextual menus that are reflective of the particular context in which the menu application is invoked. For example in an email application where an email is being composed invoking menu application would generate a contextual menu that included the options of sending the email cancelling the email adding addresses to the email adding attachments and the like. The contents for such a contextual menu would also be maintained in non volatile storage . Other examples of contextual menus will occur to those of ordinary skill in the art.

As noted gateway and schema server applies a signature schema to transcode a web page and provide transcoded data to a requesting client machine . Signature schema may be configured to transcode navigational features of a web site to provide menu options to menu application for use when browsing the web site with browser . The signature schema may further transcode web site content for presentation by the browser .

Returning now to web server and gateway and schema server which can if desired be implemented on a single server can be based on any commonly available server environments or platforms including a module that houses one or more central processing units volatile memory e.g. random access memory persistent memory e.g. hard disk devices and network interfaces to allow servers and to communicate over the telecommunications network. Web server hosts software applications comprising instructions and data for generating and serving web pages dynamically from the template families and current informational content therefore from data store . Load balancing security firewall billing account and other applications may also be present.

Gateway and schema server hosts software applications comprising instructions and data for proxying requests and responses between the client machines and web site . In addition to software for maintaining HTTP communications performing requests maintaining sessions handling cookies etc. engine may be implemented in software to apply the signature schemas to web pages from web sites. There may be provided an interpreter that interprets the signature schema document and applies the actions against the web page code as an ASCII plain text document to extract the subset of data to produce a result set. A renderer may be provided to express the subset of data result set i.e. transcode to a target format such as cHTML Compact HTML for a mobile device browser for transmitting to the client machines also in accordance with the signature schema. A cache feature may also be provided for storing retrieving data from database . Caching may comprise storing web pages from the web site as well as extracted data from which to build a relational database of object and elements and their relationships. The gateway and schema server or a separate server not shown may host a web site engine to provide content extracted from the relational database e.g. stored web site data to the client machines .

Devices schema server and web site are coupled via a telecommunication network not shown typically comprising a plurality of interconnected networks that may include wired and at least for device A wireless networks. It should now be understood that the nature of the network is not particularly limited and is in general based on any combination of architectures that will support interactions between client machines and servers and . In a present embodiment the network includes the Internet as well as appropriate gateways and backhauls.

More specifically in the present embodiment a wireless network for client machine A may be based on core mobile network infrastructure e.g. Global System for Mobile communications GSM Code Division Multiple Access CDMA Enhanced Data rates for GSM Evolution EDGE Evolution Data Optimized EV DO High Speed Downlink Packet Access HSPDA Universal Mobile Telecommunications System UMTS etc. or on wireless local area network WLAN infrastructures such as the Institute for Electrical and Electronic Engineers IEEE 802.11 Standard and its variants or Bluetooth or the like or hybrids thereof. In the present embodiment of system it is contemplated that client machine B may be another type of client machine such as a PC desktop or laptop or server configured to include a full desktop computer or as a thin client . Typically such have larger display monitors screens than portable machines like A. A wired network for system and device B can be based on a T1 T3 or any other suitable wired connection.

As previously stated in relation to each of the client machines is configured to interact with content available over the network including web pages on web site . In a present embodiment client machines A and B may navigate for content using a browser application e.g. . As will be explained further below on client machine A browser application may be a mini browser in the sense that it may be configured to render web pages on the relatively small display of client machine A. Often during such rendering those pages are presented in a format that may be different from how those pages are rendered on a traditional desktop browser application e.g. browser of client machine B . Mini browsers typically attempt to convey substantially the same information as if the web pages had been rendered on a full browser such as Internet Explorer Safari or Firefox on a traditional desktop or laptop computer like client machine B.

The engine for example in parallel or without waiting for a response from server makes a request to the signature repository for the signature schema document for the web site which request may use the domain in the URL as an identifier for obtaining the document . The engine receives the schema. The engine does not render the web page per se but instead uses the instructions in the signature schema document to extract the subset of data from the web page for transcoding. In the present embodiment signature schema is configured to transcode the web page in accordance with the specific characteristics of the requesting client device A having knowledge of display capabilities such as screen size resolution and other parameters useful in determining the way in which the transcoded data is to be displayed on the machine A.

Optionally the web page or extracted data or both can be stored in database . Engine transmits the transcoded data that has been extracted and transcoded to a target format from web page in accordance with the schema to the requesting client machine A. As noted above transcoded data may comprise transcoded navigational data for menu application and informational content data e.g. a list of products and related information from a web page for displaying by browser application .

Signature schemas are pre defined documents and may be eXtensible Markup Language XML documents utilizing an SQL like query language to incorporate instructions and data with which to intelligently extract the data from web pages which web pages are typically coded in HTML DHTML XHTML XML RSS JavaScript etc . This extracted data may be transcoded and provided to client machines or used to dynamically generate a relational database e.g. or both. Each signature schema incorporates an understanding of a particular web site s data including relationships among the various data e.g. among its primary informational content found in the body of its web pages as well as among such content and associated navigational data e.g. web page links that govern the data in the page . As described further herein below prior knowledge of the web page code including specific identifiers tags and text i.e. strings used within the code sometimes referred to as signatures herein may be used to define instructions to identify portions of the code of interest and to extract specific data.

As a further feature transcoding may be configured to provide continuity of browsing transactional session experience enabling a user to switch client machines e.g. starting with client machine A and switching to machine B or vice versa . A user may be enabled to start an interaction with a web site and have displayed data published content and navigational data on the client machine A. The browsing session may then be continued on a second client machine B while retaining the transcoding as provided to the first client machine. For example a user on a desktop can continue to browse the published content and navigational data of the web site as previously experienced on a mobile device using only a portion of the desktop screen for example for data display.

In accordance with the present embodiment a signature schema document may be defined for all the pages of a particular web site. Large data driven web sites e.g. don t maintain thousands of individual web pages per se. The sites typically adopt a few page family templates and dynamically populate these with pertinent content from database comprising information e.g. weather stock data news sports shopping product data patent data trade mark data etc. as applicable when a client requests a particular page. Each template represents a family of pages having objects and attributes. Below are representative example page family templates and their objects and attributes for a web site offering news and an e commerce web site offering products for sale electronically 

Each family of pages the family template can be identified by a signature or unique set of one or more features that automatically identifies a given page on a web site as part of the family and differentiates that family from another family of pages. Similarly each object and attribute field of interest can be identified with its respective unique signature within a family of pages. A signature schema document typically comprise numerous pieces of information commands for example information that instructs the engine for 

identifying and extracting a subset of data i.e. desired objects and attributes for each page family 

A signature schema document may also be configured to enable special functionality for the target web site including searching logging in a user purchasing items etc.

In accordance with a present embodiment the structure and syntax of a representative signature schema document for a representative e commerce site eshop.ca is shown and described. Engine may be configured to receive web page code comprising text data and search through the text in accordance with the schema document instructions that provide SQL query like language instructions. Engine maintains a pointer within the text as it moves through the web page code performing various actions as described below in accordance with the schema instructions. Table 1 illustrates a snippet of a representative signature schema 

In the XML code snippet of Table 1 instructions at line 4 are for verifying that the web page under consideration and the signature schema relate to the same web site domain eshop.ca. Instructions at lines 9 15 are for determining the particular page family to which the web page under consideration belongs. A respective signature that defines the particular page family has been previously identified for use to distinguish the page. The engine processes the tag by registering the identification strings for each page family. When a web page is obtained by the engine as input the engine may be able to identify the page family by its unique string ref and the command provides the related tag within the signature schema document where further instructions for the particular web pages are found 

For example at line 10 the instructions identify a web page using the alternative signatures Compare products or Sort Products . Web pages with these strings are of the same family type. The instructions at line 10 provide a reference tag to further instructions for this family providing a link to instructions for the list elements page family with and ID of mylist1 see lines 16 17 . Similarly the other lookup instructions provide references to the specific instructions within the signature schema document for handling a web page of each web page family. Representative instructions for some of the web page families are provided in Table 1 for example at lines 16 17 and 18 29 with others omitted for brevity.

With reference to the extraction instructions for one of the web page families i.e. item elements id myitem1 at lines 18 29 the instruction at line 20 advances the scan pointer within the text file of the web page code to a beginning limit of a region of interest indicated by a signature reference. This establishes an upper limit for review within the text file. Though not shown in this table an end limit may be defined as well See Table 4 . Further such instructions at lines 22 28 may comprise commands to locate subset of data using signatures such as string identifiers that uniquely identify the data within the region of interest. In the present example the instructions locate and extract a plurality of elements namely product image title price sale price and description for a product of the item web page family. For example instructions at line 23 extract a string in between the first lt img src quot and quot that appears after next appearance of largeimageref . The string returned is the path relative URL at web site eshop.ca to the product image. By advancing a search scan pointer within the web code to a particular location references before that location can be skipped when searching. Any prior instances of a signature string such as largeimageref may be ignored. In this way otherwise ambiguous signature references can be avoided.

The example in Table 1 shows at least some of the instructions e.g. lines 23 27 including one or more directional references relative to the signatures to locate and extract the subset of data. For example directional references such as before or after command the engine to extract the data that is in a relative position in the web page before or after the signature string i.e. ref . Moreover such instructions may further include at least one of a start reference or an end reference further pinpointing the location of the data in accordance with that direction. Additional directional reference information is discussed herein with reference to code snippets in other Tables and the discussion of an embodiment of signature transcoding engine syntax presented below.

The example within Table 1 demonstrates the extraction of data and the establishment of relationships between objects and elements within a same page of a web site. However signature schema documents may further capture relevant attributes of an object across pages. For example a user of client machine A may click through a number of web pages in eshop.ca to get to a specific product page e.g. Department Product Category Product Sub Category Specific Product such as TV Video 19 21 TVs LCD TVs BrandX Product. The navigational hierarchy representing a categorization may be captured and associated to the extracted objects and there elements.

For brevity certain instructions were omitted from Table 1. Tables 2 4 provide representative instructions for further web page families for e shop.ca that may be read with Table 1. Table 2 below provides representative instructions e.g. for lines 16 and 17 of Table 1 including instructions for a web page family related to a list of items products for sale. Whereas instructions at lines 22 28 provided product data extraction instructions for a web page family showing a single item i.e. product the instructions of Table 2 provide additional instructions that repeat product data extractions for each product in the list.

If the engine identifies that the page is of the mylist1 family the engine determines the location in the signature schema document that contains the signature for the objects and elements of that family and applies the instructions therefor. A product list at e shop.ca may span multiple web pages. Instructions at lines 2 6 of Table 2 find the number of pages and generate the links for each of the pages. Instructions at lines 7 9 action tag advance the search scan pointer to the region of web page code that may be of interest i.e. in this case the start of the list . In this way a local signature reference can be used and any earlier ambiguous references skipped. Skipping to the local region of interest may also make the specification of the signature reference less complicated.

Taking advantage of inherent repeated patterns in the web page code instructions at lines 10 16 elements tag of Table 2 provide product data extraction instructions that may be repeated for each product in the list. The engine may be provided with commands to scan for each data element of interest using a signature reference e.g. ref an action one or more positional instruction s to further identify the data within the text of the web page code and any additional text data manipulation instructions to extract the data e.g. to remove HTML formatting characters or add characters . The instruction at line 15 moves the scan pointer to the end of the object in this example a product in a list of products to ready the instructions for application against the next object product in the list.

If the engine has identified that the page is of the mysearch1 family the engine applies the portion of the signature schema document that contains the signature for the objects and elements of that family shown above in Table 3.

 . . . Contains any web page specific manual overrides such as excluding certain menu items customization modification of a menu that may be desired. In this example as per line 3 a value of form variable keyword will be posted to http www.eshop.ca search search.asp . . . . Manages paging for the search pages. . . . Instruct the engine to move the scan pointer to the string bg compare hero line 12 of Table 3 and start looking for elements from there. . . . Contains lookup instructions for each object element as previously described.

If the engine has identified that it is looking for a menu on a page that contains the menu style of the mymenu1 family the engine applies the portion of the signature schema document that contains the signature for the objects and elements of that family shown above in Table 4.

 . . . Contains any page specific manual overrides such as exclude list customization modification personalization etc. In this example as per line 3 any result that matches Site Index External Link are excluded but partial matches are also possible by using wild card strings. . . . Lines 6 7 of Table 4 sets the start and end limits to instruct the engine where to look for menu items. . . . Contains lookup instructions for each object element as previously described. In this example lines 10 and 11 of Table 4 an element in mymenu1 each individual menu entry of web page contains link and title as its properties. Line 12 instructs the engine to move the pointer to lt li gt to get ready to loop through and extract the next menu item with the same elements taking advantage of the repeated patterns within the text of the web page code.

Though the example described relates to extracting informational content for an e commerce oriented site no limitation should be applied. Similar instructions may be defined for other types of sites for pages which permit a user to input information and for navigational data extraction.

Signature schema document may further comprise transcoding instructions not shown for use by engine to express the extracted subset of data in a target format e.g. a format of HTML XML script etc. for use by the requesting client machine . For example the transcoding instructions may define a web page for displaying the extracted data in browser application that is suitable for display on the client device . The formatting rules can be system and or user defined and can include parameters such as but not limited to object positioning object colour object size object shape object font image characteristics background style and navigational item display e.g. in a menu as described above or for display with the content in the generated page on the client screen. Browser application e.g. of machine A may be configured for using a markup language e.g. cHTML or other code format that is not identical to the code provided by web page . Alternatively transcoding instructions may be defined to express the extracted subset of data in XML or another code format such as for use by a different client application or plug in to a client application such as menu application or another application not shown on client machine .

Signature schema documents may be prepared i.e. coded using a computing device such as computing device . Computing device may be any suitable desktop or laptop device capable of coding documents which may be but need not be XML type documents and may be configured to automate or semi automate coding of such documents.

Computing device may be coupled to web site to retrieve web pages from the site for reviewing to prepare the custom signature schema document for the site. Computing device may be configured to automatically review the web page code and apply heuristics or other techniques e.g. spatial analysis to determine probable content of interest i.e. subset of data and generate code to extract the subset of data. For example primary content of interest tends to be located toward the centre of the web page. In another embodiment the computing device may facilitate a user coding signature schema to manually assist with the analysis of the web page and identification of subset of data and the generation of the instructions. Computing device may be further coupled to repository to provide e.g. up load or publish coded signature schema documents for use by server .

Referring to in one embodiment the computing device of system comprises an automatic signature generation tool for preparing a custom signature schema document for web pages of a web site. Computing device may further comprise a desktop tagging tool having a graphical user interface which may be adapted to cooperate with a web browser application for assisting a user to identify the subset of data e.g. product title image description and price data in a web browser window . In a present embodiment user interface may comprise a portion of the window while the remaining portion displays the rendered web page A for which a signature schema is to be constructed. User interface may present a form showing the subset of data fields and values therefor where candidate data values from data of the web page A populates the form . User interface may facilitate confirming or amend the candidate data values. For example data replacing the candidate data may be selected and captured not shown from the rendered web page A through drag and drop or highlighting copying user gestures.

User interface may be predefined to present candidate subset of data i.e. for particular subset of data types that are expected to be found on web pages for such web sites of a similar genre . That is a user interface for an e commerce web site selling products may be defined to present product title image price etc. If a particular candidate value i.e. as presented on form was incorrect and not representing correct subset of data from the web page A for example product image A title B etc. such may be selected and dropped or copied into form of interface . Optionally the interface may permit the user to add data types fields and field values to the presented data. In association with these actions tool examines the associated HTML source code tags of the rendered web page for capturing this data. Desktop tagging may be useful to assist with the identification of the subset of data within the web page code so that signatures therefor within the web page code of similar pages may be determined for defining the signature schema documents.

Although the desktop tagging tool and the automatic signature generation tool are described in relation to computing device it will be understood that any one of the client machines may be configured to comprise the tools and . Further it will be understood that the exemplary operation of the automatic signature tool may be implemented similarly on the client machines . Similarly the flow of interactions may apply similarly for one or both of the computing device or the client machine .

Although signature schema documents may be manually coded these activities may be time consuming and subject to human error. Therefore by providing an automatic signature tool to automate coding of signature schema transcoded web pages e.g. and thus transcoded web sites may be readied for use faster and more reliably.

Referring to shown are exemplary operations of the automatic signature generation tool . A detailed example of two sample web pages used to define a signature schema will be presented below. At the automatic signature generation tool receives an input identifying the subset of data that is to be located and extracted that is for which signatures and instructions are desired. Tool receives an input identifying a set of fields and corresponding field values for extraction from at least two sample web pages of a web page family. The fields and field values have also been referred to as elements herein. That is the fields may refer to the categories or attributes by which an object such as an item for sale may be defined. For example a product object such as a camera may have the following fields image title price description. The values for each of the fields related to the camera may be referred to as field values. The field value for the title field may include BrandX 7.2 MP Digital Camera .

The input identifying the fields and field values for extraction as defined in may be provided by a manual review of the web page to identify desired fields e.g. locating the desired image within object tags of a web page and to indicate the content type of various tags in the web page e.g. navigation title price image item description etc. . Alternatively the input fields and field values of step may be semi automated using the desktop tagging tool to highlight portions on the web page and therefore visually select which content data corresponds to what meaning e.g. to select the elements on a page linked to a field . Further alternately the desktop tagging tool may be used to automatically populate fields and estimated values for the fields and to allow a user to confirm correct estimated fields e.g. by using heuristics or other rules automatically applied in combination with pre defined locations of fields e.g. confidence intervals to web pages to identify likely subset of data provided by tagging tool or other module not shown .

At each identified field and corresponding field value is located within object tags of each of the at least two sample web pages. For example if for the first sample web page the input received identifies an image field having the value product image.gif then this value is first located within an object tag of the first web page. For example the object tag may be and it is the second image object tag e.g. a second instance of the 

At the automatic signature generation tool compares the object tags of identical fields e.g. image field between the two sample web pages to identify a commonality between the object tags for the identical fields such as common location string identifiers attribute type and other patterns i.e. a pattern comprising characters that describe a set of strings that can uniquely identify a field value within the plain text ASCII web page code. A pattern may include string1 string2 where represent 0 or more characters between the characters of string1 and string 2 .

In the above example the commonality between the two identified object tags may be that the object tag was the second instance of the img attribute within the code of each web page that the object for the two sample web pages starts with src and that ends the string that provides the field value for each object. For example the object tag of the first web page provided the string product image.gif . Further the object tags corresponding to each web page and having the identical image field type may be identified by the attribute 

At automatic signature generation tool uses the commonality between object tags of identical fields of the two sample web pages to define instructions to locate and extract the subset of data which instructions comprise a portion of the signature schema for web pages of the same family type. Operations may be repeated for each of the identified fields and field values elements to determine the commonality and patterns between the two sample web pages in turn defining signatures and instructions with which to define at least a portion of signature schema . Further operations may be repeated for other web pages of other family types in the web site to generate the instructions to code other respective portions of schema .

An example of the operations and will now be described with reference to two illustrative sample web pages and their illustrative HTML code in Table 6 . As described earlier pre identified fields and field values indicating the subset of data to be located and extracted from the web page code for this web page family are provided Table 5 for each of the sample web pages for operations . As also described the pre defined fields may either be identified manually by the user or using the desktop tagging tool including estimated locations of the fields to generate the desired fields and field values.

As noted automatic signature generation tool repeats operations for each of the input fields e.g. image price title description to define a commonality between the web page code e.g. tags etc. used to describe each of the respective fields and thereby define the signature schema for that field.

First the automatic signature generation tool examines the web page code of Item1 for the identified image field . Tool may initially identify src as an attribute corresponding to the image field and scan the source HTML document of the Item1 web page for src product image.gif . It does find a match as it ought to since the field was previously selected from this code and the location thereof. It then scans item2 but no match is found in item2. Next the automatic signature generation tool looks at 

From Item1 the object Product title is selected by the automatic signature generation tool based on the identified fields to review. Tool identifies that it is a text node within the code and looks to its parent to identify uniqueness. There are no attributes for the parent . Next the automatic signature generation tool looks at 

From Item1 the object 79.99 is selected by the automatic signature generation tool . There are no attributes to be checked for this element. Next the element looks at 

From Item1 the object 99.99 is selected by the automatic signature generation tool . There are no attributes to be checked for this element. Next the signature generation tool looks at 

Step 5 Identify the Description and the Text Value for the Description Field for Each Sample Web Page

From Item1 the next identified field for automatic signature generation tool is object provides a description for Sample title made by Sample Manufacturer . This object represents the pre identified Description field and field value of Item1. There are no attributes to be checked for this object. Next the signature generation tool looks at 

Accordingly as illustrated in Step 5 of the example above in one embodiment the automatic signature generation tool examines the HTML document or other format of web page and constructs a programmatic data structure to model a hierarchy of the tags. The resulting structure may be a tree which defines the parent siblings and children of each object. The operations may identify the key objects that contain the data required for the signature schema document . Once a particular object is identified as being a desired data field i.e. is one of the fields in Table 5 the uniqueness of the object may be identified by examining its properties for example class style id within the structure. If the properties of the object are not unique then the task to identify the uniqueness for the object would expand to its parent siblings and children. For example if the object is a text node of the tree or other hierarchical structure the object may use the properties of its parent to assist with the identification of is uniqueness for expression as a signature. The operations may expand in all directions uniformly i.e. examine parent then previous sibling then next sibling then first child . The properties of each of these items may also be merged with the desired object to build out the uniqueness. This process would then be repeated on the parent then the previous sibling etc until a unique identifier was found. Once a unique identifier was found an expression would be created for the signature.

Accordingly in view of the above the automatic signature generation tool provided by the computing device provides the signature schema for a new web page family using at least two sample web pages. As illustrated in steps and the tool compares two or more delimiters pertaining to a common schema of the definition of the pages from each of the sample web pages in order to identify common uses of the delimiters and their contents . Once identified as a match the corresponding object for example is placed in the hierarchical structure or other ordered list etc. for defining the signature schema .

It is recognized that the hierarchy can link entities either directly or indirectly and either vertically or horizontally. The only direct links in a hierarchy insofar as they are hierarchical can be to the entities immediate superior or to the entities subordinates although a system that is largely hierarchical can also incorporate other organizational patterns. Indirect hierarchical links can extend vertically upwards or downwards via multiple links in the same direction. Traveling up the hierarchy to find a common direct or indirect superior and then down again can nevertheless horizontally link all parts of the hierarchy which are not vertically linked to one another. Further the structure may also be a list implemented using arrays or linked indexed lists of some sort. The structure may have certain properties associated with arrays and linked lists.

Further it is recognized that the structure would be represented in the signature file as the entries or instructions as noted above. It is recognized that a user of the device could manually amend or otherwise review the automatically generated signature file as desired.

It will be apparent to a person of ordinary skill in the art that as a web site may be re designed or otherwise changed such that the code of one or more web page families may be changed or a family added an existing signature schema may require re coding to account for the change addition as applicable.

Referring again to the desktop tagging tool allows assisted recognition of web page contents to identify and extract a subset of data from a selected web page e.g. A as illustrated in . The identified subset of data may be used for creating the signature schema for providing transcoded web pages as described herein . As will be understood the identified subset of data may depend upon the use for the data. For example in an e commerce web site it may be desirable to extract identify e commerce information from its web page s . That is on a selected web page A the desired identified subset of data may be an item on a page and its characterizing information. The characterizing information may include one or more types of data e.g. an image of the item for sale a description of the item for sale and its price .

Referring again to the user interface presents at least some of the estimated expected subset of data that are identified e.g. on display as candidates also referred to as a candidate subset of data herein . The desktop tagging tool may further receive input e.g. from a user via the user interface to confirm assist in the selection of the subset of data which is further provided as a response .

In one embodiment illustrated in the gateway and schema server provides the data candidates for review by a user of the computing device . That is the gateway and schema server is configured to maintain one or more pre defined criteria in the database . The pre defined criteria define the type s of identified data e.g. extract values for an image field a description field a title field . The database further maintains one or more confidence intervals which define patterns for spatially locating the different types of data. For example the confidence intervals may include information about an estimated location of an image for a corresponding image field. In one aspect the confidence intervals may also include information about the ranking of different probable candidates as may be calculated based upon a percentage of match between each probable candidate and the criteria defined in the confidence intervals . That is if a probable candidate is ranked as a third nominee for the image value of an item then this information is maintained in the confidence intervals .

Alternatively the confidence intervals may be maintained on a referrer web site i.e. www.eshop.ca . The confidence intervals may then be accessed by one of the computing device server to load the confidence intervals . The referrer site may maintain confidence intervals that have been generated in accordance with previously saved objects e.g. as saved by one or more users accessing the site from the same web site.

Referring to shown is an exemplary flow of interactions between the components of the system for facilitating identification of subset of data from a web page. At a user of the computing device or client machine submits a request to access a selected web page i.e. A as illustrated in to the gateway and schema server . At the gateway and schema server requests the selected web page A from the web server . At the web server provides an HTTP response to the server . As described earlier the web page A contents may include navigational items and other contents including lists and objects.

At the gateway and schema server retrieves confidence intervals and the pre defined criteria from the database . This operation may be performed by the engine of the gateway and schema server . The pre defined criteria provide information related to the selected web page A to help determine the types of data that may be identified. For example the types of data defined in the pre defined criteria may include the following fields image title description and price of a product on the web page A. The confidence intervals may include patterns and other information to spatially locate and identify a value for each field from the web page A. For example the confidence intervals may include the location on the web page A width and height of each value for each data type. The location provided by the confidence interval may be a relative location which defines the distance between different data types or may provide an estimated location on the page e.g. the image is located closest to the center . The confidence intervals may also define the estimated style associated with a data type e.g. a title may be in a pre defined font type or of a certain size or shading . Other identifiers may be used within the confidence interval to locate the subset of data types. For example the price value for the price field may occur after the text Our Price . The image may be located next to the text stating View more photos of product . As may be envisaged other properties characterizing information may be included in the confidence intervals to estimate a field and its value on a web page. Accordingly confidence intervals may be provided on a per web site e.g. basis. Alternatively one or more e commerce web sites may have overlapping confidence interval information . This may be possible since many e commerce web sites display products in a similar fashion. For example the following lists some common patterns that may be used to define confidence interval information a title may be bold the desired image may be near the middle of the page and relatively large in size the description generally has a large amount of text and may be black the price may be highlighted and when rendered may be within close proximity to the desired image of the product for sale.

Further in one embodiment each of the confidence intervals associated with a data type may be provided with a weighting. For example it may be more important that an image of the product is located in the center than the image being the largest one on the page. Accordingly a higher weight would be given to the confidence interval containing the location information of an image type. In this manner if more than one probable candidate data is defined as meeting the criteria provided by the confidence intervals the probable candidate data may be ranked according to the weighting to provide more importance or relevance to certain criteria over others. Thus the image having the optimal location may be selected as the candidate data .

Accordingly since the confidence intervals provide estimated patterns of the subset of data it may be desirable to use the desktop tagging tool for assisted capturing of web page A contents.

Referring again to at the server engine searches the selected web page A for the subset of data using either one or both of the confidence intervals and the pre defined criteria . That is the server engine may use the pre defined criteria to search the web page A for the desired objects e.g. product including image title description and price . If one or more objects pass the analysis provided by the pre defined criteria the objects are considered as preliminary candidates. Additionally the server engine may further review the preliminary candidates to determine which candidates meet the criteria provided by the confidence intervals . As discussed earlier the confidence intervals may define that an object belonging to a certain field e.g. an image of a product is estimated to have a certain pre selected size location on the web page A. Accordingly at the server engine determines one or matching candidates in each field e.g. the image of the product on the web page A meeting the criteria provided by the pre defined criteria and the confidence intervals.

Accordingly at the matching candidates are provided to the computing device . Additionally in one embodiment at operation the server engine may provide a JavaScript or other executable instructions for facilitating the identification correction confirmation of candidates to the computing device . In the present embodiment the JavaScript or other executable instructions provide instructions to the computing device for implementing the user interface of the desktop tagging tool . Accordingly the desktop tagging tool receives the candidates and allows amendments confirmation of the suggested candidates via the user interface . Thus the candidate data may comprise at least one type of subset of data e.g. an image field and at least one value corresponding to each type e.g. the image of the product defining an element on the web page.

At the candidates may be confirmed or amended by the user via the user interface . At the desktop tagging tool provides a response to the proposed candidates in accordance with input received from a user to confirm amend the candidates . The response i.e. containing the confirmed candidates or amended candidates is provided to the server engine . At the server engine reviews the response and updates maintains the confidence intervals or the pre defined criteria used to define the original candidates . For example the candidates provide an initial estimate of the desired objects and their location. The user interface allows a user to modify incorrect matches for each of the fields e.g. image title price related to an object e.g. a camera . This may be done by allowing a user to click on or otherwise select each of the candidate fields e.g. image field that was matched incorrectly and then locate the desired correct match for the field e.g. the correct image for the desired product on the web page and select it. For example the engine may be configured to amend one of the confidence intervals or the pre defined criteria only if a pre determined number of responses have been received which show that the candidates have been amended.

In one embodiment the confidence intervals or the pre defined criteria may be amended by the server engine depending upon the type of amendment provided in the response . For example if the types of fields to be extracted i.e. image field price field description field are correctly identified to the desktop tagging tool in the candidates then the pre defined criteria may not be changed. On the other hand if a user has amended the fields to be retrieved via the user interface then the pre defined criteria may be updated accordingly. Alternatively if the response provides an amendment to the field values e.g. the listed price of a product then the confidence intervals may be updated. For example a new pattern may be determined for the amended field value. In one case if the location size shading or other characterizing information of the amended field value is different than the suggested field value provided by the candidates then the characterizing information in the confidence interval for the field value may be changed accordingly.

Accordingly in one embodiment the amendment confirmation of the confidence intervals or the pre defined criteria based on the response defines subsequent candidates provided to the same or another computing device when accessing the same or related web pages i.e. as may be related by having the same genre .

Accordingly in the present embodiment the computing device may perform the desktop tagging operations by providing a call to the server engine for a selected web page e.g. A . The call may comprise requesting a JavaScript or other executable instructions for implementing the desktop tagging tool on the computing device . The JavaScript or other executable instructions is generated dynamically on the server engine side. When a web page request e.g. A is made by the computing device the engine may first check the cookies provided by the computing device for a user name and password for accessing the web site or for allowing desktop tagging. As described herein the JavaScript or other executable instructions is defined by at least one of the confidence intervals or pre defined criteria associated with the selected web page e.g. A .

Alternatively in another embodiment not illustrated the server engine is not provided and a web page request is provided directly from the computing device to the web server . In the present embodiment the pre defined criteria and the confidence intervals are stored locally on the database associated with the computing device . Accordingly once an HTTP response to the web page request is provided to the applicable computing device the desktop tagging tool is configured to generate the user interface using instructions e.g. JavaScript stored on storage . The desktop tagging tool may then identify and present potential candidates on the user interface based on the confidence intervals or the pre defined criteria . Similar to the embodiment discussed previously the interface allows manipulation of candidates such as to update or confirm the confidence intervals or the pre defined criteria .

Referring to shown is an alternate embodiment for identifying the subset of data from a selected web page e.g. A . The process for identifying is similar to the one described in relation to however in the present embodiment the server engine maintains the confidence intervals and the pre defined criteria i.e. the type of data to identify . The computing device requesting the selected web page may then apply instructions to the selected web page for identifying the subset of data based on the pre defined criteria and the confidence intervals provided from the server . further describes this operation.

At a request for a selected web page i.e. A is provided from the client machine to the web server . At a response to the web page request i.e. an HTTP response is provided. At the computing device provides a request to the server to initiate desktop tagging thereon by requesting dynamic instructions i.e. a dynamic JavaScript from the server . At the server retrieves the confidence intervals and the pre defined criteria from its database . At the server also retrieves instructions for identifying the subset of data and incorporates the confidence intervals and the pre defined criteria therein to generate dynamic instructions. The dynamic instructions are provided to the client machine computing device . At the computing device applies the received instructions to the selected web page to parse the web page identify the candidate subset of data and present same on the user interface . The user interface allows amendments or confirmations of the candidate subset of data at step . At step a response is provided to the server including any one of the amended candidate subset of data or amended confidence intervals or amended pre defined criteria . Accordingly the server updates the confidence intervals or the pre defined criteria based on the response received.

Further in one aspect the identification of the subset of data on the selected web page as provided by the pre defined confidence intervals or the pre defined criteria may be tailored to capture key information from a web page for similar genres of sites. For example e commerce web sites news web sites weather web sites sports web sites stock data web sites etc. or subcategories thereof may have similar formats for defining a web page. Thus the pre defined criteria or the pre defined confidence intervals may have overlapping information for the same genre of site.

Referring to shown is a selected web page A as requested for example by the computing device . As illustrated in the selected web page A may include a plurality of additional information that may not be of interest to the user. Additionally a limited screen size may mean a smaller set of information from the web site is desirable. Referring to shown is an example view of the interface of the desktop tagging tool . For example illustrates a form for presenting the following fields image title description and price of and their corresponding values for the selected product. The interface presents a plurality of candidate data for the fields e.g. the title description for the title field for review by the user of the computing device . The candidate data are estimated expected data identified from the web page A as may be done by the engine . The user may then navigate the interface to confirm or amend the candidates by modifying maintaining the field values provided.

As illustrated in in one embodiment the user may be provided with an option to save the candidate data as originally presented or as amended response displayed on the user interface . In the present embodiment the desktop tagging tool is configured to create a rich bookmark upon the user requesting to save candidate information displayed on the user interface . An example of rich bookmarks are illustrated in . The rich bookmark may comprise information describing the bookmark and the candidate information . For example the rich bookmark as displayed in comprises one or more field values e.g. the product image title price and description from the selected web page A and a URL for the web page e.g. A associated with the rich bookmark . That is the rich bookmark may comprise a displayable link e.g. URL and identified portions of the web site data candidate data associated with the URL. As mentioned earlier this may include field values such as image item title description of an item a text body related to the item. The identified portions of the web site that are to be displayed may be defined via the user interface of the desktop tagging tool which confirms amends the candidates as presented. Accordingly the rich bookmarks may be retrieved as requested by a user for example of the computing device . A list of rich bookmarks may be displayed as associated with the user the computing device . The user may then navigate the tagged items to select one of the rich bookmarks e.g. to return to the view illustrated in or A . Rich bookmarks may be shared with other users not shown .

The following exemplary operations illustrate the process of desktop tagging and identification of desired content from a web page as discussed in reference to .

Accordingly the semi automated process provided by the desktop tagging tool may be used to assist with the identification of desired web page contents i.e. as provided in the candidate subset of data to be displayed on the computing device for the selected web page e.g. A .

In accordance with a present embodiment further details concerning the syntax of schema instructions are described.

Type Defines the data type of the lookup. Type may be pex for a string expression. Type may also support more advanced options such as regular expressions API calls and SQL queries.

Action locate string Look for a string ref identifier value within the data. Return true iff the string exists in the data i.e. the ref identifier index 0 .

Action move ptr Remove all characters in the data that exist before the location of the ref identifier.

Action end ptr Remove all characters in the data that exist after the location of the ref identifier.

ID ID is an identifier of another section within the signature. It allows the result of a query to trigger another set of actions within the signature. This is primarily used when identifying page types. Once a match has been made specific instructions are executed that are marked with this ID. Recursive data structures e.g. lists within lists may also be supported. Ref Ref defines the initial identifier that the lookup searches for. If an AND case is required multiple ref identifiers can be used i.e. ref string1 ref1 string2 . If an OR case is required ref  ref identifier  alt1 can be used i.e. ref string1 ref alt1 string2 . To demonstrate X 1 Y 2 A 8 B 9 would translate to ref 1 ref alt1 2 ref1 8 ref1 alt1 9 . Repeat  identifier Repeat executes the identifier query additional times. For example if ref hello to set the identifier index at the second occurrence of hello the following tag would be added repeat ref 1 . Location Location before Search the data in a reverse direction starting from the ref identifier. This implies that both the start and end identifier indexes must be less than the ref index. Location middle Search the data in two directions starting from the ref identifier. This implies that the ref identifier index is greater than the start identifier index and less than the end identifier index. Location after Search the data in a forward direction starting from the ref identifier. This implies that both the start and end identifier indexes must be greater than the ref index. Start Start is primarily used when action get string and may also be used for replace remove instructions. The start identifier index will be the start index of the string to extract. If an AND case is required multiple start identifiers can be used i.e. start string1 start1 string2 . If an OR case is required start  start identifier  alt1 can be used i.e. start string1 start alt1 string2 . To demonstrate X 1 Y 2 A 8 B 9 would translate to start 1 start alt1 2 start1 8 start1 alt1 9 . To find the nmatch see the repeat syntax. End End is primarily used when action get string and may also be used for replace remove instructions. The end identifier index will be the end index of the string to extract. If an AND case is required multiple end identifiers can be used i.e. end string1 end1 string2 . If an OR case is required end  end identifier  alt1 can be used i.e. end string1 end alt1 string2 . To demonstrate would translate to end 1 end alt1 2 end1 8 end1 alt1 9 . To find the nmatch see the repeat syntax Max index Max index is used to limit the scope of a query by ensuring that no other identifier index is greater than the max index . . . . If an AND case is required multiple max index identifiers can be used i.e. max index string1 max index1 string2 . If an OR case is required max index  max index identifier  alt1 can be used i.e. max index string 1 max index alt1 string2 . To demonstrate X 1 Y 2 A 8 B 9 would translate to max index 1 max index alt1 2 max index 8 max index alt1 9 . To find the nmatch see the repeat syntax. Max Index Use Ref Max Index Use Ref is a Boolean value set to 0 or 1. It is used with Max index. When set to 0 the max index will begin querying at the beginning of the data. When set to 1 the max index will begin querying from the ref identifier index. Gbl append  identifier Gbl append appends a string passed via the url to the identifiers query value Gbl Repeat  identifier Gbl Repeat executes the identifier query additional times. For example if ref hello to set the identifier index at the second occurrence of hello the following tag would be added gbl repeat ref var where var would be passed in the URL i.e. http www.eshop.ca mobile fatfree.asp site . . . url . . . var 1. Tolerance Tolerance is a Boolean value set to 0 or 1. It is used to return an empty string. By default tolerance is set to 0 which enforces that a property be found on a page otherwise the page will be marked as invalid and an appropriate error message returned. When set to one an empty value is returned for properties that can not be located. Include sz Include sz is a Boolean value set to 0 or 1 and used with get string. It is by default set to 0. When set to 1 it includes the start value and the end value as part of the result. Include start Include start is a Boolean value set to 0 or 1 and used with get string. It is by default set to 0. When set to 1 it includes the start value as part of the result. Include end Include end is a Boolean value set to 0 or 1 and used with get string. It is by default set to 0. When set to 1 it includes the end value as part of the result. Closetag Closetag is a Boolean value set to 0 or 1 and used when action get string . It appends to the extracted value. Strip Tags Strip Tags removes HTML tags from the value and used when action get string . Strip tags 1 remove all tags. Strip tags 2 remove all br and script tags. Strip tags 3 remove all tags except replace with . Strip tags 4 remove all tags except replace with . Strip tags tag1 tag2 . . . tagN remove all tag1 tag2 . . . tagN leaving any tag not listed. Notrim Notrim is a Boolean value set to 0 or 1 and used when action get string . By default all value have white spaced trimmed. When this property is set to 1 white space is not trimmed. Append Append is a string value and used when action get string . It appends a string to the extracted value. Prepend Prepend is a string value and used when action get string . It prepends a string to the extracted value. Upper Upper is a Boolean value set to 0 or 1 and used when action get string . It converts all characters to upper case. Lower Lower is a Boolean value set to 0 or 1 and used when action get string . It converts all characters to lower case. Page Syntax

The page syntax extracts the paging information from the data. This allows the end user the ability to change pages just as on the desktop.

Make a web site family s search feature functional by specifying details such as what variable to post.

Search variable Name of search variable which a web site s search feature is looking to read request post etc.

The advanced tag defines global properties for the site. This at a minimum includes the path to the initial page of the site.

No item No item is a Boolean value 0 or 1. The default value is 0 which implies that Item pages should show up in the breadcrumb. When true the item is not added to the breadcrumb.

Check out Check out is a Boolean value 0 or 1. The default value is 0 which implies that Item purchase link sends the request and control away from the gateway server . When true then a checkout process has been created for use with gateway server . Product img width Product img width defines the width of all item images. Use cookies Use cookies a Boolean value 0 or 1. By default it is set to 0 and cookies are not passed to the site. When true gateway passes all cookies from client machine to the site and from the site to the client machine. Page Type Syntax

The page type is a collection of lookup queries that have an id associated with them. Lookup queries may be processed in a top down fashion. The first successful lookup will trigger another section in the signature schema document. For example if the following evaluates to true 

Elements include list elements menu elements item elements search elements form elements. Each element has an ID. For example a menu element 

The element may contain the following sub containers settings actions elements paging which scope resides only within the element. Each element is associated with a specific rendering function.

Settings syntax varies based on the type of element it resides in. Settings allow customizations that only apply to a specific page family.

Black list menu elements Black list removes menu items with names that reside in the black list. Each entry is separated delimited e.g. using two pound characters .

Pass image list elements search elements Pass image adds the image path to the url when requesting an item. The image added to the url will be used as the item image.

Input  identifier form elements Input tag adds modifies a form value with name identifier setting its value.

The actions tag primary function is data manipulation. It contains lookup queries that modify data with actions of move ptr or end ptr .

Persons of ordinary skill in the art will appreciate that alternative embodiments are contemplated. Though not shown a client machine may incorporate a transcoding engine applying a signature schema document obtained from a repository such as repository to web pages received from a web site. For example client machine B may be configured with an engine in cooperation with a mini browser application or plug in to another application. The engine obtains the schema document to apply against web page content from a particular web site. Communications with the web site may be direct and not via a gateway . The transcoding engine may apply the commands from the schema and transcode appropriately for rendering content by the mini browser or via the plug in.

Large public database driven web sites do not typically encrypt data that is publicly available. Instead the sites encrypt specific pages that contain user information for example login signup checkout and account management pages. One reason why all content is not encrypted may be that SSL TLS is resource intensive and reduces scalability. Another reason why all content is not encrypted may be that SSL TLS increase response times for the end user due to the time spent encrypting and decrypting content. Examples of web sites that follow this model include online stores news sites sports information and weather. Therefore since the number of SSL TLS pages is relatively small signature schema can be created to define a mobile friendly layout. Another benefit of the signature schema is that each field in an HTML form can be classified and populated with user data from an external application. It will be understood that each individual SSL TLS page will likely require its own respective page family template within a schema.

In contrast to shows a client machine C comprising a browser application C similar to browser for communicating with web site via gateway and schema server . In a similar way a signature schema may be used to transcode un encrypted communications of web pages to provide transcoded data . However browser C may be further configured to communicate through secure transcoding engine handing off communications for secure web pages when such communications between machine C and web site are to be encrypted. Secure transcoding engine may communicate with gateway and schema server to obtain the signature schema document which may be applied to transcode secure communications with web site .

Schema document may include instructions for populating secure responses to web site with data previously stored to client machine C. Such information may include personal information that has been stored using an external client application such as a password keeping application for securely storing encrypted personal information. Schema documents may be coded with suitable instructions to invoke communications or application programming interfaces between the secure transcoding engine and external application to securely obtain such data. Such information may be available via a plug in not shown to browser C.

System may be implemented so that a plurality of web sites are coupled to the telecommunication network either alone by a server or by a plurality of web servers like web server and that a corresponding plurality of schemas for each of those web sites or each of the web pages therein or both can be maintained by gateway and schema server and repository . There can in fact be a plurality of gateway and schema servers like server . Client machines can be configured for proxied connection through different servers . Servers can be hosted by a variety of different parties including for example but without limitation a a manufacturer of client machine b a service provider that provides access to the telecommunication network on behalf of user U of a client machine c the entity that hosts web site or d a third party intermediary. In web site host example it can even be desired to simply combine the web server and schema server engine on a single server to thereby obviate the need for separate servers.

Accordingly signature schemas may be defined to provide custom browsing experiences for small e.g. mobile devices among others and the proposed framework avoids changing web site code for existing web sites. Data extracted from the web sites may be intelligently stored to a relational database using knowledge of the web pages i.e. the objects and their attributes incorporated into the signature schemas. Query language may be used to direct a search of the web page as an ASCII text file to look for signatures to distinguish the web page s family from other web page families of a site and to identify the subset of data to be extracted.

