---

title: Automatic peripheral device sharing
abstract: In accordance with the automatic peripheral device sharing, a peripheral device that has been newly installed on a device is detected and is shared with one or more additional devices coupled to the device. A notification of the peripheral device is automatically published to the one or more additional devices. This notification includes an indication of how the one or more additional devices can access the peripheral device. Each of the one or more additional devices can receive this notification and determine whether the peripheral device can be automatically installed on that device without user input. For each of the one or more additional devices, the peripheral device is installed on that device only if the peripheral device can be automatically installed on that device without user input.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08032661&OS=08032661&RS=08032661
owner: Microsoft Corporation
number: 08032661
owner_city: Redmond
owner_country: US
publication_date: 20080228
---
As computing devices have become more affordable increasing numbers of homes and other locations are networking multiple computing devices together. However one problem faced when networking multiple computing devices together is the sharing of peripheral devices peripherals by those multiple devices. Oftentimes a peripheral will be connected to a particular one of the multiple devices with the desire by the user s that all of the multiple devices be able to access the peripheral. Although a user can oftentimes manually configure the multiple devices to access such a peripheral this manual configuration can be a burdensome and difficult process for the user.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used to limit the scope of the claimed subject matter.

In accordance with one or more aspects of the automatic peripheral device sharing a peripheral device that has been newly installed on a computing device is detected and is shared with one or more additional computing devices coupled to the computing device. A notification of the peripheral device is automatically published to the one or more additional computing devices. This notification includes an indication of how the one or more additional computing devices can access the peripheral device.

In accordance with one or more aspects of the automatic peripheral device sharing a published notification of a remote peripheral device coupled to a different computing device is received at a computing device. A determination is made as to whether the remote peripheral device can be automatically installed on the computing device without user input. The remote peripheral device is installed on the computing device only if the remote peripheral device can be automatically installed on the computing device without user input.

Automatic peripheral device sharing is discussed herein. In a network environment the existence of a newly installed peripheral device that has been connected to one of the networked devices is detected. This new peripheral device is automatically shared and a notification of this new peripheral device including an indication of how to access the peripheral device is made available to all other devices in the network environment. Each of these other devices in the network environment receives the notification and installs the peripheral device only if installation can be performed automatically without any user input. The peripheral device is then available to the users of all the devices in the network environment on which the peripheral device is installed without requiring any manual setup or configuration by the user.

Each computing device can be any of a variety of types of devices and different computing devices in system can be the same or different types of devices. For example a computing device can be a desktop computer a mobile station an entertainment appliance a set top box communicatively coupled to a display device a wireless phone a game console an automotive computer and so forth. Thus a computing device may range from a full resource device with substantial memory and processor resources e.g. personal computers game consoles to a low resource device with limited memory and or processing resources e.g. traditional set top boxes hand held game consoles .

Each computing device includes an automatic peripheral sharing module . . . . Each automatic peripheral sharing module automatically shares and notifies the other computing devices of any installed peripheral devices. Each automatic peripheral sharing module also receives notifications of installed peripheral devices from other computing devices and makes those peripheral devices available to users of the devices . For example assume a peripheral device is coupled to computing device . Automatic peripheral sharing module automatically configures computing device and peripheral device to share peripheral device with the other computing devices and publishes a notification to the other computing devices of how to access peripheral device . Automatic peripheral sharing module receives this notification installs the peripheral device on computing device and makes peripheral device available to users of computing device . The operation of automatic peripheral sharing modules is discussed in more detail below.

The peripheral devices also referred to as peripherals can be any of a variety of different types of devices. In one or more embodiments the peripheral devices are printers. Alternatively other types of peripheral devices can be used with the techniques discussed herein such as scanners fax machines cameras storage devices e.g. hard disk drives digital music players e.g. MP3 players video projectors and so forth.

Computing device includes an automatic peripheral sharing module having a local peripheral management module and a remote peripheral management module . Local peripheral management module manages the automatic peripheral device sharing for peripheral devices connected to computing device and remote peripheral management module manages the automatic peripheral device sharing for peripheral devices connected to other computing devices e.g. computing device . Similarly computing device includes an automatic peripheral sharing module having a local peripheral management module that manages the automatic peripheral device sharing for peripheral devices connected to computing device . Automatic peripheral sharing module also includes a remote peripheral management module that manages the automatic peripheral device sharing for peripheral devices connected to other computing devices e.g. computing device .

A peripheral device is connected to computing device . This connection can be any of a variety of different connections such as a USB Universal Serial Bus connection a parallel port connection an IEEE 1394 connection a wireless connection e.g. a wireless USB connection a network connection e.g. a LAN a wireless LAN etc. and so forth. Typically computing device performs an installation process when peripheral device is first connected to computing device . The installation process can be performed automatically by a peripheral feature component of an operating system running on computing device when peripheral device is connected to computing device such as in accordance with plug and play or hotplug systems. For example in embodiments where peripheral device is a printer the installation process can be performed by a print spooler component. Alternatively the installation process can be performed manually by a user requesting that the installation be performed.

The installation process configures computing device so that applications running on computing device can use and optionally otherwise communicate with peripheral device . The installation process allows applications running on computing device to print to a peripheral device that is a printer to record music to and or playback music from a peripheral device that is a digital music player and so forth. This installation process can involve various steps such as installing an operating system representation of the peripheral device on computing device e.g. a print queue if the peripheral device is a printer installing a software driver allowing applications running on computing device to transfer data to and or from peripheral device recording configuration information for accessing peripheral device in an operating system registry or other operating system record and so forth. This installation process typically occurs the first time peripheral device is connected to computing device and typically need not be repeated if peripheral device is disconnected and subsequently reconnected to computing device .

Local peripheral management module detects when a peripheral device such as peripheral device is newly installed on computing device . Local peripheral management module performs this detection by detecting when the installation process for peripheral device is performed. This detection of the installation process being performed can be carried out in different manners. In one or more embodiments an operating system running on computing device uses a peripheral management component e.g. a print spooler component if peripheral device is a printer that provides notifications of newly installed peripheral devices peripheral devices that have been uninstalled changes that have been made to peripheral devices and so forth. In such embodiments local peripheral management module registers with the peripheral management component to receive notifications of newly installed peripheral devices. When peripheral device is newly installed on computing device the peripheral management component sends a notification to local peripheral management module identifying peripheral device as a newly added peripheral device.

Alternatively other mechanisms can be used to detect when peripheral device is newly installed on computing device . For example an operating system registry or other record of peripheral devices that have been installed on computing device can be maintained. Local peripheral management module can monitor this operating system registry or other record to identify when a new peripheral device is added to the registry or record. By way of another example part of the installation process can be to send a notification to local peripheral management module of the newly added peripheral device such as by sending a message invoking an application programming interface API exposed by local peripheral management module and so forth. By way of yet another example another component such as the software driver for the peripheral device can send a notification of the newly added peripheral device to local peripheral management module .

Once local peripheral management module detects peripheral device being newly installed on computing device module automatically shares peripheral device . In automatically sharing peripheral device module configures computing device to share peripheral device so that other computing devices such as computing device can access peripheral device . The manner in which module automatically shares peripheral device can vary. In one or more embodiments a peripheral management component of computing device e.g. a print spooler component if peripheral device is a printer maintains a record or flag for each peripheral device installed on computing device the record or flag indicating whether the peripheral device is shared. In such embodiments module invokes an API of the peripheral management component or otherwise accesses the peripheral management component to set the record or flag for peripheral device to indicate that peripheral device is shared.

Alternatively module can automatically share peripheral device in other manners. For example an operating system registry or other record of which peripheral devices are shared can be maintained by computing device . Module can access this operating system registry or other record and update the information stored in the registry or record to indicate that peripheral device is shared.

In one or more embodiments all peripheral devices connected to computing device are automatically shared. Alternatively module can employ a filter so that only particular peripheral devices are automatically shared. This filter can be based on any of a variety of different criteria such as user preferences peripheral connection type peripheral type and so forth. For example only peripheral devices connected to computing device in a particular manner e.g. via a USB connection may be automatically shared. By way of another example a user may set a preference that only printers are to be shared or only particular types of printers are to be shared e.g. laser printers color inkjet printers etc. .

In addition to automatically sharing peripheral device local peripheral management module also optionally automatically configures peripheral device for shared usage. This automatic configuration of peripheral device can include setting various configuration values or other settings of peripheral device and or computing device for preferences when peripheral device is operating in a shared mode. These preferences can be preferences of an administrator designer or other user of computing device and or preferences of an administrator designer or other user of peripheral device . For example for a peripheral device that is a printer client side rendering can be enabled so that rendering of documents occurs at the computing device at which printing of the document is requested rather than by the printer or by computing device .

This automatic configuration of peripheral device can also include setting various other configuration values or settings of peripheral device for shared usage. In one or more embodiments these configuration values or other settings are values or settings that are to be set in order for peripheral device to be shared. For example any of various register settings can be made and or other data written to memory of peripheral device indicating that peripheral device is shared and or configuring peripheral device to operate in a shared mode.

In one or more embodiments automatic configuration of peripheral device includes configuring security settings for peripheral device so that the various users of computing devices and have permission to access peripheral device . For example different security settings of peripheral device and or of a software driver for peripheral device that is installed on computing device may allow different users and or different computing devices to access peripheral device . Automatic configuration of peripheral device includes configuring peripheral device and or a software driver for peripheral device to allow computing devices and or users of a particular domain s and or other network group s to access peripheral device .

Local peripheral management module also publishes a notification of peripheral device that includes an indication of how to access peripheral device . Other computing devices such as computing device can receive this notification and access peripheral device as indicated in the notification as discussed in more detail below. Publication of the notification refers to sending or otherwise communicating the notification to other computing devices such as computing device . The notification can be published in any of a variety of different manners.

In one or more embodiments the notification is published using the Web Services on devices technology. Additional information on the Web Services technology is available from Microsoft Corporation of Redmond Wash. In embodiments using the Web Services technology the operating systems on computing devices and support the Web Services technology which allows notifications to be communicated between computing devices and .

Alternatively the notification can be published using any of a variety of different techniques. Any technique that allows messages to be communicated between devices and can be used to publish the notification.

Publication of the notification refers to communicating the notification from computing device to computing device as well as any other computing devices coupled to computing device . As different computing devices can be powered on and or coupled to device at different times the publication of the notification allows the notification to be received by computing device regardless of when it is powered on and or coupled to device . For example a component on computing device or another device may keep a record of notifications that are published when computing device is powered down or otherwise disconnected from device . This record of notifications can then be sent to computing device when it is next powered on or connected to device . By way of another example computing device may publish the notifications at regular or irregular intervals e.g. every ten minutes whenever there is a break in which no data is being communicated on the network and so forth . Computing device will then receive the next published notification after device is powered on or connected to device .

The published notification includes an indication of how to access peripheral device . This indication of how to access peripheral device can take any of a variety of different forms. In one or more embodiments the indication is a network path name that identifies a path to peripheral device within the network including computing device . Alternatively any of a variety of other mechanisms for identifying the location of peripheral device and or how to send data to and or receive data from peripheral device can be used.

The published notification can take any of a variety of different forms. In one or more embodiments the notification is an eXtensible Markup Language XML document that includes the indication of how to access peripheral device . The XML document can also optionally include a version number for the automatic peripheral sharing. In some situations multiple different automatic peripheral sharing protocols can be supported by computing devices and the version number can be included in the published notification to identify which protocol is being used for the published notification.

In one or more embodiments the published notification is sent without any encryption or digital signatures. Alternatively in one or more embodiments encryption is used to digitally sign and or encrypt the published notification. The encryption can be public key encryption and or symmetric key encryption. The published notification can be encrypted by computing device such as by using a symmetric key known to devices and or by using a public key associated with computing device . Encrypting the published notification provides security so that only those computing devices for which the published notification is intended which are those computing devices that are able to decrypt the encrypted notification can access the data in the notification. Additionally the published notification can be digitally signed by computing device such as by using a private key of computing device . Computing device can then use a public key of computing device to verify that computing device was indeed the source of the published notification. Digitally signing the published notification provides an assurance to the computing devices receiving a notification of the source of the notification. Computing devices can thus act on e.g. install peripheral devices only in response to notifications received from trusted sources.

The published notification is published to one or more computing devices connected to the same network as computing device . This publication can be user based and or computing device based. With user based publication different users can log into a same computing device using different user accounts and each of these users can have different peripheral devices installed on the computing device when the user is logged in. The notification is published to particular users and the peripheral device is installed only for those users for which the notification is published. Accordingly the notification can be published to one user of the computing device but not to another user of the same computing device. The different users to which the notification is published can be users that are part of particular domains particular network groups and so forth. For example all of the users in a particular house can be part of the same network group the children in a house can be part of one network group while the adults are part of a different network group and so forth.

Computing device based publication refers to communicating the notification to all of the computing devices connected to the same network as computing device without regard for different users of those devices. Even though computing devices can have different users that log into the computing device using different user accounts the notification is published so that each of these different users has access to the shared peripheral device. The different computing devices to which the notification is published can be particular computing devices that are included in particular domains particular network groups and so forth. For example all of the computing devices within a particular home can be part of the same network group and the notification can be published to all of those computing devices.

In one or more embodiments various filtering is also performed by local peripheral management module in determining whether to publish a notification of the peripheral device. Module can determine that the notification is not to be published for certain peripheral devices. This determination could be made for example in response to a request from a user or another component or device that notification of a particular peripheral device or particular type of peripheral device not be shared. For example for a peripheral device that is a printer a particular printer may be a system printer that generates a local file rather than prints a hard copy of a document. Notification of such printers may not be published. Such printers can be automatically shared or alternatively may not be automatically shared. By way of another example notification of only digital music players may be published and automatically shared and notification of other types of peripheral devices is not published and is not automatically shared.

The published notification from local peripheral management module is received by remote peripheral management module which attempts to install peripheral device as a shared peripheral device on computing device . Installing peripheral device as a shared peripheral device on computing device is similar to the installation of peripheral device on computing device however computing device accesses peripheral device remotely. Computing device knows how to access peripheral device from the indication of how to access peripheral device that was included in the published notification received from local peripheral management module . In one or more embodiments installation of peripheral device on computing device includes installing an operating system representation of the peripheral device on computing device e.g. a print queue if the peripheral device is a printer the operating system representation of the peripheral device including the network path name for peripheral device so that data can be communicated to and or from peripheral device .

Remote peripheral management module automatically installs peripheral device on computing device . Remote peripheral management module obtains any appropriate software drivers for peripheral device and installs those software drivers as part of the installation process for peripheral device . The software drivers can be obtained from any of a variety of local and or remote locations. For example the software drivers may be included as part of an operating system running on computing device may be obtained from a remote server e.g. via the Internet may be obtained from computing device e.g. a location for the drivers or the drivers themselves may be included in the published notification or computing device may otherwise access computing device to obtain the software drivers and so forth.

Remote peripheral management module installs peripheral device on computing device without any input from the user of computing device . No manual intervention is required on the part of the user of computing device to install peripheral device on computing device . Rather the installation is all performed automatically. In one or more embodiments an indication can be provided to the user such as a message or dialog box when peripheral device is installed on computing device so that the user of device knows that peripheral device is available.

Installation of peripheral device on computing device is automatic. If a problem is encountered during the installation process such as a software driver not being available to computing device then the installation process terminates and peripheral device is not installed on computing device . Thus rather than requesting input from the user or signaling a problem or error to the user remote peripheral management module simply does not install peripheral device on computing device . Alternatively in one or more embodiments remote peripheral management module may request manual intervention from the user to complete the installation process or may indicate to the user that manual intervention is needed in order for the peripheral device to be installed.

Additionally it should be noted that in some embodiments not all computing devices need include both a local peripheral management module and a remote peripheral management module. The local peripheral management module of a computing device manages the automatic peripheral sharing for peripheral devices connected to that computing device. Accordingly if no peripheral device is to be connected to a particular computing device then no local peripheral management module need be included in that particular computing device. Additionally the remote peripheral management module of a computing device manages the automatic peripheral sharing for peripheral devices connected to other computing devices. Accordingly if no access to peripheral devices coupled to other computing devices is to be used by a particular computing device then no remote peripheral management module need be included on that particular computing device.

Additionally in one or more embodiments peripheral device can also be uninstalled from computing device . Uninstalling peripheral device is typically performed in response to a user request to uninstall peripheral device although alternatively peripheral device may be uninstalled in other situations such as in response to a request from another component or module of computing device or another device after a threshold amount of time has elapsed after peripheral device is disconnected from computing device and so forth.

When uninstalling peripheral device local peripheral management module detects that peripheral device has been uninstalled in an analogous manner to the detection that peripheral device was installed as discussed above e.g. based on a notification from a print spooler component by accessing an operating system registry or other record and so forth . Local peripheral management module also stops publishing the notification of peripheral device discussed above. Stopping publishing the notification of peripheral device indicates to computing device that peripheral device has been uninstalled from computing device . In response to this indication remote peripheral management module uninstalls peripheral device from computing device so that peripheral device is no longer accessible to computing device . An analogous process is used for any peripheral device that was connected to computing device being uninstalled. Alternatively rather than stopping publishing of the notification of peripheral device local peripheral management module can publish a separate uninstall notification thereby indicating to computing device that peripheral device has been uninstalled.

Additionally in one or more embodiments automatic peripheral sharing module can be removed from computing device after peripheral device has been automatically shared. For example automatic peripheral sharing module can be an application or component installed on computing device and can be uninstalled. In one or more embodiments if module is removed from computing device then prior to removal module attempts to undo any changes it has made. For example if peripheral device has been automatically shared then module publishes a notification that peripheral device has been uninstalled or ceases publishing the notification of peripheral device discussed above . In other embodiments if module is removed from computing device then module makes no such attempts to undo any changes it has made. For example if peripheral device has been automatically shared then peripheral device remains automatically shared.

Initially a newly installed local peripheral device is detected act . This newly installed local peripheral device is a peripheral device that is connected to the device implementing process . The newly installed peripheral device can be automatically detected in any of a variety of manners as discussed above.

Once detected the peripheral device is automatically shared act . Automatically sharing the peripheral device sets up the device implementing process to share the peripheral device so that other computing devices can access the peripheral device as discussed above.

The peripheral device is also optionally automatically configured for shared usage act . This configuration of the peripheral device can include setting various configuration values or other settings of the peripheral device and or the device implementing process when the peripheral device is operating in a shared mode as discussed above. In one or more embodiments no such configuration is performed in which case act need not be performed.

A notification of the peripheral device including how to access the peripheral device is also published act . As discussed above this publication of the notification informs other computing devices that the peripheral device has been installed on the device implementing process and is available for sharing as well as how to access the peripheral device.

It should be noted that in one or more embodiments situations can arise where the peripheral device is not automatically shared in act . For example certain peripheral devices or particular installation processes may not allow for automatic sharing of peripheral devices a user selectable option to not automatically share peripheral devices may be set and so forth. In such situations however a user could still manually share a peripheral device by requesting that the peripheral device be shared. In response to such a request a component e.g. a peripheral management component such as a print spooler component if the peripheral device is a printer shares the peripheral device as discussed above. A local peripheral management module e.g. module of is notified of this manual sharing in response to which acts and or are performed. Thus even though the peripheral device is not automatically shared in such situations the peripheral device can still be automatically configured for shared usage and or notification of the peripheral device and how to access the peripheral device can still be automatically published.

It should be noted that in one or more embodiments not all of the elements of process are performed. For example some peripheral devices may not be automatically shared in act . By way of another example notification of some peripheral devices may not be published in act .

Initially a published notification of a remote peripheral device is received act . This remote peripheral device is a peripheral device that has been installed on another computing device and that has been shared to allow other computing devices to access it. For example in computing device receives a published notification of a remote peripheral device peripheral device coupled to computing device . The published notification can be received in any of a variety of manners as discussed above.

A check is then made as to whether the remote peripheral device can be automatically installed on the device implementing process without user input act . If installation of the peripheral device can occur without user input including no requests for manual intervention by the user then the remote peripheral device is installed on the device implementing process act . However if installation of the peripheral device cannot occur without user input then the remote peripheral device is not installed on the device implementing process act .

Thus it can be seen that when a peripheral device is connected to one computing device on a network the peripheral device is automatically shared and automatically installed on the other computing devices in the network. This allows the users of the other computing devices to access that peripheral device without having to perform any installation process themselves. Rather the entire installation process can be performed automatically. No settings need be configured by the user no requests to share a peripheral device need be entered by the user and so forth.

Computing device includes one or more processors or processing units one or more computer readable media which can include one or more memory and or storage components one or more input output I O devices and a bus that allows the various components and devices to communicate with one another. Computer readable media and or I O device s can be included as part of or alternatively may be coupled to computing device . Bus represents one or more of any of several types of bus structures including a memory bus or memory controller a peripheral bus an accelerated graphics port and a processor or local bus using any of a variety of bus architectures. Bus can include wired and or wireless buses.

Memory storage component represents one or more computer storage media. Component can include volatile media such as random access memory RAM and or nonvolatile media such as read only memory ROM Flash memory optical disks magnetic disks and so forth . Component can include fixed media e.g. RAM ROM a fixed hard drive etc. as well as removable media e.g. a Flash memory drive a removable hard drive an optical disk and so forth .

The techniques discussed herein can be implemented in software with instructions being executed by processing unit s . It is to be appreciated that different instructions can be stored in different components of computing device such as in a processing unit in various cache memories of a processing unit in other cache memories of device not shown on other computer readable media and so forth. Additionally it is to be appreciated that the location where instructions are stored in computing device can change over time.

One or more input output devices allow a user to enter commands and information to computing device and also allows information to be presented to the user and or other components or devices. Examples of input devices include a keyboard a cursor control device e.g. a mouse a microphone a scanner and so forth. Examples of output devices include a display device e.g. a monitor or projector speakers a printer a network card and so forth.

Various techniques may be described herein in the general context of software or program modules. Generally software includes routines programs objects components data structures and so forth that perform particular tasks or implement particular abstract data types. An implementation of these modules and techniques may be stored on or transmitted across some form of computer readable media. Computer readable media can be any available medium or media that can be accessed by a computing device. By way of example and not limitation computer readable media may comprise computer storage media and communications media. 

 Computer storage media include volatile and non volatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Computer storage media include but are not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by a computer.

 Communication media typically embody computer readable instructions data structures program modules or other data in a modulated data signal such as carrier wave or other transport mechanism. Communication media also include any information delivery media. The term modulated data signal means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media include wired media such as a wired network or direct wired connection and wireless media such as acoustic RF infrared and other wireless media. Combinations of any of the above are also included within the scope of computer readable media.

Generally any of the functions or techniques described herein can be implemented using software firmware hardware e.g. fixed logic circuitry manual processing or a combination of these implementations. The terms module functionality and logic as used herein generally represent software firmware hardware or combinations thereof. In the case of a software implementation the module functionality or logic represents program code that performs specified tasks when executed on a processor e.g. CPU or CPUs . The program code can be stored on one or more computer readable media further description of which may be found with reference to . The features of the automatic peripheral device sharing techniques described herein are platform independent meaning that the techniques can be implemented on a variety of commercial computing platforms having a variety of processors.

Although the subject matter has been described in language specific to structural features and or methodological acts it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather the specific features and acts described above are disclosed as example forms of implementing the claims.

