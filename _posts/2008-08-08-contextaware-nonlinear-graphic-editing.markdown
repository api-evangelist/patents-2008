---

title: Context-aware non-linear graphic editing
abstract: A graphical editor displays graphical representations of underlying data items in a distribution of information-bearing states across a bounded region of a display. One or more of the data items are selected as belonging to a context of a user task or operation. The information-bearing states are redistributed in the bounded region of the display so that an amount of information sufficient to the task is provided through the graphical representations of the data items in the context and any space in the bounded region of the display needed to display such information is acquired by a decrease in the amount of information provided by the data items outside the context.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08427502&OS=08427502&RS=08427502
owner: Cadence Design Systems, Inc.
number: 08427502
owner_city: San Jose
owner_country: US
publication_date: 20080808
---
The inventive concept described herein pertains to mechanisms by which user interaction with a computer system controls the presentation of display data where such interaction is interpreted and used by a data processor or computer architecture having system level elements of computation or data processing techniques prior to use with or in a specific display system.

Editing graphical data by a user s interaction with data processing equipment has found wide application for decades. Manipulating data through graphical interfaces is intuitive for humans and thus preferred in such fields as design and analysis. However as the amount of data being displayed becomes large other mechanisms must be employed so that a human user may visualize the data at the desired level of detail. This poses challenges when the user also desires to visualize the entirety of the data as well as the desired level of detail.

The inventive concept described herein pertains to user interaction with a computer system to control the presentation of display data where such interaction is interpreted and used by a data processor or computer architecture having system level elements of computation or data processing techniques prior to use with or in a specific display system. Beneficially the display data are presented and edited in a non linear presentation environment.

Additional aspects and utilities of the present inventive concept may be achieved by providing a graphic editor apparatus having a display interface to display graphical representations of data items in a distribution of information conveying states a context data processor to define a context of at least one of the data items a display data processor to render the graphical representations of the data items in another distribution of the information conveying states and at least one user control to modify a data item in the other distribution of the information conveying states of the data items.

Additional aspects and utilities of the present inventive concept may also be achieved by providing a graphic editing interface including a display device having a canvas region displayed thereon to edit a plurality of graphical abstractions of data items a processor to define a context of a graphical editing task and at least one data item associated therewith and to render graphical abstractions of the data item in the context is displayed with greater visual prominence than the graphical abstractions of the data items outside the context and the graphical abstractions of all of the data remain visible in the canvas region and at least one user control to modify a data item in the canvas region subsequent the graphical abstraction of to the data item in the context being displayed with greater visual prominence than the graphical abstractions of the data items outside the context.

Additional aspects and utilities of the present inventive concept may also be achieved by providing a method of editing graphic data including displaying a plurality of graphical elements in a bounded area of a display each of the graphical elements having assigned thereto an information conveying state to form a distribution of information conveying states establishing one or more of the graphical elements as belonging to a context and excluding one or more of the graphical elements from the context modifying the distribution of information conveying states such that the graphical elements in the context are displayed with greater visual prominence than the graphical elements outside the context and all of the graphical elements remain visible in the bounded region of the display and modifying the graphical elements in the bounded area of the display subsequent to the modifying of the distribution of information conveying states.

Additional aspects and utilities of the present general inventive concept will be set forth in part in the description which follows and in part will be obvious from the description or may be learned by practice of the general inventive concept.

Reference will now be made in detail to the embodiments of the present general inventive concept examples of which are illustrated in the accompanying drawings wherein like reference numerals refer to the like elements throughout. It is to be understood that the term invention when used herein refers to the general inventive concept underlying the exemplary embodiments described below and that the inventive concept is not limited to such illustrative embodiments themselves.

Referring to there is illustrated an exemplary embodiment of the present invention. A display device includes a display region in which graphical data are presented to a user. The graphical data may include application specific items such as illustrated by toolbar and display region which form part of an underlying display and or editing system. The bounded display region in which the user data is displayed and selectively edited is referred to herein as a canvas . Additionally the graphical data may include user data specific items such as illustrated in by graphical elements which are graphical abstractions of the data of interest to a user. As used herein a graphical abstraction is a graphical element used to represent an underlying data item in a manner that conveys meaning of the underlying data item to a user. For example the underlying data item of graphical element is an octagon and the graphical abstraction of the octagonal data is the octagonal shaped graphical element . A data item may have more than one graphical abstraction. For example in electrical engineering a transistor may be graphically represented by for example a schematic symbol a graphical depiction of its physical construction on a circuit bearing medium and a footprint and pin out of a package in which it is contained. All of these abstractions convey transistor to the user but each abstraction conveys to the user different information regarding the transistor.

A data item may be modified via manipulation of characteristics of one or more graphical abstractions thereof. It is to be understood that a graphical abstraction of a data item may be viewed through a number of different states such as zoomed in i.e. visually expanded zoomed out i.e. visually contracted presented in alternate coloring or shading as well as other visual states without a modification to the underlying data item. When a graphical abstraction is modified through a user action the graphical abstraction will be explicitly described herein as being edited or modified and the underlying data item may be modified in a manner corresponding to the modification of its graphical abstraction.

A user may select or define a context in which data is to be viewed edited analyzed and otherwise considered. As used herein a context is an environment background or setting having meaning to a user in which data can be viewed and or modified in a manner corresponding to the environment background or setting. For example a particular user action such line drawing with a drawing tool may define a drawing context. A context may be set explicitly such as by a selection of a particular user environment or set of user environment settings or may be selected implicitly by user action such as selecting an editing tool or one or more data items. A context may also include one or more data items or equivalently by one or more graphical abstractions thereof involved in a particular task. The nature number and selection means of a context will vary by application and the present invention is not limited by the manner in which contexts are defined.

Graphical abstractions of data items belonging to a selected context may be assigned visual characteristics that correspond to the context. For example in an Electronic Design Automation EDA system the transistor described above may be presented in its schematic symbol abstraction in a schematic entry context and may be presented in its packaging footprint in a component layout context. Additional visual characteristics such as coloring shading magnification among others may be assigned to the graphical abstractions belonging to a given context such as to highlight one or more graphical abstractions during a predetermined user action.

In addition to the visual characteristics each graphical abstraction of a data item may be assigned an information conveying state which as used herein is a state of a graphical element that establishes an amount of information regarding the underlying data item that is conveyed by the graphical element. For example in the upper panel of the information conveying state of the triangular element allows descriptive text to be read by a user. In the lower panel of the information conveying state of the triangular element has been modified to the extent that the text is no longer legible but its presence is still conveyed to the user at element .

An information conveying state may also include how graphical features of a graphical element are defined and displayed. For example in the upper panel of the detail of the star shaped element is displayed with greater resolution than the detail of the star shaped element in the lower panel of . The present invention is not limited to the means by which information is conveyed by graphical elements implemented in accordance therewith nor by the manner in which the information conveying state of such graphical elements may change the amount of information conveyed by such graphical elements.

Referring once again to the graphical elements on the canvas may be presented on the display in a non linear editing space. As used herein a non linear editing space is an image viewing and editing interface whereby information conveying states of individual graphical elements is selectively distributed over the entire interface so that certain information e.g. task related information is presented with greater visual prominence than other information e.g. non task related information. In certain embodiments of the present invention task related information is determined by the context whereby information of the graphical elements belonging to a context is presented in sufficient detail for the task at hand and information outside the context is displayed in a background or superficial manner.

In certain embodiments of the present invention the distribution of the information conveying states of the graphical abstractions is controlled by non linear zoom. According to non linear zoom graphical abstractions belonging to a context may be zoomed in to increase the amount of information conveyed by the graphical abstraction and the graphical abstractions outside the context may be zoomed out to decrease the amount of information conveyed by the graphical abstraction. Referring to the upper panel of the graphical abstractions of the data items which are alternatively referred to herein simply as graphical elements on the canvas include the circular element having an interior detail a triangular element having text a star shaped element having detail and an octagonal element . It is to be assumed that the circular element has been selected as belonging to the context and as illustrated in the lower panel of the has been zoomed in so that for example detail may be more easily viewed and edited. The remaining graphical elements which are out of the defined context are zoomed out to accommodate the zoomed in size of the graphical element . Through non linear zoom the information conveying states of the graphical elements are distributed so that all of the graphical elements remain in the viewable area of the canvas . Detail information such as the text and the detail of graphical elements outside the context are presented with diminished information content i.e. text has been reduced to a line and detail has been reduced to a dot so that the information conveyed by the graphical element in the context can be increased. The extent to which information content of the graphical elements outside the context may be diminished for display and conversely the extent to which information content of the graphical elements belonging to the context may be enhanced for display may be determined by any number of factors according to the application of the present invention as will be apparent to the skilled artisan from review of this disclosure.

Non linear zoom may be accomplished by a transformation of coordinates of the canvas . For example a Cartesian coordinates system of canvas as illustrated in the upper panel of may be transformed through a suitable Cartesian transform function into a second coordinate system illustrated in the lower panel of . The transformation of coordinates may be applied to the graphical elements on the canvas without affecting the underlying data items which may be edited in the non linear space created by the transformation. Non linear zoom is an exemplary transformation by which the information conveying states of the graphical elements are redistributed on the canvas so that any space needed to increase the amount of information conveyed by the graphical elements in the context e.g. graphical element is acquired through decreasing the amount of information conveyed by the graphical elements outside the context e.g. graphical elements .

In accordance with embodiments of the present invention the canvas is zoomed according to locations of focus points . Focus points as used herein are coordinates of the canvas about which graphical elements are expanded such as about a positive focus point or or contracted such as about a negative focus point . Focus points may be established on the canvas according to the selected context so that graphical elements belonging to the context are magnified and the area of the canvas required for such magnification is provided by contracting graphical elements outside the context as necessary.

Focus points implemented in conjunction with the present invention may be static wherein the location thereof on the canvas is fixed throughout a duration of time the context is selected or the focus points may be dynamically updated where the location thereof on the canvas changes according to changes in the context such as by the addition of graphical elements to the context or by moving a location of the context from one point on the canvas to another. A context that undergoes changes by way of changes to the graphical elements belonging thereto is referred to herein as a dynamic context an example of which is illustrated in . As is illustrated in the figure a drawing context is continuously changed by the sequential addition of line segments . Accordingly the exemplary focus point is continuously updated according to a position of a cursor during the task of adding the line segments . As is illustrated in zoom is applied about the focus point as the cursor traverses the canvas during the drawing task.

In certain embodiments of the invention static focus points may be added at any time during context operations even in the presence of dynamic focus points. For example if a user wants to add a static focus points during a context operation he may do so through a suitable user action such as a mouse click or menu selection. The present invention is not limited to the sequence by which focus points are added or deleted. Additionally in certain embodiments of the invention static focus points may remain active even when a dynamic focus point has been cleared such as by the termination of a dynamic context. Subsequently a user may have the option to remove all or some of the static focus points.

The present invention finds application at least where data is viewed and or edited through graphical representations thereof as will be readily recognized by the skilled artisan. As such implementation of the present invention will vary by application thereof. Notwithstanding such variation in implementation an exemplary EDA system embodiment of the present invention will now be described. It is to be understood however that the EDA system embodiment utilizes certain graphical data in a manner similar to other applications and that the present invention may be used in other applications in a manner similar to that described below. However it is to be understood that the description of the exemplary embodiment below is not intended to limit the scope of the present invention to EDA embodiments or to any particular graphic editing environment.

The exemplary data processing apparatus of the embodiment illustrated in includes a processor to among other things execute processing instructions that implement various functional modules such as those described below with reference to . It is to be understood that the present invention is not limited to a particular hardware configuration or instruction set architecture of the processor which may be configured by numerous structures that perform equivalently to those illustrated and described herein. Moreover it is to be understood that while the processor is illustrated as a single component certain embodiments of the invention may include distributed processing implementations through multiple processing elements. The present invention is intended to embrace all such alternative implementations and others that will be apparent to the skilled artisan upon review of this disclosure.

A storage unit may be utilized to store data and processing instructions on behalf of the exemplary data processing apparatus of . The storage unit may include multiple segments such as a code memory to maintain processor instructions to be executed by the processor and data memory to store data such as data structures on which the processor performs data manipulation operations. The storage unit may include memory that is distributed across components to include among others a cache memory and a pipeline memory.

The data processing apparatus may include a persistent storage system to store data and processing instructions across processing sessions. The persistent storage system may be implemented in a single persistent memory device such as a hard disk drive or may be implemented in multiple persistent memory devices which may be interconnected by a communication network.

The CDS may include a process controller to coordinate and control the interoperations of the functional components of the CDS so as to achieve a fully operational data processing system. For example the process controller may receive data corresponding to user manipulations of the user interface to be described below may format the data into a command and or data location in memory and may convey such information to the applicable functional module of the CDS . The process controller may subsequently receive processed data from the applicable functional module and forward the data to another functional module as well as to indicate such processing on the user interface . The process controller will perform other coordination and control operations according to the implementation of the CDS and such other operations as well as the implementation of such can be embodied by a wide range of well known process control methods and apparatuses. The present invention is intended to encompass all such alternatives of the process controller including multi threaded and distributed process control methodologies.

As indicated above the CDS may include a user interface through which the CDS interacts with a user. The user interface may be implemented by a combination of hardware devices and suitably programmed processing instructions executed by the processor . The user interface may be used to present data to the user in a meaningful form on a display interface such as through graphical representations of circuit schematics circuit layout diagrams circuit test bench interfaces and of data management interfaces such as file directories and other images recognized by the user. The display interface may include a canvas such as the canvas described with reference to . The user interface may interpret user manipulations of any HIDs thereof into messages and instructions that can be recognized by the process controller . The user interface may include a plurality of user controls to afford the user interactivity with and control over the CDS . The user controls may include the HIDs described above and may also include software implemented controls on the display interface such as the toolbar illustrated in and or buttons such as the button illustrated in menus of commands text command entry blocks and other suitable software controls. The foregoing description of the user interface may be met by a suitably configured graphical user interface GUI the implementation details of such will be omitted in the interest of conciseness.

The CDS may include a database of circuit objects that maintain all the data necessary to design analyze modify and fabricate an electric circuit per the specifications of a circuit designer. As used herein a circuit object is a data structure that can be stored in a memory device to contain data of a circuit element so that the circuit element can be viewed modified interconnected with other circuit elements and analyzed in one or more circuit design contexts selected by a user. A circuit object may also contain graphical abstraction information so that a particular circuit element may be presented on the display interface which may include a canvas as for example a schematic symbol in a schematic entry design context presented as a footprint in a layout design context presented as a routing component in a circuit routing design context and provided as a component model in a circuit analysis and design verification context. A circuit object may also be hierarchical whereby a circuit object contains other circuit objects of circuit elements interconnected to form a component that has a schematic symbol layout footprint and a terminal characteristics model used as a single element in a circuit. An example of such a circuit object is that of an operational amplifier.

Image data storage area is a work space in memory such as in data memory in which to store the graphical elements that are rendered onto the canvas of the display interface . The image data storage area may concurrently store multiple views of the graphical elements corresponding to for example an original view and a non linear view of the canvas such that the original graphic data and the non linear graphic data may be switched rapidly. Additionally the image data storage area may concurrently store views of different image layers or of different views of layers of circuit elements to form a graphical representation of multi dimensional objects. The graphical data in the image data storage area may be provided to the display interface to be displayed on the canvas and may have been first processed by the display data processor as described below.

As illustrated in the exemplary CDS includes a context data processor to establish and process information regarding a context and the circuit objects associated therewith. The context data processor may receive context defining messages from the user interface through the process controller such as a message that for example a particular user environment has been selected that a particular task has been initiated or that certain graphical elements have been selected. A context may be determined from for instance functionality defined in a circuit design. For example a power nets context may be defined to include all circuit paths connected to power terminals. The power net context may be selected by a user through for example a suitable command provided via the user interface and may be received as a suitably formatted message by the context data processor through the process controller . Upon receiving the power net context selection command the context data processor may associate all circuit paths directly connected to a power terminal with the power net context.

Certain embodiments of the present invention may define a context automatically. For example incorporation of a circuit element into a design may invoke a context selection corresponding to the type of element being incorporated. A circuit object of a digital logic component may have a class identifier for example that identifies the component as belonging to a digital integrated circuit class. When such a component is retrieved from for example a library in the database the context data processor may determine from the class identifier in the circuit object that a digital circuit is being incorporated into the design and may then set a digital logic context accordingly. The context data processor may then include the retrieved digital circuit component in the context. Certain embodiments of the present invention may have functionality whereby such automatic context selection can be activated and deactivated by a user either globally and or per individual classes of circuit elements and user operations.

In circuit design applications sections of an electronic component may be distributed across a view e.g. individual gates of a digital integrated circuit or sections of a packaged circuit as split parts. According to certain embodiments of the present invention the context data processor may establish a context that includes all sections of a split part upon selection of any of the sections of the split part. Accordingly the information conveying state of the graphical elements representing sections of the split part may be set to increase the information provided thereby by all of the sections of the split part across the canvas .

As stated above a context may also be established through a predetermined user action. In a circuit design environment such user action may include routing an interconnection between terminals. The context data processor may establish a context to include the source and destination components that are to be interconnected. Additionally the context may include the routed interconnection itself and the context may be dynamically updated as the interconnection is being routed. Such an example is illustrated in where a source component and destination component are to be interconnected in a routing context. In the example of the source and destination components and respectively belong to the routing context and may be zoomed accordingly about static focus points. The remaining components on the canvas may be zoomed out according to non linear zoom. The route segments may be added to the context as the segments are added to the design and as such may be zoomed dynamically as described with reference to . It is to be noted that while the route is being added to the design on canvas the zooming of components dynamically updates so that the complete design always stays visible on the canvas .

In certain embodiments of the present invention the context data processor may cooperate with the user interface to constrain the dynamic context to a particular region of the canvas. Referring to there is illustrated a canvas on which components are displayed. It is to be assumed for purposes of demonstration that a routing context has been defined to include the components . The context data processor may determine a confinement region such as by computing possible routing paths and the available space in the design for such routing paths. The confinement region definition data may be provided to the process controller to define a guided traversal path such that as a user adds the routing segments representatively illustrated by routing segment the cursor and thereby the addition of routing segments to the dynamic context are constrained to remain in the confinement region . By such constraint unintended editing outside the confinement region is avoided. In certain embodiments of the invention the guided traversal may be activated and deactivated as desired by a user.

In certain embodiments of the present invention results of a content search such as through a suitable search tool are provided to the context data processor and a context may be defined with the search results. For example a search for a particular component in a design may result in not only the location of the component in the design but the automatic creation of a context that includes the sought component.

The exemplary CDS may include a display data processor to render the graphical elements on the canvas . The display data processor renders the graphical elements associated with the context determined by the context data processor such that graphical elements belonging to the context are displayed with the best possible visibility while maintaining a complete view of the graphical data in which the selected context resides.

The display data processor may perform non linear zoom through for example a spatial transform of a coordinate system defining the canvas . The present invention is not limited by the transform function realized by the display data processor . However the function used for the transform should be invertible so that the graphical elements can be returned to their original visual state. The display data processor may realize any one of several bijective functions to fulfill the transform function and the display processor may apply a separate transform function for each dimension represented on the canvas .

The continual evaluation of a bijective function to perform a coordinate transform may be computationally prohibitive in certain applications. For example a context may include multiple focus points any one of which may be dynamically updated such as is described with reference to which may require significant computational resources to perform assuming that a suitable bijective function for such a multiple focus context even exists at all. Thus in certain embodiments of the present invention the coordinate transform of the canvas may be performed via the application of one or more block transformations. Such block transformations can be made to encompass a limited region and can thus be applied about each focus point in the context.

In certain embodiments of the present invention one or more transform functions may be sampled and the samples stored in memory such as in transform data storage area illustrated in . For example the sampled transform functions may be used to populate one or more respective lookup tables.

Referring to there is illustrated exemplary transform data as may be stored in lookup tables in transform data storage area . As is illustrated in the figure data set establishes a non linear spatial transformation to a set of x coordinates of the canvas and data set applies a separate and distinct non linear transformation to a set of y coordinates of the canvas . The lookup tables may be populated independent of one another and may be populated at execution time according to various contexts. It is to be understood that additional data sets may be implemented with embodiments of the present invention to be applied to other display dimensions represented on the canvas . Any non linear function can be used to populate these tables. However the non linear functions populating the lookup tables should converge at their respective boundaries such that the normal coordinate is equal to the transformed coordinate at the endpoints of the transform for each direction. For example x coordinate table is non linear between its boundaries 0 and 480 but is terminated at its endpoints 0 0 and 480 480 . The y coordinate table is non linear between its boundaries 0 and 380 and is terminated at the endpoints 0 0 and 380 380 .

The display data processor may establish focus points according to the context established by the context data processor and from instructions received from user actions through the process controller . The present invention is not limited by a particular implementation of the display data processing functions of the display data processor and any suitable function may be used with the present general inventive concept without deviating from the spirit and intended scope thereof. Any forward translation from a normal Cartesian coordinate x y to the non linear coordinate x y may be achieved by accessing each table separately and the reverse translation is achieved in similar fashion i.e. x f x and y f y and in the reverse direction x g x and y g y where f f g g are the transformation functions applied.

Using the exemplary transformation data illustrated in a horizontal line having endpoints at normal coordinates 100 100 and 200 100 is mapped to a line having endpoints 25 24 and 63 24 in non linear coordinates thus maintaining its horizontal orientation on the canvas . Similarly a vertical line between having endpoints at normal coordinates 100 50 and 100 100 is mapped to a line having endpoints 25 13 and 25 24 in non linear coordinates thus maintaining its vertical orientation.

In certain embodiments of the present invention graphical elements belonging to a context are each assigned a focus point. The transformation data is aligned with each focus point of the context at the point F F and the transformation is applied by for example converting the x coordinates of the context about the focus points encompassed by the x transform data and subsequently converting the y coordinates encompassed by the y transform data. When the focus points are spaced to where block transformation data overlaps the transformed data may be superimposed to a final result. For example if three 3 focus points exist in a context e.g. F F and F. If it is assumed that x 1 f x F x 2 f x F and x 3 f x F the final value entered into the lookup table may be x x 1 x 2 x 3 3. Similar calculations may be conducted to determine y transform data values. Additionally it is to be understood that different non linear functions and magnification factors may be applied to each focus point by filling in respective lookup tables with data sampled from the applicable transform function.

The transformation data may be applied to contexts of arbitrary shape by a suitable selection of boundaries. For example contexts having non curved shapes can be transformed by alignment of the transformation block with vertices of the shape. Transformation of regular curved contexts such as those of circular or elliptical shapes may be applied across the bounding rectangle of the context. Transformation of other curved shapes may be applied by aligning the transformation blocks on end points and intermediate points of the boundary and adding a curve joining the intermediate and end points after the transformation is complete.

The display data processor may perform non linear zoom inside a view that has had non linear zoom applied. Certain embodiments of the invention allow such recursive non linear zoom to any zoom level such as by storing intermediate zoom views of the canvas in image data storage area and applying the non linear zoom transformation data on the stored view.

In certain embodiments of the present invention the display data processor applies other image processing to improve visual clarity of the graphical elements in the context. For example the display data processor may consider the relative importance of graphical elements in the zoomed region of the canvas . The relative importance of graphical data may be established through user selected environment variables in circuit objects or by other settings in the EDA system . For example the display data processor may apply distance based weights whereby nearby objects are zoomed in less compared to a distant object which gets a higher zoom level. The display data processor may also apply a weight attached to the cursor whereby the cursor position establishes a dynamic zoom level which changes with the position of cursor. The display data processor may also implement manual specification of the zoom level such that depending on the context selection the user may specify a zoom value to a level different from that specified by a user control.

Certain embodiments of the display data processor may control the display refresh rate of the canvas so that a refresh does not occur for every change of dynamic focus. For example as input is provide by an HID such as a mouse the process controller may transmit mouse movement signals or messages to the display data processor which may determine when the mouse has moved a distance greater than some threshold distance. When such mouse movement has been determined only then does the display data processor update the focus position on the canvas and reapply the transformation data about the updated focus position.

The display data processor may partition the canvas into separate non linear editing spaces as is illustrated in . The canvas has a plurality of graphical elements disposed thereon of which elements belong to a routing context. In such cases the view of the graphical data is clearer when the canvas is portioned into multiple sections such as sections and non linear zoom separately applied to each section. It is to be observed from that the components are zoomed in respective sections . In certain embodiments of the present invention a dynamic context may move between sections . The dynamic focus may impact only one section at a time e.g. when a dynamic focus is in section the transform is confined to section . As the dynamic focus enters a new section such as section the transform is applied to section . The present invention is not limited to the number of dynamic focus points nor on the distribution thereof in separate sections .

In certain embodiments of the invention distortion is ameliorated at the boundaries of sections by for example interpolation. For example as illustrated in when a line traverses a boundary from one section to another section the line segments thereof may retain their orientations in respective sections and may be joined by a line segment at the boundary.

Referring to there is illustrated a canvas having disposed thereon a plurality of graphical elements representatively illustrated at component . As illustrated in the figure the display data processor may apply a linear zoom in a linear zoom window that resides in a non linear editing space .

Certain embodiments of the present invention maintain visual states of graphical elements between views such as between non linear views of the canvas at different zoom levels and between linear and non linear views of the canvas . Such maintenance of visual states allows for example highlighted graphical elements of the context to remain highlighted in different views of the canvas. Additionally the display data processor may allow linear viewing operations such as linear zoom in zoom out pan etc. to be performed on the non linear transformed graphical elements.

It is to be understood that although the functional compartmentalization of the exemplary embodiments of facilitates an understanding of the present invention through descriptions thereof such configuration is not essential to practice the present invention. Elements other than those shown and described may be used in place thereof functionality portrayed as being carried out in multiple elements may be combined to be carried out in a single component and elements described as discrete may be distributed across multiple components. Indeed numerous variations alternatives and modifications will become apparent to the skilled artisan upon review of this disclosure and the present invention is intended to encompass such alternative configurations.

Referring to there is illustrated an exemplary non linear editing process consistent with the present invention. Upon entry to the method a context is defined in operation . As described above a context may be defined by for example selection of an editing environment and the inclusion of a graphical element into the context. In operation static focus points are established in the context. In operation the spatial transformation data is applied about the static focus points. At operation it is determined whether the context is a dynamic context. If it is determined that the context is not a dynamic context the process shifts to operation whereby a user task may be performed. If it is determined at operation that the context is a dynamic context the process shifts to operation whereby a change is made to the context such as by the addition or relocation of a graphical element. In operation the location of the dynamic focus point is updated and in operation the coordinates of the canvas are transformed about the updated location of the focus point. It is then determined at operation whether the task using the dynamic context has been completed. If not the process repeats at operation . If it is determined at operation that the task has been completed the process is exited.

Certain embodiments of the present general inventive concept provide for the functional components to manufactured transported marketed and or sold as processor instructions encoded on computer readable media. The present general inventive concept when so embodied can be practiced regardless of the processing platform on which the processor instructions are executed and regardless of the manner by which the processor instructions are encoded on the computer readable medium.

It is to be understood that the computer readable medium described above may be any medium on which the instructions may be encoded and then subsequently retrieved decoded and executed by a processor including electrical magnetic and optical storage devices and wired wireless optical and acoustical communication channels. The computer readable medium may include either or both of persistent storage referred to herein as computer readable recording media and as spatiotemporal storage referred to herein as computer readable transmission media . Examples of computer readable recording media include but not limited to read only memory ROM random access memory RAM and other electrical storage CD ROM DVD and other optical storage and magnetic tape floppy disks hard disks and other magnetic storage. The computer readable recording media may be distributed across components to include such distribution through storage systems interconnected through a communication network. The computer readable transmission media may transmit encoded instructions on electromagnetic carrier waves or signals or as acoustic signals through acoustically transmissive media. Moreover the processor instructions may be derived from algorithmic constructions of the present general inventive concept in various programming languages the mere contemplation of which illustrates the numerous realizable abstractions of the present general inventive concept.

The descriptions above are intended to illustrate possible implementations of the present inventive concept and are not restrictive. Many variations modifications and alternatives will become apparent to the skilled artisan upon review of this disclosure. For example components equivalent to those shown and described may be substituted therefore elements and methods individually described may be combined and elements described as discrete may be distributed across many components. The scope of the invention should therefore be determined not with reference to the description above but with reference to the appended claims along with their full range of equivalents.

