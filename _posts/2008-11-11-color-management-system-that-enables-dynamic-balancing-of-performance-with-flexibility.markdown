---

title: Color management system that enables dynamic balancing of performance with flexibility
abstract: A method and system for allowing a computer system platform the ability to intervene in the content workflow and perform additional color management based upon the content state and any color management policies in place is provided. Profile data from a source is converted to an intermediate color space upon entry into the platform at a choke point. In response to the current color content, profile data, and/or policy controls of the platform, color management input can be managed to change color management data immediately, change color management data at a later point, and/or ignore color management data.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07952760&OS=07952760&RS=07952760
owner: Microsoft Corporation
number: 07952760
owner_city: Redmond
owner_country: US
publication_date: 20081111
---
This application is a divisional of and claims priority to U.S. application Ser. No. 10 683 153 filed Oct. 14 2003 the disclosure of which is incorporated by reference herein in its entirety.

Proper and accurate color management has become an increasing issue. When computers monitors and printers were first developed for home use consumers were satisfied that green grass blue skies and red shirts looked close to what they expected. As time has passed manufacturers of monitor equipment printers digital cameras etc. have quickly adapted to the need to get clearer more accurate color representations produced and or captured. Companies have developed multimedia and graphics related application programs as well. Different application programs for performing different types of color object data conversion can operate on one computer platform at the same time.

With the boom of Internet related business increasing daily companies are eager to ensure that products and information are being accurately represented. Clothing manufacturers distribute millions of catalogs a year. Year after year hundreds of millions of dollars are spent on clothes by consumers who never actually see the end product in person until it arrives at their door. However the number one reason for product return has consistently been the fact that the color shown in the picture whether in a magazine on a billboard on the Internet or in a catalog did not match the color of the end product when it was received. A company that advertises in a magazine has a billboard in a downtown city erected and advertises on television wants to ensure that its company logo is consistent throughout each medium and that each medium portrays an accurate representation of the intended colors. Problems of inadequate continuity in the color management process can lead to millions of lost dollars for companies and consumers alike.

In the medical industry surgeons and other doctors perform highly delicate and sensitive activities and rely on cameras and monitoring equipment. Today surgeons perform certain types of procedures based upon the displayed color of objects on the monitor such as blood tissue etc. However because there is no calibration between the camera and monitor important data is lost. All calibration of hardware is performed at the factory. For example the camera may be able to capture the exact color of objects such as blood while phosphors in monitors cannot display the rich dark colors of blood. Surgeons have to perform color calculations in their head similar to manual adjustments that press operators have to perform on the fly. Even so if all color object data is converted to a standard color space as in some systems monitors that can display the same gamut as the camera still cannot recapture lost data in the standard color space.

Current computer platforms such as the Linux X11 and Microsoft Windows XP allow multiple applications to access hardware for color management purposes. For example Microsoft Windows XP permits twelve 12 different applications to communicate with to hardware elements. An application communicates with a graphics library of the platform the graphics library communicates with hardware coupled to the platform and the hardware implements the desired application operation. For each of the different types of platforms the three systems application graphics library and hardware have been improved in parallel. However these parallel solutions have not been coordinated to ensure a specified and or desired color management schema for any application. The various methods for communicating with hardware elements produce instability and eliminate the possibility for non intervention of a particular application.

Prior color management systems support a single profile based color management solution in sequence that forces conversions into that solution e.g. ColorSync by Apple and ICM by Microsoft . These solutions delay the performance intensive color conversion from source to destination device until the last possible opportunity in order to enable the most flexibility in their platform. This is commonly referred to as a late binding workflow strategy. In the case of a printer that has built in hardware to accommodate in device color management a user would prefer to delay the conversion to let the printer perform all the grunt work. Disadvantages of a late binding workflow strategy include the fact that a single incorrect application setting can corrupt one or more elements in the job and that evaluation of final output data does not occur until the last moment.

Other solutions support a single standard color space into which all input content is converted at the first opportunity in order to maximize performance. This is commonly referred to as an early binding workflow strategy. In the case of a standard inkjet printer a user would prefer to have the application perform all or the majority of color management in order to minimize bandwidth use and processing time. Disadvantages of an early binding workflow strategy include that fact that early binding means larger files that lead to slower performance poorer quality effects and that all color is squeezed into the output gamut and optimized for the output s total response.

There is therefore a need for a color management architecture that allows for color management procedures to be implemented immediately upon entry to a platform deferred to a destination device or anywhere in between the two. An aspect of the described embodiments provides an architecture that allows a user to monitor investigate intervene manage and or correct what color management is being performed where the color management is being performed in the workflow and by whom the color management is being performed. All input color object data is sent through a choke point for a specific operation. All pixels go through one single function the choke point. Choke points are established for multiple types of operations including print display capture load and save operations.

Another aspect of the described embodiments provides for a color management system that converts all color object data received through a choke point to an intermediate color space. Conversion to an intermediate color space through a single contact point allows a user to manage color object data in any desired manner. A user can mix user specific color management input from standard color spaces ICC profiles and non ICC profiles. Application programs can also be used to mix color management input. Policies can be established or predefined to coordinate all color management. The policies can coordinate operation for different users different operations different types of devices different devices different manufacturers different models and different calibrations.

Another aspect of the described embodiments provides for dynamic color gamut mapping in hardware cards and printers. Hardware cards and printers are configured to accommodate changing color conversions initiated by a user by an application program or by a policy.

In the following description of various illustrative embodiments reference is made to the accompanying drawings which form a part hereof and in which is shown by way of illustration various embodiments. It is to be understood that other embodiments may be utilized and structural and functional modifications may be made without departing from the scope of the claimed subject matter.

Profiles component of a computer graphics processing system is broken down into different classes such as input profiles describing scanners and digital cameras display profiles describing monitors and LCD displays and output profiles describing printers and presses . Profiles generally contain information regarding three variables that describe how a device such as printer is operating. These values include the gamut of the device the dynamic range of the device and the tone reproduction characteristics of the device. Other profiles include information regarding instructions for handling out of gamut colors more detailed tone reproduction information or other device specific information.

Interface is a user interface that permits a user of the computer graphics processing system to input color management input parameters to be performed and or executed. Applications may include APIs. Applications are the platform in which various color management variables are handled. Applications have settings and functions that allow a user to specify source and destination profiles and to perform conversions or in the alternative to defer conversion until at the destination device e.g. printer . As shown applications operate with various graphics interface APIs and . Graphics interface APIs may include various multimedia APIs product specific APIs and or vendor specific APIs. Applications of a computer graphics processing system allows any graphics interface API to access hardware elements allowing for each to color manage images and or objects per specific parameters for each that are not known by the other APIs. Under the computer graphics processing system one graphics interface API performs color management solutions completely independent of another graphics interface API or .

By way of example only computer graphics processing system includes three device drivers a digital camera device driver a printer device driver and a display device driver . Each device driver is coupled to applications . Each device driver is specific to each device and allows for operation and compatibility between a device e.g. display and the computer graphics processing system . Coupled to each device driver is a corresponding device digital camera is coupled to digital camera device driver printer is coupled to printer device driver and display is coupled to display device driver .

Under the computer graphics processing system any graphics interface API can access hardware in order to perform and or implement specific color management solutions e.g. procedures policies and or protocols. There is no coordination between the different graphics interface APIs . Therefore a piece of data to be color managed may be color managed a multiple number of times or not at all without allowing a user to know what color management has been done where was the color management performed and or who actually performed the color management.

The described embodiments are operational with numerous other general purpose or special purpose computing system environments or configurations. Examples of well known computing systems environments and or configurations that may be suitable for use with the described embodiments include but are not limited to personal computers server computers hand held or laptop devices multiprocessor systems microprocessor based systems set top boxes programmable consumer electronics network PCs minicomputers mainframe computers distributed computing environments that include any of the above systems or devices and the like.

The described embodiments may be described in the general context of computer executable instructions such as program modules being executed by a computer. Generally program modules include routines programs objects components data structures etc. that perform particular tasks or implement particular abstract data types. The described embodiments may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment program modules may be located in both local and remote computer storage media including memory storage devices.

With reference to an exemplary system for implementing the described embodiments includes a general purpose computing device in the form of a computer . Components of computer may include but are not limited to a processing unit a system memory and a system bus that couples various system components including the system memory to the processing unit . The system bus may be any of several types of bus structures including a memory bus or memory controller a peripheral bus and a local bus using any of a variety of bus architectures. By way of example and not limitation such architectures include Industry Standard Architecture ISA bus Micro Channel Architecture MCA bus Enhanced ISA EISA bus Video Electronics Standards Association VESA local bus and Peripheral Component Interconnect PCI bus also known as Mezzanine bus.

Computer typically includes a variety of computer readable media. Computer readable media can be any available media that can be accessed by computer and includes both volatile and nonvolatile media removable and non removable media. By way of example and not limitation computer readable media may comprise computer storage media and communication media. Computer storage media includes volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Computer storage media includes but is not limited to random access memory RAM read only memory ROM electronically erasable programmable read only memory EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical disk storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can accessed by computer . Communication media typically embodies computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term modulated data signal means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media includes wired media such as a wired network or direct wired connection and wireless media such as acoustic RF infrared and other wireless media. Combinations of the any of the above should also be included within the scope of computer readable media.

The system memory includes computer storage media in the form of volatile and or nonvolatile memory such as ROM and RAM . A basic input output system BIOS containing the basic routines that help to transfer information between elements within computer such as during start up is typically stored in ROM . RAM typically contains data and or program modules that are immediately accessible to and or presently being operated on by processing unit . By way of example and not limitation illustrates operating system application programs other program modules and program data .

The computer may also include other removable non removable volatile nonvolatile computer storage media. By way of example only illustrates a hard disk drive that reads from or writes to non removable nonvolatile magnetic media a magnetic disk drive that reads from or writes to a removable nonvolatile magnetic disk and an optical disk drive that reads from or writes to a removable nonvolatile optical disk such as a CD ROM or other optical media. Other removable non removable volatile nonvolatile computer storage media that can be used in the exemplary operating environment include but are not limited to magnetic tape cassettes flash memory cards digital versatile disks digital video tape solid state RAM solid state ROM and the like. The hard disk drive is typically connected to the system bus through a non removable memory interface such as interface and magnetic disk drive and optical disk drive are typically connected to the system bus by a removable memory interface such as interface .

The drives and their associated computer storage media discussed above and illustrated in provide storage of computer readable instructions data structures program modules and other data for the computer . In for example hard disk drive is illustrated as storing operating system application programs other program modules and program data . Note that these components can either be the same as or different from operating system application programs other program modules and program data . Operating system application programs other program modules and program data are given different numbers here to illustrate that at a minimum they are different copies. A user may enter commands and information into the computer through input devices such as a digital camera a keyboard and pointing device commonly referred to as a mouse trackball or touch pad. Other input devices not shown may include a microphone joystick game pad satellite dish scanner or the like. These and other input devices are often connected to the processing unit through a user input interface that is coupled to the system bus but may be connected by other interface and bus structures such as a parallel port game port or a universal serial bus USB . A monitor or other type of display device is also connected to the system bus via an interface such as a video interface . In addition to the monitor computers may also include other peripheral output devices such as speakers and printer which may be connected through an output peripheral interface .

The computer may operate in a networked environment using logical connections to one or more remote computers such as a remote computer . The remote computer may be a personal computer a server a router a network PC a peer device or other common network node and typically includes many or all of the elements described above relative to the computer although only a memory storage device has been illustrated in . The logical connections depicted in include a local area network LAN and a wide area network WAN but may also include other networks. Such networking environments are commonplace in offices enterprise wide computer networks intranets and the Internet.

When used in a LAN networking environment the computer is connected to the LAN through a network interface or adapter . When used in a WAN networking environment the computer typically includes a modem or other means for establishing communications over the WAN such as the Internet. The modem which may be internal or external may be connected to the system bus via the user input interface or other appropriate mechanism. In a networked environment program modules depicted relative to the computer or portions thereof may be stored in the remote memory storage device. By way of example and not limitation illustrates remote application programs as residing on memory device .

It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used. It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers can be used. The existence of any of various well known protocols such as TCP IP Ethernet FTP HTTP and the like is presumed and the system can be operated in a client server configuration to permit a user to retrieve web pages from a web based server. Any of various conventional web browsers can be used to display and manipulate data on web pages.

Referring to a schematic diagram of a computer graphics processing system in accordance with at least one aspect of the described embodiments is shown. Computer graphics processing system is shown coupled to a digital camera printer and display through corresponding device drivers and respectively. Computer graphics processing system is also shown to include an interface allowing a user of the computer graphics processing system to input color management input parameters to be performed and or executed.

In accordance with at least one aspect of the described embodiments computer graphics processing system includes a graphics engine a graphics library a memory or storage space a profiles component and applications . Graphics engine may be part of an operating system of the host computer. For example the graphics engine may be part of the Graphics Device Interface Plus GDI library of the Windows XP Operating System by Microsoft Corporation. Alternatively the graphics engine may be part of a separate computer software application such as one of the various software products for editing and printing photographic pictures captured by digital cameras. Graphics library and or graphics engine may include a converter to allow for conversion of an image object data to an unbounded intermediate color space such as scRGB. Defined in IEC 61966 2 2 the scRGB color space is designed to fill in the gaps between the color management provided by ICC profiles and the capabilities of sRGB. Graphics engine may take a set of drawing primitives such as vector graphics still images text glyphs and video and renders them to a software or hardware graphics surface. Graphics library may include a collection of functionality that includes a graphics engine with the capability to create manipulate and manage graphics primitives.

Applications allow for robust color management by permitting a user to monitor inspect interrogate correct modify and or ignore a color management workflow. By use of choke points applications assure a user of what color management has been or will be preformed when color management was or will be performed and by whom color management has will or should be performed. A choke point is defined as a predefined contact point for a certain operation where all pixels of color object data are sent through one point. A system may employ a limited set of choke points instead of a single choke point such that pixels for color object data are sent through one of the set of choke points. Each pixels proceeds through one and only one choke point in the workflow but different pixels may go through different choke points.

Under one embodiment there are seven 7 specific operations print operations display operations capture operations load operations save operations copy operations and paste operations. Each operation has an associated API that will operate to facilitate the coordination of pixels through one point of contact the choke point. As such color management of color object data can be coordinated for any application. For each specific operation defined corresponding operations for legacy equipment that cannot operate with the specific APIs allow for implementation with legacy equipment. Further description of choke points is given below.

As shown applications operate with various graphics interface APIs and . As will be described more fully below each graphics interface API operates through a choke point . Because of these choke points a user can determine whether to assign particular policies for color management by graphical application by user by device and or by operation. A policy looks for the implicit profile associated with or the explicitly embedded profile within the imported color object data and compares the profile or lack of profile with the current working space to make color management decisions. Further a user can monitor color management to determine when and where changes occur and or whether to implement additional color management in a workflow at a specific time not just at a destination device e.g. late binding or once upon entry to a platform e.g. early binding.

Referring now to a block diagram of an illustrative embodiment of a color management architecture is shown in accordance with at least one aspect of the described embodiments. The color management architecture illustrated in includes a computer graphics processing system . Computer graphics processing system includes choke points a hybrid workflow generator a converter and a color management system . For the example shown in a destination device such as a printer is coupled to the computer graphics processing system .

Each operation has a specific API associated with it that will operate to facilitate the coordination of pixels through one point of contact the choke point. As such color management of color object data can be coordinated for any application. For each specific operation defined corresponding operations and for legacy equipment that cannot directly operate with the specific APIs allow for implementation with legacy equipment. Legacy equipment have a small set of potential options. The APIs described above can be used to facilitate the coordinate of the pixels in such a manner to be optimally color managed for the legacy device according to the UT policy chosen by the user. Specifically print operation and legacy print operation relate to actions taken to print color object data. Display operation and legacy display operation relate to actions taken to display color object data. Capture operation and legacy capture operation relate to actions taken to capture e.g. by a digital camera color object data. Load operation and legacy load operation relate to actions taken to load e.g. from a storage space color object data. Save operation and legacy save operation relate to actions taken to save e.g. to a storage device color object data.

Operations are coupled through respective choke points . An API is initiated for the respective operation to interface with the computer graphics processing system . Upon entry at choke points the computer graphics processing system can determine whether to defer conversion of the color object data to the destination device or perform the conversion at the application end e.g. within the computer graphics processing system . Should the computer graphics processing system determine that conversion is deferred hybrid workflow generator generates a hybrid workflow in order to defer color conversion until rendering time at the destination device . Alternatively should the computer graphics processing system determine to perform the conversion at the application end converter converts the color object data to an intermediate color space such as scRGB. Performance of the conversion process is optimized because the conversion is happening at specification time and not rendering time.

After color object data is converted to an intermediate color space such as an unbounded intermediate color space color management system can mix management input from standard color spaces ICC profiles and non ICC profiles into the intermediate color space. The color management system can operate in response to user specific inputs application programming and or policies that have been previously established. User specific inputs include initiating a specific addition augmentation correction modification etc. to the captured image data and or merely monitor or inspect the color management actions that have previously been or will further be performed. An application program may be a specific color management operation that a user has established for a program such as Photoshop from Adobe Systems Inc. of San Jose Calif. and or a default color management solution for a particular application.

A policy system allows a user to define and coordinate color management across multiple devices operations and users. Policies may be based upon a particular user currently utilizing the computer graphics processing system a particular operation performed such as a capture operation or legacy print operation a particular type of device such as a digital camera or a scanner a particular device of a particular vendor a particular model of the device and even a particular calibration setting on the model. Color management system includes the ability to implement color management based upon some other criterion and or a default criterion.

Color management system operating upon an intermediate color space through a choke point allows the user to determine what color management has already taken place if any on color object data. Further color management system allows a user to monitor where the converted color object data is going and the color management solutions that are to be implemented by the destination device . Through the computer graphics processing system a user can investigate manage monitor intervene correct or otherwise manipulate or control color object data anywhere within the processing process. The ability to monitor manage investigate intervene correct or otherwise manipulate or control color object data anywhere within the processing process may be done through the user interface policy.

Destination device includes a hardware card . Hardware card whether included in a printer or some other destination device provides for dynamic color gamut mapping. Hardware card is configured to accommodate changing color conversions initiated by a user by an application program or by a policy. Hardware card is configured to operate with the intermediate color space and color management system within the computer graphics processing system . Alternatively hardware card may be embedded into a display itself as opposed to a graphics card in a computer.

If no hybrid workflow is to be created at step color conversion takes place to an unbounded intermediate color space such as scRGB. At step a determination is made as to whether any type of user intervention has been initiated. Should the user decide to implement color management at step the user through interface may color manage the converted image data in any of a number of manners including initiating a specific addition augmentation correction modification etc. to the captured image data and or merely monitor or inspect the color management actions that have previously been or will further be performed.

At step a determination is made as to whether an application program or policy is in effect for the captured image data. If an application program or policy is in effect at step color management is implemented based upon the application program or policy. As described above policies may be based upon a particular user a particular operation performed a particular type of device such as a camera or a scanner a particular device of a particular vendor a particular model of the device and even a particular calibration setting on the model. If an application program or policy is not in effect at step color management is implemented based upon some other criterion and or a default criterion.

It should be understood by those skilled in the art that multiple types of color management may be implemented in accordance with the described embodiments. Color management based upon user intervention may be preceded by accompanied by or followed by color management based on policies that have been established. Further color management may include no performance at all. In addition it should be understood by those skilled in the art that the exemplary illustration as shown and described in may be adapted for other operations such as display print load and save.

While illustrative systems and methods as described herein embodying various aspects of the described embodiments are shown it will be understood by those skilled in the art that the claimed subject matter is not limited to these embodiments. Modifications may be made by those skilled in the art particularly in light of the foregoing teachings. For example each of the elements of the aforementioned embodiments may be utilized alone or in combination or subcombination with elements of the other embodiments. It will also be appreciated and understood that modifications may be made without departing from the true spirit and scope of the claimed subject matter. The description is thus to be regarded as illustrative instead of restrictive on the described embodiments.

