---

title: Persistent synthetic environment message notification
abstract: Persistent synthetic environment message notification is described, including retrieving synthetic environmental data associated with an event occurring within a synthetic environment, identifying one or more formats to configure the synthetic environmental data and to transmit the synthetic environmental data, generating a message comprising the synthetic environmental data, the message being generated based on at least one of the one or more formats, and sending the message comprising the synthetic environmental data to an endpoint.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08626863&OS=08626863&RS=08626863
owner: Trion Worlds, Inc.
number: 08626863
owner_city: Redwood City
owner_country: US
publication_date: 20081028
---
The present invention relates generally to software computer program architecture and data network communications. More specifically techniques for persistent synthetic environment message notification are described.

In conventional computer or online gaming characters are typically created by users for interaction with a virtual world or game. Establish accounts users i.e. players or person playing a game whether a PC desktop online massively multiplayer online e.g. MMO or console game typically specify preferences criteria rules characteristics or other parameters associated with a character its appearance capabilities and other aspects of game play. As characters interact within a game various activities and events typically occur. During game play or within a game environment users often interact with each other by creating lists of other characters or other users often communicating using chat or another messaging feature deployed in the game environment. However conventional solutions are limited often restricting the type and amount of information and the manner in which the information is shared with other players.

In some conventional solutions massively multi player online games i.e. MMOG MMO MMORPG i.e. massively multiplayer online role playing games typically allow users to communicate with each other often using messaging techniques deployed within a game environment or implemented for use within a game environment using one or more specialized servers to provide communication capabilities. However conventional solutions face a constant challenge in attempting to entice additional users to enroll and play a particular game engage in social networks within a game environment or allow limited types of information to be shared among users. Further conventional solutions i.e. games and gaming applications often prevent users from sharing game character or other related data or information outside of a game environment often requiring users to be logged into the game environment. Typically when users are logged into a game environment conventional solutions are not configured to allow observation of another user s activities or events affecting other users e.g. a battle occurring in another part of a virtual world of a game that may not involve both users . Still further conventional games and gaming applications allow game data to be used only within a particular title or game preventing the use of game data with other applications.

In some conventional solutions in game data such as combat logs inventory lists character and game performance data offer features that allow users to observe another user s actions or view another user s character information but only when the observing user is logged into the game environment. In other conventional solutions users must affirmatively and manually push game status statistics level avatar or character information to other users. Further conventional solutions allow basic types of information to be sent only after being manually retrieved by a user. Alternatively conventional pull solutions for retrieving game data and information must be performed by accessing different sources typically requiring users to log into a game or gaming application retrieve desired data configure rules filters preferences or other parameters. Further conventional solutions such as MMO games and gaming applications are technically limiting and unable to provide real time i.e. game time data or information and do not support sending game data outside of the game environment.

Despite these limitations conventional games and gaming applications are becoming increasingly popular and users are sharing information associated with events and activities affecting their characters using conventional social networking applications and websites sites . However using conventional social networking applications to share game related events and activities is labor intensive time consuming and provides the ability to view static time late information. As a conventional example a user shares her character s experiences during a battle within a game environment by manually capturing or recording a segment of animation and posts i.e. uploads stores and configures for access by others pasting it into an email or posting it to a social networking website all of which are time consuming and labor intensive. By sending email IM chat or other types of messages to other users the user is able to invite other users to view the posted content. However the content is created posted and configured through time labor and expertise intensive user efforts which reduces the appeal of games and gaming applications and subsequently limits commercial success and revenue potential.

Thus what is needed is a solution for sharing game data or information without the limitations of conventional techniques.

Various embodiments or examples may be implemented in numerous ways including as a system a process an apparatus a user interface or a series of program instructions on a computer readable medium such as a computer readable storage medium or a computer network where the program instructions are sent over optical electronic or wireless communication links. In general operations of disclosed processes may be performed in an arbitrary order unless otherwise provided in the claims.

A detailed description of one or more examples is provided below along with accompanying figures. The detailed description is provided in connection with such examples but is not limited to any particular example. The scope is limited only by the claims and numerous alternatives modifications and equivalents are encompassed. Numerous specific details are set forth in the following description in order to provide a thorough understanding. These details are provided for the purpose of example and the described techniques may be practiced according to the claims without some or all of these specific details. For clarity technical material that is known in the technical fields related to the examples has not been described in detail to avoid unnecessarily obscuring the description.

In some examples the described techniques may be implemented as a computer program or application application or as a plug in module or sub component of another application. The described techniques may be implemented as software hardware firmware circuitry or a combination thereof. If implemented as software the described techniques may be implemented using various types of programming development scripting or formatting languages frameworks syntax applications protocols objects or techniques including C Objective C C C Adobe Integrated Runtime Adobe AIR ActionScript Flex Lingo Java Javascript Ajax Perl COBOL Fortran ADA XML MXML HTML DHTML XHTML HTTP XMPP and others. Design publishing and other types of applications such as Dreamweaver Shockwave Flash and Fireworks may also be used to implement the described techniques. The described techniques may be varied and are not limited to the examples or descriptions provided.

Techniques for persistent synthetic environment message notification are described including retrieving dynamic content e.g. content data or information generated from game play or character interaction with a synthetic environment i.e. virtual world in real time and generating messages in various output formats formats for receipt by end devices such as mobile phones smart phones personal digital assistants PDAs desktop computers servers notebooks or other data communication device without limitation. In some examples a persistent synthetic environment may be a virtual world game or other simulated environment that when implemented provides a continuous forum for various purposes e.g. gaming combat simulation social networking community or world development and others in which users may interact with various aspects features activities and events using characters and avatars. The described techniques may be used to generate message notifications or messages messages that may be transmitted between shards i.e. server based instances of a synthetic environment i.e. virtual world which may be persistent or otherwise which may be used as copies to implement the synthetic environment game platforms or titles i.e. regardless of whether supported by a single game platform or implementation e.g. console MMO MMORPG MMOG PC desktop and others or across various types of data communication interfaces e.g. application programming interface API which may be configured for communicating data and information between a synthetic environment and another application operating system or operating system . In some examples data and information associated with a synthetic environment may be retrieved from one or more sources in real time or substantially real time and transmitted to other in game i.e. other accounts associated with a given synthetic environment virtual world or game end devices nodes or recipients end devices . In other examples data and information associated with a synthetic environment character account avatar character or any other aspect of a synthetic environment may be transmitted to end devices e.g. mobile phone smart phone PDA mobile computing device desktop computer notebook computer server computing network or any other type of client server node terminal or other networking element configured to receive data inside or outside of a synthetic environment on the Internet World Wide Web web or other data network. In other words a user does not need to be logged into an account within a game virtual or synthetic environment in order to receive data associated with the synthetic environment. The described techniques may be varied in design function implementation order configuration layout format or other technical aspects and are not limited to the examples provided.

For example data may include data associated with a synthetic environment that indicates the inventory allocation status and capabilities associated with a given character s weapons. Using inputs provided to message notification system from any of clients or servers messages may be generated using data and transmitted i.e. sent to any of clients regardless of whether the end device is logged into the synthetic environment using for example a web browser an application browser or the like. As another example data and data may include data associated characters interacting with different regions of a synthetic environment i.e. virtual world implemented using different shards. Message notification system may be configured to generate messages to send to end devices to allow users to view the actions activities performance statistics characteristics attributes events or the like associated with another user. Further message notification system may draw upon dynamic content produced in real time by a synthetic environment implemented by one or more shards i.e. server being in data communication with database using data server being in data communication with database using data server being in data communication with database using data server being in data communication with server using data and the like . Using multi threading and load balancing techniques without limitation to any given technique large volumes of data may be used to produce real time feeds or messages being generated and sent to end devices . As described messages may be generated using a variety of techniques protocols and formats.

Here messages may be generated by message notification system using protocol adapter API to implement messages in various types of protocols and formats e.g. TCP IP UDP WAP WML SMTP Brew Java JavaScript RSS Atom HTML XML DHTML and others without limitation . In some examples protocol adapter API may be a single adapter engine that is configured to translate data from one format to another format. For example data may be stored as XML formatted data in databases and when retrieved by one or more of servers provided to message notification system . Subsequently protocol adapter API transforms the XML formatted data retrieved from databases into a message transmitted as an RSS based character feed i.e. a data or information feed that is related to a given character which may be that of another user set of users e.g. a group of users community of users a guild party team unit fire team squad platoon company battalion regiment regimental combat team brigade brigade combat team division army and the like to end device e.g. a web enabled mobile phone . Thus a user of end device may be able to view data produced from a synthetic environment e.g. the weapon status of another user in real time on a device that may be web enabled but which is not used to log in to the synthetic environment. Messages may be generated and sent to end devices regardless of whether they are logged in or out of the synthetic environment. In other words users may view real time synthetic environmental data i.e. data associated with any aspect feature character or attribute of a synthetic environment e.g. MMO MMOG MMORPG online game console game and others whether received as an RSS feed an email an instant message using any of various types of instant messaging systems or a web based alert that appears as for example a pop up window in a microbrowser provided on device . In other examples messages may be generated differently and are not limited to the techniques shown and described.

Likewise in game world events module may be implemented as part of inputs module and configured to provide data associated with an event occurring in a synthetic environment i.e. virtual world to notification system . Events affecting a synthetic environment e.g. a battle occurring in a given region of a synthetic environment sunset sunrise or any other type of event that may bear general or specific interest for a user may be provided by in game world events module . In some examples community events module may be implemented and configured to provide data or information associated with a friends or guild list news list guild news or news data or information associated with game play or a character or a synthetic environment in general. Further system notifications module may be implemented and configured to provide data or information associated with a character account e.g. impending account expiration forgotten or incorrect password maintenance messages or other messages generally related to a synthetic environment i.e. game system virtual world and the like . Still further other notifications module may be implemented and configured to provide data or information that may be included in messages generated by message notification system such as messages from third party applications other than a game system or platform implementing a synthetic environment. As an example servers databases and notification system with protocol adapter API may be a game system or platform that is configured to implement a synthetic environment. As an example of other notifications that may be provided by other notifications module third party applications such as online social networking websites may generate messages associated with a character s account and using the techniques described herein be included with messages that are generated by message notification system . Data gathered filtered and sent by modules may be generated from a variety of sources in real time or substantially real time and once identified based on preferences rules filters or other parameters specified within an account sent to message notification system . In other examples the above described inputs module and modules may be implemented differently and are not limited to the number type configuration implementation function design layout architecture or other aspects of the examples shown and described.

In some examples notification router provides logic configured to control routing of data and the generation of messages i.e. message notifications using data or information from inputs module directing the routing of the messages to end devices e.g. end devices using formatting provided by protocol adapter APIs in outputs module . In other words notification router provides control signals and instructions that direct the operation of environmental data retrieval system user input subscriptions module and user output preferences module to generate messages based on privacy controls and admin controls for output by outputs module as described in greater detail below in connection with . Further notification router may be implemented as logic configured to determine what data or information associated with a synthetic environment character character account or the like is sent and the manner e.g. how messages are generated for a given output format or media in which the data or information is sent. In some examples notification router may include a set of rules that are configured as a rules based logic engine for message notification system . In other examples notification router may be implemented as a data switch that is configured to interact with user input subscriptions module to retrieve or send synthetic environment e.g. game data to in and out of game destinations. In still other examples notification router may be implemented differently.

Here environmental data retrieval system may be implemented to provide a software based mechanism in some examples for retrieving data or information from a synthetic environment. For example data associated with world based events e.g. environmental conditions events activities or other occurrences may be retrieved by environmental data retrieval system and sent to notification router for inclusion with a message generated by the latter and forwarded to outputs module . Environmental data retrieval system may also retrieve any type of data or information associated with a synthetic environment such as a virtual world game environment game system or the like regardless of implementation e.g. shards server based client server client installed and others . Information such as time date place and other environmental characteristics may be provided by environmental data retrieval system to notification router or other elements as shown.

In some examples users may provide various types of input e.g. preferences rules parameters filters privacy options administrative controls and others using user input subscriptions module user output preferences module privacy controls and admin controls . For example user input subscriptions module may be implemented and used to identify what types and sources of information a user wishes to have accessed for generating messages by message notification system . As an example a user may want to specify i.e. using user input subscriptions module that data or information associated with her character a game world events and others is accessed and used by notification router to generate messages. As another example user output preferences module may be configured to identify output formats including delivery media e.g. email instant messages in game notifications out of game notifications e.g. email instant messages emails including hyperlinks links to web based media e.g. animation clips or segments for example of a battle in which a character fought for delivering or receiving data or information associated with a synthetic environment. Privacy controls may in some examples be implemented to allow the entry of rules or filters that prevent data or information from being sent to undesirable recipients or end devices e.g. end devices . Privacy controls may also be implemented to control how messages are sent preventing unauthorized access to sensitive data such as account information payment information user profile information and the like. Admin controls may in some examples include instructions or other features that enable users to direct the establishment use access authentication or other aspects of an account associated with a synthetic environment. In other examples notification router environmental data retrieval system user input subscriptions module user output preferences module privacy controls and admin controls may be implemented differently than as shown and described.

As an example of the functionality and features provided by implementing the above described elements a user may be interacting with a historical role playing first person shooter FPS or role playing game RPG implemented using a synthetic environment configured to appear as South Africa in 1879. In this example a user s character may have an avatar that appears as a British soldier in Company B the 24Regiment of Foot which is combating a Zulu warrior at the defense of Rorke s Drift. During her game play i.e. interaction with the synthetic environment a user may wish to share her experience with other users who are either currently logged into the game i.e. in game or logged out of the game i.e. out of game including data or information regarding her character her character s ammunition inventory weapons status an animation segment showing a given scene in the battle or the like. Environmental data retrieval system may be used to access and send data associated with the character s game play to notification router . As an example of in game data or information that may be shared the user may be coordinating with other users i.e. friends members of the same unit guild or other type of group . In game shared data or information may include in this example her weapons and unit status indicating that the user is running low on ammunition and about to be overrun providing a pop up window to another user in a different region of the synthetic environment who is part of a relief column. As an example of out of game shared data or information a user may email an animation clip or segment or a link to an animation clip or segment that allows another user who is not logged into the game to view the former s experience which could result in the other user joining the game to bring his character to the rescue of the beleaguered user. In other examples different in game and out of game messages may be generated and are not limited to the examples described above. User input subscriptions module may be configured to allow message notification system to provide data or information from a weapons database character health database and game play database. Using output preferences provided by user output preferences module notification router generates messages formatted in SMTP for email and WAP WML for mobile end devices e.g. smart phones PDAs mobile phones and the like . Further privacy controls module and admin controls module indicate that data or information associated with the given user should only be sent to members of her guild. Thus messages are generated that indicate the user s plight within the synthetic environment are sent to trusted recipients i.e. members of the user s guild regardless of whether logged into the game or out of the game. As another example a user may be participating in an auction or other type of marketplace within a synthetic environment e.g. bidding on a given item . By indicating preferences for receiving information related to the auction using user input subscriptions module and generating email messages to the user s email account using user output preferences module the user may receive one or more intermittent or continuous emails regarding the status of the auction and in some examples receive opportunities to direct her character s actions within the synthetic environment while not in game. The above described examples may be varied further and are not limited to the descriptions provided. Still further notification system and the above described elements may be varied in design function limitation operation configuration or implementation and are not limited to those provided.

Here protocol format determination module may be configured to determine indicated output formats based on user preferences. Cooperatively working with logic engine using data bus i.e. one or more direct or indirect connections that enable data communication between the elements shown in application messages may be generated and output using communications interface module and shard interface module . In some examples communications interface module allows communication of data and information from message notification application to other application operating systems computing environments or the like. Further shard interface module may in some examples be implemented to allow data or information to be retrieved from or sent as messages to one or more shards without limitation. Database may be a single or multiple databases data marts data warehouses storage area networks SAN or other type of data storage retention facility that is configured to store and access data associated with messages data communication protocols application programming interfaces and others. In some examples database may be implemented using one or more databases game databases data warehouses or others to provide a primary source of synthetic environmental data e.g. data provided from a game database aggregated sources of synthetic environmental data e.g. data provided using a data warehouse or to queue and temporarily store messages that are not delivered transmitted or explicitly stored by message notification system e.g. message notification system or the like for subsequent delivery or retrieval. With regard to explicit storage by message notification system or the like for subsequent delivery or retrieval as an example an event occurring within a synthetic environment may generated synthetic environmental data that is received by message notification system or the like but stored instead of being delivered. Conditions that may result in storage of synthetic environmental data for later retrieval and delivery may include user or system specified parameters that instruct application to store rather than deliver synthetic environmental data a destination or recipient being unavailable an event is delayed that does not require delivery of the synthetic environmental data immediately e.g. an event within the synthetic environment that is scheduled to occur at some future date and time and others. In other words synthetic environmental data may be retrieved from database or directly from a synthetic environment. In other examples application and the above described elements may be varied in design function layout configuration implementation structure application architecture or other aspects without limitation to the examples shown and described above.

According to some examples computer system performs specific operations by processor executing one or more sequences of one or more instructions stored in system memory . Such instructions may be read into system memory from another computer readable medium such as static storage device or disk drive . In some examples hard wired circuitry may be used in place of or in combination with software instructions for implementation.

The term computer readable medium refers to any tangible medium that participates in providing instructions to processor for execution. Such a medium may take many forms including but not limited to non volatile media and volatile media. Non volatile media includes for example optical or magnetic disks such as disk drive . Volatile media includes dynamic memory such as system memory .

Common forms of computer readable media includes for example floppy disk flexible disk hard disk magnetic tape any other magnetic medium CD ROM any other optical medium punch cards paper tape any other physical medium with patterns of holes RAM PROM EPROM FLASH EPROM any other memory chip or cartridge or any other medium from which a computer can read.

Instructions may further be transmitted or received using a transmission medium. The term transmission medium may include any tangible or intangible medium that is capable of storing encoding or carrying instructions for execution by the machine and includes digital or analog communications signals or other intangible medium to facilitate communication of such instructions. Transmission media includes coaxial cables copper wire and fiber optics including wires that comprise bus for transmitting a computer data signal.

In some examples execution of the sequences of instructions may be performed by a single computer system . According to some examples two or more computer systems coupled by communication link e.g. LAN PSTN or wireless network may perform the sequence of instructions in coordination with one another. Computer system may transmit and receive messages data and instructions including program i.e. application code through communication link and communication interface . Received program code may be executed by processor as it is received and or stored in disk drive or other non volatile storage for later execution.

Although the foregoing examples have been described in some detail for purposes of clarity of understanding the invention is not limited to the details provided. There are many alternative ways of implementing the invention. The disclosed examples are illustrative and not restrictive.

