---

title: Audio stream notification and processing
abstract: Various embodiments provide techniques for allowing an application to opt out of system default audio stream behavior, as well as techniques for notifying applications on a computing device that a communication audio stream has been initiated. The techniques may differentiate between communication-related audio streams and audio streams that are not communication-related. In some embodiments, an application may register to receive notification that a communication stream has been initiated. The application may be configured to comply with system default audio stream handling policies, or it can perform custom behavior in response to the audio stream notification. In some embodiments, an application may register for filtered or unfiltered notification. In a filtered notification scenario, an application is notified that a communication stream has been initiated when an audio stream associated with the application has not already been modified in response to the initiation of a different communication stream. In an unfiltered notification scenario, an application/process is notified whenever a communication stream is been initiated.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07945440&OS=07945440&RS=07945440
owner: Microsoft Corporation
number: 07945440
owner_city: Redmond
owner_country: US
publication_date: 20080626
---
A modern computing device is typically capable of performing a variety of different tasks often simultaneously or pseudo simultaneously. This capability frequently results in competition for computing device resources. With reference to the competition for audio input output resources of a computing device some existing audio resource management solutions utilize an audio stream attenuation behavior referred to as ducking . Ducking refers to the attenuation of an audio stream s volume in response to a specific event or criteria. In one example an automobile is configured to detect an incoming telephone call to an occupant of the automobile. When the automobile detects an incoming telephone call if any audio devices are rendering audio signals inside of the automobile the automobile will automatically duck the audio signal e.g. reduce the audio signal volume by a specified amount such as 50 so that the telephone can be heard and an occupant of the vehicle can converse over the telephone without undue interference from the audio signal.

While existing audio resource management solutions suffice for such simple scenarios they suffer from a number of drawbacks that make them unsuitable for more complex or nuanced applications. First a particular solution often only works with a specific application or group of applications. Second the solutions are often inflexible and provide few options with respect to the management of audio resources.

Various embodiments allow an application to opt out of system audio stream behavior. For example a particular system may include a default system behavior that attenuates non communication audio streams in response to a communication audio stream being initiated. If an application has opted out of the system audio stream behavior a non communication audio stream associated with the application will not be attenuated in response to the communication audio stream being initiated.

Some embodiments notify an application and or process on a computing device that a communication audio stream has been initiated. In such embodiments an application process may register to receive notification that a communication audio stream has been initiated. In response to the notification an application may initiate one or more custom audio stream behaviors on an audio stream owned by the application.

In some embodiments an application process may register for filtered or unfiltered notification. In a filtered notification scenario an application process is notified that a communication audio stream has been initiated when an audio stream associated with the application process has not already been modified in response to the initiation of a different communication audio stream. In an unfiltered notification scenario an application process is notified whenever a communication audio stream has been initiated even if the stream is not owned by the application process.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used to limit the scope of the claimed subject matter.

Various embodiments notify applications and or processes on a computing device that a communication audio stream has been initiated. For discussion purposes the term application is used herein to refer to any number of different processes software programs executable files and so on and is not intended to limit the scope of the claimed subject matter. An audio stream may consist of audio data in digital form and in some examples the digital audio data is encoded via pulse code modulation PCM . The audio stream notification may be configured to differentiate between a communication related audio stream communication stream and an audio stream that is not communication related non communication stream . Generally stated a communication stream includes a capture stream that transports captured audio data and a render stream that transports audio data to be rendered. Also a communications stream typically includes audio data that is voice related e.g. voice chat phone calls voice mail and so on . A non communication stream generally does not include both a capture stream and a render stream. An audio stream may include metadata that describes aspects and attributes of the audio stream such as if the audio stream is a communication stream or a non communication stream.

In some embodiments an application may register to receive notification that a communication stream has been initiated. The application may be configured to comply with system default audio stream handling policies or it can opt out of the system default audio stream handling policies and optionally implement its own custom behavior . One example system default audio stream handling policy specifies that when a communication audio stream is initiated all non communication audio streams are to be ducked by a specific percentage while the communication audio stream is active. In some embodiments an application may register for filtered or unfiltered notification. In one example of a filtered notification scenario an application is only notified that a communication stream has been initiated when an audio stream associated with the application has not already been modified e.g. via a default audio stream handling policy in response to the initiation of a different communication stream. In an example of an unfiltered notification scenario an application process is notified whenever a communication stream is initiated even if the stream is not owed by the application process.

In the discussion that follows a section entitled Operating Environment is provided and describes an environment in which one or more embodiments can be employed. Following this a section entitled Example Processes is provided and describes processes that can implement various principles and techniques discussed herein.

The audio input output devices provide audio input output functionality for the computing device and can include a speaker a microphone a sound card and so on.

Illustrated as part of the computing device are one or more communications applications one or more non communications applications and an operating system . Examples of communications applications include applications that are operable to capture and render audio signals such as Voice over Internet Protocol VoIP applications certain Internet messaging applications interactive gaming applications and so on. Non communications applications typically include applications that render audio such as media player applications system notification applications or processes and so on. The operating system may include one or more default policies for handling audio streams e.g. communication streams and or non communication streams for the computing device.

The computing device also includes an audio service and the audio service includes an audio stream manager and a notification tool . The audio stream manager is configured to perform a variety of tasks for the computing device such as tracking audio streams maintaining a list of audio stream identifiers detecting if an audio stream is a communication stream or a non communication stream and performing audio stream attenuation. In response to the initiation of a communication stream the audio stream manager may identify one or more audio streams that are to be ducked and perform ducking on the audio stream s . The notification tool is configured to handle notification registration for the audio service and to send notifications to applications that have registered for notification.

In some embodiments a particular application may not be configured to identify its audio stream as a communication stream or a non communication stream. In these embodiments the audio service and or other functionality of the computing device may be configured to recognize the application and flag the application s audio stream s as a communication stream or a non communication stream. For example the audio service may maintain a list of applications and for one or more of the applications an identifier that identifies the application as utilizing a communication stream and or a non communication stream.

An audio engine is stored on the computer readable media and includes a mix buffer and one or more audio processing objects APOs . Among other tasks the audio engine acts as a transport component for transporting an audio stream from an application to an audio device. The mix buffer combines audio streams and makes the combined streams available to an audio device. Each of the audio processing objects is configured to perform one or more different signal processing tasks on an audio stream such as stream attenuation audio rate modulation channel mixing e.g. increasing and or decreasing the number of channels in a stream and or any other suitable form of audio signal processing.

Block determines if the application has previously opted out of system default ducking behavior. For example a system audio service may specify a system default ducking behavior that automatically attenuates the volume of non communication streams by a predetermined amount e.g. 30 50 and so on when a communication stream is initiated.

If the application has not opted out of system default ducking behavior No the default ducking behavior is applied to the application s non communication stream. If the application has opted out of system ducking behavior the default ducking behavior is not applied to the application s non communication stream. At the system audio is rendered including the application s non communication stream and the communication stream from the external source. In some embodiments an application can opt out of default system ducking behavior by calling an opt out application programming interface API that notifies the system that the application is opting out of the default behavior. The API may be provided to the application by an audio service.

Block initiates an audio stream. Block determines that the audio stream is a communication audio stream. Block notifies the application that the communication audio stream has been initiated. In other example implementations Block may determine that the audio stream is a non communication audio stream and thus the application would not be notified as in block . Block applies one or more application specific behaviors to an audio stream owned by the application. In one or more embodiments the application specific behavior can be configured by a user. Block terminates the communication audio stream and block notifies the application of the communication audio stream termination.

In one example when a communication stream is initiated an audio service may determine that one or more active audio streams are to be ducked. If an audio stream associated with the application has not already been ducked e.g. in response to the initiation of another communication stream and the application has registered for filtered notification the application would be notified that a communication stream has been initiated and that the audio stream associated with the application is going to be ducked. However in this example if the audio stream has already been ducked and the application has registered for filtered notification the application would not be notified of the communication stream initiation. As discussed above the application can submit to system default ducking behavior and or the application can perform custom audio stream behavior in response to the initiation of a communication stream.

If the application has registered for unfiltered notification the application is notified of the initiation of a communication stream e.g. that a communications application is about to begin delivering audio signals to the communication stream whether or not an audio stream owned by the application has been modified in response to the initiation of another communication stream. In one embodiment the notification can include a data packet generated by the audio service. The data packet may include a callback method that informs the application that the communication stream has been initialized and that the audio stream is about to be created. Unfiltered notification may allow an application to perform custom audio stream behavior s in response to communication stream initiation.

Returning to the discussion of the flow diagram if the application has registered for filtered notification Filtered is it determined at if an audio stream associated with the application has already been modified in response to an initiation of another communication stream. In some embodiments the modification may include one or more system default behavior modifications that occur in response to the initiation of a communication stream such as non communication stream ducking. If the audio stream has not been modified at the application is notified of the initiation of the communication stream. If it is determined at that the audio stream associated with the application has already been modified in response to an initiation of another communication stream then at the application is not notified of the initiation of the communication stream.

Returning to act if the application has registered for unfiltered notification Unfiltered then at the application is notified of the initiation of the communication stream. In an unfiltered notification scenario the application is notified of the initiation of a communication stream even if an audio stream associated with the application has already been modified in response to an initiation of another communication stream. While process is discussed with reference to communication stream initiation the process may also be applied to notification of communication stream termination.

The processes and scenarios discussed herein are discussed in reference to audio stream ducking. However ducking is used for purposes of an example audio stream behavior and it is contemplated that the processes and techniques discussed herein are applicable to a variety of different audio stream behaviors.

Various techniques may be described herein in the general context of software or program modules. Generally software includes routines programs objects components data structures and so forth that perform particular tasks or implement particular abstract data types. An implementation of these modules and techniques may be stored on or transmitted across some form of computer readable media. Computer readable media can be any available medium or media that can be accessed by a computing device. By way of example and not limitation computer readable media may comprise computer storage media .

 Computer storage media include volatile and non volatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Computer storage media include but are not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by a computer.

The above described principles and techniques provide audio stream notification and audio signal processing for a computing device. Although the subject matter has been described in language specific to structural features and or methodological acts it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather the specific features and acts described above are disclosed as example forms of implementing the claims.

