---

title: Automated criterion-based grouping and presenting
abstract: Interrelated items in a complex item set (such as a set of components in a complex software architecture) may be difficult to present in a manner that facilitates an understanding and evaluation of the item set, due to the amount of information and the difficulty in automatically discerning the organization of the item set. A set of criteria may be utilized to form criterion groups to which items matching respective criteria may be automatically assigned. Further grouping assignments may be achieved by identifying an ungrouped item that is associated with a grouped item. Such techniques may be applied in many variations to yield a representation of the item set, and a presentation of the item set to a user, that aggregates similar items and interrelationships, thereby promoting an understanding and analysis of the structure and organization of the item set while reducing the user involvement in the generation of same.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08788497&OS=08788497&RS=08788497
owner: Microsoft Corporation
number: 08788497
owner_city: Redmond
owner_country: US
publication_date: 20080915
---
Many computing scenarios involve the presentation of many related items in an item set such as the components of a software architecture devices communicating over a network and related elements in a relational database. Where the associations between items are undirected e.g. a peer relationship between two computers on a network the item set may comprise an undirected graph. Alternatively some or all of the associations are directed such as a superior subordinate relationship between two items e.g. a server client relationship between two computers on a network and the item set may comprise a partly or wholly directed graph. The items may be presented to a user such as in a software architecture diagram a network map and a visual relational database schema. The presentation of such items may facilitate the user in exploring various aspects of the item set such as the types of items contained therein the relationships thereamong and the hierarchy established by the directed relationships among items.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key factors or essential features of the claimed subject matter nor is it intended to be used to limit the scope of the claimed subject matter.

In many scenarios an item set may comprise a large number of items. For example a software architecture for a complex application such as an operating system may comprise thousands of interrelated components a network map may contain several thousand devices distributed across a global scale and a database may comprise thousands of tables stored procedures user accounts etc. having thousands of relationships with various semantics.

In such scenarios it may be difficult to analyze and present information about the complex relationships. The analysis may be complicated by the difficulty in determining the relative significance of various items and the semantics of the relationships and a presentation of the complex item set may overwhelm a user with excessive information that hinders an understanding of the overall structure of the item set and the relationships of the items. It may be even more difficult to analyze the item set or generate such a presentation in an automated manner because a comparatively uninformed automated process may be unable to deduce structural and semantic significance without extensive trial and error and user input.

A technique for improving the analysis and presentation of information about such item sets involves an automated grouping of the items according to criteria. For example the components of a software architecture representing an operating system may be grouped according to the subsystems managed thereby such as memory management file system process scheduling and execution and networking and the devices comprising a network of a corporation may be grouped by the business groups utilizing such devices and the locations thereof. An automated process may endeavor to organize the items of the item set by forming groups representing respective criteria and by assigning items matching the criteria to respective criterion groups. This process may be extended by identifying ungrouped items that are related to grouped items and placing them in the same group as the ungrouped items. This grouping may continue e.g. in an iterative process until the groupable items have been assigned to groups and the remaining items may be assigned to an unassigned items group. This automated grouping may yield structural information about the nature and hierarchical organization of the item set that may be of direct use to a user or analytic process. Alternatively or additionally a presentation of the information e.g. a visual map may be automatically generated that utilizes the grouping information to structure the item set and to produce a top level presentation that factors the items into general groups based on commonalties and relationships. Such automated techniques may therefore facilitate analyses and presentations of complex item sets according to a comparatively simple set of criteria and with little or no user involvement.

To the accomplishment of the foregoing and related ends the following description and annexed drawings set forth certain illustrative aspects and implementations. These are indicative of but a few of the various ways in which one or more aspects may be employed. Other aspects advantages and novel features of the disclosure will become apparent from the following detailed description when considered in conjunction with the annexed drawings.

The claimed subject matter is now described with reference to the drawings wherein like reference numerals are used to refer to like elements throughout. In the following description for purposes of explanation numerous specific details are set forth in order to provide a thorough understanding of the claimed subject matter. It may be evident however that the claimed subject matter may be practiced without these specific details. In other instances structures and devices are shown in block diagram form in order to facilitate describing the claimed subject matter.

Many computing scenarios involve an analysis or presentation of an item set comprising a large number of associated items. For example a software architecture for an operating system may involve thousands of interoperating components with many types of dependencies and many structural nuances. Similarly a network architecture may involve thousands of components such as servers workstations storage components routers firewalls and transceivers that cooperatively manage many types of data flow through the network over a wide geographic region. A relational database such as a data warehouse may also comprise thousands of tables storing billions of interrelated records that may be accessed by many applications and processes through many protocols stored procedures and security features such as user accounts and code access privileges.

Such item sets may be the focus of many types of analysis. For example a software engineer may seek to understand the organization and interactions of the components of a software architecture a network engineer may investigate the hierarchy of a complex network and a database engineer may wish to validate and optimize the structure of a relational database. Such tasks may involve various statistical and heuristic computations e.g. normalization assessment of a relational database and code profiling of the components of a software architecture. Accordingly analysts may wish to understand and evaluate various aspects of such item sets at different levels of detail such as a top level view of the basic elements of the item set or the items within a particular semantic portion of the item set e.g. by identifying and evaluating only the components of a software architecture that are involved in memory management. For example in the exemplary item set of a software engineer may wish to identify a layering of software components.

However such analyses may be complicated by the complexity and volume of information comprising the items of the item set and the relationships thereamong. For example while reviewing the interrelated components in the exemplary item set a software engineer may not have access to the well organized hierarchical diagram and semantic information presented in e.g. where the software engineer is attempting to understand undocumented or poorly documented software or reverse engineer a software architecture without access to the source code etc. The software engineer might be able to differentiate the components and to determine functional dependencies e.g. by utilizing code profiling tools that measure the flow of process and thread execution through various software modules and map inter component dependencies. However this information may be difficult to translate into a plain understanding of the structure of the item set . For example illustrates a functional dependency table that may be produced by a code profiling tool. While the information included in the functional dependency table includes all of the significant dependencies illustrated in the layout of the hierarchical information and flow of the software architecture are obscured by the amount and organization of the information. This difficulty may increase exponentially as the complexity of the item set grows to encompass thousands or millions of diverse items having many nuanced types of interrelationships. Therefore it may be very difficult to extract the more significant architectural information and deriving the layout of may involve a large amount of inefficient trial and error computation and or user participation in identifying significant sets of components and relationships. Similar complexities may be encountered in other scenarios involving similar sets of interrelated items such as devices comprising a vast broadly distributed network and a large data warehouse comprising many relational databases and data driven applications.

Some techniques for addressing the complexities of such scenarios involve an automated grouping of items in the item set based on selected criteria. Such criteria may be specified by a user and or derived from another automated process e.g. a code profiling technique that selected particularly heavily utilized components. A set of criterion groups may be formed each specifying a criterion for items assigned to the criterion group. The items matching one of the criteria may be assigned to the respective criterion group but a number of items may not match any criteria. Therefore the associations of the grouped items may be considered and an ungrouped item related to a grouped item may be assigned to the same criterion group as the grouped item. This process may continue e.g. for a desired number of enumerations or until all groupings that may be made in this manner have been made. Ungrouped items may then be handled in many ways e.g. by assigning them to an ungrouped items group comprising the items that neither match any of the criteria nor are related directly or indirectly to items that match such criteria. The grouping information may then be used in the analysis of the item set and may be used to present the items of the item set e.g. as a visual layout that may be cognizable to a user.

After the assigning in the first state of several items remain ungrouped. Accordingly and as illustrated in the second state of the associations of the ungrouped items may be examined to determine relationships with grouped items that may permit associative grouping. For example ungrouped Component A is associated with Component F which has been assigned to the second criterion group accordingly Component A may be also assigned to the second criterion group thereby representing an indirect functional dependency on Component C through Component F . Similarly ungrouped Component L is associated with Component B which is assigned to the first functional group and therefore in the second state Component L is also assigned to the first functional group .

This associative grouping may continue until a stop condition is detected e.g. either no more associative grouping may be attained or a desired number of grouping evaluations have been performed. At the end of this process some items may remain ungrouped e.g. Component C and Component D as lowest level software components do not have any functional dependencies and Component G is not functionally dependent on any other component. These ungrouped items may be grouped together in an ungrouped items group such as illustrated in the third state of . Additional techniques may also be applied e.g. the associations among units may be extrapolated as criterion group associations among criterion groups and may be included in the presentation. It may be appreciated that the grouped presentation of the items of may be much more informative as to the hierarchical structure flow and dependencies of the item set than the functional dependency table of . Moreover as illustrated in this associative grouping may be achieved in an automated manner through the specification of only a few basic criteria thereby reducing the input of human analysis and avoiding the inefficiency of trial and error automated evaluation.

The techniques discussed herein may be devised with variations in many aspects and some variations may present additional advantages and or reduce disadvantages with respect to other variations of these and other techniques. Moreover some variations may be implemented in combination and some combinations may feature additional advantages and or reduced disadvantages through synergistic cooperation. The variations may be incorporated in various embodiments e.g. the exemplary method of and the exemplary method of to confer individual and or synergistic advantages upon such embodiments.

A first aspect that may vary among implementations of these techniques relates to the scenario in which the techniques may be utilized. As a first example the item set and associated items contained therein may involve many computing scenarios such as interoperating components in a software architecture devices communicating over a network and elements in a database system. The associations may also comprise many types of relationships between items such as e.g. a dependency of a grouped node on an ungrouped node a dependency of an ungrouped node on a grouped node a chronological ordering a descendant relationship of versions of a software resource in a version controlled software project a lineage of inherited class types in a software library etc. The grouping techniques described herein may be utilized to organize and present the items of such complex systems for use by users and other automated processes. As a second example the criteria used to define the groups may be defined by a user synthesized based on user actions and or preferences and or specified by another automated process. As a third example the presenting may comprise many forms of presentation such as a visual layout rendered on a display a human readable text description provided to a user and an organized data file to be utilized by other processes. Those of ordinary skill in the art may devise many scenarios to which these techniques may be applied and many uses for the products thereof.

A second example that may vary among embodiments of these techniques relates to the manner of assigning items to criterion groups. As a first example the relationship of items to groups may be mutually exclusive or may be nonexclusive such that an item matching several criteria or associated with items matching such criteria may be assigned to several criterion groups. The criteria may also be specified with varying priorities such that an item that might be assigned to two criterion groups is preferentially assigned to the criterion group for a first criterion of higher priority than that of a second criterion of lower priority etc.

As a second example the process of assigning items to groups may be organized in many ways. In a first embodiment a first criterion may be evaluated more than once and even to exhaustion before evaluating a second criterion. For instance the first criterion may be evaluated against the items of the item set to assign the items matching the criterion to the respective first criterion group. These grouped items for the first criterion may then be examined for associations with ungrouped items which may also be added to the first criterion group and evaluated in turn etc. After evaluating the first criterion the second criterion may be evaluated against the remaining ungrouped items etc. In a second embodiment and as illustrated in the evaluation may be structured as a series of iterations with all criteria evaluated together against the ungrouped items during an iteration. For instance the grouped items for a first criterion group are evaluated once to identify associated ungrouped items that may be assigned to the criterion group and then the grouped items of a second criterion group may be similarly evaluated etc. When all of the criterion groups have been evaluated the first criterion group may be evaluated in a second iteration followed by the second criterion group etc.

One particular scenario that may arise during a parallel iterative evaluation of criteria involves an identification of an item that may be assigned to two criterion groups in the same iteration. For example and with reference to during the second iteration of the assigning such as existing at the beginning of the second state of ungrouped Component L may be assigned either to the third criterion group representing components dependent on Component D or to the first criterion group representing components dependent on Component K . Component L therefore represents an ungrouped but multiply assignable item. Many techniques may be devised to choose among several groups. In a first such embodiment the criteria may be prioritized so that the multiply assignable item may be preferentially assigned to a higher priority criterion group instead of a lower priority criterion group during an iteration. In a second such embodiment a multiply assignable item may be aliased to produce a plurality of references to the same item such that a reference may be assigned to the respective groups to which the item is assignable. In a third such embodiment the choice of criterion groups may be based on voting such as by counting the items of the respective criterion groups with which the ungrouped item is associated and assigning the ungrouped item to the criterion group having more associated items. Turning again to Component L is associated with the third criterion group only through Component J but is associated with the first criterion group through associations with both Component B and Component E . Because Component L is associated with more items in the first criterion group than the third criterion group the former criterion group may be selected to complete the voting process.

As a third example of this second aspect the end condition may be selected in many ways. For example the items may be processed until no more ungrouped items may be associated with a group or until a certain percentage of the items are grouped or until a certain number of iterations has been completed etc. Those of ordinary skill in the art may devise many techniques for formulating the evaluation and grouping of items while implementing the techniques discussed herein.

A third aspect that may vary among embodiments of these techniques relates to the handling of unassignable items such as those that neither satisfy any criteria nor are associated with any grouped items. As a first example the unassignable items may simply be left ungrouped and may be presented as ungrouped items alongside the criterion groups. As a second example the unassignable items may be assigned to an unassigned items group. In one such embodiment the unassigned items group may be formed before the assigning e.g. while forming the criterion groups. All of the items may initially be placed in the unassigned items group and may be removed from the unassigned items group upon assignment to a criterion group. The items remaining in the unassigned items group upon completing the assigning may therefore be treated as unassignable items. In another embodiment and as illustrated in the third state of the unassigned items group may be populated after the assigning with items that are not associated with a criterion group. Those of ordinary skill in the art may devise many ways of handling unassignable items while implementing the techniques discussed herein.

A fourth aspect that may vary among implementations of these techniques relates to the processing of criterion groups based on the assignment of items. While the assignment of items may provide useful information about the commonalities and relationships of items additional information may be derived that may provide additional utility. As a first example associations of items among criterion groups may be extrapolated as associations among the criterion groups as encompassing entities. One technique for achieving this extrapolation involves forming criterion group associations representing associations between criterion groups. illustrates an exemplary scenario involving a first representation of an item set comprising associated items that are grouped according to criterion as described herein. This representation includes a first criterion group to which Component A and Component B are assigned and a second criterion group to which Component C and Component D are assigned. Component A has associations possibly representing functional dependencies with Component C and Component D and Component B also has associations with Component C and Component D . However the large number of associations may complicate the evaluation of the grouping and the hierarchy of the item set. Instead a second representation may be devised wherein the associations are extrapolated as a criterion group association between the first criterion group and the second criterion group indicating that at least one item in the first criterion group is associated with at least one item in the second criterion group . In one such embodiment upon identifying a first item of a first criterion group associated with a second item of a second criterion group a criterion group association may be created between the first criterion group and the second criterion group. This second representation may provide sufficient information about the organization of the criterion groups while reducing extraneous and potentially redundant information.

A second example of this fourth aspect relates to a further evaluation of items assigned to various criterion groups to identify additional structure among the grouped items. In one such embodiment the items within a criterion group may be additionally grouped by applying these techniques with a new set of criteria. This recursive application may result in a set of deeply nested criteria groups each containing a set of lower level groups that further illustrate the organization of the items of the item set. In a second such embodiment the items assigned to a criterion group may be sub grouped in various ways. illustrates a second such embodiment wherein a first representation of the item set involves a criterion group containing Component A having functional dependencies on Component C and Component D in the same criterion group and Component B having a functional dependency on Component D . A subgrouping may be applied for items that are depended upon more than once such as upon identifying a first item assigned to a criterion group that is associated with at least two other items assigned to the criterion group forming a criterion subgroup within the criterion group and assigning the first item to the criterion subgroup. In the scenario of when the dual dependency of Component A and Component B on Component D is detected a second representation may be generated wherein a criterion subgroup is created to which Component D may be assigned. Those of ordinary skill in the art may devise many techniques for subgrouping or further analyzing the items within various criterion groups while implementing the techniques discussed herein.

A fifth aspect that may vary among embodiments of these techniques involves the manner of presenting an item set grouped as discussed herein. As a first example and as a simplified presentation the item set may be presented only as a set of criterion groups with the details of the items assigned thereto obscured. The groups might also be presented with criterion group associations derived from item associations between groups such as illustrated in and or with the presenting of subgroupings derived in various ways such as illustrated in . As a second example some or all of the items may be included in the presenting. For example all items may be included in the presenting or only certain sets of items such as the items contained within one or more criterion groups. In one such embodiment the items may be presented within respective assigned criterion groups that have at least one criterion group association with at least one other criterion group such that criterion groups that are isolated and do not have any associations with other criterion groups may be of less interest and may be obscured. Alternatively or additionally the items assigned to one or more criterion groups may be initially hidden and upon receiving a selection of a criterion group the presenting system may also present the items assigned to the selected criterion group.

A second example of this fifth embodiment relates to the inclusion in the presenting of the associations among items. In one such embodiment the associations among items may be omitted from the presenting e.g. in favor of presenting criterion group associations that represent aggregate sets of associations among items of different criterion groups. Alternatively some or all of the item associations may be included in the presenting such as e.g. only associations between items belonging to the same criterion group. In another such embodiment the associations of an item may be initially hidden and upon receiving a selection of an item the presenting system may include the associations of the selected item with associated items in the item set.

A third example of this fifth embodiment relates to the arranging of the items and criterion groups in the presenting. It may be appreciated that the spatial organization of the items and criterion groups may convey various semantics such as the relative significance of the items and criterion groups and or the degree of interrelations thereamong. In one such embodiment the associations between criterion groups and or items may be directed such as an association between a superior item or criterion group and a subordinate item or criterion group such as may be included in the positioning semantics of the organization of the hierarchy. For example in the exemplary item set of the functional dependencies are directed by an arrowhead to indicate a superior functionally dependent item of a higher layer and an inferior functionally depended upon item of a lower layer such as the functional relationship between the superior Component K and the subordinate Component F . As further illustrated in the visual layout may suggest this superior subordinate association by presenting the superior item in each association before the subordinate item in each association. This ordering may comprise e.g. a vertical layering such as illustrated in a horizontal ordering and or a data set presentation wherein the higher level items are presented first. Accordingly where an association between two items representing a semantic relationship between a superior item and a subordinate item the presenting may comprise presenting the superior item before the subordinate item. The criterion group associations may be similarly organized in the presenting such as by presenting a first criterion group comprising a first item before a second criterion group comprising a second item having a subordinate association with the first item. Those of ordinary skill in the art may devise many ways of organizing the items and criterion groups while presenting the item set according to the techniques discussed herein.

Although the subject matter has been described in language specific to structural features and or methodological acts it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather the specific features and acts described above are disclosed as example forms of implementing the claims.

As used in this application the terms component module system interface and the like are generally intended to refer to a computer related entity either hardware a combination of hardware and software software or software in execution. For example a component may be but is not limited to being a process running on a processor a processor an object an executable a thread of execution a program and or a computer. By way of illustration both an application running on a controller and the controller can be a component. One or more components may reside within a process and or thread of execution and a component may be localized on one computer and or distributed between two or more computers.

Furthermore the claimed subject matter may be implemented as a method apparatus or article of manufacture using standard programming and or engineering techniques to produce software firmware hardware or any combination thereof to control a computer to implement the disclosed subject matter. The term article of manufacture as used herein is intended to encompass a computer program accessible from any computer readable device carrier or media. Of course those skilled in the art will recognize many modifications may be made to this configuration without departing from the scope or spirit of the claimed subject matter.

Although not required embodiments are described in the general context of computer readable instructions being executed by one or more computing devices. Computer readable instructions may be distributed via computer readable media discussed below . Computer readable instructions may be implemented as program modules such as functions objects Application Programming Interfaces APIs data structures and the like that perform particular tasks or implement particular abstract data types. Typically the functionality of the computer readable instructions may be combined or distributed as desired in various environments.

In other embodiments device may include additional features and or functionality. For example device may also include additional storage e.g. removable and or non removable including but not limited to magnetic storage optical storage and the like. Such additional storage is illustrated in by storage . In one embodiment computer readable instructions to implement one or more embodiments provided herein may be in storage . Storage may also store other computer readable instructions to implement an operating system an application program and the like. Computer readable instructions may be loaded in memory for execution by processing unit for example.

The term computer readable media as used herein includes computer storage media. Computer storage media includes volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions or other data. Memory and storage are examples of computer storage media. Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CDROM Digital Versatile Disks DVDs or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by device . Any such computer storage media may be part of device .

Device may also include communication connection s that allows device to communicate with other devices. Communication connection s may include but is not limited to a modem a Network Interface Card NIC an integrated network interface a radio frequency transmitter receiver an infrared port a USB connection or other interfaces for connecting computing device to other computing devices. Communication connection s may include a wired connection or a wireless connection. Communication connection s may transmit and or receive communication media.

The term computer readable media may include communication media. Communication media typically embodies computer readable instructions or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term modulated data signal may include a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal.

Device may include input device s such as keyboard mouse pen voice input device touch input device infrared cameras video input devices and or any other input device. Output device s such as one or more displays speakers printers and or any other output device may also be included in device . Input device s and output device s may be connected to device via a wired connection wireless connection or any combination thereof. In one embodiment an input device or an output device from another computing device may be used as input device s or output device s for computing device .

Components of computing device may be connected by various interconnects such as a bus. Such interconnects may include a Peripheral Component Interconnect PCI such as PCI Express a Universal Serial Bus USB firewire IEEE 1394 an optical bus structure and the like. In another embodiment components of computing device may be interconnected by a network. For example memory may be comprised of multiple physical memory units located in different physical locations interconnected by a network.

Those skilled in the art will realize that storage devices utilized to store computer readable instructions may be distributed across a network. For example a computing device accessible via network may store computer readable instructions to implement one or more embodiments provided herein. Computing device may access computing device and download a part or all of the computer readable instructions for execution. Alternatively computing device may download pieces of the computer readable instructions as needed or some instructions may be executed at computing device and some at computing device .

Various operations of embodiments are provided herein. In one embodiment one or more of the operations described may constitute computer readable instructions stored on one or more computer readable media which if executed by a computing device will cause the computing device to perform the operations described. The order in which some or all of the operations are described should not be construed as to imply that these operations are necessarily order dependent. Alternative ordering will be appreciated by one skilled in the art having the benefit of this description. Further it will be understood that not all operations are necessarily present in each embodiment provided herein.

Moreover the word exemplary is used herein to mean serving as an example instance or illustration. Any aspect or design described herein as exemplary is not necessarily to be construed as advantageous over other aspects or designs. Rather use of the word exemplary is intended to present concepts in a concrete fashion. As used in this application the term or is intended to mean an inclusive or rather than an exclusive or . That is unless specified otherwise or clear from context X employs A or B is intended to mean any of the natural inclusive permutations. That is if X employs A X employs B or X employs both A and B then X employs A or B is satisfied under any of the foregoing instances. In addition the articles a and an as used in this application and the appended claims may generally be construed to mean one or more unless specified otherwise or clear from context to be directed to a singular form.

Also although the disclosure has been shown and described with respect to one or more implementations equivalent alterations and modifications will occur to others skilled in the art based upon a reading and understanding of this specification and the annexed drawings. The disclosure includes all such modifications and alterations and is limited only by the scope of the following claims. In particular regard to the various functions performed by the above described components e.g. elements resources etc. the terms used to describe such components are intended to correspond unless otherwise indicated to any component which performs the specified function of the described component e.g. that is functionally equivalent even though not structurally equivalent to the disclosed structure which performs the function in the herein illustrated exemplary implementations of the disclosure. In addition while a particular feature of the disclosure may have been disclosed with respect to only one of several implementations such feature may be combined with one or more other features of the other implementations as may be desired and advantageous for any given or particular application. Furthermore to the extent that the terms includes having has with or variants thereof are used in either the detailed description or the claims such terms are intended to be inclusive in a manner similar to the term comprising. 

