---

title: Providing distributed online services for mobile devices
abstract: A device, system, and method is provided for running mobile applications, including a server for running applications and a client installed in a mobile device. The client may connect to the server via a network. The client may display content, receive user input, and send user input to the server. The server may use the client to receive user input and to display content for running applications for the mobile device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08213924&OS=08213924&RS=08213924
owner: Facebook, Inc.
number: 08213924
owner_city: Menlo Park
owner_country: US
publication_date: 20081006
---
The present invention relates to mobile devices. The present invention also relates to porting. In particular the present invention relates to adapting information services software or code to conform to individual device parameters for proper viewing on and operation from the mobile device.

Mobile devices come in thousands of hardware and software varieties having different operating systems screen resolutions input controls etc. To accommodate the technological diversity in mobile devices it is a goal of content and information service providers to provide users with universal support for all mobile devices without compromising appearance and functionality.

One way to provide universal support is porting. Porting is a process in which software or code is adapted to conform to a computing environment different from that for which the software was originally designed. For example to display website code on a screen of a mobile device having a different browser than that for which the code was written the website code may be altered to comport with the requirements and capabilities of the different browser. Multiple versions of a service solution must be generated with variations to match the specific hardware and software combinations that exist on the target mobile devices.

One of the main disadvantages of porting is that it is time consuming and costly. In one example a porting process includes running and testing the same code individually on each mobile device identifying problematic portions of the code re writing code to fix the problematic portions and reiterating tests with the re written code.

To improve efficiency another porting process was designed. In this process a first layer of software is generated having content data universally intended for all mobile devices. Additional device specific layers of software are also generated for running the first content layer on each specific mobile device. In this example since the content and device specific layers are generated separately the content of the first layer may change without having to adapt the device specific layers to conform therewith. Thus a single device specific layer may support a variety of content for each mobile device. Although improved this process still yields detriments. For example the device specific layers are typically generated automatically based on device parameters stored in a database. Thus no device specific layer may exist for a device whose parameters are unknown or not stored in the database. Thus an unknown mobile device cannot display the content layer.

In order to solve this problem a generic or default device layer may be used to display the content layer. Since some devices support more advanced capabilities e.g. using Adobe Flash objects while others only support the most basic content e.g. using hypertext markup language HTML a generic layer compatible for both devices must use the lowest common denominator of function. Thus the devices capable of supporting advanced content may be forced to display the basic content operating below their potential function. The basic content typically has out of date features which reduce the quality of the user experience.

Currently using as default the lowest common denominator of function is a common solution for providing universal service in the technologically diverse world of mobile devices. For example online service providers use wireless application protocol WAP websites which essentially are adaptations of their regular websites with reduced cut down versions of content features and functionality. In order to take advantage of advanced capabilities parallel versions of the service must be developed checked and maintained each taking into account the additional capabilities unsupported by inferior mediums.

A need exists to provide universal support for a wide variety of mobile devices without degrading the quality of service.

In an embodiment of the invention a device system and method are presented for running mobile applications including a server for running applications and a client installed in a mobile device. The client may connect to the server via a network. The client may display content receive user input and send user input to the server. The server may use the client to receive user input and to display content for running applications for the mobile device.

In an embodiment of the invention a device system and method are presented for distributing cache management. A cache may be operated by a client and located in a mobile device for storing data locally. A server may be connected to the mobile device via a network. The server may provide additional resources for managing data stored locally in the mobile device to supplement the resources of the mobile device.

In an embodiment of the invention a device system and method are presented for communicating using a hypertext transfer protocol. The system may include a server for communicating with one or more clients and a client installed in a mobile device. The client may connect to the server via a network using a hypertext transfer protocol. The client may open a new connection and send a request if no connection is currently open so that the server can always send data. The client may open additional connections to send data to the server without waiting for a response a previous connection.

In an embodiment of the invention a device system and method are presented for determining whether or not a client can have two or more simultaneous connections using a hypertext transfer protocol. The system may include a server for communicating with one or more clients and a client installed in a mobile device. The client may connect to the server via a network using a hypertext transfer protocol. The client may open a first connection initiate a timer count and open a concurrent second connection. The server may receive the first connection and respond to the first connection only after the second connection is opened. The client may check the timer count at the time of receiving the response to the first connection. If the timer count exceeds a predefined threshold the client may determine that two or more concurrent connections cannot be supported.

It will be appreciated that for simplicity and clarity of illustration elements shown in the figures have not necessarily been drawn to scale. For example the dimensions of some of the elements may be exaggerated relative to other elements for clarity. Further where considered appropriate reference numerals may be repeated among the figures to indicate corresponding or analogous elements.

In the following description various aspects of the present invention will be described. For purposes of explanation specific configurations and details are set forth in order to provide a thorough understanding of the present invention. However it will also be apparent to one skilled in the art that the present invention may be practiced without the specific details presented herein. Furthermore well known features may be omitted or simplified in order not to obscure the present invention.

Unless specifically stated otherwise as apparent from the following discussions it is appreciated that throughout the specification discussions utilizing terms such as processing computing calculating determining or the like refer to the action and or processes of a computer processor a computer or computing system or a similar electronic computing device that manipulates and or transforms data represented as physical such as electronic quantities within the computing system s registers and or memories into other data similarly represented as physical quantities within the computing system s memories registers or other such information storage or display devices. Further plurality may be used throughout the specification to describe two or more components devices elements parameters and the like.

Reference is made to which schematically illustrates a system having a plurality of mobile devices and operating over a network according to an embodiment of the invention. System may include a gateway server an application server and a content origin server .

Network may be any wireless or wired network connecting mobile communication devices to servers over communication protocols for example the Internet.

Mobile devices and may be any wireless hand held computing device or installed e.g. in a car or the like including for example cellular telephones smart phones mobile computers such as personal digital assistants PDAs portable game consoles media players recorders navigation devices for example supporting a global positioning system GPS etc. Mobile devices and include display screens and respectively e.g. for displaying a user interface. Mobile devices and may include audio output devices such as speakers for providing sound data to a user. Mobile devices and include input devices and respectively e.g. for receiving input from a user e.g. via keys touch screen click wheel recorder microphone other input means . Additional input output devices e.g. mouse or keyboard microphone headset etc. may connect to mobile devices and e.g. via a wireless connection or a wired connection such as an in out jack or a universal serial bus USB connector. Mobile devices and may use any of a wide variety of operating systems OSs which are known.

Gateway server may be a contact point between each of mobile devices and and application server . Gateway server may manage communication protocols.

Application server is a server that has logic for running an application or service. Application server may be a contact point for devices in system to access content origin server .

Content origin server is a server e.g. a web server having a database or other source of data content which may be accessible over network . For example content origin server may be a weather news or movie hub from which weather news and movies respectively may be accessible via mobile devices and . Server may be any online data service such as for example a financial service social network messaging service digital store music catalogue etc. For the purposes of this invention content may include any type and sort of information and data including but not limited to media content e.g. images movies music time location inventory availability search results online service etc. .

It may be appreciated that any of servers and or may be combined as a single server and that each of servers and or may be separated into multiple servers. In a more likely variation gateway server and application server are combined to form a single server. In addition each of servers and or may only form a part of a server.

Mobile devices and or may communicate and interact with gateway server for obtaining access to content provided by the content origin server or gaining access to services operated by content origin server .

Mobile devices and or may send their respective device parameters to gateway server . Device parameters may be sent together with or separate from the content requests. In one embodiment device parameters need only to be sent once e.g. the first time mobile device and or requests content from gateway server . Device parameters may include e.g. screen resolution software or programs installed on the device OSs running on the device available memory available libraries available input output devices such as speakers or a liquid crystal display LCD screen a correspondence of user controls on the device e.g. keyboard keys location on a touch screen rotation or location of a click wheel etc. and command signals executed thereby. The parameters may be stored in gateway server e.g. in a cache or main memory thereof.

In response to the request from mobile devices and or to gateway server for content gateway server may in turn send a request for the content to application server . Application server may in turn send a request for the content to content origin server .

In response to the request content origin server may send application server the requested content. The content may be requested and or provided via e.g. standard web protocols application programming interface API or any other known technique.

Application server may receive the content. Application server may process the content received from content origin server to determine if the received content matches the request for content from gateway server e.g. the request originating from one or more of mobile devices and or . If the content matches the request application server formats the content according to pre defined parameters appropriate for gateway server which may be independent of mobile devices and parameters. Application server transmits the formatted content to gateway server .

Gateway server receives the formatted content and processes the content to check again if the received content matches the original request for content from one or more of mobile devices and or . If it is re validated that the content matches the request gateway server may retrieve e.g. from cache memory the respective device parameters of each of mobile device and or requesting the content. Gateway server may format the content according to the device parameters of each of mobile device and or . Gateway server may encode and send the device specific formatted content to mobile device and or .

Gateway server may communicate with mobile device and or using a client server protocol. In this protocol a client is installed on each of mobile devices and or . The client may include software installed or code which runs on each of mobile devices and or for accessing remote gateway server via network .

The client in each of mobile device and or receives the respective device specific formatted content from gateway server . Content may include any sort of data including but not limited to text images audio video game moves and logic actions information experiences that may provide value for an end user vector graphic elements user interface and elements thereof interactive elements and so forth. The client may report device parameters for each of a plurality of different mobile devices and or and gateway server and or application server applies an algorithm to automatically convert a generic user interface to a device specific user interface according to the device parameters for each of the plurality of different mobile devices and or .

The client in mobile device and or may display the data on displays and or respectively using a user interface engine. Alternatively when the content includes audio data the client plays the data through the appropriate output speaker. In addition gateway server and or certain content may invoke other resources from mobile device and or to perform specific actions such as e.g. play video files using a native player make a call send a short message get a geo location use a camera etc.

In parallel the client in each of mobile device and or accepts input from the user via user controls on the device e.g. key strokes pointing device movements on a touch screen rotation of a click wheel etc. . The client may handle some input locally e.g. using an event handler which translates the user input to execute operations corresponding thereto. The client may send other input to gateway server for handling.

Gateway server may identify in the device parameters a correspondence of user controls on the device and operations caused thereby. If the operations corresponding to the user input do not require new content e.g. highlighting a word on user displays and or returning to a previous page whose content is still stored in the cache memory of gateway server etc. gateway server may execute the operations. If the operations corresponding to the user input do require new content gateway server may forward the operation request for new content to application server to retrieve the new content.

Application server may likewise determine if the operation request requires new content. If the operation request does not require new content application server may handle the operation and send updated content to gateway server for use on mobile devices and or . If the operation request does require new content application server may send a request for the new content to the content origin server . Content origin server may fetch or update the requested content. The content origin server may send the new content to application server which may in turn send the content to gateway server which may in turn send the content to mobile device and or via the respective local clients installed therein.

It may be appreciated that although servers and or are separate from each other in the figure in an alternate embodiment any of servers and or may be integrated as a single server. In a preferred embodiment at least servers and are separate to enable better scalability and reduce latency of transactions. Furthermore multiple servers and or multiple servers may be used e.g. to support increasing volume of transactions mobile devices and communications with server . When servers and or are separate from each other communication therebetween may be transmitted as wireless or wired signals e.g. over a network e.g. the same or different as network . In another embodiment not shown when servers and or are integrated e.g. as parts of a single server communication therebetween may be sent between processes or in process without the use of a network. Other or additional configurations or combinations of servers may be used.

The identity and or security of any of the servers may be checked and verified at any stage of this communication sequence.

The conventional porting processes using layers described above in the Background section generates device specific layers for viewing content for each different device having information stored in a database. One detriment of this porting process is that the device specific layers are generated for every device or profile stored in a database irrespective of whether or not the device is active or ever requests to view the content layer. According to embodiments of the invention porting for a device begins when the device requests to view the content. Therefore the porting process is executed under a need only basis only for devices that request to view the content. Another detriment of the aforementioned conventional porting process is that content is only viewable by devices having parameters previously stored in the database. Thus a new unknown or unrecognized device cannot have a device specific layer and must view content with generic appearance and functionality using a default layer. In contrast according to embodiments of the invention the porting layer for a device is not generated from device parameters stored in a database but from information sent by the device itself. Thus porting is achieved for devices whose parameters are not stored in the database e.g. new foreign unknown devices . Other or additional benefits may be achieved.

Reference is made to which is a schematic illustration of layers in a mobile device e.g. one of mobile devices and or of and a gateway server e.g. gateway server of interacting to execute a porting process according to an embodiment of the invention.

The gateway server and the mobile device may communicate using one or more gateway server layers and one or more client layers respectively. The device layers of the client side and the gateway server side are separated by dashed line in the figure.

Client layers may include at least a user interface engine and an event handler . User interface engine may display content on the mobile device. Event handler may translate user input via device controls to execute corresponding operations. Event handler may include a local operator and a remote operator . Local operator typically handles user input locally in the mobile device while remote operator may send user input to the gateway server for handling.

Gateway server layers may be a contact point for the mobile device in a network e.g. network of . Gateway server layers may create a client server protocol to comport with a mobile device having any arbitrary device parameters. Gateway server layers may simulate a virtual device corresponding to the mobile device. A virtual device may be a set of data structures and or operations in the gateway server which acts as a mobile device and is configured according to some or all of the device parameters of the corresponding mobile device. Gateway server layers may then adapt content and commands to comport with the parameters for virtual device . Gateway server layers may send the device specific adapted content to client layers .

Client layers may receive the adapted content and using user interface engine may display the device specific content on the mobile device and enable specific functional capabilities in accordance with instructions provided by the gateway server layers .

Gateway server layers may configure virtual device automatically or semi automatically . In this way when configuration detection is not device dependent since the virtual device is not device dependent and the client is not device dependent the whole system becomes device independent.

In one embodiment of the present invention a system for running mobile applications may include application server for running applications e.g. and or gateway server and a client installed in mobile devices and or . The client may connect to application server via network and or . The client may display content receive user input and send user input to application server . Application server e.g. and or gateway server may use the client to receive user input and to display content for running applications for mobile devices and or . There may be a plurality of clients each of which may be adapted to be installed in a plurality of different mobile devices and or that have at least a common device parameter. The same or duplicate client may be used for at least two of the plurality of different mobile devices and or .

Reference is made to which is a flow chart of a porting process executed by the interacting layers of the mobile device and the gateway server of according to an embodiment of the invention. The porting process may automatically configure content from a remote server e.g. content origin server of to comport with the parameters of a device e.g. each of mobile devices and or of for displaying the content on the device and enable device specific capabilities.

In operation client layers may extract device parameters or certain parameters from the mobile device. The device parameters may be properties of the device e.g. screen resolution software installed on the device available memory OS a correspondence of user controls on the device e.g. keyboard keys location on a touch screen rotation or location of a click wheel etc. and command signals executed thereby.

In operation client layers may connect to gateway server layers . Client layers may login to gateway server layers . For example client layers may send authenticate or an identifier such as a password code or encrypted key. Client layers and gateway server layers may agree on and use a communication protocol e.g. such as a hypertext transfer protocol HTTP implementation . If the login fails no connection between client layers and gateway server layers is made. If the login fails client layers may repeat operation until either a connection is made or the number of attempts exceeds a predetermined threshold.

In operation client layers may send gateway server layers the device parameters for the mobile device. In one embodiment instead of directly sending the device parameters client layers send gateway server layers a device identifier e.g. user agent information or a device signature. In one embodiment gateway server layers may request or prompt the device parameters from client layers .

Gateway server layers may process the device parameters and determine if they are sufficient to generate a virtual device e.g. virtual device of . If gateway server layers need more information to generate a virtual device gateway server layers may request the remaining information from client layers e.g. such as version of software available libraries etc. . In some embodiments gateway server layers may ask client layers to perform certain tests on the mobile device to obtain the remaining information to report to gateway server layers . For example gateway server layers may ask client layers to decode certain media type s process calculation and report the duration of the calculations or test for a known bug or error in a program. Gateway server layers may use the test results of operation to configure an algorithm to automatically convert a generic user interface to a device specific user interface according to the device parameters for each of the plurality of different mobile devices.

Gateway server layers may repeatedly request information from client layers for the parameters of the mobile device in which the client is installed until gateway server layers have sufficient information to generate a virtual device corresponding to the mobile device.

In operations gateway server layers may automatically generate update a device configuration database to store in memory partial or complete data for virtual devices profiles corresponding to mobile devices.

In operations gateway server layers may compare the device identifier e.g. user agent information or a device signature provided in operation or in another earlier operation e.g. during a download or installation process to those stored in the device configuration database.

In operations gateway server layers may determine if the device identifier matches a device identifier stored in the device configuration database.

If the device identifier does match gateway server layers may simply retrieve from memory or storage the partial or complete virtual device profile data corresponding to the matching device identifier and proceed to operation .

In operations if the device identifier does not match gateway server layers may update the device configuration database creating a new entry for the unmatched device identifier including new partial or complete virtual device data corresponding thereto. The process may then proceed to operation .

In operation using the partial or complete virtual device data stored in the device configuration database gateway server layers may generate a complete virtual device corresponding to the mobile device in which the current client is installed.

During operation of the mobile device client layers may obtain additional information about the mobile device e.g. such as a HTTP implementation . Client layers may report the additional information to gateway server layers . Gateway server layers may in turn automatically update the device configuration database with the new information for the mobile device and or the virtual device corresponding thereto.

In an alternative embodiment instead of using a generic client universally installed in all mobile devices and then generating a virtual device specific to each different mobile device gateway server layers may automatically generate a device specific client for each different mobile device. The device specific client may be pre configured for the specific mobile communication device parameters. In this embodiment a generic client may first be installed in the mobile devices to test the mobile devices and collect device specific information corresponding thereto. After the testing phase ends and sufficient information for generating a device specific client has been collected and reported to gateway server layers gateway server layers may use information to replace update the generic client with the device specific client.

In one embodiment client layers may display a prompt e.g. on displays and or of of the mobile device e.g. mobile devices and or of respectively requesting information from a user. A user may provide information to the client e.g. using input devices and respectively such as clicking a specific key or answering a question regarding which items are visible on the device display. The client may report the data provided by the user to gateway server layers to update the device configuration database.

The virtual device may be configured in gateway server layers as a set of data structures and or operations in the gateway server which acts as a mobile device.

Client layers may include user interface engine e.g. a universal or device independent object and an event handler e.g. a key event handler to handle device specific key commands . Event handler of client layers may report an event to gateway server layers . Events may originate by user controls such as keys touch screen or a camera or by external sources such as software. Gateway server layers may remotely provide client layers with instructions for responding to the event. Alternatively event handler may have logic for responding to the event locally. In this example client layers need not wait for remote instructions from gateway server layers . Gateway server layers may send user interface engine and event handler information and commands that are specifically configured for the operating mobile device. Content and information received from application server is likewise configured according to the parameters of the virtual device and then sent to client layers . Since gateway server layers send client layers information already configured to the individual capabilities of the operating mobile device client layers need not be aware of the device specific capabilities. Therefore substantially the same or universal client layers may be installed on all mobile devices or groups of similar devices e.g. having the same operating system . Since client layers does not use most or in certain cases any specific properties specifications or parameters of the mobile device on which it is installed the client may be referred to as a device independent client.

In some embodiments gateway server layers may request content from additional sources e.g. other than content origin server of . Gateway server layers may request content for example from service servers e.g. such as image transcoding server s or advertisement serving server s . Gateway server layers may send the service server adaptation parameters based on the device parameters in accordance with the virtual device based on the respective mobile device parameters to adapt the content at the service server. Alternatively the adaptation may be performed by gateway server layers . Gateway server layers may map the information received from client layers to a format and structure understood by application server .

Reference is made to which is a schematic illustration of layers in a system which includes mobile device s a gateway server and an application server for running a distributed information service accessible from a mobile device according to an embodiment of the invention.

Mobile devices and or gateway server and application server of may communicate with each other using client layers gateway server layers and application server layers respectively. In client layers and gateway server layers are separated by dashed line and gateway server layers and application server layers are separated by dashed line . Client layers and gateway server layers may correspond to the respective same numbered components in .

Gateway server layers may include a launcher a device adaptation module a session manager and connectors . Launcher determines the identity of a client logging in and the corresponding mobile device. Launcher may determine the parameters of the mobile device e.g. obtained through tests run on the mobile device by the client and or based on device parameters reported by the client or retrieved by gateway server layers from a device configuration database. Gateway server layers may automatically generate update a device configuration database to store data in memory to support for a virtual device corresponding to client layers . Gateway server layers may also include an external central processing unit CPU and supplement storage and communication paths over a network. Other or additional functionality and logic may be used.

Application server layers may include server side client s which may be adapted to run application s accessible and or controllable through client layers . Server side client may be device independent e.g. universal or not specific to the mobile device in which client layers operate . Server side client may run application s exchange information with a content origin perform calculations monitor external events etc. each associated with the mobile device but independently of client layers . Server side client may exchange information with e.g. content origin server of to check periodically for sport match score emails etc.

Typically client layers may report events and or requests from the mobile device to server side client through gateway server layers which in turn via session manager may provide logic for function of client layers .

Once the client is logged in the client may request content. The client may send the content request via connectors to gateway server layers which in turn may send the request via application proxy to application server layers . Application server layers may have installed application code to receive the request from gateway server layers . Application server layers may have installed an interface to content e.g. an API to retrieve content from a content origins server e.g. content origin server of and transfer the content to gateway server layers for rendering and adaptation to virtual device . The content may be fetched from a content origin server over a network e.g. network of such as the Internet.

Application server layers may then send a request to virtual device to display the retrieved content on a screen thereof or perform a predefined action. The content may then be adapted e.g. resized reformatted etc. to comport with the parameters of virtual device . Virtual device may have capabilities beyond those of the corresponding mobile device e.g. to calculate transparencies in images display file format unsupported by the mobile device etc. .

The content may include content from multiple sources. Gateway server layers which maintain virtual device may divide the request for content into parts or sub requests. For example if the content includes a title and an image the request for content may be disassembled into a request to fetch and re size an image from an image server a request to fetch a title from a service server and optionally a request to fetch an ad from an ad server . Gateway server layers may process each sub requests separately using proxy layers s operating in parallel. Gateway server layers may have an image proxy to fetch and re size the image a service proxy to fetch the title and an ad proxy to fetch an ad. Gateway server layers may include a database .

Once the content is retrieved by each of the proxy devices device adaptation unit may adapt the content to comport with device parameters e.g. device capabilities and user interface of the mobile device. For example device adaptation unit performs visual adaptation of content received from application server layers and tailors content elements to the mobile device parameters and capabilities. For example different mobile devices may represent a set of menu options on a screen differently. For example a Nokia N73 mobile phone which has two soft keys may assign a menu option to the left most soft key while a Blackberry Curve which has no soft keys but does have a native menu key may assign the menu option to the native menu key.

Device adaptation unit may adapt content based on a specific task e.g. initiate a call open a browser find a global location etc. . Device adaptation unit may use device specific APIs adapted to perform the specific task. For example to initiate a call device adaptation unit may provide client layers with the correct command to access the device personal contact list to open a browser device adaptation unit may provide client layers with the correct command to operate the browser that is locally installed on the device to find global location device device adaptation unit may provide client layers with the correct command to request device geo location etc. Device adaptation unit may adapt the content in a manner that minimizes computational effort for example by selecting an image format and or video format to send and or whether or not to perform resource demanding visual effects.

Once the content is adapted to comport with the mobile device parameters gateway server layers may use statistics associated with the content and the usage thereof to improve caching algorithms to manage the cache. Using the improved caching algorithms gateway server layers may store a copy of the content in a local cache thereof.

Gateway server layers may then encode the content. Once the content is encoded gateway server layers may send the content to client layers e.g. via connectors for display on the mobile device.

Client layers may receive and decode the encoded content. Since by the time the content is sent to the content layers the content is adapted e.g. formatted to fit the screen of the mobile device the content layers e.g. using user interface engine of may directly render the content onto the screen of the mobile device without any further alterations. Client layers may report events and handles e.g. using an event handler e.g. event handler of .

Gateway server layers may repeat the process of retrieving and adapting content individually for each of a plurality of mobile devices. Device adaptation unit may adapt content to comport with each set of different device parameters for each mobile device. Gateway server layers may send each different set of adapted content to content layers of the respective mobile devices.

Gateway server layers and client layers communicate using a protocol e.g. described in further detail in references to .

Reference is made to which is a schematic illustration of a plurality of caches and distributed in a network according to an embodiment of the invention.

In an embodiment of the invention a device system and method are presented for distributing cache management. Local cache memory may be operated by client layer and located in a mobile device e.g. mobile devices and or of for storing data locally. Gateway server of may be connected to the mobile device via a network e.g. networks and or of . Gateway server may remotely manage local cache memory . Gateway server may provide additional resources for managing data stored locally in local cache memory of the mobile device to supplement the resources of the mobile device.

A mobile device e.g. mobile devices and or of may include a local cache memory . A client installed on the mobile device may operate local cache memory . Local cache memory typically has a limited size.

Network e.g. network of may include one or more networks to which the mobile device is connected to a gateway server e.g. via gateway server layers of . The mobile device may receive content from the gateway server over network e.g. using connectors of .

The gateway server may include a proxy remote cache statistics and cache metadata . Alternatively some or all of these components may be separate from the gateway server.

The gateway server may operate proxy remote cache . Proxy remote cache may be located in the gateway server. Proxy remote cache may be allocated to assist in the management of local cache memory located in the mobile device. Proxy remote cache may supplement local cache memory of the mobile device. Proxy remote cache may be accessible to the mobile device through network .

Statistics e.g. statistics of is a storage unit e.g. a database of statistical data which correspond to data stored in local cache memory . Statistics may also contain metadata and other data related to the cache for example indication whether or not the data is stored persistently on the mobile device.

Cache metadata is a storage unit e.g. a database for storing metadata or a means for generating or calculating metadata based on content e.g. a processor to run an algorithm or another function . Cache metadata may include information about content that may be used to improve cache logic to manage the cache.

Content origin server e.g. of includes a server that stores or provides the content requested by the client.

Typically the available cache resources network communication paths and CPU capabilities of a mobile device are relatively weak e.g. compared to a server such as the gateway server . Therefore fetching and processing information locally in the mobile device is relatively more expensive or inefficient e.g. in terms of data traffic and time than in the gateway server.

According to embodiments of the present invention the gateway server supplements the local cache memory with proxy remote cache . Proxy remote cache typically has more storage space than local cache memory . In addition the gateway server typically has more processing capabilities than the mobile device e.g. stronger processing power more extensive memory resources statistical databases and external information such as meta tags which are known. The gateway server operates proxy remote cache as a copy and mimic of local cache memory of the mobile device. Proxy remote cache may contain part or whole of the data in local cache memory . Since the processing capabilities of the gateway server and the storage resources of the proxy remote cache are typically greater than their counterparts in the mobile device using the gateway server as an external remote cache resource may increase processing capabilities and storage resources of the mobile device.

In one embodiment the client may send a request for content to be fetched from content origin server . Cache metadata may attach relevant cache metadata to the content. Cache metadata may include information to improve logic for storing and or using the content in a cache memory. Cache metadata may generate the cache metadata e.g. based on a pre defined database entry or by analysis and processing the content itself. In one example the metadata may provide a prediction of whether or not the content will change. For example if the content is a company logo the content will probably not change frequently. However if the content is a score in an on going tennis match the content will probably change frequently. The metadata may optimize cache resources e.g. to enable the cache to organize entries according to the respective frequencies in which the entries are updated. The ability to process cache metadata e.g. via cache metadata to improve cache management is available on the gateway server but typically not available on the mobile device e.g. due to limited resources. Thus using the gateway server to operate proxy remote cache in place of local cache memory provides the additional benefit of cache metadata.

After cache metadata attaches metadata to the content cache metadata may send the content to proxy remote cache . Proxy remote cache may store a copy of the content and may send the content to local cache memory .

Statistics may store statistics associated with the content and the usage thereof. Proxy remote cache may use the statistics to enable the use of improved caching algorithms. Improving caching algorithms may provide computational benefits otherwise achieved by increasing processing storage and memory resources. Statistics may store statistics about cache usage over time in local cache memory and or local cache memories of other clients. Statistics may share the statistics about cache usage for one client with a proxy remote cache for a different client. Thus one client that has never before used specific content may have access to statistics associated with the content that were previously generated for another client.

Applying operations based on use of content metadata and statistics each associated with the content may result in recommendations and or commands sent from gateway server layers to local cache memory to improve cache storage and caching algorithms locally in the mobile device. The client may also receive requests to remove entries from local cache memory that are no longer valid or that are very unlikely to be used again.

The Client may report any updates of activity of local cache memory to the gateway server. The gateway server may update entries or alter activity in proxy remote cache to mimic local cache memory .

Reference is made to which is a flow chart of a process for using the plurality of distributed caches of according to an embodiment of the invention. The process includes operations executed by events elements e.g. provided by operation of input controls in a mobile device by a user client layers gateway server layers and application server layers . The process describes in one embodiment gateway server layers updating proxy remote cache and client layers updating local cache memory in parallel e.g. to remove invalid cache entry that take up memory on the mobile device.

In operation events elements may run operate a client. For example events elements may include turning on a mobile device in which the client is installed selecting a program that uses the client connecting to a network e.g. the Internet or directly selecting to run the client.

In operation client layers may connect to gateway server layers . For example the client may log in e.g. according to operation of . For example client layers may authenticate or send an identifier such as a password code or encrypted key.

In operation gateway server layers may request data from application server layers . The requested data may include e.g. a screen including screen elements such as data graphics etc.

In operation application server layers may send screen to gateway server layers . Gateway server layers may store screen in proxy remote cache e.g. a copy of local cache memory . Gateway server layers may process screen e.g. to generate metadata and or statistics related to screen elements .

In operation gateway server layers may send screen to client layers . Client layers may store screen in local cache memory .

In operation gateway server layers may request screen for the second time from application server layers to check if the cache entry corresponding thereto is still valid.

In operation application server layers may send screen to gateway server layers . Gateway server layers may store screen in proxy remote cache . Gateway server layers may process screen e.g. to generate metadata and or statistics related to screen elements .

In operation gateway server layers may send screen to client layers . The client may store screen in local cache memory .

In operation gateway server layers may compare the screen data stored in proxy remote cache in operation with the screen data sent in operation . If the two data for screen do not match a process may proceed to operation .

In operation gateway server layers may report to client layers to delete the entry in local cache memory for which the entry stored in proxy remote cache in operation is a copy.

If the two data compared in operation match no further action is required. Alternatively gateway server layers may report a confirmation signal to client layers to validate the entry in local cache memory for which the entry stored in proxy remote cache in operation is a copy.

Reference is made to which is a flow chart of signal traffic for communicating between a mobile device and a gateway server according to an embodiment of the invention. Signals from the mobile device may be sent via client layers and signals from the gateway server may be sent via gateway server layers . Client layers and gateway server layers connect over a network e.g. network of over which the signals may be sent.

The communication may be bi directional i.e. some signals are initiated by client layers and other signal are initiated by gateway server layers . However in this embodiment only client layers can initiate a connection. For example gateway server layers can only respond once client layers have initiated a request. The connection may be adapted for using HTTP.

In operation client layers may request to connect to gateway server layers e.g. using an HTTP connection . For example client layers may send authenticate or an identifier such as a password code or encrypted key.

In operation in response to the request gateway server layers may send a session identification ID to client layers to use each time the client initiates a connection. In future communications from client layers to gateway server layers client layers may use the session ID instead of repeatedly sending authenticate or identifiers for each communication.

In operation client layers may send an empty request e.g. including no request for content to gateway server layers . Gateway server layers do not typically respond to this request until it has content to send. For example after some idle time has passed and gateway server layers have content to send data to client layers a process may proceed to operation .

Client layers send empty requests to gateway server layers since because in this embodiment only client layers can initiate a connection gateway server layers cannot respond unless client layers first makes a request.

In operation client layers may initiate another empty request to allow the server to send more content.

In operation to enable client layers to send data to the server a new e.g. HTTP connection may be made.

In operation gateway server layers may immediately close the prior connection opened in operation . Gateway server layers may use the new connection initiated in operation to send client layers signals.

In some embodiments some components in the network may drop idle connections after a predetermined period of time e.g. a timeout interval. Typically timeout intervals may be configured and or automatically detected. In order to avoid an unexpected drop in a connection which may interrupt or damage interim signals gateway server layers may close idle connection after the timeout interval before the connections are otherwise dropped by other components in the network. When gateway server layers close a connection client layers may initiate another empty request to substantially always keep open a connection with gateway server layers .

When gateway server layers have multiple signals to send to client layers gateway server layers may combine the signals into one response e.g. to reduce bandwidth and latency . Gateway server layers may stagger or delay sending signals e.g. by a short amount of time to synchronize multiple signals to be combined.

In an embodiment of the invention a device system and method are presented for communicating using a hypertext transfer protocol. The system may include a server e.g. gateway server for communicating e.g. via gateway server layers with one or more clients e.g. via client layers and a client installed in a mobile device e.g. mobile devices and or of . The client may connect to the server via a network e.g. networks and or of using a hypertext transfer protocol. The client may open a new connection and send a request if no connection is currently open so that the server can always send data. The client may open additional connections to send data to the server without waiting for a response a previous connection. The client and or the server may regulate the number of concurrent open connections.

Reference is made to which is a flow chart of a process for detecting if a mobile device can support two or more simultaneous connections with a gateway server according to an embodiment of the invention. The communication protocol in may be combined with the communication protocol in to support mobile devices which only support opening one e.g. and no more than one simultaneous connection. Applying the communication protocol described in to such mobile device may cause communication to and or from the mobile device to halt.

Some mobile devices may not support client layers having two or more simultaneous outgoing e.g. HTTP connections. To establish proper bi directional communication it should be determined whether or not client layers may have two or more simultaneous connections.

In operation client layers may request to connect to gateway server layers . For example client layers may send authenticate or an identifier such as a password code or encrypted key.

In operation in response to the request gateway server layers may send a session ID to client layers .

In operation client layers may send an empty request to gateway server layers . Gateway server layers typically do not respond to this request until it has some content to send.

In operation after some idle time has passed client layers may request another connection with gateway server layers . Client layers may send Gateway server layers data. At this time the client may start a timer.

If client layers cannot have two or more simultaneous connections the second connection may wait until the first one is closed. If client layers can have two or more simultaneous connections a process may proceed according to operations s described in reference to .

In operation in response to the empty request gateway server layers may send client layers content. When client layers receive this response client layers may check the timer started in operation .

If the timer count is greater than a predetermined time e.g. determined by network latency and or CPU time it may be determined that gateway server layers did not receive the second request for the second connection e.g. requested in operation until the gateway server had some timeout on the first connection or had information to send to client. Therefore client layers cannot have two or more simultaneous connections. If client layers can have two simultaneous connection gateway server layers would have closed the first connection immediately after the request for the second connection e.g. after some network latency as it has done in operation in .

If the timer count is less than the predetermined time it may be indeterminate whether or not client layers can have two or more simultaneous connections. The communication may continue normally until at later time e.g. when gateway server layers detect two simultaneous open connections and stops the timer logic or if gateway server layers never detect two simultaneous connections the timer eventually detects the lack of support.

Once the result is determined client layers and or gateway server layers may store the result e.g. to avoid re testing.

The following describes a process for detecting that a connection which is reported to enable client layers to send multiple signals in succession over the same connection e.g. HTTP1.1 instead only supports sending one signal for each connection e.g. HTTP1.0 .

HTTP 1.1 may enable client layers to send multiple signals using the same connection. HTTP 1.0 does not enable client layers to send multiple signals using the same connection. Instead HTTP 1.0 opens a new connection for every request from client layers . When client layers report supporting HTTP 1.1 when actually supporting HTTP 1.0 many new connections may be unknowingly opened. The multitude of new connections may exhaust client layers resources.

To prevent this gateway server layers may count connections and requests e.g. as well as time intervals between requests. If over a predefined period of time or upon reaching a predefined count of requests gateway server layers detect that the number of connections is equal to the number of requests and that the time between consecutive requests is below a predetermined threshold gateway server layers may conclude that client layers support HTTP 1.1. If the server determines that HTTP 1.1 cannot be used the server closes each connection immediately after using it to send a response. Thus gateway server layers may release client layers resources from the entanglement of the multitude of open connections by force closing each connection after sending a response to client layers .

In an embodiment where both client layers and gateway server layers support HTTP1.1 but the connection passes through a proxy or gateway that does not support HTTP1.1 e.g. but only HTTP1.0 gateway server layers may likewise close the connections to avoid unexpected connection drops.

In an embodiment of the invention a device system and method are presented for determining whether or not a client can have two or more simultaneous connections using a hypertext transfer protocol. The system may include a server e.g. gateway server for communicating e.g. via client layers with one or more clients e.g. via client layers and a client installed in a mobile device e.g. mobile devices and or of . The client may connect to the server via a network e.g. networks and or of using a hypertext transfer protocol. The client may open a first connection initiate a timer count and open a concurrent second connection. The server may receive the first connection and respond to the first connection only after the second connection is opened. The client may check the timer count at the time of receiving the response to the first connection. If the timer count exceeds a predefined threshold the client may determine that two or more concurrent connections cannot be supported.

While the invention has been described with respect to a limited number of embodiments it will be appreciated that many variations modifications and other applications of the invention may be made. Embodiments of the present invention may include other apparatuses for performing the operations herein. Such apparatuses may integrate the elements discussed or may comprise alternative components to carry out the same purpose. It will be appreciated by persons skilled in the art that the appended claims are intended to cover all such modifications and changes as fall within the true spirit of the invention.

