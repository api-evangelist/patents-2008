---

title: Customized settings for viewing and editing assets in agile software development
abstract: A method of managing agile software development includes displaying a group of assets associated with an agile software development process. The group has a particular type and the assets include a first set of attributes selected for display. In response to detecting a request by a first user, a group of available attributes is displayed including the first set. De-selection of an attribute from the first set is detected. For other users accessing respective groups of assets of the particular type, the first set of attributes is displayed for assets in the respective groups, wherein the first set does not include the deselected attribute.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08701078&OS=08701078&RS=08701078
owner: Versionone, Inc.
number: 08701078
owner_city: Alpharetta
owner_country: US
publication_date: 20081003
---
This application claims priority to U.S. Provisional Patent Application No. 60 979 344 titled Customized Settings for Viewing and Editing Assets in Agile Software filed Oct. 11 2007 which is hereby incorporated by reference in its entirety.

The disclosed embodiments relate generally to managing agile software development and more particularly to providing customized defaults for viewing and editing assets associated with agile software development.

Agile software development refers to software development methodologies in which software is developed incrementally in steps referred to as iterations. Iterations typically are measured in weeks and may vary in length from one week or less to one month or more.

Examples of agile software development methodologies include Scrum Extreme Programming XP Crystal Lean Development AgileUP and Dynamic Systems Development Method DSDM . Agile software development methods also have been referred to as lightweight methods. Methodologies may have their own vocabulary. For example an iteration may be referred to as a sprint or a timebox depending on the methodology. Agile software development is distinguishable from the waterfall model of sequential software development.

Software for implementing agile development methodologies and for tracking and reporting on projects that use agile methodologies can help developers to realize fully the benefits such as flexibility and rapid cycle times offered by these methodologies. Accordingly there is a need for robust agile development management software that is convenient to use.

A method of managing agile software development includes displaying a group of assets associated with an agile software development process. The group has a particular type and the assets include a first set of attributes selected for display. In response to detecting a request by a first user a group of available attributes is displayed including the first set. De selection of an attribute from the first set is detected. For other users accessing respective groups of assets of the particular type the first set of attributes for assets in the respective groups is displayed wherein the first set does not include the deselected attribute.

A system for managing agile software development includes memory a display one or more processors and one or more programs stored in the memory and configured for execution by the one or more processors. The one or more programs include instructions to display a group of assets associated with an agile software development process. The group has a particular type and the assets include a first set of attributes selected for display. The one or more programs also include instructions to display a group of available attributes including the first set in response to detecting a request by a first user instructions to detect de selection of an attribute from the first set and instructions to display to other users accessing respective groups of assets of the particular type the first set of attributes for assets in the respective groups wherein the first set does not include the deselected attribute.

A computer readable storage medium stores one or more programs for use in managing agile software development. The one or more programs include instructions to display a group of assets associated with an agile software development process. The group has a particular type and the assets include a first set of attributes selected for display. The one or more programs also include instructions to display a group of available attributes including the first set in response to detecting a request by a first user instructions to detect de selection of an attribute from the first set and instructions to display to other users accessing respective groups of assets of the particular type the first set of attributes for assets in the respective groups wherein the first set does not include the deselected attribute.

A system for managing agile software development includes memory a display and one or more processors. The system also includes means for displaying a group of assets associated with an agile software development process. The group has a particular type and the assets include a first set of attributes selected for display. The system further includes means for displaying a group of available attributes including the first set in response to detecting a request by a first user means for detecting de selection of an attribute from the first set and means for displaying to other users accessing respective groups of assets of the particular type the first set of attributes for assets in the respective groups wherein the first set does not include the deselected attribute.

A method of managing agile software development includes displaying a group of assets associated with an agile software development process. The group has a particular type and the assets include a set of attributes selected for display. User input fields to edit attributes in a first subset of the set of attributes are displayed. De selection of an attribute from the first subset by a first user is detected. For other users accessing respective groups of assets of the particular type user input fields to edit the attributes in the first subset are displayed wherein the first subset does not include the deselected attribute.

A system for managing agile software development includes memory a display one or more processors and one or more programs stored in the memory and configured for execution by the one or more processors. The one or more programs include instructions to display a group of assets associated with an agile software development process. The group has a particular type and the assets include a set of attributes selected for display. The one or more programs also include instructions to display user input fields to edit attributes in a first subset of the set of attributes instructions to detect de selection of an attribute from the subset and instructions to display to other users accessing respective groups of assets of the particular type user input fields to edit the attributes in the subset wherein the subset does not include the deselected attribute.

A computer readable storage medium stores one or more programs for use in managing agile software development. The one or more programs include instructions to display a group of assets associated with an agile software development process. The group has a particular type and the assets include a set of attributes selected for display. The one or more programs also include instructions to display user input fields to edit attributes in a first subset of the set of attributes instructions to detect de selection of an attribute from the subset and instructions to display to other users accessing respective groups of assets of the particular type user input fields to edit the attributes in the subset wherein the subset does not include the deselected attribute.

A system for managing agile software development includes memory a display and one or more processors. The system also includes means for displaying a group of assets associated with an agile software development process. The group has a particular type and the assets include a set of attributes selected for display. The system further includes means for displaying user input fields to edit attributes in a first subset of the set of attributes means for detecting de selection of an attribute from the subset and means for displaying to other users accessing respective groups of assets of the particular type user input fields to edit the attributes in the subset wherein the subset does not include the deselected attribute.

Reference will now be made in detail to embodiments examples of which are illustrated in the accompanying drawings. In the following detailed description numerous specific details are set forth in order to provide a thorough understanding of the present invention. However it will be apparent to one of ordinary skill in the art that the present invention may be practiced without these specific details. In other instances well known methods procedures components and circuits have not been described in detail so as not to unnecessarily obscure aspects of the embodiments.

Work item planning includes identifying work to be performed during the software development process. For examples features to be included in the software being developed are specified and software defects to be fixed during development are identified. Depending on the agile methodology being used features also may be referred to as stories backlog items or requirements. In general a work item is any item for which the agile development management software platform can track and record effort such as time spent working on the item.

Release planning includes assigning identified work items e.g. features and defects to particular planned software releases. For example certain features may be included in an initial release with additional features to be added in subsequent releases. Similarly fixing various defects may be scheduled across multiple releases. More generally release planning may include assigning identified work items to levels or nodes in a project hierarchy. The project hierarchy may include projects sub projects releases teams and other internal organizations clients or customers and vendors.

Iteration planning includes assigning work items to iterations. There may be multiple iterations performed to prepare a particular software release iteration planning thus involves specifying what work will be performed in which iterations. For example features and defects are assigned to particular iterations. Within each iteration tasks and tests corresponding to the features and defects are defined. A task is a unit of work performed as part of delivering a feature. In some embodiments a task is defined such that it takes no more than 3 days to perform. A test is an acceptance criterion that a feature must satisfy. Work estimates for the time required to complete tests and tasks may be entered.

The actual time spent working on the work items e.g. on the features and defects and their corresponding tasks and tests during an iteration is tracked and compared against the estimates. Progress and status reports may be displayed graphically. For example a dashboard user interface may display multiple graphical reports. Possible graphical reports include burndown charts velocity charts burn up charts Gantt charts scope change defect trending test case status and defect actuals. A burndown chart illustrates remaining work vs. time. Velocity refers to the work done per iteration on a project. Scope change refers to a change in requirements such as the addition or deletion of features and defects. Reports may be generated for a specified level or node in the project hierarchy.

The operations in the development process flow are presented sequentially in for purposes of illustration. However the operations need not be performed sequentially. For example the planning operations and may be updated dynamically throughout the agile development process. Similarly tracking may be performed dynamically and may prompt subsequent planning changes. Furthermore multiple operations may be combined into a single operation and additional operations may be added to the flow .

At a high level the agile software development process has various assets associated with it. Nodes in the project hierarchy such as projects sub projects releases teams clients and vendors can be considered assets as can iterations. Work items such as features and defects are assets as are tasks and tests. Assets may be associated with other assets for example tasks and tests are associated with corresponding features and defects which in turn are associated with corresponding iterations.

An asset includes various attributes. In some embodiments each kind of asset e.g. project feature task etc. has a specified set of associated attributes. Types of attributes include text strings numerical values values calculated according to a formula synthetic attributes and associated assets. A first asset associated with a second asset thus is considered an attribute of the second asset. An attribute may be automatically included e.g. hard coded or created for a particular installation in agile development management software or may be customized i.e. user defined .

Agile development management software can display groups of assets of a particular type. For example groups of assets associated with work item planning release planning or iteration planning may be displayed. In some embodiments the groups of assets are displayed in a user interface shown in a browser window. In other embodiments the user interface is shown by a stand alone application.

The displayed assets in the group are associated with a particular project hierarchy node displayed for example in a project selection window .

Assets may be added to the group for example by selecting an add story i.e. add feature link or an add defect link . In general a user interface for displaying a group of assets may include multiple links or icons for adding multiple respective kinds of assets or may include a single link or icon for adding assets. In some embodiments selection of a link or icon for adding assets results in the display of a separate user interface for adding assets not shown .

Assets displayed in the group also may be edited for example by selecting an edit link e.g. corresponding to a respective asset. In some embodiments selection of an edit link or corresponding icon results in the display of a separate user interface for editing assets not shown .

The displayed assets include a set of attributes selected for display such as title ID owner status priority estimate and project . Some of the attributes are also assets such as project . Some of the values for the attributes are blank for example no owner status priority or estimate is shown for a number of assets including feature .

Assets to be displayed in the group may be filtered according to one or more attributes using filters .

A subset of the displayed attributes includes user input fields to accept edits to attribute values. For example a user may select a priority from a drop down box and may enter a work estimate e.g. an estimate of required time in a text input box .

Upon detecting user selection of a customization link or icon such as customize link a customization user interface is displayed that shows a group of available attributes as illustrated in in accordance with some embodiments. In the example of the group is shown as a list. The available attributes include the set of attributes selected for display and may include additional attributes that are not currently selected for display. In some embodiments the group of available attributes may be viewed directly from the user interface for example via a drop down menu instead of through the customization user interface .

The customization user interface allows a user to select or de select attributes for display. Display selection boxes e.g. and associated with respective attributes e.g. project and attachment count indicate which attributes are currently selected for display. For example the checked display selection boxes in correspond to the set of attributes displayed for the group of assets in user interface . The user may select an attribute i.e. add the attribute to the set selected for display or de select an attribute i.e. remove the attribute from the set selected for display by clicking on the corresponding display selection box e.g. with a mouse or other selection device . For example clicking on display selection box deselects the project attribute as illustrated in . Similarly clicking on display selection box selects the attachment count attribute for display. Alternate means of selecting and deselecting attributes are possible such as clicking on a radio button associated with the attribute or clicking on the attribute itself.

Changes to the set of selected attributes may be applied by selecting an apply icon or may be canceled by selecting a cancel icon . Once the changes have been applied the updated set of selected attributes is included in displays of groups of assets of the same type as the group . For example when a work item planning group is displayed subsequent to de selection of the project attribute the project attribute is not included in the display as illustrated in in accordance with some embodiments. If the attachment count attribute had been selected the attachment count attribute would be included in subsequent display of the group .

The customization user interface also allows a user to specify whether to permit particular attributes to be edited. Editing selection boxes e.g. and associated with respective attributes e.g. status and priority indicate which attributes are in the subset to be displayed with user input fields. For example the checked editing selection boxes and in correspond to the subset of attributes i.e. attributes and with user input fields in user interface . The user may select an attribute for editing i.e. add the attribute to the subset or de select an attribute for editing i.e. remove the attribute from the subset by clicking on the corresponding editing selection box e.g. with a mouse or other selection device . In the example of adding status to the subset e.g. by clicking on box would cause subsequently displayed work item planning groups to include user input fields for the status attribute . Removing priority from the subset e.g. by clicking on box would cause subsequently displayed work item planning groups not to include user input fields for the priority attribute .

Customized settings entered in the user interface regarding the display of attributes and the ability to edit attributes may apply only to a particular user or may apply to multiple users. For example a customized setting may be created as a system default for all users viewing a particular type of group of assets e.g. a work item planning group a release planning group or an iteration planning group . In some embodiments a user must have particular privileges such as system administrator privileges to create a system default customized setting. More generally customized settings may be created that serve as a default for all users at or below a particular node in the project hierarchy. For example a customized setting may serve as a default for all users on a particular team or on a group of teams or for all users working on a particular project sub project or release. In some embodiments a user creating a particular default setting must have appropriate corresponding privileges. For example authority to create a customized default for a particular team could be limited to the team leader.

In the user interface the level of application of the customized setting is specified using a drop down menu . The system defaults level shown as selected in the drop down menu indicates that the customized setting applies to all users viewing groups of the corresponding type. In some embodiments the system defaults option will not be displayed in the drop down menu unless the user has already logged as a system administrator or with other appropriate privileges.

In some embodiments a user can override a default customized setting e.g. a system default by creating a user specific customized setting also known as a personalized setting. For example the user may use the drop down menu to specify that a customized setting created via user interface is specific to that user. This personalized setting then will control the display and ability to edit attributes associated assets in a group of a particular type. If a user does not have a personalized setting the default customized setting will control the display and ability to edit attributes associated with the group. In some embodiments a system administrator or other user with appropriate privileges may specify for a particular default customized setting whether individual users are permitted to override the default. In some embodiments individual users are permitted to override the default with regard to attributes to be displayed but not with regard to attributes to be edited.

In some embodiments the particular type is selected from the group consisting of work item planning release planning and iteration planning . A user may select the particular type by for example selecting a tab e.g. work item planning tab selecting a type from a drop down menu or using similar well known methods of selection for graphical user interfaces.

In some embodiments the group of assets includes at least one asset selected from the group consisting of project iteration feature defect story backlog item requirement test and task . For example the group may include one or more features and one or more defects as shown for group .

A request by a first user is detected. In some embodiments the first user is a system administrator or other user with privileges to create a customized default setting. In response to detecting the request by the first user a group of available attributes is displayed including the first set. In some embodiments the available attributes include at least one attribute selected from the group consisting of priority owner status work estimate identification code and project . For example the customization user interface shows a group of available attributes . In the customization user interface assets in the first set are indicated by check marks in corresponding display selection boxes e.g. .

De selection of an attribute from the first set is detected . For example clicking on the display selection box for the project attribute in the customization user interface results in de selection of the project attribute from the first set as illustrated in .

For other users subsequently accessing respective groups of assets of the particular type the first set of attributes is displayed for assets in the respective groups wherein the first set does not include the deselected attribute. For example after de selection of the project attribute a user accessing a work item planning group will not be shown the project attribute.

In addition to or instead of detecting de selection of an attribute from the first set selection of an additional attribute for inclusion in the first set is detected . For exampling clicking on the display selection box for the attachment count attribute results in selection of the attachment count attribute for inclusion in the first set.

For other users subsequently accessing respective groups of assets of the particular type the first set of attributes is displayed for assets in the respective groups wherein the first set includes the additional attribute. For example after selection of the attachment count attribute a user accessing a work item planning group will be shown the attachment count attribute.

The method thus enables creation of default customized settings such as system defaults for viewing groups of assets. While the method includes a number of operations that appear to occur in a specific order it should be apparent that the method can include more or fewer operations which can be executed serially or in parallel. An order of two or more operations may be changed and two or more operations may be combined into a single operation. For example while operations and are shown as occurring in parallel either operations or may be omitted. Alternately operations and may both be performed prior to operations and which subsequently are performed in a single operation. Other variations are possible.

When a second user accesses a respective group of assets of the same type as the group displayed in operation a determination is made as to whether the second user has an associated second set of attributes selected for display. If the user does not have an associated second set No the first set of attributes is displayed for assets in the respective group wherein the first set does not include the deselected attribute. If the user has an associated second set Yes the second set of attributes is displayed for assets in the respective group.

In a variant of the method selection of an additional attribute for inclusion in the first set is detected . When the second user subsequently accesses the respective group of assets of the same type as the group displayed in operation the determination is made as to whether the second user has an associated second set of attributes selected for display. If the second user does not have an associated second set the first set of attributes is displayed for assets in the respective groups wherein the first set includes the additional attribute. If the user has an associated second set the second set of attributes is displayed for assets in the respective group.

The method thus allows users either to use default customized settings or to create personalized settings that override the default.

User input fields to edit attributes in a first subset of the set of attributes are displayed . For example user input fields e.g. and corresponding to attributes priority and estimate are displayed in user interface . In some embodiments the first subset includes at least one attribute selected from the group consisting of priority owner status work estimate identification code and project .

De selection of an attribute from the first subset by a first user is detected . For example clicking on the editing selection box for the priority attribute in the customization user interface would result in de selection of the priority attribute from the first subset.

For other users subsequently accessing respective groups of assets of the particular type user input fields to edit the attributes in the first subset are displayed wherein the first subset does not include the deselected attribute. For example after de selection of the priority attribute a user accessing a work item planning group will not be shown a user input field for the priority attribute.

In addition to or instead of detecting de selection of an attribute from the first subset selection of an additional attribute by the first user for inclusion in the first subset is detected . For exampling clicking on the editing selection box for the status attribute would result in selection of the status attribute for inclusion in the first subset.

For other users subsequently accessing respective groups of assets of the particular type user input fields to edit the attributes in the first subset are displayed including user input fields for the additional attribute. For example after selection of the status attribute a user accessing a work item planning group will be shown user input fields to edit the status attribute.

The method thus enables creation of default customized settings such as system defaults to enable editing of specified attributes. While the method includes a number of operations that appear to occur in a specific order it should be apparent that the method can include more or fewer operations which can be executed serially or in parallel. An order of two or more operations may be changed and two or more operations may be combined into a single operation. For example while operations and are shown as occurring in parallel either operations or may be omitted. Alternately operations and may both be performed prior to operations and which subsequently are performed in a single operation. Other variations are possible.

When a second user accesses a respective group of assets of the same type as the group displayed in operation a determination is made as to whether the second user has an associated second subset of attributes. If the second user does not have an associated second subset No user input fields are displayed to edit the attributes in the first subset wherein the first subset does not include the deselected attribute. If the second user has an associated second subset Yes user input fields are displayed to edit the attributes in the second subset for assets in the respective group.

In a variant of the method selection of an additional attribute by the first user for inclusion in the first subset is detected . When the second user subsequently accesses the respective group of assets of the same type as the group displayed in operation the determination is made as to whether the second user has an associated second subset of attributes. If the second user does not have an associated second subset user input fields are displayed to edit the attributes in the first subset including user input fields for the additional attribute. If the second user has an associated second subset user input fields are displayed to edit the attributes in the second subset for assets in the respective group.

The method thus enables editing of specified attributes in accordance with either default customized settings or personalized settings.

The server system includes a server and a database . Server serves as a front end for the server system . Server sometimes called a front end server provides an interface between the server system and the client systems . In some embodiments the functions of server may be divided or allocated among two or more servers.

The server system stores data relating to the agile development process including asset data and customization data . Asset data includes attributes for respective assets. An exemplary data structure for asset data is illustrated in described below. Customization data includes the level of the customization e.g. system default or personalized the type of asset group to which the customization applies and data indicating which available assets are selected for display and for editing via user input fields. An exemplary data structure for customization data is illustrated in described below.

It should be appreciated that the server system including the server and the database may be implemented as a distributed system of multiple computers. However for convenience of explanation the server system is described herein as being implemented on a single computer which can be considered a single logical system.

A user interfaces with the server system at a client system or device hereinafter called the client system for ease of reference . The client system includes a computer or computer controlled device such as a personal digital assistant PDA cellular telephone or the like. The computer typically includes one or more processors not shown memory which may include volatile memory not shown and non volatile memory such as a hard disk drive and a display . The computer may also have input devices such as a keyboard and a mouse not shown .

In some embodiments a user may interact with the server system via an agile development user interface presented on the display . Examples of user interfaces include user interface and customization user interface . The user thus may interact with the server system to view or edit groups of assets e.g. via user interface and to create customized settings e.g. according to methods or .

In some embodiments the agile development user interface may be a web based user interface. That is the user interface includes one or more web pages. It is noted that a single web page can contain multiple frames each of which may appear when displayed by a browser application to be a distinct web page. The web page s may be written in the Hypertext Markup Language HTML Extensible Markup Language XML or any other suitable language for preparing web pages and may include one or more scripts for interfacing with the server system . For example the web page s may include a Javascript application that interfaces with the server system via an application programming interface API . The Javascript application receives asset data and customization data from the server system manages the rendering of that data at the client and also performs the client side aspects of other tasks such as marking attributes as selected or de selected updating attribute values according to data entered in user input fields and transmitting user requests to the server system .

In some other embodiments the agile development user interface may be a part of a stand alone application that is run on the client system . The standalone application may interface with the server system via an application programming interface API . Alternately instead of using a client sever model the agile development management software may be installed and used on a single computer combining the functionalities of the server system and client system .

In some embodiments the agile development management module includes a local database for storing data sent by the server e.g. asset data and customization data an asset display module for displaying groups of assets e.g. via user interface an asset editing module for updating attribute values e.g. in accordance with data entered via user input fields a customization module for enabling creation of customized settings e.g. via customization user interface and a server interface module for interfacing with server computer . In some embodiments the server interface module includes a cache for storing data to be transmitted to the server.

In some embodiments the agile development management module may be a script based module embedded in a web page served from the server system . The web page may be rendered by a client application such as a web browser at the client computer . When the web page is rendered the agile development management module is executed thereby providing a web based interface to the server system . The script based agile development management module may be written in JavaScript AJAX ECMAScript Perl or any other suitable scripting language.

In some other embodiments the agile development management module may be a standalone application stored in memory of the client computer .

Each of the above identified elements in may be stored in one or more of the previously mentioned memory devices. Each of the above identified modules corresponds to a set of instructions for performing a function described above. The above identified modules or programs i.e. sets of instructions need not be implemented as separate software programs procedures or modules and thus various subsets of these modules may be combined or otherwise re arranged in various embodiments. In some embodiments memory may store a subset of the modules and data structures identified above. Furthermore memory may store additional modules and data structures not described above.

In some embodiments the application interface includes a presentation layer for rendering user interfaces e.g. UI and UI accessed by a client system .

In some embodiments the customization data includes three levels of customization settings used by the presentation layer to render user interfaces. A base level includes settings that are always included in the agile development management software. An installation level includes settings that are created for a particular installation of the agile development management software. For example the installation level may include customization settings created via user interface . A user level includes personalized settings. Additional levels are possible such as levels corresponding to a particular project hierarchy node e.g. to a particular team . In some embodiments settings at a given level override settings at lower levels. For example installation settings override base settings and user settings override both installation and base settings. In some embodiments the presentation layer first applies base level settings then overlays any installation level overrides and finally overlays any user level overrides.

Each of the above identified elements in may be stored in one or more of the previously mentioned memory devices. Each of the above identified modules corresponds to a set of instructions for performing a function described above. The above identified modules or programs i.e. sets of instructions need not be implemented as separate software programs procedures or modules and thus various subsets of these modules may be combined or otherwise re arranged in various embodiments. In some embodiments memory may store a subset of the modules and data structures identified above. Furthermore memory may store additional modules and data structures not described above.

Although shows a server computer is intended more as a functional description of the various features which may be present in a set of servers than as a structural schematic of the embodiments described herein. In practice and as recognized by those of ordinary skill in the art items shown separately could be combined and some items could be separated. For example some items shown separately in could be implemented on single servers and single items could be implemented by one or more servers.

The agile development management database stores data in various tables. For example an Asset Type table includes an entry for each kind of asset such as feature defect task or test. An Attribute Definition table defines the attributes associated with each kind of asset listed in the Asset Type table. A Synthetic Attribute table references formulas used to calculate synthetic attributes. An Attribute Security Check table contains references to operations used to determine whether a user may access or modify particular attributes. For attributes that are associated assets a Relation Definition table defines relationships between assets. In addition a Many to Many Relation Definition table may contain relationship information for assets in many to many relationship with other assets. Other tables may specify business rules for various assets.

Attribute values for particular assets are stored in asset tables as illustrated in in accordance with some embodiments. In some embodiments a table corresponds to a particular kind of asset such as feature defect task or test. The asset table includes a row for each respective asset stored in the table. Each row includes fields that contain values for attributes of the respective asset as defined in the Attribute Definition table. For example the attribute fields include title asset ID project owner and various other attributes . Other possible attribute fields include without limitation the attributes listed in group such as status priority estimate and attachment counts. The asset table also includes fields to specify attributes that are associated assets. For example if a respective asset is a feature or defect fields may specify tasks and tests associated with the feature or defect for example by providing the asset IDs of the tasks and tests. In another example a field may specify an iteration to which an asset is assigned.

In some embodiments values for user defined customized attributes are stored in separate tables for specific types of custom attributes. For example numeric customized attributes are stored in a first table text customized attributes are stored in a second table boolean customized attributes are stored in a third table and so on.

Customization data such as the three levels of settings used by the presentation layer also may be stored in tables in the database . is a diagram illustrating a customization table for customized settings in accordance with some embodiments. Each row in the table corresponds to a customized setting. Each row includes a field that specifies the type of asset group such as work item planning release planning or iteration planning to which the customized setting applies. Each row also includes a field specifying the level of the customized setting such as system default or personalized setting. In addition each row includes fields corresponding to available attributes such as title asset ID project owner and various other attributes . In some embodiments a field corresponding to an available attribute includes a display flag and an edit flag . The display flag indicates whether the attribute is selected for display. The edit flag indicates whether to display user input fields to permit editing of the attribute.

Tables and thus include information to allow the agile development management application interface to respond to a request from a client computer when a user seeks to display an asset group of a particular type. The interface can query asset tables to identify the assets in the group and can query the customization table to determine which customized setting if any applies.

The foregoing description for purpose of explanation has been described with reference to specific embodiments. However the illustrative discussions above are not intended to be exhaustive or to limit the invention to the precise forms disclosed. Many modifications and variations are possible in view of the above teachings. The embodiments were chosen and described in order to best explain the principles of the invention and its practical applications to thereby enable others skilled in the art to best utilize the invention and various embodiments with various modifications as are suited to the particular use contemplated.

