---

title: Performing a collaborative search in a computing network
abstract: Method for performing a collaborative search in a computing network. In one implementation, the method may include receiving a search criteria from a user, identifying one or more agents who have performed a search using the search criteria, the agents and the user belonging to the computing network, identifying one or more search results that the agents have previously selected as being relevant to the search criteria, ranking the search results, and displaying the search results according to the ranking.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08015177&OS=08015177&RS=08015177
owner: Microsoft Corporation
number: 08015177
owner_city: Redmond
owner_country: US
publication_date: 20081118
---
This application claims priority to U.S. provisional patent application Ser. No. 61 078 068 filed Jul. 3 2008 titled METHOD FOR QUANTIFYING TRUST which is incorporated herein by reference.

This application claims priority to U.S. provisional patent application Ser. No. 61 094 861 filed Sep. 5 2008 titled TRUST AND COLLABORATION which is incorporated herein by reference.

As digital communications networks and transactions increase the need became apparent for ways in which computer users could trust each other. Digital trust systems such as Public Key Infrastructure PKI build trust hierarchies such as the Web of Trust so that users could securely communicate with each other authenticate the identities of each other and determine the integrity of the messages received from each other. In addition to securing communications authenticating identities and determining message integrity similar trust characteristics may be used by digital search services to help users locate specific items in digital information system environments. Current search algorithms rank search results in a variety of methods including accounting for the number of hyperlinks that direct a user to specific webpage. However these methods fail to take into account the actions and preferences of each individual user or his preferred ranking of the search results.

Described herein are implementations of various technologies directed to performing a collaborative search in a computing environment connected to a digital network or system. In one implementation a search service may be configured to analyze the previous searches of past search service users or agents to perform a new search on a computing network. The search service may exist on a computing network such as a server accessible via the Internet and it may be configured to receive a request to locate a specific item that may be stored on the computing network. The search service may then receive one or more search criteria from a user to assist in locating the specific item from the digital information network. The search service may cross reference the received search criteria with previous search criteria of previous search service agents.

Upon locating one or more agents in the computing network that may have performed a search using the same search criteria as the current user the search service may determine a gap or discrepancy value for each of the agents that performed an identical search. In one implementation a search or query is a pair of variables d U where d is a deterministic preamble composed of key words and click patterns and U is a random variable over similar message space. U assigns probabilities to potential future evolvements of the search process. The agents that help the user or active agent with their recommendations all performed previous searches that started with the same deterministic preamble d but may have distinct U s.

In one implementation the discrepancy values may describe the discrepancy between the various U s. These discrepancy values are in the interval 0 1 . The smaller the discrepancy values the higher the confidence in the recommendation. Trust or confidence values may then be defined as 1 discrepancy value. Groups of agents are clustered together when their trust values are close to 1 ie small gaps . Each cluster may make its own recommendations to the active agent. The discrepancy or gap or uncertainty value may relate to an agent s confidence in the one or more previous agents that used the same search criteria. In addition to the discrepancy values the search service may assign a weight value to each matching agent. The weight value reflects the relative significance of the opinion of an agent on a given matter. The sum of weights is 1 and the weights may relate to the probability that the intended search result of previous agents search may be identical to that of the intended search result of the current user.

The search service may then group agents with similar discrepancy values together in a cluster. Each cluster may provide the search service with a recommendation for the user that may relate to the user s search criteria. The search service may then list the intended search result of each cluster or previous agent s recommendation according to the confidence and uncertainty values that the user may have in each agent. In addition to the confidence and uncertainty values the search service may factor in a weight value in each matching agent. The original user may weigh the confidence and uncertainty values of each previous agent differently depending on previous experiences with the agent other parties confidence value in the agent or other characteristics. The search service may iterate through the above described process until the user finds his intended search result. Upon locating his intended search result the search service may reassess and save the resulting confidence uncertainty and weight values of each agent in the computing network for future searches.

The above referenced summary section is provided to introduce a selection of concepts in a simplified form that are further described below in the detailed description section. The summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used to limit the scope of the claimed subject matter. Furthermore the claimed subject matter is not limited to implementations that solve any or all disadvantages noted in any part of this disclosure.

In general one or more implementations described herein are directed to performing a collaborative search in a computing network. One or more implementations of various techniques for performing a collaborative search will be described in more detail with reference to .

Implementations of various technologies described herein may be operational with numerous general purpose or special purpose computing system environments or configurations. Examples of well known computing systems environments and or configurations that may be suitable for use with the various technologies described herein include but are not limited to personal computers server computers hand held or laptop devices multiprocessor systems microprocessor based systems set top boxes programmable consumer electronics network PCs minicomputers mainframe computers distributed computing environments that include any of the above systems or devices and the like.

The various technologies described herein may be implemented in the general context of computer executable instructions such as program modules being executed by a computer. Generally program modules include routines programs objects components data structures etc. that performs particular tasks or implement particular abstract data types. The various technologies described herein may also be implemented in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network e.g. by hardwired links wireless links or combinations thereof. In a distributed computing environment program modules may be located in both local and remote computer storage media including memory storage devices.

The computing system may include a central processing unit CPU a system memory and a system bus that couples various system components including the system memory to the CPU . Although only one CPU is illustrated in it should be understood that in some implementations the computing system may include more than one CPU. The system bus may be any of several types of bus structures including a memory bus or memory controller a peripheral bus and a local bus using any of a variety of bus architectures. By way of example and not limitation such architectures include Industry Standard Architecture ISA bus Micro Channel Architecture MCA bus Enhanced ISA EISA bus Video Electronics Standards Association VESA local bus and Peripheral Component Interconnect PCI bus also known as Mezzanine bus. The system memory may include a read only memory ROM and a random access memory RAM . A basic input output system BIOS containing the basic routines that help transfer information between elements within the computing system such as during start up may be stored in the ROM .

The computing system may further include a hard disk drive for reading from and writing to a hard disk a magnetic disk drive for reading from and writing to a removable magnetic disk and an optical disk drive for reading from and writing to a removable optical disk such as a CD ROM or other optical media. The hard disk drive the magnetic disk drive and the optical disk drive may be connected to the system bus by a hard disk drive interface a magnetic disk drive interface and an optical drive interface respectively. The drives and their associated computer readable media may provide nonvolatile storage of computer readable instructions data structures program modules and other data for the computing system .

Although the computing system is described herein as having a hard disk a removable magnetic disk and a removable optical disk it should be appreciated by those skilled in the art that the computing system may also include other types of computer readable media that may be accessed by a computer. For example such computer readable media may include computer storage media and communication media. Computer storage media may include volatile and non volatile and removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Computer storage media may further include RAM ROM erasable programmable read only memory EPROM electrically erasable programmable read only memory EEPROM flash memory or other solid state memory technology CD ROM digital versatile disks DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by the computing system . Communication media may embody computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and may include any information delivery media. The term modulated data signal may mean a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media may include wired media such as a wired network or direct wired connection and wireless media such as acoustic RF infrared and other wireless media. Combinations of any of the above may also be included within the scope of computer readable media.

A number of program modules may be stored on the hard disk magnetic disk optical disk ROM or RAM including an operating system one or more application programs program data and a database system . The operating system may be any suitable operating system that may control the operation of a networked personal or server computer such as Windows XP Mac OS X Unix variants e.g. Linux and BSD and the like.

A user may enter commands and information into the computing system through input devices such as a keyboard and pointing device . Other input devices may include a microphone joystick game pad satellite dish scanner or the like. These and other input devices may be connected to the CPU through a serial port interface coupled to system bus but may be connected by other interfaces such as a parallel port game port or a universal serial bus USB . A monitor or other type of display device may also be connected to system bus via an interface such as a video adapter . In addition to the monitor the computing system may further include other peripheral output devices such as speakers and printers.

Further the computing system may operate in a networked environment using logical connections to one or more remote computers The logical connections may be any connection that is commonplace in offices enterprise wide computer networks intranets and the Internet such as local area network LAN and a wide area network WAN .

When using a LAN networking environment the computing system may be connected to the local network through a network interface or adapter . When used in a WAN networking environment the computing system may include a modem wireless router or other means for establishing communication over a wide area network such as the Internet. The modem which may be internal or external may be connected to the system bus via the serial port interface . In a networked environment program modules depicted relative to the computing system or portions thereof may be stored in a remote memory storage device . The remote memory storage device may include the collaborative search application . In one implementation the collaborative search application may be stored on the hard disk magnetic disk optical disk ROM or RAM . The collaborative search application may perform a search service on the computing network. It will be described in more detail with reference to below. It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used.

It should be understood that the various technologies described herein may be implemented in connection with hardware software or a combination of both. Thus various technologies or certain aspects or portions thereof may take the form of program code i.e. instructions embodied in tangible media such as floppy diskettes CD ROMs hard drives or any other machine readable storage medium wherein when the program code is loaded into and executed by a machine such as a computer the machine becomes an apparatus for practicing the various technologies. In the case of program code execution on programmable computers the computing device may include a processor a storage medium readable by the processor including volatile and non volatile memory and or storage elements at least one input device and at least one output device. One or more programs that may implement or utilize the various technologies described herein may use an application programming interface API reusable controls and the like. Such programs may be implemented in a high level procedural or object oriented programming language to communicate with a computer system. However the program s may be implemented in assembly or machine language if desired. In any case the language may be a compiled or interpreted language and combined with hardware implementations.

At step the collaborative search application may receive a request to perform a search from a user. In one implementation the user may be searching for a webpage an image or information that may be stored on a computing network. The collaborative search application may be stored on a server that may provide a search service and it may have access to the computing network via the server. A user may input his request to perform a search by entering certain search criteria in a text field that may be provided by the collaborative search application . The search criteria may include words that may describe the item for which the user may be searching. For example if the user is in search of information pertaining to New York City he may use the words New York as the search criteria for the collaborative search application .

At step the collaborative search application may cross reference the user s search criteria with the search criteria of previous agents in the computing network. Agents may represent one or more users that may have previously performed a search in the computing network. In one implementation the collaborative search application may require that the search criteria of the current user and the previous agents match in an exact fashion order spelling etc. but it should be noted that the collaborative search application may also allow for a degree of difference in search criteria. In one implementation each agent may store its search history on its local hard drive or on any type of memory storage device. When a user initiates a new search the collaborative search application may search the memory storage device of the agents that may have performed a similar search in the past. The agents that may have performed a similar search as that of the user may be defined as part of a clique or cluster. In one implementation the agents whose search histories may be stored in a memory storage device may have granted the collaborative search application permission to store and use information pertaining to their search histories in accordance with implementations described herein.

At step the collaborative search application may assign a discrepancy value for the agents that had similar search criteria. In one implementation the collaborative search application may assign an extremely low discrepancy value or gap value to those agents who had search criteria that matched exactly that of the current user. The search performed by a user may be described as a pair d U where d is a deterministic preamble composed of key words or search criteria received at step used for a search or click patterns used to locate a search result and U is a random variable over a message space describing an agent s past searches that started with the deterministic preamble d. U can be viewed as a probabilistic tree whose root is the last symbol of the deterministic preamble d and whose leaves are past successful search targets. The history of agents is used to predict the future evolvement of the active user.

In one implementation if the agents performed searches in the past that started with the same deterministic preamble d as the active agent the agents may provide the user with one or more recommendations about the user s search request. The collaborative search application may then compute a discrepancy value to quantify the differences between any two agents that agree on the deterministic preamble d. The discrepancy value is computed over their respective U s using the function D Ui Uj described in the next paragraph. The active agent the user may or may not have a known U. The more information the engine has about the U of an agent the higher the weight of that agent. The discrepancy values are in the interval 0 1 . The smaller the discrepancy value that may exist between an active agent and an agent the higher the active agent s confidence may be in the agent s recommendation. Trust or confidence values in an agent may be defined as 1 discrepancy value. The collaborative search application may form one or more clusters containing a group of agents having trust values close to 1 i.e. with small gaps . Each cluster may make its own recommendations to the active agent.

In one implementation the discrepancy value may be a derivative of the conditional entropies that may be defined as D X Y H X Y H X Y H Y X H X Y where H X Y is conditional entropy of X given Y and H X Y is their mutual entropy. These conditional entropies gauge the discrepancy or gap between random variables Ui and Uj in order to create clusters of like minded agents. D X Y is a metric over the message space containing one or more random variables U. The collaborative search application may determine a discrepancy value D Ui Uj for each pair of agents based on their random variables Ui and Uj.

For example if the user used the search criteria New York to locate information on New York City the collaborative search application may identify ten agents that may have performed a previous search using the same search criteria New York. In this example New York may be the deterministic preamble d. The collaborative search application may locate one or more agents that may have performed a search with the same deterministic preamble d. Depending on what each agent with the same deterministic preamble d selected as his search result U the collaborative search application may calculate a discrepancy value between any pair of those agents the active agent user being one of them with the same deterministic preamble d. The collaborative search application assigns a low discrepancy value for each of the ten agents that performed a previous search using the same search criteria to each pair of agents that selected similar search result. Therefore the confidence value of each of these agents in each other may be close to 1 because the discrepancy values are low. In one implementation the collaborative search application may cluster the ten agents with similar selections U together. The collaborative search application may receive a recommendation from a cluster based on weighted averages.

If four of these agents intended to locate information on New York City and the other six agents may have intended to locate information on the state of New York the two groups of agents may still have one or more different intended search results. For example the four agents who intended to locate information on New York City may have four different intended search results pertaining to New York City such as Central Park the Empire State building the World Trade Center and the New York subway system. If each of these four agents access a different website related to Central Park the Empire State building the World Trade Center and the New York subway system then the collaborative search application may let d New York and U be a probabilistic tree where all the agents that proceed with Central Park have central park tree U that proceeds to split probabilistically to various results about central park. Likewise all the agents that proceed with the Empire State building may have probabilistic trees U s whose root is the Empire State but may proceed to split probabilistically to various results about its root. The collaborative search application may cluster the agents that agree on the deterministic preamble d based on the similarity of their probabilistic trees U. In one implementation the leaves of the trees are recommendations of each agent within the cluster. These recommendations are ranked based on their relative average probabilities within a cluster.

Initially the collaborative search application may be equally uncertain that the intended search result of each agent is identical to that of the current user because it may not have information about past searches of the ten agents. Therefore the collaborative search application may determine that each agent may have a high discrepancy value e.g. 90 .

In one implementation the collaborative search application may also assign a weight value for each agent. If the user and one or more agents consistently have the same search criteria and intended search results the collaborative search application may assign more weight to the actions of the one or more agents when performing a search for the user. However the collaborative search application may initially assign each agent with high confidence values equal weights due to lack of knowledge of the user and an agent s intended search results. For example if ten other agents in the computing network performed a search with the same search criteria and six of those ten agents had the same intended search result while the other four agents had a different intended search result the intended search result of those six agents may be listed on top if each agent was given an equal amount of weight by the collaborative search application . However if the collaborative search application assessed one agent outside the six in the majority with a higher weight value than the others the final search result of the agent with the highest weighted value may be listed on top. In one implementation if an agent does not have a history by which the collaborative search application can define its U his weight value may be low because of this scarce known history.

In one implementation the weight value given to each agent s search results may be independent of the confidence or uncertainty values. For example the confidence of agent i in agent k as computed by i may have the form 

Although it has been described herein that the collaborative search application may assess the weight value that a user may have for another agent it should be noted that in one implementation the user may assess the weight value that he may use for another agent. In another implementation the collaborative search application may assess the weight value that a user may have for another agent by analyzing other users weight value in the agent.

At step the collaborative search application may present to the user cliques of agents that agree on the deterministic preamble d with each clique clustered based on their U s. The collaborative search application may represent a clique according to the rankings of the intended search results of the agents based on each agent s confidence and weight values. In one implementation the collaborative search application may examine each cluster s or clique s probabilistic tree of selections U and view the leaves of the probabilistic tree of selections U as potential targets of the cluster s search. Each potential target may have its own probability of being selected by the user. The collaborative search application may calculate an average probability of the leaves for the clique with the weight values received at step . The collaborative search application may then make recommendations that may be ranked according their probabilities.

In one implementation let d a deterministic preamble denote the search criteria of one or more agents in a network. If U is defined as a random variable about possible future evolvement it may represent the uncertainty value described at step . The collaborative search application may define the search for similar agents who conducted similar searches as query d U . Where is the discrete time and the query is modified by the user as the process is executed. The most important modification is the choosing the next sub cluster. Other modifications are possible such as new key words and some new clique patterns. Upon locating one or more agents who conducted similar searches the collaborative search application may group the agents who conducted similar searches into clusters according to the similarities between their future evolvement U . The collaborative search application may then determine a discrepancy or discrepancy value by evaluating the metric D Ui Uj where Ui is a random variable representing user i s historic searches that started with the deterministic preamble d and likewise for user j. and D Ui Uj defines the discrepancy value between agent i who may be conducting the search and agent j who may have used a similar search criteria or deterministic preamble d . The discrepancy value D Ui Uj may be used to define a trust value by subtracting the discrepancy value from one. The consensus may represent an average trust of each agent in a cluster defined by 

The collaborative search application may determine a cohesion value of each cluster that may be defined as COH 1 max gap. The cohesion of a clique may represent how close two agents in a cluster may be to each other by examining the pair of agents in the cluster who may have future evolvement U that may be the furthest apart. The collaborative search application may then group one or more agents that may use the same search criteria d into near max cohesion trust cluster allowing some tolerances disciplined by the following restrictions. Let N denote the size of the message space of the cluster at round the message space is composed of the targets of the cluster and let denote the tolerance allowed at round then 1 exp N N 1 .

At step the collaborative search application may receive a selection from the user pertaining to a particular clique or a particular target of a clique from the list presented at step .

At step the collaborative search application may update the discrepancy value between the user and each agent based on the selection received at step . In one implementation the collaborative search application may repeat the discrepancy value calculation process as the user drills deeper into smaller sub cliques until she chooses a target.

In one implementation the collaborative search application may receive additional search criteria to help refine the previous search results and to help the user locate his intended search result. In one implementation the collaborative search application may provide the user with one or more additional information fields to enter additional search criteria to locate his intended search results. After receiving the additional search criteria the collaborative search application may repeat steps as described in the paragraphs above. As a result the additional search criteria may be used to identify one or more of the agents that may have performed a search with the identical additional search criteria. The confidence and uncertainty values for one or more of the original agents may then change accordingly.

Referring to the example described in step the user uses the search criteria of d 1 New York he may be presented with potential clusters or cliques titled Central park Empire State Building World Trade Center etc. After the user selects one of the clusters his choice may have updated d 1 to create d 2 that may describe the initial search criteria New York and the selection of the particular cluster. The collaborative search application may repeat the process as the user selects items further down the probabilistic tree U.

In one implementation the user may refine his search through the use of links that may be provided by one or more initial search results. For example the collaborative search application may initially perform a search for New York and return ten websites that pertain to the state of New York. In one implementation each of the ten websites may correspond to leaves of the probabilistic tree U of one or more agents in a cluster. The user may click a link to one of the ten websites and click another link from that website to a website pertaining to New York City which may be his intended search result. In one implementation the collaborative search application may record the links that the user may have used in locating his intended search result. The collaborative search application may compare the links used by the user to those used by one or more agents and determine the discrepancy uncertainty and weight values accordingly.

Referring back to step if the user locates his intended search target the collaborative search application may again evaluate the one or more agents who had the same intended search results based on the initial and or the refined search criteria. The collaborative search application may then assign a new discrepancy and weight values to all of the agents who initially had similar search criteria as the user. The new discrepancy uncertainty and weight values of the agents may be stored in a memory and used for future searches that may be performed by the user using the collaborative search application . In one implementation the collaborative search application may iterate through the steps described in after it finds agents that agree on the deterministic preamble d clusters them into high COH cliques presents them to the user and receives a selection from the user.

Although the subject matter has been described in language specific to structural features and or methodological acts it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather the specific features and acts described above are disclosed as example forms of implementing the claims.

