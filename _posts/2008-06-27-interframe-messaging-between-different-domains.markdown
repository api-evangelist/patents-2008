---

title: Inter-frame messaging between different domains
abstract: Cross-domain communication between a parent web page hosted in a parent domain and a child web page hosted in a different child domain is provided. Upon downloading the parent page and child page into a client's web browser, an IFM-channel connection can be established within the browser between the parent page and child page, which can be used to bidirectionally communicate text-based messages containing commands and HTML content directly between the parent page and child page. Additionally, an XML-channel connection can be established within the browser between the parent page and child page, which can be used to bidirectionally communicate text-based messages containing HTTP commands and XML content directly between the parent page and child page. This cross-domain communication of messages takes place completely within the browser.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08209706&OS=08209706&RS=08209706
owner: Microsoft Corporation
number: 08209706
owner_city: Redmond
owner_country: US
publication_date: 20080627
---
Web pages are an information resource which can be accessed by a user via a web browser which executes on a client computing device. Each web page is generally hosted on a website server computing device. Web pages are generally defined and stored in either hypertext markup language HTML or extensible hypertext markup language XHTML format. A user can make a client request to view a particular web page via the client s web browser. Based on this request the corresponding website server will download the requested web page to the client s browser which will render and display the web page to the user in the browser s display sector. A web page can provide the user with the ability to navigate to other web pages via embedded navigation elements such as hypertext links. Web pages can either be static or dynamic. A static web page consists of static content which is stored directly within the website server s file system. As such a static web page always contains the same content in response to all client requests for the web page. In contrast a dynamic web page is constructed on the fly by the website server each time the server receives a client request for the web page. As such a dynamic web page contains content which can vary based on the context and or conditions that exist at the time a particular client request for the web page is received by the website server. Client based scripting and server based scripting are two popular methods for generating dynamic web pages.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described hereafter in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used as an aid in determining the scope of the claimed subject matter.

Inter frame messaging IFM technique embodiments described herein generally provide for cross domain communication between a parent web page which is hosted in a parent domain and a child web page which is hosted in a different child domain where this cross domain communication takes place completely within the web browser of a client computing device. In one exemplary embodiment the parent web page can embed HTML content from the child web page. Upon downloading the parent web page into the browser an IFM frame object containing a parent instantiation of a channel control object can be constructed within the parent web page. Upon downloading the child web page into the browser an IFM channel object containing a child instantiation of the channel control object can be constructed within the browser. An IFM channel connection can then be established between the parent instantiation of the channel control object and the child instantiation of the channel control object. Then the established IFM channel connection can be used to bidirectionally communicate text based messages containing commands and HTML content directly between the parent web page and the child web page. In another exemplary embodiment the parent web page can embed XML content from the child web page. Upon downloading the parent web page into the browser an IFM frame object containing an IFM XMLHTTP request object can be constructed within the parent web page. Upon downloading the child web page into the browser an IFM channel object containing an IFM XMLHTTP proxy object can be constructed within the browser. An XML channel connection between the IFM XMLHTTP request object and the IFM XMLHTTP proxy object can then be used to bidirectionally communicate text based messages containing HTTP commands and XML content directly between the parent web page and the child web page.

As will be appreciated from the detailed description of the IFM technique embodiments which follows since the communication of messages between a web page hosted in one domain and another web page hosted in a different domain takes place completely within the client s web browser without having to first transmit the messages to a server the IFM technique embodiments described herein provide improved communication throughput compared to conventional iframe uniform resource locator URL techniques for communicating between different domains. Additionally by reducing server traffic the IFM technique embodiments improve server performance and preserve network bandwidth. Furthermore since the IFM technique embodiments described herein allow iframes in different domains to communicate with each other in a reliable secure and controlled manner within the client s web browser the IFM technique embodiments enable web pages from various web sites to interact with one another thus enabling new web page mashup scenarios.

In addition to the just described benefits other advantages of the IFM technique embodiments described herein will become apparent from the detailed description which follows hereafter when taken in conjunction with the drawing figures which accompany the detailed description.

In the following description of inter frame messaging IFM technique embodiments reference is made to the accompanying drawings which form a part hereof and in which are shown by way of illustration specific embodiments in which the IFM technique can be practiced. It is understood that other embodiments can be utilized and structural changes can be made without departing from the scope of the IFM technique embodiments. The term display sector is used herein to refer to a segmented region of a computer display device such as a monitor among other things in which a particular type of user operation is performed or a particular type of information such as a hypertext markup language HTML document or extensible hypertext markup language XHTML document among other things and or graphical user interface is displayed. The term domain is used herein to refer to an Internet domain. As is appreciated in the art of object oriented programming the term class is used herein to refer to a set of metadata which generally describes the rules by which an object behaves. A particular object is constructed from a particular class where the constructed object is typically capable of receiving messages from other objects processing information and sending messages to other objects. The messages can include both commands and web page content. It should be noted that although the IFM technique embodiments are described herein in relation to the Internet the IFM technique embodiments are also operational on private intranets which use the public Internet computing systems and networks to offer a select group of private applications to a restricted group of users as well as on any other collection of computing systems and networks not associated with the Internet.

As is appreciated in the art of computer networking and the Internet today s web browsers are designed to prevent one web page which is hosted on a website server computing device residing in one domain from directly communicating with or executing a script on another web page which is hosted on another website server computing device residing in another domain. In other words today s web browsers isolate web pages that are hosted on website servers which reside in different domains from one another. A primary reason for this domain isolation pertains to security. This domain isolation didn t cause problems in the early days of the Internet since the software applications for most web pages were located in a central website server as opposed to being located within a client computing device s web browser. In the rare cases where software applications for a particular web page were located within the client the applications typically only accessed content from a single website server which resided in the same domain as the client. Thus in the early days of the Internet website servers generally operated in a self contained manner and contained only HTML links to content located elsewhere.

Web page software applications have evolved since the early days of the Internet. Today a typical web page aggregates i.e. embeds content from other web pages which are hosted in different domains. This aggregation is driven by a number of different factors including the fact that a web page which employs such aggregation hereafter referred to as a parent web page can increase its value by allowing its users to access other web pages which are hosted in a diverse collection of other domains hereafter referred to as child web pages without having to leave the parent web page s domain. This aggregation thus requires communication between different domains.

As is appreciated in the art of computer networking and the Internet an inline frame iframe is an HTML element which is supported by many popular web browsers. Iframes make it possible to embed content from one or more child web pages inside a parent web page. The parent web page s content is rendered and displayed to a user within the web browser s display sector and each embedded child web page s content is presented to the user within a different sub sector of the browser s display sector. Each sub sector typically displays either a selectable link to the child web page s content or the actual content of the child web page.

While regular frames are typically used to divide the entire browser display sector into sub sectors one or more iframes can be employed a web page in order to display independent content to a user in much the same way as images which are embedded in a web page are typically displayed to a user. In other words the browser allocates space for each iframe which is taken into account when the parent web page s content is rendered and displayed to the user. Therefore when the user scrolls the content of the parent web page in the display sector each iframe scrolls along with it similar to an embedded image. Furthermore while regular frames are typically used to logically subdivide different types of content being displayed to a user from a common web page iframes can be used to display content from other web pages such as advertisements current financial markets information news bulletins and the like which is located across the network on other website servers. Additionally iframes operate independently within the browser. For example the size of each iframe can be independently specified. The content of the parent web page can also be displayed to the user while the content of each embedded child web page is being downloaded. Iframes can also optionally contain their own vertical and or horizontal scroll bars which operate independently of any scroll bars which exist in the browser s display sector. The following is a general overview of how iframes operate in the context of the IFM technique embodiments described herein.

Referring again to assuming one or more iframes are employed within the content of the parent web page where each iframe embeds content from a child web page the web browser will process render and display the iframes as follows. By way of example but not limitation the content of the parent web page depicted in includes two different iframes iframe and iframe . It is assumed that the parent web page is hosted in a domain A iframe is also hosted in domain A and iframe is hosted in another domain B. In an alternate web page embodiment not shown a single iframe can be employed in the parent web page. In this case the single iframe can be used to embed a child web page hosted either in the same domain as its parent web page or in a different domain than its parent web page. In another alternate web page embodiment not shown more than two iframes can be employed in the parent web page. In this case each of the iframes can be independently used to embed child web pages hosted either in the same domain as their parent web page or in different domains than their parent web page. By way of example but not limitation in an exemplary web page embodiment employing three iframes not shown where the parent web page is hosted in a domain A the first iframe can embed a first child web page hosted in another domain B the second iframe can embed a second child web page hosted in yet another domain C and the third iframe can embed a third child web page hosted in yet another domain D.

Referring again to iframe includes a listener iframe which shares the same domain as iframe . Correspondingly iframe includes a listener iframe which shares the same domain as iframe . Listener and listener can be considered to be nested iframes. When the content of the parent web page is received by the client s web browser the browser first creates iframe in its own domain domain A and provides iframe with a name to be used for listener . It is noted that any suitable name can be used for listener . In the exemplary embodiment depicted in listener s name is abc which represents a private hash. Iframe then creates the listener iframe in its domain using the private hash abc as its name. As is appreciated in the art of iframes listener is associated with a uniform resource locator URL address which is used by other web pages who want to communicate with the parent web page . In other words listener serves as a message receiver for messages intended for the parent web page . Listener also serves as a target display sub sector for content from other web pages intended for the parent web page .

Referring again to the browser also creates iframe in a different domain domain B and provides iframe with a name to be used for listener . It is noted that any suitable name can be used for listener . In the exemplary embodiment depicted in listener s name is def which represents another private hash. Iframe then creates the listener iframe in its domain using the private hash def as its name. Listener is associated with another URL address which is used by other web pages who want to communicate with iframe . In other words listener serves as a message receiver for messages intended for iframe . Listener also serves as a target display sub sector for content from other web pages intended for iframe . If communication is desired between iframe and iframe the web browser would also provide iframe with the name of the listener iframe i.e. def and would provide iframe with the name of the listener iframe i.e. abc .

Referring again to it is noted that since the nested listener and listener iframes share the same domain as an iframe or web page with which communication is desired the web browser s aforementioned domain isolation does not present a barrier to communication between the domain matched iframes and or web pages . Thus iframes can be employed within a web page to enable communication between different domains.

Generally speaking the IFM technique embodiments described herein provide methods which allow a web page in one domain to communicate directly with another web page in a different domain in a reliable secure and controlled manner. More particularly the IFM technique embodiments described herein include two simple easy to use application programming interfaces APIs an IFM API and an IFM extensible markup language hypertext transfer protocol XMLHTTP API. Both the IFM API and IFM XMLHTTP API employ a special kind of iframe referred to herein as an IFM frame object which establishes a client based channel for communicating messages which can include both commands and web page content between a parent web page which is hosted on a website server residing in a parent domain and a child web page which is hosted on another website server residing in a different child domain. It is noted that both the IFM API and IFM XMLHTTP API enable this cross domain communication to take place completely within the client s web browser. In other words the messages are communicated directly between the parent web page and the child web page in the browser rather than having to first be transmitted from the client to a website server. In tested embodiments of the IFM technique embodiments described herein Apple Safari version 3.0 Mozilla Firefox version 2.0 and version 3.0 and Microsoft Internet Explorer a registered trademark of Microsoft Corporation version 6 and version 7 were employed for the web browser.

This section provides a detailed description of exemplary embodiments of the IFM API which can be employed within the client in order to enable bidirectional communication of text based messages containing commands and HTML content among other things directly between a parent web page which is hosted on a website server residing in a parent domain and a child web page which is hosted on another website server residing in a different child domain where this cross domain bidirectional communication takes place completely within the client s web browser. The IFM API contains an IFM library which provides for an IFM frame class and an IFM channel class which are used to establish an IFM channel connection between the parent web page and the child web page. In tested embodiments of the IFM API described herein an IFM frame object and IFM channel object were constructed from these classes using a declarative markup style. The declarative markup style of constructing HTML objects is well suited for static web page development initiatives. It is both simple and expressive and is also more intuitive than a functional object constructor in light of the fact that the IFM API embodiments described herein are based on the creation of iframes. It also reduces the complexity of using an API in the HTML environment. More particularly the declarative markup style of object construction employs custom HTML element tags and or custom attributes to specify control parameters using name value pairs. The declarative markup style of object construction also scans the domain of a web page during its download in order to discover tags that need to have objects constructed. However it is noted that the declarative markup style of object construction is not as well suited to dynamic web page development initiatives which require that the IFM API be constructed on the fly. For these situations an alternate embodiment of the IFM API is possible in which the IFM frame object and IFM channel object can be constructed using a functional object constructor such as a conventional JavaScript object constructor.

Generally speaking and referring again to when the parent web page is retrieved from its website server and downloaded into the client s web browser the browser will render and display the parent web page to the user in the following manner. The browser will render and display the content of the parent web page in the browser s display sector. The browser will also construct an IFM frame object within the page . The IFM frame object contains an iframe which hosts the child web page . It is noted that the iframe serves as a placeholder for the HTML content of the child web page until this content is successfully downloaded from the website server which hosts the child web page upon which the child web page s HTML content will be embedded inside of the iframe. The IFM frame object also contains a channel control object which is used to send text based messages to and receive text based messages from the child web page .

Referring again to when the child web page is retrieved from its website server and downloaded into the client s web browser the browser will construct an IFM channel object within the browser. The IFM channel object contains another instantiation of the channel control object which serves as a communication end point to which an IFM channel connection can be established from the IFM frame object . This instantiation of the channel control object is used to receive text based messages from and send text based messages to the parent web page . Generally speaking a web page which employs the IFM channel object can be assumed to be a child web page which is hosted in the IFM frame object of one or more parent web pages. A single script file in the IFM library can be used to construct the IFM frame object and IFM channel object where this script file is not dependent on any other script files libraries or framework and it exposes only the IFM API and nothing more. In tested embodiments of the IFM API a JavaScript file was employed for this script file. It is noted that alternate embodiments of the IFM API are also possible which employ other types of script files such as a Microsoft Visual Basic a registered trademark of Microsoft Corporation script file and the like.

Referring again to the channel control object for the parent web page can send a message to the channel control object for the child web page requesting to establish an IFM channel connection there between. The channel control object will receive the IFM channel connection request message and processes the request as follows. The channel control object can contain an allowed domains parameter which specifies the parent domain s that are sanctioned i.e. trusted by the child web page . This parameter can specify a select set of parent domains which are sanctioned or it can specify that either no parent domains are sanctioned or all possible parent domains are sanctioned. The channel control object compares the parent domain that the IFM channel connection request originated from against the allowed domains parameter. If this parameter specifies that the request originated from a sanctioned parent domain the channel control object will accept the request and establish an IFM channel connection to the channel control object that sent the request. If the allowed domains parameter specifies that the request originated from an unsanctioned parent domain the channel control object will reject the request and prevent the IFM channel connection from being established thus preventing the parent web page from accessing the child web page .

Referring again to once the IFM channel connection is established between the channel control object of the parent web page and the channel control object of the child web page this connection can be used to exchange a unique pair of cryptographically strong random numbers between the parent and child web pages in order to enhance the security of the IFM channel connection. Each instance of an IFM channel connection would have its own unique pair of numbers. This pair of numbers serves as IFM session keys which in combination with the Domain Name System DNS name entity serves to enhance the security of the IFM channel connection by protecting it against spoofing and replay attacks. If the parent web page receives a message over the IFM channel connection from the child web page and this message contains the child web page s key the parent web page can be reasonably assured that the message actually came from the child web page. It is noted that these keys are not used to encrypt information passing through the IFM channel connection rather they are canary values which are used to prove the origin of the information. In tested embodiments of the IFM API a specialized central random number generating web service not shown was employed to supply the random numbers to the parent and child web pages in response to asynchronous requests for such from the IFM frame object and IFM channel object . It is noted that alternate embodiments of the IFM API are also possibly which employ other suitable sources for cryptographically strong random numbers where these sources can be either server based or client based.

Referring again to once the IFM channel connection is established between the channel control object of the parent web page and the channel control object of the child web page these channel control objects can generally be used to bidirectionally communicate text based messages containing commands and HTML content among other things across the IFM channel connection directly between the parent and child web pages where this cross domain communication takes place completely within the client s web browser . By way of example but not limitation HTML content from the child web page can be downloaded over the IFM channel connection and subsequently rendered and displayed to the user in the iframe . It is noted that some messages which are received from the child web page may not be rendered and displayed but rather may be processed by the client in a variety of other ways such as being forwarded to the parent web page s website server . It is also noted that the child web page is a relatively passive participant in the IFM API embodiments described herein. While the child web page can specify which parent domain s it will accept IFM channel connections from beyond that it must wait to receive an IFM channel connection request from a particular parent web page.

Referring again to the IFM frame object and IFM channel object can contain a transport speed parameter which specifies the throughput of the IFM channel connection . In tested embodiments of the IFM API the transport speed parameter specified two metrics for the IFM channel connection throughput slow and fast. When a slow throughput is specified for a particular IFM channel connection the channel control object of the parent web page and the channel control object of the child web page will chunk messages which are larger than a prescribed size into a series of smaller messages before they are transmitted across the IFM channel connection . When a chunked series of smaller messages is received on the other end of the IFM channel connection the receiving channel control object will reassemble the chunked series of smaller messages before they are delivered to the client s web browser . Thus the IFM API embodiments described herein are not performance limited by any URL size limitations imposed by the web browser .

Referring again to whenever Adobe Flash application plug in software is installed in the client s web browser Adobe Flash s LocalConnection object can be employed for the channel control object . In the event that Adobe Flash application plug in software is not installed in the client s web browser an alternate channel control object can be constructed via a script file in the IFM library which can be the single script file that was described heretofore. It is noted that alternate embodiments of the IFM API are also possible which employ other types of cross domain communication plug in software for the browser such as Microsoft Silverlight a trademark of Microsoft Corporation .

This section provides a detailed description of exemplary embodiments of the IFM XMLHTTP API which can be employed within the client on top of the IFM API described heretofore in order to enable bidirectional communication of text based messages containing hypertext transfer protocol HTTP commands and extensible markup language XML content among other things directly between a parent web page which is hosted on a website server residing in a parent domain and a child web page which is hosted on another website server residing in a different child domain using a conventional HTTP protocol where this cross domain bidirectional communication takes place completely within the client s web browser. The IFM XMLHTTP API adds an IFM XMLHTTP request class and an IFM XMLHTTP proxy class to the aforementioned IFM library which are used to establish an XML channel connection between the parent web page and the child web page. In tested embodiments of the IFM XMLHTTP API described herein an IFM XMLHTTP request object and an IFM XMLHTTP proxy object were constructed from these classes using the aforementioned declarative markup style which as described heretofore is well suited for static web page development initiatives. However as also described heretofore for dynamic web page development initiatives which require that the IFM XMLHTTP API be constructed on the fly an alternate embodiment of the IFM XMLHTTP API is possible in which the IFM XMLHTTP request object and an IFM XMLHTTP proxy object can be constructed using the aforementioned functional object constructor.

Generally speaking and referring again to when the parent web page is retrieved from its website server and downloaded into the client s web browser the browser will render and display the parent web page to the user in the following manner. The browser will render and display the content of the parent web page in the browser s display sector. The browser will also construct an IFM frame object within the page . The IFM frame object contains an iframe which hosts the child web page . It is noted that the iframe serves as a placeholder for the XML content of the child web page until this content is successfully downloaded from the website server which hosts the child web page upon which the child web page s XML content will be embedded inside of the iframe. The IFM frame object also contains an IFM XMLHTTP request object hereafter simply referred to as a request object which is used to send text based messages to and receive text based messages from the child web page .

Referring again to when the child web page is retrieved from its website server and downloaded into the client s web browser the browser will construct an IFM channel object within the browser. The IFM channel object contains an IFM XMLHTTP proxy object hereafter simply referred to as a proxy object which serves as a communication end point which receives text based messages from and sends text based messages to the IFM frame object across an XML channel connection .

Referring again to the request object for the parent web page can send an IFM XMLHTTP request message to the proxy object for the child web page . This request message generally includes one or more HTTP headers an HTTP verb a URL path and a text based message body which can contain XML content among other things. Generally speaking a variety of different types of HTTP headers can be employed for the IFM XMLHTTP request message. More particularly the types of HTTP headers that can be employed are defined by the types of HTTP headers that are supported by the particular proxy object for the particular child web page . In tested embodiments of the IFM XMLHTTP API the following types of HTTP headers were employed. A content type HTTP header specified a content type associated with the IFM XMLHTTP request message where this content type could be either plain format XML content or Atom format XML content. An authentication HTTP header contained a declaration token which was used to authenticate the request message.

Referring again to the proxy object will receive the IFM XMLHTTP request message and process it as follows. Generally speaking the proxy object can filter the request messages it receives based on various filter criteria. For received request messages which pass its filter criteria the proxy object can pass these request messages to the website server which hosts the child web page. For received request messages which do not pass its filter criteria the proxy object can block these request messages thus preventing the parent web page from accessing the child web page . In one embodiment of the IFM XMLHTTP API the proxy object can employ an allowed domains parameter as its filter criteria where this parameter specifies the parent domain s that are sanctioned i.e. trusted by the child web page . The allowed domains parameter can specify a select set of parent domains which are sanctioned or it can specify that either no parent domains are sanctioned or all possible parent domains are sanctioned. The proxy object can compare the parent domain that the request message originated from against the allowed domains parameter. If this parameter specifies that the request message originated from a sanctioned parent domain the proxy object will pass the request message to the website server which hosts the child web page. If the allowed domains parameter specifies that the request message originated from an unsanctioned parent domain the proxy object will block the message. In another embodiment of the IFM XMLHTTP API the proxy object can employ an allowed verbs parameter as its filter criteria where this parameter specifies the types of HTTP verbs that are sanctioned by the child web page . The allowed verbs parameter can specify a select set of HTTP verbs which are sanctioned or it can specify that either no HTTP verbs are sanctioned or all possible HTTP verbs are sanctioned. In yet another embodiment of the IFM XMLHTTP API the proxy object can employ an allowed paths parameter as its filter criteria where this parameter specifies the URL paths that are sanctioned by the child web page . The allowed paths parameter can specify a select set of URL paths which are sanctioned or it can specify that either no URL paths are sanctioned or all possible URL paths are sanctioned. It is noted that yet other embodiments of the IFM XMLHTTP API are also possible which employ various combinations of the aforementioned different filter criteria.

Referring again to the IFM XMLHTTP request message that is sent from the request object to the proxy object can request that the child web page perform a variety of different types operations. By way of example but not limitation this request message can either request XML content from the child web page or it can include XML content in its text based message body which is to be sent to the child web page. In the case where this request message requests XML content from the child web page once the proxy object receives a response message containing the requested XML content from the child web page s website server the proxy object will pass the received XML content to the web browser for rendering and display in the iframe . It is noted that some messages which are received from the child web page may not be rendered and displayed but rather may be processed by the client in a variety of other ways such as being forwarded to the parent web page s website server .

While the IFM technique has been described in detail by specific reference to embodiments thereof it is understood that variations and modifications thereof can be made without departing from the true spirit and scope of the IFM technique. By way of example but not limitation although illustrate exemplary embodiments of an IFM framework in which the parent web page embeds content from a single child web page another embodiment not shown of the IFM technique described herein is possible in which the parent web page embeds content from a plurality of child web pages which are hosted on website servers residing in a plurality of different child domains. In this IFM technique embodiment a separate IFM frame object can be constructed within the parent web page for each child web page a separate IFM channel object can be constructed within the browser for each child web page and a separate IFM channel connection or XML channel connection can be established there between in the manner described heretofore. In other words a plurality of independent IFM channel connections or XML channel connections can be established within the browser.

It is also noted that any or all of the aforementioned embodiments can be used in any combination desired to form additional hybrid embodiments. Although the IFM technique embodiments have been described in language specific to structural features and or methodological acts it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described heretofore. Rather the specific features and acts described heretofore are disclosed as example forms of implementing the claims.

This section provides a brief general description of a suitable computing system environment in which portions of the IFM technique embodiments described herein can be implemented. These IFM technique embodiments are operational with numerous general purpose or special purpose computing system environments or configurations. Exemplary well known computing systems environments and or configurations that can be suitable include but are not limited to personal computers PCs server computers hand held or laptop devices multiprocessor systems microprocessor based systems set top boxes programmable consumer electronics network PCs minicomputers mainframe computers distributed computing environments that include any of the aforementioned systems or devices and the like.

As exemplified in an exemplary system for implementing the IFM technique embodiments described herein includes one or more computing devices such as computing device . In its simplest configuration computing device typically includes at least one processing unit and memory . Depending on the specific configuration and type of computing device the memory can be volatile such as RAM non volatile such as ROM and flash memory among others or some combination of the two. This simplest configuration is illustrated by dashed line .

As exemplified in computing device can also have additional features and functionality. By way of example computing device can include additional storage such as removable storage and or non removable storage . This additional storage includes but is not limited to magnetic disks optical disks and tape. Computer storage media typically embodies volatile and non volatile media as well as removable and non removable media implemented in any method or technology. The computer storage media provides for storage of various information required to operate the device such as computer readable instructions associated with an operating system application programs and other program modules and data structures among other things. Memory removable storage and non removable storage are all examples of computer storage media. Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical disk storage technology magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by computing device . Any such computer storage media can be part of computing device .

As exemplified in computing device also includes a communications connection s that allows the device to operate in a networked environment and communicate with a remote computing device s such as remote computing device s . Remote computing device s can be a PC a server a router a peer device or other common network node and typically includes many or all of the elements described herein relative to computing device . Communication between computing devices takes place over a network s which provides a logical connection s between the computing devices. The logical connection s can include one or more different types of networks including but not limited to a local area network s LAN and wide area network s WAN . Such networking environments are commonplace in conventional offices enterprise wide computer networks intranets and the Internet. It will be appreciated that the communications connection s and related network s described herein are exemplary and other means of establishing communication between the computing devices can be used.

As exemplified in communications connection s and related network s are an example of communication media. Communication media typically embodies computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term modulated data signal means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example but not limitation communication media includes wired media such as a wired network or direct wired connection and wireless media such as acoustic radio frequency RF infrared frequency modulation FM radio and other wireless media. The term computer readable medium as used herein includes both the aforementioned storage media and communication media.

As exemplified in computing device also includes an input device s and output device s . Exemplary input devices include but are not limited to a keyboard mouse pen touch input device microphone and camera among others. A user can enter commands and various types of information into the computing device through the input device s . Exemplary output devices include but are not limited to a display device s a printer and audio output devices among others. These input and output devices are well known and need not be described at length here.

Referring again to the IFM technique embodiments described herein can be further described in the general context of computer executable instructions such as program modules which are executed by computing device . Generally program modules include routines programs objects components and data structures among other things that perform particular tasks or implement particular abstract data types. The IFM technique embodiments can also be practiced in a distributed computing environment where tasks are performed by one or more remote computing devices that are linked through a communications network . In a distributed computing environment program modules can be located in both local and remote computer storage media including but not limited to memory and storage devices .

