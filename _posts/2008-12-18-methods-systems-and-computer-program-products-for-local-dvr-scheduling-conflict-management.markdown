---

title: Methods, systems and computer program products for local DVR scheduling conflict management
abstract: This disclosure details the implementation of methods, systems and computer program products for local DVR scheduling conflict management (hereinafter, “SCM”). SCM systems allow for automatic organization, prioritization, and conflict resolution for multiple scheduled recording specifications. Conflicting scheduled recordings may be re-organized based on single-stage and/or multi-stage conflict resolution procedures. Embodiments of SCM systems may also implement weighted conflict resolution, wherein user preferences and/or prioritizations may be assigned to scheduled recordings and considered in the re-organization of conflicting recordings. In one embodiment, a method is disclosed, comprising: receiving a new scheduled recording instruction comprising at least a new program identifier and a new time; comparing the new scheduled recording instruction to an existing recording schedule to determine if a recording conflict exists; performing a conflict resolution for an existing conflict to yield a new recording schedule; and storing the new recording schedule in a scheduling database.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09118884&OS=09118884&RS=09118884
owner: Verizon Patent and Licensing Inc.
number: 09118884
owner_city: Basking Ridge
owner_country: US
publication_date: 20081218
---
Scheduled recording systems have come about allowing users to specify a future time at which a recording device is to begin recording a specified program. For example video cassette recorders VCRs may be equipped with scheduling capabilities such that a user may insert a blank cassette and program the VCR to begin recording to the cassette from a specified channel at a specified future time. More recently digital video recording DVR devices have come about that facilitate recording of digital media content directly to a digital storage device such as a hard drive or a remote server for later retrieval and or viewing.

The leading number of each reference number within the drawings indicates the figure in which that reference number is introduced and or detailed. As such a detailed discussion of reference number would be found and or introduced in . Reference number is introduced in etc.

This disclosure details the implementation of methods systems and computer program products for local DVR scheduling conflict management hereinafter SCM . SCM systems allow for automatic organization prioritization and conflict resolution for multiple scheduled recording specifications. Conflicting scheduled recordings may be re organized based on single stage and or multi stage conflict resolution procedures. Embodiments of SCM systems may also implemented weighted conflict resolution wherein user preferences and or prioritizations may be assigned to scheduled recordings and considered in the re organization of conflicting recordings.

In one embodiment a method is disclosed comprising receiving a new scheduled recording instruction comprising at least a new program identifier and a new time comparing the new scheduled recording instruction to an existing recording schedule to determine if a recording conflict exists performing a conflict resolution for an existing conflict to yield a new recording schedule and storing the new recording schedule in a scheduling database.

It is to be understood that depending on the particular needs and or characteristics of an SCM user administrator DVR and or mobile device system media server wireless server data payload monetization model hardware configuration network framework and or the like various embodiments of the SCM may be implemented that enable a great deal of flexibility and customization. The instant disclosure discusses embodiments of the SCM primarily within the context of scheduled recordings of digital video. However it is to be understood that the system described herein may be readily configured customized for a wide range of other applications or implementations. For example aspects of SCM systems may be adapted for radio and or other audio recordings scheduled recording of internet events and or the like applications. It is to be understood that the SCM may be further adapted to other implementations and or scheduling applications.

Wireless servers may contain subsystems and or functional modules configured to implement a wide variety of functions services and or features associated with embodiments of SCM operation. In the illustrated implementation these modules may include remote control services an interactive program guide IPG and video on demand VOD services media services text based search services voice search services MDS remote systems and or the like. In one implementation a remote control service may be configured to control service interfaces with a DVR system and provide other functionality such as but not limited to management of scheduling to record television TV programs viewing deleting of recorded programs or in progress recording parental control management channel favorites and VOD bookmarks user authentication and user profile management application provisioning and or the like. IPG and VOD services may be configured to provide functionality such as but not limited to browsing television program guides based on channel and time filtering television programs based on high definition HD channels program ratings program types user favorites profiles and or the like and browsing VOD contents based on folder names hierarchical position of folders and or the like. Media services may be configured to process images preview video clips logos and or the like associated with TV and VOD programs and or channel content as well as transcoding of videos for different mobile device platforms. Text based search services may provide character and key word based searching capability for users to search TV programs and VOD content texts. Voice search services may employ a speech recognition engine to translate audio commands into text and in one implementation prompt users to choose text for searching content. In one implementation the speech recognition engine may use grammars built from TV program and VOD content texts.

An MDS remote system component may serve as an intermediary liaison between wireless server components and MDS components. For example messages communicated between the MDS and the STB may in one implementation comprise encrypted binary data structures. An MDS remote system then may serve to translate those encrypted binary data structures into one or more formats and or protocols suitable for delivery to wireless server components and or mobile devices and may in one implementation present a Simple Object Access Protocol SOAP for communicating with the STB.

The MDS may also include a variety of components and or subsystems configured to implement various features services and or functionality. An Event Engine may receive all STB requests posted for example from wireless servers and relay those requests to the STB through UDP or TCP servers depending for example on the type of broadband home router. An STB TCP server may be employed for configuring messages from the Event Engine to the STB as TCP messages. Similarly an STB UDP sever may configure requests forwarded by the Event Engine as UDP messages when UDP is supported by the broadband home router. The UDP server may send requests to the STB using one or more STB network configurations by calling a UDP configuration server which acts as a repository for STB UDP network configurations including router wide area network WAN internet protocol IP address port forwarding port encryption key and or the like.

In the SCM system may search all playtimes for the program corresponding to the unscheduled specification over a specified time interval into the future e.g. up to two weeks . A determination may be made as to whether there exist available play times for the unscheduled specification e.g. play times that are not in conflict with any of the existing specifications scheduled programs and or the like . If so then the unscheduled specification is modified with the available play time and the schedule is updated . Otherwise for each originally scheduled specification associated program and or the like that is in conflict with the unscheduled specification the SCM system may assign the unscheduled specification to the time for the scheduled specification s play time . That scheduled specification may then be marked as unscheduled and the SCM system may then apply the recursive conflict resolution procedure e.g. that shown in with this newly unscheduled specification as input and disregarding the previously unscheduled specification which has now taken the play time of the newly unscheduled specification. A determination is made at if all conflicts between recorded programs have been resolved . If so then the schedule is updated . Otherwise a determination is made as to whether there exist any more original existing scheduled specs to try . If so the SCM system returns to and cycles to the next existing scheduled specification. Otherwise the SCM system may mark the new specification as in conflict notify the user of the conflict with an error message ignore the request and or the like .

Multi stage conflict resolution may also admit weighting and or prioritization of scheduled recordings. shows an implementation of logic flow for weighted multi stage scheduling conflict resolution in one embodiment of SCM operation. In one implementation weighted multi stage scheduling conflict resolution may be applied to a set of existing scheduled specifications while in another implementation weighted multi stage scheduling conflict resolution may be invoked when a new specification is provided by a user. The SCM system may mark all existing and or new specifications as unscheduled and then order all unscheduled specifications based on their associated priorities . In one implementation priorities may be specified and or stored as numerical values and priority based ordering is performed based on numerical ordering. In one implementation each priority assigned is unique to the program and or specification to which it is assigned while in another implementation the same priority value and or level may be applied to more than one program and or scheduling specification. For each unscheduled specification in order or priority the SCM system may then apply a recursive conflict resolution e.g. such as that shown in to the next unscheduled specification in the list . A determination may then be made as to whether there are more unscheduled specifications . If so then the SCM system returns to and cycles to the next unscheduled specification in the list. Otherwise the SCM system is finished with the weighted multi stage scheduling conflict resolution .

In one implementation program weights priorities and or the like values may be obtained from a user such as via a web interface a mobile device and or the like. For example when a user provides a new scheduled recording specification he or she may be provided the option to further include a prioritization for recording the program associated therewith.

In one implementation an XML for signing in to mobile remote DVR services and acquiring a user profile may take a form similar to the following example 

where inputs may include a login an ID e.g. a 10 digit mobile phone number a PAC e.g. the PAC associated with the user s STB an STB model identifier e.g. to assist in retrieving version and or update information an application version and or the like.

In one implementation an XML for an SCM system response for the sign in request shown above may take a form similar to the following example 

where a status may reflect the status of activating a mobile device to manage the STB and or implement mobile remote DVR functionality a regionID may indicate a region associated with video service a vhoID may correspond to a video headend office vn may reflect an on deck version number of the application an update may reflect the status of mandatory updates a timeoffset may indicate the standard time offset relative to coordinated universal time and or the like.

In one implementation an XML for requesting schedule viewing may take a form similar to the following example 

In one implementation an XML for responding to a request for schedule viewing may take a form similar to the following example 

In one implementation an XML for setting recording schedules may take a form similar to the following example 

In one implementation an XML for responding to a request to set recording schedules may take a form similar to the following example 

Here 0 indicates a successful scheduling. In the event of unsuccessful scheduling various error messages may be returned. For example an error message may be returned if a user attempts to record an HD program without having the requisite HD tuner and or compatible STB if an unresolvable scheduling conflict exists if the channel for the requested program is not available on a channel map and or the like.

In one implementation an XML for deleting recording schedules may take a form similar to the following example 

In one implementation an XML for responding to a request to delete recording schedules may take a form similar to the following example 

In one implementation an XML for setting series recording schedules may take a form similar to the following example 

In one implementation an XML for responding to a request to set series recording schedules may take a form similar to the following example 

In one implementation an XML for deleting series recording schedules may take a form similar to the following example 

In one implementation an XML for responding to a request to delete series recording schedules may take a form similar to the following example 

In one implementation an XML for viewing recorded programs may take a form similar to the following example 

In one implementation an XML for responding to a request to view recorded programs may take a form similar to the following example 

Here 0 indicates a normal status 1 indicates that recording is in progress and 2 indicates that the program has a protected status.

In one implementation an XML for deleting recorded programs may take a form similar to the following example 

In one implementation an XML for responding to a request to delete recorded programs may take a form similar to the following example 

In one implementation a request for viewing a program schedule may take a form similar to the following example 

In one implementation an XML for responding to a request to view a program schedule may take a form similar to the following example 

In one implementation a request for viewing program details may take a form similar to the following example 

In one implementation an XML for responding to a request to view a program schedule may take a form similar to the following example 

Typically users which may be people and or other systems engage information technology systems e.g. commonly computers to facilitate information processing. In turn computers employ processors to process information such processors are often referred to as central processing units CPUs . A common form of processor is referred to as a microprocessor. CPUs use communicative signals to enable various operations. Such communicative signals may be stored and or transmitted in batches as program and or data components facilitate desired operations. These stored instruction code signals may engage the CPU circuit components to perform desired operations. A common type of program is a computer operating system which commonly is executed by CPU on a computer the operating system enables and facilitates users to access and operate computer information technology and resources. Common resources employed in information technology systems include input and output mechanisms through which data may pass into and out of a computer memory storage into which data may be saved and processors by which information may be processed. Often information technology systems are used to collect data for later retrieval analysis and manipulation commonly. which is facilitated through a database program. Information technology systems provide interfaces that allow users to access and operate various system components.

In one embodiment the SCM controller may be connected to and or communicate with entities such as but not limited to one or more users from user input devices peripheral devices a cryptographic processor device and or a communications network .

Networks are commonly thought to comprise the interconnection and interoperation of clients servers and intermediary nodes in a graph topology. It should be noted that the term server as used throughout this disclosure refers generally to a computer other device program or combination thereof that processes and responds to the requests of remote users across a communications network. Servers serve their information to requesting clients. The term client as used herein refers generally to a computer other device program or combination thereof that is capable of processing and making requests and obtaining and processing any responses from servers across a communications network. A computer other device program or combination thereof that facilitates processes information and requests and or furthers the passage of information from a source user to a destination user is commonly referred to as a node. Networks are generally thought to facilitate the transfer of information from source points to destinations. A node specifically tasked with furthering the passage of information from a source to a destination is commonly called a router. There are many forms of networks such as Local Area Networks LANs Pico networks Wide Area Networks WANs Wireless Networks WLANs etc. For example the Internet is generally accepted as being an interconnection of a multitude of networks whereby remote clients and servers may access and interoperate with one another.

The SCM controller may be based on common computer systems that may comprise but are not limited to components such as a computer systemization connected to memory .

A computer systemization may comprise a clock central processing unit CPU a read only memory ROM a random access memory RAM and or an interface bus and most frequently although not necessarily the foregoing are all interconnected and or communicating through a system bus . Optionally the computer systemization may be connected to an internal power source . Optionally a cryptographic processor and or a global positioning system GPS component may be connected to the system bus. The system clock typically has a crystal oscillator and provides a base signal. The clock is typically coupled to the system bus and various clock multipliers that will increase or decrease the base operating frequency for other components interconnected in the computer systemization. The clock and various components in a computer systemization drive signals embodying information throughout the system. Such transmission and reception of signals embodying information throughout a computer systemization may be commonly referred to as communications. These communicative signals may further be transmitted received and the cause of return and or reply signal communications beyond the instant computer systemization to communications networks input devices other computer systemizations peripheral devices and or the like. Of course any of the above components may be connected directly to one another connected to the CPU and or organized in numerous variations employed as exemplified by various computer systems.

The CPU comprises at least one high speed data processor adequate to execute program components for executing user and or system generated requests. The CPU may be a microprocessor such as AMD s Athlon Duron and or Opteron IBM and or Motorola s PowerPC IBM s and Sony s Cell processor Intel s Celeron Itanium Pentium Xeon and or XScale and or the like processor s . The CPU interacts with memory through signal passing through conductive conduits to execute stored signal program code according to conventional data processing techniques. Such signal passing facilitates communication within the SCM controller and beyond through various interfaces. Should processing requirements dictate a greater amount of speed parallel mainframe and or super computer architectures may similarly be employed. Alternatively should deployment requirements dictate greater portability smaller Personal Digital Assistants PDAs may be employed.

The power source may be of any standard form for powering small electronic circuit board devices such as the following power cells alkaline lithium hydride lithium ion lithium polymer nickel cadmium solar cells and or the like. Other types of AC or DC power sources may be used as well. In the case of solar cells in one embodiment the case provides an aperture through which the solar cell may capture photonic energy. The power cell is connected to at least one of the interconnected subsequent components of the SCM thereby providing an electric current to all subsequent components. In one example the power source is connected to the system bus component . In an alternative embodiment an outside power source is provided through a connection across the I O interface. For example a USB and or IEEE 1394 connection carries both data and power across the connection and is therefore a suitable source of power.

Interface bus es may accept connect and or communicate to a number of interface adapters conventionally although not necessarily in the form of adapter cards such as but not limited to input output interfaces I O storage interfaces network interfaces and or the like. Optionally cryptographic processor interfaces similarly may be connected to the interface bus. The interface bus provides for the communications of interface adapters with one another as well as with other components of the computer systemization. Interface adapters are adapted for a compatible interface bus. Interface adapters conventionally connect to the interface bus via a slot architecture. Conventional slot architectures may be employed such as but not limited to Accelerated Graphics Port AGP Card Bus Extended Industry Standard Architecture E ISA Micro Channel Architecture MCA NuBus Peripheral Component Interconnect Extended PCI X PCI Express Personal Computer Memory Card International Association PCMCIA and or the like.

Storage interfaces may accept communicate and or connect to a number of storage devices such as but not limited to storage devices removable disc devices and or the like. Storage interfaces may employ connection protocols such as but not limited to Ultra Serial Advanced Technology Attachment Packet Interface Ultra Serial ATA PI Enhanced Integrated Drive Electronics E IDE Institute of Electrical and Electronics Engineers IEEE 1394 fiber channel Small Computer Systems Interface SCSI Universal Serial Bus USB and or the like.

Network interfaces may accept communicate and or connect to a communications network . Through a communications network the SCM controller is accessible through remote clients e.g. computers with web browsers by users Network interfaces may employ connection protocols such as but not limited to direct connect Ethernet thick thin twisted pair 10 100 1000 Base T and or the like Token Ring wireless connection such as IEEE 802.11a x and or the like. A communications network may be any one and or the combination of the following a direct interconnection the Internet a Local Area Network LAN a Metropolitan Area Network MAN an Operating Missions as Nodes on the Internet OMNI a secured custom connection a Wide Area Network WAN a wireless network e.g. employing protocols such as but not limited to a Wireless Application Protocol WAP I mode and or the like and or the like. A network interface may be regarded as a specialized form of an input output interface. Further multiple network interfaces may be used to engage with various communications network types . For example multiple network interfaces may be employed to allow for the communication over broadcast multicast and or unicast networks.

Input Output interfaces I O may accept communicate and or connect to user input devices peripheral devices cryptographic processor devices and or the like. I O may employ connection protocols such as but not limited to Apple Desktop Bus ADB Apple Desktop Connector ADC audio analog digital monaural RCA stereo and or the like IEEE 1394a b infrared joystick keyboard midi optical PC AT PS 2 parallel radio serial USB video interface BNC coaxial composite digital Digital Visual Interface DVI RCA RF antennae S Video VGA and or the like wireless and or the like. A common output device is a television set which accepts signals from a video interface. Also a video display which typically comprises a Cathode Ray Tube CRT or Liquid Crystal Display LCD based monitor with an interface e.g. DVI circuitry and cable that accepts signals from a video interface may be used. The video interface composites information generated by a computer systemization and generates video signals based on the composited information in a video memory frame. Typically the video interface provides the composited video information through a video connection interface that accepts a video display interface e.g. an RCA composite video connector accepting an RCA composite video cable a DVI connector accepting a DVI display cable etc. .

User input devices may be card readers dongles finger print readers gloves graphics tablets joysticks keyboards mouse mice remote controls retina readers trackballs trackpads and or the like.

Peripheral devices may be connected and or communicate to I O and or other facilities of the like such as network interfaces storage interfaces and or the like. Peripheral devices may be audio devices cameras dongles e.g. for copy protection ensuring secure transactions with a digital signature and or the like external processors for added functionality goggles microphones monitors network interfaces printers scanners storage devices video devices video sources visors and or the like.

It should be noted that although user input devices and peripheral devices may be employed the SCM controller may be embodied as an embedded dedicated and or monitor less i.e. headless device wherein access would be provided over a network interface connection.

Cryptographic units such as but not limited to microcontrollers processors interfaces and or devices may be attached and or communicate with the SCM controller. A MC68HC16 microcontroller commonly manufactured by Motorola Inc. may be used for and or within cryptographic units. Equivalent microcontrollers and or processors may also be used. The MC68HC16 microcontroller utilizes a 16 bit multiply and accumulate instruction in the 16 MHz configuration and requires less than one second to perform a 512 bit RSA private key operation. Cryptographic units support the authentication of communications from interacting agents as well as allow for anonymous transactions. Cryptographic units may also be configured as part of CPU. Other commercially available specialized cryptographic processors include VLSI Technology s 33 MHz 6868 or Semaphore Communications 40 MHz Roadrunner .

Generally any mechanization and or embodiment allowing a processor to affect the storage and or retrieval of information is regarded as memory . However memory is a fungible technology and resource thus any number of memory embodiments may be employed in lieu of or in concert with one another. It is to be understood that the SCM controller and or a computer systemization may employ various forms of memory . For example a computer systemization may be configured wherein the functionality of on chip CPU memory e.g. registers RAM ROM and any other storage devices are provided by a paper punch tape or paper punch card mechanism of course such an embodiment would result in an extremely slow rate of operation. In a typical configuration memory will include ROM RAM and a storage device . A storage device may be any conventional computer system storage. Storage devices may include a drum a fixed and or removable magnetic disk drive a magneto optical drive an optical drive i.e. CD ROM RAM Recordable R ReWritable RW DVD R RW etc. an array of devices e.g. Redundant Array of Independent Disks RAID and or other devices of the like. Thus a computer systemization generally requires and makes use of memory.

The memory may contain a collection of program and or database components and or data such as but not limited to operating system component s operating system information server component s information server user interface component s user interface Web browser component s Web browser database s mail server component s mail client component s cryptographic server component s cryptographic server the SCM component s and or the like i.e. collectively a component collection . These components may be stored and accessed from the storage devices and or from storage devices accessible through an interface bus. Although non conventional program components such as those in the component collection typically are stored in a local storage device they may also be loaded and or stored in memory such as peripheral devices RAM remote storage facilities through a communications network ROM various forms of memory and or the like.

The operating system component is an executable program component facilitating the operation of the SCM controller. Typically the operating system facilitates access of I O network interfaces peripheral devices storage devices and or the like. The operating system may be a highly fault tolerant scalable and secure system such as Apple Macintosh OS X Server AT T Plan 9 Be OS Unix and Unix and Unix like system distributions such as AT T s UNIX Berkley Software Distribution BSD variations such as FreeBSD NetBSD OpenBSD and or the like Linux distributions such as Red Hat Ubuntu and or the like and or the like operating systems. However more limited and or less secure operating systems also may be employed such as Apple Macintosh OS IBM OS 2 Microsoft DOS Microsoft Windows 2000 2003 3.1 95 98 CE Millenium NT Vista XP Server Palm OS and or the like. An operating system may communicate to and or with other components in a component collection including itself and or the like. Most frequently the operating system communicates with other program components user interfaces and or the like. For example the operating system may contain communicate generate obtain and or provide program component system user and or data communications requests and or responses. The operating system once executed by the CPU may enable the interaction with communications networks data I O peripheral devices program components memory user input devices and or the like. The operating system may provide communications protocols that allow the SCM controller to communicate with other entities through a communications network . Various communication protocols may be used by the SCM controller as a subcarrier transport mechanism for interaction such as but not limited to multicast TCP IP UDP unicast and or the like.

An information server component is a stored program component that is executed by a CPU. The information server may be a conventional Internet information server such as but not limited to Apache Software Foundation s Apache Microsoft s Internet Information Server and or the like. The information server may allow for the execution of program components through facilities such as Active Server Page ASP ActiveX ANSI Objective C C and or .NET Common Gateway Interface CGI scripts Java JavaScript Practical Extraction Report Language PERL Hypertext Pre Processor PHP pipes Python WebObjects and or the like. The information server may support secure communications protocols such as but not limited to File Transfer Protocol FTP HyperText Transfer Protocol HTTP Secure Hypertext Transfer Protocol HTTPS Secure Socket Layer SSL messaging protocols e.g. America Online AOL Instant Messenger AIM Application Exchange APEX ICQ Internet Relay Chat IRC Microsoft Network MSN Messenger Service Presence and Instant Messaging Protocol PRIM Internet Engineering Task Force s IETF s Session Initiation Protocol SIP SIP for Instant Messaging and Presence Leveraging Extensions SIMPLE open XML based Extensible Messaging and Presence Protocol XMPP i.e. Jabber or Open Mobile Alliance s OMA s Instant Messaging and Presence Service IMPS Yahoo Instant Messenger Service and or the like. The information server provides results in the form of Web pages to Web browsers and allows for the manipulated generation of the Web pages through interaction with other program components. After a Domain Name System DNS resolution portion of an HTTP request is resolved to a particular information server the information server resolves requests for information at specified locations on the SCM controller based on the remainder of the HTTP request. For example a request such as http 123.124.125.126 myInformation.html might have the IP portion of the request 123.124.125.126 resolved by a DNS server to an information server at that IP address that information server might in turn further parse the http request for the myInformation.html portion of the request and resolve it to a location in memory containing the information myInformation.html. Additionally other information serving protocols may be employed across various ports e.g. FTP communications across port and or the like. An information server may communicate to and or with other components in a component collection including itself and or facilities of the like. Most frequently the information server communicates with the SCM database operating systems other program components user interfaces Web browsers and or the like.

Access to the SCM database may be achieved through a number of database bridge mechanisms such as through scripting languages as enumerated below e.g. CCI and through inter application communication channels as enumerated below e.g. CORBA WebObjects etc. . Any data requests through a Web browser are parsed through the bridge mechanism into appropriate grammars as required by the SCM. In one embodiment the information server would provide a Web form accessible by a Web browser. Entries made into supplied fields in the Web form are tagged as having been entered into the particular fields and parsed as such. The entered terms are then passed along with the field tags which act to instruct the parser to generate queries directed to appropriate tables and or fields. In one embodiment the parser may generate queries in standard SQL by instantiating a search string with the proper join select commands based on the tagged text entries wherein the resulting command is provided over the bridge mechanism to the SCM as a query. Upon generating query results from the query the results are passed over the bridge mechanism and may be parsed for formatting and generation of a new results Web page by the bridge mechanism. Such a new results Web page is then provided to the information server which may supply it to the requesting Web browser.

Also an information server may contain communicate generate obtain and or provide program component system user and or data communications requests and or responses.

The function of computer interfaces in some respects is similar to automobile operation interfaces. Automobile operation interface elements such as steering wheels gearshifts and speedometers facilitate the access operation and display of automobile resources functionality and status. Computer interaction interface elements such as check boxes cursors menus scrollers and windows collectively and commonly referred to as widgets similarly facilitate the access operation and display of data and computer hardware and operating system resources functionality and status. Operation interfaces are commonly called user interfaces. Graphical user interfaces GUIs such as the Apple Macintosh Operating System s Aqua IBM s OS 2 Microsoft s Windows 2000 2003 3.1 95 98 CE Millenium NT Vista i.e. Aero XP or Unix s X Windows e.g. which may include additional Unix graphic interface libraries and layers such as K Desktop Environment KDE mythTV and GNU Network Object Model Environment GNOME provide a baseline and means of accessing and displaying information graphically to users.

A user interface component is a stored program component that is executed by a CPU. The user interface may be a conventional graphic user interface as provided by with and or atop operating systems and or operating environments such as already discussed. The user interface may allow for the display execution interaction manipulation and or operation of program components and or system facilities through textual and or graphical facilities. The user interface provides a facility through which users may affect interact with and or operate a computer system. A user interface may communicate to and or with other components in a component collection including itself and or facilities of the like. Most frequently the user interface communicates with operating systems other program components and or the like. The user interface may contain communicate generate obtain and or provide program component system user and or data communications requests and or responses.

A Web browser component is a stored program component that is executed by a CPU. The Web browser may be a conventional hypertext viewing application such as Microsoft Internet Explorer or Netscape Navigator. Secure Web browsing may be supplied with 128 bit or greater encryption by way of HTTPS SSL and or the like. Some Web browsers allow for the execution of program components through facilities such as Java JavaScript ActiveX web browser plug in APIs e.g. FireFox Safari Plug in and or the like APIs and or the like. Web browsers and like information access tools may be integrated into PDAs cellular telephones and or other mobile devices. A Web browser may communicate to and or with other components in a component collection including itself and or facilities of the like. Most frequently the Web browser communicates with information servers operating systems integrated program components e.g. plug ins and or the like e.g. it may contain communicate generate obtain and or provide program component system user and or data communications requests and or responses. Of course in place of a Web browser and information server a combined application may be developed to perform similar functions of both. The combined application would similarly affect the obtaining and the provision of information to users user agents and or the like from the SCM enabled nodes. The combined application may be nugatory on systems employing standard Web browsers.

A mail server component is a stored program component that is executed by a CPU . The mail server may be a conventional Internet mail server such as but not limited to sendmail Microsoft Exchange and or the like. The mail server may allow for the execution of program components through facilities such as ASP ActiveX ANSI Objective C C and or .NET CGI scripts Java JavaScript PERL PHP pipes Python WebObjects and or the like. The mail server may support communications protocols such as but not limited to Internet message access protocol IMAP Messaging Application Programming Interface MAPI Microsoft Exchange post office protocol POP3 simple mail transfer protocol SMTP and or the like. The mail server can route forward and process incoming and outgoing mail messages that have been sent relayed and or otherwise traversing through and or to the SCM.

Access to the SCM mail may be achieved through a number of APIs offered by the individual Web server components and or the operating system.

Also a mail server may contain communicate generate obtain and or provide program component system user and or data communications requests information and or responses.

A mail client component is a stored program component that is executed by a CPU . The mail client may be a conventional mail viewing application such as Apple Mail Microsoft Entourage Microsoft Outlook Microsoft Outlook Express Mozilla Thunderbird and or the like. Mail clients may support a number of transfer protocols such as IMAP Microsoft Exchange POP3 SMTP and or the like. A mail client may communicate to and or with other components in a component collection including itself and or facilities of the like. Most frequently the mail client communicates with mail servers operating systems other mail clients and or the like e.g. it may contain communicate generate obtain and or provide program component system user and or data communications requests information and or responses. Generally the mail client provides a facility to compose and transmit electronic mail messages.

A cryptographic server component is a stored program component that is executed by a CPU cryptographic processor cryptographic processor interface cryptographic processor device and or the like. Cryptographic processor interfaces will allow for expedition of encryption and or decryption requests by the cryptographic component however the cryptographic component alternatively may run on a conventional CPU. The cryptographic component allows for the encryption and or decryption of provided data. The cryptographic component allows for both symmetric and asymmetric e.g. Pretty Good Protection PGP encryption and or decryption. The cryptographic component may employ cryptographic techniques such as but not limited to digital certificates e.g. X.509 authentication framework digital signatures dual signatures enveloping password access protection public key management and or the like. The cryptographic component will facilitate numerous encryption and or decryption security protocols such as but not limited to checksum Data Encryption Standard DES Elliptical Curve Encryption ECC International Data Encryption Algorithm IDEA Message Digest 5 MD5 which is a one way hash function passwords Rivest Cipher RC5 Rijndael RSA which is an Internet encryption and authentication system that uses an algorithm developed in 1977 by Ron Rivest Adi Shamir and Leonard Adleman Secure Hash Algorithm SHA Secure Socket Layer SSL Secure Hypertext Transfer Protocol HTTPS and or the like. Employing such encryption security protocols the SCM may encrypt all incoming and or outgoing communications and may serve as node within a virtual private network VPN with a wider communications network. The cryptographic component facilitates the process of security authorization whereby access to a resource is inhibited by a security protocol wherein the cryptographic component effects authorized access to the secured resource. In addition the cryptographic component may provide unique identifiers of content e.g. employing and MD5 hash to obtain a unique signature for an digital audio file. A cryptographic component may communicate to and or with other components in a component collection including itself and or facilities of the like. The cryptographic component supports encryption schemes allowing for the secure transmission of information across a communications network to enable the SCM component to engage in secure transactions if so desired. The cryptographic component facilitates the secure accessing of resources on the SCM and facilitates the access of secured resources on remote systems i.e. it may act as a client and or server of secured resources. Most frequently the cryptographic component communicates with information servers operating systems other program components and or the like. The cryptographic component may contain communicate generate obtain and or provide program component system user and or data communications requests and or responses.

The SCM database component may be embodied in a database and its stored data. The database is a stored program component which is executed by the CPU the stored program component portion configuring the CPU to process the stored data. The database may be a conventional fault tolerant relational scalable secure database such as Oracle or Sybase. Relational databases are an extension of a flat file. Relational databases consist of a series of related tables. The tables are interconnected via a key field. Use of the key field allows the combination of the tables by indexing against the key field i.e. the key fields act as dimensional pivot points for combining information from various tables. Relationships generally identify links maintained between tables by matching primary keys. Primary keys represent fields that uniquely identify the rows of a table in a relational database. More precisely they uniquely identify rows of a table on the one side of a one to many relationship.

Alternatively the SCM database may be implemented using various standard data structures such as an array hash linked list struct structured text file e.g. XML table and or the like. Such data structures may be stored in memory and or in structured files. In another alternative an object oriented database may be used such as Frontier ObjectStore Poet Zope and or the like. Object databases can include a number of object collections that are grouped and or linked together by common attributes they may be related to other object collections by some common attributes. Object oriented databases perform similarly to relational databases with the exception that objects are not just pieces of data but may have other types of functionality encapsulated within a given object. If the SCM database is implemented as a data structure the use of the SCM database may be integrated into another component such as the SCM component . Also the database may be implemented as a mix of data structures objects and relational structures. Databases may be consolidated and or distributed in countless variations through standard data processing techniques. Portions of databases e.g. tables may be exported and or imported and thus decentralized and or integrated.

In one embodiment the database component includes several tables A Programming Schedule table may include fields such as but not limited to schedule ID program ID s program name s program type s play time s channel s playback requirements parental warning s and or the like. A Users table may include fields such as but not limited to user ID user name contact info hardware ID s local media receiver ID local media receiver type display ID display type mobile device ID mobile device type service account recording schedule ID usage history access and or authorizations and or the like. A Recording Schedule table may include fields such as but not limited to recording schedule ID program ID s play time s program priorities user ID s and or the like. These tables may support and or track multiple entity accounts on the SCM controller.

In one embodiment the SCM database may interact with other database systems. For example employing a distributed database system queries and data access by search SCM component may treat the combination of the SCM database an integrated data security layer database as a single database entity.

In one embodiment user programs may contain various user interface primitives which may serve to update the SCM. Also various accounts may require custom database tables depending upon the environments and the types of clients the SCM may need to serve. It should be noted that any unique fields may be designated as a key field throughout. In an alternative embodiment these tables have been decentralized into their own databases and their respective database controllers i.e. individual database controllers for each of the above tables . Employing standard data processing techniques one may further distribute the databases over several computer systemizations and or storage devices. Similarly configurations of the decentralized database controllers may be varied by consolidating and or distributing the various database components The SCM may be configured to keep track of various settings inputs and parameters via database controllers.

The SCM database may communicate to and or with other components in a component collection including itself and or facilities of the like. Most frequently the SCM database communicates with the SCM component other program components and or the like. The database may contain retain and provide information regarding other nodes and data.

The SCM component is a stored program component that is executed by a CPU. In one embodiment the SCM component incorporates any and or all combinations of the aspects of the SCM that was discussed in the previous figures As such the SCM affects accessing. obtaining and the provision of information services transactions and or the like across various communications networks.

The SCM component is configurable to access calculate engage exchange generate identify instruct match process search serve store and or facilitate scheduled recordings remote scheduling schedule conflict management and or the like and use of the SCM.

The SCM component enabling access of information between nodes may be developed by employing standard development tools and languages such as but not limited to Apache components Assembly ActiveX binary executables ANSI Objective C C and or .NET database adapters CGI scripts Java JavaScript mapping tools procedural and object oriented development tools PERL PHP Python shell scripts SQL commands web application server extensions WebObjects and or the like. In one embodiment the SCM server employs a cryptographic server to encrypt and decrypt communications. The SCM component may communicate to and or with other components in a component collection including itself and or facilities of the like. Most frequently the SCM component communicates with the SCM database operating systems other program components and or the like. The SCM may contain communicate generate obtain and or provide program component system user and or data communications requests and or responses.

The structure and or operation of any of the SCM node controller components may be combined consolidated and or distributed in any number of ways to facilitate development and or deployment. Similarly the component collection may be combined in any number of ways to facilitate deployment and or development. To accomplish this one may integrate the components into a common code base or in a facility that can dynamically load the components on demand in an integrated fashion.

The component collection may be consolidated and or distributed in countless variations through standard data processing and or development techniques. Multiple instances of any one of the program components in the program component collection may be instantiated on a single node and or across numerous nodes to improve performance through load balancing and or data processing techniques. Furthermore single instances may also be distributed across multiple controllers and or storage devices e.g. databases. All program component instances and controllers working in concert may do so through standard data processing communication techniques.

The configuration of the SCM controller will depend on the context of system deployment. Factors such as but not limited to the budget capacity location and or use of the underlying hardware resources may affect deployment requirements and configuration. Regardless of if the configuration results in more consolidated and or integrated program components results in a more distributed series of program components and or results in some combination between a consolidated and distributed configuration data may be communicated obtained and or provided. Instances of components consolidated into a common code base from the program component collection may communicate obtain and or provide data. This may be accomplished through intra application data processing communication techniques such as but not limited to data referencing e.g. pointers internal messaging object instance variable communication shared memory space variable passing and or the like.

If component collection components are discrete separate and or external to one another then communicating obtaining and or providing data with and or to other component components may be accomplished through inter application data processing communication techniques such as but not limited to Application Program Interfaces API information passage distributed Component Object Model D COM . Distributed Object Linking and Embedding D OLE and or the like Common Object Request Broker Architecture CORBA local and remote application program interfaces Jini Remote Method Invocation RMI process pipes shared files and or the like. Messages sent between discrete component components for inter application communication or within memory spaces of a singular component for intra application communication may be facilitated through the creation and parsing of a grammar. A grammar may be developed by using standard development tools such as lex yacc XML and or the like which allow for grammar generation and parsing functionality which in turn may form the basis of communication messages within and between components. Again the configuration will depend upon the context of system deployment.

The entirety of this disclosure including the Cover Page Title Headings Field Background Summary Brief Description of the Drawings Detailed Description Claims Abstract Figures and otherwise shows by way of illustration various embodiments in which the claimed inventions may be practiced. The advantages and features of the disclosure are of a representative sample of embodiments only and are not exhaustive and or exclusive. They are presented only to assist in understanding and teach the claimed principles. It should be understood that they are not representative of all claimed inventions. As such certain aspects of the disclosure have not been discussed herein. That alternate embodiments may not have been presented for a specific portion of the invention or that further undescribed alternate embodiments may be available for a portion is not to be considered a disclaimer of those alternate embodiments. It will be appreciated that many of those undescribed embodiments incorporate the same principles of the invention and others are equivalent. Thus it is to be understood that other embodiments may be utilized and functional logical organizational structural and or topological modifications may be made without departing from the scope and or spirit of the disclosure. As such all examples and or embodiments are deemed to be non limiting throughout this disclosure. Also no inference should be drawn regarding those embodiments discussed herein relative to those not discussed herein other than it is as such for purposes of reducing space and repetition. For instance it is to be understood that the logical and or topological structure of any combination of any program components a component collection other components and or any present feature sets as described in the figures and or throughout are not limited to a fixed operating order and or arrangement but rather any disclosed order is exemplary and all equivalents regardless of order are contemplated by the disclosure. Furthermore it is to be understood that such features are not limited to serial execution but rather any number of threads processes services servers and or the like that may execute asynchronously concurrently in parallel simultaneously synchronously and or the like are contemplated by the disclosure. As such some of these features may be mutually contradictory in that they cannot be simultaneously present in a single embodiment. Similarly some features are applicable to one aspect of the invention and inapplicable to others. In addition the disclosure includes other inventions not presently claimed. Applicant reserves all rights in those presently unclaimed inventions including the right to claim such inventions file additional applications continuations continuations in part divisions and or the like thereof. As such it should be understood that advantages embodiments examples functional features logical organizational structural topological and or other aspects of the disclosure are not to be considered limitations on the disclosure as defined by the claims or limitations on equivalents to the claims.

