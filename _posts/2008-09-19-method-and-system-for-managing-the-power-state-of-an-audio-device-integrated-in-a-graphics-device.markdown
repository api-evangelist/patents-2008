---

title: Method and system for managing the power state of an audio device integrated in a graphics device
abstract: One embodiment of the present invention sets forth a method for managing a power state of an audio device resident in a graphics processing unit. The method includes the steps of directing audio data originated from a client application via an audio path in an audio driver stack to the audio device, determining whether an active stream of audio data along the audio path is present in response to a notification of an attempt to shut down the graphics processing unit, and requesting a plug and play manager to disable the audio device, if no active stream of audio data is present along the audio path.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09182939&OS=09182939&RS=09182939
owner: NVIDIA Corporation
number: 09182939
owner_city: Santa Clara
owner_country: US
publication_date: 20080919
---
Embodiments of the present invention generally relate to audio driver structures and more specifically to methods and systems for managing the power state of an audio device integrated in a graphics device.

An increasing number of commercialized computer devices incorporate graphics dedicated processing systems. In order to increase the processing throughput of the graphics system multiple graphics processors may be provided in the graphics system. Such a multiprocessor graphics system may utilize a low performance graphics processor that reduces power usage at least in part by reducing graphics data processing performance and a high performance graphics processor that offers greater graphics processing throughput but contributes to increased power usage compared with the low power graphics processor. The increased graphics processing throughput may be achieved by operating at a higher clock rate including two or more graphics processing pipelines and using wider and or faster internal and external interfaces. Moreover to accommodate High Definition HD graphics and audio outputs a HD audio device may also be integrated in the high performance graphics processor. As a result the higher performance graphics processor is implemented in a larger die size than the lower performance graphics processor in order to include more transistors. Even when a high performance graphics processor is not processing graphics data it contributes to overall system power consumption due to the static power resulting from transistor leakage. Therefore the static power of the high performance graphics processor is greater than the static power of the low power graphics processor. Consequently high performance graphics processors are not used in conventional portable systems which are battery powered.

One conventional way to reduce power consumption in a battery powered mode is to turn off the high performance graphics processor. Unfortunately the shutdown of the high performance graphics processor also removes power from any components related to the high performance graphics processor such as the HD audio device. While the shutdown of the high performance graphics processor can be controllably performed through graphics drivers there are no mechanisms in current operating systems to convey this shutdown event to the audio drivers that separately control the HD audio device. As a result even if the HD audio device has been shut down the audio drivers may still continue to send streams of audio data to the HD audio device causing critical system faults.

As the foregoing illustrates what is needed in the art is thus a system and method that are able to manage the power state of an audio device integrated in a graphics device in an effective manner and address at least the foregoing issues.

One embodiment of the present invention sets forth a method for managing a power state of an audio device resident in a graphics processing unit. The method includes the steps of directing audio data originated from a client application via an audio path in an audio driver stack to the audio device determining whether an active stream of audio data along the audio path is present in response to a notification of an attempt to shut down the graphics processing unit and requesting a plug and play manager to disable the audio device if no active stream of audio data is present along the audio path.

One advantage of the disclosed method is the ability to disable the audio path before the graphics processing unit is actually shut down. Accordingly streams of audio data no longer are sent to the audio device integrated in the graphics device after it is shut down. Critical system faults can thereby be prevented.

In response to instructions transmitted by the CPU the graphics subsystem is configured to process graphics and or audio data. In one embodiment the graphics subsystem comprises a first graphics processing unit GPU coupled to a first frame buffer and an audio codec and a second GPU coupled to a second frame buffer . The first frame buffer and the second frame buffer store program instructions and graphics data respectively processed by the first and second GPU and to render images on a display device . While a single display device is shown alternate embodiments may also connect multiple display devices to the graphics subsystem each display device being associated with a different GPU e.g. either the first GPU or second GPU .

The first GPU is a low power device particularly well suited for portable devices which may rely on battery power. The second GPU is a high performance graphics device that consumes more power than the first GPU and offers enhanced graphics performance including image quality features and or higher graphics processing throughput e.g. frame rate fill rate or the like. In one embodiment the second GPU may include a High Definition Multimedia Interface HDMI adapted to transmit streams of High Definition HD graphics and audio data. HD audio streams may be processed in the graphics subsystem via a HD audio codec integrated in the second GPU and connected to the first GPU via a HD audio interface . In one embodiment the HD audio interface can include without limitation the Azalia interface developed by Intel Corporation of Santa Clara Calif. Furthermore the first GPU and the second GPU may either work independently or cooperate together through an interface to render images on the display device . In some embodiments when a low power condition occurs e.g. when the computer system relies on battery power the second GPU of higher graphics performance may also be controllably shut down to reduce power consumption. In this case components that are associated with the second GPU such as the second frame buffer and the HD audio codec are also controllably shut down to reduce power consumption.

Referring to again the system memory contains an application program an operating system OS and graphics drivers . During execution the application program may invoke various rendering functions of the graphics subsystem . One application program may be for example a content player that provides graphics and or audio content and invokes appropriate functions of the graphics subsystem to render the graphics and or audio content for presentation on the display device . These rendering functions are invoked through the OS that interacts with the graphics drivers to process data and manage tasks performed on either of the first GPU and the second GPU for servicing the application program . In one embodiment the OS may include for example the Windows operating systems available from Microsoft Corporation of Richmond Wash. In addition the graphics drivers also work in conjunction with the OS to manage the power state of the first GPU and second GPU . In particular the OS may interact with the graphics drivers to ensure that an audio path for audio output on the HD audio codec is properly disabled when an attempt to shut down the second GPU occurs.

In conjunction with is a schematic diagram illustrating how power management is implemented in an audio graphics driver structure according to one embodiment of the present invention. Streams of audio data generated by a client application are processed in an independent manner through an audio dedicated driver stack i.e. the audio stack . The audio stack comprises an audio application programming interface audio API an audio stream detector driver an audio class driver and one or more audio device driver such as audio driver A and HD audio driver B. In one embodiment the audio stack may be provided with the OS of . Moreover the audio driver A is associated with the audio codec whereas the HD audio driver B is associated with the HD audio codec . The client application includes program calls to specific audio rendering functions defined by the audio API . In one embodiment the audio API may include for example the DirectSound API provided with the Windows operating systems. The audio API interacts with the audio class driver to perform the tasks defined by the audio rendering functions. Based on the selected audio codec for audio output the audio class driver may access either of the audio driver A or HD audio driver B to have the audio stream outputted on the proper audio codec. According to the selected audio output a stream of audio data in the audio stack can thus be processed along a particular audio path through either the audio driver A or the HD audio driver B. The presence of an active audio stream in the audio stack is detected by the audio stream detector driver which also identifies the client application from which the stream of audio data originates.

In some embodiments the client application may also generate graphics data. Streams of graphics data are processed through a separate graphics dedicated driver stack i.e. the graphics stack . The graphics stack comprises a hybrid user interface a hybrid driver and graphics drivers . The hybrid driver is responsible for power management of the first GPU and second GPU and is able to receive inputs from a user through the hybrid user interface . More particularly in one embodiment the hybrid driver may modify a power state of the second GPU in response to a user s request inputted via the hybrid user interface or based on the detection of a change in the power supply mode of the computer system. The power state of the second GPU may be modified by switching the second GPU either from a power on state to a power off state or reversely from a power off state to a power on state. When an attempt to modify the power state of the second GPU occurs the hybrid driver is configured to interact with the audio stream detector driver and a plug and play manager to either disable or enable an audio path through the HD audio driver B.

In conjunction with is a flowchart of method steps for disabling an audio path in the audio stack for audio output on the HD audio codec when an attempt to shut down the second GPU occurs. In initial step the hybrid driver is notified of an attempt to shut down the second GPU . In subsequent step the hybrid driver queries the audio stream detector driver to determine whether an active stream of audio data is being processed through the HD audio driver B and identify the client application from which the audio data originates. When an active stream of audio data is present the hybrid driver issues an alert for example through the hybrid user interface informing the user that the shutdown attempt is not possible and provides an option for terminating the client application . Subsequently step may then be repeated to detect again whether an active stream of audio data is present.

When no active stream of audio data is processed through the HD audio driver B the hybrid driver in step requests the plug and play manager to disable the HD audio driver B. The plug and play manager may then send requests to the audio class driver to remove the software representation of the HD audio codec and unload the associated HD audio driver B. The audio path for output on the HD audio codec is thereby effectively disabled. In step the second GPU can then be properly shut down.

By using the functions of the plug and play manager the above described embodiment proposes a convenient mechanism for disabling a desired audio path without modification of the audio stack .

In conjunction with is a flowchart of method steps for disabling an audio path in the audio stack for audio output on the HD audio codec when an attempt to shut down the second GPU occurs. In initial step the hybrid driver transmits via the private interface to the HD audio driver B a notification of an attempt to shut down the second GPU . In response to the notification the HD audio driver B in step is configured to report to the audio class driver a simulated disconnection event of a HDMI connector enumerated on the HD audio codec . As a consequence step is performed to determine whether an active stream of audio data is currently processed through the HD audio driver B. When no audio streams are processed the audio class driver in step proceeds to abandon the audio path through the HD audio driver B. The second GPU can then be properly shut down in step .

On the other hand when an active stream of audio data is currently processed through the HD audio driver B the audio class driver in step pauses the stream of audio data and provides a message to the user for selecting a new audio output. In step the audio class driver then redirects the stream of audio data to the selected new audio output. In one embodiment the stream of audio data may be redirected through for example the audio driver A for output on the audio codec of the computer system shown in . Eventually the second GPU can then be properly shut down in step .

Similarly when the second GPU is switched on the HD audio driver B will recognize a connection event of a HDMI connector enumerated on the HD audio codec . The associated audio path can then be restored.

In conjunction with is a flowchart of method steps for disabling an audio path in the audio stack for output on the HD audio codec when an attempt to switch off the second GPU occurs. In initial step the filter driver may select the audio path that passes through the HD audio driver B for processing a stream of audio data issued to be outputted on the HD audio codec . In step the filter driver receives a notification transmitted by the hybrid driver via the private interface indicating an attempt to shut down the second GPU . As a consequence in step the filter driver selects a new audio path such as the audio path for output on the audio codec and redirects the stream of audio data previously processed through the HD audio driver B to the new audio path. Eventually the second GPU can then be properly shut down in step .

By disabling the concerned audio path in anticipation of the shutdown of the second GPU streams of audio data are no longer sent to the HD audio device integrated in the second GPU after it is shut down. As a result critical system faults can be prevented.

While the forgoing is directed to embodiments of the present invention other and further embodiments of the invention may be devised without departing from the basic scope thereof. For example aspects of the present invention may be implemented in hardware or software or in a combination of hardware and software. One embodiment of the invention may be implemented as a program product for use with a computer system. The program s of the program product define functions of the embodiments including the methods described herein and can be contained on a variety of computer readable storage media. Illustrative computer readable storage media include but are not limited to i non writable storage media e.g. read only memory devices within a computer such as CD ROM disks readable by a CD ROM drive flash memory ROM chips or any type of solid state non volatile semiconductor memory on which information is permanently stored and ii writable storage media e.g. floppy disks within a diskette drive or hard disk drive or any type of solid state random access semiconductor memory on which alterable information is stored. Such computer readable storage media when carrying computer readable instructions that direct the functions of the present invention are embodiments of the present invention.

