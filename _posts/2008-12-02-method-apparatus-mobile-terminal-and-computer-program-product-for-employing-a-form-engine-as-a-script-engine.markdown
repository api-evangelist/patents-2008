---

title: Method, apparatus, mobile terminal and computer program product for employing a form engine as a script engine
abstract: An apparatus for employing a form engine as a script engine may include a processor. The processor may be configured to determine whether an event relates to starting a form or running a script, employ a form engine having a user interface portion including user interface components in response to a determination that the event relates to starting the form, and adapt the form engine by providing a reduced user interface portion that does not create user interface components and does not generate user interface events in response to a determination that the event relates to running the script. A corresponding method and computer program product are also provided.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08381172&OS=08381172&RS=08381172
owner: Nokia Corporation
number: 08381172
owner_city: Espoo
owner_country: FI
publication_date: 20081202
---
Embodiments of the present invention relate generally to form markup languages and more particularly relate to a method apparatus and computer program product for enabling the use of a form engine employing a form markup language as a script engine.

The modern communications era has brought about a tremendous expansion of wireline and wireless networks. Computer networks television networks and telephony networks are experiencing an unprecedented technological expansion fueled by consumer demand. Wireless and mobile networking technologies have addressed related consumer demands while providing more flexibility and immediacy of information transfer.

Current and future networking technologies continue to facilitate ease of information transfer and convenience to users. One area in which there is a demand to increase ease of information transfer relates to the delivery of services to a user of a mobile terminal. The services may be in the form of a particular media or communication application desired by the user such as a music player a game player an electronic book short messages email etc. The services may also be in the form of interactive applications in which the user may respond to a network device in order to perform a task or achieve a goal. The services may be provided from a network server or other network device or even from the mobile terminal such as for example a mobile telephone a mobile television a mobile gaming system etc.

In certain applications it is necessary for the user to enter data into forms. A particular form markup language known as XForms is an example of a next generation form markup which replaces traditional forms in for example XHTML 2.0. XForms can also be used with other markups such as synchronized media integration language SMIL . XForms provide certain advantages such as device independency separation of data from presentation and compatibility with extensible markup language XML infrastructure. As such XForms may be useful for implementation in a form engine.

In certain environments such as an enterprise oriented mobile service platform it may be desirable for business logic in the mobile client to be transparently upgradeable e.g. without user involvement . In other words it may be desirable for upgrades to be done via reconfiguration instead of via a software upgrade since software upgrades may be costly inconvenient for end users and or prone to failure. In some cases business oriented mobile services may be form centric e.g. rather than media centric and thus a form engine may be desirable for use in reconfiguration. In this regard for example when a business document is received by the mobile client the form engine may be used to run a form using the document as an input parameter. However in addition to a form engine a script engine may also be useful for certain types of processing that may be encountered. For example a form engine may handle interactive business logic e.g. for a product order document the form engine may be used to present the user with a form that allows the user to change product pricing but may not be useful for other functions such as automatic processes e.g. automatically checking to determine whether product prices are within a certain range and taking action if the prices are not within the range . In such cases a script engine may be useful.

Accordingly some form engines may include a separate script engine to handle form logic implemented with script. A web browser may be an example of such a form engine. In this regard a HyperText Markup Language HTML form may use a JavaScript to implement form logic. However a full web browser with JavaScript support may be a relatively heavy component that may be difficult to implement in mobile Java J2ME . Thus the code footprint for such an implementation may be relatively large.

Accordingly it may be desirable to provide an improved mechanism for employing a form engine along with a script engine.

A method apparatus and computer program product are therefore provided to enable the use of a form engine employing a form markup language e.g. XForms as a script engine. In particular a method apparatus and computer program product are provided that enables adaptation of a form engine for utilization in script processing as a script engine. As such embodiments of the present invention may provide for example a form markup language including a model portion and a user interface portion may be modified so that the form markup language may lack a user interface portion which effectively enables a form engine implemented from the form markup language to operate as a script engine. Accordingly both form engine functionality and script engine functionality may be provided by a relatively lightweight implementation.

In one exemplary embodiment a method of enabling the use of a form engine as a script engine is provided. The method may include determining whether an event relates to starting a form or running a script employing a form engine having a user interface portion including user interface components in response to a determination that the event relates to starting the form and adapting the form engine by providing a reduced user interface portion that does not create user interface components and does not generate user interface events in response to a determination that the event relates to running the script.

In another exemplary embodiment a computer program product for enabling the use of a form engine as a script engine is provided. The computer program product may include at least one computer readable storage medium having computer executable program code instructions stored therein. The computer executable program code instructions may include program code instructions for determining whether an event relates to starting a form or running a script employing a form engine having a user interface portion including user interface components in response to a determination that the event relates to starting the form and adapting the form markup language by providing a reduced user interface portion that does not create user interface components and does not generate user interface events in response to a determination that the event relates to running the script.

In another exemplary embodiment an apparatus for enabling the use of a form engine as a script engine is provided. The apparatus may include a processor configured to determine whether an event relates to starting a form or running a script employ a form engine having a user interface portion including user interface components in response to a determination that the event relates to starting the form and adapt the form engine by providing a reduced user interface portion that does not create user interface components and does not generate user interface events in response to a determination that the event relates to running the script.

In another exemplary embodiment an apparatus for enabling the use of a form engine as a script engine is provided. The apparatus includes means for determining whether an event relates to starting a form or running a script means for employing a form engine having a user interface portion including user interface components in response to a determination that the event relates to starting the form and means for adapting the form engine by providing a reduced user interface portion that does not create user interface components and does not generate user interface events in response to a determination that the event relates to running the script.

Embodiments of the invention may provide a method apparatus and computer program product for advantageous employment in mobile terminals or other environments in which it is desirable to improve data processing capabilities without appreciably increasing memory and resource consumption of the mobile terminal.

Some embodiments of the present invention will now be described more fully hereinafter with reference to the accompanying drawings in which some but not all embodiments of the invention are shown. Indeed various embodiments of the invention may be embodied in many different forms and should not be construed as limited to the embodiments set forth herein rather these embodiments are provided so that this disclosure will satisfy applicable legal requirements. Like reference numerals refer to like elements throughout. As used herein the terms data content information and similar terms may be used interchangeably to refer to data capable of being transmitted received and or stored in accordance with embodiments of the present invention. Moreover the term exemplary as used herein is not provided to convey any qualitative assessment but instead merely to convey an illustration of an example. Thus use of any such terms should not be taken to limit the spirit and scope of embodiments of the present invention.

Embodiments of the present invention will be described below mainly in the context of XForms. However XForms may be one example of a form markup language that may be employed in connection with practicing embodiments of the present invention. As such other form markup languages may alternatively be employed in some cases. By way of background XForms is an XML format for specification of user interfaces and more specifically web forms. Web forms allow a user of a client device e.g. the mobile terminal to enter data that may be sent to a serving device e.g. the service platform for processing. Web forms often mimic the usage of paper forms. The web forms can be used to submit data to save on the serving device e.g. information for ordering a product or can be used to retrieve data e.g. searching for information on a search engine .

While several embodiments of the mobile terminal may be illustrated and hereinafter described for purposes of example other types of mobile terminals such as portable digital assistants PDAs pagers mobile televisions mobile telephones gaming devices laptop computers cameras video recorders audio video player radio global positioning system GPS devices or any combination of the aforementioned and other types of voice and text communications systems can readily employ embodiments of the present invention. Furthermore devices that are not mobile may also readily employ embodiments of the present invention.

The network may include a collection of various different nodes devices or functions that may be in communication with each other via corresponding wired and or wireless interfaces. As such the illustration of should be understood to be an example of a broad view of certain elements of the system and not an all inclusive or detailed view of the system or the network . Although not necessary in some embodiments the network may be capable of supporting communication in accordance with any one or more of a number of first generation 1G second generation 2G 2.5G third generation 3G 3.5G 3.9G fourth generation 4G mobile communication protocols Long Term Evolution LTE and or the like.

One or more communication terminals such as the mobile terminal may be in communication with each other via the network and each may include an antenna or antennas for transmitting signals to and for receiving signals from a base site which could be for example a base station that is a part of one or more cellular or mobile networks or an access point that may be coupled to a data network such as a local area network LAN a metropolitan area network MAN and or a wide area network WAN such as the Internet. In turn other devices such as processing elements e.g. personal computers server computers or the like may be coupled to the mobile terminal via the network . By directly or indirectly connecting the mobile terminal and other devices to the network the mobile terminal may be enabled to communicate with the other devices for example according to numerous communication protocols including Hypertext Transfer Protocol HTTP and or the like to thereby carry out various communication or other functions of the mobile terminal .

Furthermore although not shown in the mobile terminal may communicate in accordance with for example radio frequency RF Bluetooth BT Infrared IR or any of a number of different wireline or wireless communication techniques including LAN wireless LAN WLAN Worldwide Interoperability for Microwave Access WiMAX WiFi ultra wide band UWB Wibree techniques and or the like. As such the mobile terminal may be enabled to communicate with the network and other devices by any of numerous different access mechanisms. For example mobile access mechanisms such as wideband code division multiple access W CDMA CDMA2000 global system for mobile communications GSM general packet radio service GPRS and or the like may be supported as well as wireless access mechanisms such as WLAN WiMAX and or the like and fixed access mechanisms such as digital subscriber line DSL cable modems Ethernet and or the like.

In an example embodiment the service platform may be a device or node such as a server or other processing element. The service platform may have any number of functions or associations with various services. As such for example the service platform may be a platform such as a dedicated server or server bank associated with a particular information source or service or the service platform may be a backend server associated with one or more other functions or services. As such the service platform may represent a plurality of different services or information sources. The functionality of the service platform may be provided by hardware and or software components configured to operate in accordance with known techniques for the provision of information to users of communication devices. However some of the functionality provided by the service platform may be information provided in accordance with embodiments of the present invention.

In an exemplary embodiment the service platform may represent a source for information associated with a service that may be provided to the mobile terminal in accordance with embodiments of the present invention. As such for example the mobile terminal may run a client application configured to communicate with a corresponding server function at the service platform .

Referring now to an apparatus for enabling the use of a form engine as a script engine is provided. The apparatus may include or otherwise be in communication with a processor a user interface a communication interface and a memory device . The memory device may include for example volatile and or non volatile memory. The memory device may be configured to store information data applications instructions or the like for enabling the apparatus to carry out various functions in accordance with exemplary embodiments of the present invention. For example the memory device could be configured to buffer input data for processing by the processor . Additionally or alternatively the memory device could be configured to store instructions for execution by the processor . As yet another alternative the memory device may be one of a plurality of databases that store information and or media content.

The processor may be embodied in a number of different ways. For example the processor may be embodied as various processing means such as a processing element a coprocessor a controller or various other processing devices including integrated circuits such as for example an ASIC application specific integrated circuit an FPGA field programmable gate array a hardware accelerator or the like. In an exemplary embodiment the processor may be configured to execute instructions stored in the memory device or otherwise accessible to the processor .

Meanwhile the communication interface may be any means such as a device or circuitry embodied in either hardware software or a combination of hardware and software that is configured to receive and or transmit data from to a network and or any other device or module in communication with the apparatus. In this regard the communication interface may include for example an antenna or multiple antennas and supporting hardware and or software for enabling communications with a wireless communication network. In fixed environments the communication interface may alternatively or also support wired communication. As such the communication interface may include a communication modem and or other hardware software for supporting communication via cable digital subscriber line DSL universal serial bus USB or other mechanisms.

The user interface may be in communication with the processor to receive an indication of a user input at the user interface and or to provide an audible visual mechanical or other output to the user. As such the user interface may include for example a keyboard a mouse a joystick a display a touch screen a microphone a speaker or other input output mechanisms. In an exemplary embodiment in which the apparatus is embodied as a server or some other network devices the user interface may be limited or eliminated. However in an embodiment in which the apparatus is embodied at a communication device e.g. the mobile terminal the user interface may include among other devices or elements any or all of a speaker a microphone a display and a keyboard or the like.

In an exemplary embodiment the processor may be embodied as include or otherwise control a form engine an adapter and a script engine . As such the form engine the adapter and the script engine may in some cases each be separate devices modules or functional elements. However in other embodiments the form engine the adapter and the script engine may be embodied within a single device module or functional element such as the processor the apparatus or the mobile terminal . The form engine the adapter and the script engine may each be any means such as a device or circuitry embodied in hardware software or a combination of hardware and software e.g. processor operating under software control that is configured to perform the corresponding functions of the form engine the adapter and the script engine respectively as described below. In some embodiments communication between the form engine the adapter and the script engine may be conducted via the processor . However the form engine the adapter and the script engine may alternatively be in direct communication with each other or may have no communication with each other.

In an exemplary embodiment the form engine the adapter and the script engine may include instructions code modules applications and or circuitry for providing form processing adaptation and script processing services respectively. However it should be noted that code circuitry and or instructions associated with the form engine the adapter and or the script engine need not necessarily be modular. Moreover in at least one exemplary embodiment the form engine may be embodied using XForms while the script engine is embodied also using XForms as merely an adaptation of the form engine . The adapter may be configured to adapt XForms of the form engine to enable operation of the form engine as the script engine by virtue of the provision of special user interface bindings used when handling scripts.

The form engine may be configured to process forms. In this regard for example the form engine may process a form markup language such as XForms. As such for example the form engine may be configured to provide a data processing model for data e.g. XML data and a user interface or user interfaces for the data. In this way the form engine may be at least a partial implementation of the specification of the form markup language e.g. XForms . The form engine may therefore interpret form descriptions created by a form author and create a form s on screen appearance. The form engine may further handle form logic and user interaction with the form. Accordingly since XForms as an exemplary form markup language may include a model portion and a user interface UI portion the form engine which may also include corresponding model and UI portions may be configured to reference data definitions and data bindings associated with the model portion and execute UI controls and UI interaction logic associated with the UI portion. When a form is started the model portion typically receives an initialization or start notification event e.g. XForms ready . The form engine may be configured to respond to such an event using various form markup language e.g. XForms actions or event handlers. Accordingly the form engine may be configured to get an input e.g. a document and modify the document based on user input. The form engine may then be configured to send the modified document to some interface e.g. a user interface . Thus the form engine typically assumes that a UI portion will be encountered.

The script engine may be configured to process scripts. Thus the script engine may typically not include any UI portion. As such for example the script engine may be configured to automate repetitive actions or enable state configurations. In this regard the script engine may run a script for example by inspecting one or more documents e.g. XML documents and possibly making changes to the documents. Changed documents may then either be sent to a predetermined receiver or saved in a local document database. In some cases where there is a single argument document e.g. in a case where a script is run as an automatic response to the arrival of a document that document may be given as an argument to the script the argument may be given by using an XForms element with a predefined identifier e.g. document .

The adapter may be configured to adapt the form engine to operate as a script engine under certain circumstances. In this regard for example the adapter may be configured to effectively only enable operation with respect to the model portion of the form markup language e.g. XForms to basically eliminate the UI portion when appropriate. In an exemplary embodiment effective removal of the UI portion may create a scripting language that may allow the use of all the power of the form markup language e.g. XForms without needing user interaction. A script may be written for example as an event handler for an XForms ready event but some portions of the script may also execute as event handlers for XForms submit done or XForms submit error events.

In an exemplary embodiment the adapter may be configured to adapt the form engine by providing a special empty or null user interface binding that does not create any user interface components and does not generate user interface events. Such a binding may typically be implemented with code of relatively small or even negligible size. Accordingly the adaptation of the form engine to operation as the script engine may be accomplished by the adapter in a relatively lightweight implementation. The form engine may however desire or require a UI binding to be selectable at run time. Accordingly the adapter may provide that a normal or full UI binding is selected when a form is to be started. However the adapter may provide that a minimal or empty UI binding is selected when a script is to be run. Accordingly although an embodiment of the present invention may functionally include the form engine and the script engine the script engine may actually be an adaptation of the form engine instead of a separate device or module.

Thus according to an exemplary embodiment the adapter may be configured to determine whether a script is to be run or a form is to be started. Based on the determination the adapter may be configured to provide for selection of a full or normal UI binding if the form is to be started but provide for selection of a reduced e.g. minimal or empty UI binding if the script is to be run. As such for example the adapter may essentially replace the UI layer portion of an XForms engine with a relatively small nothing empty or null UI layer. The adapter may thereby be capable of utilizing the same model portion corresponding to the model portion of a form markup language in both a form engine and a script engine by enabling use of the model portion and the UI portion of the form engine when operating on forms and eliminating the UI portion to effectively disable the UI portion of the form engine to effectively adapt the form engine into the script engine so that only the model portion of the form markup language is effectively usable when operating on scripts. As such for example the script engine may essentially be embodied by XForms having a special reduced e.g. null empty minimal or nothing UI portion.

In an exemplary embodiment access to the phone and service platform can be done in various different ways. As an example the form markup language e.g. XForms may be extended to include new actions e.g. an action for sending an email message . As an alternative a local representational state transfer REST service may be defined. The script may access the local REST service with standard XForms submissions. For example to send an email a service may be defined at a URL service email which may take as an argument submission an XML document that specifies the receiver subject and contents of the email message using an XML schema syntax specific to an email sending service. To send an email the script may simply provide a POST request to the service. Similarly information such as a specific document can be fetched by the script by doing a GET request to a service that returns the desired information as an XML document. Request parameters such as the document identifier of a desired document may be passed either as URL parameters or as an XML body included in the GET request.

Because an XForms script engine may be implemented as an XForms form engine with special reduced or empty user interface bindings that may take negligible space the script engine may be implemented with negligible additional space e.g. on the order of 1 5 kilobytes when an XForms form engine is already present as the form engine . Thus for example extensions improvements etc. may be accomplished in the form engine that are not purely UI related but are usable in the script engine with no additional effort. Accordingly form authors may not need to learn a separate language in order to be able to create scripts. As such for example REST interfaces supported by XForms may allow a flexible yet standard XForms compliant interface to phone and service platform functionality.

Accordingly blocks or steps of the flowchart support combinations of means for performing the specified functions combinations of steps for performing the specified functions and program instruction means for performing the specified functions. It will also be understood that one or more blocks or steps of the flowchart and combinations of blocks or steps in the flowchart can be implemented by special purpose hardware based computer systems which perform the specified functions or steps or combinations of special purpose hardware and computer instructions.

In this regard one embodiment of a method for enabling adaptation of a form engine for utilization in script processing as a script engine as illustrated for example in may include determining whether an event relates to starting a form or running a script at operation and employing a form engine having a user interface portion including user interface components in response to a determination that the event relates to starting the form at operation . The method may further include adapting the form engine by providing a reduced user interface portion that does not create user interface components and does not generate user interface events in response to a determination that the event relates to running the script at operation .

In some embodiments the method may include further optional operations an example of which is shown in dashed lines in . Optional operations may be performed in any order and or in combination with each other in various alternative embodiments. As such the method may further include an operation of defining a local representational state transfer REST service accessible by the script at operation .

In some embodiments certain ones of the operations above may be modified or further amplified as described below. It should be appreciated that each of the modifications or amplifications below may be included with the operations above either alone or in combination with any others among the features described herein. In this regard for example employing the form markup language may include employing XForms. In some cases adapting the form markup language may include removing the user interface portion of the form markup language. Additionally or alternatively adapting the form markup language may include enabling use of a model portion of the form engine and a null or empty user interface binding to run the script via execution of an event handler without involving user interaction. In an exemplary embodiment defining the local REST service may include defining a service accessible by the script via standard XForms submissions.

In an exemplary embodiment an apparatus for performing the method of above may comprise a processor e.g. the processor configured to perform some or each of the operations described above. The processor may for example be configured to perform the operations by performing hardware implemented logical functions executing stored instructions or executing algorithms for performing each of the operations. Alternatively the apparatus may comprise means for performing each of the operations described above. In this regard according to an example embodiment examples of means for performing operations may comprise for example the processor the adapter or an algorithm executed by the processor for processing information as described above.

Many modifications and other embodiments of the inventions set forth herein will come to mind to one skilled in the art to which these inventions pertain having the benefit of the teachings presented in the foregoing descriptions and the associated drawings. Therefore it is to be understood that the inventions are not to be limited to the specific embodiments disclosed and that modifications and other embodiments are intended to be included within the scope of the appended claims. Moreover although the foregoing descriptions and the associated drawings describe exemplary embodiments in the context of certain exemplary combinations of elements and or functions it should be appreciated that different combinations of elements and or functions may be provided by alternative embodiments without departing from the scope of the appended claims. In this regard for example different combinations of elements and or functions than those explicitly described above are also contemplated as may be set forth in some of the appended claims. Although specific terms are employed herein they are used in a generic and descriptive sense only and not for purposes of limitation.

