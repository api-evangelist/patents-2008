---

title: Client-to service compatibility framework
abstract: A client-to-service compatibility framework is described that allows online entities to provide a single set of service offerings for client devices of multiple different brands and/or models, such as televisions, set-top-boxes, game consoles, and portable media players, for example. Generally, the client-to-service compatibility framework comprises a plurality of plug-ins or adapters that translate communications from client devices to a form compatible with the online entity's service offerings and vice versa. In this manner, online entities are able to insulate their service offerings from the changing communication needs of client devices.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08812374&OS=08812374&RS=08812374
owner: Amazon Technologies, Inc.
number: 08812374
owner_city: Reno
owner_country: US
publication_date: 20080630
---
Online entities offer a wide variety of services to a variety of different client devices including personal computers PCs portable digital assistants PDAs mobile telephones pocket PCs smartphones set top boxes digital video recorders DVRs gaming consoles and other client devices. These client devices often communicate differently. For example different devices may use different communication protocols different data formats different security mechanisms and may even transmit different data.

Typically an online entity that wishes to provide services to devices that communicate differently must customize their services to meet the communication needs of each different device. For example envision that a hypothetical online entity offers three different services to five different types of client devices that each communicate differently. In this example the online entity would need to offer fifteen customized services three for each of five different device types .

The number of client devices available is rapidly increasing. To stay competitive in the marketplace online entities must adapt their services to support the ever growing number of different device types. Customizing individual services to communicate with each different type of client device becomes increasingly burdensome and costly as the number of services and or number of device types increases. This problem is compounded by the fact that anytime an online entity makes a change to one of their service offerings this change must be propagated across the customized services for each supported device type.

To stay competitive in the marketplace online entities desire to make their services available to as many customers as possible. However as mentioned above it is burdensome on online entities to customize and continually update their service offerings to meet the communication needs of the ever increasing number of client device types on the market.

This disclosure describes a client to service compatibility framework that allows online entities to provide a single set of service offerings for client devices regardless of brand and or model. The concepts described herein are applicable to a wide variety of client devices including both general purpose devices such as personal computers and special purpose devices that are designed with limited functionality in mind. However the compatibility concepts are particularly convenient when used to communicate with special purpose devices because those devices are not as easily updated or adapted to integrate with service providers systems. General purpose devices are those that are readily capable of being updated by installing and running new software. Whereas special purpose devices typically are incapable of installing and running software applications. Most consumer electronics devices fall in the class of special purpose devices. Such special purpose devices typically are updatable if at all by updating their firmware. For many special purpose devices updating firmware is the only way of updating the device. By way of example and not limitation special purpose devices include televisions set top boxes e.g. digital video recorders cable boxes etc. game consoles and portable media players. Because these special purpose devices are difficult or impossible to update or adapt to service providers systems it may be beneficial for the service providers systems to be able to adapt to and communicate using communications compatible with the special purpose devices.

In some implementations the client to service framework may allow an online entity to communicate with and support multiple different brands and models of special purpose devices multiple different brands and models of general purpose devices or multiple different brands and models of special purpose and general purpose computing devices.

Generally the client to service compatibility framework described herein comprises a plurality of plug ins or adapters that translate communications from client devices to a form compatible with the online entity s service offerings and vice versa. In this manner online entities are able to insulate their service offerings from the changing communication needs of client devices.

Adapters may be created and maintained for each device by the online entity and or by the device manufacturer. Adapters may be generated from scratch or by tailoring a generic adapter template for use with a specific client device. If a template is used to create an adapter the adapter template may contain application programming interfaces APIs creating hooks to use the online entity s services.

While implementations of the present disclosure are described in the context of online sellers of digital items unless otherwise specified the techniques described herein are applicable to any transactions involving goods or services offered by an online entity over a network such as the Internet. Aspects of this disclosure may be applicable to translation of other communications as well. As an overview digital items may include media including text images audio video and combinations of these or any other media stored in an electronic format. Purchasing ordering or selling an item may include both permanent e.g. assignments sales etc. and temporary transactions e.g. rentals leases etc. as well as transfers of all e.g. assignments sales etc. or less than all of one s rights e.g. licenses .

Various techniques facilitating compatible communication between a host online entity and one or more client devices is described in the context of an online seller site and associated servers. One illustrative implementation of this context is described below. However communication between a host and one or more client devices may also be implemented in other contexts. Moreover other communication techniques may be realized using the system architecture described herein.

One or more servers . . . N perhaps arranged in a cluster or as a server farm host the site . Other server architectures may also be used to host the site . The site is capable of handling requests from many users and serving in response various web pages that can be rendered at the client computing devices M . The site can be any type of site that supports user interaction including online retailers informational sites social networking sites blog sites search engine sites news and entertainment sites and so forth. Additionally the site may be representative of proprietary sites that receive requests and provide content over proprietary networks other than the Internet and public web.

In the illustrative environment the site represents an online seller site that hosts an electronic catalog with one or more digital items available for purchase. The illustrated example is described in the context of a seller of digital items such as audio video and textual downloads. However the client to service compatibility techniques described herein are applicable to sales of any items tangible digital or otherwise . In some implementations the item may be offered by the seller for consumption. However in some implementations the seller may host items that others are selling using the seller s site.

In systems of an online seller are implemented in memory of one or more of the servers . The seller comprises a network interface including an input for receiving communications from one or more of the client devices via the network and an output for sending communications to the one or more client devices . Incoming communications received at the network interface from client devices typically are not compatible with other programs and services running the online seller s servers. For example incoming communications from client devices may be in a communication protocol that is incompatible with the online seller s systems. Incoming communications may also contain data or data formats that are not supported by the online seller s systems and or may use security mechanisms that are not compatible with the online seller s systems.

Thus before being forwarded to a services platform of the seller for processing incoming communications are translated by a device compatibility framework to a form that is compatible with the online seller s systems. In one specific example a communication protocol received from a client device in hypertext transfer protocol HTTP may be translated by the device compatibility framework to a simple object access protocol SOAP used by the online seller s systems. In another example a communication received in a plaintext format of a client device may be translated by the device compatibility framework into extensible markup language XML format used by the online seller s systems. Any or all of a communications protocol of the communication a format of the data in the communication a security mechanism of the communication and even the data itself may be translated by the device compatibility framework to a form usable by the online seller s systems. illustrates an example in which conversion is made directly from a device specific communication to a communication usable by a services platform and vice versa. However in other implementations an intermediate conversion may be made as described in more detail below with reference to . Still other conversions or translations may additionally or alternatively be made by device compatibility frameworks according to other implementations.

As discussed above customers may purchase items via the site using computing devices M . The client computing devices M may be implemented as any number of computing devices such as a personal computer PC a laptop computer a portable digital assistant PDA a mobile phone a pocket PC a smartphone a set top box a digital video recorder DVR a game console and so forth. As illustrated each client computing device is equipped with one or more processors and memory to store applications and data. According to some embodiments a browser application is shown stored in the memory and is executable on the processor s to provide access to the site . The browser renders web pages of for example a seller site served by the site on an associated display. Although embodiments are described in the context of a web based system other types of client server based communications and associated application logic could be used.

The services platform and the device compatibility framework are stored in memory of the servers . As shown in the services platform includes program modules implementing the various service offerings of the seller . In the illustrated example the services platform includes an order module a fulfillment module a preference module an authentication module a monitoring module and a catalog module . In other examples other service modules may be provided as necessary or desired for a given online entity.

The order module receives and processes incoming orders for items available for purchase from an online catalog . Upon receiving a new order the order module may create a record of the purchase in a transaction store . The order module may also update existing order records in the transaction store upon receiving a request to modify or cancel an existing order. Once an order has been placed the fulfillment module fulfills the order by for example locating the item s ordered and sending them to the client device that placed the order. In the case of an order for a digital item fulfillment may include for example sending a link to download the ordered digital item.

The preference module collects updates and otherwise manages user preference information from users of client devices. For example the preference module may store user account information address information payment information user interface display preferences user permissions or the like. The preference module stores the preference information in a preference store .

The authentication module authenticates client devices to the online seller site and identifies permissions associated with the client devices . For example if a client device requests to download a digital item the authentication module may verify that the client device has the appropriate security credentials e.g. password security certificate etc. and has permission to download the requested digital item e.g. has paid for the digital item . The authentication module may determine authentication of a client device by comparing a security credential provided by the client device e.g. password or certificate with a security credential stored in a security store associated with the client device. The authentication module may determine whether the client device has permission to download a particular item by reference to an order record in the transaction store preference information in the preference store or a security credential in the security store for example.

The monitoring module is in communication with the network interface directly or via the device compatibility framework. The monitoring module monitors interactions of client devices with the online seller site to manage network traffic establish and manage connections with client devices maintain a record of incoming and outgoing communications and otherwise monitor system events. The monitoring module may also report on status of any or all of the foregoing events to an administrator of the site .

The catalog module controls presentation of the item catalog to the user. For example the catalog module is responsible for serving item detail pages associated with particular items to the browser of client devices when a user of the client device navigates to the respective item detail page. How the catalog module presents the item catalog to the client device may depend on display preferences stored in preference store device characteristics e.g. screen size processing power network connection speed etc. or the like.

Collectively the service modules provide the functionality behind the services offered to customers of the online seller. In the example shown in the device compatibility framework comprises a two layer framework a device specific layer and a service specific layer. The device specific layer of the device compatibility framework includes a plurality of device specific adapters . . . M typically one for each different type of client device that is to be supported by the online seller site . The adapters may be created and maintained for each device by the online seller. Alternatively the online seller may provide a generic adapter as part of a software development kit SDK that includes one or more APIs usable to communicate with systems of the online seller. Device manufacturers desiring their products to be compatible with the online seller s services may then modify the generic adapter to recognize the protocol data format security mechanisms and the dataset used by the particular client device.

The service specific layer of the device compatibility framework comprises a plurality of service specific adapters . . . M . Typically the service specific layer includes an ownership rights module that directs communication between and among the other service specific adapters and the device specific adapters. The service specific layer also typically includes a service specific adapter for each different service offered by the online seller site . In this two layer version of the device compatibility framework communications between the device specific adapters and the client devices may be carried out in a native communication protocol of the respective client devices. Communications between the service specific adapters and the services platform may be carried out in a native communication protocol of the respective service modules which may be the same for all services or may vary from service to service such as a proprietary communication protocol of the seller . Communications between device specific adapters and service specific adapters may be carried out in a variety of different protocols including the proprietary protocol of the seller an extensible markup language XML binary or another intermediary.

By employing the device compatibly framework to translate incoming and outgoing communications the services platform need only include one version of each service module to support multiple types of client devices and communication formats as opposed to a customized service module for each different client device . When the seller modifies a service the modification will be automatically propagated across all device types by virtue of the device specific adapters .

The adapter in this example includes a protocol module to convert a communications protocol of incoming communications from a device specific protocol to a protocol used by the services platform of the seller and vice versa. Examples of communications protocols that the protocol module may convert to or from include without limitation Internet protocol IP transmission control protocol TCP hypertext transmission protocol HTTP hypertext transfer protocol over secure socket layer HTTPS simple object access protocol SOAP simple mail transfer protocol SMTP file transfer protocol FTP AppleTalk protocol and the like.

Generally each adapter is configured to convert incoming communications from the client device protocol to the online entity protocol and outgoing communications from the online entity protocol to a protocol of the destination client device. However in some instances the adapter may be configured to receive communications in multiple different incoming protocols and or to translate communications into multiple different outgoing protocols. In that case the adapter may include multiple protocol modules one for each translation or may include a protocol module capable of performing multiple translations. In that case the protocol module may include logic to intelligently determine which protocol conversion to perform on a given communication based on contents of the communication e.g. sender recipient client identification etc. .

The adapter also includes a security module to convert a security mechanism of a client device to a security mechanism used by the services platform of the seller and vice versa. Examples of security mechanisms that the security module may convert to or from include without limitation public key infrastructure PKI transport layer security TLS third party certificate or web of trust pretty good privacy PGP password protection and other digital rights management DRM mechanisms. Additionally or alternatively the security module may convert between a standard security mechanism an encrypted security mechanism and or a hash or other subset of a security mechanism.

The device specific adapter also includes a data module and a data format module configured to convert the data in a communication and its format from a form usable by the client device to a form usable by the services platform and vice versa. Data refers to the actual bits contained in the communication while the format of the data refers to the arrangement of that data in the communication. For example different client devices may use different data to represent the same or different instructions. Thus the data module may translate one bit of data from a client device to another bit of data usable by the services platform according to a look up table for example. The data format module is configured to convert data from one format used by the client device to another format used by the services platform and vice versa. Examples of data formats that the data format module may convert to or from include without limitation hypertext markup language HTML extensible markup language XML comma separated value CSV plaintext etc.

The extent module may for example determine to send certain content e.g. only audio and video content of a requested item and may determine to filter or omit other content available at the services module and associated with the requested item such as closed captioning information foreign language audio trailers additional scenes a written synopsis of the item cast and credits for the item commentary on the item previews of other items customer ratings of the item interactive menus or games or the like. The extent module may determine what information to send based on one or more extent criteria such as capabilities of the client device a price paid for the item a subscription level of a user of the client device permissions of a user of the client device user preference information user viewing history available transmission bandwidth or the like.

The UI module may determine to send or not send any of the information mentioned above for the extent module but the determination made by the UI module is based on the UI capabilities of the client device . For example if a UI of a particular client device lacks the ability to display closed captioning the UI module may determine not to send closed captioning information to the client device along with the requested content. In another example if a UI of a particular client lacks the ability to display an interactive menu the UI module may determine not to send an interactive menu to the client device along with the requested content.

Various techniques and environments for translation of communications from client devices to a form compatible with the online entity s service offerings and vice versa are described above. is a flowchart showing one illustrative client to service compatibility method that may but need not be implemented at servers of the online seller site shown in . The method will be described in the context of the architecture of for convenience and clarity. While the method is described in the context of communications between a client device and an online seller the method may be more broadly applied to transactions between client devices and other online entities or hosts.

At a server of the seller receives a request from a client device for a digital item available for purchase from the seller . Based on the received request at a server of the seller determines a protocol of the received request and hence a protocol to use in communicating with the client device . Additionally or alternatively the protocol of the client device may be determined by correlating a client device identifier in the communication with a protocol for the client device using a look up table for example. At the online seller selects a device specific adapter to use to convert incoming communications from the client device to a form readable by the services platform of the seller . The adapter may be chosen based on the communication protocol identified at .

At the request is translated using a device specific adapter such as those shown in and or into a request that is compatible with the services platform of the seller . Additional details of an illustrative translation process are described below with reference to . Once translated the request is processed at by one or more of the service modules of the services platform . Additional details of illustrative processing by the services platform are described below with reference to .

At the server of the online seller determines if the client device was properly authenticated during the processing and if so proceeds to generate a response to the request at . If as in the illustrated example the request was for a digital item to which the client device is entitled the response will typically include a payload comprising the requested digital item. If the client device was not properly authenticated either because the request lacked the necessary security mechanism or permissions the process terminates and no response is sent.

Before the response can be sent to the client device at the response is translated using the same device specific adapter to the format readable by the client device. Finally after translation at the response is sent to the client device.

The translation process includes at converting a communication protocol of the communication to a protocol readable by the recipient of the communication. The translation may be performed using a protocol module such as that shown in . As discussed above the protocol module may convert to or from any of IP TCP HTTP HTTPS SOAP SMTP FTP and AppleTalk protocol to name just a few.

At the actual data in the communication is converted by a data module if necessary to a format readable by the recipient. For example different devices may use different data to represent the same information. Additionally or alternatively some devices may include data that is not applicable or not supported by the recipient. In those cases the inapplicable or non supported data may be translated to other data or may be stripped from the communication.

At a format of the communication is translated by a data format module to a format usable by the recipient. As discussed above the data format module may convert to or from without limitation HTML XML CSV and plaintext to name just a few.

A security mechanism of the communication may also be converted by a security module of the adapter at to a security mechanism authenticatable by the recipient. As discussed above the security module may convert to or from without limitation PKI TLS third party certificate a so called web of trust PGP and password protection to name just a few.

In some implementations the adapter may also include an extent module a user interface UI module and or one or more other modules. In those implementations at the extent module may determine to send certain content e.g. audio and video content of a requested item while filtering out or omitting other content available at the services module and associated with the requested item. At the user interface module may determine to send or not send information associated with a requested item based on the UI capabilities of the client device . At one or more other modules may perform additional conversions to the communication so that the communication is usable by the recipient.

At the authentication module attempts to authenticate the client device based on the converted security mechanism of the communication e.g. PKI certificate password etc. . Specifically the authentication module may determine at if the communication has the appropriate security certificate. This determination may be made by comparison of a received security certificate with a security certificate on file in the security store for the client device. If the security certificate matches the authentication module may also determine at if the client device sending the communication has permission to receive the requested digital item. For example the authentication module may determine whether payment has been received for the requested digital item. If the appropriate security mechanism is missing and or the client device lacks the proper permissions a failure message may be sent at and the process may end. If however the appropriate security mechanism is present and the client device has the proper permissions the communication is routed to one or more other service modules of the services platform for further processing.

If the communication contains a new or modified order at the communication may be routed to the order module for processing. For example a record of the order may be generated or updated in the transaction store . The communication may then be routed to the fulfillment module at to fulfill the order and package the requested item s to send to the client device.

If the communication contains new or updated preference information at the communication is sent to the preference module create or update preference information in the preference store or otherwise manage the preference information.

At the communication may be forwarded to a monitoring module where a record of the communication may be logged.

If the communication includes a request to view an item detail page of the catalog at the communication is forwarded to the catalog module to have the requested page served to the browser of the requesting client device from the item catalog .

Certain acts in method need not be performed in the order described may be modified and or may be omitted entirely depending on the circumstances. For example in some implementations methods may not provide for converting or filtering an extent of information transmitted to a client device based on one or more extent criteria and or based on a user interface capability of the client device. Moreover in some implementations the additional conversions may be performed. Also as discussed above while the method is described in the context of an online seller the method may be implemented more generally for other types of online entities.

Any of the acts of any of the methods described herein may be implemented at least partially by a processor or other computing device based on instructions stored on one or more computer readable media. Computer readable media can be any available media that can be accessed by a system of the host. By way of example and not limitation computer readable media may comprise volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Computer readable media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can accessed by a system of the host. Combinations of the any of the above should also be included within the scope of computer readable media.

Although the subject matter has been described in language specific to structural features and or methodological acts it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described. Rather the specific features and acts are disclosed as illustrative forms of implementing the claims. For example the methodological acts need not be performed in the order or combinations described herein and may be performed in any combination of one or more acts.

