---

title: Controlling access to documents using file locks
abstract: Examples are related to systems and methods for controlling access to document files on a document server. One example system includes document files stored on a document server, at least one of the document files referencing a file lock, and a document access processing module. The example document access processing module includes a file sharing processing module that determines a coauthoring status of a software application of a client computer requesting access to the document file, and a file lock processing module that stores one or more file locks and that controls the setting and resetting of file locks. The example document access processing module uses the coauthoring status of the software application and the file lock status of a document file to determine whether a software application is permitted to have write access to the document file.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08429753&OS=08429753&RS=08429753
owner: Microsoft Corporation
number: 08429753
owner_city: Redmond
owner_country: US
publication_date: 20080508
---
It is often desirable to allow multiple users to coauthor a document file. However not all software applications support coauthoring. Often one version of a software application typically a newer one may permit coauthoring and a legacy version of the software application may not. It is desirable to provide a degree of backward compatibility in a coauthoring system to ensure that newer software applications can share access to a document file that legacy software applications can also access the document file and that legacy applications do not inadvertently disrupt coauthoring data or the coauthoring process.

The present disclosure relates to systems and methods for controlling access to document files stored on a server.

According to one aspect a system for controlling access to document files on a document server includes one or more document files stored on a document server at least one of the document files referencing a file lock stored on the document server and a document access processing module. The document access processing module includes a file sharing processing module that determines a coauthoring status of a software application of a client computer requesting access to the document file and a file lock processing module that stores one or more file locks and that controls the setting and resetting of file locks. The document access processing module uses the coauthoring status of the software application and the file lock status of a document file to determine whether a software application is permitted to have write access to the document file.

According to another aspect a method for controlling access to document files includes receiving a request from a software application to access a document file on a server determining a coauthoring status of the software application determining a file lock status of the document file permitting write access to the document file if the software application supports coauthoring and the file lock status permits coauthoring and denying write access to the document file if the file lock status permits coauthoring but the software application does not permit coauthoring.

According to yet another aspect a method for controlling access to document files stored on a document server includes receiving a request at a document server to set a lock that designates a document file for shared access the request being made when the document file is closed and the request being made independently of a request by a software application to access the document file setting a first lock for the document file the first lock preventing software applications that do not support coauthoring from writing to the document file receiving a request from a first software application to access the document file determining whether the first software application permits coauthoring permitting write access to the document file if the first software application permits coauthoring setting a second lock for the document file if the first software application permits coauthoring the second lock permitting additional software applications that support coauthoring to have write access to the document file and denying write access to the document file if the first software application does not permit coauthoring.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used to limit the scope of the claimed subject matter.

The present application is directed to systems and methods for controlling access to document files. In examples described herein the systems and methods use file locks referenced by the document file to determine if and when coauthoring permission should be granted. The system sets and resets the file locks as appropriate based on access requests for the document file by software applications that support coauthoring and by specific user actions that request a coauthoring file lock. In addition the systems and methods use the file locks to permit legacy applications that do not support coauthoring to access the document file.

As used herein the term coauthoring refers to the ability of multiple users to simultaneously edit a document file. As used herein the term document file refers to a self contained piece of work created with an application program.

A document file can be any file that can be accessed by a software application on a client. For example a document file can be a file created using a word processing application such as Microsoft Word a spreadsheet document created using a spreadsheet application such as the EXCEL spreadsheet software from Microsoft Corporation or a presentation document created using a presentation application such as the POWERPOINT presentation graphics program from Microsoft Corporation. As such a document file can include lists tables graphics objects etc. These are examples only and other types of document files can be used.

The clients include software applications for example word processing programs that are used to create and edit document files. In example embodiments the clients are a computing device such as a desktop computer laptop computer personal data assistant or cellular device. The client can include input output devices a central processing unit CPU a data storage device and a network device. Typical input output devices include keyboards mice displays microphones speakers disk drives CD ROM drives and flash drives. Computer readable media such as the data storage device provide for data retention. By way of example computer readable media can include computer storage media and communication media. Computer storage media includes volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Communication media typically embodies computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term modulated data signal means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. Among the plurality of information stored on the data storage device is a client operating system OS and client applications. The client OS is a program that manages the hardware and software resources of the client system. The client applications utilize the resources of the clients to directly perform tasks specified by the user. The network device enables the clients to send and receive data to from the server . Other configurations for the clients are possible.

The document server is a file server that is accessible in a network such as a LAN or the Internet. The document server stores a plurality of files. These files can include both software application files and document files as described further herein. The document server controls access to the document files it stores. In example embodiments the document server can be located within an organization or can be part of an Internet based shared document system. An example Internet based shared document system is a SHAREPOINT team services portal server services provided by Microsoft Corporation of Redmond Wash. An example shared document server is Microsoft Office SharePoint Server 2007 provided by Microsoft Corporation of Redmond Wash. Other configurations can be used.

The example document access processing module controls the access to the document files . For example the document access processing module can determine whether a software application can open and edit a file with full read write access can open a file with read only access or cannot have any access to the file. The example document access processing module also determines whether a software application may share a document file with other software applications that have permission to coauthor the document file.

Referring now to the example document access processing module includes a file sharing processing module and a file lock processing module .

The example file sharing processing module determines if a software application supports coauthoring. The example file sharing processing module also determines whether a document file being accessed by a software application supports coauthoring. The determination of whether a document file supports coauthoring is typically made by evaluating the meta data associated with the document file. For example in one embodiment the meta data associated with each document file includes a field that indicates whether or not the particular file supports coauthoring.

The example file lock processing module controls the setting resetting and processing of file locks stored on the document server. A file lock is used to control write access to the document file. The file lock is typically stored in meta data and referenced by the document file. In some embodiments file lock meta data may be stored in a database on the document server. In other embodiments file lock meta data may be stored in the document file. A document file may reference one or more file locks. The document access processing module uses the coauthoring status of the software application and the file lock status of a document file to determine whether a software application is permitted have write access to the document file.

In examples described herein the document access processing module is programmed to process one or more different types of file locks. For example in one embodiment three example types of file locks are a short term shared lock a short term exclusive lock and a long term shared lock.

An example short term shared lock is set on the document server when a software application that supports coauthoring requests access to a document file. With a short term shared lock the software application has full read write permissions to the file. If a second software application that also supports coauthoring requests access to the same document file the second software application will also be granted full read write permissions to the file and will be permitted to edit the file simultaneously with the first software application. Additional software applications that support coauthoring are also granted full read write permissions to the file in the same manner. However if a software application that does not support coauthoring requests access to a document file that has a short term shared lock the request for full read write access is denied by the document access processing module and the software application is only permitted read access to the document file.

An example short term exclusive lock is set on the document server when a software application desires exclusive write access to a document file. A short term exclusive lock can be granted for both software applications that support coauthoring and legacy applications that do not support coauthoring. The file lock processing module sets a short term exclusive lock when requested by a user and no other users have a short term shared lock or a short term exclusive lock for the document file. If a user requests a short term exclusive lock and a short term lock either short term shared or short term exclusive already exists for the document file the request is denied. If the request is denied the software application can view the document file on a read only basis but cannot edit it. Once a short term exclusive lock is set if another user requests a short term shared lock for coauthoring that request is denied.

A short term shared lock can also be transitioned into a short term exclusive lock when a coauthoring client encounters a non coauthorable feature in a document file or when a user creates a non coauthorable feature in an otherwise coauthorable document file. The determination of whether a feature is non coauthorable is made by the software application. Typically if a feature is not mergeable i.e. the feature is not supported by the software application s merge engine the feature is non coauthorable. An example of a non coauthorable feature is encrypted text.

A short term shared lock and a short term exclusive lock each have a timeout value associated with them. When the document file is accessed either by reading or writing the timeout value is refreshed. The example file lock mode processing module resets the short term shared lock when either the timeout value for the short term shared lock is reached due to inactivity on the document file or when the document file is closed. Similarly the example file lock processing module resets the short term exclusive lock when the timeout value for the short term exclusive lock is reached when the software application that requested the short term exclusive lock closes or when the document file is closed. Other conditions for closing the short term shared lock and the short term exclusive lock are possible.

An example long term shared lock is set for a document file when explicitly requested by a coauthoring user typically via a user interface. There is no timeout value associated with a long term shared lock but the long term shared lock can be removed by an administrator of the document server or can be removed by an explicit action of the user that requested the long term shared lock.

When a long term shared lock is set for a document file the example file lock processing module still sets a short term shared lock on the document server when shared access to the file is requested by a coauthoring client. However a legacy application that does not support coauthoring is denied full access to the document file and can only view the file in a read only mode. The legacy application is denied full access to the document file even if the document file is not being edited and does not have a short term shared lock. In addition any request for exclusive rights to the file such as by requesting a short term exclusive lock is denied whether the request is made by a software application that supports coauthoring or by a legacy application that does not support coauthoring.

In alternative embodiments other types of locks can also be used. For example an embodiment may include a long term exclusive lock. With a long term exclusive lock only one user can edit the file and there is no timeout value associated with the long term exclusive lock.

The file lock status of the document file is determined at operation . The file lock is stored on the document server typically via meta data and represents the coauthoring status of the document file. A plurality of file locks can be stored. Example file locks include 1 a short term shared lock representing that a software application that supports coauthoring has accessed the document file with the intent to write to it typically by opening the document file in read write mode 2 a short term exclusive lock representing that a software application has exclusive access to the document file and 3 a long term shared lock representing that a user has made a specific request typically via a user interface to designate the document file as one available for file sharing. The request for the example long term shared lock is an explicit request made independently from opening a document file. Other file locks are possible.

At operation the software application is evaluated to determine if the software application is capable of coauthoring. If the software application permits coauthoring control is passed to operation . At operation if the file lock status indicates short term exclusive access meaning that the document file has been assigned exclusive access to another user write access to the document file is denied at operation . In this case the software application is permitted to view the document file on a read only basis but is not permitted to edit the document file. If the file lock status does not indicate short term exclusive access at operation the software application is permitted write access to the document file. In addition if the file lock has not been set for shared status already at operation the file lock is set to short term shared status.

Referring back to operation if the software application does not support coauthoring control is passed to operation where the file lock status is evaluated to determine if there is a shared file lock. If there is a short term shared lock a short term exclusive lock or a long term shared lock already set on the document file the software application is denied write access to the document file at operation . If however there is no short term shared lock short term exclusive lock or long term shared lock set on the document file the software application is permitted write access to the document file at operation .

At operation a request is received from a software application to access the document file. At operation the software application is checked to determine if the software application supports coauthoring. If coauthoring is supported at operation write access is granted to the software application at operation . However if coauthoring is not supported because the document file has a long term shared lock the software application is denied write access to the document file and is only permitted to view the document file under read only status. The long term shared lock stays in effect until an explicit request is received at the server to reset the lock.

Although the subject matter has been described in language specific to structural features and or methodological acts it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather the specific features and acts described above are disclosed as example forms of implementing the claims.

