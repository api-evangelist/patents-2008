---

title: Virtual robot integration with search
abstract: An arrangement for virtually integrating a bot with a search functionality provided by an online search engine enables users of personal computers (“PCs”), mobile phones, and other devices to locate bot content in response to their search queries. The virtual integration enables bot content to be surfaced via the search engine. In response to a query, the search engine may return search results including links to one or more bots that are located on a presence-based network. When the user clicks on a link, a client application is launched on the PC or device that enables the user to converse with the bot using a natural language interface. The virtual integration also provides the bot with context of the user's last known query, or the query history. The bot can then start the conversation at a specific point within the bot's content hierarchy to respond to and answer the user's query.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08285652&OS=08285652&RS=08285652
owner: Microsoft Corporation
number: 08285652
owner_city: Redmond
owner_country: US
publication_date: 20080508
---
Robot applications sometimes called bots for short are applications which may appear as a contact on one or more presence based networks have an ID identification presence can be added to a contact list and with which users can interact just as they would with other human users on the networks. Presence based networks are those which define the availability and receptivity of contacts to engage in real time communications. Today these robot applications are primarily found on instant messaging IM networks but can be found on Voice over Internet Protocol VoIP and other presence based networks.

Robot applications may contain detailed information i.e. content to answer users questions for example about products services history geography or any other topic for which one of the robot applications has been programmed to discuss. Robot applications typically support the interactions with users by using locally available resources or by accessing remote resources with which they may interact through application programming interfaces APIs .

While robot applications are proving to be valuable sources of information for many users finding them can often be difficult. For example users today typically utilize one of the popular online search engines when looking to find information and answers about a particular topic of interest. But when users search for information and answers using search engines the search results do not presently enable users to find find and link to or start an interaction with the content that is available from the robot applications.

This Background is provided to introduce a brief context for the Summary and Detailed Description that follow. This Background is not intended to be an aid in determining the scope of the claimed subject matter nor be viewed as limiting the claimed subject matter to implementations that solve any or all of the disadvantages or problems presented above.

An arrangement for virtually integrating a bot with a search functionality provided by an online search engine enables users of personal computers PCs mobile phones and other devices to locate bot content in response to their search queries. The virtual integration enables knowledge content or interactive capabilities of the bot referred to here as bot content to be surfaced via the search engine. In response to a query the search engine may return search results including links to one or more bots that are located on a presence based network. When the user clicks on a link a client application is launched on the PC or device that enables the user to converse with the bot using a natural language interface. The virtual integration of the bot with the search engine also provides the bot with context of the user s last known query or the query history. The bot can then start the conversation at a specific point within the bot s content hierarchy to respond to and answer the user s query.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used as an aid in determining the scope of the claimed subject matter.

The online search service includes a search engine number with which the users will typically interact using a browser functionality for example a mobile browser running on the mobile device or a web browser running on the PC . In alternative implementations a user may interface with the search engine through for example a desktop search application or another application that is configured to interface with a search engine API application programming interface .

The search engine is typically configured to crawl resources located on the Web such as Web servers in order to compile an ongoing index of Web addresses i.e. URLs Uniform Resource Locators and analyze content contained in the pages at those addresses which it can index and store in a database. When a user submits a query through a browser to the search engine in the form of one or more keywords the search engine will typically compare it with the information in its index and report back any matches.

In this example the presence based network is arranged as an IM network that supports multiple contacts that typically represent other people with whom the users may interact in real time conversations over the Internet . Presence based networks are arranged to communicate the availability of contacts i.e. their status as being online or off line to users. Here contacts and are currently online while contacts and are off line as indicated by the dashed lines which the presence based network communicates to the users .

The presence based network is also configured to support robot applications referred to here as bots as indicated by reference numerals . As shown in one or more of the bots in the presence based network may be configured for virtual integration with a search functionality provided by the search engine to thus be able to surface bot content to the users as indicated by reference numeral . The users may then search and find the bot content through the search engine as indicated by reference numeral . As noted above bot content may generally include knowledge content or interactive capabilities that the bot may expose through a conversational interface to the users .

In this example the bot content more specifically includes static content dynamic content and external content . Static content is content that has been specifically programmed into the bot . This may include for example content that is programmed into the bot application itself programmed content from configuration files programmed content from standards based files such as AIML Artificial Intelligence Markup Language or XML eXtensible Markup Language or other types of programmed content .

The dynamic content is generally not specifically programmed into the bot . Instead dynamic content is typically gathered and integrated over time using a variety of means. The dynamic content may be collected for example from RSS Really Simple Syndication feeds from interactions with users from interactions with an application administrator or from other non programmed content sources .

The external content may include for example content received through interactions with other bots content received through interactions with a broad range of online services which make APIs available through which information and service may be accessed content pulled from any of a variety of database systems and content from other external sources . Referring back to the external content is accessed in this example using an online resource API which exposes resources contained on the Web servers .

As shown in the bot content may be subject to a tagging process which may assist the search engine to index specific pieces of content. Tags may be implemented as metadata that is normally not seen by a user for example to communicate information such as self describing data that the search engine may use to help optimize the indexing of the bot content and or determine where to rank the content in the results it returns to the user in response to a query. As not all search engines support tagging the tagging process may generally be viewed as an optionally utilized process.

The bot content will typically be organized in a hierarchy that is traversed according to the bot programming the user s query and the interaction with the user during a conversation. That is the specific pieces of content e.g. static dynamic and external content will be placed in nodes of the hierarchy. An illustrative bot content hierarchy is shown in . It is emphasized that the bot content hierarchy shown is arbitrary and is provided for illustrative purposes only. A particular content hierarchy used in any given implementation of the present arrangement may be expected to vary from that shown.

The bot will walk various nodes as representatively indicated by reference numeral as may be necessary to locate pieces of content that are responsive to the query and user inputs according to the bot s programming in order to provide the desired interactive and dynamic user experience. As described below in more detail in the text accompanying the content hierarchy will normally be entered at a specific entry point so that the bot can respond to and answer a recently entered query by the user with the appropriate context.

The published content may include as shown in question and answer pairs pre selected conversations between the bot and a user conversations pertaining to a particular topic or historical logs of all conversations for example. The published content may be subject to a filtering process that may apply a flag which may be implemented as a metadata tag for example to highlight and or selectively publish certain content such as frequently or commonly used question and answer pairs.

The conversations and may be published in whole or in part to the search engine . As it is possible for a given bot to have many conversations e.g. numbering in the thousands or millions over time publishing the conversations can often be expected to be an effective way to surface the depth and breadth of the available bot content to the users . In many applications it may also be desirable to apply an anonymization process to remove personal information from the conversations prior to them being published to the search engine .

While a subset of the bot content is published in this example in alternative implementations it may be desirable for the bot to publish its entire content database to the search engine .

Referring again to in addition to the publication the hosted platform on which the bot runs in the presence based network may be used to expose data through a bot API to a crawler or similar functionality associated with the search engine . Such exposed data may include for example source pages or other source data for the bot content such as AIML or XML markup which the search engine may index. Anonymized bot conversations which may be similarly arranged as those that are published as described above can also be exposed to the crawler through the bot API for indexing as can other data . The hosted platform will typically store the data exposed through the bot API in a persistent store or other database.

A hosted platform that is integrated with a backend of the search engine may also be used to surface indexed bot content . In this case the search engine may access indexed bot content directly. Accordingly bot content may be surfaced by the search engine and presented to the user through a variety of techniques including publication to the search API crawling the bot content sources on the hosted platform or direct access through the hosted platform on the backend of the search engine. In some implementations a combination of the techniques may be utilized.

Turning now to the user experience supported by the present virtual integration of the bot and search shows an illustrative screen shot of a user interface that is associated with the search engine and supported on the web browser . A user interface that is adapted to the capabilities of the mobile browser would have similar features and functionalities as those shown in . In this example the search engine supports an online search service that is part of the Microsoft Windows Live brand of online services which includes Live Search.

In this particular example an illustrative scenario is shown and described where the user has an interest in sparkling wines that are made in Sonoma County Calif. in the United States. The user interface includes a search entry box where the user has entered the text string Sonoma sparkling wine as shown. The user is provided with tabs collectively identified by reference numeral in the user interface from which categories of search results may be selected e.g. web images video news maps and more . When the user clicks on the Search button the search engine will return search results according to the selected category.

The user interface is arranged to appear in a standard or typical fashion in . That is the user interface is arranged primarily to accommodate existing searches that do not typically include content from bots. By comparison the user interface shown in the screen shot of includes a specific tab for bots among the tabs . Such a specific bot search category may be utilized in some scenarios and could be implemented for example in a browser using a browser plug in that the user could download and install from the online search service or other web service. In scenarios where a specific bot search category is not utilized the bot search results would typically be included among results for regular web pages. This latter approach may be desired in some cases particularly when bots are relatively unfamiliar to the users . As users become more familiar with capabilities and features provided by bots and become comfortable in using and searching for bots the separate search category for bot content may be more appropriately used. However it is emphasized that the particular choice of standard or the currently non standardized user interfaces will typically be dependent of the requirements of a given implementation.

The results page here is arranged to list the results by rank order in decreasing order of relevance as determined by the search engine . Typically the search engine will use the frequency of occurrence of the terms in the search string among other factors when determining the rank order. In this example the bot is configured to engage in interactive conversations with the user about wine and is accordingly named the Wine Bot. The bot is programmed in particular relying on a combination of content categories and subcategories as shown in and described in the accompanying text to be able to provide information to the user about sparkling wines produced in Sonoma County Calif. in response to the query. A brief synopsis of the bot s expertise is provided in descriptive text accompanying the link . The text is typically generated by search engine as it indexes the bot content .

The present arrangement for virtual bot integration with a search functionality provided by a search engine is further adapted to enable the bot to have awareness of the context of the user s search so that the interactive conversation with the bot may be started at an appropriate point in the bot content hierarchy . An overview of the process by which this occurs is shown in .

The user begins by sending a query e.g. Sonoma sparkling wines to the search engine as indicated by reference numeral . While the user is shown using the PC the process is similar for the mobile device . The search engine responds by serving the results page which includes the link to the Wine Bot . When the user clicks on the wine bot link a local bot client is launched on the PC and interaction with the bot is triggered . The bot client facilitates real time communication capability with the bot similar to that provided by an IM client that may be implemented for example as a plug in or add on to the web browser or be configured as a standalone application or agent. Typically the bot client will provide a user interface by which the user may see dialogue from the bot and enter text to be sent to the bot to thereby engage in conversation.

When the bot is triggered through activation of the link it begins an interaction with the search engine to become aware of the context of the user s search to thus enable a natural language interaction between the user and the bot which occurs at a specific and appropriate point in the bot content hierarchy that is responsive to the user s query. Thus in this example the bot can begin a conversation with the user that deals specifically with sparkling wines produced in Sonoma County Calif.

As shown in the interaction between the bot and the search engine to gain an awareness of the context of the user s search may involve three alternative techniques A B and C in the drawing . In technique A the search query is passed from the search engine to the bot . This may be accomplished for example by using a set of parameters that are passed to the bot when it is launched out of the search engine through activation of the link as indicated by reference numeral 

In technique B the bot calls the search engine using a unique identifier for the user which is common to both the search engine and the bot client on the PC . The unique identifier enables the last known query from the user to be pulled down by the bot and be used to locate the appropriate starting point for the conversation in the content hierarchy .

In technique C a public or limited access data feed is utilized which the search engine and or online search service makes available for or on behalf of each user . The bot may access the data feed to pull the last known query or a collection of previous queries from which the bot may determine the search context used to set the starting point in the content hierarchy for its conversation with the user .

Although the subject matter has been described in language specific to structural features and or methodological acts it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather the specific features and acts described above are disclosed as example forms of implementing the claims.

