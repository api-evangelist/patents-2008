---

title: Method and system for identifying network paths
abstract: A method and system of an embodiment may include receiving network information associated with one or more network links, one or more network nodes, and a network hub, identifying at least two network paths from at least one of the one or more network nodes to the network hub based on the network information. Identifying at least two network paths from at least one of the one or more network nodes to the network hub based on the network information may include determining a number of hops for each identified network path, determining a latency of each link for each identified network path, summing the latencies of each link for each identified network path to calculate a total network path latency, and determining a ranking of the network paths based at least in part on the number of hops and the total network path latency.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08155026&OS=08155026&RS=08155026
owner: Verizon Patent And Licensing Inc.
number: 08155026
owner_city: Basking Ridge
owner_country: US
publication_date: 20080911
---
Network users may use private networks to connect multiple locations of an organization a corporation or other entity. Planning provisioning and building private networks may require the design and analysis of the private network backbone. In order to enable network traffic routing and network provisioning routing tables and other network path information may be created by network planners. Generating routing tables and other network path information may be a manual time consuming and error prone process.

An exemplary embodiment provides a network analysis system. The network analysis system may identify one or more network paths between two or more network nodes of a network.

The description below identifies servers mobile devices and network elements that may include one or more modules some of which are explicitly shown in the figures others that are not. As used herein the term module may be understood to refer to computing software firmware hardware and or various combinations thereof. It is noted that the modules are exemplary. The modules may be combined integrated separated and or duplicated to support various applications. Also a function described herein as being performed at a particular module may be performed at one or more other modules and or by one or more other devices instead of or in addition to the function performed at the particular module. Further the modules may be implemented across multiple devices and or other components local or remote to one another. Additionally the modules may be moved from one device and added to another device and or may be included in both devices.

It is further noted that the software described herein may be tangibly embodied in one or more physical media such as but not limited to a compact disc CD a digital versatile disc DVD a floppy disk a hard drive read only memory ROM random access memory RAM as well as other physical media capable of storing software and or combinations thereof. Moreover the figures illustrate various components e.g. servers mobile devices and network elements etc. separately. The functions described as being performed at various components may be performed at other components and the various components may be combined and or separated. Other modifications also may be made.

Referring to a block diagram of a network analysis system in accordance with an exemplary embodiment is illustrated. System illustrates an exemplary system for analysis of a network such as a private network. It is noted that System is a simplified view of a network and may include additional elements that are not depicted. As illustrated network elements and may be communicatively coupled by network paths and . Network elements and may be communicatively coupled to other devices such as data storage and the computer .

Network elements and may transmit and or receive data via network paths and . The data may be transmitted and or received utilizing a standard telecommunications protocol or a standard networking protocol. For example data may be transmitted and or received using Wireless Application Protocol WAP Multimedia Messaging Service MMS Enhanced Messaging Service EMS Short Message Service SMS Global System for Mobile Communications GSM based systems Code Division Multiple Access CDMA based systems Transmission Control Protocol Internet TCP IP Protocols or other protocols and or systems suitable for transmitting and receiving data. Data may be transmitted and or received wirelessly or may utilize cabled network connections or telecom connections such as an Ethernet RJ45 Category 5 Ethernet connection a fiber connection a traditional phone wireline connection a cable connection or other wired network connection. Network elements and may use standard wireless protocols including IEEE 802.11a 802.11b and 802.11g. Network elements and may also be communicatively coupled via protocols for a wired connection such as an IEEE Ethernet 802.3.

Network elements and may be one or more routers switches hubs and or other network connectivity devices. Network elements and may include one or more processors not shown for recording transmitting receiving and or storing data. Although network elements and are each depicted as single network connectivity devices it should be appreciated that the contents of network elements and may be combined into fewer or greater numbers of network connectivity devices and may be connected to one or more data storage systems such as data storage . Furthermore network elements and may be local remote or a combination thereof to each other. Network elements and may be different portions of a network such as edge nodes core nodes customer premise equipment a hubbing node edge devices and integrated access devices or other network connectivity devices.

Network elements and may provide application programming interfaces APIs interface tables remote procedure calls rpcs web services Extensible Markup Language XML based interfaces Simple Object Access Protocol SOAP based interfaces common request broker architecture CORBA based interfaces and other interfaces for sending or receiving network information.

Network paths and may be one or more network connections utilized to provide private network connectivity to one or more users. For example network paths and may be network connections utilizing Ethernet Multi Protocol Label Switching MPLS based Ethernet Asynchronous Transfer Mode ATM Synchronous Optical Networking SONET digital subscriber line DSL asymmetric digital subscriber line ADSL symmetric digital subscriber line SDSL fiber to the premises FTTP cable modem broadband leased line integrated services digital network ISDN dial up satellite wireless networking broadband over power lines and or other network technologies. In some embodiments network paths and may be logically combined using link aggregation such as Ethernet bonding channel bonding trunking port trunking and or an IEEE 802.3ad compliant technique.

Data storage may be network accessible storage and may be local remote or a combination thereof to network elements and . Data storage may utilize a redundant array of inexpensive disks RAID a redundant array of inexpensive nodes RAIN tape disk a storage area network SAN and or other computer accessible storage. In one or more embodiments Data storage may be a database such as an Oracle database a Microsoft SQL Server database a DB2 database a MySQL database a Sybase database an object oriented database a hierarchical database and or another database. Data storage may store network path information identifying one or more network paths between one or more network elements. Network path information may include edge network equipment information core network equipment information customer premise equipment information network routing information a hop count for a network path bandwidth information associated with a network path congestion information associated with a network path latency information associated with a network path and or quality of service information associated with a network path. Data storage may store user specified parameters such as a hub node id a maximum number of paths or routes to be identified a maximum number of hops allowable or desired on identified routes a conversion factor to convert distance calculated from a grid system to mileage on a network path a number to utilize when calculating link latency for route miles and or a floor or minimum amount of link latency to be assumed when estimating a maximum permissible or desirable link latency.

Data storage may store files which may contain network information utilized to model a network and identify network paths such as a file of locations utilizing grid based data. The locations may provide vertical and horizontal coordinates on a standardized grid such as the V H coordinate system developed by AT T which contains vertical and horizontal coordinates of one or more locations. Another file stored by data storage may include a file identifying traffic producing remote nodes. Data storage may additionally store a file identifying network links and may optionally identify route miles for one or more of the network links.

Data storage may store network traffic information specifying a network ingress and a network egress for network traffic on a private network backbone on a network path. Network traffic information may also specify one or more attributes of the network traffic. Network traffic information may include minimum required bandwidth required for the network traffic quality of service metrics for the traffic an ingress point of network traffic an egress point of network traffic customer information associated with network traffic and other data.

Data storage may store data received from user input a network management system a network provisioning system a management information base a network services ordering system a database a file a web service and or an application programming interface. In one or more embodiments data storage may be a management information base.

The computer may be a desktop computer a laptop computer a server or other computer capable of performing private network backbone analysis. The computer may receive data from user input a network management system a network provisioning system a management information base a network services ordering system a database a file a web service and or an application programming interface. The computer may query other systems and or local or remote storage such as data storage to obtain network information.

The computer may model a network which may provide one or more private network backbones to one or more users. The computer may utilize network path information to create one or more models of network topology including nodes links resources and or other network infrastructure. The computer may model network topology attributes such as the bandwidth of a link the bandwidth of a node the bandwidth information associated with a network path congestion information associated with a network path latency information associated with a network path and or quality of service information associated with a network path. A model may be stored in a memory or in other storage such as data storage .

The computer may utilize data associated with network links to determine classes of links. For example a first class of links may contain links between two provider edge nodes. A second class of links may contain links between a provider edge node and a provider backbone node. A third class of links may contain links between two provider backbone nodes. For example a link class 0 may be defined which may contain one or more links between provider edge PE nodes. A second link class a link class 1 may be defined which may contain one or more provider edge PE node to provider backbone P node links. A third link class a link class 2 may be defined which may contain one or more provider backbone P node to provider backbone P node links. In one or more embodiments the classification of links may enable the identification of one or more network paths which utilize a particular type of link. The classification of links may also enable the identification of one or more network paths which avoid a particular type of link. For example in a system identifying one or more network paths to provision a private network backbone on a provider network computer may avoid the use of provider edge to provider edge links class 0 links . In this example computer may prefer utilization of provider edge to provider backbone links and provider backbone to provider backbone links classes 1 and 2 respectively . In some embodiments a provider edge to provider edge node link may be utilized only if it represents a single hop link from a first node to the hub. In other embodiments computer may not classify links or may ignore classification of links when identifying network paths. Links may also be classified using other characteristics such as bandwidth network traffic length or other link attributes.

The computer may utilize the model or other data to identify optimal network paths from one or more user traffic origination point or network ingress to a user traffic destination point or network egress. The computer may utilize a listing of network infrastructure such as data providing information about traffic producing nodes and data providing information about network links in order to determine one or more network paths. For example the computer may receive network information associated with one or more network links one or more network nodes and a network hub which may identify a network path from at least one of the one or more network nodes to the network hub may determine a number of hops on the network path may determine a latency of one or more links of the network path and may determine a ranking of the network path based at least in part on the number of hops and the latency of the network path. The computer may compare the number of hops on the network path with a specified number of hops desired or allowed per network path. The specified number of hops desired and or allowed may be a user parameter which may be provided via a file an interface or input by a user. If the number of hops exceeds the specified number of hops the computer may discard the path may mark the path as ineligible or may otherwise handle the path. The computer may compare the network path latency with a specified maximum network path latency. The specified maximum network path latency may be a user parameter which may be provided via a file an interface or input by a user. If the network path latency exceeds the specified maximum path latency the computer may discard the path mark the path as ineligible or otherwise handle the path.

The computer may calculate the hops of a network path by identifying a network path utilizing data such as data on data storage containing information about traffic producing remote nodes network links network path or route miles grid data e.g. data containing vertical and horizontal coordinates of locations such as network node locations and other network data. For example the computer may iteratively examine nodes in a data file and corresponding link information to identify one or more network paths. The computer may utilize a specified hub id to identify a node that is a hubbing node. This hub or hubbing node may be one end of a network path. Starting with a first node the computer may examine one or more links looking for a link which is connected on one end to the first node and on the other end to the hubbing node. A direct link from the first node to the hub may be a single hop network path. In one or more embodiments the computer may iterate through data representing one or more links and may skip links which do not connect directly from a first node to the specified hub. Thus in one or more embodiments the computer may identify all network paths which are single hop paths first and may ignore or skip links which do not connect directly from a first node to the hub. For example if network element is a first node and network element is the identified hub the computer may identify network paths and as single hop network paths. If network paths and or are determined to have a latency greater than a specified amount the network path may be ignored. For example if the specified maximum latency is 50 milliseconds and network path is determined to have a latency of 52 milliseconds network path may be ignored. Similarly if network path is determined to have a latency of 50 milliseconds or less network path may be stored or marked as an identified network path. In this example the computer may ignore network paths and as paths containing more than one hop. The computer may continue identifying network pats until all network paths are identified or until a specified maximum number of network paths are identified. A maximum number of network paths specified may be a user or system parameter and may be inputted specified in a file provided by a user interface or provided by another interface.

The computer may calculate the latency of a network link by using data providing network route miles. For example the computer may divide the total number of route miles for a link by 100 and multiply it by a specified link latency factor e.g. 1.0 to obtain the latency for that link. The computer may repeat this for each link of a network path. In some embodiments the computer may utilize miles calculated from a grid instead of actual network route miles. For example a standardized grid may provide coordinates such as vertical and horizontal coordinates for the locations of two or more nodes on a network path. The location of two nodes on the network path may be utilized to determine the length of a network link between the two nodes. The computer may utilize a formula to calculate the distance between two network nodes on a grid such as V1 V2 H1 H2 10 . In this example V1 may be a vertical coordinate of a first node one endpoint of a link V2 may be a vertical coordinate of a second node of a link H1 may be a horizontal coordinate of a node and H2 may be the horizontal coordinate of the second node. This length may be converted from a distance on the grid to a distance of network route miles using a conversion factor. The conversion factor may be a user specified parameter which may be input provided via a file via a user interface or by other interfaces. The conversion factor may be a specified multiplier e.g. 1.5 which may be multiplied against the link miles calculated from the grid to determine calculated network route miles for the link. This calculated network route miles number may then be utilized to determine the latency for the link by dividing the calculated network route miles number by 100 and multiplying it by a specified link latency factor. When calculating latency the computer may utilize a specified minimum amount of latency. If a calculated latency is less than a specified minimum amount of latency the computer may utilize the number for the specified minimum amount of latency instead. The specified minimum amount of latency may compensate for delays other than link length such as network node processing time to relay a signal. The computer may repeat latency calculations for each link of a network path. In one or more embodiments the computer may sum the latencies of a network path by adding the latencies of each network link in the network path. Latency may be measured in milliseconds or in other appropriate measuring units.

In some embodiments after the computer has identified one or more single hop network paths for a first node the computer may repeat the process for a second node. After the computer has identified the single hop network paths for one or more nodes the computer may begin identifying two hop network paths for one or more nodes. In some embodiments the computer may identify one or more single hop network paths for all traffic producing edge nodes prior to identifying network paths with more than one hop. In one or more embodiments after identifying one or more single hop network paths the computer may begin identifying two hop network paths for a first node. In some embodiments no suitable single hop network paths may exist for one or more of the nodes.

After identifying one or more single hop network paths for one or more network nodes the computer may identify two hop network paths. The computer may identify a provider edge node which may be a network traffic origination point and may be considered a first node on a network path. The computer may then identify a second node which is not the hubbing node and is not the first node. The computer may then iterate through data associated with one or more links to identify a link between the first node and the second node. If a link is not found between the first and second network nodes the computer may identify another network node to use as a second node and may repeat the process. If a link is found between the first and second nodes the computer may then iterate through data associated with one or more links to identify a link between the second node and the hub or hubbing node. If a link is not found between the second network node and the nub the computer may identify another node to utilize as a second network node and may repeat the process. If a link is found between the second network node and the hub then the computer may determine the latency for the network path. The computer may calculate the latency for each identified link for each hop in the network path and may sum the latencies to determine a total latency for the network path. If the total latency is less than a specified maximum path latency the network path may be marked stored or otherwise identified as a network path choice for the first node. In some embodiments a network path may be stored regardless of the latency and the latency may be utilized only to rank the network path. In some embodiments the computer may repeat the path identification process for the first node until a specified maximum number of paths is identified or until all network data has been evaluated. After identifying one or more two hop network paths for the first network node the computer may identify another network node to utilize as a first network node and may repeat the network path identification process.

After identifying one or more network paths with two hops the computer may repeat the path identification process to identify three hop network paths for one or more network nodes. This may involve the computer identifying a first node identifying a second node connected to the first node and identifying a third node connected to the second node wherein the third node is also connected to the hub. The computer may sum the latencies to determine if the sum of the latencies is less than or equal to a specified maximum network path latency. In one or more embodiments the computer may repeat the path identification process incrementally until one or more paths with N hops have been identified for one or more nodes where N is a specified maximum number of hops. In other embodiments the number of hops may not be limited and network path identification may continue until a maximum number of network paths is identified for each node or until it is determined that paths beyond a certain number of hops exceed a specified maximum network path latency.

In one or more embodiments the computer may apply a ranking formula to one or more identified network paths. For example in one or more embodiments a network path s rank may be determined by the sum of the latencies of its links plus the number of hops in the path multiplied by 100. This formula may give lower scores to more preferable paths. In this embodiment the ranking formula may ensure that network paths with fewer hops are given better rankings than network paths with greater numbers of hops. The rankings of network paths may be used to determine which network paths are utilized for routing tables which network paths are preferred and or which network paths are listed in one or more reports. The computer may utilize a number or a percentage of the top ranked paths to generate one or more routing tables for a network node.

The computer may provide a user interface to a model. A user interface to a model may enable a user to input data edit data or view data related to network traffic and or one or more network paths. A network model may display a map of available network paths for one or more nodes. In one or more embodiments network paths may display rankings link latencies or other network information.

The computer may produce a report a listing a display a text message an email or otherwise provide a listing of available network paths. Available paths may be listed in order of ranking by available bandwidth latency or other network metrics. Available paths may also be listed in other orders such as alphabetically by node name link name or in other orders. In some embodiments only network paths with latencies less than a specified maximum path latency will be listed. Additionally network paths with a number of hops greater than a specified maximum number of hops may not be listed.

The various components of system as shown in may be further duplicated combined and or integrated to support various applications and platforms. Additional elements may also be implemented in the systems described above to support various applications.

Referring to a block diagram of module for analyzing a network is depicted in accordance with an exemplary embodiment. As illustrated may contain network analysis module network infrastructure input module user parameters input module network path identification module error handling module and reporting module .

Network analysis module may utilize one or more components to analyze network data and identify network paths.

Network infrastructure input module may accept user inputs via a user interface read data files and accept network data via other interfaces. Network infrastructure data may include data associated with network nodes network links and or other network elements. Data may identify edge network nodes backbone nodes and links associated with such nodes.

User parameters input module may accept user specified parameters. User specified parameters may determine one or more factors utilized in identifying network paths ranking network paths generating routing tables reporting or other network analysis activities. For example user specified parameters may include a maximum number of paths to identify for each node a maximum number of hops permitted per network path a maximum amount of latency to permit per path a minimum amount of latency to permit when calculating a link latency a conversion factor to utilize when converting from grid miles to network route miles a conversion factor to utilize when determining the link latency for a calculated network path length and or a hub node identifier to identify which of the nodes to utilize as a hub when identifying network paths.

Network path identification module may analyze data received by network infrastructure input module and may identify one or more network paths for one or more network nodes. Network paths may be optimal network paths based on the data and based on one or more user parameters received by user parameter input module . Network paths may be paths utilized by a traffic producing edge network node on a private backbone to a hub node. In one or more embodiments network paths of a modeled network may be identified. In some embodiments network paths of an existing network may be identified.

Error handling module may handle one or more errors encountered when analyzing network data. For example error handling module may handle errors related to data input format no available network paths reporting errors or other errors.

Reporting module may produce one or more reports containing network path information. Reports may be printed web based sent in a text message or email or stored as a file. Formatting options may enable the generation of one or more routing tables.

At block analysis of a first remote node may occur. A remote node may be an edge node which may be a traffic producing node. The first remote node may be chosen at random from data containing one or more remote nodes. In some embodiments a first node may be specified nodes may be iterated through alphabetically numerically by node identifier or in another order.

At block a link associated with the first remote node may be analyzed. This may involve determining whether the link is classified as a link between two edge nodes between two core nodes e.g. provider backbone nodes or between an edge node and a core node.

At block the method may determine whether a first identified link is connected to the first remote node. If the link is connected to the first node the method may continue at block . If the link is not connected to the first node the method may continue at block .

At block the method may determine whether the first identified link is coupled to the hub. The hub or hubbing node may be identified by a specified node identifier. If the link is connected to the hub the method may continue at block . If the link is not connected to the hub the method may continue at block .

At block the method may determine if the latency of the link is less than a specified maximum permissible link latency. In some embodiments the method may utilize network data providing a link length to calculate the latency. The method may multiply the link length by a specified multiplier to determine the latency. The link length may be calculated by using grid data contain coordinates of one or more node locations. If a link latency is less than or equal to a specified maximum permissible latency the method may continue at block . If the link latency is greater than the specified maximum permissible link latency the method may continue at block .

At block the method may determine whether a specified maximum number of network paths or routes have been identified. If the specified maximum number of network paths have not been identified the method may continue at block . If the specified maximum number of paths have been identified the method may continue at block .

At block the method may create a route choice identifying the route. Creating a route choice may include storing a route marking a route adding route information to a routing table reporting a route and or ranking a route.

At block the method may determine whether other links are available for analysis. If so the method may continue at block . If no other links are available the method may continue at block .

At block the method may determine whether another remote node should be analyzed. If so the method may continue at block . If no other network nodes are to be analyzed the method may end at block .

At block the method may analyze a second or subsequent network link to identify a network path for the network node. The method may thus repeat the analysis for the second or subsequent network link at block .

At block the method may analyze a second or subsequent network node. The method may identify one or more network paths for this second or subsequent network node. Thus the method may repeat the network path identification process starting at block .

At block the method may analyze network nodes to identify one or more single hop network paths for one or more nodes.

At block the method may analyze network nodes to identify one or more two hop network paths for one or more nodes.

At block the method may begin identifying the one or more two hop network paths. The method may iterate through a set of nodes. In one or more embodiments the set of nodes may be represented by data stored in an array. The method may identify a second node and may determine whether a second node is the same as the first node. If the second node is the same as the first node the method may continue at block . If the second node is not the same as the first node the method may continue at block .

At block the method may determine if the second node is a hub. If the second node is the hub the method may continue at block . If the second node is not the hub the method may continue at block .

At block the method may determine whether the second node is connected to the first node. The method may iterate through one or more links to identify a link between the first node and the second node. If the second node is not connected to the first node the method may continue at block . If the second node is connected to the first node the method may continue at block .

At block the method may determine whether the second node is connected to the hub. The method may utilize a specified hub node identifier to determine whether a link terminates at the hub. If the second node is connected to the hub the method may continue at block . If the second node is not connected to the hub the method may continue at block .

At block the method may determine if the total latency of the network path is less than a specified maximum network path latency. The method may sum the latencies of the network links to determine a total network path latency. This sum may be compared against a user specified or system provided maximum network path latency. If the network path latency is less than or equal to a specified maximum path latency the method may continue at block . If the network path latency is greater than a specified maximum network path latency the method may continue at block .

At block the method may determine whether a specified maximum number of network paths has been found for a particular node. If a specified maximum number of network paths has been found the method may continue at block . If a specified maximum number of network paths has not been found the method may continue at block .

At block the method may mark the identified network path as a path choice. The identified network path may be recorded transmitted or otherwise identified as a network path choice for the first network node. In one or more embodiments the network path will be ranked.

At block the method may determine if another node is available for analysis as the second node in a two hop network path. If another second level node is available the method may continue at block . If another second level node is not available the process may continue at block .

At block the method may identify another network node to use as a second hop in a network path. The method may repeat at block .

At block the method may determine if any other nodes should be analyzed as a first node in a two hop network path. If other nodes are to be analyzed the method may continue at block . If no other nodes are to be analyzed the method may continue at block .

At block the method may identify a node to use as the first node in a two hop network path. The method may then continue at block .

At block the method may analyze first level nodes. This may involve identifying one or more single hop network paths for one or more network nodes as described in reference to above.

At block the method may analyze second level nodes. This may involve identifying one or more two hop network paths for one or more network nodes as described in reference to above.

At block the method may determine whether a desired number of network paths has been found for one or more network nodes. For example referring to if network element were a first level network node and network element were a hub there may be no one hop network paths available. There may be only a few two hop network paths between network element and network element e.g. utilizing network element and network paths and or . At block if a specified maximum number of network paths has not been found the method may continue at block . If the specified maximum number of network paths has been found the method may continue at block .

At block the method may determine whether identifying network paths with an additional hop is permissible and or desirable. A specified maximum number of network hops may be provided by a user parameter a system parameter or another input. If an additional hop is permissible the method may continue at block . If an additional hop is not permissible the method may continue at block .

At block the method may generate a report listing one or more network paths. In some embodiments network paths may be ranked and or sorted. Rankings and or sorting may be done by the number of network hops of a network path by the network path latency and or other criteria.

At block the method may begin identifying one or more network paths with an additional hop. For example referring again to if network element were a first network node e.g. an edge network node generating traffic and network element were a hub the method may identify one or more three hop network paths. Network paths may be identified utilizing network element network element and network paths and .

As an example in one or more embodiments Table 1 may illustrate a table of network nodes and corresponding routes or network paths identified for the network nodes to an identified hub with a network node name of WAEPE. Table 1 is exemplary and may contain a greater number or fewer number of network nodes and or network paths. The first column may provide a reference number for the purposes of this example. The second column may provide a network node name for which a network path or route may have been identified. In this example network node names may have a specified number of characters such as five and the ending two characters may indicate a node type e.g. PE may indicate provider edge P1 may indicate backbone . The third column may provide one or more identified network paths which may have been identified for a fewest amount of hops to a greatest amount of hops. Network paths may be a concatenated string of characters starting with the first node name followed by node name on the network path and ending with the node name of the identified network hub. Referring to row 1 of Table 1 node name BDGPE a provider edge node may have three identified network paths listed in order from fewest hops to greatest. Path BDGPEWAEP1WAEPE may represent a two hop path which starts at node BDGPE traversing a link or a hop to node WAEP1 and then traversing a second hop to terminate at network hub WAEPE. The next two paths listed in column 3 of row 1 may be three and four hop paths respectively between node BDGPE and network hub WAEPE. A review of available network paths shows that some nodes may have paths with fewer hops available to reach a network node. Some nodes such as ATLPE depicted in row 3 may have multiple paths with the same number of hops. In this example ATLPE is listed with two paths containing four hops and one path containing five hops.

Table 2 may represent a listing of the same 22 network nodes and the hub with the paths ranked not only by a number of hops but also by the latency of the network path. Table 2 is exemplary and may contain a greater number or fewer number of network nodes and or network paths. In some embodiments ranking formulas may ensure that network paths with fewest hops are always listed first. Comparing row 3 of Table 1 with row 3 of Table 2 we find that the first two paths have switched order. This may be because ATLPEATLP1RIJP1WAEP1WAEPE and ATLPEATLP1DNGP1WAEP1WAEPE may have an identical number of hops four hops apiece but different latencies. Comparing the paths the hops from node ATLPE to node ATLP1 are the same as are the hops from WAEP1 to WAEPE. Referring to Table 3 we can determine the latencies of network links.

Table 3 may contain a first node of a link in column 2 a second node of a link in column 3 a class of a link in column 4 a length in V H coordinate miles of a link in column 5 a length in actual network path miles in column 6 and a latency of the link in column 7. Table 3 is exemplary and may contain a greater number or fewer number of network links. When comparing the network paths discussed above ATLPEATLP1RIJPLWAEP1WAEPE and ATLPEATLP1DNGP1WAEP1WAEPE we can determine the latency of the corresponding hops of the paths. The difference between the two paths is the middle two hops. Thus comparing the latency of the path from ATLP1RUP1WAEP1 with ATLP1DNGP1WAEP1 illustrates the difference. The latency of the link from network node ATLP1 to network node RUP1 row 2 column 7 is listed as 7.01 milliseconds. The latency of the link from network node RIJP1 to network node WAEP1 row 37 column 7 is 1.38 seconds. When adding the components of the second network path the latency of the link from network node ATLP1 to network node DNGP1 row 1 column 7 is 8.79 milliseconds. The latency of the link from network node DNGP1 to WAEP1 row 11 column 7 is 9.17 milliseconds. Thus the middle two hops of ATLPEATLP1RUP1WAEP1WAEPE have a latency of 8.39 milliseconds and the middle two hops of ATLPEATLP1DNGP1WAEP1WAEPE have a latency of 17.96 milliseconds. Since ATLPEATLP1RIJP1WAEP1WAEPE is 9.57 milliseconds faster than ATLPEATLP1DNGP1WAEP1WAEPE ATLPEATLP1RUP1WAEP1WAEPE is listed first in Table 2 after the network paths in Table 1 are sorted for latency. As also illustrated in Table 3 the RTMILES the miles traveled by the actual network link may be calculated by multiplying the VHMILES the mileage between the V H coordinates on a grid by 1.5. In some embodiments an actual measured value may be utilized for RTMILES. The latency may be calculated as one millisecond for every one hundred route miles. Thus in row 1 the 878.8 route miles converts to a latency of 8.79 milliseconds. In some embodiments latency may be calculated by other methods. In embodiments identifying network paths for an existing network as opposed to a network which has only been modeled latency may be measured by network diagnostic tools the results of a ping test or by other methods. In some embodiments a minimum amount of latency may be utilized in the calculation process. For example rows 45 and 46 may be links between nodes at a same location and may have zero route miles. A minimum latency value such as 0.25 may ensure that a quarter of a millisecond is provided to account for processing time of one or more network nodes which may be required to transfer data between the two network nodes.

In the preceding specification various preferred embodiments have been described with reference to the accompanying drawings. It will however be evident that various modifications and changes may be made thereto and additional embodiments may be implemented without departing from the broader scope of the invention as set forth in the claims that follow. The specification and drawings are accordingly to be regarded in an illustrative rather than restrictive sense.

