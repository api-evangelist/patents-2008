---

title: Anti-malware scanning in a portable application virtualized environment
abstract: A computer includes a portable environment including a portable file system located on a removable storage device, the portable environment using virtualization in a host operating system. A path translation module translates a virtualized path of a file in the portable file system to an actual path of the file. The virtualized path is the path in the context of a portable user application running in the portable environment, and the actual path is the path in the context of the host operating system. A malware detection module executing directly under the host operating system determines whether the file contains malware using the actual path of the file and takes remedial actions if malware is detected.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08312547&OS=08312547&RS=08312547
owner: Symantec Corporation
number: 08312547
owner_city: Mountain View
owner_country: US
publication_date: 20080331
---
This invention pertains in general to protecting a computer from malicious software and in particular to techniques for anti malware scanning in a portable application virtualized environment.

Software portability products such as MOJOPAC by RingCube Technologies Inc. or U3 enabled portable drives by U3 LLC create a portable self contained computing environment that travels from computer to computer. For example a user can connect a software portability product to any compatible host computer and be able to use his or her portable computing environment on that computer. The connection can be made through a Universal Serial Bus USB interface. The portable computing environment provides the user with files applications and application and operating system settings desired by the user.

These software portability products also referred to as software virtualization products use light weight virtualization technology. Examples of light weight virtualization include Alitris Software Virtualization Solution SVS U3 s portable environment and MOJOPAC. This technology involves a portable software stack that uses the computing resources of the host computer up to and including the operating system of the host computer. The portable software stack provides its own file system and registry redirection drivers layered above the resources provided by the host computer. Applications are layered on top of the stack and from their perspective execute natively. The redirection drivers also referred to as filter drivers intercept file system and registry changes and store those changes in the portable computing environment.

For example a user s files in the portable environment may appear to the user to be in the C drive in standard directories used by the WINDOWS VISTA operating system. However the actual location of the files as known to the host operating system operating on the host computer may be on a removable storage device in the E drive. Similarly the user applications in the portable environment are provided with a standard registry that is accessible through standard registry access functions. However this registry is not the registry used by the host operating system but rather a registry stored in a file or files local to the portable environment.

Malicious software or malware such as viruses or worms may enter the portable environment and store itself in files or settings in the portable environment. Anti malware scanning is a technique for examining files and settings to detect malware. However anti malware scanning may not work properly for a portable environment. If the anti malware scan is run from within a host operating system of the portable environment the anti malware scan may fail to detect malware in the portable environment. Therefore there is a need in the art for a way to perform an anti malware scan of a portable environment.

The above need is met by a system method and computer program product for scanning for malware in a computer having a portable environment including a portable file system located on a removable storage device where the portable environment uses virtualization in a host operating system. In an embodiment of the system and computer program product a path translation module for translates a virtualized path of a file in the portable file system to an actual path of the file. The virtualized path is the path in the context of a portable user application running in the portable environment and the actual path is the path in the context of the host operating system. A malware detection module executing directly under the host operating system determines whether the file contains malware using the actual path of the file and takes remedial actions if malware is detected.

In an embodiment of the method a computer implemented method of scanning for malware in a computer having a portable environment including a portable file system located on a removable storage device the portable environment using virtualization in a host operating system comprises translating a virtualized path of a file in the portable file system to an actual path of the file. The virtualized path is the path in the context of a portable user application running in the portable environment and the actual path is the path in the context of the host operating system. The method also includes determining from a module executing directly under the host operating system whether the file contains malware using the actual path of the file.

The figures depict an embodiment for purposes of illustration only. One skilled in the art will readily recognize from the following description that alternative embodiments of the structures and methods illustrated herein may be employed without departing from the principles described herein.

The removable storage device can be easily removed from the computer and connected to another computer in one embodiment. The removable storage device can connect to the computer through a Universal Serial Bus USB interface. The removable storage device contains a portable registry and a portable file system . The portable registry contains configuration settings that may be organized in the format of the WINDOWS Registry. The portable file system is a file system such as the New Technology File System NTFS used by some versions of MICROSOFT WINDOWS or the third extended file system ext3 used by some versions of LINUX.

A portable environment is instantiated on the computer by running an application program that can be stored on the removable storage device . The portable environment runs on the processor uses the memory and accesses the portable file system and portable registry . An anti malware scanner is run on the computer to scan the portable file system and portable registry to detect malware in the portable environment. The portable environment and anti malware scanner are described further below.

Computers acting in different roles may have different and or additional elements than the ones shown in . For example a computer acting as a server may have greater processing power and a larger storage device than a computer acting as a client. Likewise a computer acting as a server may lack devices such as a display and or keyboard that are not necessarily required to operate it.

The computer executes one or more operating systems such as a variant of MICROSOFT WINDOWS or LINUX. In one embodiment the computer runs a version of WINDOWS VISTA. In general the operating system executes one or more application programs.

The operating system and application programs executed by the computer are formed of one or more processes. This description utilizes the term module to refer to computer program logic for providing a specified functionality. A module can be implemented in hardware firmware and or software. A module is typically stored on the storage device loaded into the memory and executed by the processor . A module can include one or more processes and or be provided by only part of a process.

The host operating system also includes a registry containing configuration settings for the host operating system and user applications . The settings in the registry may be stored as keys organized in a hierarchical format. The registry includes the root keys for the host operating system .

The desktop manager manages one or more desktops for the host operating system . A desktop is a graphical screen shown on the display and provided to the user for interacting with the host operating system and user applications . The desktop manager can create and configure desktops and can control which desktop is currently displayed to the user.

The security module scans the portable environment including the portable file system and portable registry for malicious software or malware such as viruses and worms. If a file with malware is detected a remedial action can be taken such as removing the malware or alerting a user of the portable environment . The security module can be an application process or service running in the host operating system . The security module can also scan the file system and registry of the host operating system . The security module is described further below.

The security module may scan only some of the files in the portable file system such as the files that are likely to be accessed and executed. This type of scanning is referred to as a quick scan. The security module may be provided with predetermined locations to scan or may scan locations determined based on commands from a user. For example a quick scan may include the home folders and startup folders of all users and certain shared folders that are frequently accessed.

The portable environment also referred to as a virtualized environment or a portable application virtualized environment is an environment that a user can transport from one compatible computer to another. The portable environment provides the user with the files applications and settings desired by the user while the files applications and settings of the host operating system may vary from one computer to another. In one embodiment the portable environment is started when a user connects a removable storage device to the computer . An application on the removable storage device is automatically or manually run to instantiate the portable environment . The portable environment uses light weight virtualization technology running within the host operating system and using resources of the computer and the host operating system.

The portable desktop is a desktop used by the portable environment . The portable environment may use more than one portable desktops . The portable environment obtains a desktop for its use from the desktop manager . The portable environment initially configures the portable desktop according the settings obtained from the removable storage device for example from the portable registry described below. When the user is interacting with the portable environment the desktop manager displays the portable desktop to the user.

The portable user application is a user application running in the portable environment. By being in the portable environment the application can behave the same way from the user s point of view even when running on differently configured host operating systems . The portable user application accesses the portable registry and portable file system described below rather than the file system and registry of the host operating system . The portable user application can interact with the user through the portable desktop .

The portable file system is the file system available to a user or portable user application of the portable environment . A portable user application reads and writes to the portable file system rather than to the file system of the host operating system . The portable file system is stored on the removable storage device and is available to both the portable environment and the host operating system . However the path associated with a file in the portable file system is different in the context of the host operating system versus the context of the portable environment . For example a file in the portable file system may appear as C UserA Document.txt to portable user applications in the portable environment while appearing as E PortEnvRoot C UserA Document.txt to user applications and the security module in the host operating system . In this example E is the drive assigned by the host operating system to the removable storage device .

The path of a file in the context of the portable environment is referred to as the virtualized path of the file while the path of the file in the context of the host operating system is referred to as the actual path or true path of the file. The process of converting a virtualized path to an actual path or converting an actual path to a virtualized path is referred to as path translation. In the example given above path translation from a virtual path C UserA Document.txt to an actual path E PortEnvRoot C UserA Document.txt can be performed by adding E PortEnvRoot to the beginning of the virtual path and removing the colon after the C .

The portable registry is the registry available to portable user applications . The portable registry contains settings for users and portable user applications of the portable environment . A portable user application reads and writes to the portable registry rather than to the registry of the host operating system . The portable registry is stored on the removable storage device .

The portable filter drivers redirect file and registry accesses by portable user applications to the portable file system and the portable registry . As mentioned above the portable environment uses the services of the host operating system . In particular a portable user application uses system calls provided by the host operating system to access a file. However as mentioned above the portable user application knows the file by only its virtualized path while the host operating system knows the file by only its actual path. If the portable user application makes the system call using the virtualized path and if no path translation is performed the host operating system will not be able to locate the correct file. Therefore the portable filter drivers perform path translations on paths used in system calls by portable user applications . The portable filter drivers can also perform path translation on paths that are returned from the host operating system to a portable user application in response to a system call.

By performing path translation on files the portable filter drivers are able to redirect file accesses by portable user applications to the correct locations. The portable filter drivers also redirect registry accesses by portable user applications. The registry of the host operating system is located in a file or files in the system directory of the file system of the host operating system . The portable registry however is located in a file or files on the removable storage device . The portable filter drivers detect when a portable user application attempts to access the registry e.g. through a system call and redirects the access to the portable registry .

As mentioned above it is desired to perform an anti malware scan of the portable environment including the portable file system and portable registry . It is possible for this anti malware scanning program to run as a portable user application from within the portable environment . However such an approach may not maximize security.

Generally an anti malware scanner is best able to defend a computer when it is deployed before the malware arrives. In a computer containing attacking code e.g. malware and defending code e.g. anti malware scanner the attacking code is less likely to defeat the defending code if the defending code is installed first or is operating at a higher privilege level than the attacking code. If the defending code is designed to run from within the portable environment the attacking code can be waiting on the host before the portable environment is instantiated and before the defending code is deployed. Therefore a security module that performs an anti malware scan of the portable environment provides greater security if it is run from outside of the portable environment directly from the host operating system .

The security module scans the portable environment including the portable file system and portable registry for malicious software or malware such as viruses and worms. If a file with malware is detected a remedial action can be taken such as removing the malware or alerting a user of the portable environment . The security module can be an application process or service running in the host operating system . The security module can also scan the file system and registry of the host operating system . The security module is described further below.

In one embodiment the security cooperation module enables the security module to scan the portable environment for malware by providing information about the portable environment to the security module . The security cooperation module may also include an application program interface API that is used by the security module to perform services that assist the security module in scanning the portable environment. The security cooperation module runs in the portable environment and is instantiated by the portable environment .

The portable environment may or may not include a security cooperation module depending on the design of the portable environment. If the portable environment is designed to be aware of and to cooperate with a security module then the portable environment will likely include a security cooperation module . However even if the portable environment does not include a security cooperation module the security module may still be able to scan the portable environment as described below.

The access module obtains information about the portable environment for use by the security module . This information enables the security module to scan the correct files and registry entries in the portable environment and to interact with a user of the portable environment.

If the portable environment includes a security cooperation module then the security cooperation module can provide the access module with information about the portable environment. The security cooperation module and access module can communicate through standard methods provided by the host operating system such as inter process communication or message passing.

After the portable environment is instantiated the security cooperation module communicates to the access module that the portable environment has started. The security cooperation module further provides the access module with instructions for performing path translations. The security cooperation module also provides the access module with the location of the portable registry on the removable storage device . In addition the security cooperation module provides the access module with a reference to the portable desktop . This reference can be a handle of the portable desktop that can be used in system calls to the host operating system to access the desktop. The security module uses the information obtained by the access module to perform an anti malware scan of the portable environment .

The security module may scan only some of the files in the portable file system such as the files that are likely to be accessed and executed. This type of scanning is referred to as a quick scan. The security module may be provided with predetermined files to scan or may scan files determined based on input from a user. User input can be obtained through the user interface module described below. For example a quick scan may include the files in the home folders and startup folders of all users and the files certain shared folders that are frequently accessed. The predetermined or user determined files are identified by their virtualized paths.

The path translation module is used by the security module to determine the actual paths corresponding to the virtualized paths of the files to be scanned. The path translation module uses the path translation instructions obtained by the access module to perform the path translations. A single path translation can be performed for all files in a particular directory for improved efficiency.

The malware detection module receives the actual pathnames of the files to be scanned and determines whether those files contain malware. The malware detection module also receives the location of the portable registry from the access module and performs an anti malware scan of the portable registry. If the malware detection module detects malware in a file in the portable file system or in the portable registry the malware detection module takes remedial actions such as deleting the malware or alerting a user of the portable environment .

The user interface module provides a graphical user interface to a user of the portable environment enabling the user to interact with the security module . The user of the portable environment generally views only the portable desktop and does not see other desktops of the host operating system . The user interface module uses the portable desktop reference obtained from the access module to display output to and receive input from the portable desktop . The user interface module can also hook into graphics functions of the host operating system in order to receive input from the user. For example the user interface module can display a dialog box to the user allowing the user to specify options for the anti malware scan including the files to be scanned during a quick scan. The user interface module can also display the results of an scan performed by the malware detection module and prompt the user for actions to take if malware is found. The security module can use the path translation module to convert actual file paths to virtualized file paths that the user of the portable environment will understand.

In one embodiment the security cooperation module includes an API that is used by the security module to perform services. These services include path translation and user interface functions. The API can provide a function that is called by the security module to perform a path translation. The API can also provide user interface functions that are called by the security module such as a function to display a dialog box on the portable desktop a function to display an icon in the system tray of the portable desktop or a function to receive input from a user of the portable environment . If the API provides path translation and user interface functions the path translation module and the user interface module can be located in the security cooperation module rather than in the security module . Additionally in such a case the access module does not need to obtain the path translation instructions or the portable desktop reference from the security cooperation module .

In one embodiment the portable environment does not cooperate with the security module to enable an anti malware scan of the portable environment as mentioned above. In this case the portable environment may not contain a security cooperation module . However as described below it is still possible for the security module to obtain information to enable a scan of the portable environment .

The portable environment detection module detects an instantiation of the portable environment . As mentioned above the portable environment is generally started by an application program running from the removable storage device . The portable environment detection module can be aware of the names or properties of particular application programs that are known to be used to execute portable environments and the access module can detect such application programs being run. Similarly the portable environment detection module can be aware of the names or properties of particular processes that are started when a portable environment is started and can detect such processes. The portable environment detection module can also use various heuristics to detect a portable environment being started. For example the portable environment detection module can look for a new desktop being created indicating a possible portable desktop or look for a filter driver being started indicating a possible portable filter driver .

After detecting an instantiation of the portable environment the access module can determine the path translation instructions by observing the path translation being performed by the portable filter drivers . The access module can install an access filter driver that links to the portable filter drivers and is able to intercept the path translations being performed by the portable filter drivers. By observing pathnames before and after translation by the portable filter drivers i.e. by comparing virtualized paths to actual paths the access filter driver can determine the path translation instructions. The access filter driver can also observe redirections of registry access to the portable registry and determine the location of the portable registry.

The access module can also create hooks into the graphics functions of host operating system so that the access module is notified when the portable environment creates a portable desktop . A hook function can also return the reference to the portable desktop to the access module .

As mentioned above the security module uses the information obtained by the access module to perform an anti malware scan of the portable environment . This information can include the path translation instructions the location of the portable registry and the reference to the portable desktop .

The malware detection module then performs an anti malware scan of the portable file system and portable registry . The malware detection module can use the path translation instructions and portable registry location obtained by the access module or can use an API . The anti malware scan can be a quick scan. The user interface module displays the results of the scan on the portable desktop to be viewed by the user of the portable environment . The user interface module can use the portable desktop reference obtained by the access module or can use an API . The malware detection module performs remedial actions in response to finding malware such as deleting the malware.

The above description is included to illustrate the operation of the preferred embodiments and is not meant to limit the scope of the invention. The scope of the invention is to be limited only by the following claims. From the above discussion many variations will be apparent to one skilled in the relevant art that would yet be encompassed by the spirit and scope of the invention.

