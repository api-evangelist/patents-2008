---

title: Dynamic file access to files of unmapped remote computers
abstract: Dynamically providing access to files of presently unmapped remote computers, including, responsive to receiving a file access request from a user, displaying a file access Graphical User Interface (‘GUI’) dialog box; receiving, from the user through the file access GUI dialog box, a Uniform Resource Locator (‘URL’) representing a file location on a remote computer, wherein the URL specifies a particular access protocol among a number of available access protocols, a network location of the remote computer, a port number, and a file system path; and accessing, in dependence upon the URL, a file on the remote computer at the file system path through data communications established between a local server module and a remote server running on the remote computer using the particular access protocol, the network location of the remote computer, and the port number.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09577998&OS=09577998&RS=09577998
owner: International Business Machines Corporation
number: 09577998
owner_city: Armonk
owner_country: US
publication_date: 20081217
---
The field of the invention is data processing or more specifically methods apparatus and products for dynamically providing access to files of presently unmapped remote computers.

The development of the EDVAC computer system of 1948 is often cited as the beginning of the computer era. Since that time computer systems have evolved into extremely complicated devices. Today s computers are much more sophisticated than early systems such as the EDVAC. Computer systems typically include a combination of hardware and software components application programs operating systems processors buses memory input output devices and so on. As advances in semiconductor processing and computer architecture push the performance of the computer higher and higher more sophisticated computer software has evolved to take advantage of the higher performance of the hardware resulting in computer systems today that are much more powerful than just a few years ago.

Computers today are often organized in data communications networks local and wide area are connected to the Internet and are otherwise connected through a data communications network to many other computers. File access within most user level applications however is limited to the files stored in a computer s local file systems. A user may open and save files within the local file system. Presently a user is able to access files stored on a remote computer through a user level application only if that remote computer is mapped to the local computer. In such a case the remote computer appears to the user as if it were a local drive. There is at present no way to dynamically access files of a remote computer that is presently not mapped to a local computer.

Disclosed in this specification are computer implemented methods apparatus and products for dynamically providing access to files of presently unmapped remote computers including responsive to receiving a file access request from a user displaying a file access Graphical User Interface GUI dialog box receiving from the user through the file access GUI dialog box a Uniform Resource Locator URL representing a file location on a remote computer wherein the URL specifies a particular access protocol among a number of available access protocols a network location of the remote computer a port number and a file system path and accessing in dependence upon the URL a file on the remote computer at the file system path through data communications established between a local server module and a remote server running on the remote computer using the particular access protocol the network location of the remote computer and the port number.

The foregoing and other objects features and advantages of the invention will be apparent from the following more particular descriptions of exemplary embodiments of the invention as illustrated in the accompanying drawings wherein like reference numbers generally represent like parts of exemplary embodiments of the invention.

Exemplary methods apparatus and products for dynamically providing access to files of presently unmapped remote computers in accordance with the present invention are described with reference to the accompanying drawings beginning with . sets forth a network diagram of an exemplary system for dynamically providing access to files of presently unmapped remote computers according to embodiments of the present invention.

The system of includes a local computer which in turn includes at least one computer processor or CPU as well as random access memory RAM which is connected through a high speed memory bus and bus adapter to processor and to other components of the computer . The term local is used here to describe a computer that from the point of view of the user is not remotely accessed that is a computer not accessed by the user through a data communications network but rather through I O devices connected to the computer s I O adapter. The system of also includes several example remote computers that is remote from the point of view of the user in that the computers must be accessed by the user through the data communications network . The example remote computers of include a laptop web server and personal computer . Readers of skill in the art will immediately recognize these computers only but a few examples of automated computing machinery comprising a remote computer and that there are many other forms of automated computing machinery which may operate as a remote computer according to embodiments of the present invention.

As mentioned above the system of operates for dynamically providing access to files of presently unmapped remote computers according to embodiments of the present invention. Drive mapping is the method by which Microsoft Windows IBM s OS 2 and other operating systems associate a shared storage area of a remote computer as if the storage area were a local hard disk drive. When mapped a software application on a local computer is capable of reading and writing files from the shared storage area by accessing that drive just as if that drive represented a local physical hard disk drive. According to embodiments of the present invention such drive mapping is unnecessary in order for an application to provide access to files on remote computer. Instead access to files on remote computers is provided dynamically without drive mapping.

Stored in RAM of the computer is a user level application a module of computer program instructions that carries out user level data processing tasks. Examples of such user level applications that carry out user level data processing tasks include word processing applications spreadsheet applications presentation development applications audio recording and editing applications video recording and editing applications digital image processing applications and so on as will occur to readers of skill in the art. Examples of word processing applications capable of being improved for dynamic remote file access according to embodiments of the present invention include Microsoft Word Apple s Pages Corel WordPerfect Lotus Word Pro and so on as will occur to readers of skill in the art. Examples of spreadsheet applications capable of being improved for dynamic remote file access according to embodiments of the present invention include Microsoft Excel Apple s Numbers Corel Quattro Pro Lotus 1 2 3 and so on as will occur to readers of skill in the art. Examples of presentation development applications capable of being improved for dynamic remote file access according to embodiments of the present invention include Microsoft PowerPoint Apple s Keynote presentation software Lotus Symphony and so on as will occur to readers of skill in the art.

The user level application in the example of in addition to carrying out user level data processing tasks is also configured for dynamically providing access to files of presently unmapped remote computers according to embodiments of the present invention. The application may dynamically provide access to files of presently unmapped remote computers by displaying a file access Graphical User Interface GUI dialog box in response to receiving a file access request from a user receiving from the user through the file access GUI dialog box a Uniform Resource Locator URL representing a file location on a remote computer where the URL specifies a particular access protocol among a plurality of available access protocols a network location of the remote computer a port number and a file system path and accessing in dependence upon the URL a file on the remote computer at the file system path through data communications established between a local server module and a remote server running on the remote computer using the particular access protocol the network location of the remote computer and the port number .

A file access request is a request to access save or open a file in a file system that is a request to write data to computer memory a disk drive for example in the form of a file or a request to copy data into computer memory such as RAM from a disk drive or similar storage.

A file access GUI dialog box is a GUI dialog box displayed when a user requests access to a file. The GUI dialog box enables a user through GUI component such as text boxes drop down lists buttons and the like to specify a filename and file location of a file to access. The file location specified by a user according to embodiments of the present invention is specified with a URL that includes a particular access protocol among a plurality of available access protocols. An access protocol is a data communications protocol typically associated with application layer of the seven layer OSI Open Systems Interconnection Basic Reference Model model and the TCP IP Transmission Control Protocol Internet Protocol model. Examples of access protocols include HTTP HyperText Transfer Protocol HTTPS HTTP over Secure Socket Later POP Post Office Protocol SIP Session Initiation Protocol SMTP Simple Mail Transfer Protocol SOAP Simple Object Access Protocol SSH Secure Shell FTP File Transfer Protocol and so on as will occur to readers of skill in the art. Dynamically providing access to files of presently unmapped remote computers in accordance with embodiments of the present invention is not limited to one access protocol. Some file transfer applications of the prior art providing only file transfer operations and nothing more are limited to only one access protocol. FTP clients for example are limited to only the FTP access protocol. Here by contrast a user may specify one of many available access protocols and the user level application provides user level data processing tasks in addition to mere file transfer.

The URL in the example of also includes a network location of the remote computer . A network location is data identifying a computer s location on a network. Such a network location may be an Internet Protocol address a computer name of a computer in a local area network a domain name and so on as will occur to readers of skill in the art.

The URL in the example of also includes a port number . A port number represents an endpoint or channel for network communications. Port numbers enable different applications on the same computer to utilize network resources without interfering with each other.

The URL in the example of also includes file system path . A file system path is a general form of a file or directory name specifying a unique location in a file system. A path points to a file system location by following the directory tree hierarchy expressed in a string of characters in which path components separated by a delimiting character represent each directory. The delimiting character is most commonly the slash the backslash character or colon though some operating systems may use a different delimiter. Paths are used extensively in computer science to represent the directory and file relationships common in modern operating systems. A path may be absolute or relative. A full path or absolute path is a path that points to the same location on one file system regardless of the working directory or combined paths. It is usually written in reference to a root directory. A relative path is a path relative to the working directory of the user or application so the full absolute path need not be given.

Accessing a file on the remote computer according to embodiments of the present invention is carried out with a local server module executing or running on the local computer and a remote server running on the remote computer . The local server module and the remote server are data communications servers modules of computer program instructions that provide data communications services to other computer program programs running on the same or other computers. Here for example the remote server provides data communications services to the local server module and thereby provides data communications services to the user level application that directs the local server module s operations. In the example of the local server module is depicted as a standalone software component for ease of explanation only not limitation. Readers of skill in the art will immediately recognize that local server modules useful in systems that dynamically provide access to files of presently unmapped remote computers according to embodiments of the present invention may be implemented as a software component of an operating system exposing one or more Application Programming Interfaces APIs to the user level application for directing data communications between the local and remote servers or may be implemented as a software component of the user level application itself that is coded directly in the application.

File access provided according to embodiments of the present invention may be transparent to the user after a remote file is accessed that is once a file is opened on the local computer or saved on the remote computer. The user level application may direct the local server module to maintain the established data communications with the remote server after the file is opened or saved or may store the URL for later use. Consider for example that the user level application is a word processing application and a user opens the file stored on the personal computer . Opening the file includes retrieving a copy of the file on the local computer. A user then may modify the local file and through a keyboard or icon shortcut direct the user level application to save the file. Instead of requesting the URL again the user level application may use the previously received URL transparently to the user to send the modified version of the document to the remote computer for storage. To the user the file is saved as if saved on a local hard disk drive.

Consider as a further example of file access provided according to embodiments of the present invention that the user opens a remote file stored on the personal computer . That is the user level application through one or more data communications protocols using a file path port and network location provided by a user retrieves the file from the personal computer and stores the file in local RAM where the file is modified by the user through the user level application . The user may In some embodiments of the present invention may in addition to saving the modified file back to computer storage on the personal computer may save the modified file on another remote computer say the laptop for example in the same manner described above for saving a file to any remote computer. The user therefore may effectively transfer a file from one remote computer to another remote computer including modifying the file en route through functionality provided by user level applications that provide file access according to embodiments of the present invention. Readers of skill in the art will recognize that a user through a user level application may save a file opened or retrieved from one remote computer to another remote computer by using a file access request similar to the well known Save As file access request that allows a user to store a copy of the opened file in its current state in a user specified directory here a directory on another remote computer with a user specified name.

Also stored in RAM is an operating system . Operating systems useful for dynamically providing access to files of presently unmapped remote computers according to embodiments of the present invention include UNIX Linux Microsoft XP AIX IBM s i5 OS and others as will occur to those of skill in the art. The operating system user level application local server module available protocols URL and so on in the example of are shown in RAM but many components of such software typically are stored in non volatile memory also such as for example on a disk drive .

The computer of includes disk drive adapter coupled through expansion bus and bus adapter to processor and other components of the computer . Disk drive adapter connects non volatile data storage to the computer in the form of disk drive . Disk drive adapters useful in computers that dynamically provide access to files of presently unmapped remote computers according to embodiments of the present invention include Integrated Drive Electronics IDE adapters Small Computer System Interface SCSI adapters and others as will occur to those of skill in the art. Non volatile computer memory also may be implemented for as an optical disk drive electrically erasable programmable read only memory so called EEPROM or Flash memory RAM drives and so on as will occur to those of skill in the art.

The example computer of includes one or more input output I O adapters . I O adapters implement user oriented input output through for example software drivers and computer hardware for controlling output to display devices such as computer display screens as well as user input from user input devices such as keyboards and mice. The example computer of includes a video adapter which is an example of an I O adapter specially designed for graphic output to a display device such as a display screen or computer monitor. Video adapter is connected to processor through a high speed video bus bus adapter and the front side bus which is also a high speed bus.

The exemplary computer of includes a communications adapter for data communications with other remote computers such as the personal computer web server and laptop and for data communications with a data communications network . Such data communications may be carried out serially through RS 232 connections through external buses such as a Universal Serial Bus USB through data communications data communications networks such as IP data communications networks and in other ways as will occur to those of skill in the art. Communications adapters implement the hardware level of data communications through which one computer sends data communications to another computer directly or through a data communications network. Examples of communications adapters useful for dynamically providing access to files of presently unmapped remote computers according to embodiments of the present invention include modems for wired dial up communications Ethernet IEEE 802.3 adapters for wired data communications network communications and 802.11 adapters for wireless data communications network communications.

The arrangement of local computer remote computer and other devices making up the exemplary system illustrated in are for explanation not for limitation. Data processing systems useful according to various embodiments of the present invention may include additional servers routers other devices and peer to peer architectures not shown in as will occur to those of skill in the art. Networks in such data processing systems may support many data communications protocols including for example TCP Transmission Control Protocol IP Internet Protocol HTTP HyperText Transfer Protocol WAP Wireless Access Protocol HDTP Handheld Device Transport Protocol and others as will occur to those of skill in the art. Various embodiments of the present invention may be implemented on a variety of hardware platforms in addition to those illustrated in .

For further explanation sets forth a flow chart illustrating an exemplary method for dynamically providing access to files of presently unmapped remote computers according to embodiments of the present invention. Responsive to receiving a file access request from a user the method of includes displaying a file access Graphical User Interface GUI dialog box . Displaying a file access Graphical User Interface GUI dialog box may be carried out by rendering the GUI box on a display on connected to a video adapter on of the local computer on .

The method of also includes receiving from the user through the file access GUI dialog box a Uniform Resource Locator URL specifying a file location on a remote computer . In the method of the URL specifies a particular access protocol among a plurality of available access protocols a network location of the remote computer a port number and a file system path . Receiving a URL specifying a file location on a remote computer may be carried out by receiving data entered into fields of the GUI dialog box data selected from drop down menu lists of the GUI dialog box data represented GUI buttons of the dialog box and by other types of user interface actions as will occur to readers of skill in the art.

The method of also includes accessing in dependence upon the URL a file on the remote computer at the file system path through data communications established between a local server module and a remote server running on the remote computer using the particular access protocol the network location of the remote computer and the port number . In the method of accessing in dependence upon the URL a file on the remote computer is carried out by accessing the file through data communications carried out according to the Transmission Control Protocol and Internet Protocol TCP IP among the local server module and the remote server running on the remote computer. That is the local server module may establish data communications with the remote server according to TCP with typical SYN SYN ACK messages and the like included as payload of packets configured as IP packets. Once established such data communications may include messages configured according to particular access protocol such as for example HTTP Get and HTTP Send messages.

For further explanation sets forth a flow chart illustrating a further exemplary method for dynamically providing access to files of presently unmapped remote computers according to embodiments of the present invention. The method of is similar to the method of in that the method of includes displaying a file access GUI dialog box receiving from the user through the file access GUI dialog box a URL specifying a file location on a remote computer and accessing in dependence upon the URL a file on the remote computer . The method of differs from the method of however in that in the method of accessing a file on the remote computer includes requesting from the user authorization credentials receiving the authorization credentials from the user and providing by the local server module the authorization credentials to the remote server running on the remote computer . Authorization credentials refer to data used to determine whether a particular requesting user is authorized to access a resource. Examples of such authorization credentials include a combination of username and password login ID and pin and so on as will occur to readers of skill in the art. Requesting such authorization credentials may be carried out by presenting to the user a GUI pop up box when attempting to establish data communications with the remote server and determining that the remote server requires authorization. Receiving the authorization credentials from the user may be carried out by receiving data entered into one or more text fields of the GUI pop up box . That is data entered into the text fields by the user represents the authorization credentials provided to the remote server. Providing the authorization credentials to the remote server running on the remote computer may be carried out by sending the authorization credentials in one or more data communications packets over the data communications network to the remote server. Upon receiving the credentials the remote server may determine whether to grant access to the user in dependence upon the received credentials and send an approval or denial of access in response to the local server module in one or more data communications packets across the data communications network .

For further explanation sets forth a flow chart illustrating a further exemplary method for dynamically providing access to files of presently unmapped remote computers according to embodiments of the present invention. The method of is similar to the method of in that the method of includes displaying a file access GUI dialog box receiving from the user through the file access GUI dialog box a URL specifying a file location on a remote computer and accessing in dependence upon the URL a file on the remote computer . The method of differs from the method of however in that in the method of accessing a file on the remote computer includes providing by the local server module an authentication certificate to the remote server running on the remote computer . An authentication certificate is data used to authenticate the identity of a user an application or the like. Authentication certificates may include public key certificate such as a self signed digital certificate and the like. Providing an authentication certificate to the remote server running on the remote computer may be carried out by providing the certificate in one or more data communications packets over the network connecting the remote computer and the local computer .

For further explanation sets forth a flow chart illustrating a further exemplary method for dynamically providing access to files of presently unmapped remote computers according to embodiments of the present invention. The method of is similar to the method of in that the method of includes displaying a file access GUI dialog box receiving from the user through the file access GUI dialog box a URL specifying a file location on a remote computer and accessing in dependence upon the URL a file on the remote computer . The method of differs from the method of however in that in the method of the file access request is a request for access to save a file on the remote computer . Such a request may include a request to save the file save the file with a particular name save a copy of the file save the file as a web page and so on as will occur to readers of skill in the art. Also in the method of accessing a file on the remote computer includes sending the file by the local server module in one or more data communications packets to the remote server running on the remote computer for storage at the file system path specified in the URL . The local server module for example may send the file in one or more IP packets where at least one packet has a header that includes the file path and a command to save and the payload data of the packets comprises the file. A file path and a command to save in a header may be implemented for example as save D ExampleFilePath Filename.txt. This example file path and those depicted in the Figures of this specification are example file paths implemented for the Microsoft Windows operating system. Readers of skill in the art will recognize however that other forms of file paths may be used in accordance with embodiments of the present invention and such forms depend entirely on the operating system managing the file system for which the file path is specified. Linux Unix and the like for example use file paths of a different form than that used in Microsoft Windows operating systems. Readers of skill in the art will also recognize that the form of the file path is not necessarily dependent upon the operating system running on the local computer but rather dependent upon the operating system running on the remote computer. Consider for example that a local computer runs a Microsoft Windows operating system while a remote computer runs a Unix based operating system. The path specified in the URL included in the data communications packets may be specified in the form required by Unix based operating systems because the path is only data in data communications packets until received by the remote server of the remote computer and because the path is not used directly by any software running in the Windows operating system. Once the packets are received the remote server is capable of using the Unix based file path to retrieve the file from computer memory computer memory organized in a Unix based file system packetize the file and send the packets back to the local server module .

For further explanation sets forth a flow chart illustrating a further exemplary method for dynamically providing access to files of presently unmapped remote computers according to embodiments of the present invention. The method of is similar to the method of in that the method of includes displaying a file access GUI dialog box receiving from the user through the file access GUI dialog box a URL specifying a file location on a remote computer and accessing in dependence upon the URL a file on the remote computer . The method of differs from the method of however in that in the method of the file access request is a request to open a file stored on the remote computer and accessing a file on the remote computer includes requesting by the local server module the file from the remote server running on the remote computer and receiving the file in response to the request in one or more data communications packets .

Requesting the file from the remote server running on the remote computer and receiving the file in response to the request may be carried out by in various ways in dependence upon the particular access protocol specified in the URL. Consider for example a request implemented as an HTTP GET message that includes the GET D ExampleFilePath Filename.txt. Where D ExampleFilePath Filename.txt is the file path of the file to open on the local computer.

For further explanation sets forth an exemplary file access GUI dialog box displayed to a user for dynamically providing access to files of presently unmapped remote computers according to embodiments of the present invention. The example file access GUI dialog box of is depicted as an Open File file access GUI dialog box for clarity of explanation but readers of skill in the art will recognize that other types of file access GUI dialog boxes may be displayed to a user for similar purposes according to embodiments of the present invention including for example a Save File GUI dialog box. The GUI dialog box in the example of may be displayed upon a user selecting from a drop down menu an option to open a file. The GUI dialog box enables a user to select a file from local computer memory through icons representing commonly and recently selected memory locations of files and through a list of directories subdirectories and files. The set of icons in the example of include the Recent icon which when selected lists recently accessed files the Desktop icon which when selected lists subdirectories and files located in the desktop directory the My Documents icon which when selected lists files and subdirectories of a directory typically used to store word processing documents and the My Computer icon that when selected displays the computer s hard drives mapped network drives optical drives removable storage and peripheral I O devices each of which is capable of containing files.

In addition to local files the GUI dialog box also enables a user to access files on a remote computer. A remote access portion of the GUID dialog box includes several drop down lists for specifying a file location on a remote computer. A user may insert text into the drop down lists select a predefined item from the drop down list or select a previously inserted item from the drop down list. A user may specify a file location on a remote computer in two different ways using the example GUI dialog box of . In the example of the user has specified an access protocol HTTP in the Access Protocol drop down list specified a network location the domain name www.ExampleNetworkStorage.com in the Network Location drop down list specified a port number 8080 in the Port Number drop down list specified a file path C ExampleFolder Document.txt in the File Name drop down list and specified authorization credentials including a user identification Example User ID and password in the User ID drop down list and Password drop down list . The application displaying the GUI dialog box may be coded to form a URL in dependence upon the parameters inserted into these drop down lists and display the formed URL in the URL drop down list . As an alternative to specifying each portion of the URL in separate drop down lists a user may specify the entire URL in the URL drop down list select a predefined URL from the URL drop down list or select a previously entered URL from the URL drop down list .

Exemplary embodiments of the present invention are described largely in the context of a fully functional computer system for dynamically providing access to files of presently unmapped remote computers. Readers of skill in the art will recognize however that the present invention also may be embodied in a computer program product disposed on signal bearing media for use with any suitable data processing system. Such signal bearing media may be transmission media or recordable media for machine readable information including magnetic media optical media or other suitable media. Examples of recordable media include magnetic disks in hard drives or diskettes compact disks for optical drives magnetic tape and others as will occur to those of skill in the art. Examples of transmission media include telephone networks for voice communications and digital data communications networks such as for example Ethernets and networks that communicate with the Internet Protocol and the World Wide Web as well as wireless transmission media such as for example networks implemented according to the IEEE 802.11 family of specifications. Persons skilled in the art will immediately recognize that any computer system having suitable programming means will be capable of executing the steps of the method of the invention as embodied in a program product. Persons skilled in the art will recognize immediately that although some of the exemplary embodiments described in this specification are oriented to software installed and executing on computer hardware nevertheless alternative embodiments implemented as firmware or as hardware are well within the scope of the present invention.

It will be understood from the foregoing description that modifications and changes may be made in various embodiments of the present invention without departing from its true spirit. The descriptions in this specification are for purposes of illustration only and are not to be construed in a limiting sense. The scope of the present invention is limited only by the language of the following claims.

