---

title: Method to automatically determine host to LUN (logical unit number) path availability for multi path attached storage systems
abstract: The present disclosure provides testing of a storage system. The test may compare the storage array controller LUNs which may be configured to be accessible by a host with the LUNs which are currently available to prevent a zero path scenario from occurring. The test may verify at least one path exists for each LUN to a storage controller of a storage array before injecting an error into another storage controller of the storage array. The present disclosure also provides verification of the configuration of a storage system. The configuration verification may verify that the storage array controller LUNs which are configured to be accessible by a host are actually accessible by the host. If the configuration verification is unable to verify the configuration of storage system, the configuration verification may display an error.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08332505&OS=08332505&RS=08332505
owner: LSI Corporation
number: 08332505
owner_city: Milpitas
owner_country: US
publication_date: 20080304
---
This invention relates generally to storage systems and particularly to path availability for storage systems.

Storage systems provide data storage for computer systems. Attached storage systems allow storage devices to be attached to computer systems for use. Direct attached storage DAS refers to a storage system directly attached to a computer system without a storage network in between. Network attached storage NAS is a file level computer data storage connected to a computer network providing data access to heterogeneous network clients of a computer system. A storage area network SAN is an architecture to attach remote computer storage devices such as disk arrays tape libraries and optical jukeboxes to servers so as to appear locally attached to the computer system.

Accordingly the present disclosure provides testing of a storage system that may prevent a zero path scenario from occurring. The storage array controller LUNs which may be configured to be accessible by a host may be automatically discovered. A failover driver of a host may be queried one or more times during testing to determine which LUNs are currently available to the host with storage controllers of a storage array. The test may compare the storage array controller LUNs which may be configured to be accessible by the host with the LUNs which are currently available to the host as associated with storage controllers of a storage array to prevent a zero path scenario from occurring.

The test may verify at least one path exists for each LUN to a storage controller of a storage array before injecting an error into another storage controller of the storage array. The test may pause to prevent a zero path scenario from occurring by locking alternate storage controllers of a storage array when an error is injected to a storage controller of the storage array. The test may then unlock the locked controller once the test has verified that a zero path condition will not occur. The test may lock or unlock storage controllers utilizing a semaphore mechanism associated with the respective controller.

The test may also track and record the time it takes for the enumeration process to complete when a path is restored. This time may be utilized to optimize the enumeration process handling software.

The present disclosure also provides verification of the configuration of a storage system. The configuration verification may verify that the storage array controller LUNs which are configured to be accessible by a host are actually accessible by the host. The storage array controller LUNs which are configured to be accessible by a host may be automatically discovered. A failover driver of a host may be queried one or more times during testing to determine which LUNs are currently accessible by the host as associated with storage controllers of a storage array. The configuration verification may compare the storage array controller LUNs which are configured to be accessible by a host with the LUNs which are currently accessible by the host as associated with storage controllers of a storage array to verify the configuration of the storage system. If the configuration verification is unable to verify the configuration of storage system the configuration verification may display an error.

It is to be understood that both the foregoing general description and the following detailed description are exemplary and explanatory only and are not restrictive of the invention as claimed. The accompanying drawings which are incorporated in and constitute a part of the specification illustrate an embodiment of the invention and together with the general description serve to explain the principles of the invention.

Reference will now be made in detail to the presently preferred embodiments of the invention examples of which are illustrated in the accompanying drawings.

Computer systems may interact with storage arrays of attached storage systems via storage array controllers. The storage array controllers may present the storage of the storage arrays as virtual partition or volume . A LUN logical unit number is the address of a virtual partition or volume of the storage of the storage array and by extension the virtual partition itself. Storage arrays may have one or more redundant controllers to provide multiple paths between the host computer system and the LUN s of the storage array. In this way a storage controller of a storage array may fail and the LUNs of the storage array are still accessible by the host.

Storage systems storage arrays and storage controllers may be tested to verify failure handling. Test sequences may include scripts run to simulate failure conditions by injecting faults including but not limited to cable insertion removal storage controller failovers and or storage controller reboots to storage controllers. Behaviors of storage systems storage arrays and storage controllers resulting from such testing may be observed recorded and or analyzed to determine whether failure conditions were handled appropriately.

Many operating systems particularly operating systems that utilize hot plug the ability to add or remove components of a computer while it is operating or plug and play a feature that allows the addition of a new device to a computer without requiring reconfiguration or manual installation of device drivers including but not limited to Windows Vista and SUS Linux 10 may implement functionality where resources relating to devices including but not limited to mice keyboards and disk drives may be dynamically allocated and released as those devices are attached or removed from the host system. The specific details of how an operating system determines these configuration changes vary depending on platform and device. However generally operating systems may make various requests to a device that is attached to obtain necessary information and one or more kernel user mode processes may be involved. The process of dynamically allocating resources to a device and preparing the device for use is referred to as the enumeration process.

Timing issues may arise during testing of storage system storage array storage controller A and or storage controller B when the enumeration process exceeds the amount of time a test script is given to perform a test step before continuing to the next step. For example a storage controller failover test may take storage controller A offline for ten minutes wait for ten minutes and then bring storage controller A back online. Ten minutes later storage controller B may be taken offline for ten minutes and then brought online again. This process may then repeat with storage controller A . If the enumeration process has not completed for storage controller A before storage controller B is taken offline a zero path scenario where there are no paths available between a LUN and the associated storage array may result. In such a case there may be no path available from host to volume . This is a faulty scenario to inject during a test and causes false test failures. This sort of false test failure results in lost test time and engineering resources used to debug a problem whose root cause is a faulty test scenario.

Testing of storage system storage array storage controller A and or storage controller B may prevent a zero path scenario from occurring. The storage array controller LUNs which may be configured to be accessible by host may be automatically discovered. World Wide Names WWN a unique identifier on a storage network may be used between HBA the LUN mapping to volume storage array controller A and storage array controller as the unique identifier to discover this relationship by querying mapping data structures of storage array and HBA of host . A failover driver of host may be queried one or more times during testing to determine which LUNs are currently available to host as associated with storage controller A and or storage controller B . The test may compare the storage array controller LUNs which may be configured to be accessible by host with the LUNs which are currently available to host as associated with storage controller A and or storage controller to prevent a zero path scenario from occurring between host and storage array . The test may verify at least one path exists for each LUN to storage controller A before injecting an error into storage controller B or may verify at least one path exists for each LUN to storage controller B before injecting an error into storage controller A . The test may pause to prevent a zero path scenario from occurring between host and storage array . In order to pause the test may lock storage controller A when an error is injected to storage controller B or may lock storage controller B when an error is injected to storage controller A . Locking storage controller A and or storage controller B may not affect the operation of storage controller A and or storage controller B but rather may prevent an error from being injected while locked. Locking storage controller A and or storage controller B may occur outside the knowledge and operation of storage array . The test may then unlock the locked controller once the test has verified that a zero path condition will not occur. The test may lock or unlock storage controller A and or storage controller B utilizing a semaphore mechanism associated with the respective controller. The semaphore mechanism may include but is not limited to a software data structure and or the presence or absence of a file.

The test may also track and record the time it takes for the enumeration process to complete when a path between host and storage array is restored. This time may be utilized to optimize the enumeration process handling software.

A set of storage array controller LUNs which may be configured to be accessible by host may be automatically generated by determining the WWN of storage array determining the WWNs of the LUNs owned by storage array determining the WWNs of HBA of host that the LUNs are mapped to and by determining host network address including but not limited to internet protocol address or IP or DNS domain name service name to HBA WWN. The WWN of storage array may be determined by querying storage array via the network RPC remote procedure call API application programming interface of storage array . Alternatively the test may provide a list of the WWN of storage array associated with the network addresses including but not limited to IP addresses of storage controller A and storage controller B . This may yield relationships of storage arrays storage controller network addresses storage controller WWNs. The WWNs of the LUNs owned by storage array may be determined by querying storage array via the network RPC API of storage array . This may yield relationships of storage controller WWNs LUN WWNs. The WWNs of HBA of host that the LUNs are mapped to may be determined by querying storage array via the network RPC API of storage array . This may yield relationships of LUN WWNs HBA WWNs. The host network address to HBA WWN may be determined querying host for the WWN of HBA . Host may be queried for the WWN of HBA utilizing a HBA API of HBA . Alternatively the host network address to HBA WWN may be determined from input to the test. By determining the WWN of storage array determining the WWNs of the LUNs owned by storage array determining the WWNs of HBA of host that the LUNs are mapped to and by determining host network address to HBA WWN a set storage array controller LUNs which may be configured to be accessible by host may be automatically generated.

A set of LUNs which are currently available to host as associated with storage controller A and or storage controller B may be generated by querying a failover driver of host . The failover driver of host is a driver which handles the failure of a path to a LUN by providing access to the LUN over an alternate path when a first path to a LUN fails. The failover driver of host may store information relating to the LUNs which are currently available to host as associated with storage controller A and or storage controller B .

Referring again to the test may comprise computer executable instructions embodied in a tangible media. The computer executable instructions may be tangibly embodied in a storage device of host including but not limited to a main memory a hard drive a CD a DVD a cache memory and or a flash memory. The computer executable instructions may be executed by host . Alternatively the computer executable instructions may be embodied in a storage device of a test computing device including but not limited to a main memory a hard drive a CD a DVD a cache memory and or a flash memory. The test computing device may be communicably connected to host and or storage array and may execute the computer executable instructions.

Referring now to a method for performing a test on a storage system in accordance with an exemplary embodiment of the present invention is illustrated. In step run a test on a storage system comprising a host and a storage array. In step generate a first set of at least one path configured to be accessible between a LUN of said storage array and said host. Generating a first set of at least one path configured to be accessible between a LUN of said storage array and said host may comprise querying said storage array to determine a WWN of said storage array a WWN for each LUN of said storage array and a WWN of a HBA associated with each one of said each LUN of said storage array. Querying said storage array may utilize a RPC API of said storage array. Generating a first set of at least one path configured to be accessible between a LUN of said storage array and said host may comprise querying said host to determine a network address of said host associated with said WWN of said HBA. Generating a first set of at least one path configured to be accessible between a LUN of said storage array and said host may comprise obtaining a WWN of said storage array from a first input to said test and obtaining a network address of said host associate with said WWN of said HBA from a second input to said test. In step generate a second set of at least one path accessible between said LUN of said storage array and said host. Generating a second set of at least one path accessible between said LUN of said storage array and said host may comprise querying a failover driver of said host. In step compare the first set to the second set. In step determine a path of said first set associated with a first controller of said storage array is present in said second set prior to injecting a fault to a second controller of said storage array. Determining a path of said first set associated with a first controller of said storage array is present in said second set prior to injecting a fault to a second controller of said storage array may comprise locking said second controller where said fault cannot be injected to said second controller while locked determining a path of said first set associated with said first controller of said storage array is present in said second set and unlocking said second controller. Locking said second controller may not affect the operation of said second controller but rather may prevent an error from being injected while locked. Locking of said second controller may occur outside the knowledge and operation of the storage array. Locking said second controller may be performed utilizing a semaphore associated with said second controller. In step inject said fault to said second controller of said storage array.

Referring now to a method for performing a test on a storage system in accordance with an alternative embodiment of the present invention is illustrated. In step run a test on a storage system comprising a host and a storage array. In step generate a first set of at least one path configured to be accessible between a LUN of said storage array and said host. Generating a first set of at least one path configured to be accessible between a LUN of said storage array and said host may comprise querying said storage array to determine a WWN of said storage array a WWN for each LUN of said storage array and a WWN of a HBA associated with each one of said each LUN of said storage array. Querying said storage array may utilize a RPC API of said storage array. Generating a first set of at least one path configured to be accessible between a LUN of said storage array and said host may comprise querying said host to determine a network address of said host associated with said WWN of said HBA. Generating a first set of at least one path configured to be accessible between a LUN of said storage array and said host may comprise obtaining a WWN of said storage array from a first input to said test and obtaining a network address of said host associate with said WWN of said HBA from a second input to said test. In step generate a second set of at least one path accessible between said LUN of said storage array and said host. Generating a second set of at least one path accessible between said LUN of said storage array and said host may comprise querying a failover driver of said host. In step compare the first set to the second set. In step determine a path of said first set associated with a first controller of said storage array is present in said second set prior to injecting a fault to a second controller of said storage array. Determining a path of said first set associated with a first controller of said storage array is present in said second set prior to injecting a fault to a second controller of said storage array may comprise locking said second controller where said fault cannot be injected to said second controller while locked determining a path of said first set associated with said first controller of said storage array is present in said second set and unlocking said second controller. Locking said second controller may not affect the operation of said second controller but rather may prevent an error from being injected while locked. Locking of said second controller may occur outside the knowledge and operation of the storage array. Locking said second controller may be performed utilizing a semaphore associated with said second controller. In step inject said fault to said second controller of said storage array. In step recover said second controller of said storage array from said fault. In step update said second set of at least one path accessible between said LUN of said storage array and said host. In step determine a path of said first set associated with said second controller of said storage array is present in said second set prior to injecting an additional fault to said first controller of said storage array. Determining a path of said first set associated with said second controller of said storage array is present in said second set prior to injecting a fault to said first controller of said storage array may comprise locking said first controller where said fault cannot be injected to said first controller while locked determining a path of said first set associated with said second controller of said storage array is present in said second set and unlocking said first controller. Locking said first controller may not affect the operation of said first controller but rather may prevent an error from being injected while locked. Locking of said first controller may occur outside the knowledge and operation of the storage array. Locking said first controller may be performed utilizing a semaphore associated with said first controller. In step inject said additional fault to said first controller of said storage array.

Referring now to a method for performing a test on a storage system in accordance with an alternative embodiment of the present invention is illustrated. In step run a test on a storage system comprising a host and a storage array. In step generate a first set of at least one path configured to be accessible between a LUN of said storage array and said host. Generating a first set of at least one path configured to be accessible between a LUN of said storage array and said host may comprise querying said storage array to determine a WWN of said storage array a WWN for each LUN of said storage array and a WWN of a HBA associated with each one of said each LUN of said storage array. Querying said storage array may utilize a RPC API of said storage array. Generating a first set of at least one path configured to be accessible between a LUN of said storage array and said host may comprise querying said host to determine a network address of said host associated with said WWN of said HBA. Generating a first set of at least one path configured to be accessible between a LUN of said storage array and said host may comprise obtaining a WWN of said storage array from a first input to said test and obtaining a network address of said host associate with said WWN of said HBA from a second input to said test. In step generate a second set of at least one path accessible between said LUN of said storage array and said host. Generating a second set of at least one path accessible between said LUN of said storage array and said host may comprise querying a failover driver of said host. In step compare the first set to the second set. In step determine a path of said first set associated with a first controller of said storage array is present in said second set prior to injecting a fault to a second controller of said storage array. Determining a path of said first set associated with a first controller of said storage array is present in said second set prior to injecting a fault to a second controller of said storage array may comprise locking said second controller where said fault cannot be injected to said second controller while locked determining a path of said first set associated with said first controller of said storage array is present in said second set and unlocking said second controller. Locking said second controller may not affect the operation of said second controller but rather may prevent an error from being injected while locked. Locking of said second controller may occur outside the knowledge and operation of the storage array. Locking said second controller may be performed utilizing a semaphore associated with said second controller. In step inject said fault to said second controller of said storage array. In step recover said second controller of said storage array from said fault. In step record a first time when recovering said second controller of said storage array. In step update said second set of at least one path accessible between said LUN of said storage array and said host. In step determine a path of said first set associated with said second controller of said storage array is present in said second set prior to injecting an additional fault to said first controller of said storage array. Determining a path of said first set associated with said second controller of said storage array is present in said second set prior to injecting a fault to said first controller of said storage array may comprise locking said first controller where said fault cannot be injected to said first controller while locked determining a path of said first set associated with said second controller of said storage array is present in said second set and unlocking said first controller. Locking said first controller may not affect the operation of said first controller but rather may prevent an error from being injected while locked. Locking of said first controller may occur outside the knowledge and operation of the storage array. Locking said first controller may be performed utilizing a semaphore associated with said first controller. In step record a second time when determining a path of said first set associated with said second controller of said storage array is present in said second set. In step measure a time difference between said first time and said second time. The time difference may be recorded. In step inject said additional fault to said first controller of said storage array.

Missing paths between LUNs and the associated storage array may also occur if the storage system host and or switch coupling storage system and host together are not configured properly. It may be difficult for the user of storage system to become aware that paths are missing between host and storage array . Improper configuration may result in unintended lack of availability of data or lack of redundancy in the path to the data. For example if HBA switch and or storage controller A and storage controller B were improperly configured volume would not be available to host . By way of another example if either storage controller A or storage controller B were improperly configured there would be a lack of redundancy in the path between host and volume .

In an alternative embodiment of the present disclosure the configuration of storage system may be verified. The configuration verification may verify that the storage array controller LUNs which are configured to be accessible by host are actually accessible by host . The storage array controller LUNs which are configured to be accessible by host may be automatically discovered. World Wide Names WWN a unique identifier on a storage network may be used between HBA the LUN mapping to volume storage array controller A and storage array controller as the unique identifier to discover this relationship by querying mapping data structures of storage array and HBA of host . A failover driver of host may be queried one or more times during testing to determine which LUNs are currently accessible by host as associated with storage controller A and or storage controller B . The configuration verification may compare the storage array controller LUNs which are configured to be accessible by host with the LUNs which are currently accessible by host as associated with storage controller A and or storage controller to verify the configuration of storage system . If the configuration verification is unable to verify the configuration of storage system the configuration verification may display an error. The error may be displayed on an output device including but not limited to a CRT a LCD and a printer not shown of host and or test computing device . The error may be recorded to storage device of host and or storage device of test computing device .

The configuration verification may comprise computer executable instructions embodied in a tangible media. The computer executable instructions may be tangibly embodied in a storage device of host including but not limited to a main memory a hard drive a CD a DVD a cache memory and or a flash memory. The computer executable instructions may be executed by host . Alternatively the computer executable instructions may be embodied in a storage device of a test computing device including but not limited to a main memory a hard drive a CD a DVD a cache memory and or a flash memory. The test computing device may be communicably connected to host and or storage array and may execute the computer executable instructions.

Referring now to a method for verifying the configuration of a storage system in accordance with an exemplary embodiment of the present invention is illustrated. In step generate a first set of at least one path configured to be accessible between a LUN of said storage array and said host. Generating a first set of at least one path configured to be accessible between a LUN of said storage array and said host may comprise querying said storage array to determine a WWN of said storage array a WWN for each LUN of said storage array and a WWN of a HBA associated with each one of said each LUN of said storage array. Querying said storage array may utilize a RPC API of said storage array. Generating a first set of at least one path configured to be accessible between a LUN of said storage array and said host may comprise querying said host to determine a network address of said host associated with said WWN of said HBA. Generating a first set of at least one path configured to be accessible between a LUN of said storage array and said host may comprise obtaining a WWN of said storage array from a first input to said test and obtaining a network address of said host associate with said WWN of said HBA from a second input to said test. In step generate a second set of at least one path accessible between said LUN of said storage array and said host. Generating a second set of at least one path accessible between said LUN of said storage array and said host may comprise querying a failover driver of said host. In step compare the first set to the second set. In step determine a path of said first set associated with a first controller of said storage array is present in said second set.

Referring now to a method for verifying the configuration of a storage system in accordance with an alternative embodiment of the present invention is illustrated. In step generate a first set of at least one path configured to be accessible between a LUN of said storage array and said host. Generating a first set of at least one path configured to be accessible between a LUN of said storage array and said host may comprise querying said storage array to determine a WWN of said storage array a WWN for each LUN of said storage array and a WWN of a HBA associated with each one of said each LUN of said storage array. Querying said storage array may utilize a RPC API of said storage array. Generating a first set of at least one path configured to be accessible between a LUN of said storage array and said host may comprise querying said host to determine a network address of said host associated with said WWN of said HBA. Generating a first set of at least one path configured to be accessible between a LUN of said storage array and said host may comprise obtaining a WWN of said storage array from a first input to said test and obtaining a network address of said host associate with said WWN of said HBA from a second input to said test. In step generate a second set of at least one path accessible between said LUN of said storage array and said host. Generating a second set of at least one path accessible between said LUN of said storage array and said host may comprise querying a failover driver of said host. In step compare the first set to the second set. In step determine a path of said first set associated with a first controller of said storage array is present in said second set. In step display an error when a LUN of the first set is not present in the second set. The error may be displayed on an output device including but not limited to a CRT a LCD and a printer not shown and or recorded in storage device including but not limited to a main memory a cache memory a hard disk and a flash memory .

The present disclosure provides testing of a storage system that may prevent a zero path scenario from occurring. The storage array controller LUNs which may be configured to be accessible by one or more hosts may be automatically discovered. The test may compare the storage array controller LUNs which may be configured to be accessible by one or more hosts with the LUNs which are currently available to one or more host as associated with storage controllers of a storage array to prevent a zero path scenario from occurring. The test may also track and record the time it takes for the enumeration process to complete when a path between a host and a storage array is restored. This time may be utilized to optimize the enumeration process handling software. The present disclosure also provides verification of the configuration of a storage system. The configuration verification may verify that the storage array controller LUNs which are configured to be accessible by a host are actually accessible by the host. The storage array controller LUNs which are configured to be accessible by a host may be automatically discovered. The configuration verification may compare the storage array controller LUNs which are configured to be accessible by a host with the LUNs which are currently accessible by the host as associated with storage controllers of a storage array to verify the configuration of storage system. If the configuration verification is unable to verify the configuration of the storage system the configuration verification may display an error.

It is understood that the specific order or hierarchy of steps in the processes disclosed is an example of exemplary approaches. Based upon design preferences it is understood that the specific order or hierarchy of steps in the processes may be rearranged while remaining within the scope of the present invention. The accompanying method claims present elements of the various steps in a sample order and are not meant to be limited to the specific order or hierarchy presented.

It is believed that the present invention and many of its attendant advantages will be understood by the foregoing description. It is also believed that it will be apparent that various changes may be made in the form construction and arrangement of the components thereof without departing from the scope and spirit of the invention or without sacrificing all of its material advantages. The form herein before described being merely an explanatory embodiment thereof it is the intention of the following claims to encompass and include such changes.

