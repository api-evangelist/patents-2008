---

title: Proxy direct 3-D device and remote rendering
abstract: Systems, methods and computer readable media are disclosed for an overlaying requester to send graphics commands to a game connected to the overlaying requester via a dummy graphics application programming interface (API) object that the game will render over normal game-play graphics. In addition to allowing the overlaying requester to send graphics commands to the game in general, the dummy graphics API object can also limit the extent of the interaction between the overlaying requester and the computerized gaming system.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08120622&OS=08120622&RS=08120622
owner: Microsoft Corporation
number: 08120622
owner_city: Redmond
owner_country: US
publication_date: 20080115
---
In recent years online multi player services for video games have exploded in popularity. For example the popular XBOX LIVE service made available by Microsoft Corporation of Redmond Wash. allows gamers anywhere in the world to play with and against each other. Other online multi player services presently include the PLAYSTATION NETWORK service made available by Sony Corporation of America of Inglewood Calif. and the WIICONNECT24 service made available by Nintendo of America Corporation of Redmond Wash.

Frequently such a service will wish to send graphics to be displayed by the game on the player s video output device such as profile management friends lists messages and game settings. To ensure that such things are rendered the same each time for the sake of consistency across games the service must give to the game pre rendered graphics. Since the service renders those graphics but the game rendering happens inside of the game process it is not possible to have the service render on top of the game directly. There then exists a need to enable the functionality of overlaying graphics rendered by the service on top of graphics rendered by the game.

This application is related by subject matter to U.S. patent application Ser. No. 12 014 680 internal reference number MSFT 6005 filed on Jan. 15 2008.

In an example embodiment of the present disclosure a method is provided to allow an overlaying requester that is connected to a game through a dummy graphics API object to overlay drawings on top of the game s visual output. The term overlaying requestor comprises executing computing devices. For instance an overlaying requester may comprise but is not limited to another game an online multi player gaming service or a remote desktop application. The overlaying requester may make resource calls to this dummy API object as if it would make calls directly to a game so the overlaying requester need not be modified in any way for this method to operate properly. Once the dummy API object receives a resource request it then passes that request on to the game s actual API object which then renders the service s image overlaid upon the present game image. Under this method the overlaying requester may have the game display graphical output where it would otherwise be unable to do so. In one embodiment the overlaying requester comprises an online multi player gaming service executing on separate computer hardware from the game and connected to the game via a computer network. This method includes but is not limited to initializing a dummy graphics application programming interface API object initializing a dummy graphics application programming interface API object initializing by said graphics API object a first communication link between an overlaying requester and said dummy graphics API object initializing by said graphics API object a second communication link between said graphics API object and a game receiving by said graphics API object a first data on said first communication link sending by said graphics API object said first data on said second communication link and displaying by said graphics API object on a visual output device said first data overlaid on top of a second data from said

In another example embodiment of the present disclosure a system that is capable of performing a function equivalent to that of the above method includes but is not limited to a processor a computer readable medium having a first stored instructions executable by said processor said first instructions configured to cause said processor to exchange game information with an overlaying requester and the computer readable medium having a second stored instructions further launching a graphics API object configured to intercept a first data transferred between the game and the overlaying requester. In addition to the foregoing other aspects are described in the claims drawings and text forming a part of the present disclosure.

In another embodiment of the present disclosure a computer readable storage medium having a plurality of instructions stored thereon is provided which when executed by a processor associated with a system containing stored files within a storage device associated with a receiving portal command executor and rights verifier cause the processor to perform the steps of but is not limited to performing the steps of executing a dummy graphics application programming interface API object enabling a first communication link between an overlaying requester and said graphics API object enabling by said graphics API object a second communication link between a game and said graphics API object receiving by the graphics API object from the overlaying requester a first data sending by said graphics API object said first data on said second communication link and causing said game to display on a visual output device said first data overlaid on top of a second data from said game. In addition to the foregoing other system aspects are described in the claims drawings and text forming a part of the present application.

The foregoing is a summary and thus contains by necessity simplifications generalizations and omissions of detail. Those skilled in the art will appreciate that the summary is illustrative only and is not intended to be in any way limiting.

Certain specific details are set forth in the following description and figures to provide a thorough understanding of various embodiments of the invention. Certain well known details often associated with computing and software technology are not set forth in the following disclosure however to avoid unnecessarily obscuring the various embodiments of the invention. Further those of ordinary skill in the relevant art will understand that they can practice other embodiments of the invention without one or more of the details described below. Finally while various methods are described with reference to steps and sequences in the following disclosure the description as such is for providing a clear implementation of embodiments of the invention and the steps and sequences of steps should not be taken as required to practice this invention.

Operation begins the operational process Operation can be triggered for example in response to a determination that a connection to an online gaming service is requested.

In an embodiment where the overlaying requester comprises an online multi player gaming service a game may attempt to connect to the online multi player gaming services for a variety of reasons. Chief among them is for the purpose of interacting in the game between multiple players such as two people in different locations each using a gaming system to connect to the online multi player gaming service for the purpose of playing the same game against each other. Furthermore once connected the environment may be used as a communications device either via text audio or video and in real time or asynchronously.

As depicted by operation illustrates initializing a dummy graphics application programming interface API object. In one embodiment this is an object that appears to the service to be an actual API object and interfaces with the service in the same way that an actual object would act. However unlike an actual API object this dummy object lacks the ability to itself manipulate a visual output device. Instead the object takes the data received from the overlaying requester which is behaving as if it communicating directly with an actual graphics API object and passes it on to the game which contains an actual graphics API object. Within an operational environment such as those depicted in or a processor within a computerized gaming system may execute first stored instructions on a computer readable medium configured to launch a dummy graphics API object . In some example embodiments of the present disclosure the processor may include but is not limited to a general purpose microprocessor.

As depicted by operation illustrates initializing by said graphics API object a first communication link between an overlaying requester and said dummy graphics API object. Within an operational environment such as the one as depicted in or a processor within a computerized gaming system may initialize with the service a first communication link . Initializing a communication link may involve but is not limited to the dummy graphics API object and the overlaying requester exchanging a data that establishes things such as the protocol to be used the respective network ports to be used for the communication link and the respective network addresses such as internet protocol IP addresses that the dummy graphics API object and the overlaying requester each possess.

In some example embodiments of the present disclosure wherein both the dummy graphics API object and the overlaying requester are executing on the same computing environment the communication link may include but is not limited to an inter process communication IPC link. In another embodiment the communication link may include but is not limited to a network communications link such as one that communicates via the transmission control protocol internet protocol TCP IP .

As depicted by operation illustrates initializing by said graphics API object a second communication link between said graphics API object and a game. Within an operational environment such as the one as depicted in or a processor within a computerized gaming system may initialize with the game a second communication link . In some example embodiments of the present disclosure the communication link may include but is not limited to a transmission control protocol internet protocol TCP IP communication link. Initializing a communication link may involve but is not limited to the dummy graphics API object and the game exchanging a data that establishes things such as the protocol to be used the respective network ports to be used for the communication link and the respective network addresses such as internet protocol IP addresses that the dummy graphics API object and the game each possess.

In one embodiment the game would lack notice that it was dealing with the dummy graphics API object and behaves as if it was communicating directly with the overlaying requester. In another embodiment the game would have notice that it was dealing with the dummy graphics API object and behave in accordance with that notice.

As depicted by operation illustrates receiving by said graphics API object a first data on said first communication link. In one embodiment of the present disclosure the first data may comprise a single data packet. In other embodiments the first data may comprise a stream of data packets. Furthermore for example the first data may comprise a message or menu that the service wishes the game to display over the game itself on a visual output device.

As depicted by operation illustrates sending by said graphics API object said first data on said second communication link. In one embodiment of the present disclosure this act of generating a modified data may comprise passing said first data to the game without manipulating it in any form. This would further the function of the dummy graphics API object acting transparently as to the overlaying requester so that the overlaying requester believes it is communicating directly with the game.

As depicted by operation illustrates displaying by said graphics API object on a visual output device said first data overlaid on top of a second data from said game. In one embodiment this visual output device is the visual output device which the player is directly using to play the game. Furthermore the first data may be overlaid upon the second data in a 3D manner such as with the use of shadows to simulate distance between graphical layers.

In the present context trusted refers to a system or set of computer readable instructions which contains some form of meta data possibly a check sum that attests to the fact that the computer readable instructions have not been modified since the meta data has been added to them. The trusting object here the online multi player gaming service can then be sure that the trusted computer readable instructions exist exactly as they did when the meta data was added to them. Given that a game may be considered untrusted when it does not qualify as trusted for instance if it lacks the aforementioned meta data indicative of being trusted.

A trusted proxy when loaded acts as an intermediary between games and online gaming services. The trusted proxy could be trusted according to the meta data techniques discussed above or according to a variety of other techniques recognizable to one skilled in the art. The trusted proxy could exist on the same computing device as the game as the online multi player server or on a computing device independent of either of those two devices.

Computer typically includes a variety of computer readable media. Computer readable media can be any available media that can be accessed by computer and includes both volatile and nonvolatile media removable and non removable media. By way of example and not limitation computer readable media may comprise computer storage media and communication media. Computer storage media includes both volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Computer storage media includes but is not limited to random access memory RAM read only memory ROM electronically erasable programmable read only memory EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical disk storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by computer .

Communication media typically embodies computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term modulated data signal means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media includes wired media such as a wired network or direct wired connection and wireless media such as acoustic RF infrared and other wireless media. Combinations of the any of the above should also be included within the scope of computer readable media.

The system memory includes computer storage media in the form of volatile and or nonvolatile memory such as read only memory ROM and random access memory RAM . A basic input output system BIOS containing the basic routines that help to transfer information between elements within computer such as during start up is typically stored in ROM . RAM typically contains data and or program modules that are immediately accessible to and or presently being operated on by processing unit . By way of example and not limitation illustrates operating system application programs other program modules and program data .

The computer may also include other removable non removable volatile nonvolatile computer storage media. By way of example only illustrates a hard disk drive that reads from or writes to non removable nonvolatile magnetic media a magnetic disk drive that reads from or writes to a removable nonvolatile magnetic disk and an optical disk drive that reads from or writes to a removable nonvolatile optical disk such as a CD ROM or other optical media. Other removable non removable volatile nonvolatile computer storage media that can be used in the exemplary operating environment include but are not limited to magnetic tape cassettes flash memory cards digital versatile disks digital video tape solid state RAM solid state ROM and the like. The hard disk drive is typically connected to the system bus through a non removable memory interface such as interface and magnetic disk drive and optical disk drive are typically connected to the system bus by a removable memory interface such as interface .

The drives and their associated computer storage media discussed above and illustrated in provide storage of computer readable instructions data structures program modules and other data for the computer . In for example hard disk drive is illustrated as storing operating system application programs other program modules and program data . Note that these components can be either the same as or different from operating system application programs other program modules and program data . Operating system application programs other program modules and program data are given different numbers here to illustrate that at a minimum they are different copies. A user may enter commands and information into the computer through input devices such as a keyboard and pointing device commonly referred to as a mouse trackball or touch pad. Other input devices not shown may include a microphone joystick game pad satellite dish scanner or the like. These and other input devices are often connected to the processing unit through a user input interface that is coupled to the system bus but may be connected by other interface and bus structures such as a parallel port game port or a universal serial bus USB . A monitor or other type of display device is also connected to the system bus via an interface such as a video interface . In addition to the monitor computers may also include other peripheral output devices such as speakers and printer which may be connected through an output peripheral interface .

The computer may operate in a networked environment using logical connections to one or more remote computers such as a remote computer . The remote computer may be a personal computer a server a router a network PC a peer device or other common network node and typically includes many or all of the elements described above relative to the computer although only a memory storage device has been illustrated in . The logical connections depicted in include a local area network LAN and a wide area network WAN but may also include other networks. Such networking environments are commonplace in offices enterprise wide computer networks intranets and the Internet.

When used in a LAN networking environment the computer is connected to the LAN through a network interface or adapter . When used in a WAN networking environment the computer typically includes a modem or other means for establishing communications over the WAN such as the Internet. The modem which may be internal or external may be connected to the system bus via the user input interface or other appropriate mechanism. In a networked environment program modules depicted relative to the computer or portions thereof may be stored in the remote memory storage device. By way of example and not limitation illustrates remote application programs as residing on memory device . It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used.

It should be understood that the various techniques described herein may be implemented in connection with hardware or software or where appropriate with a combination of both. Thus the methods and apparatus of the presently disclosed subject matter or certain aspects or portions thereof may take the form of program code i.e. instructions embodied in tangible media such as floppy diskettes CD ROMs hard drives or any other machine readable storage medium wherein when the program code is loaded into and executed by a machine such as a computer the machine becomes an apparatus for practicing the presently disclosed subject matter. In the case of program code execution on programmable computers the computing device generally includes a processor a storage medium readable by the processor including volatile and non volatile memory and or storage elements at least one input device and at least one output device. One or more programs may implement or utilize the processes described in connection with the presently disclosed subject matter e.g. through the use of an API reusable controls or the like. Such programs are preferably implemented in a high level procedural or object oriented programming language to communicate with a computer system. However the program s can be implemented in assembly or machine language if desired. In any case the language may be a compiled or interpreted language and may be combined with hardware implementations.

The foregoing detailed description has set forth various embodiments of the systems and or processes via the use of block diagrams flowcharts and or examples. Insofar as such block diagrams flowcharts and or examples contain one or more functions and or operations it will be understood by those within the art that each function and or operation within such block diagrams flowcharts or examples can be implemented individually and or collectively by a wide range of hardware software firmware or virtually any combination thereof.

While particular aspects of the present subject matter described herein have been shown and described it will be apparent to those skilled in the art that based upon the teachings herein changes and modifications may be made without departing from the subject matter described herein and its broader aspects and therefore the appended claims are to encompass within their scope all such changes and modifications as are within the true spirit and scope of the subject matter described herein.

