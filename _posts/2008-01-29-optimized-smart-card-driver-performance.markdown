---

title: Optimized smart card driver performance
abstract: By splitting a smart card driver into multiple components, with one component residing on the mobile communication device and another component residing on the smart card reader, the smart card reader driver component is enabled to do more than merely relay communication between the mobile communication device and the smart card. By transferring part of the communication handling of the smart card driver to the smart card reader, a reduction in communication over the connection between the smart card reader and mobile communication device advantageously results in a more efficient transaction.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07942325&OS=07942325&RS=07942325
owner: Research In Motion Limited
number: 07942325
owner_city: Waterloo, Ontario
owner_country: CA
publication_date: 20080129
---
The present application relates generally to communication between a device and a smart card reader for reading a smart card and more specifically to optimizing the performance of a smart card driver.

A device that reads information from or writes information to a smart card typically does so using a smart card reader. The smart card reader may be connected e.g. through a directly wired connection or a wireless connection to the device. Specific software called a driver is generally executed by the device to facilitate reading from and writing to the memory component of the smart card using the smart card reader. The driver includes an application programming interface API that allows other programs to issue requests and commands that will be understood by the driver. An API generally comprises a source code interface that a computer system or program library provides in order to support requests for services to be made of it by a computer program.

When the connection between the device and the smart card reader is wireless for example using the Bluetooth wireless communication protocol some complications arise. In a typical transaction the device transmits over the wireless connection a request to the smart card reader and the smart card reader forwards the request to the smart card. The smart card then responds to the request with a response and the smart card reader forwards the response over the wireless connection to the device. Unfortunately the speed e.g. measured in bits per second generally available for the wireless connection limits the speed with which the device can make use of the smart card e.g. to authenticate a user of the device. The smart card driver is located on the device and has knowledge of how to talk to the smart card which is located in the smart card reader. There are many cases where in order to perform an operation there is a requirement for several transactions.

By splitting a smart card driver into multiple components with one component residing on the mobile communication device and the other component residing on the smart card reader the smart card reader driver component is enabled to do more than merely relay communication between the mobile communication device and the smart card. By transferring part of the communication handling of the smart card driver to the smart card reader a reduction in communication over the connection between the smart card reader and mobile communication device advantageously results in a more efficient transaction.

In accordance with an aspect of the present application there is provided a method of communicating with a smart card. The method includes receiving a command code message from a device determining an interpretation of the command code message and according to the interpretation of the command code message transmitting a plurality of request command Application Protocol Data Units to a smart card. The method further includes receiving a plurality of response Application Protocol Data Units from the smart card each individual response Application Protocol Data Unit of the plurality of response Application Protocol Data Units corresponding to an individual request command Application Protocol Data Unit among the plurality of request command Application Protocol Data Units amalgamating the plurality of response Application Protocol Data Units into an amalgamated response and transmitting the amalgamated response to the device. In other aspects of the present application a smart card reader is provided for carrying out this method and a computer readable medium is provided for adapting a processor in a smart card reader to carry out this method.

Other aspects and features of the present application will become apparent to those of ordinary skill in the art upon review of the following description of specific embodiments of the application in conjunction with the accompanying figures.

The housing may be elongated vertically or may take on other sizes and shapes including clamshell housing structures . Where the keyboard includes keys that are associated with at least one alphabetic character and at least one numeric character the keyboard may include a mode selection key or other hardware or software for switching between alphabetic entry and numeric entry.

In addition to the microprocessor other parts of the mobile communication device are shown schematically in . These may include a communications subsystem a short range communications subsystem the keyboard and the display . The mobile communication device may further include other input output devices such as a set of auxiliary I O devices a serial port a speaker and a microphone . The mobile communication device may further include memory devices including a flash memory and a Random Access Memory RAM . Furthermore the mobile communication device may include various other device subsystems . The mobile communication device may have a battery to power the active elements of the mobile communication device . The mobile communication device may for instance comprise a two way radio frequency RF communication device having voice and data communication capabilities. In addition the mobile communication device may have the capability to communicate with other computer systems via the Internet.

Operating system software executed by the microprocessor may be stored in a computer readable medium such as the flash memory but may be stored in other types of memory devices such as a read only memory ROM or similar storage element. In addition system software specific device applications or parts thereof may be temporarily loaded into a volatile store such as the RAM . Communication signals received by the mobile device may also be stored to the RAM .

The microprocessor in addition to its operating system functions enables execution of software applications on the mobile communication device . A predetermined set of software applications that control basic device operations such as a voice communications module A and a data communications module B may be installed on the mobile communication device during manufacture. A smart card SC driver module C may also be installed on the mobile communication device during manufacture to implement aspects of the present disclosure. As well additional software modules illustrated as another software module N which may be for instance a personal information manager PIM application may be installed during manufacture. The PIM application may be capable of organizing and managing data items such as e mail messages calendar events voice mail messages appointments and task items. The PIM application may also be capable of sending and receiving data items via a wireless carrier network. The data items managed by the PIM application may be seamlessly integrated synchronized and updated via the wireless carrier network with the device user s corresponding data items stored or associated with a host computer system.

Communication functions including data and voice communications may be performed through the communication subsystem and through the short range communications subsystem .

The short range communications subsystem enables communication between the mobile communication device and other proximate systems or devices which need not necessarily be similar devices. For example the short range communications subsystem may include a Bluetooth communication module to provide for communication with the smart card reader where the smart card reader also implements a Bluetooth communication module. As another example the short range communications subsystem may include an infrared device to provide for communication with similarly enabled systems and devices.

The smart card reader microprocessor operates under stored program control with code or firmware being stored in the flash memory or other type of non volatile memory device or devices . As depicted in the stored programs e.g. firmware include an operating system program or code module and other programs or software application modules indicated generally by reference . The operating system module of the smart card reader further includes a smart card reader driver component .

The smart card reader driver component is responsible for coordinating communications between the smart card reader and the smart card and or the smart card driver module C of the mobile communication device . The operating system module code code for specific device application modules code for the smart card reader driver component or code components thereof may be temporarily loaded into a volatile storage medium such as the RAM . Received communication signals and other data may also be stored in the RAM . Additionally the storage component interface receives the smart card which may provide additional storage space for the smart card reader .

In one embodiment the smart card has a controller responsible for coordinating communications between the smart card and the smart card reader driver component of the smart card reader .

The stored program control i.e. software application modules for the smart card reader microprocessor may include a predetermined set of applications code components or software modules that control basic device operations for example management and security related control of the data of the smart card reader and may be installed on the smart card reader as a component of the software application modules during the manufacturing process. Further applications may also be loaded i.e. downloaded onto the smart card reader through the operation of the serial port the smart card reader short range communications subsystem or from the smart card . The downloaded code module or components are then installed by the user or automatically in the RAM or non volatile program memory e.g. the flash memory .

While the smart card reader driver component is shown to be an integrated portion of the operating system for security purposes e.g. individuals are not permitted to tamper with the smart card reader driver component the smart card reader driver component could be installed as one of the software applications so long as suitable security related precautions are taken to ensure that the smart card reader driver component cannot be modified or tampered with by unauthorized users.

The serial port may be a USB type interface port for interfacing or synchronizing with another device such as a personal computer or the mobile communication device . The serial port is used to set preferences through an external device or software application or exchange data with a device such as the mobile communication device . Such data may be stored on the smart card that is plugged into the storage component interface of the smart card reader . The serial port is also used to extend the capabilities of the smart card reader by providing for downloads to the smart card reader of information or software including user interface information.

The short range communications subsystem provides an interface for communication between the mobile communication device or personal computer and the smart card reader . In one embodiment the short range communications subsystem employs an infrared communication link or channel. In another embodiment the short range communications subsystem operates according to a wireless RF bus protocol such as Bluetooth . However the short range communications subsystem may operate according to any suitable local wired or wireless communication protocol so long as the short range communications subsystem of the mobile communication device operates using the same protocol thereby facilitating wireless communication between the mobile communication device and the smart card reader . Any communications mechanism and or protocol may be implemented for the short range communications subsystems so long as the mobile communication device can communicate with the smart card reader when the mobile communication device is no more than a predetermined distance away from the smart card reader .

Traditionally a smart card driver module is supplied by the manufacturer of the smart card . The operating system of the mobile communication device includes an API defining a smart card framework. The smart card driver module registers with the operating system of the mobile communication device so that calls to smart card framework aspects of the API can be appropriately handled by the smart card driver module.

A representation of a prior art interaction between a smart card driver module at the mobile communication device the smart card reader at the smart card reader and the smart card is illustrated in .

Communication between the smart card reader and the smart card may be standardized to use Application Protocol Data Units APDUs where a standard structure for an APDU is defined by ISO 7816. There are two categories of APDUs command APDUs and response APDUs. A command APDU is sent by the smart card reader to the smart card . A command APDU contains a header and may contain data. A response APDU is sent by the smart card to the smart card reader . A response APDU contains a status word and may contain data.

When a given program executed on the microprocessor requires input from the smart card the given program sends an initial request to the smart card framework which request is redirected by the smart card framework to the smart card driver module which is also executed by the microprocessor . Responsive to receiving the request the smart card driver module issues a request command A APDU A to the smart card via the smart card reader . Upon receiving the request command A APDU A from the smart card driver module the smart card reader forwards the request command A APDU A to the smart card . Note that in general a request command APDU may be transmitted to the smart card in bits and pieces. Such piecewise transmission is provided for in protocols known as T 0 and T 1 as part of ISO 7816 which is an international standard related to electronic identification cards especially smart cards managed jointly by the International Organization for Standardization ISO and the International Electrotechnical Commission IEC . The smart card receives the request command A APDU A and responds by sending a response A APDU A to the smart card reader . The smart card reader upon receiving the response A APDU A forwards the response A APDU A to the smart card driver module.

Responsive to receiving the response A APDU A the smart card driver module transmits a request command B APDU B to the smart card reader . The smart card reader then merely passes the request command B APDU B to the smart card . The smart card receives the request command B APDU B and responds by sending a response B APDU B to the smart card reader . The smart card reader upon receiving the response B APDU B forwards the response B APDU B to the smart card driver module.

Responsive to receiving the response B APDU B the smart card driver module transmits a request command C APDU C to the smart card reader . The smart card reader then merely passes the request command C APDU C to the smart card . The smart card receives the request command C APDU C and responds by sending a response C APDU C to the smart card reader . The smart card reader upon receiving the response C APDU B forwards the response C APDU C to the smart card driver module.

It is expected that the exchange between the smart card driver module and the smart card will include more than the three requests and corresponding responses in the example discussed above in conjunction with . Indeed there may be as few as one request and corresponding response and there may be many more than three. For economy of illustration only three requests and corresponding responses have been included in . It is further expected that the smart card driver module at the mobile communication device will obtain enough information from the received response C APDU C to determine that the response C APDU C is the final response.

Accordingly the smart card driver module at the mobile communication device amalgamates the received response APDUs A B and C to form an amalgamated response and sends the amalgamated response to the given program that was the source of the initial request .

Clearly the amount of traffic between the mobile communication device and the smart card reader is a factor in the time delay between the given program sending the initial request and receiving the amalgamated response .

In an example scenario the smart card may contain several certificates. When the given prior art program requires the certificates from the smart card the given prior art program sends a certificate retrieval request to the smart card framework which request is redirected by the smart card framework to the smart card driver module. Responsive to receiving the request the smart card driver module issues a plurality of request command APDUs to the smart card via the smart card reader . Upon receiving the request command APDUs from the smart card driver module the smart card reader forwards the request command APDUs to the smart card . The smart card receives the request command APDUs and responds by sending a response APDUs to the smart card reader . The smart card reader upon receiving each response APDU forwards the response APDU to the smart card driver module. Note that each certificate may require multiple APDUs to transfer from the smart card reader to the mobile communication device and furthermore the smart card may store many certificates.

Upon receiving the last of the response APDUs the smart card driver module at the mobile communication device can assemble each of the certificates from the pieces transferred in distinct APDUs and amalgamate the collection of certificates into an amalgamated response message and sends the amalgamated response message to the given program that was the source of the initial certificate retrieval request.

In overview it is proposed herein to split the smart card driver into multiple components with a component residing on the mobile communication device and another component residing on the smart card reader . That is it is proposed to enable the operating system module of the smart card reader through the addition of the smart card reader driver component to do more than merely relay communication between the mobile communication device and the smart card .

When there is a requirement for the mobile communication device to read from or write to the smart card the smart card driver module C on the mobile communication device transmits a command code message carrying a command code in addition to a small amount of other data to the smart card reader .

One example command code message is a get certificates command code message which involves the mobile communication device requesting that the smart card reader obtain certificates from the smart card and transmit the certificates to the mobile communication device . Another example command code message is a sign data command code message which involves the mobile communication device transferring data to the smart card reader so that the smart card can create a digital signature based on the data and have the smart card reader transmit the digital signature to the mobile communication device .

An example format for a command code message includes a command tag a driver ID a command type and command data. The command tag element is included to allow the smart card reader driver component of the smart card reader to distinguish a command code message from a typical request message. The driver ID element is included to specify an identity ID of a smart card reader driver component on the smart card reader so that the operating system module can determine the smart card reader driver component to which to pass the command code message. There may be several possible values for the command type element where the values are defined for specific drivers. The values of the command type element may for example allow the smart card reader driver component to distinguish between a get certificates command code message and a sign data command code message. Similarly the content of the command data element is specific to the driver and specific to the command type. For example if the command type indicates that the command code message is a sign data command code message then the content of the command data element is the data that is to be signed.

It is expected that the operating system module of the smart card reader will include more than one smart card reader driver component. Indeed there is likely to be a corresponding smart card reader driver component for every smart card driver module at the mobile communication device . More particularly it is likely that the smart card reader driver component and the smart card driver module will be programmed by the same person or at least the same organization.

It is expected that each smart card reader driver component loaded onto the smart card reader will register itself with a central driver information store not shown on the smart card reader and will be associated with a unique driver ID at the time of registration. When the smart card reader synchronizes settings with the mobile communication device the smart card reader may transmit to the mobile communication device a list of driver IDs associated with installed smart card reader driver components. The smart card API on the mobile communication device may expose a way for smart card driver modules on the mobile communication device to determine driver IDs for smart card reader driver components installed on the smart card reader .

Accordingly when the smart card driver module has a requirement to send a command to the smart card reader the smart card driver module first determines through a query to the smart card API on the mobile communication device whether the appropriate smart card reader driver component is present on the smart card reader .

Once the driver ID of the appropriate smart card reader driver component is determined the smart card driver module may include the driver ID in the driver ID element of a command code message to be sent to the smart card reader .

Upon receiving a given command code message the operating system module of the smart card reader determines the particular smart card reader driver component to which to direct the given command code message. Such determining may be accomplished based on a review of the driver ID element of the given command code message.

Upon receiving the command code message the smart card reader driver component on the smart card reader determines an interpretation of the command code and according to the interpretation carries out an exchange of requests and responses with the smart card . When the exchange with the smart card is complete the smart card reader driver component on the smart card reader transmits an amalgamated response to the mobile communication device . Advantageously the volume of traffic between the mobile communication device and the smart card reader is greatly reduced.

In accordance with various embodiments of the present disclosure a representation of interaction between the smart card driver module C the operating system module the smart card reader driver component reader driver and the smart card is illustrated in . When as in the representation of known interaction of a given program executed on the microprocessor requires input from the smart card the given program sends a request to the smart card driver module C which is also executed by the microprocessor . Responsive to receiving the request the smart card driver module C issues a command code message to the smart card reader .

Upon receiving the command code message the operating system module of the smart card reader determines e.g. based on the content of the driver ID element of the command code message that the command code message should be sent to the smart card reader driver component .

Steps in an exemplary method performed by the smart card reader driver component on the smart card reader are illustrated in . Upon receiving step the command code message from the operating system module the smart card reader driver component determines step an interpretation of the command code. According to the interpretation the smart card reader driver component composes and transmits step a request command A APDU A to the storage component interface . The storage component interface forwards the request command A APDU A to the smart card . The smart card receives the request command A APDU A and responds by sending a response A APDU A to the smart card reader .

The response A APDU A is received at the smart card reader and passed to the smart card reader driver component . Responsive to receiving step the response A APDU A the smart card reader driver component determines step whether the response APDU is the last response APDU to be expected. If the response A APDU A is determined not to be the last response APDU to be expected the smart card reader driver component transmits step a request command B APDU B to the storage component interface which forwards the request command B APDU B to the smart card . The smart card receives the request command B APDU B and responds by sending a response B APDU B to the smart card reader .

The response B APDU B is received at the smart card reader and passed to the smart card reader driver component . Responsive to receiving step the response B APDU B the smart card reader driver component determines step whether the response APDU is the last response APDU to be expected. If the response B APDU B is determined not to be the last response APDU to be expected the smart card reader driver component transmits step a request command C APDU C to the storage component interface which forwards the request command C APDU C to the smart card . The smart card receives the request command C APDU C and responds by sending a response C APDU C to the smart card reader .

The response C APDU C is received at the smart card reader and passed to the smart card reader driver component . Responsive to receiving step the response C APDU C the smart card reader driver component determines step whether the response APDU is the last response APDU to be expected. It is expected that the exchange through the storage component interface between the smart card reader driver component and the smart card will include more than three requests and corresponding responses but may be limited to one. However for economy of illustration only three have been included in . It is further expected that the smart card reader driver component at the smart card reader will obtain enough information from the received response C APDU C to determine that the response C APDU C is the final response.

When the response C APDU C is determined step to be the last response APDU to be expected the smart card reader driver component amalgamates step the received response APDUs A B C to form an amalgamated response and transmits step the amalgamated response to the operating system module which forwards the amalgamated response to the mobile communication device . To distinguish the amalgamated response from other traffic the amalgamated response may include a reference to the command code message .

Upon receiving the amalgamated response the smart card driver module C formulates a response to the request from the given program. Such formulating may involve for several examples wrapping the data from the amalgamated response in another format object adding additional data removing unneeded data dropping data or changing data before sending the response to the given program.

The traffic between the mobile communication device and the smart card reader has been reduced from multiple request command APDUs and response APDUs each request command APDU giving rise to a corresponding response APDU to simply the command code message and the amalgamated response .

It should be clear to a person of ordinary skill that the mobile communication device need not completely discontinue the transmission of request command APDUs to the smart card reader . Indeed transmissions from the mobile communication device to the smart card reader may include request command APDUs interleaved with command code messages . That is there may a situation in which the most efficient use of resources involves the transmission of a request command APDU and receipt of a response APDU . While in another situation the most efficient use of resources involves the transmission of a command code message and receipt of a amalgamated response . Rather than for reasons of efficiency interleaving of command code messages and request APDUs may be useful when there is a requirement to perform a verification of data at the mobile communication device . Such may be the case when data involved in the verification is too large or too sensitive to be transmitted to the smart card reader .

Implementation of aspects of the present application will likely entail modifying the smart card API of the mobile communication device . In particular rather than providing a single driver for the mobile communication device only smart card manufacturers may supply multiple drivers one driver smart card driver module C for the mobile communication device and one driver smart card reader driver component for the smart card reader .

Alternatively a single driver may be created for the mobile communication device . The single driver may include some embedded code. For example the embedded code may be written in the JavaScript language. The embedded code would be automatically loaded onto the smart card reader the first time the single driver is used by the smart card driver module C.

Advantageously according to aspects of the present application the volume of traffic between the mobile communication device and the smart card reader is greatly reduced and consequently the delay between the given program sending the initial request and receiving the response is also reduced.

The above described embodiments of the present application are intended to be examples only. Alterations modifications and variations may be effected to the particular embodiments by those skilled in the art without departing from the scope of the application which is defined by the claims appended hereto.

