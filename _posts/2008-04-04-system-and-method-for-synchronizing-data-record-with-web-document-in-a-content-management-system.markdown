---

title: System and method for synchronizing data record with web document in a content management system
abstract: A system and associated method for synchronizing a record with a web document. A synchronizer selects a web document that is stored in a published web document repository of a content management system. The oldest web document since the latest update is selected and checked for availability. The synchronizer locates a record that corresponds to the selected web document. The synchronizer then checks respective version of the web document and the record to determine whether the record correctly represents the web document. The synchronizer then verifies whether the selected web document is available to users to avoid synchronizing latent web document that is not available to users. The synchronizer updates the located record.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07991741&OS=07991741&RS=07991741
owner: International Business Machines Corporation
number: 07991741
owner_city: Armonk
owner_country: US
publication_date: 20080404
---
The present invention discloses a system and associated method for supporting seamless Web 2.0 features in conventional content management systems to provide interactive web services to users of web content.

Conventional content management systems are widely deployed but may lack functionalities to support highly interactive features on Internet platforms emerging with Web 2.0 technology trend. To provide Web 2.0 services to users of web document web sites employ separate data repositories to hold records which have to be synchronized with corresponding web document stored in conventional content management systems. However due to complex workflow of conventional content management system Web 2.0 records may not be timely and efficiently synchronized with web document in a conventional content management system.

Thus there is a need for a system and associated method that overcomes at least one of the preceding disadvantages of current methods and systems of synchronizing data repository records with web documents in a content management system.

The present invention provides a method for synchronizing at least one record stored in a data repository with at least one web document stored in a repository the method comprising 

subsequent to said selecting locating in the data repository a record of said at least one record that corresponds to the web document 

subsequent to said locating determining that the record does not correctly represent the web document 

subsequent to said verifying updating the record such that the record in the data repository correctly represents the web document in the repository 

wherein said selecting said locating said determining said verifying and said updating are performed by a synchronizer.

The present invention provides a computer program product comprising a computer usable storage medium having a computer readable program code embodied therein said computer readable program code containing instructions that when executed by a processor of a computer system implement a method for synchronizing at least one record stored in a data repository with at least one web document stored in a repository the method comprising 

subsequent to said selecting locating in the data repository a record of said at least one record that corresponds to the web document 

subsequent to said locating determining that the record does not correctly represent the web document 

subsequent to said verifying updating the record such that the record in the data repository correctly represents the web document in the repository 

wherein said selecting said locating said determining said verifying and said updating are performed by a synchronizer.

The present invention provides a computer system comprising a processor and a computer readable memory unit coupled to the processor said memory unit containing instructions that when executed by the processor implement a method for synchronizing at least one record stored in a data repository with at least one web document stored in a repository the method comprising 

subsequent to said selecting locating in the data repository a record of said at least one record that corresponds to the web document 

subsequent to said locating determining that the record does not correctly represent the web document 

subsequent to said verifying updating the record such that the record in the data repository correctly represents the web document in the repository 

wherein said selecting said locating said determining said verifying and said updating are performed by a synchronizer.

The present invention provides a method and system that overcomes at least one of the current disadvantages of conventional method and system for synchronizing a record with a web document in a content management system.

The web site comprises a Web 2.0 data server and a web document server . The system provides Web 2.0 services with the Web 2.0 data server and records stored in the Web 2.0 data repository for web documents service by the web document server .

The content management system CMS controls usage of web documents stored in a live web document repository and a published web document repository . Web documents stored in the live web document repository are available to a user of the web site . A published web document that is stored in the published web document repository may be available to the user as being transferred to the live web document repository or may not be available to the user pending further processing required by workflows of the CMS . In one embodiment of the present invention the content management system is implemented with IBM Lotus Domino IBM Lotus and Domino are trademarks of International Business Machines Corporation in the United States other countries or both . In this specification a web document broadly refers to the content in any format that is serviced by the content management system including but not limited to web documents in Hypertext Transport Protocol HTTP format computer program files audio and or video media files and electronic documents etc.

The web document server services web documents stored in the live web document repository to the user of the web site . In one embodiment of the present invention the web document server is implemented with Java2 Enterprise Edition J2EE and operates on IBM WebSphere Application Server platform. Java and all Java based trademarks are trademarks of Sun Microsystems Inc. in the United States other countries or both. WebSphere is a trademark of International Business Machines Corporation in the United States other countries or both .

The live web document repository stores a live web document that is available to the user who accesses the web site . The web document server and the live web documents repository are deployed in a controlled environment to provide appropriate security availability and maintainability and are protected by a firewall. In other embodiments the document in the published web documents repository become the live web documents repository subject to final preview stages in the workflow of the CMS . The combination of the scheduled processes the controlled environment and firewall and any additional workflow stages lead to a considerable latency between a stage that a document is stored into the published web documents repository and a stage that the document becomes available in web ready form in the live web documents repository . In one preferred embodiment that incorporates a very large document library this latency can be several hours.

A published web document repository stores a published web document. The published web document becomes the live web document when the published web document is stored to the live web document repository according to the workflow of the CMS . Depending on a scale and scheduled processes in a workflow of the CMS a delay from the time when the web document is published to the time when the web document becomes live may vary and raises issues regarding a synchronization of records with web documents.

The Web 2.0 data server provides Web 2.0 services for the web site using a record stored in the Web 2.0 data repository . Examples of Web 2.0 services may include inter alia hit counts tag clouds using font size to represent tag frequency and advanced searching by various categorisations of the documents.

In one embodiment the Web 2.0 data repository is implemented with IBM DB2 Universal Data repository DB2 is a trademark of International Business Machines Corporation in the United States other countries or both . Web 2.0 services refer to highly interactive and collaborative web services such as wikis web logging blogging and collaborative tagging etc. Examples of functionalities required in Web 2.0 services may include inter alia counting number of hits tagging commenting in and or rating of web content rich Asynchronous JavaScript and XML AJAX based Internet application techniques such as advanced search functions within a webpage etc.

The record in the Web 2.0 data repository corresponds to the published web document and or the live web document. The record comprises annotation data for Web 2.0 services selected fields and or properties of the published web document that support Web 2.0 services. The record replicates a subset of structured fields for web documents from the published web documents repository and supplements the replicated fields with additional fields to record hit counts tag usage etc. As web documents in the published web document repository and the live web document repository are created published deleted archived edited and or updated in the CMS all the changes must be reflected in the Web 2.0 data repository . However as mentioned above the record corresponding to the published web document does not correctly represent the live web document until the published web document becomes the live web document. Consequently the record in the Web 2.0 data repository must be in synchronization with the live web document in the live web document repository to provide Web 2.0 service to the user accessing the live web document.

The synchronizer repeatedly performs synchronizations of the Web 2.0 data repository with live web documents of the CMS . See descriptions of below for details. As mentioned above a record corresponding to a web document may not represent the latest version of the web document. Also the latest web document may not be available to users yet due to workflow of the CMS thus synchronizing the corresponding record with the web document should be delayed until the latest web document becomes live. The synchronizer resolves both problems in synchronizing records with web documents in the CMS by versioning updates of web documents and replicating only live web documents.

In step the synchronizer selects a published web document to be synchronized from the published web document repository. The synchronizer selects the published web document that has been least recently updated out of all published web documents in the published web document repository because the longer a duration of a web document has been updated it is more probable that the web document requires a corresponding record in the data repository to reflect the update.

In step the synchronizer locates from the data repository a record that corresponds to the published web document that was selected in step . If the synchronizer cannot locate the record corresponding to the selected published web document then the synchronizer proceeds with step regarding that the selected published web document is newly published and needs to be synchronized with the data repository. Proceeding directly to step with no located record is equivalent to locating a null record and proceeding with step .

In one embodiment of the present invention both a web document and a record that is located as corresponding to the web document have a same syndication key that indicates such correspondence between the web document and the record. In the same embodiment the synchronizer prepares a list of published web documents stored in the published web document repository and a list of records stored in the data repository prior to performing steps and . In this embodiment the synchronizer periodically connects to the published web document repository via Hypertext Transport Protocol HTTP connection and retrieves a list of syndication keys and version keys of each web document. The synchronizer also connects to the Web 2.0 data repository via Java Data repository Connectivity JDBC application programming interfaces APIs and obtains a list of syndication keys and version keys of each record.

The list of published web documents comprises a syndication key and a version key of each published web document. The list of records also comprises the syndication key and the version key of each record. The syndication key is assigned when a web document is created. The web document and a record corresponding to the web document shares an identical syndication key. The version key represents a version number of the web document and or the record and is modified when the web document and or the record is updated. If the corresponding record also has a same version key as the published web document the corresponding record is regarded as up to date with the published web document.

The list of published web document may be configured such that the synchronizer accesses web documents in a descending order of duration since last update i.e. oldest first. Consequently in step the synchronizer selects an oldest published web document first for synchronization from the list. Assuming web documents become available in an order of their updates the synchronizer needs not examine remaining web documents in the list after the synchronizer accessed the first web document that has been updated for the longest time but is not available yet. In one embodiment of the present invention an availability flag is employed to mark the oldest but not available web document in the list. Once the synchronizer set the availability flag with a negative value for a web document the synchronizer stops checking for synchronization of remaining web documents in the list positioned after the web document.

In step the synchronizer determines whether the record correctly represents the published web document by comparing the version key of the published web document and the version key of the record. If the version key of the published web document matches the version key of the record version keys indicating that the record correctly represents the published web document then the synchronizer terminates synchronizing the record. If the version key of the record is different from the version key of the published web document indicating that the record is not up to date then the synchronizer proceeds with step .

In step the synchronizer verifies whether the published web document is a live web document that is available to users by checking version key of the live web document stored in the live web document repository that corresponds to the published web document. If the synchronizer discovers that the published web document is not available to users yet the synchronizer terminates synchronizing the record with the published web document. If the synchronizer successfully verifies that the published web document is available to users then the synchronizer proceeds with step .

The synchronizer repeats steps and for all web documents stored in the published web document repository. In one embodiment a synchronization period is one 1 minute. In another embodiment the synchronizer may receive a direct notification for a new synchronization cycle from the published web document repository rather than periodically checking repositories and the data repository for an updated web documents and records to be synchronized. After the synchronizer performs steps and for all web documents in the published web document repository any unmatched record in the Web 2.0 data repository indicates that such record has no corresponding published web document and should be removed from or deactivated within the Web 2.0 data repository.

In one embodiment the synchronizer is implemented in the Java programming language and executing on a computer system of infra which is communicable with the CMS the web site and the Web 2.0 data repository . The content management system is adapted to provide features in implementing the present invention. One of the features includes a HTML Meta tag containing a version key in the live web documents. The live web documents stored in the live web document repository are extended to incorporate an additional HTML Meta tag containing a version key from the published web document when it is made live from the published web documents repository .

The synchronizer of the present invention has been embodied in Java code with a content management system in Lotus Domino to which a view comprising syndication keys version keys and live uniform resource locators URLs was added. The synchronizer loads the view via Hypertext Transport Protocol HTTP . This view is ordered most recently updated first so the Java code traverses the list in the direction from the end of the list to the beginning of the list. The live URLs are used to open HTTP connections to obtain the live HTML documents and retrieve the live version keys which are embedded into the HTML documents as HTML meta tags. The Web 2.0 data repository comprises tables in DB2 Universal Database UDB including a table which includes syndication key and version identifier.

The computer system comprises a processor an input device coupled to the processor an output device coupled to the processor and memory devices and each coupled to the processor . The input device may be inter alia a keyboard a mouse a keypad a touchscreen a voice recognition device a sensor a network interface card NIC a Voice video over Internet Protocol VOIP adapter a wireless adapter a telephone adapter a dedicated circuit adapter etc. The output device may be inter alia a printer a plotter a computer screen a magnetic tape a removable hard disk a floppy disk a NIC a VOIP adapter a wireless adapter a telephone adapter a dedicated circuit adapter an audio and or visual signal generator a light emitting diode LED etc. The memory devices and may be inter alia a cache a dynamic random access memory DRAM a read only memory ROM a hard disk a floppy disk a magnetic tape an optical storage such as a compact disk CD or a digital video disk DVD etc. The memory device includes a computer code which is a computer program that comprises computer executable instructions. The computer code includes inter alia an algorithm used for synchronizing a record with a web document in a content management system according to the present invention. The processor executes the computer code . The memory device includes input data . The input data includes input required by the computer code . The output device displays output from the computer code . Either or both memory devices and or one or more additional memory devices not shown in may be used as a computer usable storage medium or a computer readable storage medium or a program storage device having a computer readable program embodied therein and or having other data stored therein wherein the computer readable program comprises the computer code . Generally a computer program product or alternatively an article of manufacture of the computer system may comprise said computer usable storage medium or said program storage device .

While shows the computer system as a particular configuration of hardware and software any configuration of hardware and software as would be known to a person of ordinary skill in the art may be utilized for the purposes stated supra in conjunction with the particular computer system of . For example the memory devices and may be portions of a single memory device rather than separate memory devices.

While particular embodiments of the present invention have been described herein for purposes of illustration many modifications and changes will become apparent to those skilled in the art. Accordingly the appended claims are intended to encompass all such modifications and changes as fall within the true spirit and scope of this invention.

