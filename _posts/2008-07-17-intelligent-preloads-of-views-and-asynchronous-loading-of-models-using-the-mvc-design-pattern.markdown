---

title: Intelligent preloads of views and asynchronous loading of models using the MVC design pattern
abstract: In one embodiment, the present invention is a system and method for loading a web page in a browser application. The method sends a request to retrieve the web page, receives a response to the request that includes the web page, and displays the web page in the browser application. The web page includes a static view portion, a dynamic view portion, and at least one possible action that a user may take from the web page. When the user takes each possible action, the browser application will display a related web page. The method receives a second response to the request that includes the static view portion of the related web page for each possible action, and stores the static view portion of the related web page for each possible action.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08156419&OS=08156419&RS=08156419
owner: International Business Machines Corporation
number: 08156419
owner_city: Armonk
owner_country: US
publication_date: 20080717
---
The present invention relates in general to computing systems in a distributed data processing environment. In particular the present invention is a system and method for loading a web page in a browser application.

A web page is a document written in the hypertext markup language HTML and translated by a web browser. The web page includes a static view portion and a dynamic view portion. The static view portion of the web page shows the same content each time a user views the web page and includes user interface control components i.e. buttons checkboxes panels etc. web page headers hypertext and the like. The dynamic view portion of the web shows content that can change each time a user views the web page and includes data displayed in a user interface display components i.e. list boxes dropdown lists etc. applets scripts or the like.

A hypertext link is a word phrase or image in a web page that is marked using HTML. The HTML marking changes the display of the marked hypertext in the web browser typically underlining the hypertext changing the color to blue and associates an HTML target with the marked hypertext. When a user clicks on the marked hypertext with a pointing device such as a mouse the web browser will load i.e. jump to the target HTML document. The HTML target may be to another section of the same web page another web page in the same domain or another web page in a different domain. Thus the hypertext link is a navigation element in a web page.

A web page may also mark objects hypertext or hot areas i.e. coordinates of a specific are on a display and associate the marked area with a script or applet such that when a user clicks on the marked area with a pointing device such as a mouse the web browser will call the script or applet. These marked areas are not hypertext links but will function as a hypertext link when the script or applet makes a call to load a web page. These marked areas that function as hypertext links are hidden links.

The model view controller MVC design pattern in software engineering isolates the business logic of the application from the user interface considerations thus resulting in an application where it is easier to modify either the visual appearance of the application or the underlying business rules without affecting the other. In MVC the Model represents the information i.e. the data of the application and the business rules used to manipulate the data the View corresponds to elements of the user interface such as text checkbox items and so forth and the Controller manages details involving the communication to the model of user actions such as keystrokes and mouse movements. Thus a web application based on the MVC design pattern separates the web pages into a static view portion and a dynamic view portion.

The term Web 2.0 is ascribed to a trend in the use of World Wide Web technology and web design that aims to enhance creativity information sharing and most notably collaboration among users. These concepts have led to the development and evolution of web based communities and hosted services such as weblogs blogs wikis podcasts really simple syndication RSS feeds and other forms of many to many publishing social networking software and web application programming interfaces APIs provide enhancements over read only websites.

Since web pages that are based on Web 2.0 MVC design patterns and the like have more dynamic data than previous web pages a major focus has been placed on improving the usability of web applications by drastically improving web page load times. Prior art solutions have focused on statically preloading the target web pages associated with all existing hypertext links on a displayed web page. Since these prior art solutions focus on analyzing the displayed web page to identify hypertext links these solutions neglect to preload related web pages that are accessed via a non hypertext link web page object on the displayed web page such as a script applet servlet or the like. Other prior art solutions rely on server based caching proxies to serve the same content to multiple users. These other prior art solutions also neglect to preload related web pages that are accessed via a non hypertext link web page object on the displayed web page such as a script applet servlet or the like.

Thus there is a need for a new solution for prefetching or preloading future related web pages in a dynamic web application that uses late bound dynamic rules or brokers that leverage the separation of the web page into a static view portion and a dynamic view portion. The presently disclosed method and system satisfies this demand.

In one embodiment the present invention is a system and method for loading a web page in a browser application. The method sends a request to retrieve the web page receives a response to the request that includes the web page and displays the web page in the browser application. The web page includes a static view portion a dynamic view portion and at least one possible action that a user may take from the web page. When the user takes each possible action the browser application will display a related web page. The method receives a second response to the request that includes the static view portion of the related web page for each possible action and stores the static view portion of the related web page for each possible action. When a user takes a selected action from said at least one possible action the method retrieves the static view portion of the related web page associated with the selected action and displays the static view portion of the related web page in the browser application. The method sends a second request to retrieve the dynamic view portion of the related web page receives a third response that includes the dynamic view portion of the related web page and displays the dynamic view portion of the related web page in the browser application.

In another embodiment the method for loading a web page in a browser application receives a request to retrieve the web page retrieves the web page and sends a response that includes the web page. The web page includes a static view portion and a dynamic view portion. The method determines at least one possible action that a user may take from the web page. When a user takes each possible action the browser application will display a related web page. The method retrieves the static view portion of the related web page for each possible action and sends a second response that includes the static view portion of the related web page for each possible action. When a user takes a selected action from said at least one possible action the method receives a second request to retrieve the dynamic view portion of the related web page associated with the selected action. The method retrieves the dynamic view portion of the related web page and sends a third response that includes the dynamic view portion of the related web page.

As will be appreciated by one skilled in the art the present invention may be embodied as a system method or computer program product. Accordingly the present invention may take the form of an entirely hardware embodiment an entirely software embodiment including firmware resident software micro code etc. or an embodiment combining software and hardware aspects that may all generally be referred to herein as a circuit module or system. Furthermore the present invention may take the form of a computer program product embodied in any tangible medium of expression having computer usable program code embodied in the medium.

Any combination of one or more computer usable or computer readable mediums may be utilized. The computer usable or computer readable medium may be for example but not limited to an electronic magnetic optical electromagnetic infrared or semiconductor system apparatus device or propagation medium. More specific examples a non exhaustive list of the computer readable medium would include the following an electrical connection having one or more wires a portable computer diskette a hard disk a random access memory RAM a read only memory ROM an erasable programmable read only memory EPROM or Flash memory an optical fiber a portable compact disc read only memory CD ROM an optical storage device a transmission media such as those supporting the Internet or an intranet or a magnetic storage device. Note that the computer usable or computer readable medium could even be paper or another suitable medium upon which the program is printed as the program can be electronically captured via for instance optical scanning of the paper or other medium then compiled interpreted or otherwise processed in a suitable manner if necessary and then stored in a computer memory. In the context of this document a computer usable or computer readable medium may be any medium that can contain store communicate propagate or transport the program for use by or in connection with the instruction execution system apparatus or device. The computer usable medium may include a propagated data signal with the computer usable program code embodied therewith either in baseband or as part of a carrier wave. The computer usable program code may be transmitted using any appropriate medium including but not limited to wireless wireline optical fiber cable RF etc.

Computer program code for carrying out operations of the present invention may be written in any combination of one or more programming languages including an object oriented programming language such as Java Smalltalk C or the like and conventional procedural programming languages such as the C programming language or similar programming languages. The program code may execute entirely on the user s computer partly on the user s computer as a stand alone software package partly on the user s computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario the remote computer may be connected to the user s computer through any type of network including a local area network LAN or a wide area network WAN or the connection may be made to an external computer for example through the Internet using an Internet Service Provider .

The present invention is described below with reference to flowchart illustrations and or block diagrams of methods apparatus systems and computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and or block diagrams and combinations of blocks in the flowchart illustrations and or block diagrams can be implemented by computer program instructions. These computer program instructions may be provided to a processor of a general purpose computer special purpose computer or other programmable data processing apparatus to produce a machine such that the instructions which execute via the processor of the computer or other programmable data processing apparatus create means for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

These computer program instructions may also be stored in a computer readable medium that can direct a computer or other programmable data processing apparatus to function in a particular manner such that the instructions stored in the computer readable medium produce an article of manufacture including instruction means which implement the function act specified in the flowchart and or block diagram block or blocks.

The computer program instructions may also be loaded onto a computer or other programmable data processing apparatus to cause a series of operational steps to be performed on the computer or other programmable apparatus to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide processes for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

The network shown in in one embodiment is a public communication network that connects and enables data transfer between the client computers and the server computer . The present invention also contemplates the use of comparable network architectures. Comparable network architectures include the Public Switched Telephone Network PSTN a public packet switched network carrying data and voice packets a wireless network and a private network. A wireless network includes a cellular network e.g. a Time Division Multiple Access TDMA or Code Division Multiple Access CDMA network a satellite network and a wireless Local Area Network LAN e.g. a wireless fidelity Wi Fi network . A private network includes a LAN a Personal Area Network PAN such as a Bluetooth network a wireless LAN a Virtual Private Network VPN an intranet or an extranet. An intranet is a private communication network that provides an organization such as a corporation with a secure means for trusted members of the organization to access the resources on the organization s network. In contrast an extranet is a private communication network that provides an organization such as a corporation with a secure means for the organization to authorize non members of the organization to access certain resources on the organization s network. The system also contemplates network architectures and protocols such as Ethernet Token Ring Systems Network Architecture Internet Protocol Transmission Control Protocol User Datagram Protocol Asynchronous Transfer Mode and proprietary network protocols comparable to the Internet Protocol.

As shown in the client computer is a general purpose computer. A bus is a communication medium that connects a central processor unit CPU data storage device network adapter and memory . The network adapter also connects to the network and is the mechanism that facilitates the passage of network traffic between the client computer and the network .

The CPU can be a commercially available or custom microprocessor that performs the disclosed methods by executing the sequences of operational instructions that comprise each computer program resident in or operative on the memory . It is to be understood that the memory may include operating system administrative and database programs that support the programs disclosed in this application. The memory is representative of the overall hierarchy of memory devices containing the software and data used to implement the functionality of the client computer . The memory can include but is not limited to cache ROM PROM EPROM EEPROM flash memory SRAM and DRAM. In one embodiment the configuration of the memory of the client computer includes a web browser and a client identifier . These computer programs store intermediate results in the memory or data storage device . In another embodiment the memory may swap these programs or portions thereof in and out of the memory as needed and thus may include fewer than all of these programs at any one time.

In one embodiment the client identifier is stored in a file referred to as a cookie. The server computer may assign and send the client identifier to the client computer once when the client computer first communicates with the server computer . From then on the client computer includes its client identifier with all messages sent to the server computer so the server computer can identify the source of the message.

The server computer shown in is a general purpose computer that provides server functionality including file services web page services and the like. A bus is a communication medium that connects a central processor unit CPU data storage device network adapter and memory . The network adapter also connects to the network and is the mechanism that facilitates the passage of network traffic between the server computer and the network .

The CPU can be a commercially available or custom microprocessor that performs the disclosed methods by executing the sequences of operational instructions that comprise each computer program resident in or operative on the memory . It is to be understood that the memory may include operating system administrative and database programs that support the programs disclosed in this application. The memory is representative of the overall hierarchy of memory devices containing the software and data used to implement the functionality of the server computer . The memory can include but is not limited to cache ROM PROM EPROM EEPROM flash memory SRAM and DRAM. In one embodiment the configuration of the memory of the server computer includes a web server that includes an engine preload program web pages and related web pages . These computer programs store intermediate results in the memory or data storage device . These programs also receive input from the client computers and display the results to the client computers . In another embodiment the memory may swap these programs or portions thereof in and out of the memory as needed and thus may include fewer than all of these programs at any one time.

The web server in one embodiment is a web application that accepts hypertext transfer protocol HTTP requests from the client computer and serves HTTP responses that include optional data contents such as hypertext markup language HTML web pages related web pages linked objects e.g. images scripts etc. and the like. The web server includes an engine preload program web pages and related web pages . The engine receives the requests from the client computer and sends the responses to the client computer . The requests utilize a uniform resource locator URL address to identify the requested HTML web pages related web pages linked objects and the like. The preload program determines the possible actions that a user can take from web page displayed in a web browser on the client computer determines the related web page that will load in the web browser when the user takes each possible action and communicates with the engine to send response messages to the client computer to preload the static portion of the related web pages . In one embodiment the preload program determines the possible actions by analyzing the web page. In another embodiment the preload program is a broker mechanism that utilizes a lookup table to determine the possible actions.

After the engine of the web server sends the response to supply the web page A shown in the preload program analyzes the web page A to determine the possible actions that a user can take from the web page A. The preload program will determine that a user has three possible actions from the web page A clicking on either of the hypertext links and clicking on Tab B B. The hypertext links are obvious navigation elements however Tab B B is a clickable web object and a hidden link because when a user clicks on Tab B B in the web page A shown in the client computer will call to a program component such as a script applet or the like that will load a related web page in the web browser . The preload program will communicate with the engine to send response messages to the client computer to preload the static portion of the related web pages that will load in the web browser when the user clicks on the hypertext links or Tab B B.

Referring again to after sending the response to supply the web page step the server computer determines possible actions that a user may take from the web page step . In one embodiment the server computer determines the possible actions by analyzing the web page . In another embodiment the server computer communicates with a broker mechanism to identify the related web pages associated with the web page . In yet another embodiment the server computer determines the possible actions using prior usage patterns for the user. The server computer retrieves the related web page for each possible action step and sends a response to the client computer to preload the static portion of the retrieved related web page step . The client computer receives the response to preload the static portion of the related web page step and stores the static portion of the related web pages step in the memory . In one embodiment the response message is an HTTP response message. In another embodiment the sending of the response to preload the static portion of the related web page step is combined with the sending of the response to supply the web page step .

Referring again to after storing the static portion of the related web pages step a user operating the web browser on the client computer takes one of the possible actions from the web page step . In one embodiment the user clicks with a pointing device such as a mouse on a marked object hypertext or hot area to take one of the possible actions. The client computer retrieves the preloaded static portion of the related web page associated with the possible action taken by the user and displays the preloaded static portion of the related web page in the web browser step . The client computer sends a request to the server computer to retrieve the dynamic portion of the related web page step . The server computer receives the request to retrieve the dynamic portion of the related web page step retrieves the dynamic portion of the related web page step and sends a response to the client computer to supply the dynamic portion of the related web page step . In one embodiment the server computer retrieves the dynamic portion of the related web page from the source. The client computer receives the response to supply the dynamic portion of the related web page step and displays the dynamic portion of the related web page in the web browser step . In one embodiment the request and response messages are HTTP request and response messages.

The flowchart and block diagrams in the Figures illustrate the architecture functionality and operation of possible implementations of systems methods and computer program products according to various embodiments of the present invention. In this regard each block in the flowchart or block diagrams may represent a module segment or portion of code which comprises one or more executable instructions for implementing the specified logical function s . It should also be noted that in some alternative implementations the functions noted in the block may occur out of the order noted in the figures. For example two blocks shown in succession may in fact be executed substantially concurrently or the blocks may sometimes be executed in the reverse order depending upon the functionality involved. It will also be noted that each block of the block diagrams and or flowchart illustration and combinations of blocks in the block diagrams and or flowchart illustration can be implemented by special purpose hardware based systems that perform the specified functions or acts or combinations of special purpose hardware and computer instructions.

The terminology used herein is for the purpose of describing particular embodiments only and is not intended to be limiting of the invention. As used herein the singular forms a an and the are intended to include the plural forms as well unless the context clearly indicates otherwise. It will be further understood that the terms comprises and or comprising when used in this specification specify the presence of stated features integers steps operations elements and or components but do not preclude the presence or addition of one or more other features integers steps operations elements components and or groups thereof.

The corresponding structures materials acts and equivalents of all means or step plus function elements in the claims below are intended to include any structure material or act for performing the function in combination with other claimed elements as specifically claimed. The description of the present invention has been presented for purposes of illustration and description but is not intended to be exhaustive or limited to the invention in the form disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art without departing from the scope and spirit of the invention. The embodiment was chosen and described in order to best explain the principles of the invention and the practical application and to enable others of ordinary skill in the art to understand the invention for various embodiments with various modifications as are suited to the particular use contemplated.

