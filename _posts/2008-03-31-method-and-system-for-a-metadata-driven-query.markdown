---

title: Method and system for a metadata driven query
abstract: A computer program is provided. The computer program product includes a computer useable medium having a computer readable program. The computer readable program when executed on a computer causes the computer to receive a query. Further, the computer readable program when executed on a computer causes the computer to generate a common metadata based query object that includes metadata for the query and data associated with the query. In addition, the computer readable program when executed on a computer causes the computer to extract the metadata from the common metadata based query object. Finally, the computer readable program when executed open a computer causes the computer to generate an application specific query based on the metadata and an application to which the query is intended.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08150838&OS=08150838&RS=08150838
owner: International Business Machines Corporation
number: 08150838
owner_city: Armonk
owner_country: US
publication_date: 20080331
---
A query based system is typically utilized in an Enterprise Information System EIS or a relational database to retrieve of specific information. Query based systems are generally very different depending on the EIS. For example the features the query interface and or or query language may be different.

While a relational database utilizes Structured Query Language SQL to query the tables in the database for information an EIS may use a similar query system but with different keywords. The EIS may even utilize an English centric query system. Enterprise adapters utilize the application specific application programming interfaces APIs or mechanisms to perform queries within the EIS.

As the query based systems vary for different EISs enterprise adapters or systems that access the EISs may have to deal with different structured or unstructured queries prior to transforming these queries into the enterprise specific query system. These enterprise adapters or systems that access the EISs have to parse multiple and different query languages and perform a translation into an enterprise specific query request. The need for knowledge of multiple query languages and their structure can be overwhelming and difficult to perform which generally results in multiple systems and different data formats per query language.

In one aspect of the disclosure a computer program product is provided. The computer program product includes a computer useable medium having a computer readable program. The computer readable program when executed on a computer causes the computer to receive a query. Further the computer readable program when executed on a computer causes the computer to generate a common metadata based query object that includes metadata for the query and data associated with the query. In addition the computer readable program when executed on a computer causes the computer to extract the metadata from the common metadata based query object. Finally the computer readable program when executed on a computer causes the computer to generate an application specific query based on the metadata and an application to which the query is intended.

In another aspect of the disclosure a process is provided. The process receives a query. Further the process generates a common metadata based query object that includes metadata for the query and data associated with the query. In addition the process extracts the metadata from the common metadata based query object. Finally the process generates an application specific query based on the metadata and an application to which the query is intended.

In yet another aspect of the disclosure a system is provided. The system includes a query to data format converter that receives a query and generates a common metadata based query object that includes metadata for the query and data associated with the query. Further the system includes a query executor that extracts the metadata from the common metadata based query object and generates an application specific query based on the metadata and an application to which the query is intended.

A method and system provide a metadata driven query. In one embodiment a metadata driven query interface is provided to alleviate the need for different query data formats for each EIS. As a result general query conversion may be utilized for an existing data format to an enterprise specific query request.

The incoming query could be SQL XML Query Language XQuery Query String or any number of forms of various queries. Further the query object which is the output of the query to data format converter includes the data and the query embedded as metadata in the common metadata based query object . In alternative embodiment the data and the query may be provided as metadata that goes along with the common metadata based query object . The query executor reads the values from the query object and or additional metadata depending on whether the metadata is provided along with the query object or embedded as a value in the common metadata based query object itself and constructs query execution artifacts needed to make a call on the underlying EIS .

One form of the data and the metadata can be XML with annotations denoting the query keywords and actions. Another form of the data and metadata can be an object with embedded metadata at each property level within the object.

In one embodiment rules are specified and followed for keywords and action identifiers based on what they represent and how many exist in the incoming common metadata based query object . For example when the keyword IN is specified on a property it is treated as an equality for that query search. If more than one keyword is specified for the same property type those keywords are treated as a list of values.

As can be seen from the example of the customer query data object above the customer is the data of interest. Further the customer query data object includes the values needed for the Where clause. The query is interested in the object with an ID value equaling . Accordingly rules are provided to govern the query Info metadata. When IN is specified and only one exists it is treated as an equal. If no query target is specified then the incoming query data object will be treated as the query target.

The EIS specific query request may map a query such as this to a function call. The EIS equivalent of customer and the ID are specified. Further and indication is provided that the request is a search. The query executor extracts this information from the customer query data object and performs the request.

The query to data format converter may dynamically create one of these wrapper objects utilizing namespace and schema definitions to create an on the fly definition with the correct multiplicity to represent the data set for the query. Similarly on the fly dynamic wrapper objects can be created for two or more data objects to represent a query. An example is a query that includes a customer and an address.

The query to data format converter performs the following tasks to create or enter the query metadata into this common metadata based query object . If the query object already exists as a collection the query to data format converter would just provide the query metadata values as shown in . Otherwise the query to data format converter would dynamically create a common metadata based query object as shown in and enter the values.

Building the query object involves a series of tasks. The query is parsed to determine the querying target component or object. The query is also parsed to determine the return types that are necessary for the target component. The type of query is also discerned from the query . The values required to specify a condition are mapped to the condition types and their values. These values are then matched up and entered into their respective types and values in the query data object.

The processor is coupled either directly or indirectly to the memory through a system bus. The memory can include local memory employed during actual execution of the program code bulk storage and or cache memories which provide temporary storage of at least some program code in order to reduce the number of times code must be retrieved from bulk storage during execution.

The input output devices can be coupled directly to the system or through intervening input output controllers. Further the input output devices can include a keyboard a keypad a mouse a microphone for capturing speech commands a pointing device and other user input devices that will be recognized by one of ordinary skill in the art. Further the input output devices can include a receiver transmitter speaker display image capture sensor biometric sensor etc. In addition the input output devices can include storage devices such as a tape drive floppy drive hard disk drive compact disk CD drive etc.

Network adapters may also be coupled to the system to enable the system to become coupled to other systems remote printers or storage devices through intervening private or public networks. Modems cable modems and Ethernet cards are just a few of the currently available types of network adapters.

It should be understood that the method and system described herein can take the form of an entirely hardware embodiment an entirely software embodiment or an embodiment containing both hardware and software elements. If software is utilized to implement the method or system the software can include but is not limited to firmware resident software microcode etc.

Further the method and or system can take the form of a computer program product accessible from a computer usable or computer readable medium providing program code for use by or in connection with a computer or any instruction execution system. For the purpose of this description a computer usable or computer readable medium can be any apparatus that can contain store communicate propagate or transport the program for use by or in connection with the instruction execution system apparatus or device.

The medium can be an electronic magnetic optical electromagnetic infrared or semiconductor system or apparatus or device or a propagation medium. Examples of a computer readable medium include a semiconductor or solid state memory magnetic tape a removable computer diskette a RAM a ROM a rigid magnetic disk and an optical disk. Current examples of optical disks include CD read only memory CD ROM CD read write CD R W and DVD.

While the apparatus and method have been described in terms of what are presently considered to be the most practical and preferred embodiments it is to be understood that the disclosure need not be limited to the disclosed embodiments. It is intended to cover various modifications and similar arrangements included within the spirit and scope of the claims the scope of which should be accorded the broadest interpretation so as to encompass all such modifications and similar structures. The present disclosure includes any and all embodiments of the following claims.

