---

title: Embedding user-selected content feed items in a webpage
abstract: A computer-implemented method of serving content includes receiving information identifying one or more content items in a content feed. The one or more content items have been individually selected by a first user at a first client. Code is provided that, when incorporated into a webpage, instructs the webpage to display or list the selected one or more content items.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08255812&OS=08255812&RS=08255812
owner: Google Inc.
number: 08255812
owner_city: Mountain View
owner_country: US
publication_date: 20080317
---
This application claims priority to U.S. Provisional Patent Application No. 60 895 099 titled Embedding User Selected Content Feed Items in a Webpage filed Mar. 15 2007 which is incorporated herein by reference in its entirety.

The disclosed embodiments relate generally to content syndication and more particularly to a content feed user interface with multiple modes for viewing content feed items.

Content syndication is growing in popularity as a way to distribute frequently updated information such as news and blog postings on the Internet. Using content syndication formats such as Really Simple Syndication RSS content providers can include content and or links to such content in a content feed. Users may subscribe to these content feeds using an application known as a feed reader content feed reader feed aggregator or content feed aggregator. When the content feed is updated with new content items the new content items are reflected in the user s reader.

A user may subscribe to many content feeds with each feed listing multiple content items. The user may desire to share some or all of these content items with other users including other users who do not subscribe to the corresponding content feeds. The other users may desire to view the shared content items without using a feed reader application.

A computer implemented method of serving content includes at a server receiving information identifying one or more content items in a content feed. The one or more content items have been individually selected by a first user at a first client. Code is provided to the first client that when incorporated into a webpage instructs the webpage to display or list the selected one or more content items.

A computer implemented method of displaying content includes at a first client individually selecting one or more content items in a content feed requesting code containing instructions for displaying or listing the one or more content items receiving the requested code and incorporating the requested code into a webpage. The requested code instructs the webpage to display or list the selected one or more content items.

A system for serving content includes memory one or more processors and one or more programs stored in the memory and configured for execution by the one or more processors. The one or more programs include instructions for receiving information identifying one or more content items in a content feed that have been individually selected by a first user at a first client. The one or more programs also include instructions for providing code that when incorporated into a webpage instructs the webpage to display or list the selected one or more content items.

A first client system for displaying content includes memory one or more processors and one or more programs stored in the memory and configured for execution by the one or more processors. The one or more programs include instructions for detecting individual selection of one or more content items in a content feed instructions for requesting code containing instructions for displaying or listing the one or more content items and instructions for receiving the requested code. The requested code when incorporated into a webpage instructs the webpage to display or list the selected one or more content items.

A computer readable storage medium stores one or more programs configured to be executed by a computer system. The one or more programs include instructions for receiving information identifying one or more content items in a content feed. The one or more content items have been individually selected by a first user at a first client. The one or more programs also include instructions for providing code that when incorporated into a webpage instructs the webpage to display or list the selected one or more content items.

A computer readable storage medium stores one or more programs configured to be executed by a computer system. The one or more programs include instructions for detecting individual selection of one or more content items in a content feed instructions for requesting code containing instructions for displaying or listing the one or more content items and instructions for receiving the requested code. The requested code when incorporated into a webpage instructs the webpage to display or list the selected one or more content items.

In a content feed aggregation system a user may subscribe to one or more content feeds and be presented with the content items included in those content feeds. The content items may be presented to the user in an ordered list such that the format of each item in the list is uniform. However the user may desire to view additional information about selected content items beyond that provided by a uniform list. The disclosed embodiments provide the user a way to view additional information about selected items. For example in one mode of operation when a user selects a first content item the selected item is displayed in an expanded format and other items are displayed in a compact format. When the user subsequently selects a second content item the second item is displayed in the expanded format and the first item is displayed in the compact format.

A user also may desire to share content items with other users or to make content items publicly accessible. The disclosed embodiments provide ways to share content items such that other users may access the shared content items without using a feed reader user interface. For example in one mode of operation users may view a webpage that displays a particular user s shared content items. In another mode of operation a particular user may incorporate code into a webpage that instructs the webpage to display one or more of the particular user s shared content items. The webpage with the incorporated code may display additional content unrelated to the shared items. Users accessing these web pages thus may view shared content items without using a feed reader user interface.

Content feeds are also herein called feed streams. The feed items from a content feed source can be considered to be a stream of items. Furthermore some embodiments of the content feed aggregation and distribution system described herein allow users to define virtual streams that incorporate content items from content feeds and or other virtual streams. Thus in these embodiments the term feed streams also encompasses virtual streams defined by the users of the content feed aggregation and distribution system.

The server system accesses content feeds from the feed sources . The server system includes a server and a database . Server serves as a front end for the server system . Server sometimes called a front end server retrieves the content feeds from the feed sources and also provides an interface between the server system and the client systems . In some embodiments the functions of server may be divided or allocated among two or more servers.

The server system stores content items in the content feeds in the database . In some embodiments the database stores both metadata e.g. title description URL date time and possibly other metadata and the content of each content item. However in some other embodiments the database stores the metadata but not the content for each content item. The database also stores user feed information for a plurality of users. The user feed information for a particular user identifies content feed subscriptions as well as sources filters read states and additional information for that particular user. That is user feed information associated with a user identifies the content feeds to which the user has subscribed any filters the user has defined for the feeds any labels the user has associated with individual feed items and an indication of whether each feed item has been marked as read by the user. The user feed information also may indicate whether each feed item has been marked as shared by the user.

It should be appreciated that the server system including the server and the database may be implemented as a distributed system of multiple computers. However for convenience of explanation the server system is described below as being implemented on a single computer which can be considered a single logical system.

A content feed or channel is a resource or service that provides a list of content items that are present recently added or recently updated at a feed source . A content item in a content feed may include the content associated with the item itself the actual content that the content item specifies a title sometimes called a headline and or a description of the content a network location or locator e.g. URL of the content or any combination thereof. For example if the content item identifies a text article the content item may include the article itself inline along with the title or headline and locator. Alternatively a content item may include the title description and locator but not the article content. Thus some content items may include the content associated with those items while others contain links to the associated content but not the full content of the items. A content item may also include additional metadata that provides additional information about the content. For example the content item may include an associated timestamp or date. The full version of the content may be any machine readable data including but not limited to web pages images digital audio digital video Portable Document Format PDF documents and so forth.

In some embodiments a content feed is specified using a content syndication format such as RSS. RSS is an acronym that stands for rich site summary RDF site summary or Really Simple Syndication. RSS may refer to any of a family of formats based on the Extensible Markup Language XML for specifying a content feed and content items included in the feed. In some other embodiments other content syndication formats such as the Atom syndication format or the VCALENDAR calendar format may be used to specify content feeds.

Further information regarding the RSS syndication format known as Really Simple Syndication is disclosed in the 2.0 by D. Winer which is hereby incorporated by reference herein in its entirety. M. Nottingham et al. disclose further information regarding the Atom syndication format in which is hereby incorporated by reference herein in its entirety.

A user interfaces with the server system and views content items at a client system or device hereinafter called the client system for ease of reference . The client system includes a computer or computer controlled device such as a personal digital assistant PDA cellular telephone or the like. The computer typically includes one or more processors not shown memory which may include volatile memory not shown and non volatile memory such as a hard disk drive and a display . The computer may also have input devices such as a keyboard and a mouse not shown .

In some embodiments a user may interact with the server system via a feed reader user interface that may be presented on the display . The user may create a list of feed subscriptions via the feed reader user interface . In some embodiments using the feed reader user interface the user may also create filters or labels to be applied to content feeds and or content items and modify the read states of content feeds and or content items. The feed reader user interface transmits a list of content feed subscriptions or modifications to a list of content feed subscriptions to the server system for storage at the database . The feed reader user interface presents content items stored at the database to the user based on the user s list of content feed subscriptions. That is feed reader user interface presents to the user content items specified in the content feeds to which the user has subscribed. In some embodiments a user may view the full version of the content of a content item in the feed reader user interface by selecting it e.g. by clicking on it with a mouse pointer . In some embodiments a copy of the user s list of content feed subscriptions and copies of the presented content items may be cached locally at the client system .

In some embodiments the feed reader user interface may be a web based user interface. That is the feed reader user interface includes one or more web pages. It is noted that a single webpage can contain multiple frames each of which may appear when displayed by a browser application to be a distinct webpage. The webpage s may be written in the Hypertext Markup Language HTML Extensible Markup Language XML or any other suitable language for preparing web pages and may include one or more scripts for interfacing with the server system . For example the webpage s may include a JAVASCRIPT a registered trademark of Sun Microsystems Inc. application that interfaces with the server system via an application programming interface API . The JAVASCRIPT application receives content items from the server system manages the rendering of those content items at the client and also performs the client side aspects of other tasks such as marking items as read marking items as shared adding and removing content feed subscriptions labeling content feed subscriptions and or individually selected content items selecting or revising user preferences and the like. The user may subscribe to content feeds view content items and otherwise interact with the server system by interacting with the webpage s of the feed reader user interface . In other words the server system including the feed reader user interface provides a web based content aggregation service. The server system aggregates and stores content items in accordance with the user s content feed subscriptions. In some embodiments the server system can also apply filters or labels or change the read states and or shared states of content items in accordance with user actions or instructions. When the user accesses the feed reader user interface the content items are presented to the user via the feed reader user interface .

In some other embodiments the feed reader user interface may be a part of a standalone application that is run on the client system . The standalone application may interface with the server system via an application programming interface API .

A user may select a next item second item for example by scrolling down the list or may select another item second item for example by clicking on it. In response the ordered list is redisplayed . The newly selected second item is displayed in expanded format while other items such as the first item are displayed in compact format . depicts an exemplary schematic screen shot of a user interface showing a second item in expanded format while the first item and other items are displayed in compact format.

As discussed below with reference to in some other embodiments content items are marked as read when they are displayed in expanded format. Alternatively content items are marked as read when they are selected regardless of whether they are displayed in expanded or compact format. Furthermore in some embodiments content items that have been marked as read which have not yet been scrolled off the displayed list are displayed in a manner that is distinct from the display of unread items. For example one or more portions of the displayed text e.g. the displayed title or headline of items marked as read may be displayed using a light shade of gray while the corresponding text or text portions of unread items may be displayed using black text.

A user may select a next item second item for example by scrolling down the list or may select another item second item for example by clicking on another item. In response the ordered list is redisplayed . The newly selected second item is displayed in expanded format while other items such as the first item are displayed in compact format . Selection of the second item results in the status of the second item being changed from unread to read . In one embodiment the status is changed by transmitting information to server indicating that the second item has been read . Server then updates database to reflect that the second item has been read by the user.

Feed reader user interface includes a list of labels also referred to as folders associated with content feeds to which a user has subscribed. Exemplary labels shown in include News and Sports . The labels or folder names may be user defined names. User interface also includes an ordered list of content items associated with a selected label. For example in the Sports label has been selected by the user as indicated by a shaded background. In this example items associated with the Sports label including items and are listed in ordered list . In some embodiments items in ordered list are ordered according to timestamps associated with the items. In some other embodiments items in ordered list are ordered in accordance with a score that takes into account the content of the items the source of the items and or the timestamps of the items.

A user may select a different label for example by clicking on a different label. If a user selected the News label ordered list would display content items associated with News label . Also user interface would indicate that the News label was selected by for example displaying it with a shaded background. In this example the background for Sports label would no longer be shaded after the user selected News label .

In all items in ordered list including items and are displayed in compact format. In this embodiment compact format includes the source headline and timestamp for each item displayed in a single line. For example the compact format display for item includes Sports Source Sports Headline and Timestamp all displayed on the same line of ordered list . In other embodiments compact format might include additional information. For example a brief portion of the content could be displayed next to the headline.

User interface shows that an item in ordered list is selected by displaying that item with a bold border. In item is selected as indicated by its bold border. Items and are not selected as indicated by their narrow borders. In other embodiments a selected item may have a border with a different color from that of other items e.g. a thick blue border for the selected item and a gray or thin black border for the unselected items . A user may select another item second item by clicking on Next Item button or Previous Item button by clicking directly on another item or by scrolling through ordered list using scrollbar and then clicking on another item. For example in a user could select item by clicking Next Item button or by clicking directly on item . Item then would be displayed with a bold border and other items such as item would appear with narrow borders.

As discussed above with regard to a user may select another item second item . For example in the user might select item by clicking on item or by clicking Next Item button . a schematic screenshot of a web browser presenting a webpage that displays a feed reader user interface shows the result of this user action according to an embodiment. The selected item corresponding to item in compact format appears in expanded format. Other items including first item corresponding to item in expanded format are displayed in compact format.

In the example of item is not as large as item it has only one line of content as opposed to two. Therefore the ordered list in displays fewer items than the ordered list in ordered list in displays seven items while ordered list in displays eight items. In general the number of items displayed in ordered list will vary depending on the size in expanded format of the selected item.

Some but not necessarily all content items displayed in expanded format include a link to the full content associated with those content items. The link may be activated by a user clicking on the headline in the content item or by clicking on a link icon not shown in displayed in the expanded format of a respective content item. Activation of the link typically causes the browser to open a new browser window or tab and to download and display the document if any located at the location e.g. URL specified by the link.

Although not shown in the feed reader user interface will typically include icons menu items or the like for reviewing and managing the user s content feed subscriptions including removing and adding content feed subscriptions and optionally labeling a respective content feed subscription with one or more user defined labels or alternately assigning the respective content feed subscription to one or more user defined folders .

User activation of share icon for example by clicking on the icon with a mouse or other pointing device changes a status of content item to indicate that the item may be shared with other users i.e. that the item is a shared item . For example a shared flag associated with the content item and the user is set to indicate that the content item is a shared item. Other users may view shared items through user interfaces such as web pages C E or F .

In some embodiments upon user activation of share icon for a particular content item share icon is replaced with an unshare this item icon hereinafter unshare icon . Subsequent activation of unshare icon changes the status of the particular content item to indicate that the item may not be shared with other users i.e. that the item is no longer a shared item . For example activation of unshare icon would prevent other users from viewing the particular content item through user interfaces such as web pages C E or F .

In some embodiments a user may change a status of an entire content feed or of an entire virtual stream for example by activating a share this feed stream icon not shown . In some embodiments the virtual stream was created by the user in some other embodiments the virtual stream is subscribed to by the user and was created by another user. Activation of a share this feed stream icon changes the status of all content items in the content feed to indicate that the content items are shared items. In some embodiments upon user activation of a share this feed stream icon the icon is replaced with an unshare this feed stream icon. Subsequent activation of the unshare this feed stream icon changes the status of all content items corresponding to the content feed to indicate that they are no longer shared items.

User interface A also includes an all items icon and a shared items icon . Activation of all items icon results in display of an ordered list of content items from all content feeds to which a user subscribes not shown . Activation of shared items icon results in display of an ordered list e.g. ordered list in UI B of shared items. For example if a user activates share icon for content item and then activates shared items icon content item will be displayed in ordered list of shared items. Ordered list displays other shared items such as shared items and . In some embodiments shared items and are displayed in ordered list because share icons corresponding to each item previously were activated.

In some embodiments activation of an unshare icon e.g. icon results in removal of the corresponding item from ordered list . For example in response to activation of unshare icon content item no longer would be displayed in UI B.

In some embodiments UI B includes a link to a webpage displaying or listing a user s shared items e.g. webpage C . In some embodiments UI B includes a link to a clip creation webpage e.g. webpage D for enabling a user to incorporate a content feed clip into a webpage maintained by the user e.g. webpage E or webpage F and to thereby display or list shared content items on the webpage. The webpage into which the content feed clip is incorporated may include other content unrelated to the user s shared content items.

Webpage C is publicly accessible via a corresponding URL . Thus once a user has selected one or more content items as shared items other users may access those items by viewing webpage C. Because webpage C is independently accessible via URL the other users do not need to log in to a feed reader application to access the shared items.

Webpage C provides a dedicated webpage for a user s shared items. However a user may desire to display or list his or her shared items on a webpage that also contains other information. For example a user may desire to display or list his or her shared items on a blog on a personal homepage or on any other webpage maintained by the user. The user may achieve this goal by incorporating a content feed clip into the webpage.

In some embodiments webpage D provides code e.g. script that when incorporated into a webpage instructs the webpage to display or list the shared content items. For example once the user has specified the relevant details regarding the content feed clip the user may activate a get code now icon for example by clicking on the icon. In response script is displayed in window . The user may copy and paste script into the html code corresponding to a webpage thereby incorporating script into the webpage.

In some embodiments script is an executable script. In some embodiments script is written in the JAVASCRIPT scripting language ECMASCRIPT the specification for which is published by the European Computer Manufacturers Association International or the VBSCRIPT a trademark of Microsoft Inc. scripting language. In some embodiments script is a two line script the first line points to shared code stored on a server associated with a feed reader application that renders clips. The second line fetches the clips to be displayed or listed and may specify information about styling the clips.

In some embodiments webpage D displays a preview of the shared content items that will be displayed on the webpage into which script is incorporated. For example preview window displays headlines and corresponding to shared content items and . In some embodiments in addition to displaying headlines preview window may display sources timestamps or dates and or content. In some embodiments the preview of the shared content items is generated by executing the executable script. The executable script is typically executed by a virtual machine that is part of a browser application e.g. a web browser which in turn is executed by the client system on which the browser application is installed.

In some embodiments the webpage into which script has been incorporated displays for each displayed shared content item a headline e.g. a source a timestamp or date and or content as shown in webpage E. In some embodiments the webpage into which script has been incorporated lists headlines for shared content items e.g. headlines and as shown in webpage F. In some embodiments a user viewing webpage F may view a content item by clicking on a corresponding headline. In some embodiments script specifies what information corresponding to each content item is displayed.

In some embodiments the shared content items are displayed or listed inline in the webpage such that the items do not have a distinct appearance in the webpage. In some other embodiments the shared content items are displayed in a distinct region in the webpage or otherwise have a distinct appearance from other content in the webpage.

In addition to displaying or listing shared content items web pages E and F include other webpage content and that may be unrelated to the shared content items.

In some embodiments the selection of content items by the first user of the first system is detected at a server system when it receives information from the first client indicating that one or more content items in one or more content feeds have been selected by the first user . This information is automatically sent by the browser application to the server system when the user selects the content items by clicking on appropriately labeled links in those content items. The links contain URLs that reference the server system and parameters that identify the selected content items.

Code is provided e.g. script to the first client that when incorporated into a webpage instructs the webpage to display or list the selected one or more content items . Typically the code is provided to the first client in response to receipt of a command e.g. a get code now command from the first client . In some embodiments the command is transmitted from the first client to the server system when the first user selects or clicks on an appropriately labeled link icon or button in the user interface e.g. the Get Code Now icon shown in . Webpage E illustrates a display of selected content items in response to instructions from the incorporated code in accordance with some embodiments. Webpage F illustrates a listing of selected content items in response to instructions from the incorporated code in accordance with some embodiments. As described above the selected content items may be content items individually selected by a user. In some embodiments the selected content items may include one or more content feeds selected by a user.

In some embodiments the provided code is an executable script . In some embodiments the executable script is written in the JAVASCRIPT scripting language ECMASCRIPT or the VBSCRIPT scripting language.

In some embodiments the webpage is downloaded from a host for display at a second client associated with a second user . For example webpage E or F would be displayed at the second client.

Selection by the first user of a link corresponding to a clip creation webpage is detected . In response the clip creation webpage is displayed . For example activation of link e.g. by clicking on the link results in display of clip creation webpage D .

The clip creation webpage provides code that when incorporated into a webpage instructs the webpage to display or list the selected one or more content items . For example activation of get code now icon in UI D results in script being provided in window . Examples of web pages that incorporate script are shown in .

In some embodiments the provided code is an executable script . In some embodiments the executable script is written in the JAVASCRIPT scripting language ECMASCRIPT or the VBSCRIPT scripting language.

Code containing instructions for displaying or listing the one or more content items is requested by the first client and received at the first client . For example in some embodiments activation of link followed by activation of get code now icon results in generation of a request for the code. In this example the requested code is received and displayed in window .

In some embodiments the requested code is an executable script . In some embodiments the executable script is written in the JAVASCRIPT scripting language ECMASCRIPT or the VBSCRIPT scripting language.

The requested code is incorporated into a webpage wherein the requested code instructs the webpage to display or list the selected one or more content items . Examples of web pages that incorporate script are shown in .

In some embodiments the webpage with the incorporated code is uploaded to a host for serving to clients including clients other than the first client . When the webpage is served from the host to other clients the selected one or more content items are displayed or listed . These operations allows users other than the first user to access the webpage from their own client systems and thus to view the selected content items.

In some embodiments the previously provided code is an executable script. In some embodiments the executable script is written in the JAVASCRIPT scripting language ECMASCRIPT or the VBSCRIPT scripting language. In these embodiments the executable script is typically executed by a virtual machine that is part of a browser application e.g. a web browser which in turn is executed by the client system on which the browser application is installed.

The request is received at the server system . In response at least one content item e.g. shared content items and or from a respective content feed is transmitted to the second client . In some embodiments the at least one content item is transmitted to the second client for display or listing inline in the webpage .

In response to accessing the webpage a request is generated at the second client system to the server system for at least one content item from a respective content feed . In the examples of web pages E and F requested content items may include the shared content items corresponding to headlines and i.e. shared content items and . The request is automatically generated by executing code previously provided by the server system in response to a request from the first client system wherein the previously provided code is incorporated into the accessed webpage displayed by the second client system. For example execution of script embedded in webpage E or F results in generation of the request.

In some embodiments such as in the example of script the previously provided code is an executable script . In some embodiments the executable script is written in the JAVASCRIPT scripting language ECMASCRIPT or the VBSCRIPT scripting language.

The at least one content item is received at the second client system and is displayed or listed in the webpage . For example shared content items and are displayed in webpage E in another example corresponding headlines and are listed in webpage F.

The feed reader module includes a content item format module for determining the format in which to display content items a local database for storing content items sent by the server and a server interface module for interfacing with server computer .

In some embodiments the feed reader module may be a script based module embedded in a webpage served from the server system . The webpage may be rendered by a client application such as a web browser at the client computer . When the webpage is rendered the feed reader module is executed thereby providing a web based interface to the server system . The script based feed reader module may be written in JAVASCRIPT ECMASCRIPT VBSCRIPT or any other suitable scripting language.

In some other embodiments the feed reader module may be a standalone application stored in memory of the client computer . The standalone application may include but is not limited to a feed aggregator application. In further other embodiments the feed reader module may be an add on or a plug in to another application. For example the feed reader module may be a plug in or extension to a web browser application or an email application.

In some embodiments received content items may be cached locally in memory . Similarly a user s list of content feed subscriptions may also be cached locally in memory .

Each of the above identified elements in may be stored in one or more of the previously mentioned memory devices. Each of the above identified modules corresponds to a set of instructions for performing a function described above. The above identified modules or programs i.e. sets of instructions need not be implemented as separate software programs procedures or modules and thus various subsets of these modules may be combined or otherwise re arranged in various embodiments. In some embodiments memory may store a subset of the modules and data structures identified above. Furthermore memory may store additional modules and data structures not described above.

Each of the above identified elements in may be stored in one or more of the previously mentioned memory devices. Each of the above identified modules corresponds to a set of instructions for performing a function described above. The above identified modules or programs i.e. sets of instructions need not be implemented as separate software programs procedures or modules and thus various subsets of these modules may be combined or otherwise re arranged in various embodiments. In some embodiments memory may store a subset of the modules and data structures identified above. Furthermore memory may store additional modules and data structures not described above.

Although shows a server computer is intended more as a functional description of the various features which may be present in a set of servers than as a structural schematic of the embodiments described herein. In practice and as recognized by those of ordinary skill in the art items shown separately could be combined and some items could be separated. For example some items shown separately in could be implemented on single servers and single items could be implemented by one or more servers.

Table further includes a row for each user with fields or columns containing user data for each content stream. In some embodiments the user data for a respective content stream includes a subscribed flag indicating whether the user has subscribed to the content stream associated with the column containing the user data. The user data may also include a marked as read flag and timestamp which indicates whether and when the user corresponding to the row has viewed the items in the content stream associated with the column . The user data may further include additional user information such as one or more user specified labels . A user may label content streams that the user may want to view again in the future and a record of the label that the user associated with a content stream may be stored in the user data .

The user data optionally may include one or more additional fields and or . For example the user data optionally may include a sort order flag for specifying the order in which to display content items on a user interface such as user interface . For example content items may be displayed in chronological order or according to a ranking based on predefined criteria e.g. the quantity and or quality of the content in the content items as well as the recency of the content items . The user data may further include an animation flag to indicate whether or not to display animations on the user interface. The user data may include user interface feature flags or parameter values to specify other user interface characteristics associated with the user. For example user interface feature flags may be used to specify the formatting and color of a user interface. In an embodiment users may set the sort order flag the animation flag and user interface feature flags via menus accessible from the user interface not shown .

The feed content table and user subscription table or portions of these tables may be stored using sparse table storage mechanisms since large portions of the user data in these tables may be empty or set to default values.

Columns and are associated with virtual content streams defined as streams derived from one or more other content streams. For example user has subscribed to streams and and assigned the label tech to both streams as indicated by the check mark and text label tech at the intersection of row with columns and . User thereby created stream a virtual stream. In some embodiments a respective virtual stream is given a feed ID that includes a user name or identifier and a label assigned by a respective user e.g. the feed ID may have the form user label . Examples of such feed ID s are listed in row of . In this example stream has the feed ID User1 tech. Because the feed ID of a respective virtual stream includes the user name or identifier of the user who defined the virtual stream multiple users may use the same label without conflict. For example user row not shown has assigned the label tech to one or more streams resulting in stream with feed ID User25 tech .

Some virtual streams may correspond to or may include individual content items on one or more content feeds that have been labeled by a respective user. For example a user e.g. user99 may mark or label specific content feed items as favorite items or the user may assign a user specified label e.g. best or reviews to specific feed items. If the set of user labeled items is made available for subscription by others the user labeled items become a virtual stream that is assigned a stream identifier such as user99 best . This virtual stream is assigned a column in the user subscription table and subscription and user labeling information for the virtual stream is stored in this column.

Check marks in column associated with stream indicate which other users have subscribed to stream . In this example user has subscribed to stream and assigned the label friends to it. User also has assigned the label friends to stream created by user . User thereby created stream which has feed ID User2 friends . Stream thus is a virtual stream comprising other virtual streams stream and stream demonstrating that multiple levels of recursion are allowed for virtual streams. User has subscribed to stream . If user desired he could label stream thereby creating another virtual stream with an additional level of recursion and another user could subscribe to that virtual stream.

The foregoing description for purpose of explanation has been described with reference to specific embodiments. However the illustrative discussions above are not intended to be exhaustive or to limit the invention to the precise forms disclosed. Many modifications and variations are possible in view of the above teachings. The embodiments were chosen and described in order to best explain the principles of the invention and its practical applications to thereby enable others skilled in the art to best utilize the invention and various embodiments with various modifications as are suited to the particular use contemplated.

