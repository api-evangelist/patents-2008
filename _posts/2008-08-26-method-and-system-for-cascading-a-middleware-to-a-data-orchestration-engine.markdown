---

title: Method and system for cascading a middleware to a data orchestration engine
abstract: Methods, systems, and computer-readable medium storing instructions thereon for implementing methods are directed to facilitating data exchange, such as accessing and operating on data objects, between field applications, such as mobile clients, and dedicated servers by leveraging the features of middleware. An embodiment includes a first server providing a first set of services and data to a mobile client. A first communicating middleware is connected between the first server and the mobile client according to a first communication functionality. A second server provides a second set of services and data according to a second communication functionality that is different from the first communication functionality. A second middleware communicates with the second server according to the second communication functionality, and communicates with the first middleware according to the first communication functionality. The second middleware is connected to the second server and the first middleware.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08266104&OS=08266104&RS=08266104
owner: SAP AG
number: 08266104
owner_city: Walldorf
owner_country: DE
publication_date: 20080826
---
The present invention relates to systems methods and computer readable medium storing instructions thereon for implementing methods for facilitating data exchange e.g. accessing and operating on data objects between field applications and or dedicated servers.

Some businesses have a need for providing fast access to company information to employees in the field e.g. sales professionals purchasers executives and the like. For example a professional uses customer information and service information stored on a customer relationship management server which is also stored in a laptop to execute the services for the customers. The professional generates documents and inquiries that are sent to the customer relationship management server. However at times an existing or new field application requires additional objects from a third system such as an enterprise resource planning ERP system. By using the dedicated middleware alone it is not possible to support the required data exchange of additional data from the third system because the middleware is designed to work only between the dedicated server application and field application. The middleware cannot replicate data with a third system meaning the following functional features such as a capability to pull data from another system capability to determine deltas or changes capability to the pulled data capability to perform a key mapping between the involved systems and capability to handle data with specific formatting such as documents formatted for transferring the data for a business transaction including data change pointers originating from the third system are missing.

Field or mobile applications such as a mobile subscriber application exchange data with dedicated server applications using dedicated middleware. The mobile service application may be a mobile function hosted on a laptop based application for example used by a service technician working in the field and providing services to customers. The field or mobile application acts as a channel to exchange data with an application server such as a customer relationship management CRM application. Functionalities in the mobile application extend some functionalities provided in the application server to a user of the field or mobile application. To exchange data between the mobile application server and the mobile application middleware functionalities may be used.

At present available methods do not appear to support the required the data exchange with additional data from the enterprise resource planning ERP system using CRM middleware alone. In available methods the CRM middleware is designed to work only between the CRM server application and other applications. Technically it is understood that the CRM middleware cannot replicate with a third system. For example such functional features as a pull mechanism key mapping service delta compare service to compare deltas on pulled data and intermediate document handling may not be available via such a system.

It is generally not feasible to replace the mobile application middleware used by the mobile client fully because of the existing functionalities and landscape dependencies of mobile clients on the present mobile application middleware. Accordingly a need exists to develop a solution that provides the functions which overcome the above and other limitations of the described mobile application computing environment.

Embodiments of the present invention provide systems methods and computer readable mediums storing instructions thereon for implementing methods to enable a data exchange between a third system e.g. a backend system and a mobile application.

Embodiments of the present invention provide access to data by a system including a first server a first middleware a mobile client a second server and second middleware. The first server provides a first set of services and data to a mobile client. In an embodiment the mobile client is configured to exchange data with the first server. The first middleware is connected between the first server and the mobile client and communicates between the first server and the mobile client according to a first communication functionality. In an embodiment the second server provides a second set of services and data according to a second communication functionality that is different from the first communication functionality. The second middleware is connected to the second server and the first middleware. The second middleware provides the mobile client access to the services and data provided by the second server by communicating with the second server according to the second communication functionality and communicating with the first middleware according to the first communication functionality.

Embodiments of the present invention include a computer implemented method for providing access to data. In a first step a first set of services and data to a mobile client are provided by a first server the mobile client configured to exchange data with the first server. The first middleware connected between the first server and the mobile client communicates according to a first communication functionality. A second set of services and data are provided by a second server according to a second communication functionality that is different from the first communication functionality. A second middleware communicates with the second server according to the second communication functionality and communicates with the first middleware according to the first communication functionality. The second middleware is connected to the second server and the first middleware.

Embodiments of the present invention provide a computer readable medium embodied with instructions for providing access to data stored in an incompatible application the instructions causing a computer to execute the various computer implemented method embodiments of the present invention.

In an embodiment the exchange of data between the backend Y server is brought to DOE system by at least one of a server driven approach and a middleware driven approach.

In an embodiment of a server driven approach data is sent from backend server to the DOE as an intermediate document or in another form. The data can be received by the DOE . The data is interpreted and saved in the DOE . In an embodiment of a server driven approach a change to the data triggers an event in response to which a connected device pulls data indicated in the event. An intermediate document received via a push mechanism is processed by the DOE middleware using a pull replication the entire document is read and data changes are consolidated with a version of the document stored in the DOE middleware CDS. The DOE middleware then pushes the data to the CRM middleware .

In an embodiment of a middleware driven approach due to a lack of server driven data data can be pulled from backend server with the help of remote function call RFC modules and saved into DOE . The RFC calls are discussed in further detail e.g. with reference to . In an embodiment of a middleware driven approach change events are not triggered. Instead the middleware performs periodic pulls on the data objects since it cannot receive events. However CRM middleware cannot perform either function. In an embodiment the DOE converts the backend communication protocol or functionality into one that is understood by the CRM middleware MW .

In an embodiment the data is sent from the DOE to X server MW via an RFC module. The X server MW can use replication and realignment services to send data to X Server Mobile Client . The X Server Mobile Client uses data exchange services to send data to X Server MW . Another RFC module requests data to be sent from the X middleware to DOE . In an embodiment the data is sent from DOE to Y Backend Server via another RFC.

Embodiments of the present invention provide a system involving any or all forms of data including e.g. intermediate documents transferring data for a business transaction and services for various computer applications.

In an embodiment the data flow is accomplished by the processing of remote function calls RFC or remote process calls RPC . The DOE also provides the functionality of push pull that is not available to the X middleware . Specifically the DOE middleware provides the capability to receive an intermediate document with the primary key and document type and in response to receiving the intermediate document to pull the data from the backend Y server . In an embodiment the X server may not provide this data. In an embodiment the push of the Y server data and or services cannot be handled by the X server . In some embodiments discussed here there are two types of business objects server driven and middleware driven. The former example embodiment is a server driven approach. In a middleware driven approach change events are not triggered. Instead in an embodiment the middleware performs periodic pulls on the data objects since it cannot receive events. DOE middleware converts the backend communication protocol or functionality into one that is understood by the CRM middleware .

In an embodiment the DOE middleware facilitates communication between the Y server and the X Application solution via asynchronous communication channels with the X middleware . In an embodiment in response to remote function calls RFC from the X middleware the DOE middleware interprets the remote function calls. In response in an embodiment the DOE middleware determines data changes by the backend Y server . This function can be performed by the DOE middleware either periodically pulling data or by receiving a change event. For example in the periodic pull the DOE middleware pulls data periodically from the Y server and compares each pulled data object with its version in its own data base in order to determine a change. For example in the case of a change event the DOE middleware receives a change event through an intermediate document from the Y server the event triggers the pull operation as described above. For example in the pull operation the DOE middleware pushes all changed data to the X middleware via an RFC call . In response to the push from the DOE middleware the X middleware pushes each changed data which belongs to the Y server back to the DOE middleware via an RFC call. The DOE middleware then consolidates the changes in its own database and if no conflict exists sends this change to the Y server . In an embodiment a conflict occurs if the Y server has changed the same data object concurrently. In the case of a conflict the changed data sent by X middleware is discarded and instead the changed data of Y server is kept and a conflict message sent to X middleware .

The X middleware pushes changes in data originating from Y server which can be changes revision or deletion in data originated from Y server and creation of new data relevant to be saved in Y server . In an embodiment in case of creation of new data made by the mobile client there is no need of any comparison by DOE middleware with its own database and can directly be pushed to Y server . In an embodiment the DOE middleware compares the changed data or a representation thereof such as primary key information to data or primary key information stored in the local data store i.e. the CDS. If there are no data conflicts within the CDS the change data is stored. The changed data is then pushed by the DOE middleware to the Y server . Specific embodiments are described with reference to .

The documents to be downloaded can be located in the Y server of in which case the Y application can be an enterprise resource planning application ERP . The document download process begins with a document being changed in for example an ERP application Step . For example a change to a document can include a deletion of the document a creation of a document or a revision to an existing document. In an embodiment when the document is changed an intermediate document containing data such as a primary key that can be used to identify the document is also created. An intermediate document can be an event message that is locally passed from the Y server to the DOE middleware . In an embodiment the intermediate document is created for the document and passed to the receiver systems periodically in step . The following steps can occur in the data orchestration engine DOE middleware of e.g. . In an embodiment the intermediate document is forwarded to the DOE from the ERP in step with reference key information. In an embodiment the primary key information includes at least one of the document identifier the document type and any combination of data associated with the intermediate document. At step the intermediate document inbound function module is called based on the intermediate document message type. In an embodiment the intermediate document Inbound function module performs based on the intermediate document type and document type the intermediate document Inbound function module identifies associated MBO which needs to be used for further operations. After the intermediate document inbound function module performs its functions a mobile business object MBO flow and services are called in step using the primary key of the business object. At a routine is called using the primary key passed from the Y server . For example in the Y server the details are fetched from a database accessible by Y server Step for the primary key. This data is forwarded in step to a key mapping service. If for example the data has not changed for the primary keys the intermediate document is not downloaded at this time Step . However for example if there are new primary keys new data or data existing in the consolidated data store CDS has changed the consolidated data store service is called at step . The CDS service includes logic for comparing primary keys to determine if changes have occurred as well as logic to resolve any data conflicts. In the exemplary embodiment the backend Y server or ERP server is the Master system so for example all data conflicts are resolved in favor of the backend Y server .

In an embodiment the CDS is updated with the new data or changed data at step . In an embodiment in response to the CDS Service call a Custom Service is called at Step and an RFC call to the X middleware in this case a customer relationship management CRM middleware is made. The particular data is sent to the CRM middleware per the remote function call. In an embodiment at step a mobile bridge function module for DOE middleware to CRM middleware mapping is called. For example the mobile bridge function module maps data provided by the DOE through or via the custom service to the mobile client via a channel provided by the CRM middleware. For example the mobile bridge forwards a call to a routine called SBDoc Flow at . The SBDoc contains data in the form or structure of root segment and child segments. The SBDoc flow routine saves updates SBDoc data to CDB tables in CDB database. The same SBDoc is forwarded for processing such as replication and realignment and placed in the outbound flow for the mobile client at step . In an embodiment the Y server document data is available at step for the mobile client as an outgoing synchronized business document SBDoc . The SBDoc may have data in the form or structure of a root segment and child segments. In an embodiment the SBDoc flow saves and updates SBDoc data to the consolidated database. In an embodiment the SBDoc is forwarded for processing such as a replication and realignment and placed in the outbound flow.

In an embodiment at step the DOE middleware after receiving the reference key instantiates a Get Details service that will use the reference key to perform its task. In the ERP at step the details are fetched from the ERP application and the ERP database. The fetched details are returned to the DOE to perform key mapping. A key mapping service performs key mapping at step . In an embodiment the key mapping service at step determines if there has been any changes or deltas to the data in the Sync Business document SBDoc . If data has not changed for the keys there is no download flow . In an embodiment in the DOE middleware if new keys are provided or if it is determined that data has changed i.e. there is a data delta a consolidated data store CDS service is called Step to save data contained in the MBO to CDS database. At step a custom service is called to provide a RFC to the CRM mobile bridge in the CRM middleware.

In the CRM middleware the mobile bridge performs a mapping of the data from the DOE to the client database CDB at step . At the data in the SBDoc is flowed to the middleware and root and child segments of the SBDoc date are stored in data structures within the client database according to the mapping. In an embodiment upon replication and realignment with the mobile client an outbound flow routine is called and the requested documents are prepared for delivery to the client Step . In step the outgoing SBDoc is sent to the mobile client as requested.

In an embodiment in the DOE middleware in response to a scheduled job to pull data from the ERP database a Stock mobile business object GetList function is triggered Step . This function makes a request to the backend ERP server. In the ERP at step the stock GetList Proxy function retrieves the requested information which can be all of the information regarding stock in inventory or the like from the ERP database. In an embodiment a response is forwarded from the ERP backend to the DOE middleware. Based on the scheduled mobile business object a mobile business object flow and services are called by the DOE Step and the required services and flow are performed on the data provided from the ERP database. The fetched details are returned and used when performing key mapping. A key mapping service performs key mapping at step .

In an embodiment the key mapping service determines if there has been any changes or deltas to the data in the mobile business object MBO . For example when data e.g. document is stored in the ERP database it is given a unique identifier or primary key e.g. reference key. The primary key or reference key can include a document number a document type or some other data that can be used to uniquely identify the document. Similarly the DOE also assigns keys to the data that is stored in the consolidated data store CDS .

In an embodiment the key mapping service at step compares the keys provided by the ERP to the DOE to keys for data stored in the CDS. If data has not changed for the keys there is no download flow . In an embodiment in the DOE middleware if new key are provided or it is determined that data has changed i.e. there is a data delta a consolidated data store CDS service is called Step to generate object nodes for the MBO and tables are generated within the consolidated data store indicating or representing the changed data. In an embodiment at step a custom service is called to provide a RFC to the CRM mobile bridge in the CRM middleware. In an embodiment the particular data is sent to the CRM middleware per the remote function call or remote process call.

In the CRM middleware the mobile bridge is a function that performs a mapping of the particular data from the DOE to the client database CDB of the CRM middleware at step . At the SBDoc is flowed via a CRM middleware data flow from the CRM middleware data stored in data structures within the client database CDB according to the mapping. Upon replication and realignment with the mobile client an outbound flow routine is called and the requested documents are prepared for delivery to the client Step . In step the outgoing SBDoc is sent to the mobile client as requested.

In an embodiment each of servers and includes a processor and can host a plurality of software modules accessible by client terminals client laptops or client handhelds through the network . In an embodiment each of the client terminals client laptops or client handhelds can have installed software modules for implementing a plurality of different data processing and other types of computer applications that use data overlapping from one of the different data processing or computer applications to another of the data processing or computer applications.

In an embodiment each of servers and provide access to disparate applications within the system . In an embodiment Server is a backend server including an ERP application connected to data storage while server includes the DOE middleware and server includes the X application or CRM application and X middleware or CRM middleware. In an embodiment data storage includes the CRM application database. In an embodiment data storage connected to server includes the DOE consolidated data storage. The above described system is exemplary and modifications to network are possible for implementing the claimed method.

In an embodiment each of devices and includes a processor and a display device and are capable of receiving inputs from a graphical user interface. In an embodiment devices and are used to generate data and documents usable in methods of the present invention.

For example network is the Internet an intranet a public network a private network a local area network LAN a wide area network WAN a wireless network or any network suitable for implementing the exemplary embodiments.

In an embodiment the software module s including program instructions are stored on computer readable media such as discs including CD and DVD flash memory hard drives including magnetic and optical drives or any other suitable computer readable media and that will cause a computer or processor to execute the program instructions. The software language used to write the software modules can be any that is suitable for implementing the described exemplary embodiments and such languages are known to those of skill in the art.

Embodiments of the present invention provide systems and methods that include beneficial functionalities like a pull mechanism key mapping service delta compare service and intermediate document handling provided in a DOE can be utilized directly with disparate applications. For example capabilities of DOE like parallelization error handling monitoring and mass data handling can also be used effectively without a need to change the full system landscape as the existing middleware functionality is still available.

It should be understood that there exist implementations of other variations and modifications of the invention and its various aspects as may be readily apparent to those of ordinary skill in the art and that the invention is not limited by specific embodiments described herein. Features and embodiments described above may be combined with and without each other. It is therefore contemplated to cover any and all modifications variations combinations or equivalents that fall within the scope of the basic underlying principals disclosed and claimed herein.

