---

title: Methods and systems of automatically geocoding a dataset for visual analysis
abstract: A computer-implemented method of generating a map view includes accessing a dataset having multiple records and multiple fields. One or more of the multiple fields are identified as geographical fields. Geographical codes are automatically associated with a first one of the identified geographical fields. A geographical map is generated for the dataset. Generating the geographical map includes generating a first plurality of marks on the geographical map. The first plurality of marks is positioned on the geographical map in accordance with the geographical codes associated with the first one of the identified geographical fields.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08306971&OS=08306971&RS=08306971
owner: Tableau Software, Inc.
number: 08306971
owner_city: Seattle
owner_country: US
publication_date: 20080620
---
This application is related to U.S. patent application Ser. No. 11 005 652 titled Computer Systems and Methods for Visualizing Data with Generation of Marks filed Dec. 2 2004 which is hereby incorporated by reference in its entirety.

The disclosed embodiments relate generally to generating map views of data and more specifically to adding geographical coding automatically to data to enable generation of map views.

Map views provide user friendly ways to analyze data by displaying geographical variation of data. Creation of map views may be enabled by adding location fields such as latitude and longitude to a dataset which is referred to as geocoding the data. Geocoding data presents significant obstacles users may not know latitude and longitude values for their data may not have time to perform geocoding and may not have write permission on their dataset. Furthermore users may desire to geocode data by multiple geographical levels e.g. by state county and ZIP code .

In some embodiments a computer implemented method of generating a map view includes accessing a dataset having multiple records and multiple fields. One or more of the multiple fields are identified as geographical fields. Geographical codes are automatically associated with a first one of the identified geographical fields. A geographical map is generated for the dataset. Generating the geographical map includes generating a first plurality of marks on the geographical map. The first plurality of marks is positioned on the geographical map in accordance with the geographical codes associated with the first one of the identified geographical fields.

In other embodiments a system for generating a map view includes memory one or more processors and one or more programs stored in the memory and configured for execution by the one or more processors. The one or more programs include instructions to access a dataset having multiple records and multiple fields instructions to identify one or more of the multiple fields as geographical fields and instructions to automatically associate geographical codes with a first one of the identified geographical fields. The one or more programs also include instructions to generate a geographical map for the dataset including instructions to generate a first plurality of marks on the geographical map. The first plurality of marks is positioned on the geographical map in accordance with the geographical codes associated with the first one of the identified geographical fields.

In yet other embodiments a computer readable storage medium stores one or more programs for use in generating a map view. The one or more programs are configured to be executed by a computer system and include instructions to access a dataset having multiple records and multiple fields instructions to identify one or more of the multiple fields as geographical fields and instructions to automatically associate geographical codes with a first one of the identified geographical fields. The one or more programs also include instructions to generate a geographical map for the dataset including instructions to generate a first plurality of marks on the geographical map. The first plurality of marks is positioned on the geographical map in accordance with the geographical codes associated with the first one of the identified geographical fields.

Reference will now be made in detail to embodiments examples of which are illustrated in the accompanying drawings. In the following detailed description numerous specific details are set forth in order to provide a thorough understanding of the subject matter presented herein. But it will be apparent to one of ordinary skill in the art that the subject matter may be practiced without these specific details. In other instances well known methods procedures components and circuits have not been described in detail so as not to unnecessarily obscure aspects of the embodiments.

To generate map views a user of a data analysis software application first accesses a dataset containing data to be analyzed. The dataset includes multiple records and multiple fields including fields with data to be analyzed and fields with corresponding geographical information referred to as geographical fields. The geographical information specifies geographical areas corresponding to the data to be analyzed. The term geographical area as used herein can include both geographical regions and geographical locations. For example the geographical information may include one or more of the following fields country state or province state or provincial capital county or parish Metropolitan Statistical Area MSA Core Based Statistical Area CBSA Designated Market Area DMA arbitrarily defined market region school congressional or other district address city street street number and ZIP code or other postal code. In some embodiments the geographical information is stored using Federal Information Processing Standards FIPS codes. Inclusion of fields specifying geographical areas allows data to be analyzed with respect to the specified geographical areas thus permitting the user to study variation of raw data or of parameters calculated from raw data across the specified geographical areas.

The dataset may be stored in any appropriate arrangement and location. For example the dataset may be stored in a table or in a database containing multiple tables. The database may be stored locally or remotely.

As used herein the term location fields refers to fields that specify map coordinates corresponding to one or more geographical fields An example of map coordinates is latitude and longitude values although the map coordinates may be any set of coordinates capable of being mapped. A dataset with location fields is said to be geocoded and adding location fields to a dataset is referred to as geocoding the dataset. Similarly adding location fields to a result set generated from a dataset is referred to as geocoding the result set.

To enable creation of map views of data in a dataset location fields may be automatically added to the dataset or to a result set generated from the dataset. The result set may be generated for example by querying the dataset. Adding location fields to a result set allows a user who lacks write permission for the dataset to generate map views of data from the dataset. Adding location fields to a result set instead of a dataset also may offer performance advantages since a result set may be significantly smaller e.g. may have significantly fewer records than its corresponding dataset and thus may be geocoded more quickly than its corresponding dataset. Adding location fields to a result set also allows the level of geocoding to be adjusted dynamically instead of being limited to those location fields that are included in the dataset location fields may be added to the result set for any geographical field s and the determination of which geographical field s the geocoding is to be based on may be made on the fly.

To add location fields to a dataset or corresponding result set automatically one or more of the original fields in the dataset are identified as geographical fields as described in detail below. A set of coordinates is accessed that includes coordinates for geographical areas listed in respective records of an identified geographical field. The respective records in the dataset or corresponding records in the result set are updated to include coordinates that correspond to respective geographical areas listed in the identified geographical field s of the records. For example the set of coordinates may be stored in a table and a join operation between the table and the dataset or result set may be performed.

In some embodiments data analysis software for generating map views specifies one or more geographical hierarchies. A geographical hierarchy is an ordered set of levels of geographical information. An example of a geographical hierarchy is Country State Province County Parish City ZIP Code Post Code Street Street Number . In this example Country is one level State Province is another level and so forth. The levels in a geographical hierarchy are arranged in order of increasing detail. However there may be overlap between successive levels in a geographical hierarchy. For example in the hierarchy State MSA City there is potential overlap between the State and MSA levels because an MSA may cross state boundaries. Two successive levels of increasing detail are referred to as parent and child levels the child level is more detailed than the parent level. For example in the hierarchy State County county is a child level of state and state is a parent level of county. A parent level may have multiple child levels. For example a zip code level and a county level both may be children of a state level. Associated with each geographical hierarchy is a set of coordinates for geographical areas at the most detailed level of the hierarchy and possibly also for other levels of the hierarchy.

In some embodiments identifying a field in a dataset or result set as a geographical field includes determining that the field corresponds to a level in a geographical hierarchy. Once this determination has been made the coordinates associated with the geographical hierarchy are used to geocode the dataset or result set. In some embodiments if a dataset or result set includes multiple geographical fields corresponding to multiple respective levels in a geographical hierarchy the most detailed level in the geographical hierarchy is used to determine the coordinates to be added to the dataset or result set. In some embodiments the level that has the largest number of distinct values as stored in a local table e.g. a level table or below is used to determine the coordinates. In some embodiments to decide between two geographical fields that both correspond to equivalent levels of detail in a hierarchy e.g. the two fields correspond to distinct levels that are both children of a particular parent level a detail number for each geographical field is calculated and the level corresponding to the geographical field with the highest detail number is used for geocoding. The detail number is defined as the largest number of values in the geographical field associated with a particular geographical area in the parent field. For example if zip code is a child level of state then the zip code detail number is the number of zip codes in the state with the largest number of zip codes. These rules result in selection of a geographical field for geocoding that is likely to be the most relevant geographical field for the user.

In some embodiments a user may manually identify a field as a geographical field by providing input that specifies that the field is geographical. For example the user may specify that a field is geographical through a dialog initiated by right clicking on a listed field in a user interface or by selecting a command from a drop down menu.

Alternatively a field may automatically be identified as geographical. Various techniques for automatically identifying a field as a geographical field are available. In some embodiments the schema of the dataset is queried for metadata specifying that a field is a geographical field. For example if a field in the dataset has semantic metadata that matches semantic metadata describing a level in a geographical hierarchy the field is automatically identified as a geographical field that corresponds to the level in the hierarchy. In some embodiments the name of a field is used to identify the field as a geographical field.

In some embodiments values in a field are sampled and the sampled values compared to known geographical areas such as geographical areas associated with various levels in a geographical hierarchy. If at least a predetermined percentage e.g. 80 of the sampled values corresponds to known geographical areas e.g. known geographic areas associated with a particular level in a geographical hierarchy the field is automatically identified as a geographical field. Automatically identifying a field as a geographical field also may include verifying various expected field attributes such as verifying that the data type matches an expected type for a particular geographical field and verifying that the width of the field is equal to or greater than or equal to an expected width for a particular geographical field.

In some embodiments ambiguities occur when determining which latitude and longitude values in the fields and to add to a record in a dataset or result set. Ambiguity may result from multiple occurrences of a name for example two different countries may have identically named states. In some embodiments once the most detailed geographical level has been identified for geocoding one or more e.g. all parent level fields for the most detailed geographical level are added to the dataset or result set to allow resolution of ambiguities. For example if state is determined to be the most detailed level and is used for geocoding a country field is added to the dataset or result set. If parent level data e.g. the country names is not present the ambiguity cannot be removed however the ambiguity may be arbitrarily resolved using heuristics. In some embodiments the ambiguity is resolved in favor of the name with the largest number of children. For example given identically named states the state with the largest number of children e.g. with the largest number of postal codes if postal code is a child of state is the default state to be used for geocoding.

In some embodiments a geographical field identified as corresponding to a particular level may include values not listed in the level table for that level. This may occur for example in a field that a user specifies as a geographical field. The user may explicitly map values in the field to values in the level table e.g. the user may specify that Cal corresponds to California . User specified mappings may be stored in an appropriate data structure such as a table or text file. In some embodiments the geocoding software may attempt to identify correspondences between values. For example the geocoding software may attempt to identify whether the field includes aliases for values in the level table.

In some embodiments instead of or in addition to applying heuristics specified in the table a dataset or result set field may be sampled and the sampled values compared against known geographical areas. For example the sampled values may be compared against geographical areas listed in various level tables e.g. tables and . If at least a predetermined percentage e.g. 80 of sampled values matches against geographical areas in a particular level table the field is identified as a geographical table corresponding to the level of that level field. While the predetermined percentage may be 100 use of a lower predetermined percentage allows identification of geographical fields that contain typographical errors e.g. misspelled city or state names .

Once the dataset or result set is geocoded map views may be displayed. In some embodiments a map view displays an aggregation of data in the dataset . For example a sum or average of inventory could be displayed by geographical area e.g. for each city state or market . The sum or average could be calculated for each coffee type or could be a total sum or average. For example a map view of the inventory data in the result set would correspond to an aggregation of total inventory data for each city in the dataset . A count of records for the combination of store ID and a particular coffee type could be displayed by geographical area thus indicating the number of stores in each geographical area. Maximum or minimum inventory levels per store ID could be displayed by geographical area. Alternatively if the dataset includes a single relevant record for each specified geographical area to be displayed in a map view raw data from the dataset may be displayed in the map view.

In some embodiments once the desired data have been specified in the appropriate shelves and and mark specification fields and the user may issue an instruction to generate the map views and . For example the user may select a generate map or run query icon not shown or an instruction from a drop down menu not shown . Alternatively in some other embodiments a map view or other type of graphical display is automatically generated every time the content of a shelf or mark specification field is modified. In some embodiments the displayed geographical map in each map view is selected based on the geographical area or areas specified on the level of detail shelf and listed in the dataset . For example in the UI A maps of the United States are displayed since State which corresponds to states of the United States as listed in the dataset or is specified on the level of detail shelf . A mark is displayed for each state for which the dataset or includes inventory data. The size of each mark corresponds to the quantity SUM Inventory as illustrated in the key . In this example the size of each mark is proportional to the quantity SUM Inventory such that mark sizes increase with increasing values of SUM Inventory .

In some embodiments the user does not need to add longitude to the columns shelf and latitude to the rows shelf to specify that a map view is to be generated. Instead if an identified geographical field e.g. State is added to the level of detail shelf the system assumes that a map view is to be generated and automatically uses longitude and latitude to generate the map view.

If a dataset includes multiple identified geographical fields e.g. market state and city in the dataset or the level of geographical detail in a map view may be varied by modifying the contents of the level of detail shelf or other appropriate user input field. illustrate respective UIs B and C that display successively generated map views with varied levels of geographical detail. In the UI B the quantity CNT Number of Records has been added to the mark size field and State has been added to the level of detail shelf . In response a result set listing counts of records by state is generated from an appropriate dataset and the map view is displayed based on the result set. In the map view a mark is displayed for each state with a mark size proportional to the quantity CNT Number of Records for each state as shown in the key . An updated map view with a different level of geographical detail may be generated by modifying the contents of the level of detail shelf . For example in the UI C ZIP Code field has been added to the level of detail shelf . In response a new result set listing counts of records by state and zip code is generated from the dataset and the map view is displayed based on the result set. In the map view a mark is displayed for each zip code with a mark size proportional to the quantity CNT Number of Records for each zip code as shown in the key .

In some embodiments a user may transition between a map view and another type of graphical display. For example a user viewing the map views and in UI B may desire to view a chart e.g. a bar chart of inventory by state instead. In some embodiments this transition is achieved by modifying the sets of data samples specified in the columns shelf and rows shelf . For example this transition may be achieved by deleting longitude from the columns shelf and latitude from the rows shelf .

In some embodiments one or more databases are stored externally to the computer system . For example the database may be stored on a server in communication with the computer system through a network. A dataset accessed from a server may be cached in the memory .

In some embodiments a respective geographical hierarchy includes level tables e.g. tables and a fact table e.g. table .

In some embodiments the geocoding module includes a heuristics table e.g. a heuristics table a dataset schema query module for querying a dataset schema for metadata specifying geographic fields a heuristics evaluation module for applying heuristics specified in the heuristics table to identify geographical fields and a dataset sampling module for sampling contents of dataset fields and comparing the samples to known geographical areas to identify geographical fields.

In some embodiments the map generation module includes a map drawing module for selecting and generating a geographical map for display a mark generation module for determining mark types appearances and locations and generating corresponding marks on the geographical map and a database query module for querying a dataset for data to display.

In some embodiments instructions corresponding to all or a portion of the map generation module and or geocoding module are stored at and executed by a server that transmits the results to the computer system for display.

In some embodiments the combination of the geocoding module and the map generation module includes instructions to perform the method below .

Each of the above identified elements in may be stored in one or more of the previously mentioned memory devices. Each of the above identified modules corresponds to a set of instructions for performing a function described above. The above identified modules or programs i.e. sets of instructions need not be implemented as separate software programs procedures or modules and thus various subsets of these modules or sets of instructions may be combined or otherwise re arranged in various embodiments. In some embodiments memory may store a subset of the modules and data structures identified above. Furthermore memory may store additional modules and data structures not described above.

In the method a dataset having multiple records and multiple fields e.g. a dataset a dataset is accessed .

In some embodiments at least one of the multiple fields is determined to correspond to a level in a geographical hierarchy.

In some embodiments user input is received specifying that one of the multiple fields is a geographical field. For example the user may specify that a field is geographical through a dialog initiated by right clicking on a listed field in a user interface or by selecting a command from a drop down menu.

In some embodiments at least one of the multiple fields is automatically identified as a geographical field. In some embodiments automatically identifying at least one of the multiple fields as a geographical field includes querying a schema of the dataset for metadata e.g. semantic metadata specifying a geographical field. For example an Application Programming Interface API call may be performed to query the dataset for metadata specifying a geographical field. In some embodiments automatically identifying at least one of the multiple fields as a geographical field further includes determining that the metadata specifying the geographical field corresponds to a level in a geographical hierarchy. For example the name of a field may match a pattern specified in the pattern field of the heuristics table indicating that the field corresponds to a level associated with the matching pattern.

In some embodiments automatically identifying at least one of the multiple fields as a geographical field includes taking a sample e.g. a random sample of values in at least one of the multiple fields and verifying that at least a predefined percentage e.g. 80 of the sample i.e. of the sampled values corresponds to geographical areas. For example the sampled values may be compared to geographical areas listed in level tables e.g. the state level table and the city level table . Determining that a predefined percentage of the sampled values matches areas listed in a particular level table indicates that the sampled field corresponds to the level associated with the level table.

In some embodiments automatically identifying at least one of the multiple fields as a geographical field includes verifying that the field has an expected data type and a width at least as wide as a specified minimum width or alternatively equal to a specified width. The data type and width may be specified for example in the data type field and width field of the heuristics table . In some embodiments this verification is performed in addition to other operations for identifying geographical fields. For example this verification can be performed for a field identified by querying the dataset for metadata specifying a geographical field. In another example this verification can be performed for a field identified by taking a sample of values and verifying that at least a predefined percentage of the sample corresponds to geographic areas. Alternatively verification of data type and width can be performed to identify potential geographical fields for sampling.

One or more geographical codes are automatically associated with a first one of the identified geographical fields.

In some embodiments location fields are added to the dataset. The location fields specify map coordinates that correspond to respective values of the geographical field of respective records in the dataset. An example of location fields is latitude and longitude fields e.g. latitude field and longitude field . In some embodiments the map coordinates correspond to geographical areas for a level in a geographical hierarchy. For example the latitude field and longitude field correspond to a City level in a geographical hierarchy as described in the city level table . In some embodiments adding the location fields to the dataset includes performing a join operation with a table e.g. the fact table that includes location fields for geographical areas e.g. cities listed in the city level table that correspond to values in the geographical field e.g. city field of respective records e.g. records in the dataset.

In some embodiments location fields are added to a result set e.g. result set generated from the dataset. The location fields specify map coordinates for respective records in the result set. In some embodiments the result set is generated by querying the dataset. In some embodiments the location fields include a latitude field and a longitude field e.g. fields and . In some embodiments the map coordinates specified in the location fields added to the result set correspond to geographical areas for a level in a geographical hierarchy. In some embodiments adding the location fields to the result set includes performing a join operation with a table e.g. the fact table that includes location fields for geographical areas e.g. cities listed in the city level table .

In some embodiments identified geographical fields correspond to respective levels in a geographical hierarchy and the first one of the identified geographical fields corresponds to a respective level having a greatest level of detail of the respective levels. In some embodiments identified geographical fields have respective detail numbers and the first one of the identified geographical fields has a highest detail number of the respective detail numbers indicating that the first one of the identified geographical fields is the most relevant geographical field.

A geographical map e.g. the maps in map views and map view or map view is generated for the dataset. A first plurality of marks e.g. marks marks is generated on the geographical map. The first plurality of marks is positioned on the geographical map in accordance with the geographical codes e.g. values in the latitude field and longitude field or in the latitude field and longitude field associated with the first one of the identified geographical fields. In some embodiments respective marks in the first plurality of marks have respective appearances that correspond to aggregations of data in one of the multiple fields for respective values in the first one of the geographical fields. For example in the map views and the size of the marks is proportional to corresponding values of the quantity SUM Inventory for respective states. In the map view the size of the marks is proportional to corresponding values of the quantity CNT Number of Records for respective states.

In some embodiments a user request is received . For example a user viewing the UI B may add Zip Code to the level of detail shelf as shown in the UI C .

In response to the user request the first plurality of marks is removed from the geographical map. For example in the UI C the marks from UI B have been deleted. Geographical codes are automatically associated with a second one of the identified geographical fields e.g. a zip code field . A second plurality of marks e.g. marks is generated on the geographical map. The second plurality of marks is positioned on the geographical map in accordance with the geographical codes associated with the second one of the identified geographical fields. For example in each mark is positioned in accordance with coordinates for a corresponding zip code.

The method provides a user friendly way to generate a map view from a dataset that is not geocoded and thus spares users from having to geocode data explicitly. In some embodiments the method also provides a user friendly way to vary the level of geocoding in a map view. While the method includes a number of operations that appear to occur in a specific order it should be apparent that the method can include more or fewer operations which can be executed serially or in parallel e.g. using parallel processors or a multi threading environment an order of two or more operations may be changed and or two or more operations may be combined into a single operation.

The foregoing description for purpose of explanation has been described with reference to specific embodiments. However the illustrative discussions above are not intended to be exhaustive or to limit the invention to the precise forms disclosed. Many modifications and variations are possible in view of the above teachings. The embodiments were chosen and described in order to best explain the principles of the invention and its practical applications to thereby enable others skilled in the art to best utilize the invention and various embodiments with various modifications as are suited to the particular use contemplated.

