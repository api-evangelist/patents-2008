---

title: Method for implementing network resource access functions into software applications
abstract: An Open Network Adapter (ONA) provides an interface that provides network resource access functions to application writers and network users while hiding the implementation details from those writers and users. The ONA accepts high-level network resource access function requests and coordinates the lower-level actions necessary to accomplish the high-level requests. These network resource access requests may, for example, be provided via a user interface which may be implemented by a personal computer, telephone, or other device capable of providing a display and receiving user input.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08626822&OS=08626822&RS=08626822
owner: Hewlett-Packard Development Company, L.P.
number: 08626822
owner_city: Houston
owner_country: US
publication_date: 20080828
---
This application is related to and commonly owned U.S. patent application Ser. No. 12 120 377 entitled Open Network Connections filed on May 14 2008 which is hereby incorporated by reference herein.

In general embodiments of the present invention are directed to techniques for providing a set of network resource services that enable applications to be deployed in the network without the exposing the creator s of those applications to the implementation details of the underlying protocols e.g. network voice video storage mechanisms and devices. Moreover new services may be provided using multiple underlying technologies.

The use of network resource access functions embedded in software applications to provide access to network features such as network traffic voice video or network attached storage is increasing. Applications that embed these network resource functions vary and can include for example push to talk web page features for customer support automated doctor appointment reminders which leverage VoIP network resources network traffic monitoring applications which utilize Open Network Connections as described in U.S. patent application Ser. No. 12 120 377 entitled Open Network Connections video applications such as video capture video storage and stored video search and replay and storing searching and retrieving data from network attached storage devices. Programmers who write these software applications typically have skill in writing one type of software application but not in writing multiple applications for use with multiple types of protocols e.g. telephony network video and network attached storage protocols . As a result the programmer of ordinary skill who attempts to write a software application which utilizes multiple protocols will have great difficulty doing so and may find the task impossible.

Therefore there is a need to simplify the process of creating network applications which require the use of multiple network protocols and or multiple types of network devices.

Embodiments of the present invention are directed to an Open Network Adapter ONA which provides an interface that provides network resource access functions to application writers and network users while hiding the implementation details from those writers and users. The ONA accepts high level network resource access function requests and coordinates the lower level actions necessary to accomplish the high level requests. These network resource access requests may for example be provided via a user interface which may be implemented by a PC telephone or other device capable of providing a display and receiving user input.

In common software application deployments implementations utilize multiple sites that are located at different locations. These sites range in size from a small network where there are only a few employees and minimal network service device capabilities to a large corporate network such as corporate headquarters with many employees and with very capable and possibly redundant sets of network resource devices. Embodiments of the present invention not only translate high level network resource access function requests into lower level actions necessary to accomplish the high level requests but also hide details of the location s at which lower level actions are executed. This simplifies the job of the software application programmer by relieving the programmer of the need to interact with low level implementation details.

The ONA may be layered with the highest level layer interfacing with software applications and or network users. When the ONA receives a request each layer of the ONA may break the receive request into one or more lower level requests for a network resource service action or device action and decide where to direct the lower level requests or actions.

Embodiments of the invention may provide network resource access to users and or software using servers and devices that service network resource access requests using either a single technology or multiple technologies. The system provides a method for offering new services using a Miscellaneous Plug ins Server to provide a linkage to other services such as email and room reservation services or to provide hosting for a new multi technology service before providing that service with the Network Resource Services Server when it becomes a mainstream service.

For example one embodiment of the present invention is directed to a computer implemented system for providing network resource functions within a software application. The system includes network function translation software which includes means for receiving a request to perform a network function means for identifying a plurality of network services for performing the network function and means for issuing a plurality of network service requests to at least one network service server to perform the plurality of network services. The system also includes the at least one network service server. The at least one network service server includes means for receiving the plurality of network service requests and for each of the plurality of network service requests means for identifying at least one device to satisfy the network service request and means for requesting that the at least one device perform at least one action to satisfy the network service request.

Another embodiment of the present invention is directed to a computer implemented method comprising A receiving a request to perform a network resource access function B selecting a subset of a first plurality of devices the first plurality of devices including devices of at least one of the following types network traffic monitoring devices voice services devices video resource devices and network attached storage devices C identifying a plurality of actions to be performed by the device subset to satisfy the request and D issuing requests to the device subset to perform the plurality of actions.

Other features of the present invention will become apparent from the following detailed description taken in conjunction with the accompanying drawings.

Referring to an Open Network Adapter ONA the ONA s interfaces to applications and network users and the ONA s building blocks are shown. The ONA provides three types of interfaces two types to application software and one type to network users. The first type of interface is an Application Programming Interface API that provides application software with network resource access function calls which provide access to network traffic video voice and network attached storage capabilities. The API may be used by a software application which includes a network resource services Software Developers Kit SDK . The software application communicates with the SDK using the API .

The SDK is software provided to the software application developer and is linked in or otherwise associated with the code of the application that is created by the developer of the application . Incorporation of the SDK into the application enables network resource access services to be incorporated into the application . The API may for example be published as a Web Service in the form of a WSDL document. This document may serve as the programmatic interface via which the author of the application may integrate the application with network resource system components. The API may be platform neutral e.g. XML based and may be programming language agnostic which allows for integration across legacy and newer applications.

The second type of interface provided by the ONA is an Open Network Services protocol interface . Applications which communicate with the ONA using the protocol interface do not need to incorporate the SDK into the application itself. For example using protocols such as SOAP XML and HTTPS SSL an application passes a network resource request to a Network Resources Services Server in the Open Network Adapter to access popular network related functions such as network traffic video voice and network attached storage functions.

The third type of user interface to the Open Network Adapter is a User Interface which may be part of the Open Network Adapter . The User Interface may receive Open Network Commands issued by a user and translate those commands into network resource access requests to provide the user with access to network resources.

The Network Resource Services Server translates high level network resource access requests such as those issued by the software application the software application and the user into implementation specific protocols via the Network Traffic server interface Voice Services server interface Video Resource server interface and Network Attached Storage server interface . The Network Resource Services Server may also track the operational state load location and possibly other parameters of technology specific service servers and direct the technology specific request to a selected server or set of servers.

Note that some or all of the functionality of the Network Resource Services Server may be incorporated into the SDK and or User Interface . Therefore descriptions herein of functions performed by the Network Resource Services Server may also be applied to the SDK and or user interface. Furthermore the SDK and or user interface may communicate with servers either through the Network Resource Services Server or directly through interfaces and respectively.

The Network Traffic Server translates network traffic specific function requests into one or more device actions e.g. requesting an ONC via the interface between the Network Traffic Server and the Network Traffic Devices e.g. an IPS which provides the TAP function see U.S. patent application Ser. No. 12 120 377 entitled Open Network Connections filed on May 14 2008 . The Network Traffic Server also makes the determination of which devices to utilize to perform the technology specific request. Factors such as location load and operational state may be used to select the device or devices to perform the needed actions. Examples of network traffic devices include but are not limited to Switches Routers IPSs and other devices that can perform network traffic access services.

The Voice Services Server translates the voice specific function requests into one or more actions e.g. place a voice call via the interface between the Voice Services Server and the Voice Services Devices e.g. a Call Processor . The Voice Services Server also makes the determination of which devices to utilize to perform the technology specific request. Factors such as location load cost and operational state may be used to select the device or devices to perform the needed actions. Examples of Voice Service devices include but are not limited to call processors IP Phones VoIP gateways and other devices that can perform Voice Services.

The Video Resource Server translates the Video specific function requests into one or more actions e.g. start video capture via the interface between the Video Resource Server and the Video Resource Devices e.g. a network attached video controller . The Video Resource Server also makes the determination of which devices or devices to utilize to perform the technology specific request. Factors such as location load local authority and operational state may be used to select the device to perform the needed actions. Examples of Video Resource devices include but are not limited to video conference bridges video cameras surveillance systems and other devices that can perform Video Resource services.

The Network Attached Storage Server translates the network attached storage specific function request into one or more actions e.g. store the video feed in a specific file via the interface between the Network Attached Storage Server and the Network Attached Storage Devices e.g. a Storage Area Network SAN controller . The Network Attached Storage Server also makes the determination of which devices or devices to utilize to perform the technology specific request. Factors such as location capacity security and operational state may be used to select the device to perform the needed actions. Examples of Network Attached Storage devices include but are not limited to NAS devices SAN devices and other devices that can perform Network Attached Storage services.

Referring to the external function interface between an Application and the Open Network Adapter and the internal interfaces between the components of an Open Network Adapter are shown. The Application in may for example be the application or the application shown in . Similarly the Open Network Adapter shown in may be the Open Network Adapter shown in .

The components of the Open Network Adapter shown in are organized in levels with the highest level being the network resource access Function Server and the lowest level being the network attached devices . The interface presented to Application provides various network resource access functions. The functions provided at the level of interface may utilize one type of network technology such as network traffic video voice or network attached storage or may provide a function that utilizes multiple different network technologies such as a WatchCaptureAlert function which is shown in as an example to illustrate the operation of Open Network Adapter . The function WatchCaptureAlert watches for a specified user with a specified network address attempt to connect to a network and when found a video capture is started the video is stored on a network attached storage device and a phone call is placed to security personnel alerting them that the specified user has attempted to connect to the network and notifying the security personnel where to find the captured video.

The Open Network Adapter illustrated in enables implementation details to be hidden at multiple different layers leveraging building blocks at each level and providing powerful functions which are formed by utilizing one or more functions from the level below. In effect a network resource access language is created and as with a computer programming language such a language is implemented in levels each of which hides the implementation details of the level below it. This enables powerful high level functions to be specified without requiring the person who specifies those functions to understand how those functions are implemented at lower levels.

A Function Server receives the network resource access function requests and determines which network services could be utilized to provide those function requests. The Function Server also determines which service server or servers to call upon to provide the needed service. In the example shown in the Function Server as implemented for example in the SDK software receives this network function request WatchCaptureAlert UserX SecurityOffice and breaks it into three service requests and . The network traffic service request Watch UserX Signal requests the network to look for traffic from UserX and also to look for UserX trying to connect to the network and return Signal which indicates where in the network UserX is connected or attempted to connect.

In this example the event Signal caused a process to be created to handle this event. This process not shown created by the Function Server is an example of an inter service linkage which will wait for Signal to be returned an example of an inter service event . When and when this event occurs the process created by the Function Server will request a video service server to capture video in the area of the where UserX is attempting to connect to the network. The video service request CapStore locale instructs the network to capture in the area indicated by the variable locale and store video on a network attached storage device. Also the process created by the Function Server will upon receiving the Signal indication request a voice service SendMsg num msg which requests that a voice call be made to security with a message alerting security that UserX is attempting connect to the network and that the video feed can be found at a specified location.

Returning to the Service Server receives network service requests from in this example the Function Server via the Service interface . A Service Server receives the network service requests and determines which technology services or types of devices could be utilized to provide the network service. The Service Server also determines which specific service server device or servers devices to call upon to provide the needed network service. In this example the Service Server which may for example be implemented in a network appliance receives three service requests in a service set Watch UserX Signal CapStore locale and SendMsg num msg .

The network service server breaks Watch UserX Signal into multiple requests for an Open Network Connection ONC receive connection etc. to various Traffic Access Providers TAPs in the network to watch for traffic from UserX. Although not shown in the Services Server could also request notification from the Network Access Control NAC system for network login attempts from UserX. The network service server breaks CapStore locale into technology service requests to start a video capture Capture locale and a technology service request to store the video on a network attached storage device Store Cam . The results of the two related technology services are to capture and store video from the area where UserX attempted to connect to the network.

Returning to the Technology Servers receive network service requests from in this example the Services Server via the technology specific interfaces . Technology Servers receive the network service requests and determine which types of devices could be utilized to provide the technology specific service. The Technology Servers also determine which specific device or devices to call upon to provide the needed technology specific network service. In this example the Technology Servers receive three technology requests Capture Cam Store Cam and Call number . The Video Technology server receives the Capture Cam request and issues a SCam file to start a camera capturing a video and to send the video stream to a file named file . The Network Attached Storage server receives the Store CAM request and issues a FOpen CAM device action informing a network attached storage device that the video stream should be captured and stored. The Voice Technology Server receives the request Call number and issues a device action CallIP num to a voice device call processor to make a voice call to telephone num informing the security personnel that UserX is attempting to connect to the network and that the video stream can be found at a well known location on network attached storage.

Referring to a security application that utilizes network traffic voice video and network attached storage network resource access functions is described as an example of how application developers can utilize embodiments of the present invention. This security application is used to locate an identified end node or user attempting to connect to a network alert security personnel of the whereabouts of the end node or user with a phone call capture video of the end node or user and store the video for later use. The security software application has incorporated an SDK that provides Network Resource Services Server function. The security software application issues a WatchCaptureAlert UserX SecurityOffice request to the SDK via the API. The security application uses the network traffic resource access function in this example within the SDK to request that when network traffic to or from a specified device address is discovered an alert should be sent to the application indicating the presence of this network traffic and indicating where in the network this specified device is connected or is attempting to connect.

The SDK breaks the WatchCaptureAlert UserX SecurityOffice request into three requests and to issue to the network Services Server . The network Services Server receives the request Watch UserX Signal which requests the network to look for traffic from UserX and also look for UserX trying to connect to the network and return Signal which indicates where in the network UserX is connected or attempted to connect. The SDK also creates a process to handle the event of Signal being returned indicating UserX has attempted to connect to the network. The network Services Server issues device actions in the form of OncRxRequests to IPS devices in the network that provide TAP functionality. In this example the OncRxRequests are sent to the router with IPS at remote LAN and to LAN Switch with IPS . The network Services Server also sends a device action to the NAC Server requesting to be notified if UserX attempts to connect to the network.

Once the SDK receives the Signal that UserX has attempted to connect to the network the request CapStore locale is issued to the Services Server . The Services Server breaks that request into two requests Capture Cam to the Video Services Server and Store Cam to the Network Attached Storage NAS Services Server . The Video Services Server receives the Capture Cam request and fulfills the request by issuing SCam file device action to the network attached camera to start capture video and send the captured video to a specified file. The Video Services Server also receives the Store Cam request and fulfills this request by issuing a FOpen cam device action to the network attached storage device instructing the device to except the video stream and store it in a specified file.

Also upon receiving the Signal indicating that UserX has attempted to connect to the network the request SendMsg num msg is sent to the network Services Server . The network Services Server breaks that request into a single request Call number which is sent to the Voice Services Server . The Voice Services Server receives the request Call number and issues a device action CallIP num to a Call Processor to make a voice call to telephone num informing the security personnel that UserX is attempting to connected to the network and the video stream can be found at a well known location on network attached storage.

Now referring to and an example of a user interface implemented according to one embodiment of the present invention is disclosed. depicts an Open Network Adapter the User and the user interface to the User Interface software . The User Interface software presents a display and a menu or buttons to take user input and convey information to the user . In an example of the User Interface Device is shown which can be a PC telephone or other device with input and output capabilities. The MultimediaConferenceUs function is invoked by the User to schedule a multimedia conference with a set of participants and a set of documents needed for the conference. The meeting is to be recorded and stored. The multimedia conference request the list of participants and the documents needed are input to the User Input Device by the user and passed to the Network Resources Services Server in the form of a call to the MultimediaConferenceUs function. The Network Resources Services Server issues service requests to the Misc. Plug ins Server the Voice Service Server the Video Resource Server and the Network Attached Storage Server to accomplish the task of providing the service requested by the User .

Schedule calls InviteMsg with the list of participants to whom invitation messages should be send. InviteMsg issues multiple SendMail requests etc. to invite the individuals on the participant list or sends a single invite message to all or a subset of the participant list. Optionally InviteMsg could also handle responses from the participants and update the actual participant list which can be utilized by StartConference when the conference is to start. InviteMsg is a service provided by the Misc. Plug ins Server and provides a linkage to the Email system. The Misc. Plug ins Server is used to host plug in services that provide a linkage to other services email room reservation etc. or to provide hosting for a new multi technology service before providing that service with the Network Resource Services Server when it becomes a mainstream service.

Schedule also calls Reserve to reserve the required equipment and specified locations required for the conference at the specified time. Reserve is a service that runs on the Misc. Plug ins Server and provides a linkage to the room and resource reservation system . Optionally Reserve can reserve equipment and locations based on the parties involved and associated conference related preferences in each of the parties profiles. Each of the participants parties may have profile information that specifies conference preferences such as nearby conference rooms video or audio equipment preferences audio of video access numbers or even travel information about the participants that may change the preference based on time of the conference and the participants travel schedule.

At this point the conference is scheduled and the resources have been reserved. Prior to start of the conference the Schedule function signals the Start Conference function that conference with Conference ID CID needs to start. The Start Conference function upon receipt of the signal from the Schedule function pre fetches the files needed for the meeting such as PowerPoint presentation files spreadsheet files picture files of other files that can be shared by two or more of the participants. The pre fetch is accomplished by a call to the Prefetch function which is running on the Network Attached Storage Server with a list of documents needed.

The requested files are obtained by the Prefetch function by ReadFile function etc. requests to the Network Attached Storage NAS device . The retrieved files are passed back to the StartConference function from the Prefetch function . The StartConference function then calls the OpenBridge function indicating that a conference needs to start using a specified or provided set of documents with a list of participants using specified equipment at specified locations and that the conference is to be recorded. The OpenBridge function is shown as running on the Network Resource Services Server but may have initially been deployed on the Misc. Plug ins Server .

The OpenBridge function calls the StartVoice function which either calls a voice conference number and enters the dial in information such as a conference ID or password or calls the participants so that they do not have to remember to call into a conference number. The StartVoice function runs on the Voice Services Server . One or more calls are placed using the CallIP function etc. which runs on a call processor or phone device etc. The resulting voice feed is either passed from the StartVoice function to the StartCon function or the StartCon function can access the voice bridge directly.

The OpenBridge function then calls the StartCon function which is running on the Video Resource Server . The StartCon function issues a request to start the video recording at the locations as needed and adds the video feed into a multi media bridge that distributes the voice and video and controls which device supplies the video shared by the group of participants. The video could be supplied by a camera or a document display or a mixture of sources. The request is sent by issuing a call to the SCam function running on the CAM device

Referring now to as described previously the User has scheduled the conference using the User Interface Device and now it is time for the conference to start. The Schedule function signals the Start Conference function that a conference with Conference ID CID needs to start both of which are running on the Network Resource Services Server . The Start Conference function calls the Prefetch function indicated by arrow with a list of documents that need to be pre fetched for the conference. The Prefetch function runs on the NAS Server . The requested files are obtained by requests to the Network Attached Storage NAS device

The StartConference function then calls the OpenBridge function both running on the Network Resource Services Server indicating that a conference needs to start. The OpenBridge function calls the StartVoice function running on the Voice Services Server . The StartVoice function sets up a voice conference by calling CallIP which is running on the Call Process device

Then the conference is started when the OpenBridge function running on the Network Resource Services Server calls the StartCon function running on the Video Resource Server . The StartCon function sends a request by issuing a call to the SCam function running on the CAM device . Although a request could be sent to CAM device at remote location this is not shown in for ease of illustration.

The Voice feeds the video feeds and the document display are all set to the Video Resource Server which distributes the voice and video to the participants as indicated by three unlabeled arrows. The conference may also be recorded while it occurs and stored to the Network Attached Storage device through the NAS Services Server .

The WatchCaptureAlert command explained in detail above could also be offered as a user interface command provided to users that have responsibilities of the operation of the network or part thereof some times called network administrators.

The embodiments described above are merely examples of services that may be provided by embodiments of the present invention. Other examples of commands that may be provided to users who want access to network accessible resources include but are not limited to 

While only a few illustrative embodiments of the present invention have been discussed it is understood that various modification will be apparent to those skilled in the art in view of the description herein. All such modifications are within the spirit and scope of the invention as encompassed by the following claims.

