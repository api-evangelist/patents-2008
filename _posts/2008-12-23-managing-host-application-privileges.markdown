---

title: Managing host application privileges
abstract: A method and system of controlling access to a hardware or software feature provided by a host is disclosed. An application seeking authorization to access a feature transmits a credential and an index to a host agent within the host. The index is associated with the requested feature. The host agent reads credential validation data from a storage location corresponding to the index in a non-volatile storage device in communication with the host. The validity of the credential is determined based on the credential validation data, and an authorization is transmitted if the credential is valid. A third party can control the outcome of the validity determination by sending an instruction to the host to replace the credential validation data with invalid data that causes the validity test to fail. The third party can also control the non-volatile storage device data used by the application to calculate the credential.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08590037&OS=08590037&RS=08590037
owner: SanDisk Technologies Inc.
number: 08590037
owner_city: Plano
owner_country: US
publication_date: 20081223
---
This application relates generally to the operation of non volatile flash memory systems and more specifically to a method for managing host application privileges.

The features and capabilities of cellular telephones and other handheld devices continue to improve. Until recently cellular telephones were merely able to initiate and receive voice calls. Today cellular telephones incorporate many different functions such as sending and receiving Multimedia Messaging Service MMS or Short Message Service SMS transmissions text messages to other cellular subscribers playing music and video files sending and receiving e mail messages taking pictures recording video and audio internet browsing and incorporating the Personal Information Management PIM functions typically associated with a Personal Digital Assistant PDA . Some cellular telephones also incorporate a removable media slot to store and access data on a removable media card using a communication interface such as a Multimedia Card MMC interface a Secure Digital SD interface a Universal Serial Bus USB or a Serial Advanced Technology Attachment SATA interface.

Mobile Network Operators MNOs that sell or provide these enhanced cellular telephones to their subscribers are faced with a variety of challenges. For example an MNO may want to charge a monthly fee in order to use certain features of a telephone such as a built in camera. In this case the MNO may charge a subscriber a fee in order to take pictures with the cellular telephone using a camera application software or firmware provided by the MNO that operates the camera. The MNO may want to enable or disable an application depending on whether a subscriber has paid for that service or feature. In doing so the MNO may increase the monthly revenue received from an individual subscriber.

In another example an MNO may want to allow third party software developers to write useful applications for the cellular telephone hardware used by the MNO s subscribers. If the cellular telephone hardware is open platform or open to selected MNO vendors third party software developers may create applications that an MNO may not have the time or resources to develop on its own. If these applications increase the usefulness of the MNO s cellular telephone hardware more users may subscribe to that MNO s network. However the MNO may want to have ultimate control over whether a certain application is allowed to execute on its cellular telephone hardware or access certain features of the hardware. Such control is desirable in the event that a software application contains a software virus that could damage the cellular telephone software or hardware or render it inoperable. This control is also desirable if a third party application circumvents subscription features offered by the MNO such as a software application that operates the cellular telephone camera hardware without requiring a subscription fee payable to the MNO.

Therefore it would be advantageous to have method or system where an MNO may have centralized control over the software applications that execute on hardware used to access the MNO s network. The centralized control may include the ability to grant privileges to a software application to access selected hardware or software features of a cellular telephone system. The centralized control may also include the ability to revoke one or more privileges previously granted to a software application.

In order to address these issues a host agent in a cellular telephone may authenticate software applications and grant access to hardware or software features of a cellular telephone system. An MNO may assign a software application an input value that the software application can use to calculate a credential. The software application may present this credential to the host agent in order to authenticate itself to the host agent and obtain authorization from the host agent to access a hardware or software feature. The input value assigned by the MNO may be stored in a predetermined location of a non volatile memory accessible by the cellular telephone such as an R UIM card for CDMA phones or a SIM card for GSM telephones installed in the cellular telephone. The host agent may rely on an additional key value stored in the SIM card in order to complete the authorization. The software application and host agent may only have read only access to this input value and additional key value but the MNO has read and write access to the both values. To allow an authentication and authorization to succeed the MNO may set a valid input value and host key value that allows the software application to calculate a correct credential which when supplied to the host agent will successfully complete an authentication and authorization process. If the MNO wants to revoke a privilege the MNO may replace the input value and or the key value with an invalid value that will prevent the software application from calculating a valid credential or that will prevent the host agent from verifying a credential as valid. In one embodiment the input value and or the key value may be replaced by overwriting the value with an invalid value. If an invalid credential calculated using the invalid input value is presented to the host agent the host agent will not provide an authorization to access the requested hardware or software feature. Similarly if the key value is changed to an invalid value the host agent will not provide an authorization to access the requested hardware or software feature. Various embodiments are designed to address this need examples of which are provided herein.

Specifically an MNO may associate access to a hardware or software feature with an index value. If an application running on the host requires access to the hardware or software feature the application may read an input value from a storage location in a non volatile storage device that corresponds to the index value. The application may use this value to calculate a credential possibly using additional keys or algorithms provided by the MNO and incorporated into the application. The application can send the credential and the corresponding index value to the host agent for evaluation.

The host agent in turn receives the index value and credential and retrieves a key value corresponding to the index value from the non volatile storage device. This key value can be used to calculate a result that is compared to an expected value corresponding to the index value. If the result matches the expected value then an authorization is returned to the application. In another comparison scheme the host agent reads an expected value from the non volatile storage device. The host agent may apply a non invertible function to the credential to yield a transformed credential and determining if the transformed credential is equal to the expected value. In one embodiment the authorization is a session identifier value that may be passed to an API to indicate that the application has permission to access a hardware or software feature through that API. The authorization may expire after a period of time or after a number of uses of the feature such as after a number function calls to the API.

A third party such as a Mobile Network Operator can revoke access to the hardware or software feature associated with an index by overwriting the input value or key value stored in the non volatile storage device with a value that will cause the comparison performed by the host agent to fail. In one embodiment the host agent receives the instruction from the MNO and overwrites the value associated with the index. In another embodiment the MNO forms a secure communication channel with the non volatile storage device and sends the instruction to the non volatile storage device for execution. In one implementation the host agent may receive and forward the instructions passed from the MNO to the non volatile storage device through the secure channel.

A tiered authorization scheme can also be implemented utilizing the principles of the embodiments. In a tiered authorization scheme multiple index values are associated with permission levels to access a hardware or software feature. A software application may calculate two or more credentials to gain access to a hardware or software feature and the credentials are presented to a host agent. The host agent may provide an authorization from the host agent depending on the validity of the credentials presented. For example if the application calculates two credentials to the host agent the host agent may provide different authorizations depending on whether one credential the other credential or both credentials are valid. A tiered authorization scheme may be utilize to encode permission levels to access a hardware or software feature. For example for access to a storage device permission levels may include read only access write only access read write access or read write erase access.

Other embodiments and features and advantages thereof are possible and will be or will become apparent to one with skill in the art upon examination of the following detailed description and accompanying drawings. Hence it is intended that the scope of the claimed invention as recited in the claims below will not be limited to the embodiments shown and described herein.

A cellular telephone used to access the network of a mobile network operator MNO may be capable of a variety of functions beyond simple voice communications. For example cellular telephones may incorporate features of music and video players personal digital assistants navigation systems cameras and internet browsers. An MNO may provide a cellular telephone to a subscriber for free or for a reduced price in the hope of selling enhanced services to at least recoup the cost of the hardware. Additionally the availability of applications for a cellular telephone may also attract subscribers. Thus some MNOs may encourage third party software developers to create new and useful applications for the cellular telephone hardware used on the MNO s network.

An MNO may want to increase the revenue from each subscriber by enabling these enhanced hardware and software features for an additional monthly fee. An MNO may also want to have ultimate control over the third party software applications that can be executed on cellular telephone hardware that may access its network. In one example this MNO control may be used to prevent malicious software such as viruses or spyware from being installed or used on the cellular telephone hardware of its subscribers. In another example the MNO may want to prevent the use of applications which circumvent the ability for an MNO to charge for a feature of the cellular telephone such as use of a built in camera.

The embodiments disclosed in the figures and accompanying description provide a host agent in a cellular telephone system that acts as a gatekeeper to selected software and hardware features. An entity such as a user or software application may access these features through the host agent only after authentication proving their identity and authorization determining that the MNO has given the entity permission to do so . An MNO may assign a software application an input value and a key that in combination a may be used to calculate a credential. The software application may present this credential to the host agent in order to authenticate itself to the host agent and obtain authorization from the host agent to access a hardware or software feature. The input value assigned by the MNO may be stored in an R UIM card for CDMA phones or SIM card for GSM telephones installed in the cellular telephone. The host agent may rely on credential validation data such as a host key stored in the SIM or R UIM card in order to verify the credential and complete the authorization.

The MNO controls the success of the authorization and authentication process by controlling the input value and credential validation data stored in the SIM card. For example the MNO may allow an authentication and authorization to succeed by selecting valid input and host key values that allow the software application to calculate a valid credential which when supplied to the host agent will successfully complete an authentication and authorization process. The MNO may force an authentication and authorization to fail by setting the input value to an invalid value that will prevent the software application from calculating a valid credential or by setting the host key to a value that will cause a credential valid or invalid to be rejected. This is explained in further detail in the exemplary embodiments discussed in the foregoing figures and accompanying description.

A cellular telephone in communication with a mobile network such as Global System for Mobile communication GSM or Code Division Multiple Access CDMA networks contains a SIM card or R UIM card respectively that stores one more values that uniquely identify the subscriber or a subscriber s cellular telephone . Values that may identify a subscriber include an International Mobile Subscriber Identity IMSI value another is a Mobile Subscriber Integrated Services Digital Network MSISDN value. Yet another value is the International Mobile Equipment Identity IMEI value which uniquely identify GSM capable cellular telephones.

The card such as a SIM or R UIM card may also contain additional secure storage for other variables or parameters defined by the MNO . The MNO can read or write to this storage and configure this storage to allow read only access to these variables by other entities such as cellular telephone software applications or hardware. In addition to providing secure non volatile storage for parameters defined by the MNO the SIM or R UIM card typically contains a microcontroller that executes programs such as applets that are also defined by the MNO and stored within the SIM or R UIM card .

Thus the MNO may uniquely identify an individual cellular telephone and may transmit instructions and data to the cellular telephone . In one example SIM Protected Data Objects SPDOs are specialized data values that an MNO may store the SIM or R UIM card . As will be explained in greater detail below a software application running on the cellular telephone may use an assigned SPDO value input value stored in the SIM or R UIM card to calculate a credential. This credential is presented to a host agent to gain authorization to access features of the cellular telephone . The host agent may use other assigned SPDO values to authenticate the identity of the software application and determine if the credential authorizes the software application to access one or more features. For example an authorized software application may have access to a host agent application programming interface API to store and access data on a non volatile memory card such as a TrustedFlash memory device from SanDisk Corporation of Milpitas Calif. Because the MNO may control the stored SPDO values available to the software application and host agent the MNO may control the success or failure of an authorization process using credentials calculated and verified using these SPDO values.

An example of a processor is the OMAPV1035 GSM GPRS EDGE Integrated Single Chip cellular telephone platform from Texas Instruments Incorporated of Dallas Tex. The processor may be configured with processor executable instructions. The processor executable instructions may be stored in random access memory RAM within the host or non volatile memory such as a read only memory ROM EEPROM Electrically Erasable and Programmable Read Only Memory or E flash embedded flash within the host . The executable instructions that configure the processor may implement a number of software modules or applications that communicate with one another and with hardware and software inside and outside of the host in order to implement the functions of a cellular telephone . These software modules may include a host agent an encryption decryption engine manager and a plurality of software applications and .

A host agent may be part of the processor executable instructions that comprise an operating system OS for the processor where the OS coordinates and implements all of the basic functions of the cellular telephone defined by the MNO including configuring controlling and accessing the hardware within the cellular telephone . In another embodiment the host agent is a software module independent of the OS and has permission to configure control and access all of the hardware and software components within or in communication with the cellular telephone . The processor executable instructions that make up the host agent may be defined by the MNO . Other software modules may perform specialized functions. For example an encryption decryption engine manager may organize encryption decryption keys and may implement encryption decryption algorithms.

Software applications and are also part of the instructions executed on the processor . The software applications and may be written by the MNO or by a third party software vendor. The host agent and the software applications and may have equivalent privileges to access some of the hardware or software resources within the system. For example as illustrated in the host agent and the software applications and may have direct access to the non volatile memory the Random Access Memory within the host or the SIM or R UIM card in communication with the cellular telephone over an interface .

Generally however software applications and are less capable than the host agent as illustrated in because the software applications have fewer permissions to directly access configure and control hardware and software features or components within or in communication with the cellular telephone . For example the host agent may access a camera module through a communication interface available only to the host agent . Similarly the host agent can access the Bluetooth module and the non volatile memory device through communication interfaces and available only to the host agent . Similarly the host agent may have access to the encryption decryption engine manager or other software modules through a separate interface available only to the host agent .

In contrast the software applications and may not have direct access to the non volatile memory device the camera module and the Bluetooth module . Similarly the software applications and may not have direct access to the functionality provided by the encryption decryption engine manager or other software modules. In one embodiment the software application and may only access one or more of these hardware resources and or software resources through one or more application programming interfaces APIs provided by the host agent . However the host agent will only provide access to one of its APIs if the software application is authenticated and if the software application is authorized to access that software module or feature. Exemplary embodiments for authentication and authorization processes are detailed further in the figures and accompanying text below.

The MNO stores two sets of SIM Protected Data Objects SPDOs in the SIM Card for use during the authentication and authorization process. The first set is referred to as SPDO values. Each SPDO value is the output of a public function G applied to a corresponding credential Cred i using a corresponding application key AKey i . SPDO Key Cred 

The SPDO value is the input value used by the software application to calculate recover the credential Cred i . The function G is any invertible function. For example if function G inverted each of the bits in a binary representation of a value X then the inverse function denoted as G would also invert each bit so that the original value X can be recovered 

The value AKey i is an input that is used by invertible function G. In this case the value X can be recovered from invertible function that accepts an additional input k as follows 

In one embodiment function G is a symmetric key encryption function such as Advanced Encryption Standard AES or Triple Data Encryption Standard TDES or 3DES where the application key is used to encrypt the credential. Thus the SPDO value stored is an encrypted credential. The corresponding inverse of function G is a symmetric key decryption function that uses the same application key. Key SPDO Key Key Cred Cred 

The MNO may assign an application index i and a corresponding application key AKey i to a software application. The MNO also provides the inverse of function G G to the software application to allow the recovery of Cred i .

The second set of SIM Protected Data Objects SPDOs stored in the SIM Card is the SPDO key set. The ith SPDO key HKey i may be used by the host agent to verify the ith credential presented to it Cred i using the following equivalence test Result Key Cred 

The MNO provides the set of expected result values Result 1 N and the function F to the host agent . In one embodiment the set of expected result values are compiled into the executable instructions that make up the host agent . In another embodiment the expected results are in a table stored in the non volatile memory or elsewhere in the host and are available only to the host agent . In one embodiment function F is an encryption function such as Advanced Encryption Standard AES or Triple Data Encryption Standard TDES or 3DES and HKey i is the host encryption or decryption key used by the function F when performing the encryption of decryption operation. If function F is not an encryption or decryption function HKey i acts as another input value to function F.

The MNO assigns a software application an index value i an application key AKey i . In one embodiment the index value i and corresponding application key AKey i are only assigned to one software application and may not be re used for other software applications. For one software application such as Application in the MNO assigns index i 2 and an application key AKey 2 . The MNO also provides the software application the inverse of function G. This function may be shared among several applications . The assigned index value application key and inverse of function G may be compiled into the executable instructions of the software application .

Referring to the software application is authenticated by the host agent and receives an authorization from the host agent in several steps. The software application reads its assigned SPDO value SPDO 2 from the SIM card . In order to do this the software application may need to present its assigned index to the SIM card and the SPDO value returned corresponds to the assigned index. The assigned SPDO value returned by the SIM card SPDO 2 is the output of function G applied to the credential Cred 2 using application key AKey 2 . The software application then applies the G inverse function to SPDO value using its assigned application key AKey 2 in order to recover its assigned credential Cred 2 .

The software application then presents its assigned index value and the credential Cred 2 to the host agent . The host agent reads an SPDO Key from the SIM Card . The retrieved SPDO Key HKey 2 corresponds to the assigned index value i 2 presented by the software application . The host agent then applies function F to the credential using the SPDO Key and the output is compared to the expected result values set entry Result 1 N corresponding to the index value provided by the software application Result 2 Key 2 Cred 2 

If the comparison succeeds the host agent has authenticated the identity of the software application and provides an authorization to the application to use the requested feature. In one embodiment the authorization may be a session identification value. When the software application needs to access that hardware or software module or feature such as through an API of the host agent the software application may provide the session identification value instead of repeating the authorization process outlined above. In one embodiment the session identification value may expire after a period of time or a number of uses of the hardware or software module or feature such as through host agent API. If the session identification value is expired the authentication and authorization process may be repeated in order to obtain a new authorization and new session identification value.

For a given index i the MNO sets values of the expected result Result i the credential Cred i the application key AKey i the host key HKey i and the SPDO value SPDO i in other words G AKey i Cred i so that the following equations are satisfied Result Key Cred Result Key Key SPDO Result Key Key Key Cred 

The values of HKey i and SPDO i are stored by the MNO in the SIM Card . Inspection of the equations above reveals that the MNO may cause this comparison to fail by changing the value of HKey i SPDO i or both from a valid value that allows the equivalence comparison to succeed to an invalid value that causes the equivalence comparison to fail . Thus the software application assigned to index i will not be authenticated and will not receive an authorization if the MNO sets values of HKey i and SPDO i so as to cause the comparison test performed by the host agent to fail.

In one embodiment a session identification value assigned to an authorized software application can expire such as after the passage of time or after a number of uses of the host agent API. In this embodiment the software application may repeat the authorization process once the session identification value is expired in order to be re authenticated and re authorized. The MNO may revoke an authorization of a previously authenticated and authorized application by setting values of HKey i and or SPDO i that cause the comparison equations to fail when a subsequent authentication and authorization is performed. For example if a session identification value for the software application expires every five minutes the MNO may revoke an authorization to the application by changing the assigned SPDO value SPDO 2 and or the corresponding SPDO key HKey 2 stored in the SIM Card . Within the next five minutes the next authentication and authorization attempt by the software application will fail.

A rogue application may attempt to circumvent the revocation by storing a previously calculated valid credential Cred i then presenting this value to the host agent instead of a new credential value periodically recalculated from the SPDO i value read from the SIM card . For this reason changing the value of SPDO i alone may be a less effective method of revoking an authorization. By changing HKey i as well the MNO may prevent an application from merely presenting a previously calculated Cred i to renew an authorization after the MNO has revoked privileges to that application .

Inspection of the comparison equations also reveals how the identity of the software application is authenticated through this process. The software application may have exclusive access to application key 2 AKey 2 provided by the MNO to the author of the software application . Another software application may not successfully complete the result comparison equation without the correct value of AKey 2 as evident from the comparison equations Result 2 Key 2 Cred 2 Result 2 Key 2 Key 2 SPDO 2 

A software application that presents the correct credential Cred 2 must also be the software application that is assigned or that has knowledge of the corresponding application key AKey 2 and index i 2 by the MNO. Thus the process may also be utilized to authenticate the identity of the software application .

The process may also be utilized to provide a variety of authorizations to the software application . Referring briefly to the authorization may provide the software application access to one or more host agent API s to configure control or access one or more hardware of software resources within the system . For example the software application may be a program to take pictures using the camera module . The software application may seek authorization to use the following API provided by the host agent to operate the camera module 

Once authorized the software application may use the host agent API and the session identifier provided by the host agent to take a photograph using the camera module by calling functions provided through the host agent camera API. The host agent may verify that the session identifier provided in the function call corresponds to the software application currently authorized to use the camera API. The same authorization may also allow the software application to store the photograph in the non volatile memory card using another API provided by the host agent .

In another embodiment the MNO may assign two or more index values and application keys to an application. For example software application M in is assigned index values 5 and 9 and corresponding keys AKey 5 and AKey 9 and may use SPDO values SPDO 5 and SPDO 9 for authentication and authorization processes. Similarly the host agent may utilize SPDO keys HKey 5 and HKey 9 and expected result values Result 5 and Result 9 to authenticate and authorize software application M for one or more purposes. Thus the software application M may complete the authorization process for assigned index value 5 and may complete a separate authorization process for assigned index value 9.

By assigning more than one index values to the software application the MNO may implement a variety of privilege control schemes. In one embodiment an application is assigned an index value for each hardware or software resource in the cellular telephone system . For example referring to assigned index value 5 may be used to control access to the camera module by software application M and assigned index value 9 may be used to control access to the Bluetooth module by software application M .

In another embodiment the MNO may create a tiered authorization scheme by assigning two or more indexes to encode permission or privilege levels for example to access the non volatile memory using the API from the host agent as shown in the table below.

Referring to Table 2 in the first privilege level or tier the MNO revokes privileges or authorizations obtainable using assigned indexes 5 and 9. The software application M will be blocked from receiving the authorization necessary to read and write to the non volatile memory . In the second privilege level or tier the MNO revokes privileges obtainable using assigned index 5 but allows the software application M to succeed if authorizing through index 9. Thus the software application M may obtain read only access to the non volatile memory by completing the authentication and authorization process using assigned index 9.

In the third privilege level or tier the MNO revokes privileges obtainable using assigned index 9 but allows the software application M to succeed if authorizing through index 5. Therefore the software application M may obtain read and write access to the non volatile memory by completing the authentication and authorization process using assigned index 5. In the fourth privilege level or tier the MNO allows the software application M to succeed if authorizing through both indexes 5 and 9. Therefore the software application M may obtain read write and erase privileges to the non volatile memory by completing the authentication and authorization process using both assigned indexes 5 and 9. In this embodiment the host agent may track each assigned index that is currently authenticated and authorized and provide access to the host agent API for the non volatile memory based on the privilege level. Generally the MNO must configure the host agent to have knowledge of the privileges afforded by successful authentication and authorization to each index 1 N or index combination. This configuration may occur either at the time the host agent is compiled or after the host agent is compiled by dynamically configuring a host agent before or after the cellular telephone is provided to a subscriber.

In an alternative embodiment an MNO may also implement the privilege access scheme utilizing four assigned indexes instead of encoding four permission levels or tiers using two assigned indexes. The chosen implementation may depend on the hardware and software resource constraints of the system . For example more storage space in the SIM card may be required to store additional SPDO values and SPDO keys for an implementation without encoding. On the other hand the decoding logic or instructions within the host agent for an encoded solution may be more complex.

Control begins at step where a software application receives a request to access a hardware or software feature in a cellular telephone system . The request may be generated internally within the software application or the request may originate from an external input such as from another software application or from an input received from a user of the cellular telephone such as through a cellular telephone keypad or other input device. Control passes to step where the software application determines if an authorization is required in order to access the hardware or software feature in the cellular telephone system . As previously noted some features may not require authorization such as reading data from the non volatile memory or RAM . If authorization is not required control passes to step where the appropriate API function is called without a session identifier assigned to an authenticated and authorized entity and control returns to step to wait for another request.

In order to access some features such as accessing a camera module or the non volatile memory the software application must be authenticated and authorized. In this case control passes from step to where the software application determines whether it has already been authenticated and authorized to access this feature. In one embodiment the software application may maintain a list of session identification values issued by the host agent . These session identification values were previously issued in response to a successful completion of one or more authorization processes for one or more assigned index values. If an existing assigned session identifier corresponds to the requested hardware or software feature in a cellular telephone system control then passes from step to step where the software application calls a function in the appropriate host agent API corresponding to the requested hardware or software feature. The session identification value may be presented as part of the function call such as an argument to the function call. At step the host agent evaluates the session identification value to determine if it provides the necessary authorization for the requested feature and if it is still valid not expired . If the request is not rejected the function call succeeds and control returns to step to wait for another request.

If the host agent API function rejects the function call control passes to step where the host agent API function may inform the software application that the session identification value provided with the function call corresponds to an expired authorization or an authorization that does not provide the requisite permission to access the requested function. In this case the software application may seek a new authorization to access the requested hardware or software feature and control thus passes to in order to do so.

Returning to step the software application may determine that it is not currently authorized or was never previously authorized to access the requested hardware or software feature. Control then passes to step where the software application determines the index i corresponding to the requested feature. The index i value for a given hardware or software feature is established by the MNO and provided to the author of the software application so that it may be encoded into the executable instructions of the software application. The software application then retrieves the SPDO value corresponding to index i also referred to as SPDO i from the SIM card . As discussed in and the accompanying text SPDO i is the output of applying function G with an application key i to a credential. SPDO Key Cred 

Control passes to step where the credential value Cred i is recovered from the SPDO value read from the SIM card by applying the inverse of function G and using the application key AKey i assigned by the MNO Key SPDO Cred 

Control then passes to step where the software application presents the assigned index i and the recovered credential Cred i to the host agent for verification. If the authentication is successful and the authorization is granted then the host agent provides a session identifier to the software application and the software application calls the function in the appropriate host agent API corresponding to the requested hardware or software feature. The session identifier value is passed to the host agent as part of the function call as a credential that identifies the software application and indicates a permission to access the requested hardware or software feature. After the function call completes control returns to step to wait for another request.

If the authorization is not granted control passes to step where the host agent may inform the software application that the MNO has revoked or disabled privileges associated with assigned index i. Thus a session identification value is not provided by the host agent to the software application . In another embodiment the host agent may not provide any further information to the software application beyond rejecting the authentication and authorization request. Thus the request to access the desired hardware or software fails and control returns to step to wait for another request.

If the software application requests authorization to access a host agent API for a particular function control passes from step to step . In step the host agent receives a credential and the assigned index i associated with the requested hardware or software feature. Control passes to step where the host agent reads the SPDO key value associated with assigned index i HKey i from the SIM card . In step the host agent applies function F to the credential Cred i using the SPDO key HKey i as an additional input to the function. In one embodiment function F is an encryption function and the credential Cred i is encrypted with using the SPDO key HKey i . In another embodiment function F is a decryption function and the credential Cred i is decrypted with using the SPDO key HKey i . Control passes to step where the result of applying function F to the credential Cred i using the SPDO key HKey i F HKey i Cred i is compared with the expected result associated with the assigned index i Result i .

If the comparison fails then the authentication and authorization attempt is unsuccessful the request is rejected in step and control returns to step to wait for another request. In step the host agent may optionally provide a reason for rejecting the request. If the comparison succeeds then the host agent determines the hardware or software access privileges associated with assigned index i in step . Control passes to step where these privileges are associated with a session identifier value issued to the software application . By providing a session identifier the host agent indicates to the software application that its identity has been authenticated and it is authorized to access hardware or software features in the cellular telephone system defined by the MNO and associated with assigned index i. The software application may utilize the issued session identifier value in subsequent requests to use a host agent API to access a hardware or software feature permitted by that privilege.

As stated above the host agent may receive authentication and authorization requests and may also receive requests to use an authorization to access a host agent API. Returning to step if the request is not an authentication and authorization request then control passes to step where the host determines if the host agent has received a request to access a hardware or software feature through an API provided by the host agent . If not some other type of request has been received and control passes to step where the host agent processes the request and then control returns to step to wait for another request.

If the request is to access a hardware or software feature through an API provided by the host agent then control passes from step to step . In step the host agent receives a function call that is part of an API that configures controls or accesses the requested hardware or software feature and a session identifier that may indicate that the software application is authorized to make this request. In one embodiment the function prototype may allow the session identifier to be passed to the host agent as an argument of the function.

Before processing the function request the host agent may verify certain aspects of the session identification value. In step the host agent may verify that the session identifier has not expired. In one embodiment a session identifier value may expire after the passage of a predetermined amount of time after it is issued. In another embodiment a session identifier may expire after it has been used a predetermined number of times to prove an application s authority to access a particular host agent API. If the session identifier is expired then control passes to step where the request is rejected and then to step where the host agent waits for another request. In step the host agent may optionally provide a reason such as a reason code for rejecting the request.

If the session identifier is not expired then control passes to step where the authority granted by a currently valid session identifier is verified. Referring briefly to step a session identifier indicates that its holder is authorized to access hardware or software features in the cellular telephone system defined by the MNO and associated with assigned index i. Thus the software application must not only present a currently valid session identifier that session identifier must also indicate that the software application has the specific permission required to use that function of the host agent API. For example the software application may possess a session identifier that permits read only access to the non volatile memory through the host agent API. If the software application presents this session identifier in conjunction with a request to write to the non volatile memory the host agent will reject the request. If the session identifier does not allow access to a function within the host agent API then control passes to step where the request is rejected and then to step where the host agent waits for another request. The host agent may optionally provide a reason for rejecting the request in step .

If the session identifier indicates that the software application has the requisite privilege to access that function of the host agent API then control passes to step where the host agent executes the API function call and returns to step where the host agent waits for another request.

In the text accompanying it was noted that for a given assigned index i the MNO may provide an application key AKey i to the software application may provide an expected result value Result i to the host agent and may write a SPDO value SPDO i and a SPDO key HKey i so that the following authorization equivalence test will succeed key Key SPDO Result 

If this equivalence test succeeds an authorization is provided to the software application assigned to index i to control configure or access certain hardware or software features associated with index i. The MNO may revoke an authorization to features associated with index i by changing one or more of the variable values so that the equivalence test fails. The MNO may reinstate an authorization to features associated with index i by changing one or more of the variable values so that the equivalence test passes. The values of AKey i and Result i may be compiled into the executable instructions associated with the software application and the host agent respectively. However the SPDO value SPDO i and the SPDO key HKey i are stored in the SIM card and thus are more easily changed by the MNO . shows exemplary steps for revoking an authorization of a software application to access a hardware or software feature in a cellular telephone system.

Control begins at step where a request from the MNO is received at the cellular telephone . In one embodiment the request is processed by the host agent . In another embodiment the request from the MNO is processed by another module or component within the operating system OS instructions executed by the processor in the cellular telephone . In yet another embodiment an application within SIM card processes the request from the MNO . In this embodiment the MNO may establish a secure over the air OTA connection with the SIM card where the host agent or the host may forward the request from the MNO to the SIM card for execution in step . Revoking or restoring a software application s authorization to access a feature may be thought of as a security sensitive task. If any entity could freely change these values in the SIM card the security of the authentication and authorization system could be compromised. Therefore the identity of the requesting entity the MNO may be confirmed before the request is processed. A variety of authentication techniques are possible such as challenge response algorithms or verifying that a password received from the MNO corresponds to a MNO defined password previously stored in the SIM card during manufacturing or configuration of the cellular telephone . Similarly the receipt of the request through a secure wired or wireless communication channel between the MNO and the cellular telephone may also be relied upon to establish the identity of the requester.

In step if the MNO is not authenticated then the request is rejected in step and control returns to step . If the MNO is authenticated then control passes to step where the new SPDO value SPDO i the new SPDO key HKey i and the index i is received from the MNO . In step a secure channel may be established between the cellular telephone and the SIM card . A secure channel may prevent an unauthorized entity from detecting the SPDO i and HKey i values being written to the SIM card or the command sequence required to perform the write operation. In one embodiment commands and or data exchanged between cellular telephone and the SIM card are encrypted before transmission over the interface and decrypted after reception over the interface . In one embodiment an existing secure channel may be used between the cellular telephone and the SIM card instead of creating a new secure channel. In step the existing SPDO value and SPDO key stored in the SIM card and associated with index i are replaced by the new SPDO i and HKey i values received from a third party such as the MNO . In one embodiment the replacement is completed by instructing the SIM card to overwrite the values. The instruction may be formed by the host agent in response to the request or may be an instruction received from the MNO and forwarded to the SIM card by the host or the host agent .

In one embodiment the existing SPDO value and SPDO key stored in the SIM card are replaced by overwriting the SPDO value and SPDO key with the new values. The SIM card may impose other security measures before the write operations can occur such as accessing a secure account within the card supplying a password or completing other command sequences or security algorithms that have the goal of reducing the probability that an unauthorized entity may overwrite the SPDO key or SPDO value contents. Where the third party is the MNO the security measures may be similar to or comprise the same measures that the MNO undertakes to establish a secure communication channel with the cellular telephone when exchanging other types of commands or data. The secure communication channel between the cellular telephone and the SIM card may now be closed and control returns to step to await another request.

Referring back to for each of the N assigned index values available in the system the host agent must store or have access to an expected result value and a host key value. Depending on the value of N and the size of each expected result Result i the results set Result 1 N may require a substantial amount of storage space either compiled into the executable instructions of the host agent or stored in the non volatile memory or other secure storage within the host or processor . Further as the number of software applications increase a system may require more than N assigned index values to support the authorization schemes implemented by the MNO . If the N expected result values are stored within the executable instructions of the host agent then the host agent software or firmware may need to be recompiled and reprogrammed into the executable code storage space of the host in order to include greater than N expected result values. Thus it may be desirable to eliminate the need for the set of N result values Result 1 N in the authentication and authorization scheme as shown in .

In the embodiment detailed in authentication and authorization of a software application may be performed without the use of a set of an expected results stored within the host agent . shows the flow of data and variables when authenticating and authorizing a software application to access a hardware or software feature in a cellular telephone system . In comparison to and Table 1 the MNO provides nearly the same functions and variables that may be used in the authentication and authorization process. From the perspective of the software application the authentication and authorization process appears identical to the procedure presented in and the accompanying description. However the expected result set Result i previously stored in the host agent is now stored within the SIM Card in place of the HKey i array and the HKey i is no longer required for the host agent to complete the authentication and authorization process.

Two sets of SIM Protected Data Objects SPDOs are stored in the SIM Card by the MNO for use during the authentication and authorization process. The first set is referred to as SPDO values. Each SPDO value SPDO i is the output of a public function G applied to a corresponding credential Cred i using a corresponding application key AKey i . SPDP Key Cred 

The function G is any invertible function. For example if function G inverted each of the bits in a binary representation of a value X then the inverse function denoted as G would also invert each bit so that the original value X can be recovered 

AKey i is an input that is used by invertible function G. In this case the value X can be recovered from invertible function that accepts an additional input k as follows 

In one embodiment function G is a symmetric key encryption function such as Advanced Encryption Standard AES or Triple Data Encryption Standard TDES or 3DES where the application key is used to encrypt the credential. The corresponding inverse of function G referred to as G is a symmetric key decryption function using the same application key and may be used to recover the credential from the SPDO value SPDO i read from the SIM card . Key SPDO Key Key Cred Cred 

The MNO may assign an application index i and a corresponding application key AKey i to a software application . In one embodiment the index value i and corresponding application key AKey i are only assigned to one software application and may not be re used for other software applications. For one software application such as Application in the MNO assigns index i 2 and an application key AKey 2 . The MNO also provides the inverse of function G referred to as G to the software application for use in recovering the credential. The assigned index value application key and inverse of function G may be compiled into the executable instructions of the software application .

SPDO expected result values are the second set of SIM Protected Data Objects SPDOs stored in the SIM Card . The ith SPDO expected result value Result i may be used by the host agent to verify the ith credential presented to it Cred i using the following equation Result Cred 

Thus the host agent requires the storage space to implement the function F and the host does not require the storage space to store a host key array HKey 1 N . The simplified verification process within the host agent may present several security considerations. For example if the Result i array is readable by the software application and F is a public function it may be possible to calculate the credential to present to the host agent as shown in the equation below Result Cred Cred 

In one embodiment function F is a non invertible function also known as an irreversible function or a one way function such as the SHA 256 one way cryptographically secure hash function described in Federal Information Processing Standards Publication 180 2. As an irreversible function an inverse function Fmay not be determinable and thus calculating a credential based on the SPDO expected result value Result i may be avoided. In another example a malicious application may intercept the value of Result i being read from the SIM card by the host agent and may replace that value with a value that will satisfy the equivalence test performed by the host agent Result Cred 

In another embodiment the host agent may establish a secure channel between the host agent and the SIM card . In one embodiment commands and data exchanged on a secure channel between the host agent and the SIM card are encrypted before transmission and are decrypted after reception. A secure channel may prevent an unauthorized entity from intercepting or substituting the Result i value being read from SIM card or the command sequence required to perform the read operation of the SPDO key from the SIM Card .

Referring to the software application is authenticated by the host agent and receives an authorization from the host agent in several steps. The software application reads its assigned SPDO value SPDO 2 from the SIM card . In order to do this the software application may need to present its assigned index to the SIM card and the SPDO value returned corresponds to the assigned index. The assigned SPDO value returned by the SIM card SPDO 2 is the output of function G applied to the credential Cred 2 using application key AKey 2 . The software application then applies the G inverse function to SPDO value using its assigned application key AKey 2 in order to recover its assigned credential Cred 2 .

The software application then presents its assigned index value and the credential Cred 2 to the host agent . The host agent reads an SPDO Key from the SIM Card . The retrieved SPDO expected result Result 2 corresponds to the assigned index value i 2 presented by the software application. The host agent then applies function F to the credential and the output is compared to SPDO expected result Result 2 using the following test Result 2 Cred 2 

If the comparison succeeds the host agent has authenticated the identity of the software application and provides an authorization such as a session identifier to the application to use a software or hardware feature. The software application may provide the session identification value instead of repeating the authorization process outlined above in order to use that software module or feature through an API of the host agent . In one embodiment the session identification value may expire after a period of time or a number of uses of the host agent API. If the session identification value is expired the authentication and authorization process may be repeated in order to obtain a new authorization and new session identification value.

For a given index i the MNO sets values of the credential Cred i the application key AKey i the expected result Result i and the SPDO value SPDO i in other words G AKey i Cred i so that the following equations are satisfied Result Cred Result Key SPDO Result Key Key Cred 

The values of Result i and SPDO i are stored by the MNO in the SIM card . Inspection of the equations above reveals that the MNO may cause this comparison to fail by changing the value of Result i SPDO i or both. Thus the software application assigned to index i will not be authenticated and will not receive an authorization if the MNO sets values of Result i and SPDO i that cause the comparison equations to fail. As previously noted the MNO may change values of Result i and or SPDO i to revoke an authorization assuming that session identifiers expire after a period of time or a number of API function calls . Further the MNO may change values of Result i and or SPDO i to restore an authorization. For example if a mobile network subscriber has activated a feature of a cellular telephone the MNO may set values of Result i and or SPDO i to allow the authentication and authorization equivalence test to succeed when attempted again.

As previously noted a rogue application may attempt to circumvent the revocation of an authorization by storing a previously calculated valid credential Cred i then presenting this value to the host agent instead of a new credential value periodically recalculated from the SPDO i value. For this reason changing the value of SPDO i alone may be a less effective method of revoking an authorization. By changing Result i as well the MNO may prevent an application from merely presenting a previously calculated Cred i to renew an authorization after the MNO has revoked privileges to that application .

While the authorization and authentication performed by the host agent in is different than what is described in the identity of the software application is still authenticated through this process. The software application only has access to application key 2 AKey 2 which may be provided by the MNO to the author of the software application. Another software application may not successfully complete the result comparison equation without the correct value of AKey 2 as evident from the comparison equations. Result 2 Cred 2 Result 2 Key 2 SPDO 2 

A software application that presents the correct credential Cred 2 must also be the software application that is assigned or has knowledge of the corresponding application key AKey 2 and index i 2 by the MNO. Thus the process may also be utilized to authenticate the identity of the software application .

As previously noted from the perspective of the software application an embodiment that eliminates the need for an expected results array Result 1 N in the authentication process appears identical to the procedure presented in and the accompanying description. However from the perspective of the host agent there are some changes to the steps for authenticating and authorizing a software application to access a software or hardware feature through the host agent API.

If a software application requests authorization to access a host agent API for a particular function control passes from step to step . In step the host agent receives a credential and the assigned index i associated with the requested hardware or software feature. Control passes to step where a secure channel is established between the host agent and the SIM card . A secure channel may prevent an unauthorized entity from detecting or intercepting the Result i value retrieved from the SIM card or the command sequence required to perform the read operation. In one embodiment commands and or data exchanged between host agent and the SIM card are encrypted before transmission over the interface and decrypted after reception over the interface .

Once a secure channel is established control passes to step where the host agent reads the SPDO expected result value associated with assigned index i Result i from the SIM card . In step the host agent applies function F to the credential Cred i . In one embodiment the function F is a non invertible or irreversible one way function such as the SHA 256 cryptographically secure hash function. Control passes to step where the result of applying function F to the credential Cred i F Cred i is compared with the expected result associated with the assigned index Result i .

If the comparison fails then the authentication and authorization attempt is unsuccessful the request is rejected in step and control returns to step to wait for another request. The host agent may optionally communicate the reason for the rejection to the software application in step . If the comparison succeeds then the host agent determines the hardware or software access privileges associated with assigned index i in step . Control passes to step where these privileges are associated with a session identifier value issued to the software application . By providing a session identifier the host agent indicates to the software application that its identity has been authenticated and it is authorized to access hardware or software features in the cellular telephone system defined by the MNO and associated with assigned index i. The software application may utilize the issued session identifier value in subsequent requests to use a host agent API to access a hardware or software feature permitted by that privilege.

As stated above the host agent may receive authentication and authorization requests and may also receive requests to use an authorization to access a host agent API. Returning to step if the request is not an authentication and authorization request then control passes to step where the host agent determines if the host agent has received a request access to a hardware or software feature through an API provided by the host agent . If not some other type of request has been received control passes to step where the host agent processes the request and then control returns to step to wait for another request.

If the request is to a hardware or software feature through an API provided by the host agent then control passes from step to step . In step the host agent receives a function call that is part of an API that configures controls or accesses the requested hardware or software feature and a session identifier that may indicate that the software application is authorized to make this request. In one embodiment the function prototype may allow the session identifier to be passed to the host agent as an argument of the function.

Before processing the function request the host agent may verify certain aspects the session identification value. In step the host agent may verify that the session identifier has not expired. In one embodiment a session identifier value may expire after the passage of a predetermined amount of time after it is issued. In another embodiment a session identifier may expire after it has been used a predetermined number of times to prove an application s authority to access a particular host agent API. If the session identifier is expired then control passes to step where the request is rejected and then to step where the host agent waits for another request. In step the host agent may optionally provide a reason for rejecting the request.

If the session identifier is not expired then control passes to step where the authority granted by a currently valid session identifier is verified. The software application must not only present a currently valid session identifier that session identifier must also indicate that the software application has the specific permission required to use that function of the host agent API. If the session identifier does not allow access to a function within the host agent API then control passes to step where the request is rejected and then to step where the host agent waits for another request. The host agent may optionally provide a reason for rejecting the request in step .

If the session identifier indicates that the software application has the requisite privilege to access that function of the host agent API then control passes to step where the host agent executes the API function call and returns to step where the host agent waits for another request.

Thus a mobile network operator may restrict access to certain hardware and software features of a cellular telephone system . These restricted features may be accessible through a host agent API to authenticated and authorized entities. An entity such as a software application may be assigned an access key and variables used to calculate a credential. The MNO may assign the host agent corresponding values to verify the calculated credential. Further an authorization by the host agent may expire after a period of time or a number of uses thus requiring periodic authentication and authorization in order to continue accessing a restricted hardware or software feature of the system . The success of the authorization and authentication process depends on assigned values stored in a SIM or RUIM card that are easily changeable by the MNO .

Thus depending on the assigned values the MNO stores in the SIM card the MNO may easily enable or disable an authorization to a feature. For example an MNO may allow a successful authentication and authorization when a mobile network subscriber has paid the MNO an additional monthly fee to access a feature such as a program to take digital pictures with the camera module of the cellular telephone or storing music and other files to a removable media card . Similarly the MNO may revoke an authorization to a feature such as when a subscriber cancels a feature from a cellular telephone subscription plan.

The MNO may also allow the development of third party applications while retaining the ultimate control over whether a software application is capable of operating on the system or accessing sensitive hardware or software resources. An MNO may assign an index value and an application key to a software application to allow access to selected features through the host agent API. In one embodiment the MNO may make this assignment only when it verifies that the software can be trusted for example not a virus or another type of malicious application . If the MNO later finds that the application has undesirable characteristics the MNO may disable its use by network subscribers simply by revoking its privileges to access the host agent API thereby crippling or entirely disabling the ability of the application to function or harm hardware or software elements of the system .

An MNO may also create permission levels by establishing or revoking different degrees of privilege to access a resource. For example as shown in Table 2 by using two or more assigned indexes and their corresponding key resources the MNO may allow read read write or read write erase privileges to a non volatile memory . This flexibility may allow an MNO to adjust the permissions to access a particular resource in response to a variety of conditions. For example a trusted software application or user may initially have full privileges to access the content in a non volatile memory . If the MNO detects a security threat or another condition the MNO may reduce the access privilege to the non volatile memory for the trusted application to read only access.

Referring back to the function G may be a public function shared among the applications . Similarly the integrity of the system may not necessarily depend on the keeping the function F used by the host agent a secret. Each application is responsible for protecting their assigned application key or keys. Similarly the host agent may take measures to protect the expected results set Result 1 N . In some embodiments the need for expected results set may be eliminated. Possible security consideration in this embodiment may be addressed by providing an irreversible function F to avoid calculating a credential based on the SPDO Key. In other embodiments security may also be enhanced by the use of secure channels when reading or storing SPDO values or keys in the SIM card or RUIM card.

The advantages and features of the embodiments may also be achieved in other systems under centralized control and are not limited to cellular telephones in communication with a mobile network operator. For example instead of a cellular telephone a personal computer in communication with a server over a wired or wireless connection may authorize software applications or users to access selected features of the personal computer system where the success of an entity s authentication or authorization attempt is similarly dependent on variables under centralized control by the server.

Although the invention has been described with respect to various system and method embodiments it will be understood that the invention is entitled to protection within the full scope of the appended claims.

