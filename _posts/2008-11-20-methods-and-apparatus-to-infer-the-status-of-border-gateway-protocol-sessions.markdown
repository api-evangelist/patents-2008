---

title: Methods and apparatus to infer the status of border gateway protocol sessions
abstract: Methods and apparatus to infer the status of BGP sessions are disclosed. A disclosed example method comprises querying a configuration file of a router of a first AS to identify a BGP session to a second AS, querying the file to determine whether the BGP session is a single hop, when the BGP session is a single hop, setting a status flag to a first value, querying the file to determine whether there is a valid IP configuration for the BGP session, when there is a valid IP configuration, setting the status flag to a second value, querying a router syslog file for the router to identify a syslog message associated with the BGP session, determining whether the session is stale, and when the session is not stale and the status flag is set to the second value, adding the second AS to a list of actual AS neighbors.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07894461&OS=07894461&RS=07894461
owner: AT&T Intellectual Property I, L.P.
number: 07894461
owner_city: Reno
owner_country: US
publication_date: 20081120
---
This disclosure relates generally to border gateway protocols BGPs and more particularly to methods and apparatus to infer the status of BGP sessions.

The Internet is implemented as a plurality of autonomous systems ASes that are interconnected via a plurality of routers and communication paths. BGP sessions are typically used between the routers of different ASes to identify and select routes between the ASes to for example transport user data received at a first AS to a destination associated with a second AS.

Example methods and apparatus to infer the status of border gateway protocol BGP sessions are disclosed. A disclosed example method includes querying a router configuration file associated with a router of a first autonomous system AS to identify a BGP session between the first AS and a second AS querying the router configuration file to determine whether the BGP session is a single hop BGP session when the BGP session is a single hop BGP session setting a status flag associated with the BGP session to a first value querying the router configuration file to determine whether the first AS and the second AS have a valid Internet protocol IP configuration for the identified BGP session when the first AS and the second AS have a valid IP configuration for the identified BGP session setting the status flag to a second value querying a router syslog file associated with the router to identify a syslog BGP message associated with the BGP session determining whether the BGP session is stale based on the identified syslog BGP message and when the BGP session is not stale and the status flag is set to the second value adding a third value representative of the second AS to a list of actual AS neighbors of the first AS.

A disclosed example apparatus includes a parser to parse a router configuration file to form a first list of configured BGP sessions each configured BGP session of the first list having an associated status flag a filterer to process a router syslog file to form a second list of stale BGP sessions an analyzer to process BGP data to form a third list of active AS neighbors and a builder to form a fourth list of actual AS neighbors based on the first second and third lists.

In the interest of brevity and clarity throughout the following disclosure references will be made to an example communication system of . However the methods and apparatus described herein to infer the status of BGP sessions and or to create a list of actual AS interconnections and or relationships are applicable to other types of networks constructed using other network technologies topologies and or protocols.

The example routers R and R of the AS of are configured from and or based on a router configuration database . The example configuration database of contains IP configuration information or data and or an IP configuration file for each of the routers R and R of the example AS . The IP configuration information data and or file for a particular router R R defines the IP connectivity configured for and or provisioned to that router R R. IP configuration data may be stored in the example router configuration database using any number and or type s of data structures. The example router configuration database of may be implemented using any number and or type s of memory ies and or memory devices not shown .

Before a router R R of the example AS of is able to setup a BGP session B B to any of the remote ASes the router R R has to have a minimum suitable and or applicable configuration state. For example so that the router R can utilize and or establish the example BGP session B the router R has to include information related to the AS . In particular the IP configuration for the router R needs to include an entry neighbor 129.213.1.2 remote as 20 where the value 20 represents the AS . The router R also needs to have IP routing information that includes the router R such as an IP subnet defined for a local network interface of the router R that includes the IP address 129.213.1.2 of the remote router R. For example the IP configuration for the router R could include an entry ip address 192.213.1.1 255.255.255.252 where 255.255.255.252 is a subnet mask or an entry ip route 129.213.1.0 255.255.255.252 Serial4 1 1 24 0 which defines a static route to the router R and where Serial4 1 1 24 0 refers to the local network interface of the router R. Likewise the IP configuration for the example router R needs to include an entry neighbor 175.220.1.2 ebgp multihop 3 to enable the BGP session B between the routers R and R where the number 3 in the example entry indicates the number of IP hops between the routers R and R. The example router R also needs to be configured with IP routing information that allows the router R to reach the router R by performing a longest prefix matching of 175.220.1.2 in its routing table.

To infer the status of BGP sessions for example the BGP sessions B and B of the example communication system the example AS of includes a BGP session analyzer . The example BGP session analyzer of a parses the router configuration database to compile a list of configured BGP sessions b obtains syslog files from the routers R and R and filters the obtained syslog files to compile a list of stale BGP sessions c obtains BGP data from the routers R and R and processes the obtained BGP data to compile a list of active AS neighbors and d compiles a list of actual communicatively coupled neighbor ASes based on the list of configured BGP sessions the list of stale BGP sessions and the list of active AS neighbors. An example manner of implementing the example BGP session analyzer of is described below in connection with . Example processes that may be carried out to implement the example BGP session analyzer are described below in connection with .

By inferring the status of BGP sessions of the AS for example the BGP sessions B and B the example BGP session analyzer can compile a list of current and or actual neighbor ASes of the example AS . That is when at least one valid BGP session exists between the AS and another AS for example the AS that AS is added to the list of actual neighbor ASes. Thus the compiled list of actual neighbor ASes represents an inferred connectivity map for the AS and or more generally for the example communication system of .

The example BGP session analyzer of compiles the list of actual AS neighbors without having to interrogate the routers of the other ASes for example without having to interrogate the routers R and R . Moreover the list of actual AS neighbors is compiled by the BGP session analyzer without having to repeatedly run throughout a study period using a command such as show ip bgp sum. The repeated execution of such a command for all of the routers R R is generally infeasible because the BGP session analyzer typically does not have access to the routers of other ASes. Moreover it is impossible to obtain historic show ip bgp sum data for a past period during which the command was not run. Thus as described more fully below in connection with the example BGP session analyzer of infers the list of actual AS neighbors using only information obtained and or obtainable within the AS .

To store a compiled list of actual neighbor ASes the example AS of includes a actual AS neighbors database . Using any number and or type s of data structures the example actual AS neighbors database of stores a list of neighbor ASes of the AS as inferred by the example BGP session analyzer . The example actual AS neighbors database of may be implemented using any number and or type s of memory ies and or memory devices.

While an example communication system has been illustrated in one or more of the interfaces data structures elements processes and or devices illustrated in may be combined divided re arranged omitted eliminated and or implemented in any other way. Further the example routers R R the example router configuration database the example BGP session analyzer and or the example actual AS neighbor database of may be implemented by hardware software firmware and or any combination of hardware software and or firmware. Thus for example any of the example routers R R the example router configuration database the example BGP session analyzer and or the example actual AS neighbor database may be implemented by one or more circuit s programmable processor s application specific integrated circuit s ASIC s programmable logic device s PLD s and or field programmable logic device s FPLD s etc. Further still a communication system may include interfaces data structures elements processes and or devices instead of or in addition to those illustrated in and or may include more than one of any or all of the illustrated interfaces data structures elements processes and or devices.

To obtain router configuration information the example BGP session analyzer of includes any type of configuration database interface . Using any number and or type s of method s and or application programming interface s the example configuration database interface allows an inference engine to obtain data and or information representative of provisioned and or configured BGP sessions for the example AS .

To obtain router syslog files and or BGP data the example BGP session analyzer of includes any type of router interface . Using any number and or type s of method s and or application programming interface s the example router interface allows the example inference engine to obtain router syslog files and or BGP session data from the example routers R and R of the example AS .

To store AS neighbor information the example BGP session analyzer of includes any type of actual AS neighbor database interface . Using any number and or type s of method s and or application programming interface s the example actual AS neighbor database allows the example inference engine to store a list of actual AS neighbors in the example actual AS neighbor database .

To infer the status of BGP sessions the example BGP session analyzer of includes the example inference engine . The example inference engine of a obtains router configuration data from the router configuration database via the configuration database interface b parses the obtained router configuration information to compile a list of configured and or provisioned BGP sessions c obtains syslog files from routers of the AS for example from the routers R and R via the example router interface d filters the obtained syslog files to compile a list of stale BGP sessions e obtains BGP session data from the routers of the AS via the example router interface f processes the obtained BGP data to compile a list of active AS neighbors g compiles a list of communicatively coupled neighbor ASes based on the list of configured BGP sessions the list of stale BGP sessions and the list of active AS neighbors and h stores the compiled list of actual neighbor ASes in the example actual AS neighbors database via the actual AS neighbor database interface . An example manner of implementing the example BGP inference engine of is described below in connection with . Example processes that may be carried out to implement the example inference engine are described below in connection with .

While an example manner of implementing the example BGP session analyzer of has been illustrated in one or more of the interfaces data structures elements processes and or devices illustrated in may be combined divided re arranged omitted eliminated and or implemented in any other way. Further the example network interface the example router configuration database interface the example inference engine the example router interface the example actual AS neighbor database interface and or more generally the example BGP session analyzer of may be implemented by hardware software firmware and or any combination of hardware software and or firmware. Thus for example any of the example network interface the example router configuration database interface the example inference engine the example router interface the example actual AS neighbor database interface and or more generally the example BGP session analyzer may be implemented by one or more circuit s programmable processor s ASIC s PLD s and or FPLD s etc. Further still a BGP session analyzer may include interfaces data structures elements processes and or devices instead of or in addition to those illustrated in and or may include more than one of any or all of the illustrated interfaces data structures elements processes and or devices. For example a BGP session analyzer may implement network interfaces for respective ones of the example router configuration database interface the example router interface and the example actual AS neighbor database interface .

To compile a list of stale BGP sessions the example inference engine of includes a syslog filterer . The example syslog filterer of obtains from each router of the example AS its syslog file via the example router interface . For each BGP session identified in the syslog file the example syslog filterer locates the most recent syslog BGP message and if the syslog BGP message is stale adds the BGP session to the list of stale BGP sessions by for example carrying out the example process of . As described below in connection with the list of stale BGP sessions can be used to determine whether any configured BGP sessions identified by the example configuration file parser are not actively and or currently being used. Such stale BGP sessions may be associated with ASes that were originally configured as neighbor ASes of the example AS but are in fact not longer active actual and or current AS neighbors. In the examples described herein such inactive and or non current AS neighbors are not included in the list of actual AS neighbors of the AS .

To compile a list of active AS neighbors the example inference engine of includes a BGP data analyzer . The example BGP data analyzer of obtains from each router of the example AS its BGP data via the example router interface . For each BGP session included in the BGP data the example BGP data analyzer adds a value representative of the neighbor AS to the list of active AS neighbors by for example carrying out the example process of . As described below in connection with the list of active AS neighbors can be used to ensure that active AS neighbors of the AS are included in a list of actual AS neighbors even when such active AS neighbors may be associated with one or more of incorrect and or incomplete IP configuration s and or stale BGP session s . Thus the example list of active AS neighbors is used to help ensure completeness of the example list of actual AS neighbors.

To compile the list of actual AS neighbors the example inference engine of includes an actual AS neighbor list builder . By for example carrying out the example process of the example list builder of compiles the list of actual AS neighbors based on the compiled list of configured BGP sessions the list of stale BGP sessions and the list of active AS neighbors.

While an example manner of implementing the example inference engine of has been illustrated in one or more of the interfaces data structures elements processes and or devices illustrated in may be combined divided re arranged omitted eliminated and or implemented in any other way. Further the example configuration file parser the example syslog filterer the example BGP data analyzer the example actual AS neighbor list builder and or more generally the example inference engine of may be implemented by hardware software firmware and or any combination of hardware software and or firmware. Thus for example any or the example configuration file parser the example syslog filterer the example BGP data analyzer the example actual AS neighbor list builder and or more generally the example inference engine may be implemented by one or more circuit s programmable processor s ASIC s PLD s and or FPLD s etc. Further still an inference engine may include interfaces data structures elements processes and or devices instead of or in addition to those illustrated in and or may include more than one of any or all of the illustrated interfaces data structures elements processes and or devices.

The example processes of may be carried out by a processor a controller and or any other suitable processing device. For example the example processes of may be embodied in coded instructions stored on any tangible computer readable medium such as a flash memory a compact disc CD a digital versatile disc DVD a floppy disk a read only memory ROM a random access memory RAM a programmable ROM PROM an electronically programmable ROM EPROM and or an electronically erasable PROM EEPROM an optical storage disk an optical storage device magnetic storage disk a magnetic storage device and or any other medium which can be used to carry or store program code and or instructions in the form of machine accessible and or machine readable instructions or data structures and which can be accessed by a processor a general purpose or special purpose computer or other machine with a processor e.g. the example processor platform P discussed below in connection with . Combinations of the above are also included within the scope of computer readable media. Machine readable instructions comprise for example instructions and or data that cause a processor a general purpose computer special purpose computer or a special purpose processing machine to implement one or more particular processes. Alternatively some or all of the example processes of may be implemented using any combination s of ASIC s PLD s FPLD s discrete logic hardware firmware etc. Also some or all of the example processes of may instead be implemented manually or as any combination of any of the foregoing techniques for example any combination of firmware software discrete logic and or hardware. Further many other methods of implementing the example operations of may be employed. For example the order of execution of the blocks may be changed and or one or more of the blocks described may be changed eliminated sub divided or combined. Additionally any or all of the example processes of may be carried out sequentially and or carried out in parallel by for example separate processing threads processors devices discrete logic circuits etc.

The example process of begins with the example configuration file parser obtaining for each a router of the example AS its configuration file from the router configuration database and parsing the configuration files to compile a list of configured BGP sessions by for example carrying out the example process of block .

The example syslog filterer obtains from each router of the example AS its syslog file and filters the syslog files to compile a list of stale BGP sessions by for example carrying out the example process of block .

The example BGP data analyzer obtains from each router of the example AS its BGP data and analyzes the BGP data to compile a list of active AS neighbors by for example carrying out the example process of block .

The example actual AS neighbor list builder compiles a list of actual AS neighbors based on the list of configured BGP sessions the list of stale BGP sessions and the list of active AS neighbors by for example carrying out the example process of block . Control then exits from the example process of .

The example process of processes each line of the configuration file for each router lines . At each line the example configuration file parser determines whether the line matches a first regular expression . If the line matches the first regular expression the example configuration file parser hashes a value Y representative of a neighbor AS using a hash index comprising a string R representative of the currently considered router and a string X for example an IP address representative of a remote router associated with the neighbor AS. The configuration file parser also hashes a status flag having a value of FALSE for example a value of zero using the same hash index lines 

If the line matches a second regular expression the example configuration file parser hashes a value Y representative of the neighbor AS using a hash index comprising a string R representative of the currently considered router and a string X for example an IP address representative of a remote router associated with the neighbor AS. The configuration file parser also hashes a status flag having a value of TRUE for example a value of one using the same hash index lines .

The example configuration parser processes each line of the configuration file for each router a second time lines . At each line the example configuration file parser determines whether the line matches a third regular expression . If the line matches the third regular expression the example configuration file parser examines the string X for example an IP address of each hash entry to determine whether the string X is included in a value M for example an IP subnet mask extract via the regular expression . If the string is included in the value M the status flag associated with the hash entry is update to TRUE lines .

If the line matches the fourth regular expression the example configuration file parser examines the string X for example an IP address of each hash entry to determine whether the string X is included in a value M for example an IP subnet mask extract via the regular expression . If the string is included in the value M the status flag associated with the hash entry is update to TRUE lines . Control then exits from the example process of .

The example process of processes a syslog file for a router R. For each BGP session identified in the syslog file for example for each combination of R and remote router X the example syslog filterer searches for the more recent syslog BGP message line . The example syslog filterer obtains a timestamp associated with the most recent syslog BGP message line . If the most recent syslog BGP message is a Peer Down message and the timestamp indicates that the syslog BGP message is less than one month old line the syslog filter hashes a flag having a value of TRUE using a hash index comprising a string R representative of the currently considered router and a string X for example an IP address representative of a remote router associated with the syslog BGP message line .

If the most recent syslog BGP message is not a Peer Down or is older than one month line the syslog filterer determines whether syslog BGP message is less than one year old line . If the syslog BGP message is less than one year old line the syslog filterer hashes a flag having a value of TRUE using a hash index comprising a string R representative of the currently considered router and a string X for example an IP address representative of a remote router associated with the syslog BGP message line . When the entire syslog file has been processed control exits from the example process of .

The example thresholds of one month and one year utilized in were empirically selected to balance the likelihood of false positive with the likelihood of false negatives. That is the example thresholds of were selected to reduce the likelihood that a BGP session is incorrectly identified as stale and or incorrectly identified as active. In general lower thresholds result in higher incidences of falsely identifying a BGP session as stale and higher thresholds result in higher incidences of missing a BGP session that is in fact stale. While example thresholds are shown in other thresholds may be selected based on any number and or type s of criteria.

The example process of processes each BGP entry of a router BGP data line . For each BGP entry line the example BGP data analyzer extracts a value of the AS associated with the last hop from the ASPATH BGP attribute of the BGP entry line . The BGP data analyzer hashes the AS value line . After all BGP entries are processed control exits from the example process of .

The example process of builds a list of actual AS neighbors. The example list builder processes each hash entry created by the example configuration file parser using for example the example process of line . For each has entry line the list builder determines whether the associated hashed flag is TRUE and whether the associated BGP session is hashed in the list of stale BGP sessions created by the example syslog filterer using for example the example process of line . If the flag is TRUE and the associated BGP session is not stale line the list builder recalls from the hash of configured BGP sessions the AS associated with the BGP session line and adds the AS to the list of actual AS neighbors line .

When all hash entries have been processed line the list builder adds any active AS neighbors hashed by the example BGP data analyzer using for example the example process of to the list of actual AS neighbors lines . Control then exits from the example process of .

The processor platform P of the example of includes at least one general purpose programmable processor P. The processor P executes coded instructions P and or P present in main memory of the processor P e.g. within a RAM P and or a ROM P . The processor P may be any type of processing unit such as a processor core a processor and or a microcontroller. The processor P may execute among other things the example processes of to implement the example methods and apparatus described herein.

The processor P is in communication with the main memory including a ROM P and or the RAM P via a bus P. The RAM P may be implemented by DRAM SDRAM and or any other type of RAM device and ROM may be implemented by flash memory and or any other desired type of memory device. Access to the memory P and the memory P may be controlled by a memory controller not shown . One or both of the example memories P and P may be used to implement the example router configuration database and or the example actual AS neighbor database of .

The processor platform P also includes an interface circuit P . The interface circuit P may be implemented by any type of interface standard such as an external memory interface serial port general purpose input output etc. One or more input devices P and one or more output devices P are connected to the interface circuit P. The input devices P and or output devices P may be used to for example implement the network interface of .

Although certain example methods apparatus and articles of manufacture have been described herein the scope of coverage of this patent is not limited thereto. On the contrary this patent covers all methods apparatus and articles of manufacture fairly falling within the scope of the appended claims either literally or under the doctrine of equivalents.

