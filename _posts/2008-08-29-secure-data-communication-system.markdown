---

title: Secure data communication system
abstract: The description relates to a system designed to protect data exchange involved with the use of cloud computing infrastructures by services and individuals. The system is designed so that a cloud resource and its middleware access points are protected in transferring data among themselves and end users using a system designed to spread the data and then reassemble the data.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08850180&OS=08850180&RS=08850180
owner: Empire Technology Development, LLC
number: 08850180
owner_city: Wilmington
owner_country: US
publication_date: 20080829
---
This disclosure relates to the area of network computing security and more specifically to the area of secure transmission and storage of data over a network.

It is well known that ways to secure the transfer of electronic data are a priority for businesses governments organizations educational institutions and individuals. In today s online computing and data environment the security of data is under constant assault from hackers and system interlopers. Technologists and hackers are equally knowledgeable about many schemes for data security such as encryption and filtering.

With access to supercomputing network resources opening up combined with the potential powerful data emanating from the supercomputing systems it is more imperative than ever to create systems that protect both the data generated from those systems as well as the systems themselves from attack.

Unfortunately an adequate solution that addresses these issues has eluded those skilled in the art until now.

In accordance with one aspect a solution that handles data between middleware servers and clients to prevent data from being accessed by an unauthorized user is disclosed. The use of a supercomputing or cloud computing resource is employed with middleware to handle data transferred to and from the middleware. The data transactions between the middleware the supercomputer may also be handled to protect the data in a similar fashion to that in which the data is handled between the middleware and the end user. As the data is received from the Cloud computing resource the middleware organizes the data with orderly efficient packaging of responses securely delivered to end user devices.

The foregoing is a summary and thus contains by necessity simplifications generalization and omissions of detail consequently those skilled in the art will appreciate that the summary is illustrative only and is not intended to be in any way limiting. Other aspects features and advantages of the devices and or processes and or other subject matter described herein will become apparent in the teachings set forth herein. The summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used as an aid in determining the scope of the claimed subject matter.

It should be noted that the embodiments illustrated in these figures are representative only and are not exclusive of all the embodiments that may implement a secure data transmission system using a cloud computing infrastructure.

In the following detailed description reference is made to the accompanying drawings which form a part hereof. In the drawings similar symbols typically identify similar components unless context dictates otherwise. The illustrative embodiments described in the detailed description drawings and claims are not meant to be limiting. Other embodiments may be utilized and other changes may be made without departing from the spirit or scope of the subject matter presented here. It will be readily understood that the aspects of the present disclosure as generally described herein and illustrated in the Figures can be arranged substituted combined and designed in a wide variety of different configurations all of which are explicitly contemplated and make part of this disclosure.

This disclosure is drawn inter alia to methods apparatus computer programs and systems related to a secure data transmission system.

Implementations of packet storage transfer provide information from a single server break up the information into packets and then send the packets to different servers. The information can be reassembled using a software formula or recipe. The information recipe to reassemble using the system s custom algorithm that broke up the data may be used essentially in reverse to reassemble the information. This method allows for secure data storage with little knowledge by the storing component as to what the data may actually be until it is joined together by the program summoning and reassembling the data. The data servers and hard drives may be located all over the world. They are joined together by the storage application and the network itself.

A system is described that provides a secure mechanism for transmitting data between a client and a cloud computing infrastructure. Briefly described the embodiments secure the data by fragmenting the data and transmitting the fragmented data between the client and middleware servers. Certain preferred embodiments of one such system are illustrated in the figures and described below. Many other embodiments are also possible however time and space limitations prevent including an exhaustive list of those embodiments in one document. Accordingly other embodiments within the scope of the claims will become apparent to those skilled in the art from the teachings of this patent.

The cloud is described in greater detail below in conjunction with . Briefly described the cloud is a cluster computing infrastructure available over the network . The cloud includes multiple computing systems interconnected generally over a local area network to perform computing tasks collaboratively. The cloud offers vastly superior computing functionality over conventional computing devices. Frequently cloud computing is used to move the processing of certain applications off of many individual independent computing devices to a centralized processing location which simplifies the administration of those applications. In addition frequently the users of the many individual independent computing devices experience superior performance as the cloud offers access to an aggregate of computing power that is vastly superior to the local computing power of the individual independent computing devices.

The client is a computing device which a user may use to interact with or perform tasks using the cloud . The client is described in greater detail below in conjunction with . Briefly described the client may be any computing device either mobile or fixed that interacts with the cloud over the network . Several examples of the client include a desktop computer a laptop computer a smartphone or any other mobile device .

The middleware server is another computing system specially configured to administer at least certain data transfers between the client and the cloud . One particular implementation of the middleware server is described in greater detail below in conjunction with . Briefly described the middleware server includes one or more computing systems that handle security for data transmissions between the client and the cloud using the network .

Generally stated in operation data transferred from the client to the cloud is delivered to the middleware . A splitter component of the client divides the data into fragments according to certain security logic. Each of those fragments is then delivered to a different storage component of the middleware server such as a different file server. The several fragments are stored separately so that the complete set of data does not reside in one physical location at the middleware or in the cloud .

In reverse when the data is requested by the client the middleware causes each of the several storage components e.g. file servers to independently transmit their data fragments to the client where a joiner component on the client reconstructs the data for local use.

As hardware costs drop cluster computing technologies have become a viable option for carrying out complex systems by running several computers in parallel. The cluster generally includes several computers working simultaneously to act as a single unit automatically distributing tasks between the constituent nodes e.g. computing devices . Cloud computing architectures are often used to solve particularly intensive computational problems. Due to their high cost of construction and operation these systems have been relatively inaccessible to consumers until now. In addition a significant limiting factor has been that effective use of computer clusters often requires special software narrowly tailored to the specific problem at hand.

As the associated costs drop computers arranged in a cloud architecture can also function as servers for web applications replacing the widespread but relatively inefficient client server architecture. Typical applications include e mail remote databases gaming and advertising. Alternatively the cloud architecture allows for the performance of tasks on remote servers and a subsequent transfer of the results to the client for presentation.

The middleware server is also associated with disparate storage devices e.g. data store A data store B data store C and data store D on which information can be stored. The several storage devices are located on physically disparate computing systems to achieve data security.

The middleware server includes a splitter engine which is an executable component configured to split data into fragments for separate transmission. The splitter uses logic that defines the manner in which the data should be split. The logic includes rules that are applied by the splitter to specify how the data is to be split and on which storage device e.g. data store A D each fragment of data is to be stored. Log files are used to keep track of how the data was split and on which storage device the fragments were in fact stored.

For example and referring briefly to data in the form of a computer file or any other manner of data structure is illustrated as being composed of a series of packets of information. These packets may take any one or more of various forms such as bytes of information streams of data or any other manner of data description. In its useful state the file exists as one logical unit. However the splitter is configured to split the file into fragments e.g. file fragments for separate transmission to disparate data storage devices.

Although illustrated as contiguous data packets in light of the present disclosure those skilled in the art will appreciate that files physically stored on a storage medium often become fragmented on the same physical disk as part of normal file system operation. The file splitting discussed here does not refer to ordinary file system fragmentation but rather a deliberate splitting of the file into fragments for the purpose of transmitting the data to the cloud although it is possible in some embodiments that the deliberate splitting of the file could be based on the arbitrary fragmentation due to the file system.

Returning now to the logic identifies the particular scheme or recipe for splitting data. In one embodiment the split may be arbitrary such as by simply splitting the data into a predetermined number of fragments. In another embodiment the logic may implement a complex set of rules for splitting the data. For instance if the data is a computer file such as a word processing file the logic may establish that the file is split according to a given number of paragraphs or words per fragment. In light of the present disclosure these and other embodiments will become apparent to those skilled in the art.

A joiner is a component used to reconstruct the data by retrieving each of the fragments and reassembling the fragments in the appropriate manner. The joiner also uses the logic and the log files to retrieve and reconstruct the data. In operation the joiner retrieves the several data fragments from the locations identified in the log files and applies the logic to reassemble the fragments into the original data.

A client side joiner operates in like manner as the middleware joiner . The joiner reassembles data such as data files using the logic . The client side splitter and joiner act in concert with the middleware splitter and joiner to split and join the data in a manner that avoids data loss.

An application and or services are resident on the client and perform tasks. In this example the application and or the services represent the components that create and operate on the data that is exchanged with the cloud . Examples of the application include an e mail client a word processor a spreadsheet program a database program and the like. Examples of the services include an e mail server architecture a distributed file system a security application and the like. Many other examples will be apparent to those skilled in the art.

The client further includes a local data store for storing data on the client . In one example the local data store may be a hard disk drive optical disc drive flash memory or the like.

In this particular implementation configuring the data operation may be accomplished in at least two different ways to protect the data from man in the middle attacks. The first way sub operation is by physically sending the data package in packetized form by breaking the data from the whole file into multiple fragments. Alternatively the data may simply be divided in half sub operation without the use of dividing the data further into fragments.

At operation the configured data is transmitted to the client device s . In this particular embodiment the configured data is transmitted using more than a single data transmission server. In one implementation each data fragment is transmitted using a different data transmission server. For example if the data were divided in half then two data transmission servers could be used with each data transmission server transmitting a single fragment of the data. In other implementations more than a single data fragment may be transmitted using the same data transmission server. For example if the data were divided into thousands of fragments it may be impractical to attempt to deliver the fragments on a one to one basis. In such a case multiple data transmission servers may be used with each data transmission server transmitting multiple data fragments.

In this particular implementation each of the data transmission servers is configured with a unique IP address to eliminate the possibility of an eavesdropper identifying the multiple fragments by correlating the transmissions from multiple related servers. Alternatively proxy servers may be used to ensure that the data is delivered from unique IP addresses.

The joiner reviews logic operation that describes an appropriate method for reassembling the received data. In certain implementations the data may be received as a file that has been divided in some manner that is particular to the file format. For example a word processing document may be divided by paragraphs. Each program and or file type could have its own unique logic for dividing and reassembling the data. In other implementations the data may be divided into fragments that are unrelated to the type of file format. The logic describes the appropriate reconstruction algorithm or method.

The joiner then reassembles the data fragments operation based on the particular logic that applies to that data. Again as just discussed the data could be divided in some manner consistent with the underlying data format or it could be divided in some arbitrary or pseudo arbitrary fashion that can be described with a logic or scheme.

Finally the joiner stores the reassembled data operation . In one particular implementation the joiner stores the data locally in its reassembled form for use by the client device. In another implementation the joiner may store the data in a remote location.

Additional advantages and modifications will readily occur to those skilled in the art. Therefore the invention in its broader aspects is not limited to the specific details and representative embodiments shown and described herein.

Accordingly various modifications may be made without departing from the spirit or scope of the general inventive concept as defined by the appended claims and their equivalents.

There is little distinction left between hardware and software implementations of aspects of systems the use of hardware or software is generally but not always in that in certain contexts the choice between hardware and software can become significant a design choice representing cost vs. efficiency tradeoffs. There are various vehicles by which processes and or systems and or other technologies described herein can be effected e.g. hardware software and or firmware and that the preferred vehicle will vary with the context in which the processes and or systems and or other technologies are deployed. For example if an implementer determines that speed and accuracy are paramount the implementer may opt for a mainly hardware and or firmware vehicle if flexibility is paramount the implementer may opt for a mainly software implementation or yet again alternatively the implementer may opt for some combination of hardware software and or firmware.

The foregoing detailed description has set forth various embodiments of the devices and or processes via the use of block diagrams flowcharts and or examples. Insofar as such block diagrams flowcharts and or examples contain one or more functions and or operations it will be understood by those within the art that each function and or operation within such block diagrams flowcharts or examples can be implemented individually and or collectively by a wide range of hardware software firmware or virtually any combination thereof. In one embodiment several portions of the subject matter described herein may be implemented via Application Specific Integrated Circuits ASICs Field Programmable Gate Arrays FPGAs digital signal processors DSPs or other integrated formats. However those skilled in the art will recognize that some aspects of the embodiments disclosed herein in whole or in part can be equivalently implemented in integrated circuits as one or more computer programs running on one or more computers e.g. as one or more programs running on one or more computer systems as one or more programs running on one or more processors e.g. as one or more programs running on one or more microprocessors as firmware or as virtually any combination thereof and that designing the circuitry and or writing the code for the software and or firmware would be well within the skill of one of skill in the art in light of this disclosure. In addition those skilled in the art will appreciate that the mechanisms of the subject matter described herein are capable of being distributed as a program product in a variety of forms and that an illustrative embodiment of the subject matter described herein applies regardless of the particular type of signal bearing medium used to actually carry out the distribution. Examples of a signal bearing medium include but are not limited to the following a recordable type medium such as a floppy disk a hard disk drive a Compact Disc CD a Digital Video Disk DVD a digital tape a computer memory etc. and a transmission type medium such as a digital and or an analog communication medium e.g. a fiber optic cable a waveguide a wired communications link a wireless communication link etc. .

Those skilled in the art will recognize that it is common within the art to describe devices and or processes in the fashion set forth herein and thereafter use engineering practices to integrate such described devices and or processes into data processing systems. That is at least a portion of the devices and or processes described herein can be integrated into a data processing system via a reasonable amount of experimentation. Those having skill in the art will recognize that a typical data processing system generally includes one or more of a system unit housing a video display device a memory such as volatile and non volatile memory processors such as microprocessors and digital signal processors computational entities such as operating systems drivers graphical user interfaces and applications programs one or more interaction devices such as a touch pad or screen and or control systems including feedback loops and control motors e.g. feedback for sensing position and or velocity control motors for moving and or adjusting components and or quantities . A typical data processing system may be implemented utilizing any suitable commercially available components such as those typically found in data computing communication and or network computing communication systems.

The herein described subject matter sometimes illustrates different components contained within or connected with different other components. It is to be understood that such depicted architectures are merely exemplary and that in fact many other architectures can be implemented which achieve the same functionality. In a conceptual sense any arrangement of components to achieve the same functionality is effectively associated such that the desired functionality is achieved. Hence any two components herein combined to achieve a particular functionality can be seen as associated with each other such that the desired functionality is achieved irrespective of architectures or intermedial components. Likewise any two components so associated can also be viewed as being operably connected or operably coupled to each other to achieve the desired functionality and any two components capable of being so associated can also be viewed as being operably couplable to each other to achieve the desired functionality. Specific examples of operably couplable include but are not limited to physically mateable and or physically interacting components and or wirelessly interactable and or wirelessly interacting components and or logically interacting and or logically interactable components.

With respect to the use of substantially any plural and or singular terms herein those having skill in the art can translate from the plural to the singular and or from the singular to the plural as is appropriate to the context and or application. The various singular plural permutations may be expressly set forth herein for sake of clarity.

It will be understood by those within the art that in general terms used herein and especially in the appended claims e.g. bodies of the appended claims are generally intended as open terms e.g. the term including should be interpreted as including but not limited to the term having should be interpreted as having at least the term includes should be interpreted as includes but is not limited to etc. . It will be further understood by those within the art that if a specific number of an introduced claim recitation is intended such an intent will be explicitly recited in the claim and in the absence of such recitation no such intent is present. For example as an aid to understanding the following appended claims may contain usage of the introductory phrases at least one and one or more to introduce claim recitations. However the use of such phrases should not be construed to imply that the introduction of a claim recitation by the indefinite articles a or an limits any particular claim containing such introduced claim recitation to inventions containing only one such recitation even when the same claim includes the introductory phrases one or more or at least one and indefinite articles such as a or an e.g. a and or an should typically be interpreted to mean at least one or one or more the same holds true for the use of definite articles used to introduce claim recitations. In addition even if a specific number of an introduced claim recitation is explicitly recited those skilled in the art will recognize that such recitation should typically be interpreted to mean at least the recited number e.g. the bare recitation of two recitations without other modifiers typically means at least two recitations or two or more recitations . Furthermore in those instances where a convention analogous to at least one of A B and C etc. is used in general such a construction is intended in the sense one having skill in the art would understand the convention e.g. a system having at least one of A B and C would include but not be limited to systems that have A alone B alone C alone A and B together A and C together B and C together and or A B and C together etc. . In those instances where a convention analogous to at least one of A B or C etc. is used in general such a construction is intended in the sense one having skill in the art would understand the convention e.g. a system having at least one of A B or C would include but not be limited to systems that have A alone B alone C alone A and B together A and C together B and C together and or A B and C together etc. . It will be further understood by those within the art that virtually any disjunctive word and or phrase presenting two or more alternative terms whether in the description claims or drawings should be understood to contemplate the possibilities of including one of the terms either of the terms or both terms. For example the phrase A or B will be understood to include the possibilities of A or B or A and B. 

While various embodiments have been disclosed herein other aspects and embodiments will be apparent to those skilled in art. The various sports and embodiments disclosed herein are for purposes of illustration and are not intended to be limiting with the true scope and spirit being indicated by the following claims.

