---

title: Management of email threads
abstract: A method and system are provided for managing email threads. The method includes receiving a plurality of separate email threads. The method further includes generating associations between at least two email threads of the plurality of separate email threads. The method further includes displaying the associations of the at least two email threads. As a result, users can conveniently view the associated email threads and perform operations on particular email threads.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07930356&OS=07930356&RS=07930356
owner: International Business Machines Corporation
number: 07930356
owner_city: Armonk
owner_country: US
publication_date: 20080515
---
Email applications have become a dominant means of communication over the years. Email has been increasingly pervasive and is commonly used among users within business. Email threads are used to help organize emails by relating an initial email to a series of reply emails resulting from the initial email. Email threads also provide context to a user by enabling the user to view the initial email and the subsequent chain of reply emails.

One problem with email thread is that oftentimes there can be multiple email threads on a particular topic at different times or on different mailing lists. For example a topic on how to get a simple Java Persistence Application Programming Interface JPA sample might be discussed in one month in one email thread but might again be discussed at a later month in a separate email thread. In another example a sender might initiate two separate email threads on a particular topic at the same time for example where there is a vote email thread for project A 1.0 and a separate discussion email thread for project A 1.0. Two or more email threads such as these are often closely related but hard to locate without performing a search on a user s mailbox. Search can take a significant amount of time if a given user has a mailbox with many emails especially when the user subscribes to one or more high traffic mailing lists.

Another problem with email threads is that oftentimes a user might send an email with a discussion topic to a few recipients and the user might later receive multiple open replies and some private replies. When the user replies the user can reply only to one particular email thread with no indication of the user has also replied some other email threads that the user has received.

A method and system are provided for managing email threads. The method includes receiving a plurality of separate email threads. The method further includes generating associations between at least two email threads of the plurality of separate email threads. The method further includes displaying the associations of the at least two email threads. As a result users can conveniently view the associated email threads and perform operations on particular email threads.

The present invention relates to a method and system for managing email threads. The following description is presented to enable one of ordinary skill in the art to make and use the invention and is provided in the context of a patent application and its requirements. Various modifications to the preferred embodiments and the generic principles and features described herein will be readily apparent to those skilled in the art. Thus the present invention is not intended to be limited to the embodiments shown but is to be accorded the widest scope consistent with the principles and features described herein.

The exemplary embodiment of the present invention provides a method and system for managing email threads. The method includes receiving a plurality of separate email threads. Associations are generated between the separate email threads where the email threads that share a common topic. For example the email threads may discuss the same project. The email threads are associated by tagging each of the email threads with the same tag. The method further includes displaying emails from the associated email threads and publishing the associations to a plurality of users. As a result users can conveniently view the associated email threads and perform operations on particular email threads e.g. delete move etc. .

Although the present invention disclosed herein is described in the context of email systems the present invention may apply to other types of communication systems and still remain within the spirit and scope of the present invention.

In one embodiment the separate email threads are generated from the initial emails. In one embodiment separate email threads are separate in that they may involve different sets or combinations of users. For example the email thread application may generate an email thread A that is derived from the initial email entitled Project Release Final Discussion and which includes reply emails A A from one combination of users e.g. the sender and recipient . The email thread application may also generate separate email thread B that is derived from the same initial email and which includes reply emails B B from a different combination of users e.g. the sender and recipient . Each of these email threads may also include reply emails from new recipients who subsequently join the discussion email thread. Because these email threads are separate not every user of these two email threads will receive both email threads. As described in more detail below every user of these two email threads will receive both email threads after they are associated.

Similarly the email thread application may generate one or more other separate email threads from other initial emails. For example the email thread application may generate one or more email threads C and D that are derived from the initial email entitled Project Early Phase Planning Discussion and which include reply emails C C and D D.

According to an exemplary embodiment the email thread application performs functions for generating associations between separate email threads block . For example in one embodiment the email thread application allows a user to manually select among existing email threads or among emails within email threads and manually tag the selected email threads and or emails. For example as the email thread application displays email threads the user may select one or more of the email threads or emails e.g. using the mouse and pointer . The email thread application may then display to the user a dialog box or window in which the user can enter text for a particular tag name or identification e.g. Project Release Final Discussion or Patent XYZ etc. . The user may then accept the tag name e.g. by selecting an OK or Accept button . Upon receiving the email thread selections and the tag name the email thread application then tags the selected email threads. In one embodiment the user who tags a given email thread may be the originator of the email thread or a subsequent recipient of the email thread. In one embodiment if the user later selects another separate email thread and tags the email thread the same tag name as an already existing group of associated email threads that newly tagged email thread will then be associated with that already existing group. In one embodiment if the user selects and tags a particular email the thread application may automatically tag any email thread that includes the email.

In one embodiment the email thread application may automatically determine what email threads are associated by their common tag. In one embodiment when any new email thread that is not currently associated with a given email thread yet which has or receives content e.g. key words that match the tag e.g. Patent XYZ the email thread application may automatically associate the new email thread by tagging it with the same tag e.g. Patent XYZ . As such if a user views a given email thread the user will view any newly associated email thread. In one embodiment the email thread application may automatically associate all email threads that are derived from the same initial email e.g. associating email threads A and B .

In one embodiment the email thread application may associate separate email threads that are derived from different initial emails. Such separate email threads may be created by the same user at different times or created by different users. In one embodiment the email thread application associates different email threads based on their content being related to the same topic same project etc. For example the email thread application may associate the email threads A B C and D where these email threads are related to the same project.

In one embodiment a user may provide to the email thread application a topic e.g. invention disclosure XYZ . As such the email thread application uses the topic which may be key words as a tag in order to associate email threads having emails that contain the key words. In one embodiment the email thread application may identify the key words in the subject field of a given email or in other locations e.g. in the body of the email .

In one embodiment the email thread application may generate a given association between the email threads after the email thread application creates a second email thread and before a given sender sends the new email thread. Alternatively the email thread application may generate a given association between the email threads after the email thread application creates the second email thread and after a given recipient receives the new email thread.

The email thread application may then displays the associations of the associated email threads . As shown in displaying the associations of the associated email threads enables the user to conveniently view all of the emails related to a given topic or project. As shows the emails e.g. replies A A for a given thread e.g. email thread A are displayed as a group. Also the email threads e.g. email threads A and B related to the same initial email e.g. initial email Project Release Final Discussion are displayed as a group. Also the emails of the associated email threads e.g. emails A B C and D are displayed as a group.

The email thread application may publish the generated associations to each of the email thread recipients which may include the one or more users who initiated the associated email threads original recipients of the initial email e.g. subscribers on an email distribution list or otherwise and new recipients who are subsequently copied or forwarded an email from one of the email threads. In one embodiment the publication of the associations includes a reference to the associated emails and the common tag. In one embodiment the reference and tag may be included in metadata that is associated with the email thread. In one embodiment the tag may be visible to the user. In another embodiment the tag may be hidden from the user.

In one embodiment after the user tags a particular email thread the user may then synchronize the user s local emails with the user s email stored at the email server. Also the email thread application may automatically synchronize the local emails with those stored at the email server when the user checks for new emails from the email server. In one embodiment the email thread application may store the association and tag with the email thread on the email server and also present the association and tag to other users e.g. recipients of the associated email strings . When these users refresh their emails locally their local email clients tag the same email threads with the same tag. As such users will see the same tags and email thread associations as the users who created the associations. In one embodiment a given user may modify or update the tags if desired. As such the updated tags may be synchronized with the tags by the email clients of the other users.

In one embodiment the publication of the associations for a given set of associated email threads may be granted to a select set of users. For example instead sending the publication to all participates of the email threads the email thread application may send the publication only to users who are owners or contributors to a given project associated with the email threads.

As shows the email thread application provides a thread view that displays in the same window the emails of a current email thread as well as emails of other associated threads. The association of the email threads and publication of the associations are beneficial in that the recipients of the email threads may view a given email e.g. in a current email thread and simultaneously locate and view all other emails in the same email thread or view all other emails in other associated email threads.

In one embodiment the email thread application enables a user to select particular email threads that have been associated e.g. tagged and then perform an operation on the non selected email threads based on a command received from the user. For example the email thread application may enable the user to delete the emails of the non selected email threads from a particular email folder or move those emails to another email folder. Conversely the email thread application enables the user to select particular email threads that have been associated and then perform an operation on the selected email threads based on a command received from the user e.g. delete or move all of the emails of the selected email threads .

In one embodiment one of the emails is the primary reply target and one or more other emails may be reply targets from the same email thread as the primary reply target or from any other associated email threads different from that of the primary reply target. As such the user can author a single reply email and send the same reply email to multiple reply targets simultaneously. For example as shows a user can select reply targets e.g. emails A and B and reply both of them at the same time with the same reply email AB. After the reply email AB is sent the email thread application displays the reply email in all of the selected email threads A and B.

In one embodiment if a user replies to a private email and to an email in an open discussion using the same reply email the email thread application displays a text box at the top of the reply email to the private email sender. The text box identifies the sender of that reply email and also indicates that that sender also replied using the same reply email to another email. In one embodiment the email thread application also identifies the other email being responded to e.g. by title and the sender of that email.

A system of method for managing email threads in an email system has been disclosed. The invention can take the form of an entirely hardware embodiment an entirely software embodiment or an embodiment containing both hardware and software elements. In a preferred embodiment the invention is implemented in software which includes but is not limited to firmware resident software microcode etc.

Furthermore the invention can take the form of a computer program product accessible from a computer usable or computer readable medium providing program code for use by or in connection with a computer or any instruction execution system. For the purposes of this description a computer usable or computer readable medium can be any apparatus that can contain store communicate propagate or transport the program for use by or in connection with the instruction execution system apparatus or device.

The medium can be an electronic magnetic optical electromagnetic infrared or semiconductor system or apparatus or device or a propagation medium. Examples of a computer readable medium include a semiconductor or solid state memory magnetic tape a removable computer diskette a random access memory RAM a read only memory ROM a rigid magnetic disk and an optical disk. Current examples of optical disks include compact disk read only memory CD ROM compact disk read write CD R W and DVD.

A data processing system suitable for storing and or executing program code will include at least one processor coupled directly or indirectly to memory elements through a system bus. The memory elements can include local memory employed during actual execution of the program code bulk storage and cache memories which provide temporary storage of at least some program code in order to reduce the number of times code must be retrieved from bulk storage during execution.

Input output or I O devices including but not limited to keyboards displays pointing devices etc. can be coupled to the system either directly or through intervening I O controllers.

Network adapters may also be coupled to the system to enable the data processing system to become coupled to other data processing systems or remote printers or storage devices through intervening private or public networks. Modems cable modem and Ethernet cards are just a few of the currently available types of network adapters.

The present invention has been described in accordance with the embodiments shown and one of ordinary skill in the art will readily recognize that there could be variations to the embodiments and any variations would be within the spirit scope of the present invention. Accordingly many modifications may be made by one of ordinary skill in the art without departing from the spirit and scope of the appended claims.

