---

title: GUI based web search
abstract: An exemplary computer implemented graphics-based Web search system includes a search input control and a results presentation control where the search input control is configured to receive user input to establish a relationship between a query and one or more information tags associated with search results provided by a search engine in response to the query and wherein the results presentation control is configured to re-order the search results in response to the relationship. Such a system allows a user to define and refine search intent and enhance the user's search experience. Various other exemplary systems, methods, devices, etc. are also disclosed.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08949215&OS=08949215&RS=08949215
owner: Microsoft Corporation
number: 08949215
owner_city: Redmond
owner_country: US
publication_date: 20080227
---
This non provisional patent application claims the benefit of and priority to U.S. Provisional Patent Application 60 892 175 entitled GUI based Web Search filed Feb. 28 2007 which is incorporated by reference herein in its entirety.

Search engine technology has become quite popular to help users seek information available on the Web. Most users have been trained to become accustomed to the traditional search interface where a user submits a query to an input textbox and a search engine returns a group of Web pages organized in a list view. Given the list view the user typically needs to navigate through the returned list of Web pages to find desired information.

The aforementioned conventional search experience has two major drawbacks. First it is not easy for Web users to specify their search intentions by term combination. Sometimes a user can not generate a query correctly even though the user is clear about what to search. Also even if a user is an expert in formulating search queries the user may refuse to submit complex queries because most search engine users are lazy. The length of most search queries falls in the range of 1.66 words. Moreover the short queries often lead to a huge amount of search results since the system is difficult to grasp the user s true intention. Hence the user has to refine the queries by adding deleting or modifying query terms many times until they get the information they need. The second drawback of conventional search engine design lies in the presentation of search results. The typical solution is to organize search results into a long list where the list is divided into many result pages. Although various search algorithms have been applied to rank Web pages by their relevance scores it is quite often that the desired page is not ranked top in the result list. Thus it can be quite time consuming for a user to navigate through the search results one by one and page by page. Indeed a study shows that 62 of search engine users only click on the results contained in the first page. Thus a better user interface is desired to search and or to present search results.

An exemplary computer implemented graphics based Web search system includes a search input control and a results presentation control where the search input control is configured to receive user input to establish a relationship between a query and one or more information tags associated with search results provided by a search engine in response to the query and wherein the results presentation control is configured to re order the search results in response to the relationship. Such a system allows a user to define and refine search intent and enhance the user s search experience. Various other exemplary systems methods devices etc. are also disclosed.

As discussed herein a GUI based Web Search solution denoted as GWS helps Web users easily express search intentions and identify interested Web pages quickly. While the GWS includes features specific to Web searches the technology can be applied to other types of searches. For example various features may be applied to data base searches or other information searches.

As described in more detail below two exemplary GWS controls overcome some of the challenges faced by traditional Web search technologies. One control is referred to as Smart Input control SI . SI is used by search engine users to specify desired information. In various examples SI control is shown on the top of a user interface. Another control is referred to as Result Presentation control RP . In various examples RP control is used to present search results and can be shown at the bottom of a GWS interface.

Some approaches to improve conventional searches include query suggestion and result clustering. In query suggestion a search engine automatically suggests some candidate queries for end users. However it is often hard for a user to predict whether a new selected query will return good results or not. Also while it is common that user intention is related to several suggested queries most search engines only allow users to select one of the suggested queries. As a result for such limiting reasons query suggestion has not been proven very successful.

Another popular method is search result clustering which involves clustering search results into semantically related groups where each group corresponds with a topic. When using this technique Web users need to first select the cluster of interest and then navigate through the pages of that cluster to find the desired information. If the pages are not returned by original query it is typically impossible for a user to find it in any clusters.

An exemplary GWS method for a Web search can involve an iterative process of manipulating the SI control in the user input portion and observing the output of the RP control in the results portion . For example after the SI control receives an initial query submitted by a user the GWS can redirect the query to a commercial search engine. Information tags can be generated from the search results and organized along the SI control graphic which is shown in a half moon or crescent configuration in the user input portion . Top search results can be displayed using the RP control in a results portion of the GUI.

After browsing the tags to have some idea about the search scopes a user can drag the initial query term or graphic referred to herein as a query graphic which may be simply a text item a simple object or a complex object along a plurality of information tags displayed by the SI control in the user input portion to thereby refine the user s search intention. During the dragging of the query graphic the RP control dynamically updates the results displayed in the results portion to reflect the changes in the user s search intention. The results displayed in the results portion can provide feedback to the user whereby the user may further refine her intention or search. Further based on the results or results preview output by the RP control and displayed in the results portion a user will know whether she is operating the SI control correctly. If the RP results are closer to the desired information the user can drop the initial query and the GWS can issue a new query to the search engine which may be a conventional or other commercially available search engine.

As described herein an exemplary GWS can refine and issue a user s intention. In particular a graphic can be used to arrange information that allows a user to input information that an exemplary GWS can use to issue and refine user s intention intuitively and easily. Hence an exemplary GWS can provide for issuing and refining a user s intention.

The example shown in helps to describe how an exemplary GWS can operate. For example consider a user named Peter who wants to find some designers to help develop a project. In particular Peter would like to find a vender company capable of providing design services to design a graphic design a logo design etc.

Given Peter s search as an example a description follows to illustrate how a user can interact with the two GWS controls to find desired information. First Peter enters a keyword Designer as shown in user input portion . In turn the GWS system automatically generates a set of key phrases product design logo design etc. and organizes the key phrases into a continuous list. The GWS system then renders the list items around a half moon GUI control. The generated phrases referred to as information tags can give users an overview of the search scope and guide them to refine their search intentions. When Peter finds some information tags e.g. logo design graphic design firm graphic design service that he interest him he can then drag the initial query Designer i.e. the query graphic in a manner that establishes a relationship with one or more of these tags see input portions and . As Peter drags the query graphic around the information tags the SI control causes one or more of the information tags to be highlighted and causes the RP control to re rank the results and display them in the display portion see e.g. the display portion of .

Through use of the SI and RP controls if Peter feels that the results are a little closer to his intention he can drop the query at that point in the GUI of the user input portion . Once dropped the GWS system can generate a new combination query based on his intention and the information tags. The new query can be input to the search engine or engines and search results displayed using the RP control. Peter can continue his drag and drop actions until he finds the desired information. As explained further below an exemplary GWS system can also provide a GUI history to facilitate user navigation to any intermediate step to refine the search e.g. within user or system defined limitations .

With respect to information tags these can be generally considered a set of salient phrases that can be extracted from pages returned by a search engine in response to an initial query. The information tags generally summarize the contents contained in the search results. Information tags can be organized graphically for example along a half moon graphic e.g. one by one in continuous form .

Concepts corresponding to the information tags are intended to change along the half moon usually in a gradual and logical manner. For example the closer two tags are the more similar they are in concept and vice versa. As already mentioned a user can drag an initial query e.g. a query graphic along a series of information tags to refine the user s search intention.

Where display space is limited with respect to the number of information tags e.g. if the tag number N is larger than 6 then the first X number of tags may be displayed while the remaining tags N X may be displayed in the upper tail of the half moon and represented by a small icon or other graphic e.g. a few stars . A user may investigate these tags by positioning a cursor on the tail of the half moon where in turn an information tag list appears e.g. optionally a scrollable list to show the hidden tags. For example if a mouse cursor is hovered on the upper tail the tags contained in this tail will be moved out and those already on the half moon will be moved into the lower tail one by one. This configuration enables a user to interact with all possible information tags to refine their search intention.

With respect to intention generation when a user drags the query graphic within a semi circular space defined by the inner semi circle of the half moon a predetermined number of information tags e.g. the three most adjacent information tags can be selected and used to determine search intention. As shown in a series of concentric semi circles exist whereby each semi circle can select a certain number of information tags.

By positioning a query graphic with respect to the displayed tags a user can select for example three tags to thereby input intention information see of . Similarly when the query is dragged into the next semi circle two adjacent tags can be selected for specifying user intention while seeking desired information which means that the user wants to find logo designers and graphic design firm see of . When it is dragged to the inner semi circle of the half moon or within the half moon a single adjacent tag may be selected. For example in the user input portion of the user inputs the intention of finding a logo designer s .

As described herein an exemplary method includes receiving search results responsive to a search query based at least in part on the search results generating information tags for graphical display adjacent to a control graphic configured to receive user input to express a user s search intent with respect to one or more of the information tags receiving user input via the control graphic and based at least in part on the received user input ranking the search results.

As described herein an exemplary system includes a search input control that includes a mechanism for establishing a relationship between a query and a number of information tags. For example such a mechanism may rely on a distance between a query graphic and at least one of the information tags. As shown in various examples for a distance based mechanism a greater distance establishes a relationship between the query and a greater number of the information tags and a lesser distance establishes a relationship between the query and a lesser number of the information tags. In other words a distance can be used to express a user s search intent as being related to a particular number of graphically displayed information tags.

While various examples are shown as black and white line drawings an exemplary GWS may include mechanisms that adjust or use color shading font size etc. For example an exemplary method can include adjusting one or more display characteristics of one or more information tags in response to the receiving user input e.g. movement of a user cursor associated with an SI control . Such a mechanism may adjust display color of one or more of the information tags. In such a manner color or other characteristics may indicate to a user how the information tags will be weighted for example in ranking the search results. Hence red may indicate heavy weighting and blue may indicate light or no weighting.

As already mentioned a RP control can provide for dynamic result preview. For example when a user drags and drops a query graphic along a SI control graphic to refine the search intentions the corresponding search results can be dynamically updated accordingly for a user s preview. Thus a user can have some ideas about whether he is closer to the desired information or is further away from it. This feature has advantages over query suggestion click and look methods. Also the drag and drop and result preview features facilitates user review by allowing a user to quickly explore the possible search scopes. Thus the SI and RP controls can help avoid the need to navigate through a long result list as typically required by conventional search engines and most search result clustering systems.

With respect to history management an exemplary GWS system allows storage of prior inputs and optionally associated results. Such a feature allows a user to easily go back to an intermediate step for the purpose of refining search intention. Further such a feature is useful in the case where a user loses his way during the search activities e.g. interrupted by a phone call lack of concentration distracted by a tangential thought etc. .

The exemplary method commences in an initial search results block for example where a search engine retrieves a list of Web pages in response to a user inputting a term terms a phrase etc. In this example the initial query is labeled oq . The method continues in a generation block that generates information tags based on the search results where the information tags are labeled nt nt etc. A rendering block renders the information tags for example in the form of a continuous list suitable for display using a SI control graphic such as the half moon of .

Once the method displays one or more of the information tags the user can input further information regarding intent. Such information is then used in a generation block to generate new information tags nt nt etc. . The new information tags are used in a reformulation block that reformulates a search query. Various techniques can be used to formulate a new search query and the block shows a particular equation or criterion for such a formulation. According to the method once a new search query has been formulated a search block causes a search engine s to perform a search using the reformulated search query. Hence a user can improve search results in an effort to find desired information.

 2 At the beginning the information tags are extracted from the search results returned in the first step. After the users finish refinement of their information needs and conduct the dropping operation both users preference and the search results will be integrated for generating new information tags.

 3 Rendering information tags to a continuous list. The purpose of this step is to organize the information tags to smoothly change in concepts. When users hover the mouse cursor over the SI control the search scope will also gradually change accordingly. This is very feasible for users to refine their search intention 

 4 When user drops the query we assume results previewed on RP control are more relevant to user s search intention than those displayed in the previous preview. These results are used as feedback information for generating new information tags 

 5 When user drops the mouse cursor the search query will be reformulated and sent to general search engine to get new results. Suppose the original query is oq the terms contained in the selected information tags are nt nt . . . ntn then the new query is constructed according to a formula or criterion or criteria and

In an exemplary GWS system various algorithms can be used to help generate information tags. Such algorithms may extract and rank salient phrases from a group of documents returned by a search engine. Each salient phrase may correspond to a cluster of documents and the phrase may be used as a cluster name.

The exemplary method can automatically learn a regression model from human labeled training data for extracting salient phrases. As explained documents can be assigned to relevant salient phrases to form candidate clusters and the final clusters can be generated by merging these candidate clusters. Each document can belong to more than one cluster.

The static method does not consider the user feedback information. In other words in the method the clusters will not change no matter what user inputs. Hence shows a feedback algorithm where user feedback can be used particularly feedback on user intent.

Thus according to the feedback method of an algorithm may be used to integrate user feedback information with a user s search intention. Accordingly as discussed above results displayed using an RP control can be updated dynamically when a user drags an input query graphic associated with a SI control. For example once a user drops the query an exemplary GWS system assumes that the user identified more relevant information. At shown in the block two kinds of feedback can be obtained 1 the search results user is interested in and 2 the clusters used for re rank. In a subsequent run of information tag generation e.g. next iteration for each salient phrase s the GWS system can determine two similarities 1 the similarity between s and the top Y documents and 2 the similarity between s and one or more selected clusters. A final score may be calculated per block for example where the coefficients take on appropriate values e.g. 0.3 0.3 and 0.4 as determined through trials .

In the block similarity can be calculated by using a vector space model. For example the assumption may be that the salient score for each phrase is no longer determined only by the information in the result set. User feedback can also contribute to the selection of salient phrases especially where the top Z documents e.g. top 10 documents are implicitly confirmed by user s drop operation or other action .

An exemplary method uses a minimum spanning tree that differs from a conventional minimum spanning tree in that it is ensured that the degree of each node is no more than 2 in the final graph. Thus by such a technique a list whose adjacent nodes are similar in contents can be generated.

With respect to intention weighting an exemplary drag and drop operation enables a user to easily refine her search intention. As shown in an exemplary intention weighting algorithm can be used to help re rank current search results. According to the method a transform block transforms a search GUI space to a coordinate system if it is not already defined according to a suitable coordinate space. In the example of the search GUI may be transformed or mapped to a Cartesian coordinate space.

Once a coordinate system is established a calculation block calculates distances between the query e.g. query graphic and the selected information tags e.g. selected by manipulating the query graphic . Another calculation block calculates intention weights according to a suitable formula see e.g. equation of block . An assignment block then assigns a weight for each information tag to its corresponding cluster. A re ranking block then re ranks the search results e.g. the documents using a suitable formula see e.g. equation of block which uses the weights and original rank scores in a cluster. Of note a document in a search result can belong to more than one cluster.

After re ranking a new top 10 list of results may be displayed using a RP control. In such an example a user s experience is similar to browsing a book once a user finds some chapters of interest she can drop the query and drill down to read more. In this way a user can gradually approach what she expects to find.

As described herein an exemplary method e.g. implemented at least in part by a computing device includes displaying information tags generated from ranked search results responsive to a search query receiving drag information from a user dragging a graphic relative to the displayed information tags responsive to the drag information re ranking the search results receiving drop information from a user dropping the graphic and in response to the drop information reformulating the search query.

Various exemplary user interfaces are presented herein which include at least a half moon information tags along a half moon two half circles inside a half moon and a textbox in the center of an internal half circle.

The computing device shown in is only one example of a computer environment and is not intended to suggest any limitation as to the scope of use or functionality of the computer and network architectures. Neither should the computer environment be interpreted as having any dependency or requirement relating to any one or combination of components illustrated in the example computer environment. Various exemplary method mechanisms etc. may be implemented in part or in whole by a computing device or equipment in a computing environment.

With reference to one exemplary system for implementing an exemplary web search mechanism e.g. GUI etc. includes a computing device such as computing device . In a very basic configuration computing device typically includes at least one processing unit and system memory . Depending on the exact configuration and type of computing device system memory may be volatile such as RAM non volatile such as ROM flash memory etc. or some combination of the two. System memory typically includes an operating system one or more program modules and may include program data . This basic configuration is illustrated in by those components within dashed line .

The operating system may include a component based framework that supports components including properties and events objects inheritance polymorphism reflection and provides an object oriented component based application programming interface API such as that of the .NET Framework manufactured by Microsoft Corporation Redmond Wash.

Computing device may have additional features or functionality. For example computing device may also include additional data storage devices removable and or non removable such as for example magnetic disks optical disks or tape. Such additional storage is illustrated in by removable storage and non removable storage . Computer storage media may include volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. System memory removable storage and non removable storage are all examples of computer storage media. Thus computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by computing device . Any such computer storage media may be part of device . Computing device may also have input device s such as keyboard mouse pen voice input device touch input device etc. Output device s such as a display speakers printer etc. may also be included. These devices are well know in the art and need not be discussed at length here.

Computing device may also contain communication connections that allow the device to communicate with other computing devices such as over a network. Communication connection s is one example of communication media. Communication storage media is typically embodied by computer readable instructions data structures program modules etc. Other forms of communication media include wired media such as a wired network or direct wired connection and wireless media such as acoustic RF infrared and other wireless media.

Various modules and techniques may be described herein in the general context of computer executable instructions or processor executable instructions such as program modules executed by one or more computers or other devices. Generally program modules include routines programs objects components data structures etc. for performing particular tasks or implement particular abstract data types. These program modules and the like may be executed as native code or may be downloaded and executed such as in a virtual machine or other just in time compilation execution environment. Typically the functionality of the program modules may be combined or distributed as desired in various embodiments.

One skilled in the relevant art may recognize however that the techniques described herein may be practiced without one or more of the specific details or with other methods resources materials etc. In other instances well known structures resources or operations have not been shown or described in detail merely to avoid obscuring aspects of various exemplary techniques.

While various examples and applications have been illustrated and described it is to be understood that the techniques are not limited to the precise configuration and resources described above. Various modifications changes and variations apparent to those skilled in the art may be made in the arrangement operation and details of the methods and systems disclosed herein without departing from their practical scope.

