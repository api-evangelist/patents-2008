---

title: Operating system for a computing device with handheld and extended computing units
abstract: A handheld computing unit includes a processing module, a main memory interface coupled to main memory, a baseband processing module, an RF section, I/O interfaces, a bus structure, and a connection structure. The main memory includes an operating system section and a user section. The operating system section stores at least a portion of a remote mode operating system when in a remote mode and stores at least a portion of a docked mode operating system when in a docked mode. The docked mode operating system includes at least some of the remote mode operating system.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08151100&OS=08151100&RS=08151100
owner: Broadcom Corporation
number: 08151100
owner_city: Irvine
owner_country: US
publication_date: 20080206
---
BIOS FOR A COMPUTING DEVICE WITH HANDHELD AND EXTENDED COMPUTING UNITS having application Ser. No. 12 026 715 filed Feb. 6 2008 and

FILE STORAGE FOR A COMPUTING DEVICE WITH HANDHELD AND EXTENDED COMPUTING UNITS having application Ser. No. 12 026 748 filed Feb. 6 2008 now U.S. Pat. No. 7 895 365.

This invention relates generally to communication systems and more particularly to computing devices used in such communication systems.

Communication systems are known to support wireless and wire lined communications between wireless and or wire lined communication devices. Such communication systems range from national and or international cellular telephone systems to the Internet to point to point in home wireless or wired networks. The wireless and or wire lined communication devices may be personal computers laptop computers personal digital assistants PDA cellular telephones personal digital video players personal digital audio players global positioning system GPS receivers video game consoles entertainment devices etc.

Many of the communication devices include a similar basic architecture that being a processing core memory and peripheral devices. In general the memory stores operating instructions that the processing core uses to generate data which may also be stored in the memory. The peripheral devices allow a user of the communication device to direct the processing core as to which operating instructions to execute to enter data etc. and to see the resulting data. For example a personal computer includes a keyboard a mouse and a display which a user uses to cause the processing core to execute one or more of a plurality of applications.

While the various communication devices have a similar basic architecture they each have their own processing core memory and peripheral devices and provide distinctly different functions. For example a cellular telephone is designed to provide wireless voice and or data communications in accordance with one or more wireless communication standards e.g. IEEE 802.11 Bluetooth advanced mobile phone services AMPS digital AMPS global system for mobile communications GSM code division multiple access CDMA local multi point distribution systems LMDS multi channel multi point distribution systems MMDS radio frequency identification RFID Enhanced Data rates for GSM Evolution EDGE General Packet Radio Service GPRS and or variations thereof . As another example a personal digital audio player is designed to decompress a stored digital audio file and render the decompressed digital audio file audible.

Over the past few years integration of the some of the communication device functions into a single device has occurred. For example many cellular telephones now offer personal digital audio playback functions PDA functions and or GPS receiver functions. Typically to load one or more of these functions files or other applications onto a handheld communication device e.g. a cellular telephone a personal digital audio and or video player a PDA a GPS receiver the handheld communication device needs to be coupled to a personal computer or laptop computer. In this instance the desired application function and or file is first loaded on to the computer and then copied to the handheld communication device resulting in two copies of the application function and or file.

To facilitate such loading of the application function and or file in this manner the handheld communication device and the computer each require hardware and corresponding software to transfer the application function and or file from the computer to the handheld communication device. As such two copies of the corresponding software exist as well as having two hardware components one for the handheld device and the second for the computer . In addition to the redundancy of software timing issues different versions of the software incompatible hardware and a plethora of other reasons cause the transfer of the application function and or file to fail.

In addition to integration of some functions into a single handheld device handheld digital audio players may be docked into a speaker system to provide audible signals via the speakers as opposed to a headphone. Similarly a laptop computer may be docked to provide connection to a full size keyboard a separate monitor a printer and a mouse. In each of these docking systems the core architecture is not changed.

Therefore a need exists for a computing device that includes a handheld computing unit and an extended computing unit.

The present invention is directed to apparatus and methods of operation that are further described in the following Brief Description of the Drawings the Detailed Description of the Invention and the claims. Other features and advantages of the present invention will become apparent from the following detailed description of the invention made with reference to the accompanying drawings.

In general the handheld computing unit includes the primary processing module e.g. central processing unit the primary main memory and the primary hard disk memory for the computing device . In this manner the handheld computing unit functions as the core of a personal computer PC or laptop computer when it is docked to the extended computing unit and functions as a cellular telephone a GPS receiver a personal digital audio player a personal digital video player a personal digital assistant and or other handheld electronic device when it is not docked to the extended computing unit.

In addition when the handheld computing unit is docked to the extended computing unit files and or applications can be swapped therebetween. For example assume that the user of the computing device has created a presentation using presentation software and both reside in memory of the extended computing unit . The user may elect to transfer the presentation file and the presentation software to memory of the handheld computing unit . If the handheld computing unit has sufficient memory to store the presentation file and application then it is copied from the extended computing unit memory to the handheld computing unit memory. If there is not sufficient memory in the handheld computing unit the user may transfer an application and or file from the handheld computing unit memory to the extended computing unit memory to make room for the presentation file and application.

With the handheld computing unit including the primary components for the computing device there is only one copy of an application and or of a file to support PC functionality laptop functionality and a plurality of handheld device functionality e.g. TV digital audio video player cell phone PDA GPS receiver etc. . In addition since only one copy of an application and or of a file exists other than desired backups special software to transfer the applications and or files from a PC to a handheld device is no longer needed. As such the processing module main memory and I O interfaces of the handheld computing unit provide a single core architecture for a PC and or a laptop a cellular telephone a PDA a GPS receiver a personal digital audio player a personal digital video player etc.

As is also shown the extended computing unit is coupled to a monitor a keyboard a mouse and a printer . The extended computing unit may also be coupled to other devices not shown such as a trackball touch screen gaming devices e.g. joystick game pad game controller etc. an image scanner a webcam a microphone speakers and or a headset. In addition the extended computing unit may have a form factor similar to a personal computer and or a laptop computer. For example for in home or in office use having the extended computing unit with a form factor similar to a PC may be desirable. As another example for traveling users it may be more desirable to have a laptop form factor.

In this example the handheld computing unit is docked to the extended computer unit and function together to provide the computing device . The docking of the handheld computing unit to the extended computing unit encompasses one or more high speed connections between the units and . Such a high speed connection may be provided by an electrical connector by an RF connector an example is discussed with reference to by an electromagnetic connector an example is discussed with reference to and or a combination thereof. In this mode the handheld computing unit and the extended computing collectively function similarly to a personal computer and or laptop computer with a WLAN card and a cellular telephone card.

In this mode the handheld computing unit may transceive cellular RF communications e.g. voice and or data communications . Outgoing voice signals may originate at the VoIP phone as part of a VoIP communication or a microphone coupled to the extended computing unit . The outgoing voice signals are converted into digital signals that are subsequently converted to outbound RF signals. Inbound RF signals are converted into incoming digital audio signals and that may be provided to a sound card within the extended computing unit for presentation on speakers or provided to the VoIP phone via as part of a VoIP communication .

Outgoing data signals may originate at the mouse keyboard image scanner etc. coupled to the extended computing unit . The outgoing data signals are converted into digital signals that are subsequently converted to outbound RF signals. Inbound RF signals are converted into incoming data signals and that may be provided to the monitor the printer and or other character presentation device.

In addition the handheld computing unit may provide a WLAN transceiver for coupling to the WLAN router to support WLAN RF communications for the computing device . The WLAN communications may be for accessing the internet via modem for accessing the entertainment server and or accessing the entertainment receiver . For example the WLAN communications may be used to support surfing the web receiving emails transmitting emails accessing on line accounts accessing on line games accessing on line user files e.g. databases backup files etc. downloading music files downloading video files downloading software etc. As another example the computing device i.e. the handheld computing unit and the extended computing unit may use the WLAN communications to retrieve and or store music and or video files on the entertainment server and or to access one or more of the entertainment components and or the entertainment receiver .

As is also shown the extended computing unit is coupled to a monitor a keyboard a mouse and a printer . The extended computing unit may also be coupled to other devices not shown such as a trackball touch screen gaming devices e.g. joystick game pad game controller etc. an image scanner a webcam a microphone speakers and or a headset. In addition the extended computing unit may have a form factor similar to a personal computer and or a laptop computer.

In this example the handheld computing unit is quasi docked to the extended computer unit where the handheld computing unit functions as a stand alone computer with limited resources e.g. processing modules user inputs outputs main memory etc. of the handheld computing unit and limited access to the memory of the extended computing unit . The quasi docking of the handheld computing unit to the extended computing unit is provided by an RF communication where an RF transceiver of the handheld computing unit is communicating with an RF transceiver of the extended computing unit . Depending on the bit rate of the RF connection the handheld computing unit can access files and or applications stored in memory of the extended computing unit . In addition the handheld computing unit may direct the processing module of the extended computing unit to perform a remote co processing function but the processing module of the handheld computing unit and the extended computing unit do not function as a multiprocessing module as they do when in the docked mode.

As an alternative the quasi docked mode may be achieved by the handheld computing unit communicating with the extended computing unit via the WLAN communication and the WLAN router . As yet another example the quasi docked mode may be achieved via a data cellular RF communication via the internet to the extended computing unit .

In this mode the handheld computing unit may transceive cellular RF communications e.g. voice and or data communications . Outgoing voice signals originate at a microphone of the handheld computing unit . The outgoing voice signals are converted into digital signals that are subsequently converted to outbound RF signals. Inbound RF signals are converted into incoming digital audio signals and that are provided to a speaker or headphone jack of the handheld computing unit .

Outgoing data signals originate at a keypad or touch screen of the handheld computing unit . The outgoing data signals are converted into digital signals that are subsequently converted to outbound RF signals. Inbound RF signals are converted into incoming data signals that are provided to the handheld display and or other handheld character presentation device.

In addition the handheld computing unit may provide a WLAN transceiver for coupling to the WLAN router to support WLAN RF communications with the WLAN router . The WLAN communications may be for accessing the internet via modem for accessing the entertainment server and or accessing the entertainment receiver . For example the WLAN communications may be used to support surfing the web receiving emails transmitting emails accessing on line accounts accessing on line games accessing on line user files e.g. databases backup files etc. downloading music files downloading video files downloading software etc. As another example the the handheld computing unit may use the WLAN communications to retrieve and or store music and or video files on the entertainment server and or to access one or more of the entertainment components and or the entertainment receiver .

The extended computing unit includes an extended processing module extended main memory extended hard disk flash memory extended random access memory RAM extended read only memory ROM a slave clock circuit extended input output I O interfaces e.g. extended audio I O interface extended video and or graphics interface and an extended data I O interface and extended I O components e.g. extended microphone extended speaker extended display which may be monitor and or printer and an extended keyboard mouse which may be keyboard and mouse an extended connection structure an extended bus structure and a radio frequency identification RFID tag .

Within the handheld computing unit the processing module and the baseband processing module may be separate processing modules or the same processing module. Such a processing module may be a single processing device or a plurality of processing devices where a processing device may be a microprocessor micro controller digital signal processor microcomputer central processing unit field programmable gate array programmable logic device state machine logic circuitry analog circuitry digital circuitry and or any device that manipulates signals analog and or digital based on hard coding of the circuitry and or operational instructions. The processing module may have an associated memory and or memory element which may be a single memory device a plurality of memory devices and or embedded circuitry of the processing module. Such a memory device may be a read only memory random access memory volatile memory non volatile memory static memory dynamic memory flash memory cache memory and or any device that stores digital information. Note that when the processing module implements one or more of its functions via a state machine analog circuitry digital circuitry and or logic circuitry the memory and or memory element storing the corresponding operational instructions may be embedded within or external to the circuitry comprising the state machine analog circuitry digital circuitry and or logic circuitry. Further note that the memory element stores and the processing module executes hard coded and or operational instructions corresponding to at least some of the steps and or functions illustrated in .

Also within the handheld computing unit the handheld main memory includes one or more RAM integrated circuits IC and or boards. The RAM may be static RAM SRAM and or dynamic RAM DRAM . The handheld hard disk flash memory may be one or more of a hard disk a floppy disk an optical disk NOR flash memory NAND flash memory and or any other type of non volatile memory. The clock generator circuit may be one or more of a phase locked loop a crystal oscillator circuit a fractional N synthesizer and or a resonator circuit amplifier circuit where the resonator may be a quartz piezo electric oscillator a tank circuit or a resistor capacitor circuit. Regardless of the implementation of the clock generator circuit it generates a master clock signal that is provided to the slave clock circuit and generates the clock signals for the handheld computing unit . Such clock signals include but are not limited to a bus clock a read write clock a processing module clock a local oscillation and an I O clock.

The handheld ROM stores the basic input output system BIOS program for the computing device i.e. the handheld computing unit and the extended computing unit . The ROM may be one or more of an electronically erasable programmable ROM EEPROM a programmable ROM PROM and or a flash ROM.

As used herein an interface includes hardware and or software for a device coupled thereto to access the bus of the handheld computing unit and or of the extended computing unit. For example the interface software may include a driver associated with the device and the hardware may include a signal conversion circuit a level shifter etc. Within the handheld computing unit the handheld audio I O interface may include an audio codec a volume control circuit and or a microphone bias and or amplifier circuit to couple the handheld HH microphone and or the HH speaker to the HH bus structure . The HH video I O interface may include a video codec a graphics engine a display driver etc. to couple the HH display to the HH bus structure . The HH data I O interface may include the graphics engine a display driver a keypad driver a touch screen driver etc. to coupled the HH display and or the HH keypad to the HH bus structure .

Within the extended computing unit the extended EXT processing module may be a single processing device or a plurality of processing devices where a processing device may be a microprocessor micro controller digital signal processor microcomputer central processing unit field programmable gate array programmable logic device state machine logic circuitry analog circuitry digital circuitry and or any device that manipulates signals analog and or digital based on hard coding of the circuitry and or operational instructions. The processing module may have an associated memory and or memory element which may be a single memory device a plurality of memory devices and or embedded circuitry of the processing module. Such a memory device may be a read only memory random access memory volatile memory non volatile memory static memory dynamic memory flash memory cache memory and or any device that stores digital information. Note that when the processing module implements one or more of its functions via a state machine analog circuitry digital circuitry and or logic circuitry the memory and or memory element storing the corresponding operational instructions may be embedded within or external to the circuitry comprising the state machine analog circuitry digital circuitry and or logic circuitry. Further note that the memory element stores and the processing module executes hard coded and or operational instructions corresponding to at least some of the steps and or functions illustrated in .

Also within the extended computing unit the EXT main memory includes one or more RAM integrated circuits IC and or boards. The RAM may be static RAM SRAM and or dynamic RAM DRAM . Note that the EXT main memory and the EXT RAM may be omitted if the handheld computing unit contains a sufficient amount of main memory. The EXT hard disk flash memory may be one or more of a hard disk a floppy disk at tape drive an optical disk NOR flash memory NAND flash memory and or any other type of non volatile memory. The slave clock circuit may be a phase locked loop PLL clock divider and or clock multiplier that receives the master clock signal and produces therefrom the clock signals for the extended computing unit . Such clock signals include but are not limited to a bus clock a read write clock a processing module clock and an I O clock.

The EXT ROM may be one or more of an electronically erasable programmable ROM EEPROM a programmable ROM PROM and or a flash ROM. Note that the EXT ROM may be omitted if the HH ROM is of sufficient size to accommodate the BIOS program and other system data that is stored in non volatile memory.

The EXT audio I O interface may include a sound card and corresponding driver to couple the EXT microphone and or the EXT speaker to the HH and or EXT bus structure and or . The EXT video I O interface may include a video codec a graphics card a graphics control unit a display driver etc. to couple the EXT display e.g. monitor to the HH and or EXT bus structure and or . The EXT data I O interface may include the graphics card the graphics control unit a display driver a keyboard and mouse driver s a touch screen driver etc. to coupled the EXT display and or the EXT keyboard mouse to the HH and or EXT bus structure and or .

The RFID tag provides an RF communication link to the handheld computing unit when the extended computing unit is disabled. The RFID tag may be implemented as disclosed in co pending patent application entitled POWER GENERATING CIRCUIT having a Ser. No. 11 394 808 and a filing date of Mar. 31 2006. Communication with the RFID tag will be described in greater detail with reference to .

When the computing device is active in a wireless transmission the baseband processing module and the RF section are active. For example for cellular voice communications the baseband processing module converts an outbound voice signal into an outbound voice symbol stream in accordance with one or more existing wireless communication standards new wireless communication standards modifications thereof and or extensions thereof e.g. GSM AMPS digital AMPS CDMA etc. . The baseband processing module may perform one or more of scrambling encoding constellation mapping modulation frequency spreading frequency hopping beamforming space time block encoding space frequency block encoding and or digital baseband to IF conversion to convert the outbound voice signal into the outbound voice symbol stream. Depending on the desired formatting of the outbound voice symbol stream the baseband processing module may generate the outbound voice symbol stream as Cartesian coordinates e.g. having an in phase signal component and a quadrature signal component to represent a symbol as Polar coordinates e.g. having a phase component and an amplitude component to represent a symbol or as hybrid coordinates as disclosed in co pending patent application entitled HYBRID RADIO FREQUENCY TRANSMITTER having a filing date of Mar. 24 2006 and an application Ser. No. 11 388 822 and co pending patent application entitled PROGRAMMABLE HYBRID TRANSMITTER having a filing date of Jul. 26 2006 and an application Ser. No. 11 494 682.

The RF section converts the outbound voice symbol stream into an outbound RF voice signal in accordance with the one or more existing wireless communication standards new wireless communication standards modifications thereof and or extensions thereof e.g. GSM AMPS digital AMPS CDMA etc. . In one embodiment the RF section receives the outbound voice symbol stream as Cartesian coordinates. In this embodiment the RF section mixes the in phase components of the outbound voice symbol stream with an in phase local oscillation to produce a first mixed signal and mixes the quadrature components of the outbound voice symbol stream to produce a second mixed signal. The RF section combines the first and second mixed signals to produce an up converted voice signal. The RF section then amplifies the up converted voice signal to produce the outbound RF voice signal which it provides to an antenna section. Note that further power amplification may occur between the output of the RF section and the input of the antenna section.

In other embodiments the RF section receives the outbound voice symbol stream as Polar or hybrid coordinates. In these embodiments the RF section modulates a local oscillator based on phase information of the outbound voice symbol stream to produce a phase modulated RF signal. The RF section then amplifies the phase modulated RF signal in accordance with amplitude information of the outbound voice symbol stream to produce the outbound RF voice signal. Alternatively the RF section may amplify the phase modulated RF signal in accordance with a power level setting to produce the outbound RF voice signal.

For incoming voice signals the RF section receives an inbound RF voice signal via the antenna section. The RF section converts the inbound RF voice signal into an inbound voice symbol stream. In an embodiment the RF section extracts Cartesian coordinates from the inbound RF voice signal to produce the inbound voice symbol stream. In another embodiment the RF section extracts Polar coordinates from the inbound RF voice signal to produce the inbound voice symbol stream. In yet another embodiment the RF section extracts hybrid coordinates from the inbound RF voice signal to produce the inbound voice symbol stream.

The baseband processing module converts the inbound voice symbol stream into an inbound voice signal. The baseband processing module may perform one or more of descrambling decoding constellation demapping modulation frequency spreading decoding frequency hopping decoding beamforming decoding space time block decoding space frequency block decoding and or IF to digital baseband conversion to convert the inbound voice symbol stream into the inbound voice signal which is placed on the bus structure .

The baseband processing module and the RF section function similarly for processing data communications and for processing WLAN communications. For data communications the baseband processing module and the RF section function in accordance with one or more cellular data protocols such as but not limited to Enhanced Data rates for GSM Evolution EDGE General Packet Radio Service GPRS high speed downlink packet access HSDPA high speed uplink packet access HSUPA newer version thereof and or replacements thereof. For WLAN communications the baseband processing module and the RF section function in accordance with one or more wireless communication protocols such as but not limited to IEEE 802.11 a b g n etc. Bluetooth ZigBee RFID etc.

When the computing device is executing one or more user applications e.g. word processing spreadsheet processing presentation processing email web browsing database calendar video games digital audio playback digital video playback digital audio record digital video record video games contact management program notes web favorites money management program etc. the HH processing module and the EXT processing module function as a multiprocessing module and the HH and EXT main memories and function as combined main memory. In addition the HH hard disk flash memory and the EXT hard disk flash memory function as a combined hard disk flash memory.

For instance the multiprocessing module provides multiprocessing via the HH and EXT processing modules and . In this configuration the processing modules and may share tasks and or execute multiple concurrent software processes. Further the processing modules and may be equal one may be reserved for one or more special purposes may be tightly coupled may be loosely coupled etc. For example at the operating system level the HH processing module may be designated to respond to all interrupts traps and or services calls and the invoke the EXT processing module as needed. As another example at the user level the processing modules may function in a symmetrical multiprocessing mode in an asymmetrical multiprocessing mode in a non uniform memory access multiprocessing mode and or in a clustered multiprocessing mode.

With respect to instruction and data streams the processing modules and may execute a single sequence of instructions in multiple contexts single instruction multiple data or SIMD multiple sequences of instructions in a single context multiple instruction single data or MISD or multiple sequences of instructions in multiple contexts multiple instruction multiple data or MIMD .

The computing device incorporates a virtual memory technique overlays and or swapping to utilize the combined main memories and hard disk flash memories for one or more user applications. In an embodiment the virtual memory is divided the virtual address space into pages e.g. a 4K Byte block where one or more page tables e.g. one for the computing device one for each running user application etc. translates the virtual address into a physical address. Note that the memory controller manages accesses to the one or more page tables to facilitate the fetching of data and or instructions from physical memory. If a page table indicates that a page is not currently in memory the memory controller and or one of the processing modules and or raise a page fault interrupt.

A paging supervisor of the operating system receives the page fault interrupt and in response searches for the desired page containing the required virtual address. Once found the paging supervisor reads the page into main memory and updates the appropriate page table. If there is insufficient room the main memory the paging supervisor saves an area of the main memory to the HH or EXT hard disk flash memory and update the corresponding page table. The cleared area of main memory is then used for the new page.

With respect to user I O devices the HH microphone the HH speaker the HH display and the HH keypad may be disabled while the handheld computing unit is docked. In this mode the EXT microphone the EXT speaker the EXT display and the EXT keyboard mouse are active to provide the user interfaces to the computing device . Note that for a cellular voice telephone call the inbound and outbound voice signals may be provided to from the EXT microphone and the speaker an EXT headset not shown or the VoIP phone .

The extended computing unit includes an extended processing module extended main memory extended hard disk flash memory extended random access memory RAM extended read only memory ROM a slave clock circuit extended input output I O interfaces e.g. extended audio I O interface extended video and or graphics interface and an extended data I O interface and extended I O components e.g. extended microphone extended speaker extended display which may be monitor and or printer and an extended keyboard mouse which may be keyboard and mouse an extended connection structure B an extended bus structure an RFID tag a baseband processing module and an RF section . Note that the EXT processing module and the baseband processing module may be separate processing modules or the same processing module.

In the quasi docked mode the baseband processing module and the RF section for the extended computing unit establish an RF communication path with the RF section and the baseband processing module of the handheld computing unit . In this mode the RF communication path is essentially functioning as a wireless bus coupling the HH bus structure to the EXT bus structure such that the handheld computing unit may access the EXT main memory and or the EXT hard disk flash memory of the extended computing unit . The baseband processing modules and and the RF sections and may utilize a wireless communication protocol such as but not limited to IEEE 802.11 a b g n etc. Bluetooth ZigBee RFID etc.

With the computing device in a quasi docked mode the HH processing module executes one or more user applications e.g. word processing spreadsheet processing presentation processing email web browsing database calendar video games digital audio playback digital video playback digital audio record digital video record video games contact management program notes web favorites money management program etc. using the HH main memory . In this mode the EXT processing module and the EXT main memory are inactive except to facilitate read write functions to the EXT hard disk flash memory which is treated as a lower level memory than the HH hard disk flash memory .

In this mode the virtual memory technique utilizes the HH main memory and the HH hard disk flash memory for one or more user applications. Further memory management includes copying user applications and or files from the EXT hard disk flash memory to the HH hard disk flash memory before it can be included in virtual memory and hence accessed by the HH processing module . Note that if the HH hard disk flash memory does not have sufficient space to store the user applications and or files the one or more user applications and or files are transferred from the HH hard disk flash memory to the EXT hard disk flash memory to free up memory space.

With handheld computing unit docked to the extended computing unit the core components of units and function as a single computing device . As such when the computing device is enabled the BIOS stored on the HH ROM is executed to boot up the computing device. The BIOS will be discussed in greater detail with reference to . After initializing the operating system which will described in greater detail with reference to and the computing device is ready to execute a user application.

In an embodiment the memory controller coordinates the reading data from and writing data to the HH main memory and the EXT main memory by the processing modules and by the user I O devices coupled directly or indirectly to the I O controller by the graphics card and or for data transfers with the HH and or EXT hard disk flash memory and or . Note that if the HH main memory and or the EXT main memory include DRAM the memory controller includes logic circuitry to refresh the DRAM.

The I O controller provides access to the memory controller for typically slower devices. For example the I O controller provides functionality for the PCI bus via the PCI interface for the I O interface which may provide the interface for the keyboard mouse printer and or a removable CD DVD disk drive and BIOS interface a direct memory access DMA controller interrupt controllers a host controller which allows direct attached of the EXT hard disk memory a real time clock an audio interface. The I O controller may also include support for an Ethernet network card a Redundant Arrays of Inexpensive Disks RAID a USB interface and or FireWire.

The graphics processing unit GPU is a dedicated graphics rendering device for manipulating and displaying computer graphics. In general the GPU implements a number of graphics primitive operations and computations for rendering two dimensional and or three dimensional computer graphics. Such computations may include texture mapping rendering polygons translating vertices programmable shaders aliasing and very high precision color spaces. The GPU may a separate module on a video card or it maybe incorporated into the graphics card that couples to the memory controller via the accelerated graphics port AGP . Note that a video card or graphics accelerator functions to generate the output images for the EXT display. In addition the video card may further include functionality to support video capture TV tuner adapter MPEG 2 and MPEG 4 decoding or FireWire mouse light pen joystick connectors and or connection to two monitors.

The EXT processing module the memory controller the EXT main memory the I O controller the I O interface the PCI interface and the host controller may be implemented on a single integrated circuit each on separate integrated circuits or some elements may be implemented on the same integrated circuits. For example the EXT processing module and the memory controller may be implemented on the same integrated circuit.

The plurality of peripheral interfaces include two or more of a SIM Security Identification Module card interface a power management PM interface a SD Secure Digital card or MMC Multi Media Card interface a coprocessor interface a Bluetooth BT transceiver interface an FM tuner interface a GPS receiver interface a video sensor interface e.g. a camcorder a TV tuner interface a universal subscriber identity module USIM interface a second display interface a Universal Asynchronous Receiver Transmitter UART interface a real time clock and a general purpose I O interface.

When the handheld computing unit is docked with the extended computing unit the HH processing module the HH main memory the HH hard disk flash memory the ROM the clock generator circuit and the HH bus structure are coupled directly or indirectly to the memory controller and or the I O controller of the extended computing unit . In this mode a docked mode operating system may activate as many or as few of the interfaces of the IC . For example since the EXT display mouse keyboard microphone speakers and VoIP phone are enabled the docked mode operating system may deactivate the data input interface the display interface the video codec if included the audio codec the graphics engine and the MIPI interface if included.

As another example the docked mode operating system may evoke the security functions provided by the security engine and or the security boot ROM . The security may be to allow disallow access to certain resources e.g. processing modules and or files privileged services calls certain memory locations etc. based on the identity of the requester. This may be done via an internal security process. In general internal security protects the computer s resources from the programs that are concurrently running. In an embodiment less privileged programs are blocked from certain instructions e.g. read from or write to memory and have to ask a higher privileged program to perform the instruction for it e.g. an operating system kernel .

As yet another example the docked mode operating system may active or deactivate one or more of the memory interfaces depending on whether access to the HH main memory and or the HH hard disk flash memory is to be accessed via the HH bus structure and or via the memory controller and or the host controller . For instance memory interface may be activated such that the HH processing module may access the HH main memory via the bus and memory interface may be deactivated such that the HH hard disk flash memory is accessed via the host controller .

When the handheld computing unit is in the remote mode a remote mode operating system is active which activates one or more of the interfaces. For example the remote mode operating system will active the data input interface the display interface the audio codec the graphics engine the video codec if included and the MIPI interface if included to provide the user with character e.g. voice audio video image text graphics etc. input and output functionality via the handheld computing unit . In an embodiment the graphic engine render two dimensional and or three dimensional graphics for display on the HH display and or storage in memory and or . The HH display may include one or more display devices such as a liquid crystal LCD display a plasma display a digital light project DLP display and or any other type of portable video display. Accordingly the display interface would include software to facilitate the transfer of output video graphics and or text to the HH display . Note that the MIPI interface may be used as an interface for a second HH display or instead of the display interface .

As another example the remote mode operating system may activate the DMA module such that one or more of the other interfaces may provide direct access to the HH main memory without or with minimal involvement of the HH processing module . For instance the camera interface may be provided direct memory access to store a captured image and or a captured video in the HH main memory or in the HH hard disk flash memory .

In an embodiment the HH bus structure may include one or more data lines one or more instruction lines and or one or more control lines. For example the HH bus structure may include 16 128 lines for data and another 16 128 lines for instructions. In addition the HH bus structure may further include address lines for addressing the main memory .

In an embodiment connections from the IC to the connector and or to other components of the handheld computing unit may be done via IC pins via an RF interconnection and or a magnetic interconnection. Such an RF interconnection may be implemented as disclosed in co pending patent applications 1 RF BUS CONTROLLER having a Ser. No. 11 700 285 and a filing date of Jan. 31 2007 2 INTRA DEVICE RF BUS AND CONTROL THEREOF having a Ser. No. 11 700 421 and a filing date of Jan. 31 2007 3 SHARED RF BUS STRUCTURE having a Ser. No. 11 700 517 and a filing date of Jan. 31 2007 4 RF TRANSCEIVER DEVICE WITH RF BUS having a Ser. No. 11 700 592 and a filing date of Jan. 31 2007 and 5 RF BUS ACCESS PROTOCOL AND TRANSCEIVER having a Ser. No. 11 700 591 and a filing date of Jan. 31 2007.

In an embodiment the EXT bus structure includes an AGP bus that couples the graphics card to the memory controller a memory bus that couples the memory controller to the EXT main memory a processor bus that couples the memory controller to the EXT processing module a PCI bus that couples a plurality of devices e.g. devices to the I O controller via the PCI interface and an I O bus that couples traditional I O devices e.g. keyboard mouse printer and or removable drive to the I O controller via the I O interface . In an embodiment the I O interface may be omitted and the traditional I O devices may be coupled to the PCI bus or via a USB connection.

With handheld computing unit docked to the extended computing unit the core components of units and function as a single computing device . As such when the computing device is enabled the BIOS stored on the HH ROM is executed to boot up the computing device. After initializing the operating system which will described in greater detail with reference to and the computing device is ready to execute a user application.

In an embodiment the memory controller is within the handheld computing unit and is coupled to the I O controller the graphics card the EXT processing module and the EXT main memory via the connector structure through . When connected the memory controller coordinates the reading data from and writing data to the HH main memory and the EXT main memory by the processing modules and by the user I O devices coupled directly or indirectly to the I O controller by the graphics card and or for data transfers with the HH and or the EXT hard disk flash memory and or .

If the demultiplexers and are included the memory controller is coupled to the HH processing module via demultiplexer and is coupled to the HH main memory via demultiplexer when the handheld computing unit is in the docked mode. When the handheld computing unit is in the remote mode the memory controller may be deactivated such that the demultiplexers and couple the HH processing module and the HH main memory to the HH bus structure . If the demultiplexers and are not included the memory controller is on in both the docked and remote modes to coordinate reading from and writing to the HH main memory .

Within the extended computing unit the EXT processing module the EXT main memory the I O controller the I O interface the PCI interface and the host controller may be implemented on a single integrated circuit each on separate integrated circuits or some elements may be implemented on the same integrated circuits. For example the I O controller the I O interface the PCI interface and the host controller may be implemented on the same integrated circuit.

When the handheld computing unit is docked with the extended computing unit the HH processing module the HH main memory the HH hard disk flash memory the ROM the clock generator circuit and the HH bus structure are coupled to the memory controller and or to the I O controller of the extended computing unit . In this mode a docked mode operating system may activate as many or as few of the interfaces of the IC . For example since the EXT display mouse keyboard microphone speakers and VoIP phone are enabled the docked mode operating system may deactivate the data input interface the display interface the video codec if included the audio codec the graphics engine and the MIPI interface if included.

When the handheld computing unit is in the remote mode a remote mode operating system is active which activates one or more of the interfaces. For example the remote mode operating system will active the data input interface the display interface the audio codec the graphics engine the video codec if included and the MIPI interface if included to provide the user with character e.g. voice audio video image text graphics etc. input and output functionality via the handheld computing unit .

As another example the remote mode operating system may activate the DMA module such that one or more of the other interfaces may provide direct access to the HH main memory without or with minimal involvement of the HH processing module . In addition the remote operating system may activate or deactivate the memory controller depending on how HH main memory is to be accessed and or how involvement of the HH processing module is to be controlled.

In an embodiment the EXT bus structure includes an AGP bus that couples the graphics card to connector for coupled to the memory controller a memory bus that couples the memory controller via the connector to the EXT main memory a processor bus that couples the memory controller via the connector to the EXT processing module a PCI bus that couples a plurality of devices e.g. devices to the I O controller via the PCI interface and an I O bus that couples traditional I O devices e.g. keyboard mouse printer and or removable drive to the I O controller via the I O interface . In an embodiment the I O interface may be omitted and the traditional I O devices may be coupled to the PCI bus or via a USB connection.

With handheld computing unit docked to the extended computing unit the core components of units and function as a single computing device . As such when the computing device is enabled the BIOS stored on the HH ROM is executed to boot up the computing device. After initializing the operating system which will described in greater detail with reference to and the computing device is ready to execute a user application.

In an embodiment the memory controller is within the handheld computing unit and is coupled to the I O controller the graphics card the EXT processing module and the EXT main memory via the connector structure . When connected the memory controller coordinates the reading data from and writing data to the HH main memory and the EXT main memory by the processing modules and by the user I O devices coupled directly or indirectly to the I O controller by the graphics card and or for data transfers with the HH and or the EXT hard disk flash memory and or .

Within the extended computing unit the EXT processing module the EXT main memory the I O controller the I O interface the PCI interface and the host controller may be implemented on a single integrated circuit each on separate integrated circuits or some elements may be implemented on the same integrated circuits. For example the I O controller the I O interface the PCI interface and the host controller may be implemented on the same integrated circuit.

When the handheld computing unit is docked with the extended computing unit the HH processing module the HH main memory the HH hard disk flash memory the ROM the clock generator circuit and the HH bus structure are coupled to the memory controller and or to the I O controller of the extended computing unit . In this mode a docked mode operating system may activate as many or as few of the interfaces of the IC . For example since the EXT display mouse keyboard microphone speakers and VoIP phone are enabled the docked mode operating system may deactivate the data input interface the display interface the video codec if included the audio codec the graphics engine and the MIPI interface if included.

When the handheld computing unit is in the remote mode a remote mode operating system is active which activates one or more of the interfaces. For example the remote mode operating system will active the data input interface the display interface the audio codec the graphics engine the video codec if included and the MIPI interface if included to provide the user with character e.g. voice audio video image text graphics etc. input and output functionality via the handheld computing unit .

As another example the remote mode operating system may activate the DMA module such that one or more of the other interfaces may provide direct access to the HH main memory without or with minimal involvement of the HH processing module . In addition the remote operating system may activate or deactivate the memory controller depending on how HH main memory is to be accessed and or how involvement of the HH processing module is to be controlled.

In this embodiment the connector structure functions to couple the HH bus structure to the EXT bus structure . As such when coupled the handheld computing unit and the extended computing unit share a common bus structure which may be controlled by a bus controller of the memory controller and or of the HH processing module . In general the bus controller controls access to the shared bus using one or more scheduling functions of first come first serve shorted job first shortest remaining time first a round robin scheme a priority scheme etc.

In an embodiment the EXT bus structure is coupled to the connection B such that the EXT bus structure and the HH bus structure become a shared bus structure. In an embodiment the I O interface may be omitted and the traditional I O devices may be coupled to the PCI bus or via a USB connection.

The on chip to off chip connector structure may be implemented using IC pins RF transceivers and or electromagnetic transceivers. RF interconnection transceivers may be implemented as disclosed in co pending patent applications 1 RF BUS CONTROLLER having a Ser. No. 11 700 285 and a filing date of Jan. 31 2007 2 INTRA DEVICE RF BUS AND CONTROL THEREOF having a Ser. No. 11 700 421 and a filing date of Jan. 31 2007 3 SHARED RF BUS STRUCTURE having a Ser. No. 11 700 517 and a filing date of Jan. 31 2007 4 RF TRANSCEIVER DEVICE WITH RF BUS having a Ser. No. 11 700 592 and a filing date of Jan. 31 2007 and 5 RF BUS ACCESS PROTOCOL AND TRANSCEIVER having a Ser. No. 11 700 591 and a filing date of Jan. 31 2007.

When the handheld computing unit is in a remote mode the baseband processing module may convert outbound data into an outbound symbol stream and convert an inbound symbol stream into inbound data. The RF section may convert the outbound symbol stream into an outbound RF signal and convert an inbound RF signal into the inbound symbol stream. The HH processing module may convert an outbound voice signal into the outbound data and convert the inbound data into an inbound voice signal. In addition the processing module provides one or more control signals to the digital audio switching module e.g. multiplexer that causes it to provide the inbound voice signal as audio data from the HH processing module to the handheld speaker interface via the HH audio codec . The interface provides an analog version of the inbound voice signal to the HH speaker which renders it audible.

The processing module may also provide one or more control signals to the digital audio switching module e.g. multiplexer that causes it to provide the outbound voice signal from the handheld microphone interface to the HH processing module via the HH audio codec . In this configuration the HH microphone interface receives an analog voice signal from the HH microphone . The HH microphone interface may adjust the level of the analog voice signal and or amplify it prior to providing it to the audio coded . The audio codec converts the analog voice signal into the digital outbound voice signal.

The processing module may also provide one or more control signals to the digital audio switching module e.g. multiplexer that causes it to provide the inbound voice signal from the processing module to the on chip to off chip connector structure when the handheld computing unit is coupled to the extended computing unit . In this configuration the sound card receives the digital inbound voice signal and converts it into an analog signal. The sound card then provides the analog audio signal to the EXT speaker system which may be a single speaker a stereo speaker set a multiple channel speaker system or speakers of a headset.

The processing module may also provide one or more control signals to the digital audio switching module e.g. multiplexer that causes it to provide the outbound voice signal from the on chip to off chip connector structure to the processing module when the handheld computing unit is in the docked mode. In this configuration the sound card receives an analog voice signal from the EXT microphone system which one or more microphones or a microphone of a headset. The sound card converts the voice signal into a digital signal that is provided to the processing module via the connector .

In an embodiment the HH processing module generates output user data and input user data e.g. non voice data relating to processing a handheld user application i.e. an application that is currently being executed and or has at least part of its code stored in the HH main memory . In addition the non voice data may include data transceived during a data cellular telephone call and are routed in a similar manner as the input and output user data. In this instance the HH processing module provides one or more control signals to a data switch module e.g. multiplexer that causes it to provide the output user data from the HH processing module to the handheld display interface via the HH video codec and or the graphics engine not shown when the handheld computing unit is in the remote mode. In this configuration the output user data e.g. a video an image text graphics etc. is provided as video data to the HH video codec which converts the data into an analog signal. The HH display interface provides the analog signal to the HH display . In an alternate embodiment the HH video codec may be bypassed if the HH display is capable of receiving digital video and or graphics signals.

The processing module may also provide one or more control signals to the data switch module e.g. multiplexer that causes it to provide the output user data from the processing module to the on chip to off chip connector structure when the handheld computing unit is in the docked mode. In this configuration the output user data is provided to the graphics processing unit and or to the graphics card which converts the output user data into a composite video signal an S video signal or a component video signal. The EXT monitor or receives the resulting video signal and renders it visible.

The processing module may also provide one or more control signals to the data switch module e.g. multiplexer that causes it to provide the input user data from the handheld data input interface to the processing module when the handheld computing unit is in the remote mode. In this configuration the HH keypad touch screen speed wheel etc. provides a user input to the HH data input interface . The data switch module provides the user input to the HH processing module .

The processing module may also provide one or more control signals to the data switch module e.g. multiplexer that causes it to provide the input user data from the on chip to off chip connector structure to the processing module when the handheld computing unit is in the docked mode. In this configuration user data entered into the keyboard and or mouse is provided to an EXT data input interface via the connector . The EXT data input interface provides the user input data to the processing module via the data switch module.

In this embodiment and in others an interface module includes hardware software and or memory to facilitate the transfer of signals from a corresponding device to a bus structure and or . For example an interface may include driver software an amplifier a level adjusting circuit a signal format adjusting circuit e.g. serial to parallel parallel to serial low voltage differential signaling etc. an input buffer and or an output buffer. As a specific example the HH data input interface may include a driver for a particular type of HH keypad may include a level shifting circuit to adjust the voltage level of the signal and or a signal format adjusting circuit and a buffer to store the data until it is ready to be forwarded.

In this embodiment audio video signals may be generated by the TV tuner or by the digital audio video processing module . The HH processing module and or the EXT processing module may generate graphics that overlay the video signals to produce graphic overlay video signals. In addition the digital audio video processing module may produce digital audio signals. Further the HH processing module and or the EXT processing module may generate more traditional computer input data and or output data and or inbound and outbound voice signals as discussed with reference to .

In a video playback mode the digital audio video processing module converts a stored video file into a first formatted outbound digital video stream and a corresponding outbound stereo digital audio stream. Such a conversion may include descrambling scaling decompressing adjusting brightness adjusting contrast adjusting hue and or adjusting sharpness. The video stream is provided to the graphics overlay module which when activated adds a graphics overlay generated by the HH processing module and or the EXT processing module . The graphics overlay module provides its output to the video encoder which generates a composite video signal an S video signal or a component video signal. In addition the corresponding outbound stereo digital audio stream is provided to an audio multiplexing module .

When the handheld computing unit is in the remote mode the audio multiplexing module provides the corresponding outbound stereo digital audio stream to the stereo DAC which converts it into an analog signal. The volume adjust signal adjust the level of the analog signal and provides it to the HH speaker . Note that if the HH speaker includes a single speaker the analog stereo signal is combined to produce a monotone signal. In addition the video encoder provides the composite video signal to the video codec which converts the signal to an analog video signal. The HH display receives the analog video signal via the display interface and presents it. Note that if the HH display is a digital display the video codec may be bypassed.

When the handheld computing unit is in the docked mode the audio multiplexing module provides the corresponding outbound stereo digital audio stream to the sound card which converts it into an analog signal and provides to the EXT speaker . In addition the video encoder provides the composite video signal to the I O interface which provides it to the graphics processing unit and or to the graphics card . The EXT monitor and or receives the resulting video signal via the graphics card and presents it.

In an alternate embodiment the digital audio video processing module converts video file into a second formatted outbound digital video stream and a corresponding outbound multi channel digital audio stream when the handheld computing unit is in a second docked mode. In this mode the digital audio video processing module provides the corresponding outbound multi channel digital audio stream to the digital audio interface which provides the signal to the multiple channel speaker system . In addition the video encoder provides an S video signal or component video signal to the I O interface which provides it to the graphics processing unit and or to the graphics card . The EXT monitor and or receives the resulting video signal via the graphics card and presents it.

In another embodiment the digital audio video processing module converts an audio file into a stereo outbound digital audio stream. Such a conversion may include descrambling equalization and or decompressing. When the handheld computing unit is in the remote mode the stereo outbound digital audio stream is provided to the stereo DAC and when the handheld computing unit the stereo outbound digital audio stream is provided to the sound card .

In another embodiment the digital audio video processing module converts the audio file into a multi channel outbound audio stream. Such a conversion may include descrambling equalization and or decompressing. When the handheld computing unit is in the docked mode the multi channel outbound digital audio stream is provided to the digital audio interface .

When the television TV tuner is active it generates a TV digital audio signal and a TV digital video signal. The TV tuner provides the digital video signal to the TV decoder and provides the TV digital audio signal to the multiplexing module . When the handheld computing unit is in the remote mode the multiplexing module provides the TV digital audio signal to the stereo DAC and demultiplexer provides the TV digital video signal to the HH video codec or directly to the HH display interface . When the handheld computing unit is in the docked mode the multiplexing module provides the TV digital audio signal to the sound card and the demultiplexer provides the TV digital video signal to the I O interface .

In this embodiment character inputs e.g. text graphics video images and or a combination thereof may be received via the keyboard the mouse the HH video image capture module the EXT microphone or the HH microphone depending on the mode of the handheld computing unit . The processing of inputs from the keyboard the mouse and the HH keypad has been previously discussed.

When the HH video image capture module is active it generates an analog video stream or an analog video image which are provided to the video codec . The video codec converts the analog video or digital image into a digital signal that is provided to the digital audio video processing module via the graphics overlay module . The video codec may be by passed if the capture module provides a digital output. If the processing module provides graphics e.g. a text message such as recorded on Jan. 30 2008 in Denver two dimensional graphics or a three dimensional graphics to be overlaid with the digital video or the digital image the graphics overlay module performs the overlay function. The resulting digital video and or digital image with or without an overlay is provided to the digital audio video processing module which generates a video file or image file therefrom. The processing may include one or more of scrambling compression encoding scaling etc. The resulting file is stored in the HH hard disk flash memory .

The digital audio video processing module may also store digital audio files of received audio inputs from the sound card or the HH microphone . In this instance the received audio signals are converted to a digital format if not received that way. The digital audio video processing module compresses equalizes etc. the digital audio signals to produce a digital audio file.

When the handheld computing unit is in the remote mode the power supply for the extended computing unit is off as such all of the devices of the extended computing unit are off. In this mode power for the handheld computing unit is provided by a battery and the listed components are enabled e.g. on . When the handheld computing unit is in the quasi docked mode the power supply of the extended computing unit is on and the extended computing unit devices are activated and or deactivated as indicated. Similarly the handheld computing unit devices are activated and or deactivated as indicated. When the handheld computing unit is in the docked mode the battery is disabled and the handheld computing unit is powered by the power supply of the extended computing unit . In addition the extended computing unit may include a battery charger to charge the battery of the handheld computing unit. The devices of the units and are activated and or deactivated as indicated. Accordingly when the handheld device is in different modes different operating systems are used as will be subsequently described.

In this example the HH hard disk flash memory includes an operating system space and a user space . The OS space includes the common OS section an remote mode OS section and a quasi docked mode OS section . The EXT hard disk flash memory includes an OS space and a user space . The OS space includes a quasi mode OS section and a docked mode OS section . Since each mode of operation of the handheld computing device utilizes different devices each mode has a correspondingly different operating system that includes common OS components and exclusive OS components. Examples of the various operating systems will be discussed with reference to .

When the handheld computing unit is in the remote mode which is determined during execution of the POST code the remote mode operating system OS boot loader is accessed. The remote mode OS boot loader which may be a multiple stage boot loader points to the common OS section and to the remote mode OS section of the HH hard disk flash memory . The common OS section includes operating system functions that are common for certain devices processes files and or applications of the handheld computing unit regardless of the mode and the remote mode OS section includes operating system functions are unique to certain other devices processes files and or applications of the handheld computing unit when it is in the remote mode. Note that the common OS functions may be considered a subset of the remote operating system functions of quasi docked operating system functions and or of docked operating system functions.

The remote mode OS boot loader instructs the HH processing module and or memory controller if included within the handheld computing unit to facilitate the transfer of the common OS functions or at least a portion thereof and the remote OS functions or at least a portion thereof to the HH main memory . The HH main memory has an OS space and a user space . The OS space is used to store the current mode OS which in this example is the remote mode operating system. Note that the OS space may vary in size depending on which operating system is being loaded and further note that the OS space is a privileged memory section that is accessible only to the processing module when in an operating system kernel mode. Once the current OS is loaded in the HH main memory the OS may initiate a graphical user interface and a log in procedure.

In this example the quasi docked mode OS boot loader instructs the HH processing module and or memory controller if included within the handheld computing unit to facilitate the transfer of the common OS functions or at least a portion thereof and the quasi docked OS functions or at least a portion thereof from the HH hard disk flash memory to the HH main memory . In addition the quasi docked mode OS boot loader instructs the HH processing module and or memory controller to facilitate a transfer of the quasi docked OS functions or at least a portion thereof from the EXT hard disk flash memory to the OS space of the HH main memory . The OS space is used to store the current mode OS which in this example is the quasi docked mode operating system. Note that the OS space may vary in size depending on which operating system is being loaded and further note that the OS space is a privileged memory section that is accessible only to the processing module when in an operating system kernel mode. Once the current OS is loaded in the HH main memory the OS may initiate a graphical user interface and a log in procedure.

In this example the docked mode OS boot loader instructs the HH processing module and or memory controller if included within the handheld computing unit to facilitate the transfer of the common OS functions or at least a portion thereof and the docked OS functions or at least a portion thereof from the EXT hard disk flash memory to the HH main memory . The OS space is used to store the current mode OS which in this example is the docked mode operating system. Note that the OS space may vary in size depending on which operating system is being loaded and further note that the OS space is a privileged memory section that is accessible only to the processing module when in an operating system kernel mode. Once the current OS is loaded in the HH main memory the OS may initiate a graphical user interface and a log in procedure.

Prior to executing the steps of a boot block algorithm may be executed to verify that the BIOS is not corrupted. If the BIOS is corrupted the back up BIOS will be accessed. The back up BIOS includes the same operational instructions as the main BIOS in ROM . Once the BIOS is verified main or back up the POST code is executed after the HH processing module is reset. Upon reset the HH processing module attempts to access a memory location commonly referred to as a reset vector. For a hard reboot e.g. at power on mode change or user initiated the memory controller directs the code fetch to the BIOS located on the ROM .

The method begins at step where the HH clock generator is initialized which includes powering on the HH clock generator and monitoring for a steady state of its clock signals. Once the clock signals are in a steady state the clock generator circuit is deemed to have been initialized. The method then proceeds to step where the handheld main memory is initialize. Initialization of the handheld main memory includes finding it determining its size and verifying that it is operating properly. Note that once the HH main memory is initialized the BIOS may be copied and decompressed from ROM and stored in the HH main memory and executed from there.

The method continues at step where the handheld bus structure and the handheld I O devices are initialized. The handheld I O devices initialized at this step will be primarily block I O devices ports and or general operation related. For example the I O devices that may be initialized include one or more of the HH hard disk flash memory the USB connection the SDIO interface the LCD interface a block I O device coupled a peripheral interface etc. The method continues at step where the HH processing module determines the mode of the handheld computing unit .

When the handheld computing unit is in the remote mode the method continues at step where character I O devices of the handheld computing unit are initialized. Such character I O devices includes the handheld graphics engine the HH keypad the HH display the HH microphone the HH speaker the camera interface a character I O device coupled to a peripheral interface etc. The method then proceeds to step where the remote mode operating system boot loader is loaded.

When at step it is determined that the handheld computing unit is in a docked mode the method continues at step where the slave clock module is initialized. This generally includes receiving a master clock from the clock generator circuit of the handheld computing unit generating one or more EXT clock signals and verifying steady state of the EXT clock signals. The method continues at step where the extended EXT processing module is initialized. This may be done by resetting the EXT processing module.

The method continues at step where the memory controller is initialized e.g. reset . Note that step may be done in parallel with step . The method continues at step where the extended main memory is initialized. This may include finding it determining its size and verifying that it is operating properly. The method continues at step where the extended bus structure and the I O controller are initialized. The bus may be initialized by finding it determining its size e.g. 16 bit 32 bit etc. and verifying that it is operating properly. Once the bus is initialized the I O controller is initialized.

The method continues at step where the extended I O devices coupled to the extended bus structure or to the I O controller are initialized. Such I O devices includes one or more of the flash memory the disk array controller the network card the USB connection the WLAN transceiver the sound card the IR transceiver the TV tuner a memory expansion card etc. The method continues at step where at least one of an extended graphics controller and an extended graphics card are initialized. The method continues at step where the mouse and keyboard are initialized. The method continues at step where the docked mode operating system boot loader is loaded.

When at step it is determined that the handheld computing unit is in a quasi docked mode the method continues at step where the slave clock module is initialized. The method continues at step where the extended processing module is initialized. The method continues at step where the extended main memory is initialized. The method continues at step where the EXT hard disk flash memory is initialized. The method continues at step where the HH character I O devices are initialized. The method continues at step where the quasi docked mode operating system boot loader is loaded.

At step the HH processing module enables the baseband processing module and RF section in a radio frequency identification RFID mode. The method continues at step where the HH processing module enables transmitting of an RFID message to an RFID tag within the extended computing unit. The method continues at step where the HH processing module determines whether an acknowledgement of the RFID message has been received. If yes the method continues at step where the HH processing module indicates that the handheld computing unit is in the quasi docked mode. When an acknowledgement of the RFID message is not received the method continues at step where the HH processing module indicates that the handheld computing unit is in the remote mode.

At step the HH processing module determines whether the mode change is from the remote mode to the docked mode or from the remote mode to the quasi docked mode. When the mode change is to the docked mode the method continues at step where the HH processing module shutdowns the HH character I O devices. Shutting down may include disabling the corresponding interface for an HH character I O device. For example the HH display interface which includes a display driver a buffer and may further included other circuitry is deactivated which shuts down the HH display coupled thereto.

The method then proceeds to step where a slave clock within the extended computing unit is initialized. The method then proceeds to step where a memory controller and an I O controller are initialized. The method then proceeds to step where an extended processing module is initialized e.g. reset . Step may further include initializes extended main memory within the extended computing unit initializes an extended bus structure within the extended computing unit initialize an extended I O devices coupled to the extended bus structure or to the I O controller and or initializes at least one of an extended graphics controller and an extended graphics card within the extended computing unit. Note that prior to step the clock generator circuit may re initialized. Further note that prior to or contemporaneous with step the HH processing module the HH main memory HH bus structure and the HH hard disk flash memory may be re initialized.

The method then proceeds to step where a mouse and a keyboard of the extended computing unit are initialized. The method then proceeds to step where the docked mode operating system boot loader is loaded.

When at step the mode change is to the docked mode the method continues at step where the slave clock module within the extended computing unit is initialized which may occur after the clock generating circuit is re initialized. The method then proceeds to step where the extended processing module within the extended computing unit is initialized e.g. reset . Step may also include initializing the extended main memory within the extended computing unit and initializing a hard disk within the extended computing unit. Note that prior to or contemporaneous with step the HH processing module the HH main memory HH bus structure and the HH hard disk flash memory may be re initialized.

The method then proceeds to step where the HH character I O devices are re initialized. The method then proceeds to step where the quasi docked mode operating system boot loader is loaded.

If at step the handheld computing unit is currently in a docked mode the method continues at step where the HH processing module determines whether the mode change is from the docked mode to the remote mode process or from the docked mode to the quasi docked mode. When the mode change is from the docked mode to the remote mode the method continues at step where the slave clock within the extended computing unit is shutdown. The method continues at step where the memory controller of the external main memory is shutdown. The method continues at step where the extended processing module within the extended computing unit is shutdown.

The method continues at step where the I O controller within the extended computing unit is shutdown. The method continues at step where at least one of an extended graphics controller and an extended graphics card within the extended computing unit is shutdown. The method continues at step where the mouse and keyboard of the extended computing unit are shutdown. The method continues at step where HH character I O devices are initialized. The method continues at step where the remote mode operating system boot loader is loaded. Note that prior to step the clock generating circuit the HH processing module the HH main memory HH bus structure and the HH hard disk flash memory are initialized.

When at step it is determined that the mode change is from the docked mode to the quasi docked mode the method continues at step where the slave clock within the extended computing unit is re initialized. In addition the I O controller within the extended computing unit the at least one of an extended graphics controller and an extended graphics card within the extended computing unit and the mouse and keyboard of the extended computing unit are shutdown. Note that prior to step the clock generating circuit the HH processing module the HH main memory the HH bus structure and the HH hard disk flash memory are initialized.

The method continues at step where the extended main memory within the extended computing unit is re initialized. The method continues at step where the extended processing module within the extended computing unit is re initialized. The method continues at step where the hard disk within the extended computing unit is re initialized. The method continues at step where the HH character I O devices are initialized. The method continues at step where the quasi docked mode operating system boot loader is loaded.

When at step the current mode is the quasi docked mode the method continues at step of . At step the HH processing module determines whether the handheld computing unit is changing from the quasi docked mode to the remote mode or to the docked mode. When the change is to the remote mode the method continues at step where the slave clock within the extended computing unit is shutdown. The method continues at step where the extended main memory within the extended computing unit is shutdown. The method continues at step where the extended processing module within the extended computing unit is shutdown. The method continues at step where the hard disk within the extended computing unit is shutdown. The method continues at step where the character I O devices are re initialized. The method continues at step where the remote mode operating system boot loader is loaded. Note that prior to step the clock generating circuit the HH processing module the HH main memory the HH bus structure and the HH hard disk flash memory are re initialized.

When at step the reboot is from quasi docked mode to docked mode the method continues at step where the HH character I O devices are shutdown. The method continues at step where the slave clock within the extended computing unit is re initialized. Note that prior to step the clock generating circuit the HH processing module the HH main memory the HH bus structure and the HH hard disk flash memory are re initialized.

The method continues at step where the memory controller is re initialized. The method continues at step where the extended processing module within the extended computing unit is re initialized. The method continues at step where the extended main memory within the extended computing unit is re initialized. The method continues at step where the EXT bus structure the I O controller and the hard disk within the extended computing unit are initialized. The method continues at step where the extended I O devices coupled to the extended bus structure or to the I O controller are initialized. The method continues at step where the at least one of an extended graphics controller and an extended graphics card within the extended computing unit is initialized. The method continues at step where the mouse and a keyboard of the extended computing unit are initialized. The method continues at step where the docked mode operating system boot loader is loaded.

The method continues at step where it is determined whether the remote mode operating system the quasi docked mode operating system or the docked mode operating system is to be loaded based on which boot loader is loaded. If the docked mode operating system is to be loaded the method continues at step where the HH processing module verifies the drivers for the handheld block I O devices and for the extended block and character I O devices. Note that a device driver is a specific type of software that allows communication with a device via a specific computer bus e.g. PCI bus AGP bus etc. . Such communication includes providing and or receiving commands data and or requesting access to the operating system and or user applications via interrupts.

The method continues at step where the HH processing module determines whether the drivers are present for all of the active HH and EXT devices. If not the method continues at step where the HH processing module acquires the drivers. This may involve requested the user to install a disk that accompanied the device to download the driver from a web page and or to retrieve a stored driver. Once the drivers are verified the method continues at step where the HH processing module loads the identification information of the handheld block I O devices and the extended block and character I O devices in a docked mode operating system device table.

The method continues at step where the HH processing module determines handheld memory resources handheld processing resources extended memory resources and extended processing resources. The resources may further include available user memory space multi processing configuration information bus structure user applications file structures etc. The method continues at step where the HH processing module initializes a docked mode process table. An example of a process table will be discussed with reference to . The method continues at step where the HH processing module start ups an extended graphical user interface and may further initiate a user log in process.

When at step it is determined that the remote mode operating system is to be loaded the method continues at step where the HH processing module verifies the drivers for the block and character I O devices coupled to the handheld I O interfaces. The method continues at step where the HH processing module determines whether the drivers are present for all of the active HH I O devices. If not the method continues at step where the HH processing module acquires the drivers. Once the drivers are verified the method continues at step where the HH processing module loads the identification information of the handheld I O devices in a remote mode operating system device table.

The method continues at step where the HH processing module determines handheld memory resources and handheld processing resources. The resources may further include available user memory space multi processing configuration information bus structure user applications file structures etc. The method continues at step where the HH processing module initializes a remote mode process table. An example of a process table will be discussed with reference to . The method continues at step where the HH processing module start ups an HH graphical user interface and may further initiate a user log in process.

When at step it is determined that the quasi docked mode operating system is to be loaded the method continues at step where the HH processing module verifies the drivers for the block and character I O devices coupled to the handheld I O interfaces and for the EXT block I O devices coupled to the I O controller the host controller and or the EXT bus structure. The method continues at step where the HH processing module determines whether the drivers are present for all of the active HH and EXT I O devices. If not the method continues at step where the HH processing module acquires the drivers. Once the drivers are verified the method continues at step where the HH processing module loads the identification information of the handheld I O devices and the extended block I O devices in a quasi docked mode operating system device table. Note that the docked quasi docked and remote operating system tables may be the same table with differing entries.

The method continues at step where the HH processing module determines handheld memory resources handheld processing resources EXT processing resources and or EXT memory resources. The resources may further include available user memory space multi processing configuration information bus structure user applications file structures etc. The method continues at step where the HH processing module initializes a quasi docked mode process table. An example of a process table will be discussed with reference to . The method continues at step where the HH processing module start ups an HH graphical user interface and may further initiate a user log in process.

In general the kernel section functions to connect an application to the hardware resources of a computing device. In this regard the kernel section manages the computing device s resources e.g. multi processing capabilities processing module run time main memory hard disk memory network throughput I O devices communication between hardware and software components etc. and provides the lowest level software abstraction layer. Note that the kernel section may include monolithic kernels and or micro kernels.

The process management kernel section provides one or more kernels to allow and support execution of one or more processes. A process is the execution of an application s operating instructions and several processes may be associated with the same application. When the handheld computing unit is in a remote mode the HH processing module may function as a single central processing unit that executes one instruction at a time. In this embodiment the HH processing module may use a time sharing process to allow seemingly concurrent execution of multiple processes. In another embodiment the HH processing module includes a multi processor core that supports actual concurrent execution of multiple processes where each processing core may use the time sharing process to allow more processes to run at once. When the handheld computing unit is in the docked mode the HH processing module and the EXT processing module function collectively to provide the multi processor core. Note that each of the HH and EXT processing modules may include its own multi processor core such that when functioning collectively the number of processors is further increase.

To run an application a kernel of the process management kernel section sets up an address space for the application loads the file containing the application s code into memory sets up a stack for the application and branches to a given location inside the application to start its execution. Several applications may be supported by using multi tasking kernels pre emptive multi tasking kernels cooperative multi tasking kernels and or multiprocessing. A multi tasking kernel schedules access to the HH processing module and or EXT processing module among a plurality of processes in an orderly manner. The scheduling may be done in a variety of ways including multiprogramming time sharing and real time.

A pre emptive multi tasking kernel allocates each process a slice of time and switches from process to process in accordance with the time slices to provide the illusion of concurrent execution. The size of the time slices may vary from process to process and may be adjusted and or reallocated based on priority of other processes. The kernel also provides a mechanism for the processes sharing the processing resources to communication with one another which is generally referred to as inter process communication IPC which may be done by sharing memory message passing and or a remote procedure calls.

A cooperative multi tasking kernel allows a process to run uninterrupted until it makes a special request that tells the kernel it may switch to another process. The special request may be the result of a response to an inter process communication or the process is waiting for an event to occur.

A multiprocessing kernel allows different processes and or threads to run on different processors e.g. the HH processing module and the EXT processing module . The kernel provides a synchronization mechanism to ensure that no two processors attempt to modify the same data at the same time.

The memory management kernel section provides one or more kernels to control access to the HH main memory the HH hard disk flash memory the EXT main memory and or the EXT hard disk flash memory. In general a memory management kernel has full access to the computing device s memory and controls a process access to the memory. This includes establishing virtual addressing using paging and or segmentation. The virtual address spaces may be different for different processes e.g. the memory that one process accesses at a particular virtual address may be different memory from what another process accesses at the same virtual address . The operating system maintains a page table to track the virtual addresses association to physical addresses and the allocation of the virtual memory to particular processes. The virtual memory allocations are tracked so that when a process terminates the memory used by that process can be made available for other processes. In this manner the memory management kernel allows each process to function as if it the only process running.

The file system management kernel section includes one or more kernels to control a file system for file storage and or file transfers. The file system uses the EXT hard disk flash memory the EXT CD ROM drive the HH hard disk flash memory etc. to store and organizes files and or applications for ease of finding and accessing. In an embodiment the file system includes directories that associate file names with files. This may be done by connecting the file name to an index into a file allocation table. The directory structure may be flat no subdirectories or hierarchical includes subdirectories . The directory may further include meta data regarding a file. The meta data may include file length a byte count time the file was last modified file creation time and or date time and or date the file was last accessed any changes to the meta data owner s identity creator s identity access permission settings etc.

The file system may be a disk file system a flash file system a database file system a transactional file system and or a special purpose file system. In an embodiment each of the various modes of the operating system has its own file system. For example the remote mode operating system has a file system that utilizes the HH hard disk flash memory the quasi docked mode operating system has a file system that has a hierarchical preference for the HH hard disk flash memory over the EXT hard disk flash memory and the docked mode operating system has a file system that has a hierarchical preference for the EXT hard disk flash memory or the HH hard disk flash memory .

The I O device management kernel section includes one or more kernels that manage I O device processing resource and or memory resource allocation requests. As an example a process may need to access an I O device e.g. the HH display which is controlled by the kernel through a device driver. As a more specific example to show the user something on the HH display an application would make a request to the kernel which would forward the request to its display driver which plots the character pixel for display.

The operating system may security features. The security may include levels internal security and external security. The internal security is the protection of the computing device s resources from concurrently running applications performing the same process at the same time. In this instance applications and or processes thereof are assigned a privilege level which blocks less privileged applications and or processes from using certain hardware instructions certain processing resources accessing certain memory spaces etc. When an application or process is blocked it must ask a higher privileged application or process to perform the task for it.

For external security the computing device may include a software firewall or an intrusion detection prevention system. The software firewall is configured to allow or deny network traffic to or from a service or application running on the operating system.

The operating system further includes graphical user interfaces GUI for the handheld computing unit and the extended computing unit. The GUI may be for a touch screen a keypad an LCD display a monitor and vary depending on the applications being used. For example when the handheld computing unit is in a cellular telephone mode the GUI may be adapted for the cell phone. As another example when the handheld computing unit is a GPS receiver mode the GUI may be adapted to for GPS operations. When the handheld computing unit is docked to the extended computing unit the GUI may resemble a personal computer and or laptop GUI.

As an example assume that the handheld computing unit is in the remote mode and is executing a user application and the operating system is in the user mode state for this user application. The executing of the user application includes one or more processes that require access to the HH computing unit s resources. When a process needs a resource it generates a service call and or evokes a trap. When the process service call or the trap is detected the operating system transitions to the process kernel state for a process service call to the I O kernel mode for an I O service call to the memory kernel mode for a memory service call or to the file system kernel mode for a file service system call. Assuming that the service call was a process service call the operating system is in state and beings to process the process service call. The process service call may be to have a series of operational instructions executed by the HH processing module may be to store data may be to read data may be use certain data while executing the operational instructions may be to display data may be to receive data etc.

If the process service call is to execute operational instructions the process management kernel schedules the process for access to the HH processing module based on the state of the process. As shown in a process may be in a blocked state a running state or a ready state . If the process is in a blocked state it is dependent on some other process memory management function and or file management function to be completed before it can execute its current task. When the dependency is removed the process transitions into the ready state . The process remains in this state until the resource it has requested is allocated to it. When allocated the process transitions to the running state .

Returning to the state diagram of after the process is scheduled and or the process is completed the operating system transitions back to the user state . If the process service call includes requesting access to the processing module and to store the results the operating system would also transition to the memory kernel state and the file system kernel state to fulfill the storage request service call.

When an I O device desires access to the processing module to a file and or to the memory it issues an interrupt. When the operating system receives the interrupt it transitions to the I O device kernel mode to process the interrupt which may be for access to the file system access to the processing module and or access to the memory. As such from the I O kernel state the operating system may transition to the process kernel state the file system kernel state and or to the memory kernel state . Note for from application to application and or process to process the operating system may be in different states at any one time.

The method continues at step where the HH processing module calls a quasi mode subprogram library to retrieve a subprogram e.g. a handler to support the fulfillment of the service call. is an example of a library that includes remote mode OS subprograms quasi mode OS subprograms and docked mode OS subprograms . As shown the subprograms overlap such that when the handheld computing unit is in the docked mode it may call a subprogram from any of the OS subprograms . Conversely when the handheld computing unit is in the remote mode it may only call subprograms for the remote OS subprogram section .

The library may be static library or a dynamically linked library. An embodiment of a static library includes of a set of routines which are copied into a target application by the compiler linker or binder producing object files and a stand alone executable file. Actual address references for jumps and other routine calls are stored in a relative address or symbolic which cannot be resolved until all code and libraries are assigned final static addresses. The linker resolves the unresolved addresses into fixed or virtual addresses.

In an embodiment a dynamic linking library loads the subroutines of a library into an application program at runtime rather than at compile time. This reduces the compile time of the linker since it records what library routines the program needs and the index names in the library. At the loading of an application a loader transfers the relevant portions of the library from the hard disk to the main memory which may be in the handheld and or extended computing unit.

Returning to the discussion of the method continues at step where the HH processing module updates a process table for the system call for the application and or one of it processes. illustrates an example of a process table that includes a column for each of the processes that are active. The data stored for each process includes processing information e.g. register locations program counter PC status word stack pointer process state priority schedule parameters process ID

Returning to the discussion of the method continues at step where the HH processing module executes a trap to switch to a kernel quasi docked mode e.g. process memory file I O device . The method continues at step where the HH processing module identifies a system call handler to provide access to higher level software layers for the system call. At step the system call is processed which may be done by the HH processing module executing a higher level layer operation system subroutine. When the system call has been processed which may done as previously discussed with reference to the method proceeds from step to step .

At step the HH processing module executes another trap to return to a user mode. The method continues at step where the HH processing module retrieves parameters from the stack such that the application can resume processing where it left off when it initiated the service call.

The method of is also applicable when the handheld computing unit is in the remote mode. At step the HH processing module receives a system call from a handheld application a handheld block I O device or a handheld character I O device. Steps include store parameters of the system call in a remote mode stack call a remote mode subprogram library update process table for the system call execute a trap to switch to a kernel remote mode identify system call handler for the system call when processing the system call is complete executing another trap to return to a user mode and retrieve parameters.

The method of is also applicable when the handheld computing unit is in the docked mode. At step the HH processing module receives a system call from a handheld application a docked mode application a handheld block I O device an extended block I O device or an extended character I O device. Steps include store parameters of the system call in a docked mode stack call a docked mode subprogram library update process table for the system call execute a trap to switch to a kernel docked mode identify system call handler for the system call when processing the system call is complete executing another trap to return to a user mode and retrieve parameters.

A fixed user application is an application that resides on the HH memory e.g. hard disk or flash and cannot be transferred to the EXT memory e.g. hard disk flash tape RAID etc. . A selected user application is an application that currently resides on the HH memory but can be transferred to the EXT memory. Fixed and selected applications will be discussed in greater detail with reference to .

In this example the applications and or the I O devices via the corresponding driver may issue service calls interrupts and or traps that evoke one or more of the operating system kernels . For example if the one applications or I O devices desires to read data from or write data to memory for a specific file the memory kernel and the file system kernel are evoked. The file system kernel identifies the particular file to the processed and the memory kernel identifies the particular memory location of the file. The memory kernel also provides the read write R W request to the memory scheduler .

The memory scheduler queues up the R W requests and schedules them for accessing the HH memory and or . The memory scheduler may use one or more scheduling techniques to schedule the memory requests. Such scheduling techniques include Borrowed Virtual Time Scheduling BVT Completely Fair Scheduler CFS Critical Path Method of Scheduling Deadline monotonic scheduling DMS Deficit round robin DRR Dominant Sequence Clustering DSC Earliest deadline first scheduling EDF Elastic Round Robin Fair share scheduling First In First Out FIFO also known as First Come First Served FCFS Gang scheduling Genetic Anticipatory Highest response ratio next HRRN Interval scheduling Last In First Out LIFO Job Shop Scheduling Least connection scheduling Least slack time scheduling LST List scheduling Lottery Scheduling Multilevel queue Multilevel Feedback Queue Never queue scheduling O 1 scheduler Proportional Share Scheduling Rate monotonic scheduling RMS Round robin scheduling RR Shortest expected delay scheduling Shortest job next SJN Shortest remaining time SRT Staircase Deadline scheduler SD Take Scheduling Two level scheduling Weighted fair queuing WFQ Weighted least connection scheduling Weighted round robin WRR and Group Ratio Round Robin.

As a R W function is processed the HH memory is accessed and the corresponding data is read from or written to the desired location. Once the function is complete the R W function is removed the memory scheduler s queue. Note the completion of a R W function may evoke another R W function a process for the HH processing module a file system function and or an I O device functions.

The processing module scheduler may use one or more scheduling techniques to schedule process for accessing the HH processing module . In this example the processes may be initiated by one or more of the applications and or one or more of the I O devices coupled to the drivers .

As discussed by way of example the kernels and the schedulers control the access to the resources of the handheld computing unit. In particular the memory kernel and the memory scheduler control access to the HH memory and the process kernel and the processing module memory scheduler control access to the HH processing module .

In this example the applications and or the I O devices via the corresponding driver may issue service calls interrupts and or traps that evoke one or more of the operating system kernels . For example if the one applications or I O devices desires to read data from or write data to memory for a specific file the memory kernel and the file system kernel are evoked. The file system kernel identifies the particular file to the processed and the memory kernel identifies the particular memory location of the file. The memory kernel also provides the read write R W request to the memory scheduler .

The memory scheduler queues up the R W functions and schedules them for the HH memory scheduler and the EXT memory scheduler . The HH memory scheduler schedules the R W functions for accessing the HH memory and or and the EXT memory scheduler schedules the R W functions for accessing the EXT memory . The memory schedulers may use one or more scheduling techniques to schedule the memory requests. Such scheduling techniques include Borrowed Virtual Time Scheduling BVT Completely Fair Scheduler CFS Critical Path Method of Scheduling Deadline monotonic scheduling DMS Deficit round robin DRR Dominant Sequence Clustering DSC Earliest deadline first scheduling EDF Elastic Round Robin Fair share scheduling First In First Out FIFO also known as First Come First Served FCFS Gang scheduling Genetic Anticipatory Highest response ratio next HRRN Interval scheduling Last In First Out LIFO Job Shop Scheduling Least connection scheduling Least slack time scheduling LST List scheduling Lottery Scheduling Multilevel queue Multilevel Feedback Queue Never queue scheduling O 1 scheduler Proportional Share Scheduling Rate monotonic scheduling RMS Round robin scheduling RR Shortest expected delay scheduling Shortest job next SJN Shortest remaining time SRT Staircase Deadline scheduler SD Take Scheduling Two level scheduling Weighted fair queuing WFQ Weighted least connection scheduling Weighted round robin WRR and Group Ratio Round Robin.

As a R W function is processed the HH memory or the EXT memory is accessed and the corresponding data is read from or written to the desired location. Once the function is complete the R W function is removed the memory scheduler s queue. Note the completion of a R W function may evoke another R W function a process for the HH processing module a file system function and or an I O device functions.

The processing module scheduler queues up the processes and schedules them for the HH processing module scheduler and the EXT processing module scheduler . The HH processing module scheduler schedules the processes for accessing the HH processing module and the EXT processing module scheduler schedules the processes for accessing the EXT processing module . In this example the processes may be initiated by one or more of the applications and or one or more of the I O devices coupled to the drivers .

In this example the applications and or the I O devices via the corresponding driver may issue service calls interrupts and or traps that evoke one or more of the operating system kernels . For example if the one applications or I O devices desires to read data from or write data to memory for a specific file the memory kernel and the file system kernel are evoked. The file system kernel identifies the particular file to the processed and the memory kernel identifies the particular memory location of the file. The memory kernel also provides the read write R W request to the memory scheduler .

The memory scheduler queues up the R W functions and schedules them for the HH memory scheduler and the EXT memory scheduler . The HH memory scheduler schedules the R W functions for accessing the HH memory and or and the EXT memory scheduler schedules the R W functions for accessing the EXT memory . The memory schedulers may use one or more scheduling techniques to schedule the memory requests. Such scheduling techniques include Borrowed Virtual Time Scheduling BVT Completely Fair Scheduler CFS Critical Path Method of Scheduling Deadline monotonic scheduling DMS Deficit round robin DRR Dominant Sequence Clustering DSC Earliest deadline first scheduling EDF Elastic Round Robin Fair share scheduling First In First Out FIFO also known as First Come First Served FCFS Gang scheduling Genetic Anticipatory Highest response ratio next HRRN Interval scheduling Last In First Out LIFO Job Shop Scheduling Least connection scheduling Least slack time scheduling LST List scheduling Lottery Scheduling Multilevel queue Multilevel Feedback Queue Never queue scheduling O 1 scheduler Proportional Share Scheduling Rate monotonic scheduling RMS Round robin scheduling RR Shortest expected delay scheduling Shortest job next SJN Shortest remaining time SRT Staircase Deadline scheduler SD Take Scheduling Two level scheduling Weighted fair queuing WFQ Weighted least connection scheduling Weighted round robin WRR and Group Ratio Round Robin.

As a R W function is processed the HH memory or the EXT memory is accessed and the corresponding data is read from or written to the desired location. Once the function is complete the R W function is removed the memory scheduler s queue. Note the completion of a R W function may evoke another R W function a process for the HH processing module and or the EXT processing module a file system function and or an I O device functions.

The processing module scheduler queues up the processes and schedules them for the HH processing module scheduler and the EXT processing module scheduler . The HH processing module scheduler schedules the processes for accessing the HH processing module and the EXT processing module scheduler schedules the processes for accessing the EXT processing module . In this example the processes may be initiated by one or more of the applications and or one or more of the I O devices coupled to the drivers .

Each of the applications includes an applications code section and an operating system interface code section . The application code section includes the operational instructions of the application. The operating system interface code section includes code that enables the application to communicate with the operating system which may be an application programming interface.

In an embodiment a fixed HH application is an application that is only allowed to be stored on the HH memory due to the nature of the application. For example the application may be for cellular telephone communications a calendar application an email application a contacts application a favorites web sites application a notes application etc. A fixed HH file is a file that is only allowed to be stored on the HH memory due to its corresponding application. For example the fixed file may be a calendar an email file a contacts list a favorites web sites list a notes etc. While these applications and files can be accessed regardless of the mode of the handheld computing unit these applications and files reside with the handheld computing unit such that when it is in the remote mode it has these applications and files on it which avoids the redundancy of applications and files of current PCs and handheld devices. Note that the user can select which files and or applications to make fixed.

In an embodiment a selected HH application is an application that is currently stored on the HH memory but could be transferred to the EXT memory . For example the application may be a video game word processing database spreadsheet digital A V player etc. A selected HH file is a file that is currently stored on the HH memory but could be transferred to the EXT memory . For example the fixed file may be a word processing document a spreadsheet a database record etc.

In an embodiment a fixed EXT application is an application that is only allowed to be stored on the EXT memory due to the nature of the application. For example the application may be for tape drive back up etc. A fixed EXT file is a file that is only allowed to be stored on the EXT memory due to its corresponding application.

In an embodiment a selectable EXT application is an application that is currently stored on the EXT memory but could be transferred to the HH memory . For example the application may be a video game word processing database spreadsheet digital A V player etc. A selectable EXT file is a file that is currently stored on the EXT memory but could be transferred to the HH memory . For example the fixed file may be a word processing document a spreadsheet a database record etc.

With the handheld computing unit docked to the extended computing unit a selected application may be swapped with a selectable application . In addition an selected file may be swapped with a selectable file as directed by the user.

At step the HH processing module determines whether the handheld computing unit is to change from the docked mode to the remote mode or the quasi docked mode. For example the user may provide an input via GUI to indicate the desired mode change or it may be automatically detected by first detecting a loss of coupling between the handheld computing unit and the extended computing unit. If the loss of coupling is detected the handheld computing unit determines whether it can communication with the extended computing unit via an RF communication path. If yes it is in the quasi docked mode if not it is in the remote mode.

When the mode change request is detected to be a change to the remote mode the method continues at step where the HH processing module determines available handheld hard disk space. The method continues at step where the HH processing module determines the user applications and files stored on the handheld hard disk. The method continues at step where the HH processing module identifies fixed user applications and selected user applications of the user applications and identifies fixed files and selected files of the files.

The method continues at step where the HH processing module provides a list of the fixed user applications and the selected user applications. The method continues at step where the HH processing module provides a list of available selectable user applications and or selectable files stored on the extended hard disk. The method continues at step where the HH processing module determines whether it has received a request to change the selected application and or selected file. If no the method continues at step where the HH processing module facilitates the transfer to the remote mode.

If a request to change is received at step the method continues at step where the HH processing module determines whether the change is to delete an application and or file or to add an application and or file. If the change is to delete the method continues at step where the HH processing module deletes the selected application and or selected file. The method continues at step where the HH processing module facilitates the transition to the remote mode.

If the change is to add an application and or a file the method continues at step where the HH processing module determines whether there is sufficient memory to store the new application and or new file. If yes the method continues at step where the HH processing module adds the new application and or file to the HH memory and removes it from the EXT memory . Note that the HH processing module may facilitate a back up of any of the files and or applications stored on the HH memory and or the EXT memory to a back up tape a back up hard drive etc.

When the handheld hard disk does not have sufficient available memory to store the new application and or new file the method continues at step where the HH processing module provides an insufficient memory message for display. In response to the message the user may elect to not add the application and or file to the HH memory prior to going to the remote mode the user may indicate that he she desires to swap an application and or with the EXT memory or the user may desired to change to the quasi docked mode such that the application and or file may be accessed via the RF connection. If the response is to swap an application or file the HH processing module swaps the one of the selected user applications on the handheld hard disk with the available selectable user application on the EXT memory such that the available selectable user application is stored on the handheld hard disk and the one of the selected user applications is stored on the extended hard disk.

If the detected mode is to the quasi docked mode the method continues at step of where the HH processing module determines wireless link speed between the handheld computing unit and the extended computing unit. For example if the wireless link is in accordance with IEEE 802.11g it may provide a link speed of up to 54 Mega bits per second Mbps . The method continues at step where the HH processing module determines user applications and or files stored on the extended hard disk that require a link speed greater than the wireless link rate. For example an application may require 128 Mbps memory rate access. Note that while in the quasi docked mode applications and or files that have a link speed requirement less than the wireless link rate the HH processing module can access the EXT memory via the wireless link.

The method continues at step where the HH processing module provides a list of user applications and or files that require a link speed greater than the wireless link rate for display. The method continues at step where the HH processing module determines whether the user has selected one of the applications and or files on the list for transferring to the handheld memory . If not the method continues at step where the HH processing module facilitates the transition to the quasi docked mode.

When a selection of one of the user applications of the list of user applications is received the method continues at step where the HH processing module determines available handheld hard disk space. The method continues at step where the HH processing module determines the user applications and or files stored on the handheld hard disk. The method continues at step where the HH processing module determines whether the handheld hard disk has sufficient available memory to store the selected user application and or file. If yes the method continues at step where the HH processing module adds the selected application and or file to the HH memory and then proceeds to step .

When the handheld hard disk does not have sufficient available memory to store the selected user application and or file the method continues at step where the HH processing module provides an insufficient memory message for display. The method continues at step where the HH processing module determines whether it has received a swap request. If not the method continues at step where the HH processing module facilitates the change to the quasi docked mode.

If however a swap request is received the method continues at step and where the HH processing module swaps the selected user application on the handheld hard disk with the selected user application on the EXT memory such that the new selected user application is stored on the handheld hard disk and the other selected user application is now stored on the extended hard disk.

In this example the EXT memory is storing available selectable applications of a presentation application a PDF maker video game C and video game D. The EXT memory is further storing digital music file digital video file clients B P folders presentations A Z and documents XX.

In this example prior to transitioning to the remote mode the user may elect to change the applications and or files stored on the handheld computing unit. For example assume that the user is traveling to a client s site to make a presentation and desires only to bring the handheld computing unit. In the example of the presentation application and the files generated therefrom are stored on the EXT memory. As such the user may drag and click the presentation application and the desired presentation e.g. presentation A to the list of selected applications and selected files respectively. Note that the lists may be one or more folders and or other types of file systems. If the HH memory has enough available memory the presentation application and the selected presentation file are added to the HH memory. If not the user may swap out a selected application and or file to make remove for the desired file.

At step the HH processing module determines whether change in storage of an application is to occur. If yes the method continues at step where the HH processing module provides a message regarding a change of memory location regarding the application. The method continues at step where the HH processing module receives a response to the change storage location message. The method continues at step where the HH processing module provides a message prompt regarding whether the application storage type should change. The method continues at step where the HH processing module receives a response to the storage type message. The method continues at step where the HH processing module stores the application as a fixed or selectable application in the HH memory or in the EXT memory based on the responses.

At step the HH processing module determines whether a new file is to be stored in the computing device. If yes the method continues at step where the HH processing module provides a message regarding whether the new file is to be stored in the HH memory or the EXT memory. The method continues at step where the HH processing module receives a response to the storage message. The method continues at step where the HH processing module provides a message prompt regarding whether new file should be stored as a fixed file or a selectable file. The method continues at step where the HH processing module receives a response to the storage type message. The method continues at step where the HH processing module stores the new file as a fixed or selectable file in the HH memory or in the EXT memory based on the responses.

At step the HH processing module determines whether change in storage of a file is to occur. If yes the method continues at step where the HH processing module provides a message regarding a change of memory location regarding the file. The method continues at step where the HH processing module receives a response to the change storage location message. The method continues at step where the HH processing module provides a message prompt regarding whether the file storage type should change. The method continues at step where the HH processing module receives a response to the storage type message. The method continues at step where the HH processing module stores the file as a fixed or selectable file in the HH memory or in the EXT memory based on the responses.

Note that many of the examples and or embodiments were discussed with the HH processing module performing the corresponding function. In an alternative embodiment the EXT processing module may perform the function when the handheld processing module is in the docked mode. As another alternative embodiment the EXT processing module and the HH processing module function as co processing modules to perform the function when the handheld processing module is in the docked mode.

As may be used herein the terms substantially and approximately provides an industry accepted tolerance for its corresponding term and or relativity between items. Such an industry accepted tolerance ranges from less than one percent to fifty percent and corresponds to but is not limited to component values integrated circuit process variations temperature variations rise and fall times and or thermal noise. Such relativity between items ranges from a difference of a few percent to magnitude differences. As may also be used herein the term s coupled to and or coupling and or includes direct coupling between items and or indirect coupling between items via an intervening item e.g. an item includes but is not limited to a component an element a circuit and or a module where for indirect coupling the intervening item does not modify the information of a signal but may adjust its current level voltage level and or power level. As may further be used herein inferred coupling i.e. where one element is coupled to another element by inference includes direct and indirect coupling between two items in the same manner as coupled to . As may even further be used herein the term operable to indicates that an item includes one or more of power connections input s output s etc. to perform one or more its corresponding functions and may further include inferred coupling to one or more other items. As may still further be used herein the term associated with includes direct and or indirect coupling of separate items and or one item being embedded within another item. As may be used herein the term compares favorably indicates that a comparison between two or more items signals etc. provides a desired relationship. For example when the desired relationship is that signal has a greater magnitude than signal a favorable comparison may be achieved when the magnitude of signal is greater than that of signal or when the magnitude of signal is less than that of signal .

The present invention has also been described above with the aid of method steps illustrating the performance of specified functions and relationships thereof. The boundaries and sequence of these functional building blocks and method steps have been arbitrarily defined herein for convenience of description. Alternate boundaries and sequences can be defined so long as the specified functions and relationships are appropriately performed. Any such alternate boundaries or sequences are thus within the scope and spirit of the claimed invention.

The present invention has been described above with the aid of functional building blocks illustrating the performance of certain significant functions. The boundaries of these functional building blocks have been arbitrarily defined for convenience of description. Alternate boundaries could be defined as long as the certain significant functions are appropriately performed. Similarly flow diagram blocks may also have been arbitrarily defined herein to illustrate certain significant functionality. To the extent used the flow diagram block boundaries and sequence could have been defined otherwise and still perform the certain significant functionality. Such alternate definitions of both functional building blocks and flow diagram blocks and sequences are thus within the scope and spirit of the claimed invention. One of average skill in the art will also recognize that the functional building blocks and other illustrative blocks modules and components herein can be implemented as illustrated or by discrete components application specific integrated circuits processors executing appropriate software and the like or any combination thereof.

