---

title: System and method of data cognition incorporating autonomous security protection
abstract: Autonomous embedded data cognition enables data to perform real-time environmental configuration control, self-manage, perform analysis, determine its current situation, and evaluate behavior to respond accordingly. When created, security measures, and access controls are selected. Highly sensitive data can be extracted and substituted with creator label and/or functional representation. Data-to-data reasoning and analysis can be performed. The processing method comprises autonomous monitoring for a state change and analyzing the current user to determine if the instantiation should exist. If affirmed, the cognition engine automatically configures the computational environment in which it resides. If denied, environmental behavior is further analyzed for security problems or an erroneous situation. If detected, the creator is alerted and provided with incident information enabling remote creator control of the data. Cognitive data can decide to self-destruct mitigating risk of undesirable instantiations. Intelligent Agents, a comprehensive data structure, and intelligent document means are leveraged for implementation.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09038193&OS=09038193&RS=09038193
owner: Azos Al, LLC
number: 09038193
owner_city: Haymarket
owner_country: US
publication_date: 20080630
---
This application is a continuation in part application of co pending U.S. patent application Ser. No. 11 968 509 filed Jan. 2 2008 which is a continuation in part application of U.S. patent application Ser. No. 11 281 198 filed Nov. 16 2005 which is now abandoned the disclosures of all are hereby incorporated by reference in their entirety.

This patent document contains information and material subject to copyright protection. The copyright owner has no objection to the facsimile reproduction by anyone of the patent document or the patent disclosure as it appears in the U.S. Patent and Trademark Office files or records but otherwise reserves all copyright rights whatsoever.

Aspects of the present invention relate in general to a system and methodology for data cognition that incorporates autonomous security protection. More particularly the invention relates to system and methodology cognitive data that can perform analyses self manage secure its environment evaluate behavior detect security problems adapt alert the creator of an urgent situation and provide traceability.

Society is bombarded with malicious cybercrime. Personal and corporate data theft as well as data alteration plague our reliance on computer technology. The US Security and Intelligent Documents Business Unit reported an estimated 13.3 people become victims of document and identity fraud every 60 seconds with almost seven million victims per year. Botnets and hackers compromise networks to steal data. Cybercrime is difficult to track. A computer criminal can use open cyber cafe computers moving from server to server changing internet providers use false information to register and can steal service from unsecured wireless access points.

Once networks are penetrated security means to protect data such as encryption security protocols data access and authentication schemes are not enough. It is widely accepted that disk encryption protects sensitive data when misappropriated. However researchers at Princeton University demonstrated that even when encrypted the data can easily be read without physical access to the computer.

Combating cybercrime and cyber terrorism is of daunting concern among federal officials who ask when our networks are attacked and rendered useless how do we regain access to our data The Pentagon alone logged 1 300 successful intrusions in 2005. Chinese hackers penetrated US State Department computers of which hundreds had to be replaced or taken offline for months.

Company computer systems are protected by multiple layers of security including data encryption Digital Rights Management DRM and Enterprise Rights Management ERM . These server centric solutions require access management infrastructure such as enterprise or licensing server communication to authorize data access. However employee misconduct and unintentional actions like errors and omissions are the greatest cause of data security breaches. Criminal activity can and does occur inside corporations and agencies where the perpetrator e.g. an employee has ready access beyond the security measures in place. Recent high profile laptop thefts by insiders include a Veterans Administration computer containing information on 26 million veterans and a University of California Berkeley laptop with more than 98 000 graduate students data.

In addition emergency incidences that require first responders and other government agencies to resolve an incident at the national level as defined in the US Department of Homeland Security Nation Incident Management System NIMS may require classified data usage. Concerns in supporting NIMS include the loss of control of classified data instantiations that were shared during the incident.

Intelligent documents are interactive electronic documents that usually require web or network server access. Network reliance makes these solutions vulnerable to security breaches. Even if the user is authorized to access the data upon opening the data or document the computer environment in which it resides may not be secure. This scheme still relies on the network security and third party software such as virus protectors spyware and firewall protection. Hackers could breach the network third party solutions may not detect the latest cyber threat or the user may not have the latest security update.

It is very desirable to provide users with the capability of limiting their exposure to cybercrime data breaches and protect data where even if the perpetrator is successful in overcoming network security barriers and obtains an instantiation of the data it will be of no avail. Instead of relying on outside resources in application server centric architectures the data itself needs to be intelligent and autonomous. The data itself needs to evaluate its situation and employ cognition to advance to new degree of security and capabilities. Data needs to evaluate and configure its environment before it opens analyze behavior perform data to data relationship analysis and take necessary measures for self protection self destruction and in certain circumstances report back to its creator. If the data itself knows who it is where it is and how it should interact it can configure and monitor its computer environment to support its own needs. There exists a strong need for data that possesses cognition and this level of security. Data that can think for itself and reason based on its situation could greatly advance data security and become a major roadblock for cybercrime and cyberterrorism.

Accordingly one object of the present invention is to provide a system and method for cognitive data to make decisions autonomously and not rely on network internet or server resources to analyze and control the environment in which it resides whereby the data self protect self manage and if need be alert the data creator and self destruct.

Another object of the present invention is to provide autonomous data security severing reliance on network centric solutions systems administration network management and the creator to ensure the environment is free from unsafe conditions before accessing the data. Embedding autonomous security into the data itself mitigates potential security incidences and human errors.

Another object of the present invention is to provide a method and system for limiting the creator s exposure to undesired data breaches and malicious cyber activity that involves theft or unscrupulous means of obtaining data by implementing a new security means of data processing wherein autonomous security can be embedded in data comprising digital documents digital databases digital data files digital media and digital multimedia.

Another object of the present invention is to provide a method and system wherein only instantiations of data that the creator is aware of exists. Therefore the creator retains control of their data.

Another object of the present invention is remove direct access to highly sensitive data by substitution of meaningful label fields thus stripping out the highly sensitive data to further protect it from breaches and erroneous handling.

Another object of the present invention is to provide a method and system for data to data interrelationships behavior wherein data can analyze and reason among each other enabling analyses calculations and evaluations thus performing intelligent situational analyses making conditional determinations and presenting higher order data conclusions.

Another object of the present invention is to create a cognition engine to enable a foundation for data intelligence adaptivity and reasoning.

Another object of the present invention is to provide a method and system wherein the creator is alerted to an urgent or emergency situation wherein their data is compromised and or obtained maliciously. This alerting could resolve serious infractions enabling the creator to respond immediately to protect their privacy against situations such as identity theft through the misappropriation of data.

One more object of the invention is to provide a methodology and system in which data are self managed and self controlled depending on the level of security the data needs behavior evaluations the data performs time of day frequency accessed age access duration security and or sensitivity level and data field attributes according to the creator preferences.

In summary the disclosed method and system advantageously protects user s exposure to undesired and malicious activity by employing advanced control mechanisms implemented as an embedded data processing capability in one embodiment. The cognitive data methodology and system permits the creator to proactively take control of whom how when and if another party may possess their data. Advantageously the disclosed methodology transforms data from a passive file that can be obtained compromised and misused to a cognitive data instantiation that possesses environmental control and self management offering the creator protection security and advanced analyses. Upon the creator associating key words key aspects and or key data body elements with labels and or functions these can be leveraged for analyses. This capability can customize cognitive data per the creator s priorities and needs to keep sensitive data private. It also provides an intelligent means for unique configuration of the environment based on data security requirements in order to self protect while in use. Cognitive data are managed and controlled depending on the environment state security trust and the intelligence level of the particular cognitive data instantiation. The data can perform behavior analyses to support its needs and those of its creator or user. The creator is empowered to take control over and limit access to their private sensitive data. Artificial Intelligence is also implemented to create an adaptive data cognition capability.

A method and system is disclosed for the creation and processing of cognitive data. In particular the system is a framework that comprises a cognition engine cognitive data structure and supportive processes in a computational environment such as a computer. Creator preferences are selected from a plurality of cognition and security levels access and data management controls and permissions upon creation of cognitive data. A data stripper is used to extract and encrypt highly sensitive data which may be represented with associated data field labels. The associated data field labels and other data features can be leveraged to perform data to data evaluation and behavior analyses. The method comprises steps monitoring the computational environment for a change of state in an instantiation of cognitive data determining who originally created the data if the current user is the creator and if the user is permitted to possess the cognitive data instantiation. If the instantiation is permitted the security requirements are determined. Then the environment is configured accordingly finally granting the current user access to the data dependent on the creator controls and limitations. If the instantiation is not permitted the cognitive data performs self analysis and self management which comprises the data s level of insecurity behavior analysis data to data analysis and self destruction. When the cognitive data detects misappropriation it alerts the creator comprising the identity of the perpetrator and their environment enabling creator remote control of the cognitive data even after a breach situation.

The disclosed cognitive data system and method enables the creator of sensitive and private data to maintain control even after an intrusive breach and malicious activity. This invention offers data privacy security and protection to the creator. Advantageously the disclosed system and method enables consumers to regain control of their digitally stored data establishing privacy and autonomous data security at a new level by embedding these enabling capabilities. Along with these advantages the creator of the data can embed proactive preferences for data management and be alerted to another party acquiring their data and the status of said data. The creator can indicate if their data should self destruct thus eliminating the misappropriated data. This capability enables the creator to have remote control of their data. This invention provides users with retroactive means upon the event of a data breach or cyber attack.

For purposes of illustration only and not to limit generality the cognitive data system and method will be explained with reference to its use in a digital computer environment. The terms cognitive data and intelligent data are equivalent and may be interchanged herein. The states framework creation data and environment management and processing of cognitive data comprises one example of this application. The cognitive data system and method includes automated control logic that intelligently integrates data control and management functions yielding a proactive system with embedded user control preferences and data cognition. This cognitive data system and method possesses data which can be in one of at least three states 

The cognitive data system and method can exist in a plurality environments or domains. More particularly is a functional block diagram showing the overall relationship of the disclosed cognitive data system and method relative to environments or domains in which the cognitive data can reside and function. Data can exist in a creator environment which is the environment from which the data originated i.e. original instantiation . Data may also reside in the network environment e.g. an internet or network server . Data can reside in a storage environment e.g. media storage means hard drives DVDs CD ROMs disk drives media sticks etc. . This environment can be accessed either via the creator environment directly i.e. the media device port communication with the creator environment port via hardware or wirelessly or indirectly via a network environment e.g. a local network server or residing remotely via internet resources . Finally the data may reside in a receiving party s environment such as a receiving party s computer. Data can be received in the receiver environment via a storage environment means or via a network environment means.

A cognitive data framework is depicted in . This framework comprises an Cognitive Data Processor which enables the overall cognitive data processing creation cognition and control. The Cognitive Data Framework also comprises an Environment Processor to configure secure and control environment resources upon a state change of the cognitive data. The Environment Processor configures and controls ports devices resources and processes . Creator preferences and resources needed to create support and process cognitive data are provided and stored in the environment s Cognitive Data Resources and Memory Repository . The Cognitive Data Processor accesses the Data Structure Processor to create and access cognitive data .

For a functional processing example suppose a user of an environment decides to access the internet while a high level of security cognitive data file is active the Environment Processor would close the high security cognitive data file then open the ports and activate the processes necessary for the user to access the internet. Conversely these ports would be closed in order to re open the cognitive data file. Additionally the Cognitive Data Resources and Repository may comprise log information Intelligent Agents IA instantiations to be used and or associated with cognitive data stripped data i.e. data elements or fields extracted or stripped out of the main body of an cognitive data file and additional metadata. Access to the Cognitive Data Resources and Repository may be restricted to provide additional protection to secure the contents.

The Cognitive Data Processor components in this embodiment comprise a Security Level Process Intelligence Level Process Access Process Data Structure Process Stripper Process Environment Process and a cognition engine produce by a Multi Agent System MAS . The cognition engine is incorporated into the cognitive data file. A comprehensive data structure is incorporated into this processing. This embodiment produces a cognitive data set wherein a cognitive data file is produced along with an associated stripped cognitive data file containing highly sensitive information.

Further examination of the cognitive data as it relates to self protection management requires security level knowledge. depicts the Cognitive Data Processor for security level processing flow. A plurality of security levels can be implemented and supported. By way of example this embodiment obtains a security level setting from the cognitive data creator via a keyboard and or mouse inputs at a digital computer wherein the Cognitive Data Processor reads the desired user security level setting from a plurality of settings comprising low medium and high security level selection possibilities. Then the Environment Processor is called as the security level selection influences the environment settings required to access and activate cognitive data. For example the medium security level setting may require the environment close ports to the internet while the cognitive data file is in the active state.

By way of example for this embodiment the medium security level will incorporate the environmental settings for the low security level plus encrypt the resulting data. Encryption can be achieved via standardized commercially available software and or operating system calls. For example Microsoft s Windows Operating System s Data Protection Application Programming Interface DPAPI consists of a pair of function calls that provide Operating System level data protection through data encryption. Since the data protection is part of the Operating System securing data can be achieved without the need for any specific cryptographic code other than the function calls to DPAPI. The Cryptprotect Promptstruct is the prompt structure and the protected data structure holds the protected data. The two functions comprise the protect data function CryptProtectData and the unprotect function of CryptUnprotectData .

In this example the high security level selection incorporates all the security means of the medium level of security as well as strips the data. Data stripping will be discussed later. The security level selection is used as an input into the Environment Processor which configures the environment to the appropriate level of protection. Once the Environment Processor is invoked and returns this process ends .

The Cognitive Data Processor also provides a means for the creator to select how smart the cognitive data should be. depicts the Cognitive Data Processor intelligence level processing flow. A plurality of intelligence levels can be implemented. By way of example this embodiment obtains an intelligence level setting from the cognitive data creator via a keyboard and or mouse inputs wherein the Cognitive Data Processor reads the creator selected data intelligence level setting that ranges from somewhat smart smart and very smart . For the somewhat smart case the cognitive data is created leveraging resources from the Cognitive Data Resources and Repository . The smart data structure is defined later. If the smart level of intelligence is selected a more cognitive creation of the cognitive data structure is created e.g. additional data fields than those in the somewhat smart case are used . And finally if the very smart intelligence level is selected by the creator the maximum intelligence that can be achieved is created i.e. all the smart data structure fields are included . Once the cognitive data structure is created this process ends .

The Cognitive Data Processor also uses an Access Process that provides access to and or creation of cognitive data. depicts a flow diagram of the Cognitive Data Processor access process. This process commences upon being called from the Cognitive Data Processor MAS the MAS will be discussed later requesting user access to the cognitive data and passing the user request type argument . The Data Structure Processor is called to create and or access the cognitive data . The Intelligence Level Process is called and the intelligence level field is read . Then the Security Level Process is called to obtain the security level required to access or create the cognitive data which subsequently calls the Environment Processor to configure the computer environment to meet the needs of the security level read from the data structure. Now Access Process is ready to execute the user request type 507 dependent on the prior processes controls configuration and parameters and returns to the calling process .

The Data Structure Processor relies on the cognitive data file or record contents and structure. Primarily the cognitive data file or cognitive data record structure by way of example in this embodiment comprises the following fields metadata and elements. Greater data cognition can be achieved upon leveraging the additional data fields for the very smart and smart cases beyond the somewhat smart data fields. Fields that are marked with vs are included in the very smart intelligence level data structure fields marked with s are included in the smart intelligence level data structure and fields marked with ss are included in the somewhat smart intelligence level data structure wherein a subset of these data fields comprises a less cognitive data structure 

7. Resource Restrictions or User Requests Allowable Settings may also be dependent on Security Level Setting the higher the security level the greater the restrictions and or user settings preferences .

10. Intelligence Level Setting this field indicates appended support functions enabling intelligence vs s ss for all fields 

Note that the creator is uniquely identified at the first instantiation of the cognitive data creation. All other instantiations check the identity of the current user to determine if the original creator is the current user. This distinction is necessary to afford the original creator control of their cognitive data even from a remote environment. It should also be noted that a log is created by an event tracking means i.e. the Tracker Agent which will be discussed later . This log data is comprised of all the data structure fields except the body. These fields are needed to provide traceability of the cognitive data

The cognitive data file or cognitive data record set is implemented as an intelligent document . Intelligent document is a general term to describe electronic documents with more functionality than a page designed to emulate. For example the PDF from Adobe InfoPath from Microsoft Cardiff Software and XForms from W3C and the non programming solutions AjlDocs and Intelledox are intelligent documents and are based on using XML as a format. Intelligent documents are essentially interactive electronic documents. This capability is used to enable the cognitive data to respond to various state changes and events as well as interact with other processes disclosed herein.

To proceed the trust parameter is introduced. Trust is a relative confidence parameter or measure where increased trust infers a qualifier of security. Conversely the trust parameter can be decreased to infer risk. Additional user behavior cognition implemented beyond this embodiment could increase and decrease the trust parameter accordingly. Implementation of trust by way of this example comprises a scale of 0 through 10 with the following discrete indications 

The Data Structure Processor creates new cognitive data and activates existing cognitive data. depict the flow diagram of the Data Structure Process . This process commences with reading the header and identifier data record fields. Note that no data is present if this is a new cognitive data file i.e. prior to the creator s initial saving or writing of the media into the environment s memory . If the data is newly created i.e. not saved before then the data structure record is created trust is set to ten and the current environment is set to the creator s environment . For the case of a pre existing cognitive data file environmental data is compared to the pre recorded data fields to determine if the environment is the same . If the environment is determined to be the same trust is set to ten and the current environment is set to the creator environment . If the environment is determined to not be the creator environment then this is an instantiation of an existing cognitive data file in a non creator environment and the trust value from the stored record will be used. Once the environment and user creator identity has been established user authentication is performed using means such as user access passwords . Then a check is performed to determine if the security level is high . If the security level is high the Stripper process is called to access a highly sensitive associated cognitive data and further validate the user creator.

Processing continues in wherein the intelligence level is read from the prior input process . Processing for a plurality of intelligence levels commences with a check to determine if the intelligence level is very smart . If the intelligence level is very smart then the predetermined resources and data structure fields for this condition are applied to produce the cognitive data record . If the intelligence level is smart then the predetermined resources and data structure fields for this condition are applied to produce the cognitive data record . For the very smart and smart cases use restrictions and time event controls are obtained either from the stored data or the user creator . These input restriction preferences are used to manage and limit future use of the resulting data instantiation. And finally if the intelligence level is not very smart or smart then somewhat smart resources and data structure fields are used .

Cognitive level resources comprise additional functionality that incorporates how smart does the data need to be For example if the creator needs the cognitive data file set to exist only during a response to an emergency incident wherein the data is being shared across government agencies to support interoperability this data file could be constrained to self destruct i.e. delete the data upon the end of the interoperable communication session in which it is used. Another example may comprise an expiration time upon which the data file will self destruct or an archive time wherein the data will automatically self archive. Self archiving could relate to the cognitive data file zipping itself and moving into a specific memory archive location which could be memory in the Cognitive Data Repository .

Commencing with the step of set use restrictions comprises the creator indicating the resultant data file manipulation limitations such as limiting the number of times a cognitive data file can be opened inhibiting modification e.g. the subsequent user cannot edit the cognitive data or setting the duration which a data file can be viewed at any time. Processing continues to obtain the environmental resource controls and accesses dependent on security and intelligence levels to be employed. Then the cognitive data record set and associated resources are written into memory and the process returns to the calling procedure .

In this embodiment high security level requires the use of stripping out highly sensitive data from the document data and storing it in a separate cognitive data file. Samples of highly sensitive data could comprise identity numbers such as social security numbers names locations financial numbers pricing information etc. The Stripper process flow diagram is depicted in . Upon a call event a check is made to determine if the data file already exists or if a new data file is being created . If the data file is preexisting then another user authentication process is performed prior to opening the stripped data file to add another layer of security. If the data is new then this process obtains keyword entries from the creator via the keyboard and or mouse and writes said keywords and their associated labels into separate arrays to store into separate memory. This process is iterated until all keywords and their associated labels are entered into the array . Once completed the cognitive data record is created for the stripped key words and another cognitive data record is created for the associated labels . Then the related data names are recorded the related data names will be discussed later and processing ends .

The Stripper process incorporates an additional field for the creator to utilize called an associated label. As an example of the associated label consider the instance where the creator selects 000 000 000AA their bank account number to be stripped out of cognitive data being created. Along with this the creator associates the text field my bank account number as the associated label.

Using this data to data interrelationship permits the creator to achieve another order of security for highly sensitive data. Therefore when viewing the final document in this example the my bank account number would appear instead of 000 000 000AA in the resulting document. Further the data to data association capability can enable advanced processing.

The process flow for the Related Data Names fields can be supported with a process that requests the creator or user to supply names of other data files they wish to associate with the current cognitive data file if any. This logic can also be used for flagging keywords in the body or context of the data file structure. This utility can be used to support advanced data to data analyses. By way of example if a cognitive data instantiation contains financial fields from the prior day s revenue of a small business if the current cognitive data file is associated to this prior data file analyses could be enabled that calculates and derives financial conclusions.

The environment needs to be controlled to protect the data. This is accomplished using the Environment process flow diagram depicted in . The Environment process is responsible for configuring the environment to protect the cognitive data. Environment controls and settings depend on the security level required while the cognitive data is in the active state. This process begins by obtaining the security level from the Cognitive Data Processor . If the security level is high then the high Environment Restriction conditions are invoked. Restrictions to unnecessary resources are greatest for this level of security. The high security level in this example comprises 

If the security level is medium then the medium environmental restrictions are used. The medium level is not as constrained as the high level. More processes may be permitted to run in the background e.g. email and there may be more port access without the need to first close the data file e.g. internet access . Finally if the security level is low then port control access could be permitted wherein slight access to an internet connect limitations could be configured e.g. only trusted sites can be visited while the cognitive data is in an active state . Once environmental restrictions are determined based on the security level the environment ports and accesses e.g. remote access are set accordingly. Then processes controls and resource controls are configured. The environment is now secured for the active cognitive data to be accessed by the user creator and this process ends .

Note that schemes such as port knocking may be incorporated to further protect the environment while the cognitive data is in an active state. Port knocking is used to prevent an attacker from scanning a system for potentially exploitable services thus protecting ports so they will appear closed.

The Cognitive Data Processor in this embodiment is implemented augmenting the previously described processes with a Multi Agent System MAS comprising Intelligent Agents lAs . depicts fundamental elements of a simple IA wherein the Intelligent Agent program is a function that implements the agent mapping from Percepts into Actions . Environment Precepts are fed into the IA s Sensors . The Status is what the world is like now for the IA. Given the said Status and applying the IA s Rules yields specific Actions taken by the IA. In a simple case by finding a Rule that matches the current situation as defined by the percept perform the Action associated with that particular Rule . Actions are the inputs into Actuators resulting in Actions taken for the environment of the IA. More complex IAs includes learning agents that may also be employed. The overall architecture of the Cognitive Data Framework in this embodiment is supported by a collection of these specialized Agents or IAs. Cognition is realized as a set of representations and models that interchange information between these IAs and representations. Each unit functions as a cognitive mechanism to achieve a particular aspect of intelligence such as upon perception of an event select appropriate action s etc.

The MAS for this cognitive data invention is depicted in . A primary purpose of the MAS is to ensure the cognitive data file itself is not compromised. This MAS is comprised of a plurality of IAs that reside in the cognitive data record and or set of records. The Watcher IA monitors environment actions as they relate to access and manipulation of cognitive data the cognitive data repository and memory. The Tracker IA logs all events that transpire with the cognitive data. The Tracker also interfaces with the Behavior IA . The Behavior IA performs behavior analysis wherein behavior analysis can be of environment events user behavior data to data behavior etc. The Health IA determines the state of health of the cognitive data file set and controls the existence of the particular instantiation of cognitive data. The Snitcher IA gathers information and reports back to the cognitive data creator. The Snitcher enables creator control of their data even in a compromised situation. The Watcher Agent Tracker Agent Behavior Agent Health Agent and Snitcher Agent are embedded IAs that co exist in the same physical file or record as the Cognitive Data Structure . The Approver IA reports to the creator and or user. Along with reporting it also provides the means to interact with the said creator and or user to manage and control the associated cognitive data.

Assuming an initial dormant state and upon the user selection of the cognitive data file e.g. open the cognitive data file selection detected via a click of the mouse input device the status of the cognitive data file is state change is detected and the status is changed to active . The IA s Action upon the cognitive data file becoming active is to call the Tracker IA which will log this event . The following Rule applies 

The results of this function provide a means to an alert to the user to a move data request type. Upon processing returning to the Watcher Agent process the environment resources that accessed the cognitive data need to have the temporary memory wiped or written over 1208 so that stored highly sensitive data such as access codes and keys thus completing the process .

Primarily the Approver IA performs authentication checks and accommodates creator action approvals. Precepts come from the Snitcher and the Watcher . The cognitive data file or cognitive data record fields except the actual data body comprise the Sensors i.e. metadata and their values constitute the Status . Actions taken are dependent on the Rules which can comprise the following 

For the case wherein the user identity is not the same as the creator identity then the trust field is used. Trust is the measure in which the Approver can determine if an cognitive data record set instantiation is acceptable to the creator. This gives control to the creator of the cognitive data set. If the current user of the cognitive data is not the creator then a check is made to determine if trust is equal to ten . If trust is equal to ten then processing commences to determine if the user request type is permitted as already explained. If trust is not equal to ten then the Health Agent is called ending the process .

The purpose of the Snitcher is to report to the creator of the cognitive data file set. By way of example examine the case wherein the cognitive data record is resident in a receiver environment . Then conditions may exist where the Snitcher infers a breach. This event needs to be reported to the creator. This way the creator can become apprised as to who has a copy of their cognitive data file the receiver environment and user identity obtain a copy of the events log what the receiving party has done with the data and influence the health of the particular instantiation cognitive data record.

With this in mind depicting the flow diagram for the Creator s Approver Agent process upon receiving inputs from an instantiation of the Snitcher Agent precept is examined. Note that this Snitcher Agent does not initially reside in the creator s environment but with the instantiation being processed. Processing commences upon reception of a Snitcher Call Event . The Approver reads the user identity data the health data and the Tracker event log data . Note the Tracker event log data will be appended if the size becomes too large to embed in the Snitcher. The Snitcher size needs to be feasible for transmission. The creator may be alerted via a message printed to the creator s screen that another instantiation of the cognitive data file exists wherein the creator is presented the option to indicate this condition is acceptable . Another method for this processing step may be to log and record approved users of the cognitive data set so the creator does not have to physically process this acknowledgement. If yes then the Snitcher is returned with trust set equal to ten and the process ends . If the creator selects the option of further examining the incident then the log information and record data are displayed for the creator to examine . Once examined the creator is again presented with the option to indicate acceptance or not . If the creator determines that the instantiation of the cognitive data file possessed by the user reported is not permissible then trust is set to zero in the Snitcher and this value is returned ending the process .

The Snitcher Agent precepts are received from Approver Agent and Health Agent . The Snitcher Agent reports back to the creator Approver Agent instantiation upon detection the cognitive data set residing in a non creator environment. The said Snitcher Agent instantiation reporting back to the creator

Approver Agent provides a means of control for the creator for events such as misappropriated or breached data. This gives the creator a means to learn that the said data is misappropriated obtain the identity of the misappropriator and a means to attempt removal of the said breached data. is a process flow diagram of the Snitcher Agent for the Approver Agent precept. Processing commences upon the event of the Snitcher Agent being called by the Approver Agent . For the case of trust equal to zero the Health Agent is called to delete the instantiation of the cognitive data. For the case where trust equal ten the Health Agent is called accepting the instantiation from the creator. This event of the Snitcher contacting the creator may be removed from the tracking log then the process is terminated .

Note that the Snitcher Agent needs to be transmitted between the creator environment and a non creator environment where the instantiation of the cognitive data set resides. This can be accomplished by opening the network port of the current environment and sending the Snitcher to the creator environment network identity internet protocol address and computer identity. The Snitcher Agent possesses the Tracking Agent log data that can be leveraged along with the last known Snitcher environment readings just prior to Snitcher transmission to return the Snitcher back to the non creator environment.

Next the Snitcher Agent for the Health Agent precept process flow diagram in is examined. Processing commences upon a Health Agent call event. For the case of trust equal to zero the Approver Agent is called to notify the creator that the misappropriated instantiation of the cognitive data has been deleted and the process ends . For the case where trust equal five the Approver Agent is called to determine if the cognitive data instantiation is acceptable to the creator. A check is made to determine if a response is received from the creator . If the creator responds the trust value provided in the creator response is read and the Health Agent is called passing along the trust value for further processing. If the creator has not responded within a specified period of time then the user request is denied and the process is terminated .

Note that additional processing may be implemented for the step of receiving an acknowledgement from the creator such as inserting a timer in the process. Said timers could be used in such a way as to continue the processing after a specified time lapse upon lack of creator acknowledgement reception. Additionally the creator environment could implement a log of user identities that are permitted to possess an instantiation of the cognitive data to automate this process.

The Health Agent determines if the data is secure and protected or in a compromised situation. It can also determine the life of the data and cause the cognitive data to self destruct. This is accomplished by monitoring the trust value and processing time functions based on restrictions decided by the creator. depicts a flow diagram for the Health Agent . Processing commences upon receiving a call from a precept with a value for the trust parameter .

The precepts for the Health Agent comprise the Snitcher Tracker and Approver. A check is performed to determine if the trust value is equal to ten . If the trust value is equal to ten then the data timer is checked against the current date time. Another check is made to determine if the cognitive data has expired . If expired the data is deleted and the process ends . If the not expired then a call is made to the Access Process passing the user request type upon which this process ends . Note that this additional cognition is achieved for the smart and very smart cases wherein the life of the data can be determined based on an event or time.

The Tracker Agent records all log data for the cognitive data file thus maintaining an event history of all events that occur with the cognitive data file. This is extremely valuable upon a security breach as it enables traceability. An advanced implementation of the Tracker could include reporting incidences in real time to security or other third party software such as virus or firewall protection software.

Advanced cognition implementations can be incorporated into this invention. One valuable capability is to provide behavior cognition. An implementation may possess multiple Behavior Agents wherein these agents support particular behavior analysis. By way of example user behavior cognition can be implemented wherein the cognition can make an inference regarding appropriate use of the data. This capability could aid in detection of employee misconduct and unintentional actions that are the greatest cause of data security breaches. This capability could thus help the user and the enterprise maintain security inside the enterprise.

Consider an enterprise employee that uses a notebook computer to work on the premises and at various remote locations. Begin by examining the flow diagram for the Tracker Agent with the Watcher IA precept in . Processing commences upon receiving a call from the Watcher Agent to log an event upon which a new entry into the cognitive data record log fields is recorded along with the user virtual log data fields . The Behavior Agent is called which will be discussed later . Recall that the log data is comprised of all the data structure fields except the body field. In this example the user virtual log data fields records usage of an enterprise notebook computer relative to the employee s work schedule and any a priori data. Virtual log fields are as defined below 

The Behavior IA process flow diagram is depicted in determines if the user i.e. an enterprise employee can gain access to user requested cognitive data from an enterprise environment. Assume enterprise security policy applies the following rules 

Another approach to software implementation is to create an adaptive capability adaptive cognitive data by employing Artificial Intelligence AI techniques and algorithms. These implementations replace or augment von Neumann processing disclosed earlier. Additional functionality and enhancements can be implemented based on how intelligent the creator desires the cognitive data to become how adaptive does the cognitive data need to be and what additional knowledge should the cognitive data have to meet the creator s needs.

For those skilled at the art AI can be implemented throughout the MAS. By way of example consider the determination of trust wherein the cognitive data reasons do I trust the user This adaptive reasoning can be implemented using a discipline of AI called Fuzzy Inference FI logic which possesses the antecedents of the user s work schedule the user s current environment location and the user s historical use of the cognitive data instantiation. The following parameters are needed to use the FI system 

The FI system can process these inputs to determine the level of trust wherein trust is the output of the FI system. The FI crisp output values for trust are X 0 5 10 complying with the logic disclosed herein.

The FI membership functions are provided in and . The degree of membership of these functions range from Y 0 1 . In the work schedule membership classifies the membership functions based on the user s work hours i.e. time of day . The function from 12 a.m. until around 6 a.m. classifies a not normal work time early in the day around 7 a.m. until around 6 p.m. is classified as normal work time and after around 6 p.m. is considered not a normal work time late in the day .

A check is made to determine if the current environment identification is located in the enterprise facility network . If the identity is affirmed to be at the enterprise then the user location value is set to 10 . If not another check is made to determine if the current environment is in the event log . If the event log produced zero events of the user s current environment then the user location is set to zero indicating that the environment is not known to the data. Otherwise the sum total of times the user accessed the data in their current environment is set .

The time of day user location and user frequency are the crisp inputs into the fuzzification process wherein the FI membership functions are generated. Then the FI Rules are applied . The rule that yields the strongest result is considered the consequential functional operator determining the value for trust . Once the strongest rule is applied the crisp value for trust is obtained and the process ends .

For the purpose of discussion and not for the purpose of limitation depicts a high level hardware implementation of the cognitive data system. A digital computational system employs a processing unit . Utilization of a processing unit for this type of application is a typical solution implementation. However the functions indicated in can be integrated together or packaged separately in numerous configurations. These configurations can range from microcontroller units to Personal Computer systems enterprise workstations servers gateways network systems and or other hardware that accepts and processes data.

With reference to one exemplary system for implementing the disclosed embodiment includes a computing device such as a digital computing device . The basic configuration of the computing device comprises at least one processing unit removable memory local fixed memory which comprises

Random Access Memory RAM and Read Only Memory ROM and hard drive system memory. System memory configurations vary but typically include the memory elements stated. The computing device also includes an operating system and a plurality of applications and processes . The computing device may also comprise input output I O device s such as keyboard mouse pen and voice input device touch input device a display speakers printer etc. Other digital devices interface with the computing device via the computing device communication ports . These additional data storage devices removable and or non removable may comprise for example magnetic disks or optical disks printers modems etc. Computer storage media comprises but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by computing device . Any such computer storage media may be part of device .

To clearly describe the hardware support functions required for the cognitive data system of the following example of the steps performed upon utilizing the cognitive data framework is explained along with details as they relate to the hardware. The cognitive data system and method comprises software coded according to the flow diagrams of . This software code is stored in memory within controller in one embodiment. When executed by processing unit this software causes the processing unit to implement the steps set forth in the flow diagrams of . Data is accessed and stored utilizing the removable memory and or local fixed memory to execute cognitive data framework application software as well as other applications and processes e.g. other software applications such as Windows Explorer Microsoft Office software etc. . The cognitive data framework may be implemented as a standalone software application or be a plug in . If the cognitive data framework is a plug in the capability would be accessed via other third party software applications . For example if the cognitive data framework application is a plug in for the Microsoft Word processing product it could provide the functionality disclosed herein offering an cognitive data option to the user.

The operating system translates the software into executable code that causes hardware of the system and other devices to respond and function in accordance to said executable code Other digital devices connect to the system via communication ports using hardware or wirelessly. The cognitive data framework software monitors the hardware input output ports such as a keyboard and or mouse for creator or user selection. Upon receiving a creator or user request from an input output device the cognitive data framework software is invoked. The RAM ROM provides the memory necessary to support the load of the executable code and memory to support the real time processing. The processing unit executing the cognitive data framework code accesses the data storage memory to support software executions. In one embodiment the cognitive data resources and repository is used to store cognitive data and resources as a section of memory . Upon sensing creator or user selection the state of cognitive data stored in memory or other digital device memory capabilities changes from dormant to active or moving . The computational environment configuration is compared and configured in accordance to the configuration indicated in the stored cognitive data record fields and metadata to support the intelligence level and security level indicated by said stored cognitive data. To achieve these levels of security and intelligence resources may be shut down or activated accordingly e.g. the internet port may be shut down to achieve the indicated security level required to activate and access the stored cognitive data file resources . Ports are subsequently managed i.e. opened and closed to transmit software from one environment to another as is the case for transmission of the Snitcher software from a receiving environment to the creator environment and back thus providing remote control for the creator of an instantiation of their data in a non creator environment.

In summary the disclosed method and system advantageously protects user s exposure to undesired and malicious activity by employing advanced control mechanisms implemented at or near the computational device in one embodiment. The cognitive data methodology and system permits the consumer to proactively take control of whom how when and if another party may possess their data. Advantageously the disclosed methodology transforms data from a passive file that can be obtained compromised and misused by anyone to an adaptive cognizant self controllable data file that enables self management offering the creator protection and security. This capability can customize cognitive data per the creator s priorities. It also provides an intelligent means for unique configuration of the environment in order to protect the data while in use. Cognitive data are managed and controlled depending on the environment state security health and the intelligence level of the particular cognitive data instantiation. In this manner the user is empowered to take control over and limit access to their data.

While only certain preferred features of the invention have been shown by way of illustration many modifications and changes will occur to those skilled in the art. For example another embodiment may only process select or stripped data as cognitive data while all other data may not be considered as necessary to become intelligent. This invention is intended to provide the foundation enabler for data cognition. Other advanced processes can be performed leveraging the disclosed cognition capability which may comprise additional IAs to increase cognition features. It is therefore to be understood that the present claims are intended to cover all such modifications and changes which fall within the true spirit of the invention.

