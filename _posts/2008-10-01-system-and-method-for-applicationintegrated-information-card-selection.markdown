---

title: System and method for application-integrated information card selection
abstract: A selector daemon can run in the background of a computer. Applications that are capable of processing information cards directly, without requiring the use of a card selector, can request the selector daemon to list information cards that satisfy security policy. Upon receiving such a request, selector daemon can determine the information cards available on the computer that satisfy the security policy, and can identify these information cards to the requesting application. The applications can then use the identified information cards in any manner desired, without having to use a card selector: for example, by requesting a security token based on one of the information cards directly from an identity provider.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08468576&OS=08468576&RS=08468576
owner: Apple Inc.
number: 08468576
owner_city: Cupertino
owner_country: US
publication_date: 20081001
---
This application is a continuation in part of co pending U.S. patent application Ser. No. 12 029 373 titled VISUAL AND NON VISUAL CUES FOR CONVEYING STATE OF INFORMATION CARDS ELECTRONIC WALLETS AND KEYRINGS filed Feb. 11 2008 which is herein incorporated by reference for all purposes.

This application is related to co pending U.S. patent application Ser. No. 11 843 572 titled PERFORMING A BUSINESS TRANSACTION WITHOUT DISCLOSING SENSITIVE IDENTITY INFORMATION TO A RELYING PARTY filed Aug. 22 2007 co pending U.S. patent application Ser. No. 11 843 638 titled POLICY BASED AUDITING OF IDENTITY CREDENTIAL DISCLOSURE BY A SECURE TOKEN SERVICE filed Aug. 22 2007 and co pending U.S. patent application Ser. No. 11 843 640 titled FRAMEWORK AND TECHNOLOGY TO ENABLE THE PORTABILITY OF INFORMATION CARDS filed Aug. 22 2007 all of which are herein incorporated by reference for all purposes and all of which claim the benefit of U.S. Provisional Patent Application Ser. No. 60 895 312 filed Mar. 16 2007 U.S. Provisional Patent Application Ser. No. 60 895 316 filed Mar. 16 2007 and U.S. Provisional Patent Application Ser. No. 60 895 325 filed Mar. 16 2007 all of which are herein incorporated by reference for all purposes.

This application is also related to co pending U.S. patent application Ser. No. 12 019 104 titled PROCESSING HTML EXTENSIONS TO ENABLE SUPPORT OF INFORMATION CARDS BY A RELYING PARTY filed Jan. 24 2008 which claims the benefit of U.S. Provisional Patent Application Ser. No. 60 973 679 filed Sep. 19 2007 both of which are herein incorporated by reference for all purposes.

This application is also related to co pending U.S. patent application Ser. No. 11 843 591 titled CREDENTIAL CATEGORIZATION filed Aug. 22 2007 co pending U.S. patent application Ser. No. 11 843 608 titled CHAINING INFORMATION CARD SELECTORS filed Aug. 22 2007 co pending U.S. patent application Ser. No. 12 026 775 titled METHODS FOR SETTING AND CHANGING THE USER CREDENTIAL IN INFORMATION CARDS filed Feb. 6 2008 co pending U.S. patent application Ser. No. 12 030 363 titled INFO CARD SELECTOR RECEPTION OF IDENTITY PROVIDER BASED DATA PERTAINING TO INFO CARDS filed Feb. 12 2008 co pending U.S. patent application Ser. No. 12 038 674 titled SYSTEM AND METHOD FOR SECURE ACCOUNT RESET UTILIZING INFORMATION CARDS filed Feb. 27 2008 co pending U.S. patent application Ser. No. 12 042 205 titled PRIVATELY SHARING RELYING PARTY REPUTATION WITH INFORMATION CARD SELECTORS filed Mar. 4 2008 co pending U.S. patent application Ser. No. 12 044 816 titled SYSTEM AND METHOD FOR USING WORKFLOWS WITH INFORMATION CARDS filed Mar. 7 2008 co pending U.S. patent application Ser. No. 12 054 137 titled CARDSPACE HISTORY VALIDATOR filed Mar. 24 2009 co pending U.S. patent application Ser. No. 12 054 774 titled CLAIM CATEGORY HANDLING filed Mar. 25 2008 co pending U.S. patent application Ser. No. 12 108 805 titled RESTRICTED USE INFORMATION CARDS filed Apr. 24 2008 co pending U.S. patent application Ser. No. 12 111 874 titled REMOTABLE INFORMATION CARDS filed Apr. 29 2008 co pending U.S. patent application Ser. No. 12 112 772 titled DYNAMIC INFORMATION CARD RENDERING filed Apr. 30 2008 co pending U.S. patent application Ser. No. 12 170 384 titled NON INTERACTIVE INFORMATION CARD TOKEN GENERATION filed Jul. 9 2008 and co pending U.S. patent application Ser. No. 12 184 155 titled SITE SPECIFIC CREDENTIAL GENERATION USING INFORMATION CARDS filed Jul. 31 2008 all of which are herein incorporated by reference for all purposes.

This invention pertains to using information cards and more particularly to permitting a user to utilize information cards stored on a computer system without having to interface with the card selector.

When a user interacts with sites on the Internet hereafter referred to as service providers or relying parties the service provider often expects to know something about the user that is requesting the services of the provider. The typical approach for a service provider is to require the user to log into or authenticate to the service provider s computer system. But this approach while satisfactory for the service provider is less than ideal to the user. First the user must remember a username and password for each service provider who expects such information. Given that different computer systems impose different requirements and the possibility that another user might have chosen the same username the user might be unable to use the same username password combination on each such computer system. There is also the related problem that if the user uses the same username password combination on multiple computer systems someone who hacks one such computer system would be able to access other such computer systems. Second the user has no control over how the service provider uses the information it stores. If the service provider uses the stored information in a way the user does not want the user has relatively little ability to prevent such abuse or recourse after the fact.

To address this problem new systems have been developed that allow the user a measure of control over the information stored about the user. Windows CardSpace sometimes called CardSpace is a Microsoft implementation of an identity meta system that offers a solution to this problem. Microsoft Windows and CardSpace are either registered trademarks or trademarks of Microsoft Corporation in the United States and or other countries. A user can store identity information with an identity provider the user trusts. When a service provider wants some information about the user the user can control the release of information stored with the identity provider to the service provider. The user can then use the offered services that required the identity information.

While this system simplifies the management of information used to satisfy the requests of service providers there are potential problems. For example when a user visits a relying party on a website that requests a security token to proceed the user is prompted to select an information card by the card selector. From the user s perspective the card selector may seem to appear on the user s computer screen unexpectedly and without warning. If the user is not experienced with how the information card system operates the user might think the card selector appeared on the screen by mistake and might close the card selector instead of selecting an information card. Further if the user is running a standalone non browser application such as an e mail management application the appearance of a foreign card selector which appears very different from the standalone application being run can result in an equally if not more awkward user experience. This could lead to the browser indicating that the relying party refused to let the user continue. Again if the user is inexperienced the user might attribute his or her failure to access the resource of the relying party on the relying party rather than on the user s inexperience with the information card system.

In an embodiment of the invention a computer includes a memory an application and a selector daemon. The selector daemon can receive a security policy from the application and can identify information cards that satisfy the security policy which can be used with the application as desired.

The foregoing and other features objects and advantages of the invention will become more readily apparent from the following detailed description which proceeds with reference to the accompanying drawings.

Before explaining the invention it is important to understand the context of the invention. shows a sequence of communications between a client a relying party and an identity provider. For simplicity each party the client the relying party and the identity provider can be referred to by their machines. Actions attributed to each party are taken by that party s machine except where the context indicates the actions are taken by the actual party.

In computer system the client is shown as including computer monitor keyboard and mouse . A person skilled in the art will recognize that other components can be included with computer system for example other input output devices such as a printer. In addition does not show some of the conventional internal components of computer system for example a central processing unit memory storage etc. Although not shown in a person skilled in the art will recognize that computer system can interact with other computer systems such as relying party and identity provider either directly or over a network not shown in of any type. Finally although shows computer system as a conventional desktop computer a person skilled in the art will recognize that computer system can be any type of machine or computing device capable of providing the services attributed herein to computer system including for example a laptop computer a personal digital assistant PDA or a cellular telephone.

Relying party is a machine managed by a party that relies in some way on the identity of the user of computer system . The operator of relying party can be any type of relying party. For example the operator of relying party can be a merchant running a business on a website. Or the operator of relying party can be an entity that offers assistance on some matter to registered parties. Relying party is so named because it relies on establishing some identifying information about the user.

Identity provider on the other hand is managed by a party responsible for providing identity information or other such information about the user for consumption by the relying party. Depending on the type of information identity provider stores for a user a single user might store identifying information with a number of different identity providers any of which might be able to satisfy the request of the relying party. For example identity provider might be a governmental agency responsible for storing information generated by the government such as a driver s license number or a social security number. Or identity provider might be a third party that is in the business of managing identity information on behalf of users.

The conventional methodology of releasing identity information can be found in a number of sources. One such source is Microsoft Corporation which has published a document entitled Introducing Windows CardSpace which is hereby incorporated by reference. To summarize the operation of Windows CardSpace when a user wants to access some data from relying party computer system requests the security policy of relying party as shown in communication which is returned in communication as security policy . Security policy is a summary of the information relying party needs how the information should be formatted and so on.

Once computer system has security policy computer system can identify which information cards will satisfy security policy . In this description it will be understood that the information does not directly satisfy the security policy but rather that the information card can be used to generate a security token which includes the information requested as part of the security policy. Phrases such as the information card satisfies the security policy are a shorthand way of saying that a security token generated using the information card will include the information requested in the security policy. Different security policies might result in different information cards being usable. For example if relying party simply needs a user s e mail address the information cards that will satisfy this security policy will be different from the information cards that satisfy a security policy requesting the user s full name mailing address and social security number. The user can then select an information card that satisfies security policy .

Once the user has selected an acceptable information card computer system uses the selected information card to transmit a request for a security token from identity provider as shown in communication . This request can identify the data to be included in the security token the credential that identifies the user and other data the identity provider needs to generate the security token. Identity provider returns security token as shown in communication . Security token includes a number of claims or pieces of information that include the data the user wants to release to the relying party. Security token is usually encrypted in some manner and perhaps signed and or time stamped by identity provider so that relying party can be certain that the security token originated with identity provider as opposed to being spoofed by someone intent on defrauding relying party . Computer system then forwards security token to relying party as shown in communication .

In addition the selected information card can be a self issued information card that is an information card issued not by an identity provider but by computer system itself. In that case identity provider effectively becomes part of computer system and computer system generates security token .

In this model a person skilled in the art will recognize that because all information flows through computer system the user has a measure of control over the release of the user s identity information. Relying party only receives the information the user wants relying party to have and does not store that information on behalf of the user although it would be possible for relying party to store the information in security token there is no effective way to prevent such an act .

The problem with this model is as noted above that the card selector can appear unexpectedly on monitor for example if the user is interacting with relying party using a browser. The unexpected appearance of the card selector can confuse a user complicating the experience of using the information card. Even for users that are familiar with card selectors the experience of having a card selector pop up all the time may be a less than desirable user interface U I experience. It is desirable to provide U I experiences that are more in the flow and preserve the look and feel and U I style of the application the user is running.

The problem described above the card selector appearing unexpectedly and interfering with the user s experience of an application is but an example of a more general problem trying to make the user s information cards a form of an electronic wallet available at all times so that the user can select an information card and potentially use it with any application. The user experience can be enhanced further if the user can select an information card up front which can be used with any information card enabled application either Web based or standalone . If the user could select an information card in advance the card selector would not need to interfere with the user experience a security token could be generated automatically without the card selector prompting the user to select an information card.

Now that the problem how to simplify the user s experience when using information cards is understood embodiments of the invention can be explained. shows the client of equipped to permit the use of information cards without invoking the card selector according to an embodiment of the invention. In client includes card selector application and selector daemon . Card selector enables the user of the client to select a desired information card such as information card to use in a particular transaction in the prior art embodiments and also enables management of information cards. And as discussed above information card can be a personal information card where all the information is provided by the user and is locally asserted to be valid or a managed information card where the information is stored on an identity provider and is asserted to be valid by the identity provider. But card selector can complicate the use of the information card system when application needs a security token generated based on an information card.

Application can be any application that can need a security token generated based on an information card. For example application can be a browser enabling a user to visit a web site offered by a relying party. Or application can be a plug in operating within a browser providing the user with some functionality that enhances the browsing experience such as offering the user access to information in a database. Or application can be a standalone application running on client for example an e mail management program that requires the user to authenticate himself or herself before the user is granted access to his or her e mail account. A person skilled in the art will recognize other possible forms application can take.

Application normally resides in memory of client . Memory represents the storage on client handling information currently being used as opposed to a long term storage such as a hard drive where an application not currently in use might be stored.

Selector daemon also normally residing in memory offers application the ability to interact with information cards without needing to invoke card selector . As discussed below with reference to selector daemon can identify information cards that satisfy a particular security policy and can identify the information cards to application . This enables application to present information cards to the user using the look and feel and style that is consistent with the U I experience of application . It also enables application to request a security token from an identity provider directly without needing card selector to provide that functionality and return the security token to application . Selector daemon can run in the background of client and can be represented as an icon on the taskbar of client .

Focus detector detects when an application has the focus on the computer. When an application has the focus selector daemon can access the associated security policy using list of associations . And once the associated security policy is identified selector daemon can use information card identifier to identify information cards that satisfy the security policy associated with the application which currently has the focus. As will be discussed below with reference to selector daemon does not need to use focus detector as selector daemon can receive the security policy in a message from an application via receiver .

Finally information card presenter can present the information cards identified as satisfying the security policy to a party that can use that information. In one embodiment the application can transmit a message as discussed below with reference to requesting selector daemon to identify all information cards available on the computer that satisfy a given security policy. Information card presenter can then present the identified information cards to the application. The application can then use the identified information cards in any desired manner. For example the application can present the information cards to the user in a format that is consistent with the operation of the application effectively causing the application to act as a substitute card selector . Upon receiving from the user a selection of one of the identified information cards the application can then request a security token from the identity provider that manages the selected information card or if the selected information card is a personal information card the application can request the security token be generated by the selector daemon or generate the security token internally . If the selected information card requires the user to provide some form of authentication before the security token can be generated the application can request this authentication from the user and provide this authentication to the identity provider.

In another embodiment the application can request the security token from the card selector. But in issuing this request the application can identify the information card to be used rather than providing the security policy. The request of the card selector to provide the security token can also include the security policy to limit the information included in the security token. In this manner the user interface of the card selector prompting the user to select an information card to use can be skipped simplifying the experience for the user.

In yet another embodiment the application can request the security token from the card selector or the selector daemon without specifying an individual information card. But in issuing this request the application can provide a sufficiently specific security policy so that the selector can identify a single information card to be used. Similar to above description the user interface of the card selector can be skipped. In this case the application does not need to have specific knowledge of the information card s available on the client.

A person skilled in the art will recognize that one variation of this embodiment involves an application that does not itself use the security token directly but rather provides the security token to another application. In such a variation the application is essentially acting as an alternative card selector perhaps providing an interface that is easier for the user to follow than that provided by the standard card selector.

In another embodiment selector daemon can track which application has the focus using focus detector . Then assuming that there is a security policy associated with the application that has focus information card presenter can present to the user a list of information cards that satisfy the security policy associated with the application that currently has the focus. As the application with the focus changes selector daemon can update the information cards that satisfy the security policy these updates can then be presented to the user via information card presenter .

Once the user knows which information cards can satisfy the security policy of the application the user can select an information card for use with the application. For example the user can drag and drop an information card from those presented by information card presenter to the application. This causes selector daemon to transmit to the application an identifier for the selected information card. The application can then use the selected information card as desired for example by transmitting to selector daemon a request for a security token based on the selected information card. Selector daemon can then transmit the request for the security token to an identity provider. Alternatively the application can transmit the request for the security token based on the selected information card from the card selector or directly to the identity provider.

The above discussion describes information card presenter identifying the available information cards to the application. But information card presenter can also present such information to the user. When information card presenter is presenting information cards to the user information card presenter can distinguish between information cards that satisfy the security policy and those that do not in any desired manner. In one embodiment information card presenter only presents to the user information cards that satisfy the security policy information cards that do not satisfy the security policy are not presented to the user at all. For example if information card presenter maintains a window showing the available information cards this window can include only those information cards that satisfy the security policy and omit those information cards that do not satisfy the security policy. In another embodiment information card presenter can present to the user all available information cards but distinguish between those that satisfy the security policy and those that do not for example by graying out the information cards that do not satisfy the security policy or by bolding those information cards that satisfy the security policy. By distinguishing between information cards that satisfy the security policy and those that do not the user can easily select an information card that can be used to generate a security token that will satisfy the security policy.

While all of the above description suggests that information card presenter is responsible for the window showing the user the available information cards such is not required. Information card presenter can modify an existing view of the information cards generated or maintained by some other process on the client. For example if the operating system shows the user the information cards installed on the client information card presenter can modify this presentation to identify which information cards satisfy the security policy of the application currently in focus. In such an embodiment information card presenter and therefore selector daemon can inform the user as to which information cards can be used with a particular application without information card presenter and therefore selector daemon needing to provide a user interface to the user. Thus information card presenter can present information to the application or to the user without establishing a new view. In this manner selector daemon can operate without providing any direct interface for the user.

User interface enables a user to interact with application . More particularly user interface enables the user to interact with information cards from within application . In one embodiment as discussed above application can request from a selector daemon a list of information cards satisfying a security policy. Assuming application receives such a list of information cards user interface can present to the user the information cards received from the selector daemon that satisfy the security policy and can permit the user to select a particular information card to use with application .

In one variation application can be an alternative card selector. That is instead of the user interfacing with card selector of application and user interface can provide a user with an alternative means for interfacing with information cards. In this variation application might be nothing more than an alternative card selector that is application might have no additional functionality beyond that of acting as an alternative card selector.

As discussed above in one embodiment of the invention application can be a browser application providing the user with access to the Internet. When a user is accessing the resources of the relying party via application the security policy can be provided by the relying party. In other words the security policy is not specific to the browser application but rather dependent upon the relying party being visited by the user using the browser application. In another embodiment of the invention application can have a security policy that is specifically associated with application . The security policy can be stored locally with application or can be stored elsewhere as desired. When application provides the security policy to the selector daemon application accesses the security policy from its location and forwards it to the selector daemon.

While the above discussion suggests that a particular application might have only one security policy associated with it a person skilled in the art will recognize that some applications might have multiple associated security policies. For example a browser application used to visit the websites of multiple relying parties can access the security policies of each of the relying party the security policy for one relying party does not have to be the same as the security policy for another relying party. Thus the security policy provided by the browser application to the selector daemon does not have to be the same across multiple uses of the browser application or even within a single use of the browser application. A person skilled in the art will also recognize that a browser application can have its own local security policy independent of the security policies of relying parties. Again the browser application can use context to determine which security policy should control at any particular time.

Similarly a standalone application running on the computer might have multiple different security policies associated with it. The standalone application determines from context which security policy applies at a particular time and provides that security policy to the selector daemon at the appropriate time.

Once a single information card that satisfies the security policy has been selected by the user application can then request a security token to be generated based on the identified information card. Application can request the security token directly from the appropriate identity provider without going through the card selector. Application sends via transmitter a request for a security token to the identity provider. Application can also include the security policy in the request of the security token. The identity provider can then use all of this information to generate the appropriate security token which is returned to application . Once application has the security token token processor can use the security token in an appropriate manner. For example if application needed the security token to authenticate the user to application token processor can parse a security token to complete the authentication of the user. On the other hand if application is a browser application and the user has visited a relying party s website token processor can forward the security token via transmitter to the relying party permitting the relying party to authenticate the user and grant the user access to the requested resource.

It is worth noting that security policy is not necessarily identical with security policy shown in . Security policy of is a security policy received from a relying party. Security policy on the other hand can be a security policy for an application running on the local computer independent of any relying party. Security policy can also be a security policy received from a relying party but it is not so limited.

Upon receiving message the selector daemon identifies the target information cards and transmits information about these information cards to the application. The information transmitted by the selector daemon to the application is usually information that is not secure for example an image of the information card or a name for the information card.

When the selector daemon receives a request to identify information cards that does not include a security policy in the request the selector daemon can access list of associations and attempt to locate the application that issued the request. If the application that issued the request is found in list of associations the selector daemon can access the associated security policy and use that security policy to limit which information cards are returned to the application. For example if application issued a request to list information cards based on list of associations the selector daemon would know to use security policy to limit the information cards returned to application .

At block the selector daemon identifies the available information cards that satisfy the security policy to some party that can use that information. As discussed above with reference to the selector daemon can identify the available information cards that satisfy the security policy to the application for example in response to a request to list the information cards that satisfy the security policy . Alternatively the selector daemon can identify the available information cards that satisfy the security policy to the user for example to enable the user to drag and drop an information card onto the application .

At block the selector daemon receives a request to list information cards that satisfy the security policy. Assuming blocks and were performed the request to list the information cards that satisfy the security policy received in block does not need to actually include the security policy itself. Finally at block the selector daemon can de register the security policy. Block can be performed at any time after block of it is not required that block be performed immediately after block . Deregistration can occur if the application expressly requests the security policy to be de registered either by associating a new security policy with the application or just by requesting that the association be removed from the list of associations . Deregistration can also occur if the selector daemon detects that the application is no longer resident in memory and is no longer running if the application is no longer running and there is no need to keep the associated security policy in the list of associations. Block is also optional and can be omitted as shown by dashed line .

At block the application requests a security token from an identity provider that manages the information card. At block the application receives from the identity provider the security token. As discussed above in some embodiments the application can be an alternative card selector replacing the standard card selector provided. In that case it might be possible for the application to handle blocks and internally. In addition if the application is capable of generating a security token based on the personal information card blocks and can also be performed internally to the application. Finally at block the application uses the security token. As discussed above the use of the security token can be internal to the application or it can involve providing the security token to another party such as a relying party.

Regardless of how the application determines the security policy at block the application can register the security policy with the selector daemon. As discussed above with reference to registering the security policy with the selector daemon makes it possible for the application to avoid having to provide the security policy to the selector daemon whenever a list of information cards is requested. Having applications register security policies with the selector daemon also gives the selector daemon some control over what information cards are automatically presented to the user based on the application that currently has the focus. For example the selector daemon can present to the application information cards on the desktop that are not controlled by any particular application but are available to all applications for use. Alternatively at block the application can transmit the security policy to the selector daemon for example in a message requesting the selector daemon to list the available information cards that satisfy the security policy.

In addition client includes association between application and information card . Association can be represented as representation of association. This representation can be for example a shortcut to application that causes information card to be provided to application . Association and its representation provide a way to speed up the invocation and execution of application rather then starting application and then having to use a selector daemon or a card selector to select an information card to be passed to application Association and representation provide a way to automate this process.

While shows association between application and information card a person skilled in the art will recognize that application is not limited to a standalone application. That is application can be for example a browser application designed to visit a particular website. In browser application parlance a shortcut to a website is usually termed a bookmark and is usually stored internally to the browser application. In this situation representation can reside on the desktop of client automating all of the steps of opening the browser application visiting the target website and providing to the browser application and information card to be used to generate a security token for use with the target website . Alternatively representation can reside as a bookmark within the browser application.

At block the system receives an indication that the user wants to use the association. At block the system activates the application. At block the system provides the information card to the application. As discussed above the information card as presented to the application can be non secure information about the information card for example an image of the information card. Blocks and are optional and can be omitted as shown by dashed line .

The following discussion is intended to provide a brief general description of a suitable machine in which certain aspects of the invention can be implemented. Typically the machine includes a system bus to which is attached processors memory e.g. random access memory RAM read only memory ROM or other state preserving medium storage devices a video interface and input output interface ports. The machine can be controlled at least in part by input from conventional input devices such as keyboards mice etc. as well as by directives received from another machine interaction with a virtual reality VR environment biometric feedback or other input signal. As used herein the term machine is intended to broadly encompass a single machine or a system of communicatively coupled machines or devices operating together. Exemplary machines include computing devices such as personal computers workstations servers portable computers handheld devices telephones tablets etc. as well as transportation devices such as private or public transportation e.g. automobiles trains cabs etc.

The machine can include embedded controllers such as programmable or non programmable logic devices or arrays Application Specific Integrated Circuits embedded computers smart cards and the like. The machine can utilize one or more connections to one or more remote machines such as through a network interface modem or other communicative coupling. Machines can be interconnected by way of a physical and or logical network such as an intranet the Internet local area networks wide area networks etc. One skilled in the art will appreciate that network communication can utilize various wired and or wireless short range or long range carriers and protocols including radio frequency RF satellite microwave Institute of Electrical and Electronics Engineers IEEE 545.11 Bluetooth optical infrared cable laser etc.

The invention can be described by reference to or in conjunction with associated data including functions procedures data structures application programs instructions etc. which when accessed by a machine result in the machine performing tasks or defining abstract data types or low level hardware contexts. Associated data can be stored in for example the volatile and or non volatile memory e.g. RAM ROM etc. or in other storage devices and their associated storage media including hard drives floppy disks optical storage tapes flash memory memory sticks digital video disks biological storage and other tangible physical storage media. Associated data can also be delivered over transmission environments including the physical and or logical network in the form of packets serial data parallel data propagated signals etc. and can be used in a compressed or encrypted format. Associated data can be used in a distributed environment and stored locally and or remotely for machine access.

Having described and illustrated the principles of the invention with reference to illustrated embodiments it will be recognized that the illustrated embodiments can be modified in arrangement and detail without departing from such principles and can be combined in any desired manner. And although the foregoing discussion has focused on particular embodiments other configurations are contemplated. In particular even though expressions such as according to an embodiment of the invention or the like are used herein these phrases are meant to generally reference embodiment possibilities and are not intended to limit the invention to particular embodiment configurations. As used herein these terms can reference the same or different embodiments that are combinable into other embodiments.

Consequently in view of the wide variety of permutations to the embodiments described herein this detailed description and accompanying material is intended to be illustrative only and should not be taken as limiting the scope of the invention. What is claimed as the invention therefore is all such modifications as can come within the scope and spirit of the following claims and equivalents thereto.

