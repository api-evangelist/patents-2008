---

title: Optimizing performance of location-aware applications using state machines
abstract: A location-aware method that dynamically adjusts software parameters in Location-Based Service (LBS) applications in real-time based on environmental conditions and application requirements. The invention saves power expended during position calculations while increasing application performance, optimizes settings for the application based on real-time conditions, and reduces bandwidth used. In an embodiment, the present method comprises a state machine or a plurality of state machines.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08036679&OS=08036679&RS=08036679
owner: University of South Floirda
number: 08036679
owner_city: Tampa
owner_country: US
publication_date: 20081003
---
This application claims priority to currently co pending U.S. Provisional Patent Application No. 60 977 140 entitled Location Aware Applications using Parallel State Machines filed Oct. 3 2007.

This invention was made with Government support under Grant No. 2117770900 and FDOT Contract BD 549 WO 35 awarded by the Florida Department of Transportation. The Government has certain rights in the invention.

This invention relates to wireless communication devices and in particular minimizing the amount of location calculations attempted by a mobile device.

Advances in telecommunications and cell phone technology allow for the creation of many new types of applications. One class of applications referred to as Location Based Services LBS use the knowledge of the historical or real time position of a mobile device to provide a service. Global Positioning System GPS enabled cell phones are currently one of the more popular devices that provide LBS to end users.

These devices continuously become more advanced featuring functionality that was state of the art on desktop computers just a few years ago. Not only can these cell phones tell where a user is but they can deliver on demand text sound and video to the user. By combining the knowledge of the individual s physical location with these multimedia services many different types of LBS can be realized. Some LBS include location based messaging for emergency alerts such as traffic accidents or evacuation notices location based marketing of products or services to consumers and real time navigation instructions while driving or using public transportation.

The needs of LBS applications differ depending on the application domain and the purpose of the application. However the minimization of costs such as power consumption during the calculation and processing of location data and network traffic to communicate location data to other locations is always desired. Energy drains come from wireless communications signal processing for wireless positioning methods such as GPS and the processor cycles needed to analyze and process location data at the application level. Existing LBS applications assume fixed position recalculation rates by the mobile device.

Positioning systems can utilize a number of different localizing technologies including GPS cellular network trilateration or triangulation RF ID Wi Fi Ultra Wide Band UWB and hybrids of these and other technologies. In all of these systems the position of the mobile device is calculated either on the device or on a centralized server. Hybrid systems can use assistance from the opposite party i.e. a mobile device can calculate position information with assistance from the server and the server can calculate position information with assistance from the mobile device . There is a cost associated with each position calculated on a server. Therefore it is in the system s best interest to minimize the number of locations calculated either on the device or on a server.

A common problem found in LBS applications is the continuous querying of the positioning system when the system is temporarily unavailable or when the user is immobile for extended periods of time. For example if an application continues to request GPS fixes from a mobile phone when GPS signal levels are not sufficient to calculate the phone s location e.g. the user is indoors the phone will waste significant resources such as battery energy and CPU cycles before a timeout value is reached. Alternately if a user is inside a building and a high sensitivity GPS receiver is able to continuously calculate the user s location significant battery energy is expended to repeatedly calculate the same general position.

Frequent locations recalculations will yield high accuracy but at the cost of significant energy consumption. In contrast infrequent position recalculations increase battery life but are unable to accurately report real time device location or the device s travel path while the user is traveling. Therefore a method is needed that intelligently manages the rate of location calculation attempts to consume as little energy as possible based on real time application level needs.

Location Based Services LBS or location aware applications are used to track users with a number of location technologies including Global Positioning System GPS network trilateration cell sector and cell ID. However these location technologies cause continuous calculation attempts on the mobile devices which consume a considerable amount of energy. The present invention reduces the number of location calculation attempts.

The present invention includes a location aware method which manages the interval at which location information is requested by a mobile device while consuming a minimal amount of energy. In an embodiment of the present invention the location aware method increases the interval when the location information received by the mobile application is invalid and decreases the interval when the location information is valid. A maximum and minimum interval value may be set to prevent the interval from becoming too large or too small. In addition the location aware method may immediately return to its original internal value when the location information becomes available instead of incrementally decreasing.

In an embodiment of the present invention the location aware method adjusts a location recalculation interval in a location aware application to regulate the amount of location calculations attempted by the location aware application. The location aware method comprises increasing the location recalculation interval when the a location calculation fails and the location recalculation interval is less than a first threshold value decreasing the location recalculation interval when the location calculation is successful and the location recalculation interval is greater than a second threshold value maintaining the location recalculation interval when the location calculation fails and the location recalculation interval is greater than or about equal to the first threshold value and maintaining the location recalculation interval when the location calculation is successful and the location recalculation interval is less than or about equal to the second threshold value. The location recalculation interval may be set equal to an initial interval value. The second threshold value may equal the initial interval value.

In another embodiment of the present invention the location aware method comprises obtaining two location points determining a movement distance by calculating the distance between the two location points increasing the location recalculation interval when the movement distance is less than a distance threshold and the location recalculation interval is less than a first threshold value decreasing the location recalculation interval when the movement distance is greater than the distance threshold and the location recalculation interval is greater than a second threshold value maintaining the location recalculation interval when the movement distance is greater than the distance threshold and the location recalculation interval is less than or about equal to the second threshold value and maintaining the location recalculation interval when the movement distance is less than the distance threshold and the location recalculation interval is greater than or about equal to the first threshold value. The location recalculation interval may be set equal to an initial interval value. The second threshold value may equal the initial interval value. The two location points may be the most recently calculated location points.

In another embodiment of the present invention the location aware method comprises obtaining a recent location point obtaining a target location point determining a target distance by calculating the distance between the recent location point and the target location point decreasing the location recalculation interval when the target distance is less than a first distance threshold and greater than a second distance threshold and the location recalculation interval is greater than a first interval threshold wherein the second distance threshold is less than the first distance threshold increasing the location recalculation interval when the target distance is greater than the first distance threshold and the location recalculation interval less than a second interval threshold decreasing the location recalculation interval when the target distance is less than the first distance threshold and less than the second distance threshold and the location recalculation interval is greater than the first interval threshold increasing the location recalculation interval when the target distance is less than the first distance threshold and greater than second distance threshold and the location recalculation interval is less than the second interval threshold maintaining the location recalculation interval when a target distance is greater than the second predetermined distance threshold and the location recalculation interval is less than or about equal to the first threshold value and maintaining the location recalculation interval when a movement distance is less than the predetermined distance threshold and the location recalculation interval is greater than or about equal to the second threshold value. The location recalculation interval may be set equal to an initial interval value. The second threshold value may equal the initial interval value. The recent location point may be the most recently calculated location point.

In another embodiment of the present invention the location aware method adjusts access to a plurality of available location technologies used by a location aware application to regulate the amount of location calculations attempted by the location aware application. The location aware method comprises allowing the application access to a first location technology in the plurality of available location technologies and denying the application access to a second location technology in the plurality of available location technologies when the number of successful location calculations is greater than a minimum threshold number of successful location calculations wherein the first location technology requires less of a wireless network s resources to perform location calculations and allowing the application access to the second location technology and denying the application access to the first location technology when a location calculation fails.

In another embodiment of the present invention the location aware method adjusts a location recalculation interval and access to a plurality of available location technologies used by a location aware application to regulate the amount of location calculations attempted by the location aware application. The location aware method comprises allowing the application access to a first location technology in the plurality of available location technologies and denying the application access to a second location technology in the plurality of available location technologies when the number of successful location calculations is greater than a minimum threshold number of successful location calculations wherein the first location technology requires less of a wireless network s resources to perform location calculations allowing the application access to the second location technology and denying the application access to the first location technology when the a location calculation fails setting the location recalculation interval equal to a first interval value increasing the location recalculation interval to a second interval value when a location calculation fails and the location recalculation interval is less than a first threshold value decreasing the location recalculation interval to a third interval value when a location calculation is successful and the location recalculation interval is greater than a second threshold value maintaining the location recalculation interval when a location calculation fails and the location recalculation interval is greater than or about equal to the first threshold value maintaining the location recalculation interval when a location calculation succeeds and the location recalculation interval is less than or about equal to the second threshold value increasing the interval values responsive to allowing access to the second location technology and the interval value is less than a third threshold value and decreasing the interval values responsive to allowing access to the first location technology and the interval value is greater than a fourth threshold value. The second threshold value may equal the first interval value.

In another embodiment of the present invention the location aware method adjusts adjusting a location recalculation interval and a timeout value in a location aware application to regulate the amount of location calculations attempted by the location aware application. The location aware method comprises increasing the location recalculation interval when a location calculation fails and the location recalculation interval is less than a first interval threshold value decreasing the location recalculation interval when a location calculation succeeds and the location recalculation interval is greater than a second interval threshold value maintaining the location recalculation interval when a location calculation fails and the location recalculation interval is greater than or about equal to the first interval threshold value maintaining the location recalculation interval when a location calculation succeeds and the location recalculation interval is less than or about equal to the second interval threshold value increasing the timeout value when a location calculation fails and the timeout value is less than a first timeout threshold value decreasing the timeout value when a location calculation succeeds and the timeout value is greater than a second timeout threshold value maintaining the timeout value when a location calculation fails and the timeout value is greater than or about equal to the first timeout threshold value and maintaining the timeout value when a location calculation succeeds and the location recalculation interval is less than or about equal to the second timeout threshold value. The location recalculation interval may be set equal to an initial interval value. The second threshold value may equal the initial interval value. The recent location point may be the most recently calculated location point. The timeout value may be set equal to an initial timeout value.

In the following detailed description of the preferred embodiments reference is made to the accompanying drawings which form a part hereof and within which are shown by way of illustration specific embodiments by which the invention may be practiced. It is to be understood that other embodiments may be utilized and structural changes may be made without departing from the scope of the invention.

The present invention includes a location aware method. The location aware method optimizes the number of locations calculated on a mobile device or server such that energy consumption and network traffic are minimized while the accuracy and reliability needs of the location aware application are met.

On a mobile device application variables can be manipulated in real time in order to optimize application performance based on real time conditions. Some manipulable application variables include the success or failure of the most recent location calculation attempt the failure of a calculation attempt to meet a defined criterion e.g. defined accuracy uncertainty threshold the distance to a goal for a real time navigation application and the distance between the most recent location calculated. Many application properties also may be manipulated to optimize performance. Some examples include 

Mobile devices utilize multiple types of positioning technology including Global Positioning Systems GPS network trilateration cell sector cellular base station ID and ultra wide band. The present method does not alter the type of location technology used by the device. Instead the present method optimizes application states based on real time conditions such as the success or failure of the last location calculation attempt the distance to the target location and the distance between the last two calculated location points and the available location technology.

In an embodiment of the present invention the location aware method uses at least one state machine to minimize the amount of required location calculations for the mobile device minimize the energy expended during application operation and minimize the bandwidth used by reducing update intervals when possible while still meeting the performance needs of the application in its specific domain. The state machine s is are used to control the changes of state in an Location Based Services LBS or location aware application based on various conditions such as the success or failure of a location calculation attempt based on a given criteria e.g. whether or not a location can be calculated a defined accuracy uncertainty threshold the distance between the two most recent calculated location points and the distance between the current device location and a target location.

This functionality saves power by reducing polling intervals of location technology when high polling rates are not necessary e.g. when inside a building where GPS signals are not available when standing still for long periods of time when located far from a target location etc but then increasing polling rates when desired for increased application performance e.g. when exiting a building and GPS becomes available again when movement increases when a device nears its goal location etc. .

Application performance can also be enhanced by adjusting multiple values in the state machine s . For example timeout values used to determine how long the device should try to calculate a position before the attempt is considered a failure should be adjusted along with the polling intervals. For instance the timeout value can be maintained at half of the current polling interval. This means a five second timeout value when twenty second polling is used a fifteen second timeout when thirty second polling is used etc.

In an additional embodiment the present method comprises a series of state machines. The use of multiple states machines is especially useful in devices utilizing multiple positioning technologies based on environmental conditions and application needs.

The present invention was implemented in TRAC IT a Java Micro Edition Java ME application designed to automatically collect user travel behavior the present method allows TRAC IT to build an accurate representation of a user s path while consuming considerably less of the mobile device s battery life.

The location aware method was evaluated by benchmarking battery life on a Sanyo SCP 7050 mobile phone with a Sanyo SCP 22LBPS 3.7V Lithium Ion 1000 milliampere hour mAh battery on the Sprint Nextel Code Division Multiple Access CDMA 1 Radio Transmission Technology RTT cellular network.

As shown in the location aware method is illustrated using state machine . State machine comprises a plurality of states or n states. shows first state second state penultimate n 1 state and final n state . The location aware method is called every time the calling LBS application successfully calculates a new location. The method then determines if state machine should change states. Once the state changes the location aware method modifies various software and or hardware settings based on the properties defined in the new state.

To illustrate the method begins in first state where a location parameter is set to a first predetermined amount. Next the method evaluates whether state machine should move to the next state second state or remain in first state . If the evaluation fails then the method moves in jump to second state and the location parameter is changed to a second predetermined amount. However if the evaluation succeeds then the method remains in first state and the location parameter remains set to the first predetermined amount.

If the evaluation succeeds while the method is in second state then the method moves back in jump to first state and the location parameter is again set to the first predetermined amount. However if the evaluation fails the method moves forward in jump to the next state where the location parameter is again changed. The method will continue moving states in forward direction and changing the location parameter upon each failed evaluation. If enough evaluations fail the method will reach penultimate state after jump where the location parameter will be set to a penultimate predetermined amount.

Once in penultimate state if the evaluation succeeds then the method moves back in jump to the previous state and the location parameter is changed to the previous state s predetermined threshold. The method continues moving back states in reverse direction upon each successful evaluation until it reaches first state . However if the evaluation fails then the method moves forward in jump to final state where the location parameter will be set to the final predetermined amount.

Once in final state if an evaluation fails the method remains in final state and the location parameter remains set at the final predetermined amount. However if an evaluation succeeds the method moves in jump back to penultimate state where the location parameter is again set to the penultimate amount. Alternatively the method may also move in jump directly to first state where the location parameter is set to the first predetermined amount. Allowing the method to move in jump from final state to first state provides the option of immediately obtaining location calculations instead of gradually moving from one state to another in reverse direction until first state is reached.

State changes may occur based on whether location calculation attempts succeed or fail. If a location calculation was not successful the state is changed from a state X to a state X 1. Certain application properties such as the time interval at which the location of the device is recalculated can then be adjusted based on information contained in the new X 1 state.

As illustrated in the method begins in first state where the location recalculation interval is set to a first predetermined amount which is illustrated here as four seconds. If the next location calculation succeeds then the method remains in first state and the location recalculation interval remains set to the first predetermined amount or four seconds . However if the calculation fails then the method moves in jump to second state and the location recalculation interval is increased to a second predetermined amount which is illustrated here as eight seconds.

If the calculation succeeds while the method is in second state then the method moves back in jump to first state and the location recalculation interval is decreased back to the first predetermined amount or four seconds . However if the calculation fails then the method moves in jump to the next state where the location recalculation interval is again changed. The method will continue moving states in forward direction upon each failed location calculation. If enough location calculations fail the method will reach penultimate state after jump where the location recalculation interval will be set to a penultimate predetermined amount illustrated here as four minutes.

Once in penultimate state if the location calculation succeeds then the method moves back to the previous state in jump and the location recalculation interval is decreased to the previous predetermined threshold. The method continues moving back states in reverse direction upon each successful location calculation until it reaches first state in which the location recalculation interval is again set to the first predetermined amount or four seconds . However if the location calculation fails then the method moves forward to final state in jump where the location recalculation interval will be set to the final predetermined amount which is illustrated here as eight minutes.

Once in final state if a calculation fails the method remains in final state and the location recalculation interval remains set at the final predetermined amount. However if a calculation succeeds the method moves in jump back to penultimate state where the location recalculation interval is then decreased to the penultimate amount. Alternatively the method may also move in jump directly to first state where the location recalculation amount is decreased back to the first predetermined amount or four seconds .

In this manner subsequent failures reduce the polling rate of the mobile device so power is not wasted on rapid attempts to obtain location calculations when one cannot be calculated. Failures may occur when the mobile device has been inside a building in which it cannot obtain a successful location calculation. While outdoors and in a location where successful location calculations are possible the location recalculation interval will remain at four seconds in first state . Once the mobile device is inside the location recalculation interval will increase. If the mobile device is inside the building for long enough the location recalculation interval will reach eight minutes in final state and will remain there as long as the mobile device remains in the building. But when the mobile device leaves the building and a successful location calculation is made the location recalculation interval may move in jump to first state if it is desired to obtain location calculations as soon as possible or it may move gradually from final state to first state decreasing its interval from eight minutes to four minutes and so on until an interval of four seconds is reached.

State changes may also occur based on the distance between the two most recent points calculated. State machine moves forward a state from state X to state X 1 upon a failed distance evaluation. A distance evaluation fails when the distance between the two most recent calculated locations is less than a predetermined threshold for example one meter . Certain application properties such as the time interval at which the location of the device is recalculated can then be adjusted based on information contained in the new X 1 state. State machine moves back a state from state to state X upon a successful distance evaluation. A distance evaluation is successful when the distance between the two most recent calculated locations is greater than the predetermined threshold. Application properties can then be adjusted based on information contained in the new X state.

As illustrated in the method begins in first state where the location recalculation interval is set to a first predetermined amount which is illustrated here as 0.5 seconds. If the distance evaluation succeeds i.e. the distance between the last two calculated locations is greater than the predetermined threshold e.g. one meter then the method remains in first state and the location recalculation interval remains set to the first predetermined amount or 0.5 seconds . However if the distance evaluation fails i.e. the distance between the last two calculated location is less than the predetermined threshold e.g. one meter then the method moves in jump to second state and the location recalculation interval is increased to a second predetermined amount which is illustrated here as one second.

If the distance evaluation succeeds while the method is in second state then the method moves back in jump to first state and the location recalculation interval is decreased to the first predetermined amount or 0.5 seconds . However if the calculation fails the method moves in jump to the next state where the location recalculation interval is again increased. The method continues moving states in forward direction and increasing the location recalculation interval upon each failed distance evaluation. If enough distance evaluations fail the method will reach penultimate state after jump where the location recalculation interval will be set to a penultimate predetermined amount illustrated here as thirty two seconds.

Once in penultimate state if the distance evaluation succeeds then the method moves back to the previous state in jump and the location recalculation interval is decreased the previous state s predetermined threshold. The method continues moving back states in reverse direction and decreasing the location recalculation interval upon each successful distance evaluation until it reaches first state in which the location recalculation interval is again set to the first predetermined amount or 0.5 seconds . However if the distance evaluation fails then the method moves forward in jump to final state where the location recalculation interval will be set to the final predetermined amount which is illustrated here as sixty four seconds.

Once in final state if the distance evaluation fails the method remains in final state and the location recalculation interval remains set at the final predetermined amount. However if the distance evaluation succeeds the method moves in jump back to penultimate state where the location recalculation interval is then decreased back to the penultimate amount or thirty two seconds . Alternatively the method may also move in jump directly to first state where the location recalculation amount is decreased to the first predetermined amount or 0.5 seconds .

In this manner subsequent failures reduce the polling rate of the mobile device so that power is not wasted on rapid attempts to obtain location calculations when new calculations are not needed. Failures will occur when the mobile device is stationary or at least relatively stationary such as when the user is at work or home or even when the user is stuck in traffic or stopped at a red light. As illustrated in while the mobile device s movement exceeds the distance threshold the location recalculation interval will remain at 0.5 seconds in first state . Once the mobile device becomes relatively stationary the location recalculation interval will increase. If the mobile device is relatively stationary for long enough the location recalculation interval will reach sixty four seconds in final state and will remain there as long as the mobile device remains relatively stationary. But when the mobile device begins moving and its movement exceeds the distance threshold the location recalculation interval may move in jump to first state if it is desired to obtain location calculations as soon as possible once movement begins or it may move gradually to first state decreasing the interval from sixty four seconds to thirty two seconds and so on until an interval of 0.5 seconds is reached.

The predetermined distance threshold may be adjusted for sensitivity to movement depending on the needs of the application mobile device and or the user. The higher the distance threshold the less sensitive the method will be to movement. Although a distance threshold that is set too high may reduce accuracy of the calling application a threshold that is set properly may significantly reduce the number of location calculation attempts and thereby significantly reducing power consumption. Decreasing the distance threshold may make the method more sensitive to movement however a distance threshold that is set too low may negate the benefits of the method by never triggering a move from one state to another. Therefore in the present method the distance threshold may be adjusted such that it provides for a reduction in the number of location calculation attempts without significantly reducing the accuracy of the calling application or negating the benefits of the method.

State changes may occur based on the distance between the mobile device and a target location. This can be used in applications such as a navigation application to increase the number of location calculation attempts as the mobile device approaches a target location thereby increasing the application s accuracy and allowing a reduction in calculation attempts at less crucial times. An example of a target location in a navigation application would be the next planned turn in a user s route.

If the target distance the distance between the current location and the target location is greater than a predetermined threshold then the method is in its original state x . The method remains in its original state x as long as the target distance exceeds the predetermined threshold. As the mobile device approaches its target location the state would move forward a state from state x to state x 1 at certain distance thresholds in order to decrease the location recalculation interval as the mobile device approaches the target location. This will ensure that the mobile device will not miss its target location because the location will be updated more frequently as the mobile device physically approaches the target location.

Additionally the reverse application of the method applies as the mobile device moves away from the target location. As the device moves away the location recalculation interval is increased as the mobile device exceeds the predetermined distance thresholds in reverse order.

Further a state may transition directly to another state and avoid stepping through intermediate states when an immediate change to a lower interval i.e. more frequent updates is required. This is especially useful in real time applications which are usually time dependent.

An example is illustrated in . Movement between each state depends on the target distance. The target distance is compared to the distance thresholds of each state to determine the value of the location recalculation interval.

The method begins by calculating the target distance. If the target distance is greater than a first distance threshold for example 5 miles then the method is in first state . In first state the location recalculation interval is set to a first interval amount which is illustrated here as one hundred twenty eight seconds. The method remains in first state and the location recalculation interval remains at the first interval amount as long as the target distance exceeds the first distance threshold.

When the target distance falls below the first distance threshold the method moves in jump to second state . In second state the location recalculation interval is set to a second interval amount which is illustrated here as sixty four seconds. The method remains in second state and the location recalculation interval remains at the second interval amount as long as the target distance is between the first distance threshold and a second distance threshold. If the target distance rises above the first distance threshold the method moves in jump back to first state . Alternatively if the target distance remains below the first distance threshold and also falls below the second distance threshold the method will move in jump to the next state where the location recalculation interval will be further reduced.

The method continues moving states in forward direction decreasing the location recalculation interval as the mobile device moves towards the target location. Eventually the method enters after jump penultimate state when the target distance is greater than the penultimate distance threshold but less than the distance threshold of the previous state. In penultimate state the location recalculation interval is reduced to a penultimate interval amount which is illustrated here as four seconds. The method remains in penultimate state and the location recalculation interval remains at the penultimate interval amount as long as the target distance is between the penultimate distance threshold and the previous state s distance threshold. If the target distance rises above the previous state s distance threshold the method moves back in jump to the previous state. However if the target distance falls below the penultimate distance threshold then the method moves in jump to final state .

In final state the location recalculation interval is set to a final interval amount which is illustrated here as two seconds. The method remains in final state as long as the target distance is less than the penultimate distance threshold. If the target distance rises above the penultimate distance threshold then the method moves back in jump to penultimate state . The method may continue moving states in reverse direction and increase the location recalculation interval as the target distance exceeds each state s distance threshold

Additionally the method may skip intermediate states if immediate changes in location recalculation intervals are desired. For example as illustrated in if the mobile device is at a target distance greater than the first threshold but is approaching the target location very quickly the method may move in jump directly to penultimate state instead of stepping through second state and any other intermediate states. In the reverse direction the method may move in jump from final state to second state or the method may move in jump from final state to first state .

A plurality of state machines is used to further minimize the number of location calculations performed by a mobile device. At least one of the state machines in the plurality of state machines may function the same as state machine as described in the examples above. The remaining states machines may either follow the movement of first state machine or move independently. The remaining state machines may be used to update other values of importance such as timeouts on the location request and the maximum allowed age of the location information to be returned.

Multiple state machines can be used to dynamically change the type of location technologies used based on conditions such as the success or failure of location calculation attempts.

As shown in the example illustrated in parallel state machines and are used to choose among four types of location technologies GPS Network Trilateration Cell Sector and Cell ID based on the success or failure of location calculation attempts. First state machine changes states based on whether location calculation attempts succeed or fail as described generally in Example 1 and more specifically in Example 2. Each state in first state machine changes the location recalculation interval. This is not meant to be limiting as first state machine may also change states based on other factors such as the distance between the two most recent calculated location points as described in Example 3 and the distance between the mobile device and the target location as described in Example 4.

Second state machine also changes states based on the success or failure of location calculation attempts however each state in state machine changes the location technology as opposed to the location recalculation interval.

The location technology is set to GPS in first state . If GPS fails to produce a successful location calculation then the method moves in forward direction to second state . In second state network trilateration is used. If network trilateration fails to obtain a successful location calculation and GPS is still not available the method moves to penultimate state where cell sector is used. If cell sector fails to obtain a successful location calculation the method moves to final state where cell ID is used. Additional states may be added to second state machine for other location technologies.

The moves from one state to another in second state machine may be triggered when the method enters final state of first state machine or after a certain number of iterations of attempting to obtain a successful location calculation according to the location recalculation interval set in first state machine s final state . The moves may also be triggered by an earlier state of first state machine to more quickly obtain location calculations. State machine may also move in reverse direction once a number of successful location calculations have been attained with a more power draining technology to determine if a technology that consumes less power is available.

An application may dynamically choose to use or ignore one or more state machines to further optimize performance of the application.

As illustrated in the example shown in an application may have access to state machine which changes states and adjusts location recalculation interval based on the success or failure of location calculation attempts similar to the state machine presented in Example 2 and state machine which changes states and adjusts location recalculation interval based on the distance between the current location and the target location similar to the state machine presented in Example 4 .

While an application is performing real time navigation it uses state machine and does not use state machine . When the real time navigation is complete the application then switches to state machine . Because state machine has the potential to poll at a much faster rate than state machine this setup allows the application to only use state machine when it is needed the most and switch to a more conservative polling rate available by using state machine when such rapid polling is not necessary.

An application may use state machines to dynamically change the type of location technologies used based on wireless carrier restrictions. This is useful when a wireless carrier restricts the frequency of the use of certain technologies such as network trilateration because of the extra burden it places on the network for each calculation. In contrast wireless carriers usually allow unrestricted use of GPS because the primary burden for calculations is placed on the mobile device.

As illustrated in the example shown in parallel state machines are used to dynamically alter the location recalculation interval according to the availability of location technology and the application s access to the location technology due to restraints presented by a wireless carrier s restrictions. Four types of location technologies GPS Network Trilateration Cell Sector and Cell ID are illustrated here.

First state machine changes states based on the availability of location technology according to the restraints presented by a given wireless carrier s restrictions. Second state machine changes states based on whether location calculation attempts succeed or fail as described generally in Example 1 and more specifically in Example 2. Each state in second state machine changes the location recalculation interval. However the location recalculation intervals set by each state in second state machine are changed each time first state machine changes states. For example when first state machine is in first state GPS is available and being used. Therefore low location recalculation intervals or a high polling frequency are used in second state machine when first state machine is in first state . When first state machine moves to its second state because GPS is no longer available but network trilateration is available higher location recalculation intervals or a lower polling frequency are needed. Therefore when first state machine s moves to its second state higher location recalculation intervals are used in second state machine . As first state machine changes states in forward direction the location recalculation intervals in the states of second state machine are increased.

Additional states may be added to first state machine for other location technologies. First state machine may also move in reverse direction once a a location technology that consumes less power becomes available.

Alternatively a plurality of parallel state machines may be used in place of second state machine each of the plurality of state machine corresponding to a state from first state machine . Each of the plurality of state machine contains location recalculation intervals appropriate for the location technology of the corresponding state of first state machine . As first state machine moves from one state to the next the corresponding state machine in the plurality of state machines is enabled and the remaining state machines are disabled.

In this manner the parallel state machine optimizes the number of location calculation attempts by providing location recalculation interval s that correspond to the location technology being used by the mobile device.

Multiples state machines may be used to dynamically change location recalculation intervals based on timeout values including the amount of time before a location request is considered a failure. Smaller interval times should use smaller timeout values so the state machines move together based on the same condition evaluation such as whether the location calculation attempt is successful or whether the location calculation meets a defined criterion such as an accuracy uncertainty threshold.

In the example shown in the timeout is maintained as half the location recalculation interval. First state machine changes the location recalculation interval as it changes states and second state machine changes the timeout value or the amount of time before a location calculation attempt is considered a failure. Both first state machine and second state machine change states based on the same condition evaluation the success or failure of a location calculation attempt. Other condition evaluations may also be used such as those provided in the earlier examples. In this manner the number of location calculation attempts is reduced.

Advanced logic is used to trigger state transitions and thereby further optimize the manner in which location calculations are performed by a location aware application. This example seeks to maximize the amount of location data collected while a mobile device is moving and minimize the amount of location data calculated when the mobile device is not moving for extended amounts of time. The maximum amount of location data collected while a mobile device is moving may be capped by a fixed maximum rate e.g. one fix every four seconds. The minimum amount of location data collected while a mobile device is not moving may also be restricted but by a fixed minimum rate e.g. one fix every one hundred twenty seconds.

As illustrated in the example shown in each state represents a location recalculation interval first state has a location recalculation interval of four seconds second state has a location recalculation interval of eight seconds third penultimate state has a location recalculation interval of sixty four seconds and final state has a location recalculation interval of one hundred twenty eight seconds.

When the location technology such as GPS is initially turned on i.e. the tracking application is first started it may take some time to acquire the mobile device s initial position. Even though the initial position calculations may fail state machine will not immediately transition to the next state. Instead state machine waits a predetermined amount of time e.g. 60 seconds . If a position cannot be calculated in this predetermined amount of time then state machine begins normal state transitions.

Transitions may occur after every failed or successful location calculation attempt or the method may count the number of successive failures or successes and trigger transitions only after a certain number of failures occur. For example once three successive location calculation attempts have failed state machine will transition from first state to second state . After another three successive location calculation attempts have failed state machine will transition from second state to the next state in forward direction .

If a successful location calculation is attained then state machine begins detection to see if the mobile device is moving or if it is stopped. Repeated location calculation failures assume that the mobile device is stopped and in a location where location points cannot be calculated. If location calculations are continuously successful state machine monitors moving states using three primary attributes device speed obtained in each location calculation distance traveled between the two most recent location points and the estimated horizontal accuracy of the current location points. Horizontal accuracy represents a circular region around the calculated location point where the probability of the mobile device s actual location falling within the circle is at least 68 . Horizontal accuracy is estimated for each calculated location point based on things such as signal quality and the number of satellites in view.

If the moving device is moving at a speed above a low speed threshold e.g. one meter per second then state machine remains in first state in order to continuously record the mobile device s travel at a high rate e.g. one location calculation every four seconds . Once the speed drops below the low speed threshold e.g. one meter per second or the horizontal accuracy rises above a certain threshold e.g. sixty meters then a back off timer is started and begins to count down from a set time value e.g. two minutes . If these two values exceed their thresholds it may indicate that the user has stopped e.g. at a stop light resting on a bench outside sitting in an outdoor location etc. . However because the person may begin moving again soon if the stop is temporary the state machine will not immediately raise the location recalculation interval. If the mobile device is moving at a speed above the low speed threshold before the back off timer expires then the timer is reset and state machine remains in first state . However if the back off timer expires before another high speed value is detected then state machine transitions to second state and saves the location calculated when the timer expired.

State machine will then transition in forward direction if it appears that the mobile is in the same location. However if the mobile device appears to be moving again then state machine will transition in reverse direction . If state machine is unsure if the mobile device is actually moving then it will transition gradually by moving from state to state such taking jump jump and jump to transition from final state to first state . If state machine is sure that the mobile device is moving then it will transition directly to first state in jump . Upon each subsequent location calculation the calculated speed is checked to see if it exceeds a high speed threshold e.g. 1.5 meters per second . If so then the mobile device is most likely traveling again and state machine will immediately snap back to first state .

In addition the method checks each calculated location point to determine if the distance between the current location point and the previously saved location point from the back off timer expiration exceeds a distance threshold e.g. one hundred meters . If so then the mobile device may have moved at a low speed from the place where it initially stopped and the method may need to begin transitions in reverse direction . Because the distance between two location points could exceed the distance threshold due to location technology accuracy there is uncertainty as to whether the mobile device is actually moving so state machine will not immediately snap back to first state . Therefore if the distance threshold is exceeded but the mobile device s speed remains under the high speed threshold state machine transitions by one state towards first state . If the distance threshold is not exceeded and the high speed threshold is not exceeded or if the location technology is not available then the method assumes the user is stopped and state machine transitions in forward direction towards final state upon each subsequent location calculation attempt that also does not meet this criteria.

If location calculation failures occur at any point the method assumes the same logic as used on failures of the first fix attempt either transition in forward direction after every failed location calculation attempt or counting the number of failures and only transitioning after a certain number of failures have occurred in a row.

Other technologies such as embedded accelerometers may be used as a wakeup trigger which could potentially eliminate the requirement of occasional location calculation being used to determine if the use has started moving yet.

Pseudo code based on an implementation of an embodiment of the location aware method is given below. This example uses GPS as the location technology. First initial threshold values are described along with example values. These threshold values can be changed and may be unique for different GPS hardware. And different GPS enabled mobile phone models based on factors such as the quality of GPS hardware and environmental conditions. Then a description of the state transitions is given in pseudo code followed by a description of the back off timer.

A new GPS fix is calculated and contained in variable this.location and is passed to the function described below.

 First check to see if first fix has been obtained because it is desired to keep the GPS chip hot i.e. not use state machine until a first fix is obtained until a certain timeout value 

 Threshold used to determine if the user has moved a significant amount of distance since the timer started in meters. DISTANCE THRESHOLD 100 100 meters default distance

It will be seen that the advantages set forth above and those made apparent from the foregoing description are efficiently attained and since certain changes may be made in the above construction without departing from the scope of the invention it is intended that all matters contained in the foregoing description or shown in the accompanying drawings shall be interpreted as illustrative and not in a limiting sense.

It is also to be understood that the following claims are intended to cover all of the generic and specific features of the invention herein described and all statements of the scope of the invention which as a matter of language might be said to fall there between. Now that the invention has been described 

