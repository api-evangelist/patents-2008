---

title: Autonomic provisioning of hosted applications with level of isolation terms
abstract: In another embodiment, the method includes providing a set of heterogeneous infrastructure resources, selecting a subset of the set of heterogeneous infrastructure resources, the subset of heterogeneous infrastructure resources is defined in a configuration template to fulfill a service level agreement (SLA) with a corresponding level of isolation, and allocating the subset of infrastructure resources in the registry.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07856499&OS=07856499&RS=07856499
owner: SAP AG
number: 07856499
owner_city: Walldorf
owner_country: DE
publication_date: 20080320
---
Embodiments of the invention relate generally to the software arts and more specifically to autonomic provisioning of hosted application with level of isolation terms defined in a service level agreement between a service provider and a service consumer.

Data centers provide services to customers accessible via the Internet. In the software world the data centers act as service providers and the customers as service consumers. The service provider is not necessarily equivalent to the software provider. In many cases a service provider and a software provider agree on certain conditions in which the service provider can offer the different software services to its customers. The services that the data centers provide may include hosting of applications and data.

The offered service is in most cases a composition of lower level services. Resources are dynamically allocated corresponding to the service specification and the customer requirements. A service level agreement SLA is a formally negotiated agreement between two parties. It is a contract that exists between customers and their service provider or between service providers. It records the common understanding about services priorities responsibilities guarantee and such that is acceptable and deliverable by the parties involved collectively the level of service. Changing the resource allocation the service composition or the service usage may result in the customer or data center provider changing their perception of risk regarding their potential for service level agreements to be violated. These effects combined with the high frequency of new service requests and the dynamics of the different services make the management of data centers more and more difficult.

A data center s provisioning process incorporates many constraints service characteristics as well as the objectives of the data center provider and the objectives of the individual customers. One important aspect that needs to be better automated is protection security and isolation of hosted application services.

In general a customer s concerns regarding the protection of its hosted applications and data in a data center can be addressed in many ways. For example some physical firewalls can be used to clearly disconnect dedicated servers running applications of different and maybe competing companies. As one can see the different protection approaches correspond with different costs necessary to implement the specific protection mechanism. Thus different customers at data centers will have different perceptions of the best trade off solution between a high level of security and the related costs.

In order to establish a contract between the service provider and the customer in many business environments the customers still need to sign paper written contracts that clearly specify the provision of specific services and the corresponding behavior rules and costs for the service consumers. This becomes a bottleneck as the number of customer requests per time interval is constantly increasing. Thus automatic mechanisms need to replace the manual negotiation and specification of the agreements. Additionally to the specification of SLAs the negotiation between service providers and service consumers need to be automated. Again driven by scientific applications some approaches for negotiation protocols exist. However these attempts again focus on the computational requirements for certain services and omit the customer s protection and security concerns.

A computing system and method for autonomic provisioning of hosted applications with level of isolation terms are described. In one embodiment the system includes an infrastructure registry to provide a set of heterogeneous infrastructure resources an autonomic provisioning service unit to select a subset of the heterogeneous infrastructure resources the subset of resources to fulfill a service level agreement SLA with a corresponding level of isolation and a monitoring unit to collect information about the subset of resources and send the collected information to the autonomic provisioning service unit.

In one embodiment the method includes providing a set of heterogeneous infrastructure resources selecting a subset of the heterogeneous infrastructure resources the subset of heterogeneous infrastructure resources is defined in a configuration template to fulfill a service level agreement SLA with a corresponding level of isolation and allocating the subset of infrastructure resources.

Embodiments of the invention relate to a system and method for autonomic provisioning of hosted applications with level of isolation terms agreed in a service level agreement SLA between a service provider and a service consumer.

In one embodiment the service provider may be a data center with a plurality of infrastructure resources for hosting customers applications and data. Any malicious or accidental occurrence in the data center that disrupts fulfillment of one or more terms in an SLA can be regarded as an SLA violation. The SLA violation can occur on physical or logical entities in the data center. Therefore knowing the structure of a data center may help in defining the possible SLA violations that can occur on the elements of the structure.

These elements define a structural model of the data center that can help in analyzing the potential SLA violation sources and targets. This is used to classify different types of isolation mechanisms that could be employed to reduce the possibilities of these violations.

One of the entities in the data center is participants . Participants allow access to services of the data center as specified in SLAs. The potential violation that may occur at this level is to abuse privileges to gain knowledge about other participants data and applications or block their access. Another entity of the data center are facilities such as buildings e.g. building  and building  rooms server racks cabinets and cables. Physical damage on these may lead to loss of multiple items of hardware and service.

Violation may occur on hardware entities in the data center as well. The hardware entities servers workstations hard drives tape drives routers e.g. router and the like may experience failure or destruction which leads to unavailability of software. The software itself can also be treated as a risk element. Software entities may be virtual machines application servers database management systems and operating systems. These may contain flaws or be compromised causing alterations in normal behavior that corrupt and make data unavailable.

Another entity of data center is data such as files which may include documents models personal information catalogues certificates namespaces and the like. Any violation of the SLA on these leads to corrupted data and inaccurate information.

Hierarchical dependencies between the described violations are possible. For example damage to facility entities will potentially lead to damaged hardware hence corrupted software and hence lost data. Therefore the risks of SLA violations vary depending on what infrastructure elements two different customers share to support their applications.

To protect the entities of the data center s architecture against such violations several levels of isolation LOI can be defined. Each level of isolation is set up to isolate and hence protect a particular entity and the data residing therein. In one embodiment the level of isolation is included as an additional term in a service level agreement between a customer e.g. participants and the service provider e.g. data center . The customer and the data center negotiate the appropriate level of isolation and the corresponding costs. The negotiation of an SLA is a multi step process in which the customer determines the best trade off between the avoidance of perceived risk by choosing an appropriate LOI and the related costs caused by this LOI. An SLA includes a set of measurable terms that represent guarantees provided by the data center to a customer. The LOI as part of the SLA terms is associated with quantitative approximations of the related costs for isolation of particular infrastructure resources for providing the isolation guarantee.

Depending on the complexity of a data center s architecture a number of levels of isolation can be defined. For data center the following exemplary levels are defined.

LOI Naming isolation objects and processes are associated with a namespace unique to the customer but may be stored in the same file system use the same server instance and executed in same memory space. For example process and files associated with customer  are hosted on the same file system as process and files associated with customer  . At this level risks are highest as failure of one database or server instance affects many customers. Costs for this isolation are lowest as the same server instances and physical machines can be used to support several customers given the capacities of the software and hardware.

LOI Object isolation objects are placed on a separate disk partition of a machine but processes of different customers are executed in the same physical or logical memory space. Database and application are running as a separate instance from file system and processes and . Risks are high as there is a mechanism for protecting against propagation of data compromise but not against execution or machine failure. Costs are low as physical resources are still shared and the partitioning mechanism is simple and does not significantly add to the overhead.

LOI Virtual network isolation processes and objects can only be accessed over a reserved virtual network interface by multiplexing using encryption over the same interface. shows the multiplexing of shared router leading from buildings  . Thus each customer can communicate using a different logical subnet interface and IP address. Risks are lower than for LOI as there is better protection of customer s confidentiality integrity and access control. Costs are higher than for LOI as there is a need to manage additional software e.g. a virtual private network VPN server and separate security contexts ports and keys .

LOI Virtual machine VM isolation processes and objects are executed and stored in a separate logical memory space and partition of a machine. Machine is shared by the processes and objects of customer  and customer  . The processes and objects of customer  are running in VM . The processes and objects of customer  are running in VM . The risks are lower than LOI as the propagation of failure or compromise of one VM is difficult without significant effort and privileged access. Costs are higher than LOI as using these solutions includes having licenses for the software as well as additional computational requirements placed on the underlying physical machines.

LOI Hardware machine isolation processes and objects of a customer are stored on individual physical machines or on physically separated stand alone computational units. These units can be accessible by the customer and possibly an administrator. Processes and objects of customer  only are hosted by a single machine . Risks are lower than for LOI as physical isolation is used and machine failures are easier to isolate. Costs are higher than for LOI as a data center may have thousands of customers and users and supporting this scenario means thousands of machines and even additional machines for fail over scenarios and data archiving.

LOI Physical network isolation processes and objects of a customer are stored on a physical machine reserved only for that customer and connected to a physical gateway reserved for the customer. Machine and router are reserved only for the processes and objects of customer  . Risks are lower than for LOI as this is almost perfect level of isolation. Costs are higher than for LOI as the customer s needs require an additional network of machines to be maintained.

LOI Location isolation resources reserved for a customer are stored in a separate physical room or building. Machine and router of customer  are hosted by building  . Risks are lowest as there is no interference or dependence on other customers for example customer  . This is the perfect level of isolation. Costs are highest as an entire physical space and utilities are dedicated to customer  .

The levels of isolation can be different than laid out above depending on data center s architecture. Each LOI represents a different configuration in response to perceived risk of SLA violation due to resource sharing. The costs of security are tightly connected with the calculated risk.

Compartment is a subclass of managed element class. Compartment implements a management interface for managed element . The management interface includes for example the following methods 1 init that initializes an instance of managed element with a set of variables of configuration 2 start that deploys managed element creates a registration in the registry of its encapsulating compartment and makes it available for usage 3 stop that disables the availability of managed element but does not remove it from the registry 4 terminate that removes properties and state of managed element from the registry 5 check health that checks predefined parameters of managed element s state for compliance with a set of terms defined in SLA and 6 set config that adjusts configuration of managed element to an updated set of variables.

Multiple compartments provide the same logical operational interface but vary with respect to their internal implementation and guaranteed protection against SLA violation in accordance with the LOI specified in the SLA. Managed elements isolated by the same compartment are governed by the same SLA and share the same namespace. The following security principles are implemented 1 confidentiality data maintained by managed element in compartment cannot be read outside the compartment without having a secret stored in the compartment 2 integrity operations performed on data maintained by managed element in compartment must be verifiable with keys known and trusted in the compartment 3 access control access to operations on managed element in compartment from external managed element or participant can be granted only if there is explicit policy e.g. policy that permits this operation 4 fail independence failure of managed element in compartment do not cause managed element of another compartment to fail and 5 non interference data exchanges and interactions several managed elements in compartment cannot be externally monitored unless there is an explicit policy e.g. policy that allows this.

Policies are of the format . Subject is either managed element or participant that initiates an access request. Target is the managed element targeted by an access request. Function is the operation or action on interface or state of a target . Constraint is a constant or logical expression that defines under what condition the subject can perform the function on the target .

Different compartments can be compared when making provisioning decisions. For example customer  and customer  may want to have the same application and data hosted but pay for different level of isolation. Customer  may demand entire building  of data center to be reserved while customer  may want to pay only for having a virtual machine for his or her applications and data. Although these two requests are different in respect to resources they can be treated in the same manner. That is regardless of if compartments are physical or logical the provisioning process performs only the operations specified in their managed elements or compartment class interfaces.

In one embodiment of the invention the configuration compartment template represents a template that could be based on a schema description of a given configuration of a level of isolation. The configuration schema may include the following elements 1 ON that specifies a precondition before the configuration action can be performed 2 DO that specifies the identifier of the configuration action to be performed 3 ON that specifies the unique identifier of a provisioning daemon that is responsible for configuring a particular compartment listenting on a specific concrete machine interface or IP or port 4 WITH that specifies the actual system name of the utility that is predefined in the configuration of the provisioning daemon for performing a configuration action this should be done at the point where the provisioning daemon is installed 5 USING that specifies the set of parameters used for a configuration action that must be valid entries for a specific utility 6 ON FAIL that specifies the action to be performed or event to be fired if a configuration action fails and 7 THROW TO that specifies the event to be fired on completion of a configuration action.

Referring back to the exemplary seven levels of isolation that can be defined for data center and having in mind the configuration schema described above the following example shows the configuration schema for LOI according to an embodiment of the invention 

In this example a directory is created by a particular provisioning daemon on a machine with given name and path users are added to a router configured for this machine that can be accessed via a given Internet Protocol address interface and port and objects are added to the created directory on the machine.

There also may be other templates available depending on the needs of the customer. There are three phases in the process of autonomic provisioning of infrastructure resources negotiation infrastructure resource selection and incident response. Administrator A administrator B and administrator C can be involved in these phases correspondingly. The negotiation phase includes determining the infrastructure resources level of isolation and the costs for these resources to fulfill customer s requirements. Administrator A may be involved to load a negotiation strategy and offer a SLA with different LOIs to customer  . Customer  selects a particular level of isolation and defines this level in a service level agreement SLA with data center .

The LOI is presented as an additional term in the SLA . The SLA with the corresponding LOI is provided to data center . Autonomic provisioning service of data center determines the compartmentalization required to achieve the SLA. Autonomic provisioning service queries infrastructure registry and compartment manager IRCM for a set of heterogeneous resources required by the SLA. The IRCM checks infrastructure registry to verify that the set of resources are present. Infrastructure registry sends a response to IRCM if the resources are available or not. The response is then sent to the provisioning service . Data center confirms to customer  that the selected level of isolation is feasible if the resources are available in the infrastructure registry . If the resources are not available the data center can find a way to ensure these resources by archiving old data or obtaining new resources.

When the required infrastructure resources are present autonomic provisioning service selects a configuration compartment template for the corresponding LOI. Autonomic provisioning service sends the selected configuration template to IRCM . IRCM provides a common management interface to the set of heterogeneous resources. According to the received configuration template IRCM allocates the set of resources in infrastructure registry . IRCM sends notification to monitoring unit . Monitoring unit uses a plurality of provisioning daemons to monitor the infrastructure resources. Provisioning daemons collect information about the infrastructure s state and capacity. The provisioning daemons run and listen in the background awaiting commands from the provisioning service . Each provisioning daemon has platform specific logic installed for executing the specification of compartment configuration templates according to the level of isolation LOI . Monitoring unit filters the collected information and creates health check and compliance events on resources depending on the types of applications hosted by data center . The health check and compliance events are of the form where flag indicates whether or not the current physical host is in healthy state. The collected information is sent to the provisioning service .

When the set of heterogeneous infrastructure resources are allocated a compartment model of the corresponding level of isolation is created. The lifecycle of the compartment begins with setting up instantiation and activation of the compartment. The setting up includes enabling security roles access control and other configuration parameters on the resources. When the compartment is completely instantiated and activated a service endpoint to its gateway is generated and customized for customer  .

Customer  may have multiple compartments and may change the SLA on an existing compartment. This may include changing the LOI of one or more components in the original agreement resulting in possible migration and readjustment of the managed elements supporting the compartment.

The LOI concept and compartment model support four main objectives self configuration self optimization self healing and self protection. Self configuration refers to the automated configuration of components and systems based on high level policies. Self optimization refers to the continuous systematic improvement of performance and efficiency. Self healing refers to detection and repair of localized software and hardware problems. Self protection refers to automatic alerts and defense against malicious attacks and propagating failures.

At block customer  selects a particular LOI and the resources needed to fulfill the SLA. A search is performed on the infrastructure resources at block to check availability. At decision block an autonomic provisioning service determines if a subset of the set of resources is available. If the resources are not available in the infrastructure registry the process continues at block or at block . The process continues at block if the data center can obtain new resources via archiving old data or purchasing new resources. The process continues at block if the data center and the customer decide to negotiate a new SLA.

Referring back to decision block if the resources are available in the data center the process continues at block . At block the customer and the data center finalize the negotiation of the SLA. The selected LOI is confirmed along with the corresponding subset of resources. The resources are defined in a configuration template.

At block the configuration template is sent to an infrastructure registry and compartment manager IRCM . At block the IRCM allocates the subset of resources in the registry.

In an embodiment when the subset of infrastructure resources is allocated in the registry of the data center a compartment is created at block . The compartment is an architectural representation of the selected and implemented level of isolation. At block security roles access control and entry points to the resources are created and enabled. Then at block the IRCM sends notification to a monitoring unit that the compartment with the corresponding resources is created.

Elements of embodiments may also be provided as a machine readable medium for storing the machine executable instructions. The machine readable medium is an article of manufacture and may include but is not limited to flash memory optical disks CD ROMs DVD ROMs RAMs EPROMs EEPROMs magnetic or optical cards or other type of machine readable media suitable for storing electronic instructions. For example embodiments of the invention may be downloaded as a computer program which may be transferred from a remote computer e.g. a server to a requesting computer e.g. a client by way of a communication link e.g. a modem or network connection .

It should be appreciated that reference throughout this specification to one embodiment or an embodiment means that a particular feature structure or characteristic described in connection with the embodiment is included in at least one embodiment of the present invention. Therefore it is emphasized and should be appreciated that two or more references to an embodiment or one embodiment or an alternative embodiment in various portions of this specification are not necessarily all referring to the same embodiment. Furthermore the particular features structures or characteristics may be combined as suitable in one or more embodiments of the invention.

In the foregoing specification the invention has been described with reference to the specific embodiments thereof. It will however be evident that various modifications and changes can be made thereto without departing from the broader spirit and scope of the invention as set forth in the appended claims. The specification and drawings are accordingly to be regarded in an illustrative rather than a restrictive sense.

