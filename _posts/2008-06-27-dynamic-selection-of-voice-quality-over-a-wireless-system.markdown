---

title: Dynamic selection of voice quality over a wireless system
abstract: Various systems, methods, and computer readable instructions are disclosed herein for dynamically allocating fixed bandwidth over a wireless link between a video game console and a wireless peripheral device. In an embodiment, the voice sample rate in a wireless microphone may be dynamically adjusted to free up bandwidth that can be repurposed for other operations. The sample rate adjustment can range from maximum where the bandwidth is filled with voice data to a lesser sample rate. In the case where the sample rate is less than max, the freed up bandwidth can be for used for other operations.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09327193&OS=09327193&RS=09327193
owner: Microsoft Technology Licensing, LLC
number: 09327193
owner_city: Redmond
owner_country: US
publication_date: 20080627
---
A portion of the disclosure of this patent document may contain material that is subject to copyright protection. The copyright owner has no objection to the facsimile reproduction by anyone of the patent document or the patent disclosure as it appears in the Patent and Trademark Office patent files or records but otherwise reserves all copyright rights whatsoever. The following notice shall apply to this document Copyright 2006 2007 Microsoft Corp.

The presently disclosed subject matter relates to the field of computing and electronics and more particularly to fields such as entertainment consoles although these are merely exemplary and non limiting fields.

Video game and entertainment systems are increasingly incorporating new accessories for providing user interfaces and control actions. For example wireless features and accessories such as steering wheels and motion sensors are becoming increasingly common. Microphones and musical instrument simulators are also becoming popular.

One drawback of wireless accessories is the limited bandwidth. Wireless accessories typically use ISM frequency bands that must compete with other wireless systems and are often subject to other limitations. Wireless microphones are one such wireless accessory that does not necessarily require maximum data bandwidth on a continuous basis. For example during time periods where the user is not speaking into the microphone voice data does not need to be transmitted and thus the data channel may be used for other purposes. It would be advantageous to better utilize the data bandwidth resources in such cases.

Various systems methods and computer readable instructions are disclosed herein for dynamically selecting the voice sample rate and hence the quality in a wireless microphone to free up bandwidth in the wireless system that can be repurposed for other operations. For example an additional voice input could be added another data source can be used for transmission or the clock of the CPU could be reduced to save battery life.

In an embodiment in a gaming system the game software can command or request a different voice sample rate on the wireless microphone dynamically and allow for other operations to occur that it otherwise couldn t due to bandwidth constraints. In another embodiment an interactive microphone device can either be requested by a console or self selectable where the audio sample rate can be dynamically adjusted. The sample rate adjustment can range from maximum where the bandwidth is filled with voice data to a lesser sample rate. In the case where the sample rate is less than max the freed up bandwidth can be for used for other operations.

It should be noted that this Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used as an aid in determining the scope of the claimed subject matter.

This section of the present disclosure provides the general aspects of an exemplary and non limiting game console. Referring now to a block diagram shows an exemplary multimedia console. The multimedia console has a central processing unit CPU having a level 1 L1 cache a level 2 L2 cache and a flash ROM Read only Memory . The level 1 cache and level 2 cache temporarily store data and hence reduce the number of memory access cycles thereby improving processing speed and throughput. The flash ROM may store executable code that is loaded during an initial phase of a boot process when the multimedia console is powered. Alternatively the executable code that is loaded during the initial boot phase may be stored in a flash memory device not shown . Furthermore ROM may be located separate from CPU .

A graphics processing unit GPU and a video encoder video codec coder decoder form a video processing pipeline for high speed and high resolution graphics processing. Data is carried from the graphics processing unit to the video encoder video codec via a bus. The video processing pipeline outputs data to an A V audio video port for transmission to a television or other display. A memory controller is connected to the GPU and CPU to facilitate processor access to various types of memory such as but not limited to a RAM Random Access Memory .

The multimedia console includes an I O controller a system management controller an audio processing unit a network interface controller a first USB host controller a second USB controller and a front panel I O subassembly that are preferably implemented on a module . The USB controllers and serve as hosts for peripheral controllers a wireless adapter and an external memory unit e.g. flash memory external CD DVD ROM drive removable media etc. . The network interface and or wireless adapter provide access to a network e.g. the Internet home network etc. and may be any of a wide variety of various wired or wireless interface components including an Ethernet card a modem a Bluetooth module a cable modem and the like.

System memory is provided to store application data that is loaded during the boot process. A media drive is provided and may comprise a DVD CD drive hard drive or other removable media drive etc. The media drive may be internal or external to the multimedia console . Application data may be accessed via the media drive for execution playback etc. by the multimedia console . The media drive is connected to the I O controller via a bus such as a Serial ATA bus or other high speed connection e.g. IEEE 1394 .

The system management controller provides a variety of service functions related to assuring availability of the multimedia console . The audio processing unit and an audio codec form a corresponding audio processing pipeline with high fidelity 3D surround and stereo audio processing according to aspects of the present disclosure described above. Audio data is carried between the audio processing unit and the audio codec via a communication link. The audio processing pipeline outputs data to the A V port for reproduction by an external audio player or device having audio capabilities.

The front panel I O subassembly supports the functionality of the power button and the eject button as well as any LEDs light emitting diodes or other indicators exposed on the outer surface of the multimedia console . A system power supply module provides power to the components of the multimedia console . A fan cools the circuitry within the multimedia console .

The CPU GPU memory controller and various other components within the multimedia console are interconnected via one or more buses including serial and parallel buses a memory bus a peripheral bus and a processor or local bus using any of a variety of bus architectures.

When the multimedia console is powered on or rebooted application data may be loaded from the system memory into memory and or caches and executed on the CPU . The application may present a graphical user interface that provides a consistent user experience when navigating to different media types available on the multimedia console . In operation applications and or other media contained within the media drive may be launched or played from the media drive to provide additional functionalities to the multimedia console .

The multimedia console may be operated as a standalone system by simply connecting the system to a television or other display. In this standalone mode the multimedia console may allow one or more users to interact with the system watch movies listen to music and the like. However with the integration of broadband connectivity made available through the network interface or the wireless adapter the multimedia console may further be operated as a participant in a larger network community. In this latter scenario the console may be connected via a network to a server for example.

Second now turning to illustrated is a block diagram representing an exemplary computing device that may be suitable for use in conjunction with implementing the subject matter disclosed above. Numerous embodiments of the present disclosure may execute on a computer. For example the computer executable instructions that carry out the processes and methods for providing PC experiences on gaming consoles may reside and or be executed in such a computing environment as shown in . The computing system environment is only one example of a suitable computing environment and is not intended to suggest any limitation as to the scope of use or functionality of the presently disclosed subject matter. Neither should the computing environment be interpreted as having any dependency or requirement relating to any one or combination of components illustrated in the exemplary operating environment . In some embodiments the various depicted computing elements may include circuitry configured to instantiate specific aspects of the present disclosure. For example the term circuitry used in the disclosure can include specialized hardware components configured to perform function s by firmware or switches. In other examples embodiments the term circuitry can include a general purpose processing unit memory etc. configured by software instructions that embody logic operable to perform function s . In example embodiments where circuitry includes a combination of hardware and software an implementer may write source code embodying logic and the source code can be compiled into machine readable code that can be processed by the general purpose processing unit. Since one skilled in the art can appreciate that the state of the art has evolved to a point where there is little difference between hardware software or a combination of hardware software the selection of hardware versus software to effectuate specific functions is a design choice left to an implementer. More specifically one of skill in the art can appreciate that a software process can be transformed into an equivalent hardware structure and a hardware structure can itself be transformed into an equivalent software process. Thus the selection of a hardware implementation versus a software implementation is one of design choice and left to the implementer.

Computer typically includes a variety of computer readable media. Computer readable media can be any available media that can be accessed by computer and includes both volatile and nonvolatile media removable and non removable media. The system memory includes computer storage media in the form of volatile and or nonvolatile memory such as read only memory ROM and random access memory RAM . A basic input output system BIOS containing the basic routines that help to transfer information between elements within computer such as during start up is typically stored in ROM . RAM typically contains data and or program modules that are immediately accessible to and or presently being operated on by processing unit . By way of example and not limitation illustrates operating system application programs other program modules and program data .

The computer may also include other removable non removable volatile nonvolatile computer storage media. By way of example only illustrates a hard disk drive that reads from or writes to non removable nonvolatile magnetic media a magnetic disk drive that reads from or writes to a removable nonvolatile magnetic disk and an optical disk drive that reads from or writes to a removable nonvolatile optical disk such as a CD ROM or other optical media. Other removable non removable volatile nonvolatile computer storage media that can be used in the exemplary operating environment include but are not limited to magnetic tape cassettes flash memory cards digital versatile disks digital video tape solid state RAM solid state ROM and the like. The hard disk drive is typically connected to the system bus through an non removable memory interface such as interface and magnetic disk drive and optical disk drive are typically connected to the system bus by a removable memory interface such as interface .

The drives and their associated computer storage media discussed above and illustrated in provide storage of computer readable instructions data structures program modules and other data for the computer . In for example hard disk drive is illustrated as storing operating system application programs other program modules and program data . Note that these components can either be the same as or different from operating system application programs other program modules and program data . Operating system application programs other program modules and program data are given different numbers here to illustrate that at a minimum they are different copies. A user may enter commands and information into the computer through input devices such as a keyboard and pointing device commonly referred to as a mouse trackball or touch pad. Other input devices not shown may include a microphone joystick game pad satellite dish scanner or the like. These and other input devices are often connected to the processing unit through a user input interface that is coupled to the system bus but may be connected by other interface and bus structures such as a parallel port game port or a universal serial bus USB . A monitor or other type of display device is also connected to the system bus via an interface such as a video interface . In addition to the monitor computers may also include other peripheral output devices such as speakers and printer which may be connected through a output peripheral interface .

The computer may operate in a networked environment using logical connections to one or more remote computers such as a remote computer . The remote computer may be a personal computer a server a router a network PC a peer device or other common network node and typically includes many or all of the elements described above relative to the computer although only a memory storage device has been illustrated in . The logical connections depicted in include a local area network LAN and a wide area network WAN but may also include other networks. Such networking environments are commonplace in offices enterprise wide computer networks intranets and the Internet.

When used in a LAN networking environment the computer is connected to the LAN through a network interface or adapter . When used in a WAN networking environment the computer typically includes a modem or other means for establishing communications over the WAN such as the Internet. The modem which may be internal or external may be connected to the system bus via the user input interface or other appropriate mechanism. In a networked environment program modules depicted relative to the computer or portions thereof may be stored in the remote memory storage device. By way of example and not limitation illustrates remote application programs as residing on memory device . It may be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used.

This network may itself comprise other computing entities that provide services to the system of and may itself represent multiple interconnected networks. In accordance with an aspect of the presently disclosed subject matter each entity and may contain discrete functional program modules that might make use of an API or other object software firmware and or hardware to request services of one or more of the other entities and .

It can also be appreciated that an object such as may be hosted on another computing device . Thus although the physical environment depicted may show the connected devices as computers such illustration is merely exemplary and the physical environment may alternatively be depicted or described comprising various digital devices such as PDAs televisions MP3 players etc. software objects such as interfaces COM objects and the like.

There are a variety of systems components and network configurations that support distributed computing environments. For example computing systems may be connected together by wired or wireless systems by local networks or widely distributed networks. Currently many networks are coupled to the Internet which provides an infrastructure for widely distributed computing and encompasses many different networks. Any such infrastructures whether coupled to the Internet or not may be used in conjunction with the systems and methods provided.

A network infrastructure may enable a host of network topologies such as client server peer to peer or hybrid architectures. The client is a member of a class or group that uses the services of another class or group to which it is not related. In computing a client is a process i.e. roughly a set of instructions or tasks that requests a service provided by another program. The client process utilizes the requested service without having to know any working details about the other program or the service itself. In a client server architecture particularly a networked system a client is usually a computer that accesses shared network resources provided by another computer e.g. a server. In the example of any entity and can be considered a client a server or both depending on the circumstances. And moreover regarding the entertainment console it can be a client to a server.

A server is typically though not necessarily a remote computer system accessible over a remote or local network such as the Internet. The client process may be active in a first computer system and the server process may be active in a second computer system communicating with one another over a communications medium thus providing distributed functionality and allowing multiple clients to take advantage of the information gathering capabilities of the server. Any software objects may be distributed across multiple computing devices or objects.

Client s and server s communicate with one another utilizing the functionality provided by protocol layer s . For example HyperText Transfer Protocol HTTP is a common protocol that is used in conjunction with the World Wide Web WWW or the Web. Typically a computer network address such as an Internet Protocol IP address or other reference such as a Universal Resource Locator URL can be used to identify the server or client computers to each other. The network address can be referred to as a URL address. Communication can be provided over a communications medium e.g. client s and server s may be coupled to one another via TCP IP connection s for high capacity communication.

In light of the diverse computing environments that may be built according to the general framework provided in and the further diversification that can occur in computing in a network environment such as that of the systems and methods provided herein cannot be construed as limited in any way to a particular computing architecture or operating system. Instead the presently disclosed subject matter should not be limited to any single embodiment but rather should be construed in breadth and scope in accordance with the appended claims. Thus for example although game consoles and server PCs have been discussed just as easily full desktops could be remoted to smart phones as a means to access data and functionality that is otherwise unavailable to smart phones.

Finally it should also be noted that the various techniques described herein may be implemented in connection with hardware or software or where appropriate with a combination of both. Thus the methods computer readable media and systems of the presently disclosed subject matter or certain aspects or portions thereof may take the form of program code i.e. instructions embodied in tangible media such as floppy diskettes CD ROMs hard drives or any other machine readable storage medium where when the program code is loaded into and executed by a machine such as a computer the machine becomes an apparatus for practicing the subject matter.

In the case of program code execution on programmable computers the computing device may generally include a processor a storage medium readable by the processor including volatile and non volatile memory and or storage elements at least one input device and at least one output device. One or more programs that may utilize the creation and or implementation of domain specific programming models aspects of the present disclosure e.g. through the use of a data processing API or the like are preferably implemented in a high level procedural or object oriented programming language to communicate with a computer system. However the program s can be implemented in assembly or machine language if desired. In any case the language may be a compiled or interpreted language and combined with hardware implementations.

A video game system may provide a platform for wireless accessories such as game controllers and microphones. Video game and entertainment systems are increasingly incorporating new accessories for providing user interfaces and control actions. For example wireless features and accessories such as steering wheels and motion sensors are becoming increasingly common. Microphones and musical instrument simulators are also becoming popular. A wireless microphone may further include other functions such as motion sensors and accelerometers.

Various technologies may be used to implement the wireless communications link. For example to provide a common interface with as many off the shelf CPU parts as possible and to support the required data traffic a Serial Peripheral Interface SPI based design may be implemented. SPI is an interface that enables the serial exchange of data between a master and a slave device. SPI typically uses a synchronous protocol where transmitting and receiving is guided by a clock signal generated by master microcontroller. The SPI interface allows the connection of several SPI devices while a master selects each device with a CS Chip Select signal. SPI is a synchronous serial data link standard. Devices communicate in a master slave mode where the master device initiates the data frame. Multiple slave devices are allowed with individual chip select lines.

A smart transceiver device may provide receiver and transmitter functions for physical and link wireless communications layers. In particular the PHY and Link layers of a wireless protocol stack and wireless protocol functionality for such a device may be implemented in a wireless application specific integrated circuit ASIC . In one embodiment the smart transceiver may be the slave and a master control application may be the master of an SPI bus.

Wireless communication may be provided using a frequency hopping digital radio protocol with time division multiplexed access TDMA granting radio time for each wireless accessory. The unlicensed worldwide 2.4 GHz Industrial Scientific Medical ISM radio band may be utilized. A minimum of external components may be needed to implement a complete Frequency Hopping Spread Spectrum FHSS 2.4 GHz ISM band digital radio transceiver compliant with worldwide regulatory requirements.

The smart transceiver device may be designed to simultaneously support up to four data and voice accessories or four data only and 4 voice only accessories or any combination in between. The smart transceiver when implemented in a wireless accessory may communicate with wireless video game consoles or a wireless enabled personal computer or other computing device that is equipped with a similar smart transceiver.

The smart transceiver is a platform that may be used to support various product configurations. Firmware within the smart transceiver may be adjusted to support various product versions without changing the chip hardware. In a video game system the smart transceiver may be used to support video console products game controller products and various peripheral products.

One drawback of using wireless accessories in a system may be limited bandwidth. Furthermore wireless accessories typically use ISM frequency bands that must compete with other wireless systems and are often subject to other limitations such as interference from microwave ovens. Because wireless bandwidth is fixed for a given frequency band and link technology wireless systems need to efficiently use the available bandwidth. In a system where data requirements are dynamic a bandwidth allocation scheme that reallocates the available bandwidth based on current data requirements may provide more efficient bandwidth utilization.

A wireless microphone is one such wireless accessory that does not necessarily require maximum data bandwidth on a continuous basis. For example during time periods where the user is not speaking into the microphone voice data does not need to be transmitted and thus the data channel may be used for other purposes. Wireless microphones are merely exemplary and many other types of wireless devices may be considered such as wireless game controllers wireless musical instrument peripherals and the like.

In various embodiments methods systems and computer readable media containing instructions for dynamically allocating bandwidth in a wireless link is disclosed. In various embodiments a data quality measure is determined that indicates the amount of data desired for a particular data parameter. The data quality measure may be based on the video game context and may indicate for example data precision data resolution sampling rate data frequency and the like. In various embodiments the data quality measure may be indicated by a video game console a video game peripheral or other system component through a data quality index indicative of the data quality measure. The data quality index may be any variable type indicating a number letter data word or any other representation that provides an indication of the desired data quality measure for a data parameter to be transmitted or received via a wireless link in the system.

In one embodiment a method of dynamically selecting a voice sample rate and hence the quality in a wireless microphone is disclosed. Dynamic data quality selection may free up bandwidth in the wireless system and thus the overall bandwidth can be repurposed for other operations. For example when using wireless microphones additional voice inputs may be added a different data source may be used for transmission or the clock of the CPU may be reduced to save battery life.

In an embodiment the game software can command or request a different voice sample rate on the wireless microphone dynamically and allow for other operations that may have been unavailable due to bandwidth constraints. In other embodiments an interactive microphone device may either be requested by a console or self selectable where the audio sample rate can be dynamically adjusted. The sample rate adjustment may range from a maximum rate where the bandwidth may be filled with voice data to a lesser sample rate where the sample rate is less than maximum rate thus allowing for bandwidth that may be for used for other operations.

The specific data that may be transmitted over the wireless link may be of any type that is typically transmitted between a peripheral device and a game console. For example a wireless microphone may transmit sampled voice data. A device may comprise motion sensors gyroscopes and or accelerometers and may transmit acceleration velocity and or position data. A peripheral associated with a music application may transmit data related to the position of various musical instrument simulators. A wireless steering wheel device may transmit the direction and rate at which the steering wheel is being turned. Other peripherals may comprise a combination of sensors and data input devices.

The dynamic selection of data quality may be performed in a number of ways. In one embodiment the game console executing the video software application may determine the data quality based on the context of the video game. Video games may be designed in narrative form and may comprise a series of scenes. Each scene or part of a scene may be associated with a particular data quality indicator for a parameter that is expected from a peripheral device or controller. For example a particular scene may require that the player respond with physical motions using a wireless peripheral that includes a microphone and a motion sensor. During such a scene voice data may not be needed by the application. The video game context may be based upon the data quality indicator or data quality measure may be determined in a number of ways. For example each video game scene may be associated with a scene descriptor that indicates the general category of the scene. For example the scene descriptor may indicate the user interaction mode of a scene such as voice input expected controller movement expected button press expected and the like.

The console may then send a command to the peripheral indicating that voice data sampling may be reduced or suspended and may further indicate that motion sensor data be sampled at the maximum rate. The wireless peripheral may then increase the amount of motion sensor data transmission to the console either by sending additional data packets using additional channels or using a greater number of bits in a fixed or variable length data and command word. As known in the art a number of ways of increasing data transmission over a fixed link is possible using more channels using a greater number of bits in a formatted message increasing the frequency of data transmissions and the like.

In another embodiment some games may be predominantly defined by rules and the player interaction and thus the data quality indicator may be associated with a user action or a particular mode of play. For example a wireless peripheral may comprise a microphone and a motion sensor. A mode within a game application may further allow the player to choose between providing a voice input or a motion input. If the player chooses to provide a motion input the console and or peripheral may determine that the voice sampling rate may be reduced or temporarily suspended in order to maximum bandwidth for transmission of motion data.

In yet another embodiment a game may provide a data quality indicator indicating the video game context via an application programming interface API that may be provided by the console to provide interface support to the game application. The API may for example provide for a data structure that indicates the current data quality indicator for one or more data items. Thus the game application may provide indication to the console of the data frequency or data resolution to be transmitted during a particular segment of the game as indicated by parameters provided via the API. The data quality indicator may be provided at a higher level of abstraction allowing for the console to determine a specific data rate or frequency. For example the data quality indicator for a voice channel may be High Medium and Low. In other embodiments the data quality indicator may be more specific such as a particular data resolution or sampling frequency.

It should be noted that the process of dynamic selection of data quality may occur in the console applications executing in the console the peripheral any combination thereof or any other device or means. The dynamic selection may take place when the data quality index can be ascertained however obtained. As discussed above the console may detect and determine the selection based on the video game context based on information from the video game application. The information may be inferred or provided explicitly for example through an API. The console may also determine a video game context and data quality index based on user interactions with the video game application. As discussed above such interactions may include motions detected by the wireless peripheral. User interactions may also include commands entered by the user a voice input provided by the user and detected by the peripheral or other inputs provided by the user.

As discussed above the reallocation and repurposing of data over a wireless link may take place in a variety of ways. A wireless link may comprise a single channel over which messages may be transmitted between the console and the peripheral. Data parameters may be embedded within a single message or each message may comprise a single data parameter. In the former case the allocation of bits within the message and typically the data payload may be repurposed so that a parameter with a reduced data quality may be assigned a lesser number of bits and a second parameter may thus be allocated a greater number of bits. In the latter case a data parameter with a reduced data quality may be allocated a lesser number of messages and a second data parameter may be able to increase the number of messages to transmit data.

A wireless link between a console and peripheral may comprise more than one channel. In this case the repurposing of bandwidth may comprise the reallocation of channels. For example a wireless link comprises four channels all four of which are allocated to the transmission of voice data. The console may receive a data quality index indicating that the voice data quality may be reduced. The console may then reallocate one of the voice data channels for other data purposes.

Referring now to depicted is an exemplary data message that may be transmitted to or from a wireless peripheral device by a video game console. Such a message may typically comprise a header a synchronization word a preamble and an error correction code. The data to be transmitted is typically included in the data payload and in this example comprises Voice Uplink Data . Voice Uplink Data may further comprise data components Accelerometer Data and Encoded Voice Data . In this particular example the Accelerometer Data has been allocated 32 bits and the Encoded Voice Data has been allocated 480 bits. The Accelerometer Data may further be allocated 10 bits each for the X Y and Z axes and 2 bits for the scale factor. In a protocol where the length of the data payload is fixed the initial allocation between the accelerometer data and the voice data may represent a decision as to the expected amount of bits needed to adequately represent each parameter according to the needs of the game application. When the data quality can be dynamically reallocated the system need not be bound to the initial data allocations. As discussed above a data quality indicator or any other means of determining the amount of data needed for a particular time segment may be used to reallocate the initial bandwidth or bit allocation.

Referring to depicted is a reallocated data payload in response to one or more data quality indicators the content of which indicate that voice data quality may be reduced and that accelerometer data quality may be increased. Referring to the figure Accelerometer Data may now comprise 64 total bits further allocating an additional 10 bits per axis and doubling the number of scale factor bits to 4. The number of bits allocated to Encoded Voice Data may be correspondingly reduced to 448 total bits. The total number of bits allocated to the data payload may remain at 512 bits.

Referring now to depicted is an exemplary wireless video game link . The wireless video game link may further comprise a transceiver receiving and sending data for transmission to antenna . The data may be transmitted over a plurality of wireless data channels to wireless peripheral . In a link design where the number of wireless channels is fixed the initial allocation of channels reserved for voice and other data may represent a decision as to the expected amount of bandwidth needed to adequately represent each parameter according to the needs of the game application. When the data quality can be dynamically reallocated the system need not be bound to the initial channel allocations. As discussed above a video game context a data quality indicator or any other means of determining the amount of data needed for a particular time segment may be used to reallocate the initial channel allocation.

Referring to the plurality of data channels may be reallocated in response to one or more video game contexts or data quality indicators the content of which indicate that voice data quality may be reduced and that other data parameters may be increased. For example if the total number of data channels is four during certain phases of the game application all four data channels may be allocated to voice data. As a result of the received data quality indicator one or more of the four data channels may be reallocated to transmit other data. Such other data may include system status and configuration data other data available from the wireless peripheral data needed for the next game scenario and the like.

Referring now to illustrated is an exemplary process for the dynamic selection of data quality wherein a game console executing the video software application may determine the data quality based on the context of the video game. In process a video game application is launched by the game console. In process default bandwidth allocations may be established for data parameters to be transmitted and received over a wireless link. As indicated above video game scenes may be associated with a scene descriptor that indicates a data quality index. In process it may be determined if a new scene has been initiated. If so process may determine a data quality index for the new scene based on the general category of the scene. As discussed above the scene descriptor may indicate the user interaction mode of a scene such as voice input expected controller movement expected button press expected and the like.

In process a data quality measure may be determined for the data parameter of interest. In process the console may further reallocate the bandwidth of the wireless link in accordance with the updated data quality measure. In process the console may then send an associated command to the peripheral. For example the command may indicate that voice data sampling may be reduced or suspended and may further indicate that motion sensor data be sampled at the maximum rate. The wireless peripheral may then increase the amount of motion sensor data transmitted to the console either by sending additional data packets using additional channels or using a greater number of bits in a fixed or variable length data and command word.

Referring now to illustrated is an exemplary process for the dynamic selection of data quality wherein a game console executing the video software application may receive the data quality via an API provided to the video game application. In process a video game application is launched by the game console. In process default bandwidths may be established for data parameters to be transmitted and received over a wireless link. In process the video game application may provide a video game context or data quality index via the API.

In process a data quality measure may be determined for the data parameter of interest. In process the bandwidth allocation of the wireless link may be reallocated in accordance with the data quality measure. In process the console may then send an associated command to the peripheral.

Referring now to illustrated is an exemplary process for the dynamic selection of data quality wherein the video game console or peripheral may determine the data quality based on user interactions with the video game application. In process a video game application is launched by the game console. In process default data bandwidths may be established for data parameters to be transmitted and received over a wireless link. In process the wireless peripheral may determine a user interaction. As discussed above a wireless peripheral may comprise a microphone and a motion sensor. A mode within a game application may further allow the player to choose between providing a voice input or a motion input. If the player chooses to provide a motion input the console and or peripheral may determine that the voice sampling rate may be reduced or temporarily suspended in order to maximum bandwidth for transmission of motion data.

In process a data quality measure may be determined for the data parameter of interest based on the user interaction determined in process . In process . the peripheral may transmit data indicating the user interaction to the console. In some embodiments the peripheral may transmit data indicating a user action and the console may determine the user interaction based on received data. In process a data quality measure may be determined for the data parameter of interest. In process the bandwidth allocation of the wireless link may be reallocated in accordance with the data quality measure.

Lastly while the present disclosure has been described in connection with the preferred aspects as illustrated in the various figures it is understood that other similar aspects may be used or modifications and additions may be made to the described aspects for performing the same function of the present disclosure without deviating there from. For example in various aspects of the disclosure a method allocating bandwidth over a wireless link was disclosed. However other equivalent mechanisms to these described aspects are also contemplated by the teachings herein. Therefore the present disclosure should not be limited to any single aspect but rather construed in breadth and scope in accordance with the appended claims.

