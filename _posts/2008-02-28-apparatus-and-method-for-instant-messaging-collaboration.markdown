---

title: Apparatus and method for instant messaging collaboration
abstract: An apparatus and method for instant message transmission includes a message center coupled to one or more servers and to an event engine by a network. An instant message is transmitted to the message center by the event engine over the network. An algorithm determines the optimum path for the transmission of the instant message. Users may share identical data via instant messaging, and may make changes to the data as it is streamed in real-time to designated users over the network. It is emphasized that this abstract is provided to comply with the rules requiring an abstract that will allow a searcher or other reader to quickly ascertain the subject matter of the technical disclosure. It is submitted with the understanding that it will not be used to interpret or limit the scope or meaning of the claims. 37 CFR 1.72(b)
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08402095&OS=08402095&RS=08402095
owner: Oracle International Corporation
number: 08402095
owner_city: Redwood Shores
owner_country: US
publication_date: 20080228
---
The present application is a divisional of and claims priority to U.S. patent application Ser. No. 10 289 162 filed Nov. 5 2002 entitled Apparatus and Method For Instant Messaging Collaboration which claims benefit of U.S. Provisional Application No. 60 410 989 filed Sep. 16 2002 entitled Business Intelligence System all of which are incorporated by reference in their entirety for all purposes.

The present invention relates generally to the field of computer facilitated communications more particularly to instant messaging between users logged into a computer network.

A paramount concern in a modern enterprise is the ability to quickly respond to changing information. Electronic messaging systems such as instant messaging and e mail have provided convenient tools for contacting people or groups of people efficiently. These systems provide a fast and inexpensive method for individuals to communicate and collaborate. Reliance on electronic communication has increased markedly in recent years. As technology advances it is certain that organizations will become more dependent on immediate access to information to excel in a competitive environment.

It is also important for members of an organization to be able to effectively share identical screen images in real time such as text and graphics among one or more client computers. Users typically share these images with one another using e mail or instant message attachments. A practice known as screen sharing or window sharing is also used to allow for the display of identical information on computer screens or windows which are mutually connected in a distributed system. Nevertheless these solutions have shortcomings. For one instant messaging is not used for screen sharing. Instead users are typically connected via a slow connect medium which adversely affects the instantaneous quality of instant messaging. Furthermore when users send large attachments there is an overall slowdown in the speed and reliability of their networks as server capacity is consumed at high levels. In addition instant messaging systems are generally not scalable. There is typically only one path for a message to take over a network and past systems have lacked the intelligence to find a more optimum path for the instant messages.

Consequently if there is too much traffic on a particular path the recipient of an instant message may be subjected to a substantial delay.

Still another major shortcoming of existing instant messaging systems is that they do not provide a secure medium for confidential communication. Instant messaging has been traditionally conducted over the Internet with communications sent via clear text. This type of insecure forum is often unacceptable for high security business information. Finally most instant messaging systems cannot track the presence of an individual throughout an organization. If an emergency happens within the organization for example there is no way to automatically alert the proper individuals using existing instant messaging technology.

What is needed is a comprehensive instant messaging system that allows for encrypted communication collaborative screen sharing using the instant messaging system and extensibility. Furthermore an instant messaging system that is able to track the presence of individuals within an organization and to alert those individuals automatically if a predetermined event occurs would also be beneficial.

A system and method for instant messaging collaboration is described. In the following description numerous specific details are set forth such as the architecture of a message center details regarding particular types of instant messaging collaboration and the use of the invention for sharing business reports in order to provide a thorough understanding of the present invention. However persons having ordinary skill in the computer arts will appreciate that these specific details may not be needed to practice the present invention.

According to one embodiment of the present invention an instant messaging system is provided that allows users to transmit messages instantaneously to any user located in a list of users contained in the instant messaging system. The system is able to track the presence of users that are using the instant message system within an organization and to send users alerts about changing information within the organization. For example if the instant messaging system is used in an oil refinery and there is a dangerous condition occurring in the refinery an instant message may be sent to the appropriate people within the refinery so that they are able to immediately respond to the event. The system also provides for instant messaging through e mail if users are not using the instant messaging system.

In one embodiment the instant messaging system allows users to plug in their own security such as bit encryption so that confidential information may be transmitted between users in a highly secure manner. In another embodiment a proprietary instant messenger allows for peer to peer collaboration completely bypassing a server for instant messaging. In this manner users of the system may communicate directly with one another and share identical screen images without having to communicate through the Internet or with any other server for that matter. If an image on one user s screen changes this change may be streamed in real time to all other participants in the instant messaging collaboration. The instant messaging system of the present invention is also extensible such that message deliveries can be farmed out to back up servers to send instant messages to users if network traffic necessitates this type of transmission.

Referring now to there is shown a block diagram illustrating an enterprise computing runtime environment according to one embodiment of the present invention. There is shown in a simplistic view of an enterprise computing runtime environment containing a plurality of enterprise systems that are often utilized in an organization. In these enterprise systems include back office applications for enterprise resource planning ERP front office applications for customer relationship management CRM customized legacy systems and multidimensional relational database management systems RDBMS . Of course a variety of other applications not shown in this view may also exist in the enterprise computing runtime environment . These disparate systems may be coupled to one another using a local area network LAN a wide area network WAN or any other such networking environments commonplace in offices enterprise wide computer networks the intranet and the Internet. Further network may include a wireless network such that one or more computers may operate over a wireless LAN.

As is known in the art the existing enterprise systems contain a variety of different data about the organization. For example the ERP system may contain data regarding essential business functions including payroll manufacturing general ledger and human resources whereas the CRM system may contain core information regarding the organization s customers. As data in these various systems changes e.g. a sale is made a new employee is hired payroll is processed etc. one or more message queuing systems may be used to allow these various applications etc. to exchange information on the data being stored in their systems. To this end one implementation of the present invention employs a message queue server e.g. the Microsoft RTM message Queue Server MSMQ not shown in this view although other message queuing systems may be used as well to provide loosely coupled and reliable network across servers communication services based on a message queuing model. In MSMQ messages are sent to a queue where the message is retained in storage until it is removed and used by another application. In this manner loosely coupled applications can share data to provide an enterprise wide view of information such as data and business transactions.

An enterprise link is coupled to the enterprise computing runtime environment through a network connection such as the Internet . Of course as is noted above the network connection may also be a LAN a WAN a wireless network or any other system of connections that allows one or more computers to exchange information. The enterprise link integrates in real time the disparate data in the message queues. The enterprise link of the present invention is maintained active. It continuously accepts raw data feeds etc. from the existing enterprise systems and then reformats synchronizes and consolidates the data.

In a traditional model the data in the message queues is usually processed through the dataflow system when a specified number of records had built up within the message queues i.e. the data is then transmitted in batch mode . According to an algorithm contained within the data flow system of the present invention however individual records are processed through to the enterprise link the moment that they appear that is the program continuously checks for new messages and handles them in real time. In this manner real time data flow is transmitted through the raw data feeds via the message queues.

It should be noted that although a message queuing system is used in one embodiment the enterprise link may also obtain data from the enterprise computing runtime environment in a variety of other ways. These sources of data may be for example HyperText Transport Protocol HTTP requests and or Application Programming Interface API calls and or Web Services calls. In these alternative embodiments the enterprise link contains a web server not shown in this view to process the HTTP requests and or another application or server to process the API and or Web Service calls.

Regardless of how the enterprise link receives the raw data feeds e.g. the enterprise link transmits the data it receives from the enterprise computing runtime environment via a network connection to an active data cache ADC . Alternatively the data may be transmitted to the ADC via some other connection. The ADC comprises a high performance memory based persistent cache which stores the data e.g. as shown by stars and it receives from the enterprise link . The ADC contains code which may be implemented in software such as Java Perl C or other types of programming languages that can be stored on a computer readable medium e.g. a disk to manage the data that is actively changing within the enterprise computing runtime environment and to make the data accessible to the end user in real time. In this manner the data represented by stars and in the ADC is constantly changing such that it is synchronized in real time with the data in the enterprise computing runtime environment . The data and in the ADC may also be made persistent to disk as disk is optionally used for backup restore and recovery purposes.

An active designer is the component module of the enterprise link that determines the particular data that is contained within the ADC . Active designer determines the process by which the data and is transmitted to the ADC . As is shown in the active designer is also connected to the enterprise computing runtime environment via the Internet . The active designer essentially contains one or more lists of data flow definitions that define which operations are to be performed on the data that is transmitted to the active designer through the network connection . Again the code for the data flow definitions may be implemented in software such as JAVA Perl C C or other types of programming languages that can be stored on a computer readable medium.

By way of example when sales data arrives at the ERP the active designer may contain a set of data flow definitions on how to retrieve transform and display this data. Each data flow definition may include executable software code instructing the enterprise link to retrieve by way of example the data within the salesperson field whenever a sale is made to describe how many sales that salesperson has made for the day etc. and then to transmit this data to the ADC .

In the embodiment of the ADC is connected to a message center through the Internet . Alternatively connections to the message center may be made through the intranet a LAN a WAN or any of the other conventional network connections. The message center is essentially a broadcast center in that it transmits instant messages about important data that is actively changing within the enterprise computing runtime environment . When the ADC receives a transmission about changing data and or an event that occurred within the enterprise computing runtime environment it transmits this data to an event engine . The event engine may be coupled to the ADC through the Internet the intranet a LAN a WAN or any of the other network connections. The event engine contains an algorithm for determining that an instant message about the particular event needs to be transmitted to the message center . If the event engine determines that a message about the particular event must be transmitted to the message center it transmits this data to an Application Programmer s Interface API contained within the message center architecture. The message center then executes instantaneous message delivery to one or more users as will be described in more detail herein. In addition the message center allows for instant messaging collaboration among one or more users as will also be described herein. A monitoring service such as a switchboard not shown in this view may also track a user of the instant messaging system and will notify a user who is a recipient of an instant message.

Referring now to there is shown a block diagram of the message center architecture according to one embodiment of the present invention. The main server component of the message center includes the API layer which may interface with a variety of outside components in an enterprise computing runtime environment through an event engine . The event engine may be coupled to the main server component via a network connection such as an intranet or Internet network or any other type of network connection as described herein. The main server component also includes a presence component and a user manager . The presence component determines the state of individual instant messenger users and that is whether users and are on line or off line and variations of how contactable a particular user is. Of course it should be noted that although only two users and are illustrated in the number of users may vary. In some instances hundreds or thousands of users may simultaneously use the instant messaging system described herein.

The presence component may determine for example that a user is off line and therefore may not receive an instant message. The presence component may also determine that even though a user may not be using instant messaging that the user has an e mail address where the instant message may be sent to be viewed the next time the user checks e mail. The user manager allows the server component to obtain log in information for various users. The user manager also maintains lists of users that the server component may communicate with via instant messaging. Local user information including the name and e mail address of users may also be contained within the server component of the message center architecture.

A variety of plug ins and may be connected to the message center to allow the message center to contact instant messaging users and . In the embodiment illustrated by the plug ins and include a proprietary instant messaging plug in and a Simple Mail Transfer Protocol SMTP plug in that interfaces directly with a mail server . Of course a variety of other plug ins may be used as well. A Microsoft instant messaging plug in allows the message center to interface with Microsoft s instant messaging server . The server component logs on to Microsoft s instant messaging server as a peer. The server component has its own user that may log into the Microsoft instant messaging server through a network connection such as the Internet .

Components of the enterprise computing runtime environment may use the event engine to transmit messages through the API layer directly to the Microsoft instant messaging server through plug in . The Microsoft instant messaging server may then use the Internet to transmit the instant message to a user . For instance if an instant message needs to be sent to user within an organization the event engine immediately transmits this message to the server component . The user manager resolves the user s e mail address on the Microsoft instant messaging server . The server component employs the presence component to determine whether or not user is on line. If user is not on line then a message is transmitted back to the message center indicating that the user is not on line and thus cannot be contacted. Alternatively the server component may send the instant message to the user via e mail through the SMTP mail protocol plug in for the user to receive next time the user checks his in box. If the user is on line however then the plug in immediately transmits the message via the Internet to the Microsoft instant messaging server . The Microsoft instant messaging server then transmits the message to the user .

In another embodiment of the present invention a user may receive instant messages without using the Microsoft instant messaging server . For example the proprietary instant messaging plug in allows instant messages to be transmitted from the event engine to users who are logged into a proprietary server . If a message arrives at the server component from the event engine for the user the user manager is able to resolve the user s e mail address and transmit the message to the user via the mail server plug in . In addition the message center is able to determine how the user is logged on to the system. That is it recognizes that the user is logged on using the proprietary server and therefore is able to send the message to the user via the proprietary instant messaging plug in .

Instant messages may be sent using the proprietary instant messaging plug in and the SMTP plug in simultaneously. Or alternatively an algorithm within the server component may contain a set of rules to determine the best mode of instant message transmission. For example if a message arrives at the message center for user an algorithm may dictate that the instant message first try to be sent via the Microsoft instant messaging server next through the proprietary server and if this fails through the SMTP plug in via the mail server .

In another embodiment an algorithm may be used to try to transmit the instant message through the proprietary server first the Microsoft instant messaging server second and the mail server last. The proprietary server may be connected to the server component and to the users and via a standard Transmission Control Protocol Internet Protocol TCP IP connection . Thus the proprietary server allows messages to be transmitted using bit encryption or other highly secure transmission methods. The users and may also be connected to each other via the TCP IP connections and to the mail server via the TCP IP connection .

In addition two components of the proprietary server allow for the farming out of network traffic to multiple in house servers. A presence component of the proprietary server is able to detect the presence of users and of the system that is whether or not users and are logged on to the proprietary server . A message component of the proprietary server handles message delivery to users and .

If multiple messages are transmitted to the proprietary server it may farm them out to back up servers etc. via the TCP IP connection located in house if network traffic is too extensive. In this way the instant messaging system is scalable. If hundreds of users in an organization need to receive an instant message these messages may be farmed out to as many back up servers etc. as necessary and then transmitted to the appropriate users. Furthermore users and may also communicate directly without going through a proprietary server . This type of direct connection may be brokered by the proprietary server . In this case the proprietary server may set up a direct connection between user and user if the proprietary server is unable to connect to the users and or .

The proprietary server sets up with direct communication using an algorithm. According to the algorithm the proprietary server sends user the IP address of user or vice versa . User and user then try to connect directly bypassing the proprietary server for communication. If the communication is successful the users and partake in instant message collaboration. If not the instant message may be brokered back to the proprietary server . Thus the instant messaging system can not only provide collaboration to users and the instant messaging system may also find the optimum path for the instant messages to use within the system.

Referring now to there is shown a block diagram illustrating instant messaging collaboration according to one embodiment of the present invention. When a user receives a message via the server component of the message center via network connection a chat window or some other icon appears on the user s client computer screen . When the user selects the chat window a new window appears on the client computer screen which contains data that the sender wants the user to see.

In one example the data may be in the form of a report which is displayed in a specified format such as a graph. The data may be active. That is as data changes within the enterprise computing runtime environment these changes are immediately made available to the user or any user specified by the algorithm contained within the event engine in real time via the server component of the message center. At this point the user s client computer is communicating directly with the server component via connection .

Hosted inside the user s client computer is the data. User may click on the chat window to view the data on the user s client computer screen . Moreover the user may share the data with users and via the proprietary server . If the user decides to share the data with users and the user may use a viewer to display a drop down screen . A space for text entry in the drop down screen is provided as well as a conversation window to allow for instant messaging that is for chatting with users and via the proprietary server . The user may send the data comprising the graphical report in the form of an instant message to users and through the proprietary server . This message is streamed through the propriety server via the instant messaging protocol. Icons appear on users and client computer screens and indicating that they are the recipients of an instant message. When the users and click on the icons they are able to see the exact data in this example the graphical report that is shown on user s computer screen. Users and are able to click on their viewers and to display drop down screens and . Spaces for text entry and and conversation windows and may be used to convey messages to users and involved in the instant messaging collaboration in the manner described herein.

In addition users and are able to annotate the data in real time in order to make changes to the data or insert comments. As a user for example annotates the data the annotated data is streamed in real time to users and who are involved in the instant messaging collaboration via the proprietary server . Furthermore users and or may also make changes to the data in real time which may be streamed through the proprietary server to the users and .

Another feature of the present invention allows for client computers that have pen enabled data input. For example a user may circle a portion of the graphical report with a pen type device coupled to user s client computer. This circle appears in real time on users and computer screens in accordance with one embodiment of the present invention. Spaces for pen enabled entries and such as handwriting recognition windows may be located on users and drop down screens and . This feature permits instant messaging collaboration to be conducted using tablet personal computers where the main data entry device is not a keyboard but a pen type device.

Referring now to there is shown a flow chart illustrating the steps of an instant messaging process according to one embodiment of the present invention. An event engine receives data in the form of a graphical report from an ADC block . The event engine determines that the data needs to be transmitted instantaneously to a user via the message center block . The presence component of the message center determines that the user is logged on to the Microsoft instant messaging server and the proprietary server block . The message center determines that the optimum path for the data is first through the proprietary server and second through the Microsoft instant messaging server block . The user manager in the message center resolves the user s e mail address block . The data is streamed to the user in the form of an instant message through the proprietary server via the instant messaging protocol block . The user successfully receives the data in real time from the proprietary server block .

In this example the first user decides to share the sales report with a second and third user and thus selects the viewer feature on the user s computer screen block . A drop down menu is displayed on the first user s computer screen block . The first user utilizes a keypad to type in a message in the conversation window of the drop down menu and sends this message as well as the sales report to the second and third users through the proprietary server using the instant messaging protocol block .

Continuing with this example the second and third users receive the exact data that is displayed on the first user s computer screen block . The first user annotates the sales data by using a pen type device to circle a portion of the data block . This change in the data is instantaneously streamed in real time to the second and third users block who are involved in an instant messaging collaboration via the proprietary server with the first user. The second and third users use drop down menus on their respective computer screens to communicate with the users involved in the collaboration block . The second and third users make changes to the active data report pen enabled or otherwise block . These changes are streamed to the users involved in the instant messaging collaboration block .

A flow chart illustrating one example operation according to one embodiment of the present invention is shown in . A proprietary server receives from the message center multiple instant messages to be received by hundreds of recipient users block . The proprietary server detects the presence of the recipient users who are logged on to the proprietary server block . According to an algorithm contained within the proprietary server the proprietary server farms out some of the instant messages to second third fourth etc. back up servers block . The back up servers transmit the instant messages to recipient users via a message component in the back up servers block .

Referring now to there is shown a computer system according to one embodiment of the present invention. The computer system includes a processor that executes a program that includes instructions that cause the algorithm to perform the steps of the invention. The processor is coupled through a bus to a random access memory RAM a read only memory ROM and a mass storage device . The ROM may store the program to execute the steps of the invention. The RAM may be used as an interim storage space for storing an instant message before it is transmitted to a user or for example for storing an instant message before it is downloaded by a user for example. Mass storage device could be a disk or tape drive for storing data and instructions.

A display device for providing visual output is also coupled to bus for communicating information and command selections to processor . Keyboard is coupled to bus for communicating information and command selections to processor . Another type of input device is cursor control unit which may be a device such as a mouse or trackball for communicating direction commands that control cursor movement on display .

For example the cursor control unit may be used to click on a box that will display the instant messages and or active data transmitted to the computer system . Yet another type of input device is a pen type device for making pen enabled annotations to a document or for entering messages in handwriting recognition windows not shown in this view on drop down menus on the display .

Processor is shown coupled through bus to an input output I O interface which can be used to control and transfer data to electronic devices connected to computer such as other computers tape records and the like.

Network interface device is coupled to bus and provides a physical and logical connection between computer system and network medium such as the Internet. Depending on the network environment in which computer is used this connection is typically to a server computer but it can also be to a network router or to another client computer. Note that the architecture of is provided only for purposes of illustration and that a client computer is used in conjunction with the present invention is not limited to this specific architecture.

In the foregoing a system and method for instant messaging collaboration has been described. Although the present invention has been described with reference to specific exemplary embodiments it should be understood that numerous changes in the disclosed embodiments can be made in accordance with the disclosure herein without departing from the spirit and scope of the invention. The preceding description therefore is not meant to limit the scope of the invention. Rather the scope of the invention is to be determined only by the appended claims and their equivalents.

