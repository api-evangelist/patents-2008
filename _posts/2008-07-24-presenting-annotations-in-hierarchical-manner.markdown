---

title: Presenting annotations in hierarchical manner
abstract: Ambient displays and electronic whiteboards are commonly used to present information during meeting or other appropriate settings. Many times graphical objects are displayed on ambient displays where users of the ambient display will create annotations to the graphical object to provide further comments, meaning, and/or context. Annotations on the ambient display may be recorded for later review. An effective way to present recorded annotations is through a hierarchical system that provides context to the annotations. Annotations may be defined as sets of annotations based upon a logical grouping (e.g. spatial density, temporal density, etc.). These sets can be displayed to users as annotation branches. One method for displaying annotations branches is with a timeline. Depending on where along the timeline a user is, different annotations and/or annotation branches are displayed in relation to one another (e.g. annotation branches that derive from another annotation branch are displayed in a hierarchical manner).
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08751921&OS=08751921&RS=08751921
owner: Microsoft Corporation
number: 08751921
owner_city: Redmond
owner_country: US
publication_date: 20080724
---
Ambient displays and whiteboards are commonly used to display information for presentations developmental meetings and any other environment for presenting information. Annotations tools may be used to provide a means for adding annotations e.g. text comments audio visual etc. to information displayed on ambient displays e.g. graphic object . For example a new car design graphic may be displayed on an ambient display. Viewers of the new car design graphic by may add comments to the graphic with an electronic pen or any drawing device. Preserving annotation activity allows a user to review what annotations were made on the ambient display.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key factors or essential features of the claimed subject matter nor is it intended to be used to limit the scope of the claimed subject matter.

This disclosure relates to presenting a hierarchical representation of a plurality of recorded annotations that preserves temporal context. The plurality of recorded annotations may comprise annotations recorded on an ambient display. The annotations may provide addition information e.g. textual comments about information e.g. a graphic object displayed on the ambient display. An annotation tree may be implemented to record store and organize the annotations inked created on the ambient display.

The recorded annotations are presented to a user using a hierarchical timeline to provide history and context for annotation activity on the ambient display. For example annotations are displayed in a horizontal position that represents that time the annotation was created. If the annotation is in response to an existing annotation e.g. annotation of an existing annotation comment on an existing annotation etc. then the annotation branches off from the existing annotation e.g. displayed subordinate to the existing annotation thus creating a horizontal timeline tree . One method for presenting recorded annotations is to define one or more sets of annotations that are logically grouped e.g. spatial proximity temporal proximity annotations that comment on the same annotation etc. to form annotation branches. An ambient display may present to a user a timeline representing recorded annotations. Annotation thumbnails and or annotation branches sets of annotations may be displayed at a location near the timeline based upon some criteria e.g. fixed time interval temporal density spatial density text recognition zoom state filter etc. . Moving a timeline marker allows a user to display a snapshot of recorded annotations and or objects that were record at a corresponding time.

To the accomplishment of the foregoing and related ends the following description and annexed drawings set forth certain illustrative aspects and implementations. These are indicative of but a few of the various ways in which one or more aspects may be employed. Other aspects advantages and novel features of the disclosure will become apparent from the following detailed description when considered in conjunction with the annexed drawings.

The claimed subject matter is now described with reference to the drawings wherein like reference numerals are used to refer to like elements throughout. In the following description for purposes of explanation numerous specific details are set forth in order to provide a thorough understanding of the claimed subject matter. It may be evident however that the claimed subject matter may be practiced without these specific details. In other instances structures and devices are shown in block diagram form in order to facilitate describing the claimed subject matter.

This disclosure relates to presenting a hierarchical representation of a plurality of recorded annotations. Annotations may be electronic ink audio text video or any other notation or modification to an object that further gives meaning context or detail that enhances the value of the original object. One environment that annotation tools are commonly used is a whiteboard and or ambient display. The ambient display is a device that displays information the in form of graphics. Users of the ambient display may create ink an annotation with an electronic pen fingers or any other appropriate drawing device.

An example of an ambient display with an annotation tool is a meeting board where car designers display a graphical representation of the mockup version of the car on the board. During the meeting or any other time period car designers can create annotations on the board to provide context to the mockup version of the car. An example of an annotation is a textual comment discussing the color of the car the type of tire tread or any other textual comment that is created on the board.

Recording annotations that are inked on an ambient display over time provide the advantage of later reviewing what comments were made while the graphic was on the ambient display e.g. comments inked on the ambient display during a meeting . A problem that arises from recording annotations is providing the context of the annotation. Many times annotations are inked inked over erased annotated commented on or any other manipulations to the annotation. Because annotations may be based on other annotations it is advantageous to provide context for which the annotations were made. For example a first annotation may be created. A second annotation is created that comments on the first annotation. Then the first annotation is erased and or annotated over. Recording annotations into a hierarchical structure captures this type of annotating so that context of an annotation e.g. what is being annotated is not lost. Multiple branches of discussions e.g. comment countercomment sessions are preserved in order to make use of the content on the ambient display.

A common method for presenting annotations is through a timeline. The timeline may present a visual representation of a portion of a time duration that annotations were recorded over. A timeline displays a single layer of annotations. This representation of annotations does not preserve multiple branches of discussion. To overcome this drawback annotations may be stored and or organized into an annotation tree. The annotation tree allows for multiple branches of annotations to be stored based on a logical grouping. A branch of annotations may represent annotations that are related by close temporal proximity annotations that occurred within a close amount of time close spatial proximity annotations located close to one another on the ambient board and or one or more series of recorded annotations that relate back the same recorded annotation e.g. a first annotation is made then five annotations are made that comment on the first annotation the five annotations become a new separate annotation branch within the annotation tree .

For example annotations may be displayed in a horizontal position that corresponds to the time the annotation was created. If an annotation is in response to an existing annotation e.g. annotation of an existing annotation sub ordinate to an existing annotation then the annotation branches off e.g. is displayed in a subordinate manner from the existing annotation thus creating a horizontal timeline tree .

An annotation tree is one method of storing and or organizing a plurality of recorded annotations. A hierarchical representation for presenting a plurality of recorded annotations may be achieved by displaying the branches of the annotation tree. An example of a hierarchical representation is where a timeline is displayed to a user reviewing annotations . Depending on user specified input e.g. a time range interval annotation density criteria spatial criteria keyword search etc. annotation branches and or thumbnails are displayed to the user. The displayed annotation branch represents a set of annotations that are logically grouped e.g. by time space same parent annotation etc. .

One way annotation branches may be displayed is by a first annotation branch representing annotations. With respect to the example of the car designers using the ambient display and the annotation tool a annotation branch could be the color of the car. A second annotation branch is then displayed subordinate e.g. below connected to the first annotation branch with an indent outline style etc. to the first annotation branch. The second annotation branch is displayed subordinate because of some logical hierarchical organization e.g. the second annotation branch comprises annotations that comment on the annotations of the first annotation branch . This method of presenting a synonymous view provides the user the ability to recognize where an annotation comments on a previous annotation thereby giving context to annotations.

One embodiment of presenting a hierarchical representation of a plurality of recorded annotations is illustrated by an exemplary method in . At the method begins. At a set of one or more annotations within a plurality of recorded annotations is defined based upon one or more logical groupings. The recorded annotations may be stored or recorded in real time. The plurality of recorded annotations may be stored within an annotation tree or any other structure for storing annotations. The set of recorded annotations that is defined may be based on logical groupings such as a set of recorded annotations that are related by close temporal proximity recorded annotations that are related by close spatial proximity one or more series of recorded annotations that relate back subordinate to the same recorded annotation and or any other logical grouping for recorded annotations. The sets of recorded annotations may be stored in memory as an annotation branch of an annotation tree.

At at least one set is displayed as an annotation branch in a hierarchical manner according to some predetermined criteria. Examples of predetermined criteria are a fixed time interval e.g. display all annotations from Monday temporal density of recorded annotations e.g. display a time range of annotations when there was greatest recording of annotations within an hour interval spatial density of recorded annotations e.g. display all annotations within an area around the graphic of the ambient display that a majority of recording took place and text recognition of a keyword e.g. administrator defined searchable keywords . The predetermined criteria may determine which annotations the order of annotations and or how annotations are displayed for example. At the method ends.

The rendering component is configured to display at least one of the sets of annotations as an annotation branch in a hierarchical manner according to some predetermined criteria. An example is an annotation branch one and an annotation branch two . Annotation branch two is displayed subordinate to annotation branch one . One reason for this hierarchical representation is to preserve the context of annotations. The recorded annotations of branch two may comprise recorded annotations that commented on recorded annotations of annotation branch one . The rendering component may use a timeline to display recorded annotations thumbnails of recorded annotations annotation branches and or any other annotation data.

The rendering component may display annotation branches annotation thumbnails snapshots of annotations based upon the predetermined criteria such as fixed time interval temporal density of recorded annotations spatial density of recorded annotations text recognition of a keyword and or user input corresponding to changing the display time range interval of the timeline. The rendering component may display snapshots of annotations on a display based upon a timeline marker e.g. the snapshot corresponds to the state of an ambient display where annotations were created . The rendering component may also display deleted annotations and or overlapping annotations. This gives a user reviewing the presentations of recorded annotations the ability to follow the flow of what happened on an ambient display. Many time annotations are erased and or new annotations are inked over the previous annotations. For example displaying deleted annotations may provide context to how a meeting progressed while using an ambient display. Previous deleted annotation may comprise highly relevant information that a user reviewing the meeting would want to see in context with other annotations. A user may move along the timeline to see if annotations are added or removed in order.

The highlight component is configured to display a highlighted area of the timeline and or annotation branch . An area may be defined as a time segment or any other designation of an area. The highlighted area may represent recorded annotations where a lot of activity took place and or a portion of time comprising recorded annotations of high relevance. An example of a highlighted area is where a recorded annotation was voted on by users as having high relevance. This recorded annotation could be highlighted as a hotspot that could be easily found and reviewed later within the timeline . The ability to quickly locate relevant annotations increases the efficiency of reviewing annotations because the annotations may be recorded over long periods of time e.g. days or weeks . A person reviewing the annotations would not want to spend an entire day or week reviewing the annotations to find a relevant annotation. Other criteria for highlighting an area could be areas with high spatial density or temporal density which indicates areas of high activity.

The highlight component may also highlight an area of the timeline and or annotation branch by changing the background gradient corresponding to the recorded annotation density. An example is where more color e.g. darker is provided in areas where there are more annotations within a particular time segment. This provides the user with a sense of annotation density which allows the user to quickly move through a timeline of many annotations to get to an area time segment where a lot of activity annotating took place on the ambient display.

The history component may be configured to store at least one new recorded annotation into the plurality of recorded annotations . The history component may be implemented in real time or when organizing recorded annotations. The history component may group the plurality of recorded annotations into an annotation tree. This is advantageous because the branch component may easily define sets of recorded annotations as annotation branches when recorded annotations are organized into an annotation tree.

The interaction component may be configured to merge at least one annotation branch with another annotation branch based upon a user input. This gives the user the ability to manage annotations and or combine annotation branches. One reason to merge annotation branches is because both branches comprise recorded annotations that are logically similar such as in the car designer example using an ambient display with the annotation tool a first branch about potential car colors is formed and a second annotation branch about car paint costs is then added. The interaction component may also compare annotation branches based upon user input. A user may view a synonymous view of annotation branches of an annotation tree plurality of recorded annotations to compare and or merge the annotation branches visually. The interaction component may also create a new annotation branch when a user adds an annotation to a previously recorded annotation.

An example of the order the annotations were created could be first make red annotation is inked second make blue annotation is inked third red is cheaper annotation is inked fourth let s keep it red annotation and finally the make blue annotation is erased deleted . The history of the annotation creation and or deletion may be recorded and or later viewed by a user. Presenting annotations within the context the annotations were created e.g. which annotations commented on other annotations what annotations were deleted etc. provides the user with a more meaningful experience.

One method for storing and or organizing the recorded annotation for later presenting and or reviewing them is to store the annotations within an annotation tree. The make red annotation is an annotation branch. The make blue annotation red is cheaper annotation and the let s keep it red annotation are a separate annotation branch that may be displayed subordinate to the make it red annotation branch. One method for using the annotation tree and branches is to display the branches as hierarchical representations of the recorded annotations. This allows a user to review the recorded annotations on the ambient display from the meeting with context. The user is provided information by the hierarchical structure to indicate that the make blue annotation red is cheaper annotation and the let s keep it red annotation are part of annotations that comment on make it red annotation . The user may also be provided with information that the blue annotation was deleted.

The timeline represents a series of annotations that may have been previously record from an electronic whiteboard e.g. an ambient display . A user may move the timeline slider along the timeline . Moving the timeline slider may change what is displayed within the ambient display . The ambient display presents to the user the current state e.g. a snapshot of annotations and objects that were on the electronic whiteboard at a time corresponding to the position of the timeline slider on the timeline . For example an electronic whiteboard may have been used during a previous meeting where annotations were recorded from the electronic whiteboard. A user has the ability to review the meeting e.g. see what annotations and objects were created on the electronic whiteboard during the meeting by using the timeline auxiliary display . When the user moves the timeline slider to a specified time on the timeline the ambient display presents what objects and annotations were on the electronic whiteboard corresponding to the time indicated by the timeline slider . The ambient display allows the user to view the snapshot of annotations and objects that were currently on the electronic whiteboard at a specific time.

The timeline auxiliary display presents the set of thumbnails at an area close to the timeline . The thumbnails correspond to annotations that are recorded along the timeline . One possible configuration is where the thumbnail is located in an area close to the timeline representing the time period when the thumbnail annotation was recorded. The thumbnails may comprise an annotation a portion of an annotation an object that was on the electronic whiteboard a snapshot comprising an annotation and or other information relating to the corresponding annotation of the thumbnail.

The timeline auxiliary display presents a hierarchical representation of annotation branches. The branch branch and branch are presented to the user in a hierarchical manner. The hierarchical representation provides a user with context information regarding annotations and their relationship to other annotations. An example of providing context information through a hierarchical representation is the manner in which branch and branch are displayed. Branch represents annotations that are logically grouped together. Branch branches off of branch because the annotations comprised within branch relate back to annotations from branch . It may be that the annotations in branch comprise annotations that commented on annotations from branch . This provides comment counter comment information to the user through the visualization of the hierarchical representation.

A further example is where branch comprises annotations about the color of a car the car was an object within an electronic whiteboard where annotations were created to provide useful information regarding the car . The annotations of branch may have counter comments to the annotations about the color of the car. The counter comments may be comments that are directed towards the price of the paint color availability of the paint color and or any other comment that provide further meaning to the annotations about the color of the car. Branch is separate from branch and branch . The annotations within branch are a separate set of annotations that may provide comments on the selling price of the car. These annotations do not comment on the color or price of a paint color and therefore are a separate branch of annotations e.g. logically grouped by different criteria . Because branch does not relate back to branch and branch branch is displayed in a manner where branch does not branch off of branch and branch but branches off of the timeline .

Annotation branches and or annotation thumbnails may be presented to the user based upon the time in which they were created in relationship to a time location along the timeline . For example an annotation branch may be spatially located near the timeline at a position representing the time the annotations within the annotation branch were created. Annotation branches and or annotation thumbnails may be further displayed and or filtered based upon a criterion. One criterion may be a zoom state e.g. display larger or smaller chunks of time . If a user zooms into a zoom state more annotation branches may be displayed around a specific area of the timeline. The annotation branches may display more detailed information depending on the zoom state. Another criterion may be a filter criterion. A user may filter what annotations annotation thumbnails and or annotation branches are displayed. The filter may be based upon a time interval spatial relationship annotation density text recognition of a keyword hotspot areas and or any other filtering criterion. Another example of a criterion is where the user wants to hide annotations created by the user and the user only wants 2 levels deep of annotation branches displayed.

The timeline auxiliary display may present to the user a hotspot marker . The hotspot marker provides an indication to the user that the location on the timeline near the hotspot marker has prominence e.g. the location comprises highly relevant annotation . Hotspot markers may be designated by users that mark a specific annotation and or areas of annotation that have prominence. One method to create hotspot markers is where users have the ability to vote an area as hot . Depending on the vote the area on the timeline representing the hot area is marked with a hotspot marker. Hotspot markers allow a user to quickly find areas of annotations that are of high relevance. This helps a user review a large amount of annotations e.g. an entire days worth without having to review the entire collection of annotations.

A background gradient e.g. gradient density and gradient density indicates the annotation density within the timeline . For example gradient density is darker than the timeline . The area of the timeline where gradient density is located may have a dense amount of annotations comprised within that area of the timeline e.g. a large number of annotations were created within the time period corresponding to the area of the timeline . Gradient density is darker than the timeline and gradient density . The area of the timeline where gradient density is located may comprise a very dense amount of annotations. Gradient density provides a user the ability to quickly recognized areas of time where a large amount of annotations may have been created.

It may be appreciated that the ambient display may also be a small auxiliary display that is located in the same e.g. within the same display and or different location e.g. presented on a separate display as the timeline auxiliary display . The timeline auxiliary display may be configured to present the hierarchical annotation data timeline thumbnails and annotation branches through a user control. The small auxiliary display may display the output from the user control of the timeline auxiliary display .

The timeline auxiliary display presents a timeline a timeline slider an annotation thumbnail and annotation branches e.g. the new annotation branch and the previous annotation branch . The timeline slider allows a user to move along the timeline . The timeline slider may correspond to an output that displays annotation information to the user that is associated with the position of the timeline slider . The previous annotation branch may comprise a set of recorded annotations that are logically grouped. The set of recorded annotation are grouped annotation within a plurality of recorded annotations that may correspond to a specific area e.g. time interval specific time on the timeline . The set of recorded annotations may comprise an annotation represented by the annotation thumbnail . The annotation thumbnail may be displayed to the user because it provides the user with additional image information about a recorded annotation within the previous annotation branch .

As the user reviews the recorded annotations within the timeline the user may add additional annotations or comments e.g. a new annotation to previously recorded annotations. The new annotation is added by the user as an annotation that comments on the annotation thumbnail . The new annotation provides further context to the annotation thumbnail that the car is to be made blue not red . Preserving the relationship of new annotation and the annotation thumbnail the annotation the annotation thumbnail represents allows a subsequent user to perceive through a hierarchical display the relationship and context in which the annotations were created.

When the user creates new annotation the new annotation branch is created. The new annotation branch is presented as a subordinate annotation branch in relation to the previous annotation branch . Displaying the new annotation branch subordinate to the previous annotation branch provides a hierarchical representation of annotations. The user may interpret subordinate annotation branches as annotations that comment on a previous annotation and or set of annotations e.g. a pervious annotation branch . Furthermore if another annotation is created that does not relate back or comment on a previous annotation then an annotation branch may be created that is not subordinate to another annotation branch. The non subordinate annotation branched represented by a different logical grouping may be presented to the user as a branch connecting to the timeline and not to other annotation branches. An interaction component and history component may handle the creation storing and presenting of the new annotation branch.

The user is presented with annotation branches and thumbnails that correspond to the user display criteria . Annotation thumbnails and annotation branches that comprise the keyword RED and or were created within the time interval 3 3 2000 are presented to the user. The user display criteria may be used as a filtering mechanism for thumbnails and annotation branches. Filtering allows a user to quickly locate specific thumbnails and annotation branches that correspond to a desired set of annotations.

Annotation branch and annotation branch are presented to the user in a hierarchical manner. Annotation branch is displayed subordinate to annotation branch e.g. annotation branch is connected in a visual manner to annotation branch to indicates both branches are logically grouped separately . Annotation branch may be displayed subordinate to annotation branch to provide context because the annotations within annotation branch comment on relate back to annotations within annotation branch . Users also have the ability to merge and or compare annotation branches. This allows a user reviewing annotations to reorganize how recorded annotations are grouped into branches and or are organized.

The timeline auxiliary display may be configured to output annotation information to a secondary display. The timeline slider may be used to output annotation information that corresponds to the location of the timeline slider within the timeline .

Still another embodiment involves a computer readable medium comprising processor executable instructions configured to implement one or more of the techniques presented herein. An exemplary computer readable medium that may be devised in these ways is illustrated in wherein the implementation comprises a computer readable medium e.g. a CD R DVD R or a platter of a hard disk drive on which is encoded computer readable data . This computer readable data in turn comprises a set of computer instructions configured to operate according to one or more of the principles set forth herein. In one such embodiment the processor executable instructions may be configured to perform a method such as the exemplary method of for example. In another such embodiment the processor executable instructions may be configured to implement a system such as the exemplary system of for example. Many such computer readable media may be devised by those of ordinary skill in the art that are configured to operate in accordance with the techniques presented herein.

Although the subject matter has been described in language specific to structural features and or methodological acts it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather the specific features and acts described above are disclosed as example forms of implementing the claims.

As used in this application the terms component module system interface and the like are generally intended to refer to a computer related entity either hardware a combination of hardware and software software or software in execution. For example a component may be but is not limited to being a process running on a processor a processor an object an executable a thread of execution a program and or a computer. By way of illustration both an application running on a controller and the controller can be a component. One or more components may reside within a process and or thread of execution and a component may be localized on one computer and or distributed between two or more computers.

Furthermore the claimed subject matter may be implemented as a method apparatus or article of manufacture using standard programming and or engineering techniques to produce software firmware hardware or any combination thereof to control a computer to implement the disclosed subject matter. The term article of manufacture as used herein is intended to encompass a computer program accessible from any computer readable device carrier or media. Of course those skilled in the art will recognize many modifications may be made to this configuration without departing from the scope or spirit of the claimed subject matter.

Although not required embodiments are described in the general context of computer readable instructions being executed by one or more computing devices. Computer readable instructions may be distributed via computer readable media discussed below . Computer readable instructions may be implemented as program modules such as functions objects Application Programming Interfaces APIs data structures and the like that perform particular tasks or implement particular abstract data types. Typically the functionality of the computer readable instructions may be combined or distributed as desired in various environments.

In other embodiments device may include additional features and or functionality. For example device may also include additional storage e.g. removable and or non removable including but not limited to magnetic storage optical storage and the like. Such additional storage is illustrated in by storage . In one embodiment computer readable instructions to implement one or more embodiments provided herein may be in storage . Storage may also store other computer readable instructions to implement an operating system an application program and the like. Computer readable instructions may be loaded in memory for execution by processing unit for example.

The term computer readable media as used herein includes computer storage media. Computer storage media includes volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions or other data. Memory and storage are examples of computer storage media. Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM Digital Versatile Disks DVDs or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by device . Any such computer storage media may be part of device .

Device may also include communication connection s that allows device to communicate with other devices. Communication connection s may include but is not limited to a modem a Network Interface Card NIC an integrated network interface a radio frequency transmitter receiver an infrared port a USB connection or other interfaces for connecting computing device to other computing devices. Communication connection s may include a wired connection or a wireless connection. Communication connection s may transmit and or receive communication media.

The term computer readable media may include communication media. Communication media typically embodies computer readable instructions or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term modulated data signal may include a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal.

Device may include input device s such as keyboard mouse pen voice input device touch input device infrared cameras video input devices and or any other input device. Output device s such as one or more displays speakers printers and or any other output device may also be included in device . Input device s and output device s may be connected to device via a wired connection wireless connection or any combination thereof. In one embodiment an input device or an output device from another computing device may be used as input device s or output device s for computing device .

Components of computing device may be connected by various interconnects such as a bus. Such interconnects may include a Peripheral Component Interconnect PCI such as PCI Express a Universal Serial Bus USB firewire IEEE 1394 an optical bus structure and the like. In another embodiment components of computing device may be interconnected by a network. For example memory may be comprised of multiple physical memory units located in different physical locations interconnected by a network.

Those skilled in the art will realize that storage devices utilized to store computer readable instructions may be distributed across a network. For example a computing device accessible via network may store computer readable instructions to implement one or more embodiments provided herein. Computing device may access computing device and download a part or all of the computer readable instructions for execution. Alternatively computing device may download pieces of the computer readable instructions as needed or some instructions may be executed at computing device and some at computing device .

Various operations of embodiments are provided herein. In one embodiment one or more of the operations described may constitute computer readable instructions stored on one or more computer readable media which if executed by a computing device will cause the computing device to perform the operations described. The order in which some or all of the operations are described should not be construed as to imply that these operations are necessarily order dependent. Alternative ordering will be appreciated by one skilled in the art having the benefit of this description. Further it will be understood that not all operations are necessarily present in each embodiment provided herein.

Moreover the word exemplary is used herein to mean serving as an example instance or illustration. Any aspect or design described herein as exemplary is not necessarily to be construed as advantageous over other aspects or designs. Rather use of the word exemplary is intended to present concepts in a concrete fashion. As used in this application the term or is intended to mean an inclusive or rather than an exclusive or . That is unless specified otherwise or clear from context X employs A or B is intended to mean any of the natural inclusive permutations. That is if X employs A X employs B or X employs both A and B then X employs A or B is satisfied under any of the foregoing instances. In addition the articles a and an as used in this application and the appended claims may generally be construed to mean one or more unless specified otherwise or clear from context to be directed to a singular form.

Also although the disclosure has been shown and described with respect to one or more implementations equivalent alterations and modifications will occur to others skilled in the art based upon a reading and understanding of this specification and the annexed drawings. The disclosure includes all such modifications and alterations and is limited only by the scope of the following claims. In particular regard to the various functions performed by the above described components e.g. elements resources etc. the terms used to describe such components are intended to correspond unless otherwise indicated to any component which performs the specified function of the described component e.g. that is functionally equivalent even though not structurally equivalent to the disclosed structure which performs the function in the herein illustrated exemplary implementations of the disclosure. In addition while a particular feature of the disclosure may have been disclosed with respect to only one of several implementations such feature may be combined with one or more other features of the other implementations as may be desired and advantageous for any given or particular application. Furthermore to the extent that the terms includes having has with or variants thereof are used in either the detailed description or the claims such terms are intended to be inclusive in a manner similar to the term comprising. 

