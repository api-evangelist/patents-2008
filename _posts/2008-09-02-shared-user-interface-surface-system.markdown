---

title: Shared user interface surface system
abstract: The shared user interface surface system is a simple and lightweight collaboration tool that is accessible simultaneously by multiple users through multiple sources. The shared user interface surface system provides a way to share a user interface surface and corresponding shared surface object, and coordinates local manipulations of respective local representations of the shared user interface surface and corresponding shared surface object, and updates the respective local representations with a group representation. The system accommodates diverse collaboration requirements including mixed written and spoken languages, utilization of the accessibility layer for physically disabled and disparate computing resources.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08489999&OS=08489999&RS=08489999
owner: Accenture Global Services Limited
number: 08489999
owner_city: Dublin
owner_country: IE
publication_date: 20080902
---
This disclosure concerns a collaboration tool that is accessible simultaneously by multiple users through multiple sources. In particular this disclosure concerns a system product and method for sharing a user interface surface and corresponding shared surface object that coordinates local manipulations of respective local representations of the user interface surface and corresponding shared surface object and updates the respective local representations with a group representation.

Organizations are continually challenged to identify efficient and cost effective collaboration tools. Today members of globally distributed organizations increasingly collaborate with other members from different regions of the world. Unfortunately rising fuel costs and the time required to travel in order to collocate individuals create barriers to improving the economic positions of many organizations. Unfortunately organizations without collaboration tools that are simple lightweight and provide a high performance way to share a user interface surface among multiple users may as a result also fail to realize the productivity gains necessary to be competitive.

The fast pace of many industries require organizations to rapidly assemble teams from various areas of expertise that can quickly identify problems and develop solutions. Organizations with globally distributed workforces who work under compressed development schedules in highly specialized and complex knowledge areas need a tool that reduces barriers to collaboration. Regardless of the geographical distribution of an organization members of organizations may have diverse collaboration requirements e.g. varying languages physical disabilities and computing resources that many collaboration tools may not even accommodate.

Currently available collaboration tools are generally restricted in one of three ways 1 a physical location defines where a collaboration may take place e.g. Thunder and TeamSpot 2 a session defines the availability and existence of shared content so that once the session ends the shared content becomes unavailable e.g. WebEx and Adobe Connect and 3 a user owns a document the user grants and revokes rights to the document and the document is stored on the owner s resources where documents are shared over a network e.g. Microsoft OneNote .

Collaboration tools that are highly customized and expensive to implement may impose user side computing requirements e.g. resource intensive client side systems and require significant user training. For example Sharepoint documents are serially checked out and edited from a common repository. Some group collaboration tools adhere to strictly linear text formats e.g. SubEthaEdit and Google Docs . Collaborative tools such as skrbl.com thinkature.com conceptShare and Adobe JamJar are based on small text snippets but limit the type of content available for sharing. Collaboration tools often may use elaborate schemes in order to maintain versioning information for each collaborator and require significant system administration support in order to properly maintain. Such collaboration tools may also limit the type of information and data with which users can collaborate.

The shared user interface surface system hereinafter system provides a cost effective and lightweight collaboration tool that multiple users can simultaneously access through multiple sources. The system provides a persistent shared user interface surface that is synchronized in real time with all users accessing the shared user interface surface. A shared user interface surface e.g. canvas may include various types of content e.g. text items sketches and images . A shared user interface surface may be used as a scratch pad for a single user and or as a shared space for multiple users because shared user interface surfaces are stored on a web server rather than being stored on the hard drive of a particular user. Accordingly shared user interface surface can be viewed edited and shared by multiple users from various locations simultaneously.

In one implementation the system provides a way to share a user interface surface that is accessible simultaneously by multiple users through multiple respective sources. The system may comprise a processor and memory coupled to the processor. The memory may comprise shared surface logic that generates local canvases that are responsive to user interactions. The local canvases include a first local canvas and a second local canvas and each local canvas comprises local canvas boundaries and a local canvas identifier. The shared surface logic may also generate a first group canvas that corresponds to at least two of the local canvases. The local canvases corresponding to the first group canvas establish a first set of local canvases that are respective local representations of the first group canvas. The first group canvas is a shared surface representation of the first set of local canvases. The memory may further comprise interaction detection logic that detects multiple user interactions corresponding to the local canvases. One of the detected multiple user interactions may correspond to the first set of local canvases. The interaction detection logic may update the first group canvas to obtain an updated first group canvas and update the first set of local canvases based on the updated first group canvas.

Other systems methods features and advantages will be or will become apparent to one with skill in the art upon examination of the following figures and detailed description. All such additional systems methods features and advantages are included within this description are within the scope of the claimed subject matter and are protected by the following claims.

The system provides a simple lightweight and high performance way to share a user interface surface among multiple users through multiple sources. In one implementation the system employs client server architecture that includes Ruby on Rails on the server side and Microsoft .Net libraries to deploy client side applications running on Windows platforms including Windows XP and Vista. The system may employ alternative technologies such as ASP.NET and server side Java to create web services and or server side frameworks such as Django and Lift . In one implementation the client side applications e.g. web page showing a RSS feed running on a mobile device may be written using Java C and or any other client side technology. In one implementation the system resembles a drawing program and or a digital whiteboard that produces a semi structured document e.g. canvas similar in appearance to a Microsoft OneNote page. The system may employ the representation state transfer REST software application architecture that is modeled after the way data is represented accessed and modified on the web. The system considers data and functionality to be resources that are accessible using Uniform Resource Identifiers URIs e.g. links on the Internet . The system employs RESTful web services that use a standardized interface e.g. XML files and stateless communication protocol e.g. HTTP to exchange representations of resources between clients and servers.

Local canvases and local canvas shared surface object representations may correspond to client side resources while group canvases and group canvas shared surface object representations correspond to server side resources. A local canvas may display the local canvas state of a shared surface object communicate local canvas user interactions to the system poll the system for the group canvas state of the shared surface object and fetch and update the local canvas with the group canvas state of the shared surface object. A local canvas may be used as a standalone executable program and or as a Rich Internet Application. A local canvas may be maintained continuously minimized and left running in the background. Drawing and sketching capabilities using a local canvas may be supported by the addition of a stylus on a Tablet PC and or with outboard tablet hardware.

In one implementation the system comprises web applications that expose resources e.g. data and functionality through web URIs and use HTTP methods e.g. GET POST PUT and DELETE to create retrieve update and delete resources. The function calls may be in the form of http servername admin functionname. In one implementation the method calls used by the system include credentials in the HTTP header that are authenticated against an extended security option ESO web service.

The HTTP GET method may use the local canvas identifier to request a resource. HTTP GET with specially formatted URL may return a list of shared surface objects in the local canvas identified by the local canvas identifier and information about the shared surface object including the shared surface object identifier and the group canvas shared surface object version. The HTTP POST method call may create a resource including images drawings and other binary based content. The HTTP POST method call may include a field encoded into a text format compatible with URL encoding and storage in a database e.g. MySql database and or other databases compatible with Ruby on Rails . The HTTP PUT method call modifies a resource identified by a local canvas identifier.

A local canvas may compare the local canvas shared surface object version to the group canvas shared surface object version to determine whether to update the local canvas shared surface object representation with the group canvas shared surface object representation. In one implementation in the event a local canvas communicates a non universally unique local canvas identifier shared surface object identifier group canvas shared surface object version and or local canvas shared surface object version to the system the system returns an unknown undefined value as a consequence.

Multiple simultaneous local canvas user interactions may occur corresponding to different local canvases referred to as the collision scenario. In one implementation the system determines whether an update of a local canvas shared surface object representation is stale . The system may consider an attempt to update a local canvas shared surface object representation that does not correspond to the group canvas shared surface object version to be stale. In other words a local canvas shared surface object version that is earlier than a corresponding group canvas shared surface object version is considered stale.

For example a first user and a second user through different local canvases corresponding to a common group canvas simultaneously perform local canvas user interactions a first local canvas user interaction and a second local canvas user interaction respectively. The system determines the first local canvas user interaction to be received first and accepted the group canvas shared surface object version is updated the group canvas shared surface object representation is updated with the first local canvas shared surface object representation. The system determines the second canvas user interaction to be received second and declared stale. The second local canvas user interaction may be discarded. In one implementation the second local canvas user interaction is stored for use by the second user. The second local canvas may discover the collision by polling the system for the state of the local canvas shared surface object representation and determine that the local canvas shared surface object representation is stale. For example the second local canvas may compare the local canvas shared surface object version and group canvas shared surface object version and determine that the group canvas shared surface object version is more recent. The second local canvas may fetch the group canvas shared surface object representation to update the local canvas shared surface object representation and local canvas shared surface object version.

When a shared surface object is added to a local canvas e.g. a user adds a file and or other content to the local canvas the local canvas shared surface object representation of the local canvas shared surface object may be displayed directly in the local canvas e.g. text or images . A service provider responsive to the local canvas shared surface object may be employed to present the local canvas shared surface object representation of the local canvas shared surface object in the local canvas. For example the shared surface object may be an audio clip and when the shared surface object is added to the local canvas an audio player and or editor e.g. service provider is enlisted to present the local canvas shared surface object representation in the local canvas.

In the event the local canvas cannot display the local canvas shared surface object representation e.g. a service provide is unavailable to the local canvas to present the local canvas shared surface object representation the local canvas shared surface object may be represented in the local canvas as a stub e.g. a hyperlink reference to the local canvas shared surface object. A local canvas shared surface object corresponding to a stub may be stored in a shared documents folder of the local canvas user e.g. SharePoint site and the stub points to location of the local canvas shared surface object in the shared documents folder. When group canvas users select the stub in the respective local canvases the local canvas shared surface object loads directly from the shared documents folder.

The system may generate group canvases e.g. a first group canvas a second group canvas and third group canvas . A group canvas e.g. and represents a shared representation of a shared surface corresponding to a local representation of the shared surface represented by a local canvas e.g. first local canvas a second local canvas and a third local canvas . In other words the multiple users access local representations of a shared surface through local canvases while a group representation represents a synchronized version of the shared surface and corresponds to a group canvas. From time to time local canvases may include user interactions from the multiple users that have not been synchronized and differences between local canvases and corresponding group canvas reflect such user interactions.

The non display peripherals may include various non visual communication devices including speakers microphones touch pads and malleable surfaces e.g. used for brail or to replicate terrain . The non display peripherals may utilize the Microsoft accessibility layer functionality and augment and or substitute for the capabilities provided by the graphical displays . In one implementation the system employs the service providers and non display peripherals to provide non visual representations of local canvases and local canvas shared surface object representations and allow users to non visually manipulate the local canvases and local canvas shared surface object representations. For example a user may communicate audio commands through a microphone non display peripheral to manipulate a local canvas and or local canvas shared surface object representation.

In one implementation the system generates a number of persistent group canvases e.g. 100 000 group canvases the number of which an administrator may pre configure and periodically generate as needed. A user may browse the group canvases and select a particular group canvas to use. A user may use the local canvas tools to invoke a get next available canvas selection that locates an unused group canvas.

The shared surface logic may generate local canvases e.g. and responsive to user interactions from the multiple users . A local canvas comprises local canvas boundaries e.g. first LC boundaries that define the dimensions of the local canvas and a local canvas identifier e.g. first LC identifier that uniquely identifies the local canvas. A local canvas identifier corresponds to a graphical display area identified by a graphical display identifier .

The shared surface logic may generate group canvases e.g. and . A group canvas e.g. and represents a shared representation of a shared surface. A group canvas e.g. and includes a group canvas identifier e.g. first GC identifier and group canvas boundaries e.g. first GC boundaries that define the dimensions of the group canvas. A local canvas may correspond to more than one group canvas. For example the shared surface logic may generate the first group canvas and the second group canvas corresponding to a first and a second set of local canvases respectively from the local canvases e.g. and so that the first set of local canvases include and and correspond to the first group canvas while the second set of local canvases include and and correspond to the second group canvas. In the aforementioned example the first local canvas corresponds to two group canvases e.g. and .

A first local canvas and a second local canvas that comprise first local canvas boundaries and second local canvas boundaries e.g. respectively where at least a portion of the first local canvas boundaries and second local canvas boundaries are common to both the first local canvas and the second local canvas may define a group canvas e.g. comprising group canvas boundaries e.g. corresponding to the portion of the first local canvas boundaries and the second local canvas boundaries that are common to both local canvases.

A first local canvas and second local canvas that comprise first local canvas boundaries and second local canvas boundaries where the first local canvas boundaries are within the second local canvas boundaries may define a group canvas comprising group canvas boundaries corresponding to the first local canvas boundaries. A local canvas may comprise local canvas boundaries where at least two different portions of the local canvas boundaries correspond to two different group canvases.

A first group canvas and second group canvas may comprise first group canvas boundaries and second group canvas boundaries where the first group canvas boundaries and the second group canvas boundaries define a third group canvas where the first group canvas boundaries and the second group canvas boundaries are within the third group canvas boundaries.

The local canvases e.g. and and group canvases may each include a user interaction UI mode specifier e.g. first LC UI mode and first GC UI mode respectively that specifies the types of interactions to which the corresponding local and group canvases may be responsive. The local canvas UI mode e.g. first LC UI mode may be user configurable discussed further below . The group canvas UI mode e.g. first GC UI mode may be configurable by an administrator the system and or at least one of the multiple users designated with the authorization to set the group canvas UI mode discussed further below .

The system includes a group canvas user status and group canvas user identifier for each group canvas to which each of the multiple users correspond. The group canvas user status indicates the state of a user of a local canvas corresponding to a group canvas. For example the group canvas user status indicates whether a user is currently interacting with a corresponding local canvas whether the user is available to interact with the local canvas and whether the user has recently interacted with the local canvas. The group canvas user identifier uniquely identifies a local canvas user corresponding to a group canvas.

The interaction detection logic may detect the user interaction modes e.g. and the group canvas user status and the group canvas user identifier to determine the level of collaboration and interaction available between the multiple users . The system may use the group canvas user status and the group canvas user identifier to present an icon and or avatar corresponding to a user for each of the respective group canvases to which a user corresponds.

Local canvases e.g. and may include a local canvas shared surface object representation e.g. first LC shared surface objects representations . Group canvases e.g. and may include group canvas shared surface object representation to which respective local canvas shared surface object representations correspond. The system may synchronize a local representation with a corresponding group canvas shared surface object representation based on the user interaction modes e.g. and the group canvas user status and the group canvas user identifier .

The multiple user interactions may represent respective local manipulations e.g. first LC manipulations and second LC manipulations of a local canvas shared surface object representation wherein at least a portion of the local canvas shared surface object representation is within the local canvas boundaries of a corresponding local canvas. The interaction detection logic may detect the local canvas shared surface object representation using a shared surface object identifier . The interaction detection logic may detect the multiple user interactions corresponding to the local canvases e.g. and detect whether at least two of the multiple user interactions correspond to one of the local canvases and whether the multiple user interactions correspond to at least two different users of the multiple users . For example where at least two of the multiple users simultaneously interact with the first local canvas the interaction detection logic can detect whether the simultaneous interactions with the first local canvas represent interactions from separate users.

The service provider logic may analyze shared surface object metadata corresponding to the local canvas shared surface object representation . The service provider logic may communicate the shared surface object metadata and the local manipulations of the local canvas shared surface object representations to service providers responsive to the local canvas shared surface object representation and shared surface object metadata . The service providers generate updates of the local canvas shared surface object representation for each of the local canvases corresponding to the respective local manipulations of the local canvas shared surface object representations . The updates of the local canvas shared surface object representation may be different for each local canvas e.g. and until the local canvases are synchronized with an updated group canvas shared surface object representation. For example a service provider that provides a videoconferencing service may fetch the contents of a videoconference window from a web server and rendered the content in a local canvas using a web browser component. The system may orchestrate the collaboration of services provided by service providers . In one implementation the system is representation neutral so that a local canvas can be presented in any number for formats. For example a local canvas may be represented in a list format such as provided by a RSS feed.

The interaction detection logic may generate a group canvas shared surface object record based on the shared surface object metadata and the updates of the local canvas shared surface object representation received from the service provides . The interaction detection logic may store the group canvas shared surface object record in the shared surface object repository . The interaction detection logic may update each of the local canvases e.g. and with the update of the local canvas share surface object representations and the respective update of the local canvas e.g. . In other words in one implementation the interaction detection logic updates a local canvas share surface object representation with updates that result from local manipulations before updating the local canvas share surface object representation with a corresponding update of the group canvas share surface object representation. The interaction detection logic may retrieve the group canvas shared surface object record from the shared surface object repository using the shared surface object identifier e.g. and update the local canvas shared surface object representation using the group canvas shared surface object record .

Referring briefly to local canvases of varying sizes set to different user interaction modes are shown. Local canvases may be used in a variety of settings sizes and user interaction modes including a miniature size as a desktop computer gadget or widget the display size of a computer suitable for direct viewing and interaction by a local canvas user a large size e.g. on a projected surface in a meeting room in a passive read only mode for group visibility and large size in an interactive mode on a digital whiteboard or a touchable interactive wall. A local canvas may be scaled up with the use of digital whiteboards touch displays and or large interactive walls. A local canvas may be used with an interactive wall for a user that desires to review existing contents arrange the content and or sketch over the content.

Returning to the gadget mode may provide an awareness function that indicates the mode of each of the local canvases corresponding to a group canvas. The awareness function of the gadget mode may also allow the system to present the group user status and group user identifier of each group canvas user to which the local canvas corresponds e.g. a buddy list in messaging program . The system may use the awareness function information of the gadget mode to present an icon and or avatar that indicates the local canvas UI mode e.g. the group canvas user status and the group canvas user identifier to which a local canvas user corresponds. In one implementation a local canvas user may disable the gadget mode of the local canvas user so that the local canvas user may interact with the local canvas in a cloaked mode and corresponding group canvas users cannot discover the group user status and group user identifier of the local canvas user. In one implementation the gadget mode may present a local canvas in a miniature size with a reduced amount of visual detail at the edge of the screen. When group canvas users modify a group canvas share surface object representation a visual indicator may appear across the gadget and then slowly fade over time so that the gadget makes the local canvas user peripherally aware of the share surface object.

Referring briefly to a local canvas comprising a semi transparent annotation layer overlaying local canvas shared surface object representations is shown. The system may employ a semi transparent annotation layer e.g. and to overlay a local canvas shared surface object representation with local and or group annotations allowing for non destructive highlighting commentary annotation and markup. Returning to the local annotation mode may allow updates of a local canvas and local canvas shared surface object representation in response to a respective local canvas user interaction with the local canvas while preventing the local canvas user interaction to be used to update a corresponding group canvas. In other words the local annotation mode may allow local canvas interactions to be limited to the corresponding local canvas. For example under the local annotation mode a local canvas interaction corresponding to a first local canvas is used to update the first local canvas but the system does not use the local canvas interaction to update a second local canvas that corresponds to a group canvas that the first local canvas also corresponds. The system may allow a user to store local annotations separately from group annotations so that local canvas and group canvas annotations can be maintained.

The group annotation mode may allow updates of the local canvases corresponding to a group canvas in response to a local canvas user interaction with at least one of the local canvases corresponding to the group canvas. The group annotation mode may represent the most collaborative of the user interactive modes . In one implementation the group annotation mode may allow a local canvas user to specify a group canvas user from which the local canvas user will accept and or exclude interactions based on the authority and or role of the local canvas user.

The passive mode may set a local canvas to read only to prevent updates of a local representation in response to a local canvas user interaction with the local canvas. The passive mode may not prevent updates of the local canvas with a corresponding group canvas representation. In one implementation the system may use the passive mode as a default for local canvases that do not have local canvas user interaction capabilities. For example a local canvas may be presented in a graphical display area of a kiosk that does not provide local canvas user interaction capabilities. In another example a local canvas may be set to passive mode and displayed on a physically large screen e.g. wall for a group of people to occasionally use for a meeting and or brainstorming session and or continuously use as a shared group display and or bulletin board.

In one implementation a group canvas may be accessed using a machine consumable web service and or RSS feed e.g. really simple syndication using an RSS reader e.g. iGoogle and Google Reader . A user interaction with a shared surface object may trigger the creation of an event task and or email. A web service e.g. service provider may be configured with a watch list of user interactions that trigger the initiate events tasks and or emails. For example a group canvas may be monitored for interactions that correspond to a particular subject and or manipulation of a particular shared surface object. The user interaction may represent and or result in the creation of an assignment and or completion of a task by a user and or group of users. A task and status of the task may be communicated simultaneously to multiple applications used to track the progress of tasks e.g. Microsoft Project Outlook Tasks and or a Calendar so that the system may be used to impose a workflow. For example a canvas user may create a text snippet and designate the text snippet a task corresponding to a workflow of an organization assign the task and send the task to the assignee. The task becomes a task item on the canvas and reflects the status e.g. in progress unassigned and complete . A service provider may monitor task tracking applications for completion of a task and communicate the status of the task to a corresponding group canvas.

The communication mode allows each local canvas user to specify one or more preferred methods of communication to use when communicating with group canvas users corresponding to a group canvas that the local canvas user corresponds. The communication mode may include any combination of communication methods including text multimedia web cam audio and e mail. In one implementation local canvases comprise built in audio conference and or video conference links so that a corresponding local canvas user may communicate with corresponding group canvas users e.g. connecting to a party line .

The system evaluates the communication mode of a local canvas user and a group canvas user to determine the one or more communication methods available for communications between the local canvas user and the group canvas user. For example a local canvas user may set the communication mode to indicate a particular written and or spoken language that is different from the written and or spoken language indicated by the group canvas user. The system may translate content between to two languages so that the local canvas user and the group canvas user can communicate. Similarly a local canvas user may set the communication mode to indicate that a non display peripheral be used because the user is visually impaired.

For example a group canvas user may specify audio as the communication mode while the local canvas user may specify text as the communication mode . The local canvas user may select the icon and or avatar corresponding to the group canvas user to which the local canvas user corresponds to initiate communication with the group canvas user. The system evaluates the communication modes and when the local canvas user originates a text message to the group canvas user the system translates the text message into an audio message for the group canvas user and when the group canvas user originates an audio message e.g. response or reply the system translates the audio message into a text message.

The system may evaluate each of the communication modes specified by the local canvas user and group canvas user respectively and determine a combination of communication methods provide the best communication method. For example although a local canvas user and group canvas user both specify multimedia web cam as the communication mode the system may determine the multimedia web cam quality of service unreliable and to ensure that the local canvas user and group canvas user receive the communications between the two use text and or e mail messaging to send a written transcript of the multimedia web cam to both the local canvas user and group canvas user.

The group canvas UI modes e.g. supersede the local canvas UI modes e.g. of corresponding local canvases. An administrator and or collaboration leader may configure how the group canvas UI modes e.g. supersede the local canvas UI modes e.g. . For example a group canvas set to the group canvas UI mode of local annotation mode limits the local canvas UI modes to which a local canvas may be set to only include local annotation mode passive mode and communication mode . An administrator and or collaboration leader may set the group canvas UI mode e.g. to local annotation mode so that a local canvas is only updated in response to user interactions with a corresponding administrator and or collaboration leader canvas and in response to a user interaction with the respective local canvas.

A group canvas UI mode e.g. set to local annotation mode may prevent a local canvas from being updated in response to user interactions with other local canvases corresponding to the group canvas except in response to user interactions with the administrator and or collaboration leader canvas. An administrator and or collaboration leader may set the group canvas UI mode e.g. to passive mode so that a local canvas is only updated in response to user interactions with a corresponding administrator and or collaboration leader canvas. A group canvas UI mode e.g. set to passive mode may prevent a local canvas from being updated except in response to user interactions with the administrator and or collaboration leader canvas. The group canvas UI mode e.g. set to group annotation mode may allow the local canvas UI mode e.g. to which a local canvas may be set to include the gadget mode the local annotation mode the group annotation mode the passive mode and the communication mode .

The local canvas shared surface object metadata e.g. and includes a local canvas identifier a local canvas shared surface object version local canvas shared surface object presentation preferences local canvas display properties and a local canvas shared surface object data type . The local canvas identifier identifies the local canvas the boundaries of which at least a portion of the local canvas shared surface object representation is within.

The local canvas shared surface object version specifies the time stamp of a last local manipulation of the local canvas shared surface object representation. The system may use the local canvas shared surface object version to determine how the local canvas shared surface object is presented in the local canvas. The system may also use the local canvas shared surface object version to determine a priority ranking of simultaneous local manipulations of local canvas shared surface object representation. For example a local manipulation corresponding to a more recent local canvas shared surface object version value may correspond to lower priority ranking. In other words a simultaneous local manipulation of a local canvas shared surface object representation with the most recent local canvas shared surface object version may be used to generate the corresponding group canvas shared surface object representation.

In one implementation an administrator of the system may configure the local canvas shared surface object metadata e.g. and to correspond to the group canvas shared surface object metadata e.g. and . The group canvas shared surface object metadata e.g. and may determine the range of values and types of available local canvas shared surface object metadata e.g. and . The service provider logic may analyze the resources available to a local canvas and or the configuration of the local canvas to determine the availability of particular local shared surface object presentation preferences the local canvas display properties and the available local canvas shared surface object data types . The service provider logic may analyze the local canvas shared surface object presentation preferences the local canvas display properties and the available local canvas shared surface object data types to determine whether to update a local canvas shared surface object representation using a translation of a corresponding group canvas shared surface object data type .

For example a group canvas shared surface object data type of a group canvas shared surface object representation may correspond to a composite group canvas shared surface object data type that comprises the data types of audio and image while local canvas shared surface object presentation preferences may indicate a preference for text. The corresponding local display properties may also indicate that audio is unavailable. The service providers responsive to translating audio e.g. a song arranged with vocals and instruments to text e.g. lyrics to a song and or musical notation of the arrangement of the song may translate the group canvas share surface object data type so that the local canvas shared surface object representation is presented in the local canvas as text.

The group canvas identifier and shared surface object identifier together uniquely identify the group canvas shared surface object representation . In other words multiple group canvases e.g. and may comprise within the group canvas boundaries of the respective group canvases at least a portion of a group canvas shared surface object representation . The system may use the group canvas identifier and shared surface object identifier together to uniquely identify each group canvas shared surface object representation .

The system may maintain and store in the shared surface object repository a local canvas shared surface object record for each local canvas shared surface object representation e.g. . The local canvas shared surface object record includes the local canvas shared surface object representation based on the local canvas shared surface object metadata e.g. and and the local canvas manipulations e.g. and corresponding to the respective local canvas e.g. and . The local canvas shared surface object record further includes a local canvas identifier e.g. that identifies the local canvas in which at least a portion of the local canvas shared surface object representation e.g. is within the local canvas boundaries of e.g. . The local canvas identifier and shared surface object identifier together uniquely identify the local canvas shared surface object representation .

A shared surface object may correspond to a group canvas comprising a group canvas shared surface object representation where the group canvas corresponds to multiple local canvases comprising multiple local canvas shared surface object representations. For example a shared surface object identified by the shared surface object identifier may correspond to a group canvas e.g. identified by group canvas identifier comprising a group canvas shared surface object representation e.g. and corresponding to local canvases e.g. identified by local canvas identifiers and . The local shared surface object representations e.g. and of the shared surface object identified by the shared surface object identifier correspond to respective local canvases e.g. identified by local canvas identifiers and .

A shared surface object may correspond to multiple group canvases and local canvases comprising respective group canvas shared surface object representations and local canvas shared surface object representations. For example a shared surface object identified by the shared surface object identifier may correspond to multiple group canvases e.g. identified by group canvas identifiers and and corresponding local canvases e.g. identified by local canvas identifiers and . The local shared surface object representations e.g. and of the shared surface object identified by the shared surface object identifier correspond to respective local canvases e.g. identified by local canvas identifiers and . The group canvases may comprise corresponding group canvas shared surface object representations e.g. and that correspond to the shared surface object identified by the shared surface object identifier .

A local canvas may comprise a local canvas shared surface object representation of which at least two different portions correspond to at least two different group canvases. Multiple portions of a local canvas e.g. may correspond to different group canvases e.g. group canvases identified by group canvas identifiers and . A local canvas e.g. may indicate the group canvas identifiers e.g. and to which the local canvas corresponds. illustrates the second local canvas e.g. identified by local canvas identifier comprising local canvas shared surface object representation of the shared surface object identified by the shared surface object identifier . illustrates a third graphical display area comprising a fifth local canvas sixth local canvas and seventh local canvas e.g. identified by local canvas identifiers and respectively .

In one implementation the local canvas tools include a history and playback feature that may be selected to view a local canvas at a particular point in time and playback the changes that have occurred to the local canvas over an elapsed period of time. The local canvas shared surface object representations of a local canvas may be individually played back and or synchronized with other local canvas shared surface object representations of the local canvas. For example the history of viewable changes to a first local canvas shared surface object representation may be played back synchronously with the audio history of a second local canvas shared surface object representation representing an audio record of a discussion that occurred during and about the modifications to the first local canvas.

The group canvas user identifier and corresponding group canvas status of each group canvas user corresponding to a group canvas to which the local canvas e.g. corresponds may be represented by an icon and or avatar e.g. and that uniquely identify the group canvas users. The icon and or avatar e.g. and may include colors patterns and or text to indicate the group canvas user identifier and corresponding group canvas status of a group canvas user. A local canvas user may select the icon and or avatar e.g. and to initiate communication with the user corresponding to the icon and or avatar. The group canvas user may receive a request for communication from the local canvas user and optionally accept the request of the local canvas user to communicate. In one implementation the icon and or avatar of the group canvas user is brought to the foreground to begin a dialogue in a larger interaction frame e.g. a group canvas shared surface object representation corresponding to the local canvas user and group canvas user .

The service providers provide updates of the local canvas shared surface object representation to the respective local canvases canvas manipulations of shared surface object representations . The updates of the local canvas shared surface object representation may be different for each local canvas until the local canvases are synchronized with an updated group canvas shared surface object representation. Where the local canvas user interaction corresponds to a group canvas and the interaction detection logic detects multiple simultaneous local canvas user interactions that correspond to the group canvas e.g. the interaction detection logic may identify a first local canvas user interaction from the simultaneous local canvas user interactions . In other words the interaction detection logic may consider one of the simultaneous local canvas user interactions to be the first local canvas user interaction. The interaction detection logic updates the group canvas shared surface object representation with the first local canvas shared surface object representation and the group canvas shared surface object version and the first local canvas shared surface object version to correspond .

The interaction detection logic may discard a second local canvas user interaction from the simultaneous local canvas user interactions that the interaction detection logic identifies as a second local canvas user interaction. In one implementation the second local canvas may discover the collision by polling the system for the state of the local canvas shared surface object representation and determine that the local canvas shared surface object representation is stale. The second local canvas may compare the local canvas shared surface object version and group canvas shared surface object version and determine that the group canvas shared surface object version is more recent. The second local canvas may fetch the group canvas shared surface object representation to update the local canvas shared surface object representation and local canvas shared surface object version.

The interaction detection logic may generate a group canvas shared surface object record based on the shared surface object metadata and the updates of the local canvas shared surface object representation received from the service provides . The interaction detection logic may store the group canvas shared surface object record in the shared surface object repository and update the local canvas shared surface object representation of each of the corresponding local canvases with the group representation . The interaction detection logic may update the group canvases e.g. with the group canvas shared surface object record where at least a portion of the local canvas shared surface object representation e.g. is within the group canvas boundaries of the group canvases.

The service provider logic may analyze the group canvas shared surface object data types and or group canvas shared surface object display properties in relation to the local canvas shared surface presentation preferences and or local canvas shared surface object display properties to determine whether to use a translation of the group canvas shared surface object data types to update the corresponding local canvas shared surface object representation and local canvas shared surface object metadata . For example the group canvas shared surface object data type of a group canvas shared surface object representation may be audio e.g. a song arranged with vocals and instruments while the local canvas shared surface object presentation preferences may indicate a preference for text. The corresponding local display properties may also indicate that audio is unavailable.

The service providers responsive to particular presentation preferences data types and display properties may generate updates of the local canvas shared surface object representation based on a translation of the group canvas shared surface object data types . For example the service providers responsive to translating audio e.g. a song arranged with vocals and instruments to text e.g. lyrics to a song and or musical notation of the arrangement of the song may translate group canvas share surface object data types e.g. audio to text so that a corresponding local canvas shared surface object representation is presented in the corresponding local canvas as text.

The interaction detection logic may generate a local canvas shared surface object record with the updates of the local canvas shared surface object representation based on the translation of the group canvas shared surface object data types and update the corresponding local canvas shared surface object representation .

The system may be implemented in many different ways. For example although some features are shown stored in computer readable memories e.g. as logic implemented as computer executable instructions or as data structures in memory all or part of the system logic and data structures may be stored on distributed across or read from other machine readable media. The media may include hard disks floppy disks CD ROMs a signal such as a signal received from a network or partitioned into sections and received in multiple packets communicated across a network. The system may be implemented in software hardware or a combination of software and hardware. The system may also use different message formats in addition to XML such as encoded packets with bit fields that are assigned specific meanings.

Furthermore the system may be implemented with additional different or fewer components. As one example a processor or any other logic may be implemented with a microprocessor a microcontroller a DSP an application specific integrated circuit ASIC program instructions discrete analog or digital logic or a combination of other types of circuits or logic. As another example memories may be DRAM SRAM Flash or any other type of memory. The system may be distributed among multiple components such as among multiple processors and memories optionally including multiple distributed processing systems. Logic such as programs or circuitry may be combined or split among multiple programs distributed across several memories and processors and may be implemented in or as a function library such as a dynamic link library DLL or other shared library.

While various embodiments of the invention have been described it will be apparent to those of ordinary skill in the art that many more embodiments and implementations are possible within the scope of the invention. Accordingly the invention is not to be restricted except in light of the attached claims and their equivalents.

