---

title: Signaling framework for negotiating and executing composition of registries
abstract: Systems, methods, devices and software for negotiating and executing registry composition are described. Signaling frameworks for both of these aspects of registry composition are provided.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08005015&OS=08005015&RS=08005015
owner: Telefonaktiebolaget L M Ericsson (publ)
number: 08005015
owner_city: Stockholm
owner_country: SE
publication_date: 20080728
---
The present invention relates generally to automatic composition of networks and more particularly to methods systems devices and software for performing signaling associated with composing registries and other information associated with network composition.

In the near future consumers are expected to carry multiple devices that communicate with one another to form small personal area networks PANs that move with the user. In a given area there may be many users each with his her own PAN. The PANs of different users are likely to comprise different devices use different technologies and have different resources and capabilities. It would benefit users to make the resources and capabilities of one PAN available to other PANs. For example one PAN may have Internet access that can be shared with other PANs.

Network interworking allows the sharing of resources between networks so that users in one network can have access to resources in another network. BLUETOOTH and IEEE 802.15 both allow interworking between PANs. However such interworking typically requires manual configuration and off line negotiation.

The concept of network composition is gaining acceptance as a viable technique for the seamless and automatic creation of ad hoc networks without user intervention. Automatic network composition enables interworking between networks on the fly in a manner that is transparent to the user. For example the Ambient Networks Project is currently developing standards for networks called Ambient Networks. An Ambient Network AN can be defined as one or more network nodes and or devices that share a common network control plane called the Ambient Control Space ACS . The ACS contains all of the network control and management functions which are organized into functional areas FAs . Each FA represents a different management task e.g. QoS mobility composition security congestion control etc. . The ACS includes two interfaces the Ambient Network Interface ANI and the Ambient Service Interface ASI . The ANI enables communication between different Ambient Networks and the ASI allows access to the services offered by the Ambient Network. The ACS enables automatic composition of networks in a transparent fashion without manual configuration and off line negotiation while taking into account user needs preferences locations and devices.

ANs can host several registries. A registry is any authoritative store of information or repository of data. Examples include Management Information Bases MIB relational databases and Context Information Bases CIB . When ANs compose the hosted registries need to compose. Registry composition is a sub process of network composition and provides seamless autonomous and uniform access to the updated content of all of the registries in the composed network. There are several reasons for performing registry composition. A first reason is that the registries content may need to compose. Indeed when ANs compose the content of the hosted registries may be kept as it is modified or even merged. Content merging can happen for instance when a new service is proposed by the composed network by combining elementary services provided by the composing networks. A second reason for performing registry composition is that entities in the composed network may need access to a content hosted by a registry that was in a different network before composition. The interface of such a registry e.g. SNMP SQL may be different from the one used by the interested entity. The granularity and the format of the registry content may also be different from those supported by the interested entity. A third reason for performing registry composition is that new registries may need to be created in order to store the composed content.

The registries to compose may be heterogeneous. They may be of different types e.g. centralized distributed they may store heterogeneous types of information e.g. raw data vs. aggregated data that is presented using different formats e.g. object oriented database relational database and they may rely on different interfaces to access the stored information. An interface is either a protocol e.g. P2P information discovery protocols or an Application Programming Interface e.g. UDDI APIs . Registry composition is orchestrated by the Registry Composition Entity RCE and can be performed in two main steps e.g. negotiation of the composition agreement and execution of the agreement.

Registry composition requires dynamic coordination between the control functional entities of the composing networks because these entities need to communicate in order to coordinate and regulate the composition. In order to perform registry composition a signaling framework is needed.

Various signaling frameworks are available for other types of communication systems. For example Resource ReSer Vation Protocol RSVP is a resource reservation protocol for simplex multicast and unicast data flows. In RSVP the signaling sessions are defined by the IP addresses of the source and the destination which prevents RSVP from supporting session mobility. Furthermore RSVP does not support symbolic names and the signaling is flow dependent. This signaling framework also presents a tight coupling between the signaling semantic i.e. resources reservation and the delivery of the signaling messages which may be undesirable for registry composition.

Session Initiation Protocol SIP and H.323 are signaling frameworks associated with call control. SIP is an IETF standard and H.323 is a set of specifications from ITUT. However SIP is a point to point protocol which does not separate the semantic of the signaling application from the message delivery. SIP is also not designed for negotiation and it does not support session mobility. Indeed if the destination address changes during the same SIP session there is no way to deal with this change and an error message destination unreachable is sent to the entity trying to contact the entity whose address has been changed. H.323 also does not separate transport and signaling functionalities and it supports neither session mobility nor symbolic names.

Other signaling frameworks include Cross Application Signaling Protocol CASP Next Step In Signaling NSIS and Generic Ambient Network Signaling GANS . CASP is a general purpose signaling protocol suite which is employed to establish a control state about data flow along its path in the network. This signaling framework addresses the session mobility problem by introducing the concept of a location independent session identifier. CASP reuses the existing transport and security protocols and decouples message transport from the next signaling hop discovery. NSIS re uses many CASP concepts e.g. it is modular flexible and supports different applications. Furthermore NSIS enables signaling across different network environments can be used in different parts of the Internet e.g. at the edge in the core etc. and supports mobility by allowing efficient service re establishment after handover. Examples of NSIS based signaling protocols are the extended RSVP QoS signaling protocol and the middlebox configuration protocol.

GANS is a back ward compatible generalization of NSIS with extensions including the support of symbolic names and session mobility and flow independent signaling applications. Signaling applications can address destinations using symbolic names which are translated by GANS trans port layer into corresponding IP addresses. A mechanism is provided to allow dynamic update of the IP Symbolic name binding.

However CASP and NSIS do not support both flow dependent and flow independent signaling applications since they only define flow dependent signaling. Moreover these signaling frameworks do not support symbolic names and along with GANS they support only one to one communication. Therefore none of these signaling frameworks CASP NSIS and GANS are independent of the negotiation model. Furthermore none of these frameworks provide a signaling application that can be used for registry composition i.e. none of the designed signaling applications deal with the registry composition specifics .

Accordingly it would be desirable to provide new signaling frameworks methods systems devices and software associated with network composition.

According to an exemplary embodiment a method for executing a negotiated registry composition agreement includes the steps of receiving a first message at an overlay node to activate the overlay node the first message including a list of at least one registry that supports an interface being used by the overlay node and sending from the overlay node a second message toward a re director module of each of the at least one registry in the list.

According to another exemplary embodiment a method for negotiating registry composition includes the steps of sending from a mediator node an offer to compose registries to at least two participant nodes and terminating by the mediator node participation in the negotiation prior to reaching registry composition agreement.

According to yet another exemplary embodiment a communication node includes a processor for executing a negotiated registry composition agreement by receiving a first message to activate an overlay node the first message including a list of at least one registry that supports an interface being used by the overlay node and by sending a second message toward a re director module of each of the at least one registry in the list.

According to still another exemplary embodiment a communication node which operates as a mediator for negotiating registry composition includes a processor for sending an offer to compose registries to at least two participant nodes and which subsequently decides to terminate its participation in the negotiation prior to reaching a registry composition agreement.

Network composition enables on the fly interworking between heterogeneous networks without manual configuration or prior offline negotiation. Network composition results in the creation of a new post composition network referred to herein as the composed network in which resources of the pre composition networks may be shared. As mentioned above when networks compose the hosted registries have to follow suit and compose as well. This requires dynamic coordination between the control functional entities of the composing networks because these entities need to communicate in order to coordinate and regulate the composition. Thus the provision of a signaling framework which facilitates such communications to an Ambient Network architecture would be desirable.

Prior to discussing signaling frameworks according to these exemplary embodiments an exemplary composable network in which such signaling frameworks can be employed will be described to provide some context. illustrates a composable network e.g. an Ambient Network according to one exemplary embodiment. The composable network shown in is based on the Ambient Network architecture proposed by the Ambient Network Project as described in Ambient Networking Concepts and Architecture IST 2002 2.3.1.4 which is incorporated herein by reference. The network may comprise one or more network nodes that reside in the connectivity layer of the network and share a common network control space . The connectivity layer comprises the logical and physical resources of the network which may include one or more registries . There is one common network control space for all of the nodes in the network . The network control space is logically present in the nodes . This network architecture does not imply a particular kind of implementation. For example the network control space can be implemented on a central server or in a distributed fashion where nodes implement parts of the network control space .

The network control space comprises a set of control functions to enable interworking between networks . These control functions also referred to as functional areas FAs each handle a specific management task such as Quality of Service QoS mobility security context awareness and network composition. The composition FA is responsible for composition related functions as will be hereinafter described. Depending on the type of composition a new network control space may be created for the composed network.

The network control space includes three interfaces the network interface the service interface and the resource interface . The network interface provides a standard mechanism to enable cooperation between the network control spaces of different networks and hides the complexities of the underlying network technologies so that networks using different technologies appear the same. The networks use a technology independent signaling protocol such as the Generic Ambient Network Signaling Protocol GANS to exchange information over the network interface . Applications or clients residing on network nodes use the service interface to access the services provided by the network control space . When two networks compose a single service interface is created for the composed network. The resource interface provides a mechanism to manage the resources residing in the connectivity layer. Applications use the resource interface indirectly to access the resources residing on network nodes in the connectivity layer .

Individual networks can compose to form composed networks which can also compose with other networks . Network composition enables dynamic and instantaneous interworking of heterogeneous networks on demand and in a transparent fashion without manual configuration or offline negotiation. When two networks compose they communicate with one another over the network interface to negotiate a network composition agreement NCA . The NCA specifies the resources that will be shared the services that will be provided and the policies that will be implemented to coordinate interoperation of the network control spaces of the pre composition networks . The result of the composition may be a newly composed network that includes all of the logical and physical resources contributed by the pre composition networks . Composition however does not necessarily result in a new composed network.

Network composition is a significant feature of ANs which overcomes the limitations of today s static network cooperation by providing dynamic cooperation between heterogeneous networks on demand. Indeed today s network cooperation relies on off line agreements and manual configuration operations and enables access to a very limited set of services i.e. those identified in the agreement . Network composition allows on line agreement creation and seamless and instantaneous access to new services. The cooperation process via network composition is transparent to the end users but takes user context and network context into account.

Three types of network composition can for example be performed network interworking control sharing and network integration. In the first type each network controls and manages its own resources and no composed network is created. In the second type some of the resources of the composing networks are contributed to a new composed network. This composed network has its own logical network control space. The composing networks exercise joint control over the shared resources and keep control over the remainder of their own resources. In the third type of network composition all of the participating networks merge into a new composed network. The composed network thus includes all of the logical and physical resources in the composing networks. A new logical network control space is created during composition and manages the composed network.

The pre composition networks may include registries that can be accessed by applications. A registry is any authoritative store of information or repository of data such as a database. The registries hosted by the pre composition networks can be of different types e.g. centralized distributed they can store different types of information using different formats e.g. object oriented database relational database and they can rely on different interfaces to access the stored information i.e. protocols such as P2P information discovery protocols or programming interfaces such as UDDI APIs . The registries may also have redirectors associated therewith for redirecting certain requests for information as will be described in more detail below.

According to the present invention the concept of composition is extended beyond simple network composition to include composition of registries existing in the pre composition networks . When two networks compose two or more individual registries in the constituent networks are merged into a single logical registry referred to herein as a merged registry. As used herein the term merge does not necessarily imply the physical merging of the registries but also includes the logical linking of registries so that the combined resources appear to an application in the composed network as a single registry . Clients are provided the ability to automatically and seamlessly access the content of the various post composition registries that comprise the merged registry . This objective can be achieved by providing an overlay architecture for information discovery and publication after network composition. More information regarding registry composition and overlay networks can be found in for example U.S. patent application Ser. No. 11 614 808 entitled Architecture for an Automatic Composition of Registries When Networks Compose filed on Dec. 21 2006 and published as U.S. Patent Publication No. 2008 0133727 the disclosure of which is incorporated here by reference.

Briefly an exemplary negotiation protocol associated with registry composition can have three entity roles i.e. the initiator the responder and the mediator. The initiator is the entity that initiates the negotiation. The responder is the entity that receives an agreement proposal and decides on its acceptance. In some cases e.g. point to multipoint there may be multiple responder entities. Collectively the initiator and responder entities are also referred to herein as participants . The mediator orchestrates the negotiation and creates the proposals. The negotiation protocol according to exemplary embodiments defines four types of requests i.e. Initiate Ack Offer and Bye and one response type i.e. Ok . Each response includes a response code that specifies the type of the response i.e. Accept Reject Agreement and Error .

To start a negotiation session the initiator sends an Initiate message to the mediator along with the list of participants with which it wants to negotiate as shown in . If the mediator agrees to arbitrate the new session it sends an Initiate message to all of the participants in the list and sends an acknowledgement accepting the role of mediator back to the Initiator . The responders may either accept or reject the negotiation. If the negotiation is accepted as shown in the mediator creates a proposal sends it to all of the participants using the Offer message and then analyses their responses. If the proposal is rejected the mediator creates a new proposal and restarts the process. This is repeated until an agreement is reached an error is encountered or the negotiation timeout expires. Then the mediator creates the final response e.g. Ok Error or Ok Agreement and sends it to the participants .

After the negotiation is started an entity may need to leave the negotiation e.g. if the network to which it belongs moves away from the other networks . Accordingly the negotiation protocol according to these exemplary embodiments enables entities i.e. a participant or a mediator to quit the negotiation. When a participant decides to quit it sends a Bye message to the mediator . The mediator will either continue the negotiation with the remaining participants or end the negotiation depending on the negotiation policies e.g. the negotiation is ended if only one participant remains in the negotiation . If the mediator decides to quit it sends a Bye message to all of the participants which results in the termination of the negotiation process.

According to exemplary embodiments the negotiation protocol is further extended to enable the negotiation to continue even if the mediator that orchestrates the negotiation quits. Two cases are considered herein voluntary and forced departure. Voluntary departure occurs when the mediator decides to leave the negotiation e.g. if the network to which it belongs moved away from the other networks . Forced departure occurs when the mediator is forced to disconnect from the network e.g. node failure connectivity problems etc. . Starting first with voluntary departure if an active mediator i.e. the mediator that is orchestrating an ongoing negotiation decides to quit it should insure that the negotiation process will continue among the remaining participants. Therefore the mediator which intends to voluntarily depart the negotiation should find another mediator that can replace it. This can for example be accomplished as follows.

Each mediator is responsible for keeping track of the other mediators in the network. When a mediator joins the network it publishes itself to the network members. This can be done using any desired information publication protocol e.g. PDP . When a mediator receives a publication message from another mediator the mediator receiving the publication message then establishes a connection with the newly joined mediator . This results in the creation of an overlay network between all of the mediators in the network as shown in .

When an active mediator decides to quit a negotiation it sends a Bye message to one of its neighboring mediators along with the current status of the negotiation and its related information. If no other mediator is part of the network the mediator sends a Bye message to all of the participants which will terminate the negotiation process. According to one exemplary embodiment the mediator cannot quit the negotiation if it is waiting for a message from one or more participants. Indeed if this is allowed the expected message will be lost and the status transferred to the new mediator will be corrupted. Therefore the mediator should quit only when it is in a stable state i.e. no expected incoming message is missing . The participants will get the address of the new mediator in the next message they receive.

To address forced departures of a mediator according to an exemplary embodiment each active mediator can choose one of its neighboring mediators e.g. randomly as its backup. Assuming that the probability that both an active mediator and its backup leave the network at the same time is very low a single backup mediator may be sufficient. Alternatively multiple backups could be selected by each active mediator . According to this exemplary embodiment each mediator facilitates detection of the forced departure of the other mediators which it is backing up by periodic heartbeat messages. More specifically and according to one purely illustrative exemplary embodiment the scheme proposed in Chunyan Fu Roch Glitho and Ferhat Khendek A Novel Session Recovery Mechanism for Cluster based Signaling Architecture for Conferencing in MANETs In the Workshop on Wireless Ad hoc and Sensor Networks WWASN 2007 June 25 Toronto the disclosure of which is incorporated here by reference can be used to detect heartbeats for insertion of backup mediators into a negotiation process.

Therein a session recovery mechanism is proposed for cluster based signaling architecture for conferencing in MANET. The conference participants are organized in different clusters and each cluster has a super member that is responsible for detecting the forced departure of the members of its cluster and the other super members. To reach this goal each super member maintains a heartbeat session with each member of its cluster and with each of the other super members. A session is defined as a signaling link between two nodes and heartbeat is defined as a periodic exchange of a request and a reply. According to the present exemplary embodiment the super member is the mediator and the members are the participants . The session is a link between a mediator and a participant or between two mediators .

The backup mediator periodically sends a heartbeat request to the active mediator and starts a timer. If the timer fires and no reply is received the backup mediator re sends the request and restarts the timer. If there is still no reply upon a predetermined number of requests e.g. 1 2 3 or 4 the backup mediator decides that the active mediator has unintentionally departed and takes over the role of active mediator for that negotiation. If a backup mediator is no longer reachable the active mediator to which it is assigned chooses a new backup. If the active mediator disappears its backup will detect its forced departure using the heartbeat scheme and will continue its ongoing negotiation sessions.

According to exemplary embodiments a signaling framework can be provided to facilitate the signaling illustrated in and described above with respect to mediator departure and . Such a signaling framework according to these exemplary embodiments is intended to have various characteristics. First the signaling framework should support the negotiation and execution of the composition agreement for registry composition. Second it should support symbolic names and session mobility not rely on a permanent central entity and be lightweight. Indeed in ANs entities may leave and join the network at any time using the same or a different IP address and port number and they may use symbolic names to address destination entities. Furthermore an AN can include different types of de vices with heterogeneous capabilities. Therefore the signaling framework should be lightweight in order to be used by any of theses devices e.g. including devices with limited resources . Third the signaling framework should be independent of the negotiation model i.e. it should support negotiation with or without mediator support different decision models for the negotiation e.g. Accept it or leave it offer counteroffer and support different negotiation approaches. Negotiation can be either one to one i.e. between two entities or one to many i.e. one entity communicating with more than one entity at the same time or many to many. Therefore to be independent of the negotiation model the framework should also allow point to point and point to multipoint message delivery. Point to point message delivery is used for one to one negotiation. Point to multipoint is used for one to many and many to many negotiation. Negotiation approaches include parallel negotiation sequential negotiation and hybrid negotiation. These approaches are defined when the negotiating parties are negotiating multiple issues and correspond to for example negotiating parties presenting all their demands offers at once one by one and group by group respectively.

Fourth the signaling framework should allow ex change of the negotiation agreements and proposals. Fifth it should be modular and extensible. Sixth it should separate the semantic of the signaling application i.e. registry composition from the message delivery so that it can be easily extensible. Seventh it should enable the usage of existing and standard transport protocols e.g. TCP UDP for transporting signaling messages. Eighth it should support flow dependent signaling applications where the signaling messages follow the flow data path and flow independent signaling applications e.g. network composition . However those skilled in the art will appreciate that exemplary signaling frameworks according to these exemplary embodiments may exhibit all or only a subset of these eight characteristics.

To provide these capabilities signaling frameworks according to these exemplary embodiments are architected as backward compatible extended versions of the IETF NSIS Next Step in Signaling for which the unextended version is described in the article Next Step in Signaling NSIS Framework RFC 4080 June 2005 the disclosure of which is incorporated here by reference. More specifically exemplary embodiments described below provide two types of extensions to the NSIS framework a messaging layer extension and a Signaling Application for Registry Composition SARC . Briefly the messaging layer extension is provided to support flow independent applications support symbolic names and provide a group management solution to allow point to multipoint message delivery. SARC supports signaling associated with different negotiation models for registry compositions. Each of these extensions will now be described in more detail as part of the discussion of an overall exemplary signaling architecture illustrated as .

The architectural design of these exemplary signaling frameworks is based on two layers shown in the signaling layer and the common layer . The signaling layer includes the SARC application which is of particular interest for this discussion but can also include any GANS NSIS or other signaling application . The common layer provides functionalities that are common to all of the signaling applications and e.g. message transportation from one node to another. Thus the common layer includes a transport layer including transport layer security TLS and IP layer security which is responsible for transporting negotiation messages and a messaging layer ML that executes common functions before sending the message to its destination. The messaging layer according to this exemplary embodiment uses existing standardized transport protocols e.g. TCP UDP provided by the transport layer to transmit signaling messages such as those illustrated in . The common layer sits between the signaling layer and lower layers e.g. the IP layer .

The messaging layer comprises two main building blocks Negotiation EGIST N EGIST function and Group Management GM function . N EGIST function is an extension of the GANS EGIST function. The GANS EGIST function provides for support of flow independent applications and symbolic names. To extend this functionality the N EGIST function according to this exemplary embodiment also includes 1 support of point to multipoint signaling 2 group management e.g. group members can be identified by their IP addresses and or symbolic names 3 interaction between signaling applications and and GM function 4 storage and maintenance of the name binding state without modifying the routing state information used by EGIST for routing messages towards the group members and 5 extension of EGIST APIs to handle point to multipoint message delivery which features are not found in EGIST functions described in the GANS framework.

Regarding this latter point i.e. extension of EGIST APIs several new parameters associated with EGIST primitives are provided in N EGIST function to support signaling associated with the aforedescribed negotiations. For example the SendMessage primitive is used by signaling applications and to send a message to one or more destinations. According to these exemplary embodiments it has two new parameters group id and min resp. The Group id parameter identifies the group to which the message should be sent. The Min resp parameter is the minimum number of different responses that N EGIST must receive before responding to the application. The Timeout parameter already defined by GIST is used as the length of time the N EGIST layer can wait for min resp responses.

As another example the RecvMessage primitive is used by N EGIST function to transmit received messages to signaling applications and . In the case of a response N EGIST function verifies whether that response this belongs to an application that requires a certain number i.e. the value of the min resp parameter of responses. If this is not the case the response is directly transmitted to the application. Otherwise N EGIST function waits until it receives the minimum number of required responses or until the waiting timeout expires. Then N ESIST function creates a list containing the number of the responding parties along with their names and responses and passes it to the signaling application .

The group management module according to this exemplary embodiment provides the signaling applications with four APIs 

Create group creates a communication group to enable communication with more than one destination e.g. in case of one to many negotiation . This API takes as a parameter the list of symbolic names and or IP addresses of the destination entities. At least one of the names and IP parameters is not null for each group member. Each group has a unique identifier.

Add member group id name ip Adds a new member identified by its name or IP address to a created group.

Remove member group id name ip removes the member identified by its name or IP address from a given group.

Change member ip name ip If a group member changes its IP address and the application somehow becomes aware of the new address it uses this API to make necessary changes to the stored routing state.

To aid in group related messaging N EGIST function obtains the IP addresses of the group members and sends the message to each of them. The addresses of the group members are stored in the routing state table when the group is created. Destination Endpoint Exploration Protocol DEEP function is used to obtain the IP address corresponding to a given symbolic name. The E GIST state maintenance function stores routing information such as mappings between symbolic names and associated IP addresses. The N EGIST routing state extension function extends the EGIST state maintenance function to allow the storage and maintenance of the routing information such as the list of members of each group along with their symbolic names and IP addresses.

Having now described various aspects of the common layer the discussion will now move on to the signaling layer and more specifically to exemplary embodiments of SARC . The primary function of SARC is to transfer different messages related to registry composition encapsulated in SARC messages between communicating peers. According to this exemplary embodiment the architecture of SARC includes the definition of two entities Requestor and Responder. The Requestor is the entity that sends a request and the Responder is the entity that responds to the request. Next exemplary details associated with SARC APIs message types formats and end to end behavior will be provided

Regarding APIs SARC provides the group management primitives described above plus the following two interfaces. First a SendMessage API is provided which can be used by negotiating entities to send a message to peer entities. The primary parameters associate with this API are the type and the payload of the message to send min resp the ID of the destination group for sending requests the destination IP address and name for sending responses the decision model to use for the negotiation and the negotiation approach. Secondly a RcvMessage API is provided which can be used by SARC to pass the content of a received message to the local negotiating entity. SARC messages according to this exemplary embodiment include a common header which indicates the message type followed by a body made up of a variable number of Type Length Value TLV objects. This structure makes them flexible and easily expandable. SARC messages according to this exemplary embodiment are of two types CANegotiation and CAExecution. CANegotiation messages are used for composition agreement CA negotiation whereas CAExecution messages are used for CA execution.

Starting first with the CANegotiation sub types which are for example illustrated in the Initiate message can include for example three TLV objects or fields a local information object a conditions object and negotiation model object. The local information object includes the information that is local for each network and which is necessary for the creation of the agreement proposals. For example this local information may include a list of registry information objects where each registry information object describes a registry in the composing network e.g. including information such as the registry type Information Publication and Discovery Interface IPDI and address. The IPDI is a generic name which refers to different interface types. This identifier is also used for directing redirecting requests. For example clients send requests to the registry which supports the same IPDI as they do.

The conditions object includes the initiator conditions if any concerning the negotiation e.g. an agreement is reached only if it is accepted by all of the participants . The negotiation model object includes information about the negotiation model to use for a particular negotiation which is being initiated by the message e.g. the negotiation approach and the decision model.

The Offer message can include for example two objects or fields an offer Identifier object and an offer data object. The offer identifier object is a cryptographically random identifier chosen by the entity that created the offer. The offer data object includes the offer content and it may be itself a set of TLV objects. Each Ok and Ack message carries a TLV INFO object which contains a response code and the corresponding object. The response codes according to this exemplary embodiment are as follows 

Each of the Agreement and Error codes described above has a corresponding TLV object of the same name. The Agreement object includes three fields an agreement identifier field an agreement data field and an agreement validity time. The first two objects are similar to the offer identifier object and offer data object. The agreement validity time specifies the time after which the agreement is no longer valid. Similarly the Error object has an error data field which includes the error description. A message carrying a Reject code may transport a reason object which describes the reason of the rejection. A message with an Accept code may carry a local information object e.g. when the message is a response to an Initiate message sent from a destination participant to the mediator to accept the negotiation .

Turning next to the CAExecution sub types whose function is described in more detail below with respect to the ActivateNode message carries the list of the one or more registries which support the same IPDI as the message destination. Each registry is described using a Registry Information object. ConfigOvNode also uses a Registry Information object to carry information about the overlay node e.g. its IP address . The Join and Quit messages carry a Registry Information object describing the registry that wants to join or quit a composed network. If the Quit message is sent by an overlay node it should also include the list of the registries that are served by the quitting node i.e. the registries belonging to the multicast group maintained by the quitting overlay node .

The registry composition process described above results in for example the creation of an overlay network i.e. a Registry Overlay Network that provides the interested entities in the composed net work with uniform and seamless access to the content of all of the registries in that network. The Registry Overlay Network RON includes a single overlay node for each Information Publication and Discovery Interface IPDI used by a registry in the composed network and this overlay node supports that IPDI.

According to exemplary embodiments each overlay node is e.g. randomly mapped to a registry that supports the same IPDI using for example the CAExecution message sub types described above. An exemplary signaling diagram is illustrated in . To create the RON the RCE responsible for the composition sends an ActivateNode message to the relevant overlay node to activate it along with the list of the registries that support the same IPDI to which the overlay node is being mapped the overlay node having been previously installed and awaiting activation . After an overlay node is initialized it sends a ConfigOvNode message to the re director module of each registry in its related list. This configures the address of the overlay node to which requests should be re directed. After the creation of the RON another registry may want to join e.g. the registry rejoins the composed network after having moved out of the coverage area for a while or leaves the composed network e.g. networks decompose . This is achieved by the respective registry sending a Join or Quit message to the overlay node to which it was or is connected examples of which are also shown in . If the quitting registry is also an overlay node it sends a Quit message to the RCE that orchestrated the RON creation. The RCE will then replace the overlay node with another registry that supports the same IPDI as the one which is quitting. This latter functionality is illustrated by the three signals at the bottom of albeit the ActivateNode message will likely be sent to a different overlay node not shown than the one which sent the Quit message . In the case of a Join message from a new registry a ConfigOvNode message is expected as response from the RON to insure that the overlay node is and that it accepts the addition of the returning registry to its multicast group.

To test the afore described signaling frameworks various simulations were conducted. These involved measurements of for example two characteristics network load and delay. Regarding network load the number of messages which were transmitted associated with negotiating a network composition for a participant and a mediator to quit the negotiation for RON creation and for a registry to join and quit the RON were measured and or calculated. Delays were calculated in seconds and included measurement of the following types of delays total time delay for successful negotiation and for RON creation average propagation time delay for successful negotiation RON creation and for a virtual registry to quit the RON. Total time delay for successful negotiation is the total time delay required for the complete negotiation i.e. the difference between the time when the initiator creates the first Initiate message and the time when the mediator receives the last Ack for the agreement. These measurements do not include the delays for internal processing related to the negotiation e.g. agreement creation .

Similarly the total time delay for RON creation is the total time delay required for the complete RON creation i.e. a difference between the time when the RCE creates the first ActivateNode message and the time when the last registry receives a ConfigOvNode message. A different ActivateNode message e.g. containing different information such as the multicast group members is created for each virtual registry. Average propagation time delay is the average time delay for a single message to get from the source to the destination.

The composed network being simulated was composed of a number of networks each containing a Registry Composition Entity RCE the functional entity responsible for registry composition as shown in . The mediator was modeled as a separate entity and was part of one of the composing networks . During the simulation the number of composing networks was varied although three are shown in as an example and the scalability parameters were calculated for each case. In general only a small number e.g. 2 or 3 of networks will typically compose with one another at a given time e.g. since not all of the networks will move near to one another at the same time. The situation where a larger number of networks are composing can be seen as a number of successive composition sessions between a limited numbers of networks. Thus in the following examples the negotiation process has been simulated for 2 3 5 10 15 and 20 entities.

From it can be seen that in order achieve a successful negotiation between two entities 14 messages are needed or 7 for the case that the mediator is co located with one of the entities . For each extra entity involved in the process 7 extra messages are needed. Therefore the number nbr of exchanged messages between n entities in a successful negotiation is nbr 7n or 7n 7 if the mediator is co located with one of the entities . This is because the messaging layer on the mediator side sends a copy of each outgoing message to each of the group members. This formula was validated by the simulation results . To reduce the number of exchanged messages nbr a multicast solution can be utilized which will duplicate messages only when needed. presents the average message propagation time delay in each of the six simulations and also presents the total time delay for successful negotiation. The time delay is linearly proportional to the number of composing net works and it remains barely noticeable by the client. The average time delay varies by less than 0.01 s 0.05 s for total time delay for each additional five networks. The total time to complete negotiation between 20 ANs is less than 0.16 s.

The number of messages exchanged to allow an entity to quit the negotiation according to this exemplary embodiment is two i.e. a Bye message followed by an Ok message . The total time delay needed for a participant to quit the negotiation is the time needed to exchange those two messages e.g. about 0.04 s in the case where 20 entities are negotiating . This time remains negligible compared to the total negotiation time delay and the quitting process does not disturb too much the negotiation process among the remaining parties. However in case of a mediator quitting the negotiation the quitting time delay depends on the amount of information to be exchanged between the new and the quitting mediators.

For a registry to quit a RON only one message may be used i.e. a Quit message sent to the overlay node . The quitting process is transparent to the other entities in the network except the overlay node . When an overlay node decides to quit more processing messages and time are required. For example when an overlay node quits the RCE should replace it which is equivalent to creating a RON with one overlay node and nbrisame regs 1 registries. Nbrisame regs is the number of registries served by the quitting node including itself. shows the average propagation and total time delay for an overlay node to quit where nbrisame regs varies from 2 to 20 along with the average propagation and total time delay for the creation of the related RON.

The foregoing exemplary embodiments describe methods systems devices and software for negotiating and executing registry composition. An exemplary hardware node which may be involved in such activities is illustrated as . Therein node contains a processor or multiple processor cores memory one or more secondary storage devices and an interface unit to facilitate communications between node and the rest of the network e.g. a participant node or a mediator node during the negotiation phase of network composition or an overlay node associated with execution of an agreed to composition as described above.

Thus according to one exemplary embodiment a method for executing a negotiated registry composition includes the steps shown in the flowchart of . Therein at step a first message is received at an overlay node to activate that overlay node the first message e.g. an ActivateNode message including a list of at least one registry that supports an interface e.g. an IPDI being used by the overlay node. This message may be targeted to a specific overlay node that uses this specific interface e.g. this IPDI which specific overlay node will be known to the RCE through previous processes associated with the network composition. The overlay node then sends as shown in step a second message e.g. a ConfigOvNode message toward a re director module of each registry in the list.

According to another exemplary embodiment a method for negotiating registry composition when a mediator leaves an ongoing negotiation includes the steps illustrated in the flowchart of . Therein an offer is sent to compose registries from a mediator node to at least two participant nodes at step . Then the mediator node terminates its participation at step in the negotiation prior to reaching a registry composition agreement.

The present invention may of course be carried out in other specific ways than those herein set forth without departing from the scope and essential characteristics of the invention. The present embodiments are therefore to be considered in all respects as illustrative and not restrictive and all changes coming within the meaning and equivalency range of the appended claims are intended to be embraced therein.

