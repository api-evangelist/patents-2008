---

title: Methods and systems for providing resource-access information
abstract: A computer-implemented method may provide resource-access information. The computer-implemented method may include determining a resource-access scope of a software application and determining whether a resource is within the resource-access scope. The computer-implemented method may also include retrieving resource information associated with the resource from a resource-information database and providing a notification that indicates whether the resource is within the resource-access scope. The notification may comprise the resource information. Additional computer-implemented methods and systems are also disclosed.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08281410&OS=08281410&RS=08281410
owner: Symantec Corporation
number: 08281410
owner_city: Mountain View
owner_country: US
publication_date: 20080331
---
Over the next decade computer security programs may continue to transition from primarily blacklist based anti malware solutions to whitelist based solutions. Whitelist based solutions may allow whitelisted software applications to run while blocking all other applications. However whitelist based solutions may not block all malicious code from executing. For example a publisher may provide legitimate software for a period of time in order to gain trust and have the software whitelisted. The publisher may then introduce malicious code into the whitelisted software. As another example a malicious developer in a trusted software company may introduce malware in a whitelisted program.

Traditional behavior monitoring systems may provide some protection against malware in whitelisted software. Behavior monitoring systems may monitor a software application and may ask a user about whether to allow the software application to access a potentially sensitive file. However most traditional behavior monitoring systems do not provide users with enough context to allow the users to make an informed decision. The information that traditional behavior monitoring systems provide may be cryptic and unintelligible to a typical user. For example JAVA .NET and other managed applications may provide users with a directory path for the potentially sensitive file but the directory path may not help the user make a decision about whether to allow the software application to access the directory.

The instant disclosure presents methods and systems for providing users with intelligible resource access information that may help the users make informed decisions about whether to allow applications to access resources. For example an application monitor may determine a resource access scope of a software application determine whether a resource is within the resource access scope and retrieve resource information associated with the resource from a resource information database. The application monitor may then provide a user with a notification that includes the resource information and indicates whether the resource is within the resource access scope. The resource information may provide information that helps a user determine whether to allow the software application to execute or access the resource.

In some embodiments the application monitor may determine the resource access scope of the software application after the software application is installed on a destination computer and before the software application is allowed to execute. In such embodiments the resource access scope may be access scope declared by a software application e.g. file permissions declared by an assembly of the software application or access information in an application manifest of the software application . The application monitor may determine that the resource access scope may be too broad. For example the application monitor may determine that a potentially sensitive resource is within the resource access scope. After determining that the resource is within the resource access scope the application monitor may notify the user that the software application is attempting to access the resource. The application monitor may also query the user about whether to allow the software application to execute. After receiving a response from the user the application monitor may permit the software application to execute or prohibit the software application from executing based on the response from the user.

In other embodiments the application monitor may monitor the behavior of the software application while it executes. For example determining whether the resource is within the resource access scope may comprise detecting that the software application is attempting to access a resource. The application monitor module may determine that the resource is outside the resource access scope of the software application. Then the application monitor module may query a user about whether to allow the software application to access the resource. The application monitor may deny or allow access to the resource based on the response from the user.

In some embodiments determining the resource access scope of the software application may comprise analyzing an assembly of the software application analyzing meta data of the software application and or selecting default resource access rules. Analyzing an assembly of the software application may comprise determining file permissions declared by the assembly. In other embodiments meta data of the software application may comprise an application manifest of the software application. The application manifest may provide information about the resource access scope of the software application.

The application monitor may create an access rule for the resource based on the response from the user. The access rule may indicate whether the software application is allowed to access the first resource. Thus when the application attempts to access the resource a second time the application monitor module may apply the access rule rather then querying the user again.

The access rule may also be applied to other resources related to the resource i.e. the first resource . The access rule may define access rights for all resources that share a particular attribute. For example the application monitor module may detect that the software application is attempting to access a second resource that has the same file extension as the first resource. The application monitor module may apply the access rule to the attempt to access the second resource.

In at least one embodiment detecting that the software application is attempting to access a resource may comprise determining that the software application is attempting to access a directory. Retrieving resource information associated with the resource may comprise determining a file type of a file contained in the directory. The application monitor module may determine that the file type of the file is outside the resource access scope of the software application and may alert a user about the attempted access.

Embodiments of the instant disclosure may provide various advantages over prior behavior monitoring systems. For example by retrieving resource information associated with a resource from a resource information database and providing a notification to a user that includes the resource information an application monitor module may provide a user with enough information to allow the user to make a decision about whether to allow a software application to access the resource. Embodiments of the instant disclosure may also result in more detailed application manifests narrower access scoping of applications and may help stop malicious publishers from accessing sensitive information. Embodiments of the instant disclosure may also provide various other features and advantages.

Throughout the drawings identical reference characters and descriptions indicate similar but not necessarily identical elements. While the exemplary embodiments described herein are susceptible to various modifications and alternative forms specific embodiments have been shown by way of example in the drawings and will be described in detail herein. However the exemplary embodiments described herein are not intended to be limited to the particular forms disclosed. Rather the instant disclosure covers all modifications equivalents and alternatives falling within the scope of the appended claims.

The following is intended to provide a detailed description of various exemplary embodiments and should not be taken to be limiting in any way. Various exemplary methods and systems for providing resource access information are described and or illustrated herein. For example in some embodiments an application monitor module may provide a user with resource access information before a software application executes for the first time and the application monitor module may query the user about whether to allow the software application to run.

In other embodiments an application monitor module may detect that a software application is attempting to access a resource that is outside the resource access scope of the software application. In such embodiments the application monitor module may provide a user with information about the attempt to access the resource and with information about the resource access scope of the software application. The application monitor may query the user about whether to allow the software application to access the resource. Embodiments of the instant disclosure may provide various other features and advantages.

Application monitor may be a module an application or any other computer executable code capable of providing resource access information. For example application monitor may determine that software application is attempting to execute for the first time. Application monitor may then determine the resource access scope defined or requested by software application . If the resource access scope covers access to a potentially sensitive resource application monitor may retrieve information associated with the resource from resource information database . Application monitor may provide this information to a user of computing device . The resource information may help the user determine whether or not to allow software application to execute. and the corresponding description provide additional details about determining whether or not to allow a software application to execute.

In other embodiments application monitor may monitor software application as it runs. Application monitor may detect that software application is attempting to access a resource that is outside the resource access scope of software application . Application monitor may retrieve resource information associated with the resource from resource information database . Application monitor may then provide a notification to a user of computing device that the software application is attempting to access the resource. The notification may comprise the resource information which may be detailed information about the resource that can help the user determine whether to allow application to access the resource.

In some embodiments application monitor may query the user about whether to allow software application to access the resource. For example software application may request access to resource of server . Resource may be a financial document that is outside the resource access scope of software application . The user may decide to prohibit software application from accessing resource . After receiving an indication of the user s decision to prohibit access to resource application monitor may automatically create an access rule that indicates software application is not allowed to access resource . In other embodiments application monitor may query the user about whether the user wants to create an access rule before creating the access rule.

The access rule may prohibit a specific software application such as software application from accessing a specific resource such as resource . The access rule may also prohibit software application from accessing a type of resource. For example if resource is a financial document application monitor may query the user about whether to prohibit software application from accessing all financial documents. If the user decides to prohibit software application from accessing all financial documents application monitor may create an access rule that prohibits software application from accessing all financial documents. Thus if resource of computing device is a financial document and software application attempts to access resource application monitor may automatically prevent software application from accessing resource .

In various embodiments access rules may define permissions that allow or prohibit access to one or more resources or types of resources. An access rule may permit or prohibit reading writing copying or performing any other access action on a resource. Access rules may be based on specific resources or associated with attributes of a resource. For example an access rule may define access permissions for all resources with a particular file extension name or any other attribute.

In one example application may be a video editing application and may request access to c users john documents . . Instead of sending a user an alert that states VideoEditingApplication.exe is requesting access to c users john documents . application monitor may access resource information database to find additional information about the path c users john documents . . After identifying additional information application monitor may provide a notification that states The Video Editing application wants access to c users john documents. This location contains your financial documents your personal photos and your music. Thus application monitor may help a user better understand the context of an access attempt by providing clear information about the resource that the software application is attempting to access.

The application monitor may determine a resource access scope of a software application step . The application monitor may determine the resource access scope of the software application after the software application is installed on a destination computer and before the software application is allowed to execute. In other embodiments the application monitor may determine the resource access scope of the software application when the software application attempts to access a resource. Determining the resource access scope of the software application may also be performed at any other suitable time.

In some embodiments determining the resource access scope declared by the software application may comprise determining file permissions declared by an assembly e.g. a MICROSOFT .NET assembly of the software application. For example the application monitor may analyze the software application s assembly to determine which file permissions the software application s assembly statically declares. In addition to or instead of looking at the application s assembly the application monitor may analyze an application manifest of the software application. The application manifest may provide information about the resource access scope of the software application. The application monitor may also use various other types of meta data or other information to determine the resource access scope of the software application.

The resource access scope may be any variable definition declaration or other information that indicates the scope of access requested required and or utilized by a software application. For example an application may request access to certain file systems or directories and this access may be the resource access scope of the application. An application s manifest which may contain information about the application s access needs may define that the application will only access certain file types particular directories or other information or resources. The resource access scope may also define whether the software application accesses network resources the internet operating system resources e.g. an application programming interface peripheral devices e.g. input and or output devices or any other resources that may be available to the software application. The resource may be any type of resource available to a software application. For example the resource may be user data a file system a file a folder an application programming interface a network resource a communication port a peripheral device and or any other type of computing resource.

After determining the resource access scope of the software application the application monitor may determine whether a resource is within the resource access scope step . In some embodiments determining that the resource is within the resource access scope may cause the application monitor to provide the user with information such as a warning or a query. In one example if the resource access scope of the software application is broad and encompasses the resource the application monitor may query the user about whether to allow the software application to execute.

In other embodiments determining whether a resource is within the resource access scope may comprise determining that the resource is not within the resource access scope. For example if the software application is already running and attempts to access a resource the application monitor may detect that the resource is outside the scope of the software application s defined access. In response the application monitor may provide a warning a query or any other type of notification to the user of the computer about the software application s attempt to access the resource.

After determining whether the resource is within the resource access scope the application monitor may retrieve resource information associated with the resource from a resource information database step . provides an example of a resource information database. The resource information database may associate the resource information with the resource by determining what type of resource the resource is. For example if the resource is a QUICKEN financial file the application monitor may search the resource information database for resource access information about QUICKEN financial files.

The application monitor may then provide a notification that indicates whether the resource is within the resource access scope step . A notification may include a warning that the software application is attempting to access the resource and may provide detailed information e.g. from the resource information database about the resource. A notification may also query the user about whether to allow access to the resource or whether to allow the software application to execute.

The application monitor may ask the user of a computing device at a time the software application is installed whether to allow the software application to execute decision point . The application monitor may prohibit the software application from executing if the response from the user indicates that the software application is not allowed to execute step . Alternatively the application monitor may permit the software application to execute if the response from the user indicates that the software application is allowed to execute step .

Instead of or in addition to asking the user whether to allow the software application to execute the application monitor may use the resource information and access scope information to provide a security score or analysis of the software application. An application that requests narrower access to resources may evaluate as being less risky e.g. may score better while an application that requests broader access to potentially sensitive resources may evaluate as being more risky e.g. may score worse . A potentially sensitive resource may be a folder a file or any other resource that may contain financial information e.g. bank account information credit card information etc. personal information e.g. social security numbers birthdays passwords or any other information that a user may want to keep others from accessing.

The process illustrated in may be performed at various times. For example a user may install the software application and the process illustrated in may be performed in response to the installation of the software application. In other embodiments the method illustrated in may be performed at the time a user first attempts to execute the software application. The method illustrated in may also be performed at any other suitable time.

As an example of the process illustrated in when a software application is first installed on a computing device an application monitor may analyze the software application and determine the type of file access declared or required by the software application. As previously noted the analysis may take into account publisher provided meta data such as application manifest data that provides access scoping. The application monitor may translate these declarations into user friendly messages that contain details about the implications of the access scope. For example the access scope may include a critical operating system resource and the application monitor may provide details about the risks associated with allowing the software application to execute and access the operating system resource.

The information about the risks associated with allowing the software application to execute may help a user make more informed decisions about whether to trust the application. In another example a post installation analysis of a media center application may reveal that the software application declares that it only touches files in the user s documents folder. The application monitor may access a database to find information about the documents folder and may provide an alert to the user that states Recently installed mediacenter.exe wants to access your documents folder. This folder contains your financial documents your videos and a sub folder titled work documents. If you do not trust this application you should not allow it to run. 

The application monitor may create an alert by populating an alert template with specific information about a resource from an access scope database. In the previous example the alert template may include the following text Recently installed wants to access . This folder contains . If you do not trust this application you should not allow it to run. The application monitor may populate the template with specific information about a specific application and as shown in the previous example may result in an alert that states Recently installed mediacenter.exe wants to access your documents folder. This folder contains your financial documents your videos and a sub folder titled work documents. If you do not trust this application you should not allow it to run. In other embodiments an access scope database may contain the full text of an alert. In such embodiments the application monitor may display the information from the access scope database without using a template.

Using an application monitor to provide access scope information to users may prompt application publishers to provide more narrow and accurate scoping. For example a publisher may not want end users to see numerous warnings about the access scope of an application and the publisher may limit access scope to help the application appear less risky to end users. Examples of helping publishers and developers create accurate application manifests are provided in U.S. application Ser. No. 12 059 513 filed Mar. 31 2008 and titled Methods and Systems for Providing Application Manifest Information the disclosure of which is incorporated in its entirety by this reference.

The application monitor may query a user about whether to allow the software application to access the resource decision point . The application monitor may deny the software application access to the resource if the response from the user indicates that access to the resource is denied step . On the other hand the application monitor may allow the software application to access the resource if the response from the user indicates that the access to the resource is allowed step .

As an example of the process illustrated in the application monitor may detect that the software application is attempting to access a directory. The application monitor may determine a file type of each file contained in the directory and may discover that one or more of the files in the directory are outside the resource access scope of the software application. The application monitor may lookup information about the files that are outside the resource scope and may report this information to a user. The information about the files may help the user determine whether to allow the software application to access the directory.

As another example when an application makes a request to access a file within a .NET environment in a properly designed .NET application the application requests access to files and paths before actually opening them an application monitor may detect the request and identify information about the file. If the application exceeds its declared scope the application monitor may block access to the file or may provide a user with an alert about the requested access. In other embodiments an application may not declare its access scope or provide any other access scope information. In such situations the application monitor may apply generic access rules or default access rules.

Resource information database may be any suitable database or other storage system for associating resources with resource information. A resource information database may be part of an application monitor or separate from the application monitor. Resource attributes and may be any attribute of a resource such as a file name a file type a directory name a setting of a file or folder or any other attribute of any type of resource. Resource information and may be any information about a resource. For example resource information may be information about the My Documents directory such as The My Documents folder may contain sensitive personal or financial information. 

As previously noted embodiments of the present disclosure may provide many advantages. Application monitors may provide users with information that may help the users determine whether to allow an application to execute or access a resource. Publishers may make an effort to provide more detailed application manifests and narrower scoping so that their applications receive better initial evaluations and provide less warnings to end users applications that do not include application manifests or that request broad resource access may seem less secure . Embodiments of the instant disclosure may also limit a malicious publisher s ability to access sensitive resources because in order to access a sensitive resource the publisher may either request broad access up front or not request broad access and try to access the sensitive resource anyway. Either approach may result in a poor security evaluation of the application and more user interaction which may make the application seem less secure.

Processor generally represents any type or form of processing unit capable of processing data or interpreting and executing instructions. In certain embodiments processor may receive instructions from a software application or module. These instructions may cause processor to perform the functions of one or more of the exemplary embodiments described and or illustrated herein. For example processor may perform and or be a means for performing either alone or in combination with other elements one or more of the determining retrieving providing querying receiving prohibiting permitting allowing installing detecting analyzing denying and or creating steps described herein. Processor may also perform and or be a means for performing any other steps methods or processes described and or illustrated herein.

System memory generally represents any type or form of volatile or non volatile storage device or medium capable of storing data and or other computer readable instructions. Examples of system memory include without limitation random access memory RAM read only memory ROM flash memory or any other suitable memory device. Although not required in certain embodiments computing system may comprise both a volatile memory unit such as for example system memory and a non volatile storage device such as for example primary storage device as described in detail below .

In certain embodiments exemplary computing system may also comprise one or more components or elements in addition to processor and system memory . For example as illustrated in computing system may comprise a memory controller an Input Output I O controller and a communication interface each of which may be interconnected via a communication infrastructure . Communication infrastructure generally represents any type or form of infrastructure capable of facilitating communication between one or more components of a computing device. Examples of communication infrastructure include without limitation a communication bus such as an ISA PCI PCIe or similar bus and a network.

Memory controller generally represents any type or form of device capable of handling memory or data or controlling communication between one or more components of computing system . For example in certain embodiments memory controller may control communication between processor system memory and I O controller via communication infrastructure . In certain embodiments memory controller may perform and or be a means for performing either alone or in combination with other elements one or more of the steps or features described and or illustrated herein such as determining retrieving providing querying receiving prohibiting permitting allowing installing detecting analyzing denying and or creating.

I O controller generally represents any type or form of module capable of coordinating and or controlling the input and output functions of a computing device. For example in certain embodiments I O controller may control or facilitate transfer of data between one or more elements of computing system such as processor system memory communication interface display adapter input interface and storage interface . I O controller may be used for example to perform and or be a means for performing either alone or in combination with other elements one or more of the determining retrieving providing querying receiving prohibiting permitting allowing installing detecting analyzing denying and or creating steps described herein. I O controller may also be used to perform and or be a means for performing other steps and features set forth in the instant disclosure.

Communication interface broadly represents any type or form of communication device or adapter capable of facilitating communication between exemplary computing system and one or more additional devices. For example in certain embodiments communication interface may facilitate communication between computing system and a private or public network comprising additional computing systems. Examples of communication interface include without limitation a wired network interface such as a network interface card a wireless network interface such as a wireless network interface card a modem and any other suitable interface. In at least one embodiment communication interface may provide a direct connection to a remote server via a direct link to a network such as the Internet. Communication interface may also indirectly provide such a connection through for example a local area network such as an Ethernet network a personal area network such as a BLUETOOTH network a telephone or cable network a cellular telephone connection a satellite data connection or any other suitable connection.

In certain embodiments communication interface may also represent a host adapter configured to facilitate communication between computing system and one or more additional network or storage devices via an external bus or communications channel. Examples of host adapters include without limitation SCSI host adapters USB host adapters IEEE 1394 host adapters SATA and eSATA host adapters ATA and PATA host adapters Fibre Channel interface adapters Ethernet adapters or the like. Communication interface may also allow computing system to engage in distributed or remote computing. For example communication interface may receive instructions from a remote device or send instructions to a remote device for execution. In certain embodiments communication interface may perform and or be a means for performing either alone or in combination with other elements one or more of the determining retrieving providing querying receiving prohibiting permitting allowing installing detecting analyzing denying and or creating steps described herein. Communication interface may also be used to perform and or be a means for performing other steps and features set forth in the instant disclosure.

As illustrated in computing system may also comprise at least one display device coupled to communication infrastructure via a display adapter . Display device generally represents any type or form of device capable of visually displaying information forwarded by display adapter . Similarly display adapter generally represents any type or form of device configured to forward graphics text and other data from communication infrastructure or from a frame buffer as known in the art for display on display device .

As illustrated in exemplary computing system may also comprise at least one input device coupled to communication infrastructure via an input interface . Input device generally represents any type or form of input device capable of providing input either computer or human generated to exemplary computing system . Examples of input device include without limitation a keyboard a pointing device a speech recognition device or any other input device. In at least one embodiment input device may perform and or be a means for performing either alone or in combination with other elements one or more of the determining retrieving providing querying receiving prohibiting permitting allowing installing detecting analyzing denying and or creating steps described herein. Input device may also be used to perform and or be a means for performing other steps and features set forth in the instant disclosure.

As illustrated in exemplary computing system may also comprise a primary storage device and a backup storage device coupled to communication infrastructure via a storage interface . Storage devices and generally represent any type or form of storage device or medium capable of storing data and or other computer readable instructions. For example storage devices and may be a magnetic disk drive e.g. a so called hard drive a floppy disk drive a magnetic tape drive an optical disk drive a flash drive or the like. Storage interface generally represents any type or form of interface or device for transferring data between storage devices and and other components of computing system .

In certain embodiments storage devices and may be configured to read from and or write to a removable storage unit configured to store computer software data or other computer readable information. Examples of suitable removable storage units include without limitation a floppy disk a magnetic tape an optical disk a flash memory device or the like. Storage devices and may also comprise other similar structures or devices for allowing computer software data or other computer readable instructions to be loaded into computing system . For example storage devices and may be configured to read and write software data or other computer readable information. Storage devices and may also be a part of computing system or may be a separate device accessed through other interface systems.

In certain embodiments the exemplary file systems disclosed herein may be stored on primary storage device while the exemplary file system backups disclosed herein may be stored on backup storage device . Storage devices and may also be used for example to perform and or be a means for performing either alone or in combination with other elements one or more of the determining retrieving providing querying receiving prohibiting permitting allowing installing detecting analyzing denying and or creating steps described herein. Storage devices and may also be used to perform and or be a means for performing other steps and features set forth in the instant disclosure.

Many other devices or subsystems may be connected to computing system . Conversely all of the components and devices illustrated in need not be present to practice the embodiments descried and or illustrated herein. The devices and subsystems referenced above may also be interconnected in different ways from that shown in . Computing system may also employ any number of software firmware and or hardware configurations. For example one or more of the exemplary embodiments disclosed herein may be encoded as a software application also referred to as computer software software applications computer readable instructions or computer control logic on a computer readable medium. The phrase computer readable medium generally refers to any form of device carrier or medium capable of storing or carrying computer readable instructions. Examples of computer readable media include without limitation transmission type media such as carrier waves and physical media such as magnetic storage media e.g. hard disk drives and floppy disks optical storage media e.g. CD or DVD ROMs electronic storage media e.g. solid state drives and flash media and other distribution systems.

The computer readable medium containing the software application may be loaded into computing system . All or a portion of the software application stored on the computer readable medium may then be stored in system memory and or various portions of storage devices and . When executed by processor a software application loaded into computing system may cause processor to perform and or be a means for performing the functions of one or more of the exemplary embodiments described and or illustrated herein. Additionally or alternatively one or more of the exemplary embodiments described and or illustrated herein may be implemented in firmware and or hardware. For example computing system may be configured as an application specific integrated circuit ASIC adapted to implement one or more of the exemplary embodiments disclosed herein.

As illustrated in one or more storage devices N may be directly attached to server . Similarly one or more storage devices N may be directly attached to server . Storage devices N and storage devices N generally represent any type or form of storage device or medium capable of storing data and or other computer readable instructions. In certain embodiments storage devices N and storage devices N may represent network attached storage NAS devices configured to communicate with servers and using various protocols such as NFS SMB or CIFS.

Servers and may also be connected to a storage area network SAN fabric . SAN fabric generally represents any type or form of computer network or architecture capable of facilitating communication between a plurality of storage devices. SAN fabric may facilitate communication between servers and and a plurality of storage devices N and or an intelligent storage array . SAN fabric may also facilitate via network and servers and communication between client systems and and storage devices N and or intelligent storage array in such a manner that devices N and array appear as locally attached devices to client systems and . As with storage devices N and storage devices N storage devices N and intelligent storage array generally represent any type or form of storage device or medium capable of storing data and or other computer readable instructions.

In certain embodiments and with reference to exemplary computing system of a communication interface such as communication interface in may be used to provide connectivity between each client system and and network . Client systems and may be able to access information on server or using for example a web browser or other client software. Such software may allow client systems and to access data hosted by server server storage devices N storage devices N storage devices N or intelligent storage array . Although depicts the use of a network such as the Internet for exchanging data the embodiments described and or illustrated herein are not limited to the Internet or any particular network based environment.

In at least one embodiment all or a portion of one or more of the exemplary embodiments disclosed herein may be encoded as a software application and loaded onto and executed by server server storage devices N storage devices N storage devices N intelligent storage array or any combination thereof. All or a portion of one or more of the exemplary embodiments disclosed herein may also be encoded as a software application stored in server run by server and distributed to client systems and over network . Accordingly network architecture may perform and or be a means for performing either alone or in combination with other elements one or more of the determining retrieving providing querying receiving prohibiting permitting allowing installing detecting analyzing denying and or creating steps described herein. Network architecture

As detailed above computing system and or one or more of components of network architecture may perform and or be means for performing either alone or in combination with other elements one or more steps of the exemplary computer implemented methods described and or illustrated herein. According to certain embodiments a computer implemented method may comprise determining a resource access scope of a software application determining whether a resource is within the resource access scope retrieving resource information associated with the resource from a resource information database and providing a notification that indicates whether the resource is within the resource access scope. The notification may comprise the resource information.

The computer implemented method in some embodiments may comprise determining that the resource access scope of the software application is performed after the software application is installed on a destination computer and before the software application is allowed to execute. The resource access scope may be declared by the software application and determining whether the resource is within the resource access scope may comprise determining the resource is within the resource access scope.

Some embodiments may comprise querying a user about whether to allow the software application to execute. Providing a notification may comprise querying the user about whether to allow the software application to execute. The method may also comprise receiving a response from a user and prohibiting the software application form executing if the response indicates that the software application is not allowed to execute. If the response indicates that the software application is allowed to execute the method may comprise permitting the software application to execute.

In some embodiments determining whether the resource is within the resource access scope may comprise detecting that the software application is attempting to access a resource. The resource may be outside the resource access scope of the software application.

In some embodiments the method may comprise querying a user about whether to allow the software application to access the resource. Providing the notification may comprise querying the user about whether to allow the software application to access the resource. The method may comprise receiving a response from a user and denying the software application access to the resource if the response indicates that the access to the resource is denied. If the response indicates that the access to the resource is allowed the method may comprise allowing the software application to access the resource. In some embodiments the resource may comprise at least one of a file system a file a folder an application programming interface a network resource and or a communication port.

In various embodiments a computer implemented method for providing resource access information about an application may comprise determining a resource access scope declared by a software application. The computer implemented method may also comprise determining that a resource is within the resource access scope and retrieving information associated with the resource from a resource information database. The method may comprise providing a notification that the resource is within the resource access scope. The notification may comprise the resource information.

In some embodiments the method may comprise querying a user about whether to allow the software application to execute receiving a response from the user and prohibiting or permitting the software application to execute based on the response from the user. In various embodiments determining the resource access scope declared by the software application may comprise determining file permissions declared by an assembly of the software application. In other embodiments determining the resource access scope declared by the software application may comprise analyzing the application manifest of the software application. The application manifest may provide information about the resource access scope of the software application. In at least one embodiment the method may further comprise installing the software application. Determining a resource access scope declared by the software application may be performed in response to installing the software application.

According to certain embodiments a computer implemented method for providing information about resource access of an application may comprise determining a resource access scope of a software application detecting that the software application is attempting to access a resource retrieving resource information associated with a resource from a resource information database and providing a notification that a software application is attempting to access the resource. The resource may be outside the resource access scope of the software application and the notification may comprise the resource information.

In some embodiments determining the resource access scope of the software application may comprise at least one of analyzing an assembly of the software application analyzing meta data of the software application and or selecting default resource access rules. In some embodiments analyzing an assembly of the software application may comprise determining file permissions declared by the assembly. According to at least one embodiment the meta data may comprise an application manifest of the software application. The application manifest may provide information about the resource access scope of the software application.

In some embodiments the notification may comprise an indication that the resource is outside the resource access scope of the software application. The computer implemented method may also comprise querying the user about whether to allow the software application to access the resource receiving a response from the user and denying or allowing access to the resource based on the response from the user.

In some embodiments the method may comprise creating an access rule for the resource based on the response from the user. The access rule may indicate whether the software application is allowed to access the first resource. The method may further comprise detecting that the software application is attempting to access a second resource determining that the access rule applies to the second resource and applying the access rule to the second resource. The access rule may indicate whether the software application is allowed to access resources having a first attribute and the first and second resources may have the first attribute.

In some embodiments detecting that the software application is attempting to access a resource may comprise determining a directory that the software application is attempting to access. Retrieving resource information associated with the resource from a resource information database may comprise determining a file type of a file contained in the directory and determining that the file type of the file is outside of the resource access scope of the software application.

While the foregoing disclosure sets forth various embodiments using specific block diagrams flowcharts and examples each block diagram component flowchart step operation and or component described and or illustrated herein may be implemented individually and or collectively using a wide range of hardware software or firmware or any combination thereof configurations. In addition any disclosure of components contained within other components should be considered exemplary in nature since many other architectures can be implemented to achieve the same functionality.

The process parameters and sequence of steps described and or illustrated herein are given by way of example only and can be varied as desired. For example while the steps illustrated and or described herein may be shown or discussed in a particular order these steps do not necessarily need to be performed in the order illustrated or discussed. The various exemplary methods described and or illustrated herein may also omit one or more of the steps described or illustrated herein or include additional steps in addition to those disclosed.

Furthermore while various embodiments have been described and or illustrated herein in the context of fully functional computing systems one or more of these exemplary embodiments may be distributed as a program product in a variety of forms regardless of the particular type of computer readable media used to actually carry out the distribution. The embodiments disclosed herein may also be implemented using software modules that perform certain tasks. These software modules may include script batch or other executable files that may be stored on a computer readable storage medium or in a computing system. In some embodiments these software modules may configure a computing system to perform one or more of the exemplary embodiments disclosed herein.

The preceding description has been provided to enable others skilled in the art to best utilize various aspects of the exemplary embodiments disclosed herein. This exemplary description is not intended to be exhaustive or to be limited to any precise form disclosed. Many modifications and variations are possible without departing from the spirit and scope of the instant disclosure. The embodiments disclosed herein should be considered in all respects illustrative and not restrictive. Reference should be made to the appended claims and their equivalents in determining the scope of the instant disclosure.

Unless otherwise noted the terms a or an as used in the specification and claims are to be construed as meaning at least one of. In addition for ease of use the words including and having as used in the specification and claims are interchangeable with and have the same meaning as the word comprising. 

