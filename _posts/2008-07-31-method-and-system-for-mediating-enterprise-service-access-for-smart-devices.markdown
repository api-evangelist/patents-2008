---

title: Method and system for mediating enterprise service access for smart devices
abstract: Techniques are described for mediating enterprise service access for smart devices. A first message may be received at an enterprise service proxy device from a smart device via a first protocol associated with the smart device. It may be determined that the first message includes a smart device request for processing via an enterprise service located at a backend device. An enterprise service request and an associated enterprise request protocol may be determined based on the smart device request and a service adaptation description associated with the enterprise service and the first protocol. The enterprise service request may be sent to the backend device via the associated enterprise request protocol.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08560713&OS=08560713&RS=08560713
owner: SAP AG
number: 08560713
owner_city: Walldorf
owner_country: DE
publication_date: 20080731
---
With the growth of activity involving smart devices which are interconnected through networks such as the Internet many techniques are being developed for executing processes such as business processes. Although client server architectures continue to play an important role for example in the field of business software systems Service Oriented Architectures SOAs are becoming increasingly more popular. The integration of devices into a business landscape through SOA is an example approach for digitalizing physical objects and for making them available to systems for example by running instances of web services on these devices.

Enterprise backend devices such as enterprise backend servers may provide access to enterprise services which may include for example web services that may provide services that may be desirable for low level smart devices such as devices on a shop floor or devices associated with an energy distribution domain.

However smart devices included in a device level in many architectures may have limited processing capabilities and thus it may be difficult for the smart devices to access and utilize enterprise services for example available on backend devices such as backend servers. For example the enterprise services may include complex web services that may be accessed via standardized protocols that may be different from the communication protocols utilized by the smart devices in their respective typical communications. Thus it may be desirable to provide techniques for mediating enterprise service access for smart devices.

According to one general aspect a system includes an enterprise service access mediator including an enterprise service proxy device that includes a virtual proxy device and a service adaptor. The virtual proxy device may include a mediating receiver configured to receive a first message from a smart device via a first protocol associated with the smart device a parser configured to determine that the first message includes a smart device request for processing via an enterprise service located at a backend device and a mediating converter configured to determine an enterprise service request and an associated enterprise request protocol based on the smart device request and a service adaptation description associated with the enterprise service and the first protocol. The service adaptor may be configured to send the enterprise service request to the backend device via the associated enterprise request protocol.

According to another aspect a method includes receiving a first message at an enterprise service proxy device from a smart device via a first protocol associated with the smart device. It may be determined that the first message includes a smart device request for processing via an enterprise service located at a backend device. An enterprise service request and an associated enterprise request protocol may be determined based on the smart device request and a service adaptation description associated with the enterprise service and the first protocol. The enterprise service request may be sent to the backend device via the associated enterprise request protocol.

According to yet another aspect a computer program product is tangibly embodied on a computer readable medium and is configured to cause a data processing apparatus to receive a first message at an enterprise service proxy device from a smart device via a first protocol associated with the smart device determine that the first message includes a smart device request for processing via an enterprise service located at a backend device determine an enterprise service request and an associated enterprise request protocol based on the smart device request and a service adaptation description associated with the enterprise service and the first protocol and send the enterprise service request to the backend device via the associated enterprise request protocol.

The details of one or more implementations are set forth in the accompanying drawings and the description below. Other features will be apparent from the description and drawings and from the claims.

According to an example embodiment each smart device may include a device with communication capabilities. In this context a smart device includes any physical object that has an embedded or attached system having one or more storage resources such as memory e.g. volatile RAM persistent ROM a pattern of randomly distributed metal fibers etc. and at least one communication resource e.g. a serial link a Universal Serial Bus USB connection Ethernet or IP connectivity a Bluetooth or an IEEE 802.15.4 radio or other communication means . With such resources the smart device may communicate with other smart devices and other systems that may feature the same or similar communication techniques. In addition to these resources a smart device may include one or more sensors actuators displays or other facilities to monitor or affect its internal state or its environment. The smart device may further include computational resources e.g. a microprocessor hard wired logic a signal processor etc. .

Examples of smart devices may include radio frequency identification RFID tagged items RFID readers production machines smart power meters wireless sensor nodes programmable logic controllers telephones vehicles robots mobile phones etc.

According to an example embodiment each of the smart devices may include one or more of an embedded device a radio frequency identification RFID reader an RFID tagged item a smart items device a device within a sensor network a sensor mote a product embedded information device a shop floor device a personal digital assistant PDA a personal computer a portable computer a wireless telephone a power regulation device a monitoring device a production machine a smart power meter a wireless sensor node a programmable logic controller a telephone a vehicle a robot a mobile phone or a product control device. According to an example embodiment each smart device may include a smart device having a capability to connect to a gateway.

As an example scenario a business may wish to track goods via RFID. For example as part of business operations produced goods may arrive in a warehouse. Cartons which contain the goods may be tagged via RFID. Upon entering the warehouse the RFID tags may be read for example by handheld terminals operated by personnel associated with transporting the goods. The read tag information may then be sent to an adaptation processor which may match the tag ID and the receipt information. Details of the receipt may be obtained based on this information such as a description of goods quantity and inventory details and other parameters which may be sent to the backend device for processing.

As shown in the devices and may be associated with a common device type which is shown in as a device type . Similarly the devices and may be associated with another common device type which is shown in as a device type . For example each of the devices may be configured to communicate with other entities for example with other devices via a particular protocol. For example the communication protocol may include a proprietary protocol or it may include a standardized protocol. For example the devices and may be configured to communicate via a first type of communication protocol associated with the device type and the devices and may be configured to configured to communicate via a second type of communication protocol associated with the device type .

The enterprise software systems may include one or more enterprise services not shown which may be accessed to perform various processing requests and which may return a result of the processing for a requester associated with the processing request. For example the enterprise services may be configured to perform processing that is not easily obtained locally to one or more of the devices and thus it may be desirable for one or more of the devices to access one or more of the enterprise services to obtain such processing.

For example the backend device may include a backend server which may include enterprise services that may be accessible to entities located externally to the backend server. For example the backend device may include a single hardware device or may include a plurality of hardware devices. For example the backend device may include a single backend server or may include a plurality of backend servers. For example the backend device may include a single backend server configured to execute one or more enterprise services or may include a plurality of backend servers configured to execute enterprise services. For example the backend device may include functionality that may be distributed over a plurality of hardware devices. For example the backend device may include one or more distributed systems that are distributed over a plurality of hardware devices communicating via one or more networks and or local connections. For example the enterprise services may be accessible via one or more interfaces and . For example the interface may be configured to receive send messages via a web service interface the interface may be configured to receive send messages via a Business Application Programming Interface BAPI and the interface may be configured to receive send messages via a Remote Function Call RFC interface. Further the system may include a security policy enforcer that may be configured to enforce predetermined rules associated with access to the enterprise services.

One skilled in the art of data processing will appreciate that there may be many types of enterprise services that may be configured to process many types of requests and that some types of processing may not return a result of the processing to an entity located externally to the backend device while other types of processing may return a result to one or more entities which may be located externally and or internally to the backend device and which may or may not include an originating requester associated with the processing request.

Further one skilled in the art of data processing will appreciate that various embodiments discussed herein may be combined to advantageously provide additional techniques within the spirit of the present discussion.

The enterprise service access mediator may include an enterprise service proxy device including a service adaptor and one or more virtual proxy devices . According to an example embodiment each of the virtual proxy devices may include an emulation of one of the smart devices communicating with other smart devices via the first protocol wherein the first protocol may include a proprietary protocol. Each of the virtual proxy devices may respectively include one or more service view engines . Each of the service view engines may respectively include a mediating receiver a parser and a mediating converter 

Each mediating receiver may be configured to receive a first message from a smart device via a first protocol associated with the smart device. For example the mediating receiver may receive a message from the smart device via a proprietary protocol associated with the device type . For example the smart device may be located on a shop floor and may request access to an enterprise service located on the backend device via the proprietary protocol associated with the device type . According to an example embodiment the mediating receiver may be configured to communicate with the smart device via the proprietary protocol associated with the device type such that the smart device is not aware that one or more different protocols may be used by the enterprise service proxy device for communications with entities other than the smart device e.g. the smart device may be unaware that the enterprise service proxy device may not be a smart device similar to itself . Thus the smart device may not need to perform extensive processing activity as may be otherwise required to communicate directly with the backend device for requesting access to one or more enterprise services.

Each parser may be configured to determine that the first message includes a smart device request for processing via an enterprise service located at a backend device. For example the parser may parse a message received from the smart device to determine that the message includes a request for processing via an enterprise service located at the backend device . For example the request may be formatted in accordance with the protocol associated with the device type and may include a request for an enterprise service that may be accessed at the backend device via a different protocol e.g. via a web service interface a BAPI or an RFC interface as discussed above .

According to an example embodiment the enterprise service access mediator may include a service adaptation repository that may be configured to store at least one service adaptation description . According to an example embodiment each of the service adaptation descriptions may include information describing enterprise services associated with the backend device. According to an example embodiment each of the service adaptation descriptions may include information associated with conversion between messages associated with the first protocol and messages associated with one or more of the enterprise services.

Each mediating converter may be configured to determine an enterprise service request and an associated enterprise request protocol based on the smart device request and a service adaptation description associated with the enterprise service and the first protocol. For example the mediating converter may determine an enterprise service request and an associated enterprise request protocol e.g. a web service protocol based on the smart device request determined by the parser and on a service adaptation description that may be stored in the service adaptation repository . According to an example embodiment each mediating converter may be configured to determine the enterprise service request based on translating the smart device request to obtain the enterprise service request based on a mapping included in the service adaptation description associated with the enterprise service and the first protocol. According to an example embodiment the mapping may include an eXtensible Markup Language XML mapping that includes an indication of a first term associated with the smart device request and an indication of a second term associated with the enterprise service request via translation from the smart device request to the enterprise service request.

According to an example embodiment each mediating converter may be configured to determine the enterprise service request based on obtaining at least one parameter associated with the enterprise service request based on the service adaptation description associated with the enterprise service and the first protocol. For example an enterprise service may be configured to require one or more parameters for satisfaction of a call to the enterprise service. For example the enterprise service may be configured to process parameters formatted in accordance with a predetermined format e.g. integer format floating point format character format special character format access format security constraints . According to an example embodiment one or more of the service adaptation descriptions may include information associated with one or more parameters that may be included in an enterprise service request before transmission to the backend device e.g. via one of the interfaces or as discussed above . According to an example embodiment each mediating converter may be configured to send the enterprise service request to the service adaptor in accordance with a protocol associated with the service adaptor .

According to an example embodiment the service adaptor may be configured to send the enterprise service request to the backend device via the associated enterprise request protocol. According to an example embodiment the service adaptor may be configured to request verification of a permission to access the enterprise service based on the service adaptation description associated with the enterprise service and the first protocol. For example the service adaptor may be configured to request verification of the permission to access the enterprise service via the security policy enforcer .

According to an example embodiment the service adaptor may be configured to generate the virtual proxy devices based on the protocols associated with the smart devices and the service adaptation descriptions . According to an example embodiment the service adaptor may be configured to generate the service view engines . According to an example embodiment the service adaptor may be configured to obtain one or more protocol conversion rules based on one of the service adaptation descriptions and to compile the virtual proxy device and a service view engine including the mediating receiver parser and mediating converter based on the more protocol conversion rules and the one service adaptation description .

According to an example embodiment the service adaptor may be configured to receive a response message from the backend device via the enterprise request protocol. According to an example embodiment the service adaptor may be configured to determine a virtual proxy device for processing the response message and forwarding the response message to the appropriate smart device . According to an example embodiment each virtual proxy device may be configured to determine the service view engine to handle forwarding the response message to the appropriate smart device . According to an example embodiment each service view engine may be configured to determine a smart device response based on the response message and the service adaptation description. For example each parser may be configured to parse the response message to determine the smart device response. According to an example embodiment each service view engine may be configured to send a second message including the smart device response from the enterprise service proxy device to the smart device via the first protocol.

According to an example embodiment the system may include an enterprise service description repository that may be configured to store one or more enterprise service descriptions . According to an example embodiment each of the enterprise service descriptions may include information associated with accessing the enterprise services associated with the backend device e.g. access protocol parameters description of service .

According to an example embodiment the enterprise service access mediator may include a description manager . According to an example embodiment the system may include an enterprise service description repository that may be configured to store one or more enterprise service descriptions . According to an example embodiment each of the enterprise service descriptions may include information describing enterprise services associated with the backend device . According to an example embodiment each of the enterprise service descriptions may include information associated with accessing the enterprise services associated with the backend device e.g. access protocol parameters description of service .

According to an example embodiment the description manager may be configured to generate the one or more service adaptation descriptions based on one or more of the enterprise service descriptions . According to an example embodiment a user may provide input to the description manager with regard to the mappings between the information included in enterprise service descriptions and information associated with the protocols associated with the smart devices . According to an example embodiment such mappings may be included in the service adaptation descriptions stored in the service adaptation repository .

According to an example embodiment the service adaptation descriptions may include mapping information for every hardware platform that is available in the system . Thus for every available hardware platform associated with the system a mapping may be specified for a service that is understood by a device operating via that platform and may map that service to whatever protocol is associated with an enterprise application.

According to an example embodiment certain parameters may be configured by the enterprise service proxy device to access backend enterprise services as for example smart devices may not include a capability to provide access credentials to access backend enterprise service systems. According to an example embodiment the enterprise service proxy device may map service parameters from the device or smart device level to the enterprise level. Thus the service adaptation descriptions may provide a formalization of mappings from one level to the other e.g. a mapping of each word to another word in the translation .

According to an example embodiment each virtual proxy device may include a respective service announcement engine that may be configured to send a message to the smart devices indicating an availability of at least one enterprise service for mediated access by the smart device. For example if availability to an enterprise service is newly added to the virtual proxy device then the service announcement engine may send an announcement to the smart devices to inform them that the newly added enterprise service may be accessed by the smart devices via messages sent to the virtual proxy device . According to an example embodiment the announcement may include information for use by the smart devices to generate requests for the newly added enterprise service via the virtual proxy device

According to an example embodiment a web service may include a software system designed to support interoperable machine to machine interaction over a network. For example a web service may include a Web Application Programming Interface API that may be accessed over a network such as the Internet and executed on a remote system hosting the requested service s . Smart devices such as one or more of the devices may be configured to handle web services among themselves but the processing may become burdensome when extensive processing may be needed for a particular processing need. Enterprise services that may be hosted via a backend server may offer availability of a variety of services and may be accessed via protocols that may include standardized protocols however smart devices may be configured to communicate via proprietary protocols or via protocols that may be different from the protocols used for accessing particular enterprise services. The smart device may need to perform substantial processing to communicate directly with a backend server to access such enterprise services. Further there may be security constraints imposed by the backend server on requests for enterprise service processing by external entities. Thus the smart device may need to perform additional processing in order to clear security enforcers associated with the backend server. For example the backend server may provide only limited access to particular enterprise services.

The example enterprise service access mediator discussed herein may provide access to backend enterprise services for smart devices without requiring the smart devices to generate requests for enterprise services formatted in accordance with the particular protocol that may be associated with the enterprise services. For example the smart devices may communicate with the virtual proxy devices via default parameters associated with the communication protocol used by the smart devices in communications with other smart devices. Thus access to protocols of backend enterprise services is simplified for the smart devices as no conversion is required of the smart device itself in order to access the enterprise services. According to an example embodiment such access may provide a means of bringing down the functionality of a backend system to the device level e.g. on a shop floor mobile devices in a form that is easily understood by the devices or smart devices.

Further the example enterprise service access mediator discussed herein may provide a communication means for returning result information or other information from the backend device to the smart device alleviating the need for the enterprise services or the backend device to format the information in accordance with the protocol associated with the smart device.

At it may be determined that the first message may include a smart device request for processing via an enterprise service located at a backend device. For example the parser may parse a message received from the smart device to determine that the message includes a request for processing via an enterprise service located at the backend device as discussed above.

According to an example embodiment determining that the first message includes a smart device request may include parsing the first message at the enterprise service proxy device to obtain the smart device request for processing via the enterprise service located at the backend server.

At an enterprise service request and an associated enterprise request protocol may be determined based on the smart device request and a service adaptation description associated with the enterprise service and the first protocol. For example the mediating converter may determine an enterprise service request and an associated enterprise request protocol e.g. a web service protocol based on the smart device request determined by the parser and on a service adaptation description that may be stored in the service adaptation repository as discussed above.

According to an example embodiment determining the enterprise service request may include translating the smart device request to obtain the enterprise service request based on a mapping included in the service adaptation description associated with the enterprise service and the first protocol.

According to an example embodiment determining the enterprise service request may include translating the smart device request to obtain the enterprise service request based on an eXtensible Markup Language XML mapping included in the service adaptation description associated with the enterprise service and the first protocol wherein the XML mapping may include an indication of a first term associated with the smart device request and an indication of a second term associated with the enterprise service request via translation from the smart device request to the enterprise service request.

According to an example embodiment determining the enterprise service request may include obtaining at least one parameter associated with the enterprise service request based on the service adaptation description associated with the enterprise service and the first protocol.

At the enterprise service request may be sent to the backend device via the associated enterprise request protocol. According to an example embodiment the service adaptor may be configured to send the enterprise service request to the backend device via the associated enterprise request protocol as discussed above. According to an example embodiment sending the enterprise service request to the backend device via the associated enterprise request protocol may include verifying a permission to access the enterprise service based on the service adaptation description associated with the enterprise service and the first protocol. According to an example embodiment the service adaptor may be configured to verify the permission to access the enterprise service via the security policy enforcer as discussed above.

According to an example embodiment sending the enterprise service request may include sending the enterprise service request to a backend device interface based on the associated enterprise request protocol. According to an example embodiment the associated enterprise request protocol may include one or more of a web service interface a Business Application Programming Interface BAPI or a Remote Function Call RFC interface.

According to an example embodiment sending the enterprise service request may include requesting verification of a permission to access the enterprise service based on the service adaptation description associated with the enterprise service and the first protocol. For example the service adaptor may request verification of a permission via the security policy enforcer as discussed above.

According to an example embodiment the method may further include receiving a response message from the backend device via the enterprise request protocol. According to an example embodiment the method may further include determining a smart device response based on the response message and the service adaptation description. According to an example embodiment the method may further include sending a second message including the smart device response from the enterprise service proxy device to the smart device via the first protocol.

According to an example embodiment the enterprise service proxy may provide access to enterprise services to shop floor devices e.g. devices via the Devices Profile for Web Services DPWS standard. According to an example embodiment the enterprise service proxy may provide the access to enterprise services not only to DPWS enabled devices but also to devices associated with heterogeneous hardware platforms.

According to an example embodiment the logical virtual device may be provided to enable the use of enterprise services by these devices as many shop floor devices have an ability to communicate only with other devices that communicate via the same protocol as the shop floor device.

Therefore the example enterprise service proxy may be configured to handle a multitude of protocols that may be available for example in an industrial environment. The protocols may also restrict access that a set of devices may have to certain services. Hence the example enterprise service proxy may be configured to provide 

Thus as shown in similarly as discussed above the enterprise service proxy may provide a logical virtual link between the device layer and the enterprise services available via the enterprise backend .

According to an example embodiment the enterprise software systems may be located on the backend device and may provide services which may be accessed for example via industry standard communication protocols such as RFCs BAPIs and web services . According to an example embodiment the enterprise service repository may be located at the backend device and may include information associated with accessing available enterprise services.

According to an example embodiment the service adaption descriptions may be created to provide access to enterprise services by smart devices. According to an example embodiment the service adaption descriptions may be created via a management tool e.g. management application similar to the description manager which may be configured to access the enterprise service repository to retrieve service information. The service adaptation descriptions generated with this tool may include information for use in generating a presentation of the enterprise service to low level devices. According to an example embodiment the information may include 

According to an example embodiment based on the information provided by the service adaptation descriptions the service adaptor component may create the service views inside the proxy virtual devices respectively. According to an example embodiment for each device type one service view template may be provided e.g. as program source code and may be included in the service adaptation descriptions for use by the service adaptor in generating the service views . Thus representations of the backend services may be provided via the enterprise service proxy device . According to an example embodiment the proxy virtual devices may be generated and revised dynamically.

According to an example embodiment the generated service views may be configured to perform conversions between proprietary protocols and a protocol supported by the service adaptor .

According to an example embodiment when devices request access to certain enterprise services the request may be parsed by one or more of the service views and forwarded to the service adaptor . According to an example embodiment the service adaptor may then request verification of the access rules e.g. via the security policy enforcement device and forward the request to the appropriate enterprise service e.g. via a protocol or .

According to an example embodiment if one or more of the device types supports a discovery mechanism the service announcement may be provided for each virtual device. According to an example embodiment the service announcement may announce the available services to shop floor devices for example during a discovery phase.

According to an example embodiment the service adaptor may extract the protocol conversion rules specified in a service adaptation description and compile a service view and a virtual device if not yet present . According to an example embodiment service views may be generated based on pre existing stubs that connect backend protocols with parser classes. These classes may be generated during compilation time and may generate the mapping rules as defined in the service adaptation descriptions . Additionally based on the service adaptation description a mediating receiver may also be generated to provide communication with smart devices.

According to an example embodiment the virtual device may be deployed to a platform such as Open Services Gateway initiative OSGi which provides remote management of Java based services. Virtual devices based on OSGi techniques may be created and removed according to an application s needs. According to an example embodiment service views may also be deployed to OSGi containers when they are generated in the form of bundles.

According to an example embodiment all service views may be deployed to an OSGi bundle including the service announcement . Such service views may generate messages to inform the smart devices that backend services are available for their use. The format of these messages may vary according to the low level protocol used by the smart devices . For example WS Discovery is a protocol that may provide a service announcement feature and that may be used by Devices Profile for Web Services DPWS enabled devices. Other example protocols that may provide such an announcement feature include Universal Plug and Play UPnP and Bonjour. According to an example embodiment if the low level protocol does not support announcement of services this service may not be deployed to the virtual device .

As shown in the example serviceAdaptationDescription element may include elements version virtualDevices and conversionRules . The current version associated with the serviceAdaptationDescription element may include elements for a value and a compatibility . According to an example embodiment a service adaptation description may be associated with one virtual device which may be associated with a set of attributes such as its device identifier and its device type as shown in . The device type may be associated with a low level communication protocol e.g. virtual com port DPWS device Representational state transfer REST web service etc. associated with the virtual device .

As shown in the example element serviceAdaptationDescription may include 0 . . . n conversion rules wherein each rule may be associated with an operation of the underlying service. According to an example embodiment each conversion rule may be associated with a target enterprise service a target service operation a virtual device ID 0 . . . n parameter mapping rules an access policy and error compensation strategies .

According to an example embodiment the target enterprise service of the service adaptation serviceAdaptationDescription may include a service ID which may for example be associated with a service stored in an enterprise service repository for example associated with an ERP system. For example the target service operation may include an operation ID that may be used to select a specific operation of a specified service.

According to an example embodiment the virtual device ID may indicate the virtual device that will host the adapted version of the service.

According to an example embodiment the access policy may indicate potential allowed uses by devices of the respective enterprise service which may for example include a level of authentication as well as a level of encryption .

According to an example embodiment the error compensation strategies may include one or more indicators of which low level activities may be triggered based on error messages coming from the backend after invoking a service.

According to an example embodiment for each parameter of the respective backend service there may be associated one parameter mapping rule which may include a parameter ID and a mapping strategy . For example the mapping strategy may include one or more default values and local formulas wherein the parameters may be omitted in the parameter list presented to the device. For example if a default value is indicated the parameter may be omitted in the parameter list presented to the device and a default value may be sent to the backend device . For example if a local formula is indicated the parameter may be omitted in the parameter list presented to the device and it may be replaced by a formula or equation indicating a calculation of the value of the parameter based on other parameter values sent from the device e.g. 2 p p wherein p and p include parameter IDs .

According to an example embodiment a remote formula may indicate a calculation of the value of the parameter based on both local parameter names and remote services e.g. based on calls to a web service . According to an example embodiment a direct mappings element may indicate a target parameter name to which a device level parameter name is mapped.

For example an enterprise service may compare data associated with a goods receipt sent from an RFID gate with a shipment notification received in the backend e.g. ERP device in order to ensure a correct delivery of goods. For example the enterprise service may be configured to accept Electronic Product Codes EPCS of the received goods an identifier associated with the RFID reader that read the tags of the goods the shipment number and a timestamp as input parameters.

As shown in the example XML file indicates a conversion rule for a specific operation compareEPCwithShipment of the enterprise service GoodsReceipt which is associated with a virtual DPWS device associated with a device ID 10.24.98.103 . Respective example parameter mapping rules are associated with each of the four parameters discussed above. For example a parameter mapping rule indicates a direct mapping between an EPC of a received good and an EPC enterprise parameter of the compareEPCwithShipment operation . The same direct mapping is indicated as being established by a parameter mapping rule between a ReaderID and a ReaderID enterprise parameter. With regard to the timestamp a parameter mapping rule indicates a default value e.g. the current date may be transmitted. In order to obtain the input parameter shipment number a parameter mapping rule indicates an invocation of a remoteFormula as the information may not be locally available to the device.

Based on the goods receipt example the following discussion focuses on interactions of various components of the example system for providing an invocation of an enterprise service from a smart device. Information regarding the enterprise service GoodsReceipt and its operation compareEPCwithShipment discussed above may first be stored in the enterprise service description repository as part of an enterprise service description . This description may also include one or more indications of any parameters associated with invoking the operation. The service adaptation description discussed above may be generated based on the description of the compareEPCwithShipment operation stored in the enterprise service description repository .

According to an example application scenario a virtual DPWS device may encapsulate the enterprise operation compareEPCwithShipment . Thus the service adaptor may for example generate a service view based on the operation compareEPCwithShipment as part of a virtual device for the device type DPWS. The service view may include a parser a mediating converter and a mediating receiver . Since DPWS also supports a discovery mechanism i.e. WS Discovery a service announcement engine may be generated as well.

If an RFID reader wishes to invoke the backend operation compareEPCwithShipment the RFID reader may first discover the operation based on the service announcement and may then invoke the service similarly to invoking any other device level service on the virtual device . The mediating receiver associated with the virtual device may receive the invocation of compareEPCwithShipment via the DPWS specific protocol. The parser associated with the virtual device may then parse the compareEPCwithShipment operation to verify that it refers to a valid enterprise service. The mediating converter may then map the device level service invocation to the enterprise level operation compareEPCwithShipment associated with the enterprise service GoodsReceipt based on the service adaptation description and its conversion rules.

According to an example embodiment a shop floor may include a base of devices operating in an automated domain. According to an example embodiment embedded devices may include smart devices and or smart items.

The example techniques described herein may be implemented in a variety of settings. For example the techniques may be used in an automation domain or in an energy distribution domain.

For example in an automation domain a robotic arm may be provided with one or more smart devices. The robotic arm may be controlled and or monitored via smart devices accessing enterprise services via a backend server. A temperature sensor may also be monitoring an environment close to the robotic arm. It may be desirable for enterprise services to detect an unacceptable high temperature and control the shutdown of the robotic arm.

For example in an energy distribution domain a usage of electricity may be monitored at a backend server via smart devices operating in individual households. If the backend server determines that the usage has risen to a level that may predict an impending blackout the backend server may control shutting down various household appliances to avoid the blackout. As another example the backend server may determine that various household appliances may be activated or de activated at certain times e.g. to obtain an optimal rate during certain hours of the day to optimize energy usage when a homeowner is gone on vacation etc. .

As another example fusion deposition modeling FDM is a technique which may be used for performing Rapid Prototyping RP for example in production industries. For example a car manufacturer may extend FDM into other areas and functions such as direct digital manufacturing in which machines may have a large bandwidth in the types of products manufactured. These products may vary in shape size material and techniques for production e.g. heating milling drilling etc which may all be executed on one multipurpose machine. Such multi purpose production machines may not have a standard associated with the information they need for executing the techniques for production. For example input may vary depending on the type of product being produced. For example web services may be deployed on these machines to obtain the product details from different sources. Such web service may use middleware as discussed above which may organize the services between the design platform and the execution environment.

As another example automation machines operating on a shop floor may include a variety of electronics which control the process and execution of production on the electromechanical components of the machines. These electronics may be resource constrained and thus may not be able to accommodate certain features such as diagnostic algorithms for the whole set of operations that may need substantially more resources e.g. computational resources memory etc . For example the sequence of production may change for another product to be produced on the same machine which may make it desirable to alter these diagnostic algorithms as well. By using the example techniques discussed herein the diagnostic routines may be stored remotely and the machines may run the diagnosis periodically. Thus the diagnostic algorithms may be updated on the back end machines e.g. the backend device . For example two similar machines may need different algorithms e.g. two robotic arms or two different machines may need the same algorithms e.g. a conveyor controller and a fork lifter may need algorithms to determine the temperature and speed of motors . For example web services may aid in maintaining atomicity for orchestrating which algorithm to run on which machine. The example middleware architecture discussed herein may provide an orchestration of web services for the diagnostic routines and the machines on the shop floor. Further the example middleware architecture discussed herein may also be used to integrate Enterprise Resource Planning ERP systems to place an order or alert personnel to a potentially defective spare part and may also enhance predictive maintenance.

Implementations of the various techniques described herein may be implemented in digital electronic circuitry or in computer hardware firmware software or in combinations of them. Implementations may implemented as a computer program product i.e. a computer program tangibly embodied in an information carrier e.g. in a machine readable storage device or in a propagated signal for execution by or to control the operation of data processing apparatus e.g. a programmable processor a computer or multiple computers. A computer program such as the computer program s described above can be written in any form of programming language including compiled or interpreted languages and can be deployed in any form including as a stand alone program or as a module component subroutine or other unit suitable for use in a computing environment. A computer program can be deployed to be executed on one computer or on multiple computers at one site or distributed across multiple sites and interconnected by a communication network.

Method steps may be performed by one or more programmable processors executing a computer program to perform functions by operating on input data and generating output. Method steps also may be performed by and an apparatus may be implemented as special purpose logic circuitry e.g. an FPGA field programmable gate array or an ASIC application specific integrated circuit .

Processors suitable for the execution of a computer program include by way of example both general and special purpose microprocessors and any one or more processors of any kind of digital computer. Generally a processor will receive instructions and data from a read only memory or a random access memory or both. Elements of a computer may include at least one processor for executing instructions and one or more memory devices for storing instructions and data. Generally a computer also may include or be operatively coupled to receive data from or transfer data to or both one or more mass storage devices for storing data e.g. magnetic magneto optical disks or optical disks. Information carriers suitable for embodying computer program instructions and data include all forms of non volatile memory including by way of example semiconductor memory devices e.g. EPROM EEPROM and flash memory devices magnetic disks e.g. internal hard disks or removable disks magneto optical disks and CD ROM and DVD ROM disks. The processor and the memory may be supplemented by or incorporated in special purpose logic circuitry.

To provide for interaction with a user implementations may be implemented on a computer having a display device e.g. a cathode ray tube CRT or liquid crystal display LCD monitor for displaying information to the user and a keyboard and a pointing device e.g. a mouse or a trackball by which the user can provide input to the computer. Other kinds of devices can be used to provide for interaction with a user as well for example feedback provided to the user can be any form of sensory feedback e.g. visual feedback auditory feedback or tactile feedback and input from the user can be received in any form including acoustic speech or tactile input.

Implementations may be implemented in a computing system that includes a back end component e.g. as a data server or that includes a middleware component e.g. an application server or that includes a front end component e.g. a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation or any combination of such back end middleware or front end components. Components may be interconnected by any form or medium of digital data communication e.g. a communication network. Examples of communication networks include a local area network LAN and a wide area network WAN e.g. the Internet.

While certain features of the described implementations have been illustrated as described herein many modifications substitutions changes and equivalents will now occur to those skilled in the art. It is therefore to be understood that the appended claims are intended to cover all such modifications and changes as fall within the true spirit of the embodiments.

