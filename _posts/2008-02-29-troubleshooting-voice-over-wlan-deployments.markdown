---

title: Troubleshooting voice over WLAN deployments
abstract: A voice over WLAN diagnostic system. In particular implementations, a method includes simulating, in response to a triggering event, Voice over Internet Protocol (VoIP) communications with a remote diagnostics engine; gathering metric data characterizing one or more aspects of the simulated VoIP communications; and periodically transmitting diagnostic packets including the metric data to the remote diagnostics engine; wherein the simulating VoIP communications comprises transmitting diagnostic protocol packets that simulate VoIP communications to the remote diagnostic engine; and intercepting diagnostic protocol packets received from the diagnostics engine.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07948905&OS=07948905&RS=07948905
owner: Cisco Technologies, Inc.
number: 07948905
owner_city: San Jose
owner_country: US
publication_date: 20080229
---
Market adoption of wireless LAN WLAN technology has exploded as users from a wide range of backgrounds and vertical industries have brought this technology into their homes offices and increasingly into the public air space. This inflection point has highlighted not only the limitations of earlier generation systems but also the changing role that WLAN technology now plays in people s work and lifestyles across the globe. Indeed WLANs are rapidly changing from convenience networks to business critical networks. Increasingly users are depending on WLANs to improve the timeliness and productivity of their communications and applications and in doing so require greater visibility security management and performance from their networks.

In Voice over Internet Protocol VoIP systems and in particular VoIP over WLAN systems there are many points in the network that can cause audio and quality of service impairments to the end users. For example congestion or interference associated with the WLAN or congestion on a WAN connection may degrade network through put and hence VoIP performance. Also there may be networking equipment or wireless clients that are misconfigured or have latent bugs which impair the quality of service provided to real time protocol streams. There may be coverage holes in areas of the network. For VoIP over WLAN calls there is the added complexity which arises from user mobility. Since users may often roam between several wireless access points during the course of a call a quality of service issue may arise when a wireless client roams from one wireless access point to another. Also poor quality of service may be caused by interference e.g. a microwave oven that is near only one of the wireless access points used during a call. In this situation a network administrator when attempting to diagnose the problem may not recognize that the quality of service QoS issue only happens in certain areas of the building. Furthermore that the problem appears to the end user as intermittent may render it difficult for a network administrator to determine the root cause of an end user s complaint such as if the root cause is associated with the wireless client or with the VoIP network.

Particular implementations facilitate diagnosis of VoIP problems in WLANs. According to particular implementations the present invention enables a voice client troubleshooting agent VCTA of a wireless client to simulate VoIP calls with a voice diagnostics engine VDE during a diagnostic session. During a given diagnostic session the VCTA simulates a VoIP call by making a virtual or silent call to the VDE and sending diagnostic information to the VDE to facilitate the VDE in diagnosing problems. The VDE may also send the diagnostic information to a network administrator to assist the network administrator in diagnosing problems. In particular implementations the diagnostic session may be triggered according to one more rule sets that the VDE pushes to the VCTA. A given rule set may for example cause the VCTA to initiate a virtual call during a particular time or when the respective wireless client enters or leaves a particular area or associates with a particular wireless access point. As described in more detail below in one implementation the virtual call involves two phases. In one implementation one phase may involve an exchange of Session Initiation Protocol SIP packets between the VCTA and the VDE. In one implementation another phase may involve an exchange of Real Time Protocol RTP packets between the VCTA and the VDE. In both phases the SIP and RTP packets may be Inter Access Point Protocol IAPP packets which enable the virtual call to take place without the user being aware of the call. As described in more detail below the diagnostic information includes various metrics e.g. jitter data delay data packet loss data etc. that enable the VDE to provide diagnostic information to a system that is configured to diagnose problems or to facilitate a network administrator in diagnosing problems.

As illustrates these network elements are operably connected to a network . Network in one implementation generally refers to a computer network such as a LAN a WAN etc. that includes one or more intermediate network devices e.g. routers switches etc. which allow for the transmission of messages between WLAN management server and wireless clients via wireless access points . Of course network can include a variety of network segments transmission technologies and components such as terrestrial WAN links satellite links optical fiber links and cellular links. Network could also be a campus LAN. LAN may be a LAN LAN segments implemented by an Ethernet switch not shown or an array of switches having multiple ports to which wireless access points are connected. The wireless access points are typically connected to switch ports via Ethernet links however other link layer connection protocols or communication means can be employed. illustrates one possible network environment in which the invention may operate however other implementations are possible. For example although WLAN management server is illustrated as being on a different LAN or LAN segment it may be co located with wireless access points .

The wireless access points are operative to wirelessly communicate with remote wireless client devices and . In one implementation the wireless access points implement the wireless network protocol specified in the IEEE 802.11 WLAN specification of course other wireless network protocols may be used. The wireless access points may be autonomous or so called fat wireless access points or light weight wireless access points operating in connection with a wireless switch see . In addition the network infrastructure may also include a Wireless LAN Solution Engine WLSE offered by Cisco Systems Inc. of San Jose Calif. or another wireless network management system. In some implementations the network infrastructure may also include one or more Wireless Control System WCS nodes operative to manage one or more wireless switches and access points.

The elements of hardware system are described in greater detail below. In particular network interface provides communication between hardware system and any of a wide range of networks such as an Ethernet e.g. IEEE 802.3 network etc. Mass storage provides permanent storage for the data and programming instructions to perform the above described functions implemented in the system controller whereas system memory e.g. DRAM provides temporary storage for the data and programming instructions when executed by processor . I O ports are one or more serial and or parallel communication ports that provide communication between additional peripheral devices which may be coupled to hardware system .

Hardware system may include a variety of system architectures and various components of hardware system may be rearranged. For example cache may be on chip with processor . Alternatively cache and processor may be packed together as a processor module with processor being referred to as the processor core. Furthermore certain implementations of the present invention may not require nor include all of the above components. For example the peripheral devices shown coupled to standard I O bus may couple to high performance I O bus . In addition in some implementations only a single bus may exist with the components of hardware system being coupled to the single bus. Furthermore hardware system may include additional components such as additional processors storage devices or memories.

As discussed above in one embodiment the operations of the WLAN management server described herein are implemented as a series of software routines run by hardware system . These software routines comprise a plurality or series of instructions to be executed by a processor in a hardware system such as processor . Initially the series of instructions are stored on a storage device such as mass storage . However the series of instructions can be stored on any suitable storage medium such as a diskette CD ROM ROM EEPROM etc. Furthermore the series of instructions need not be stored locally and could be received from a remote storage device such as a server on a network via network communication interface . The instructions are copied from the storage device such as mass storage into memory and then accessed and executed by processor .

An operating system manages and controls the operation of hardware system including the input and output of data to and from software applications not shown . The operating system provides an interface between the software applications being executed on the system and the hardware components of the system. According to one embodiment of the present invention the operating system is the Windows 95 98 NT XP Vista operating system available from Microsoft Corporation of Redmond Wash. However the present invention may be used with other suitable operating systems such as the Apple Macintosh Operating System available from Apple Computer Inc. of Cupertino Calif. UNIX operating systems LINUX operating systems and the like.

The remaining elements of hardware system are described below. In particular wireless network interface provides communication between hardware system and any of a wide range of wireless networks such as a WLAN i.e. IEEE 802.11 WiMax i.e. IEEE 802.16 Cellular e.g. GSMA etc. Mass storage provides permanent storage for the data and programming instructions to perform the above described functions implemented in the system controller whereas system memory e.g. DRAM is used to provide temporary storage for the data and programming instructions when executed by processor . I O ports are one or more serial and or parallel communication ports that provide communication between additional peripheral devices which may couple to hardware system .

Hardware system may include a variety of system architectures and various components of hardware system may be rearranged. For example cache may be on chip with processor . Alternatively cache and processor may be packed together as a processor module with processor being referred to as the processor core. Furthermore certain implementations of the present invention may not require nor include all of the above components. For example the peripheral devices shown coupled to standard I O bus may couple to high performance I O bus . In addition in some implementations only a single bus may exist with the components of hardware system being coupled to the single bus. Furthermore hardware system may include additional components such as additional processors storage devices or memories.

In one embodiment the operations of wireless client side functionality are implemented as a series of software routines run by hardware system . These software routines which can be embodied in a wireless network interface driver comprise a plurality or series of instructions to be executed by a processor in a hardware system such as processor . Initially the series of instructions are stored on a storage device such as mass storage . However the series of instructions can be stored on any suitable storage medium such as a diskette CD ROM ROM etc. Furthermore the series of instructions need not be stored locally and could be received from a remote storage device such as a server on a network via network communication interface . The instructions are copied from the storage device such as mass storage into memory and then accessed and executed by processor . In alternate embodiments the present invention is implemented in hardware or firmware.

While illustrates for didactic purposes the hardware architecture of a wireless client according to one implementation of the present invention the wireless client may however be implemented on a wide variety of computer system architectures such as special purpose hand held or portable devices Personal Digital Assistants e.g. converged devices which support WLAN data voice Laptop computers hand held phones and the like. An operating system manages and controls the operation of hardware system including the input and output of data to and from software applications not shown . The operating system provides an interface such as a graphical user interface GUI between the user and the software applications being executed on the system. According to one embodiment of the present invention the operating system is the Windows 95 98 NT XP operating system and or Windows CE WinCE operating system available from Microsoft Corporation of Redmond Wash. However the present invention may be used with other operating systems such as the Apple Macintosh Operating System available from Apple Computer Inc. of Cupertino Calif. UNIX operating systems LINUX operating systems Symbian operating systems and the like.

In operation in one implementation VCTA accesses location client to determine the location of wireless client or to determine if and when the wireless client is in a particular location or is associated with a particular wireless access point or MAC address. Location client may interact with location server to obtain its location.

As described in more detail below VCTA locates and registers with a voice diagnostic engine VDE to exchange simulated VoIP calls during a diagnostic session. In one implementation the VCTA is a software module or application that may reside above or may be integrated with driver layer agent of wireless client . VDE may be hosted in any suitable location such as in the WLAN management server in the central controller one or more access points etc. The VCTA may use a Network Driver Interface Specification NDIS for Windows environments or may use other interfaces for other platforms on which wireless client runs. In particular implementations VDE has access to association tables of all wireless clients for all wireless access points and uses such tables to locate wireless clients.

In one implementation VDE may configure VCTA based on one or more rule sets. In particular implementations VDE may push one or more rule sets to VCTA where a given rule set indicates triggering conditions for a diagnostic session. For example in one implementation a rule set may be based on time such as when a diagnostic session is triggered at a particular time. In one implementation a rule set may be based on location where a diagnostic session is triggered when the wireless client enters or leaves a particular location. In one implementation a rule set may be based on association where a diagnostic session is triggered when the wireless client associates with a particular wireless access point.

In one implementation VDE may have an Application Programming Interface API that is accessible by some other application e.g. a trouble ticket application where a network administrator can configure rules based on reported problems indicated by a user. For example if the user experiences problems with VoIP calls only in a particular building or other area the network administrator can configure a rule set such that the VDE can cause the VCTA to trigger a diagnostic session whenever the respective wireless client is in the particular building during a VoIP call or is associated with wireless access points in that area. These rule sets are pushed to the VCTA which can trigger a diagnostic session when one or more of the rules are met. Furthermore the VDE may also push rule sets to other VCTAs of other wireless clients. For example if a user reports trouble with VoIP call quality in a given building a network administrator may configure the VDE to push rule sets that trigger diagnostic sessions when they enter building to a group of wireless clients.

In one implementation when the VCTA of a given wireless client is first initialized the VCTA enters a discovery phase to find a VDE and resolve an IP address of the VDE . Discovery of a VDE may be accomplished using any suitable mechanism such as transmitting discovery messages which may be intercepted by the wireless controller . The wireless controller may be configured with knowledge of one or more VDEs and forward the discovery messages accordingly. After discovery of a VDE the VCTA then registers with the VDE and receives configuration information e.g. one or more rule sets from the VDE . In one implementation VCTA may also receive Differentiated Services Code Protocol DSCP to User Priority UP mappings e.g. voice queue data queue etc. from the VDE . The VCTA may instruct the MAC driver layer to use the DSCP to UP mappings for a given diagnostic session to assess the effect on one or more attributes of the diagnostic voice session relative to the DSCP to UP mappings that the MAC driver layer is currently using. The VCTA may also receive updated rule sets and other configuration information after the initial configuration. Once triggered VCTA executes a diagnostic session as described below in connection with .

In the implementation shown if VCTA receives an acknowledgement from VDE VCTA enters a signaling simulation phase . During the signaling simulation phase VCTA initiates a virtual call to the VDE to simulate a voice session. In one implementation the signaling simulation phase uses Session Initiation Protocol SIP signaling to set up the virtual call to the VDE . In other implementations the call signaling session such as a SIP session is simulated. For example both the VCTA and the VCTA may simulate the timing size and sequence of packets transmitted during a SIP or other call signaling session. The actual packets transmitted however may be a proprietary packet format or an existing non packet signaling format that includes a type identifier or other indicator. The driver layer agent can monitor for these packets transmitted by the VDE and intercept them for the VCTA .

VCTA then enters a real time data transport phase where VCTA exchanges data packets with VDE to simulate the data session of the call. In one implementation VCTA and VDE exchange Inter Access Point Protocol IAPP packets in other implementations however other non RTP packet protocol types can be used. The use of IAPP or other protocols facilitates interception of the simulation packets at driver layer agent such that they are not processed by other standard layers of the protocol stack. In one implementation each of the VCTA and VDE transmit IAPP packets of a size and at a rate that simulates a given VoIP codec. In one implementation the VCTA is configured to access the VoIP application installed on the wireless client to identify the codec s supported. This information can be communicated to the VDE which may choose a codec simulation protocol that identifies the packet size and packet rate that best simulates the data session that would occur if the identified VoIP codec were utilized.

In particular implementations during the both the signaling simulation phase and the real time data transport phase VCTA intercepts the simulation packets from VDE such that the simulation packets do reach call application . As such the user need not be aware of the virtual call or quiet call. As discussed above in one implementation the virtual call uses IAPP packets having predefined data sizes timing packetization rates DSCP values etc. Also the virtual call accesses the same queues voice video etc. for both SIP and RTP packets. In one implementation the IAPP frames may have different type identifiers e.g. command SIP RTP etc. . One advantage of using IAPP packets is that VDE does not forward them as IAPP packets are used for mainly within the WLAN infrastructure. VCTA and VDE may use other protocol packets in addition to or in lieu of IAPP packets. In some implementations the VCTA may also access the MAC layer to provide DSCP to UP mapping information to be used during the diagnostic call signaling and real time data transport simulations.

Furthermore during both the signaling simulation and real time data transport phases the VCTA monitors and gathers data and transmits diagnostic packets to the VDE . In one implementation the VCTA transmits diagnostic packets every 5 seconds. The diagnostic packets can include data obtained from the management information base MIB of the wireless client. The VCTA can also monitor for UP queue depth and report this back to the VDE .

In one implementation VCTA receives indications from call application whether wireless client is on hook or off hook. This ensures that the virtual call does not interfere with a real voice call. As soon as VCTA detects that a real voice call is in progress VCTA initiates the cancellation of the virtual call. In one implementation VCTA periodically accesses call application to determine whether a real call has been initiated. If VCTA detects a real voice call while a virtual call is in progress VCTA halts the virtual call session.

During the signaling simulation phase and real time data transport phase VCTA gathers diagnostic data periodically e.g. every 5 seconds and transmits the data to VDE . The diagnostic data provides over the air behavior to VDE to facilitate diagnosis of problems. In one implementation VCTA has access to voice metrics e.g. jitter delay packet loss ratio for the voice queue etc. and other information e.g. firmware version number phone number of the voice client etc. and includes this information in the diagnostic information to be sent to VDE . VDE may then provide this diagnostic information to a system that is configured to diagnose problems. For example VDE may determine the average jitter average delay packet loss ratios etc. VDE may also provide such characteristics to a network administrator to facilitate manual troubleshooting.

In one implementation VCTA has access to the same queues e.g. voice video etc. as call application does for regular voice calls for both SIP and RTP. This provides additional metrics e.g. packet loss ratios for particular queue for diagnosing problems.

In one implementation the MAC layer may use the DSCP to UP mappings to convert DSCP tags to UPs. As such the VCTA and VDE may exchange packets using particular queues in order to better simulate VoIP calls. In one implementation VCTA can instruct the MAC layer to use a different mapping and observe whether this different mapping had any affect on call quality etc.

In one implementation VDE may include functions that operate with those of a trouble ticket system. For example if a user indicates to a network administrator that the user is having problems in a particular building the network administrator may configure rule sets for VDE to push rule sets to VCTA based on the trouble ticket. A given rule set may cause VCTA to initiate a virtual call whenever the respective wireless client enters the building.

In one implementation the diagnostic session may be an iterative process where VDE may push subsequent rule sets and possibly other configuration settings e.g. different DSCP to UP mappings to VCTA to cause VCTA to initiate follow up virtual calls for diagnosis. For example if it is determined that the wireless client tends to have problems in a given area a given rule set may trigger a diagnostic session whenever the wireless client enters the area. In one implementation for each virtual call the network administrator may reconfigure particular wireless access points to determine whether those wireless access points are contributing to the problem.

The present invention has been explained with reference to specific embodiments. For example while embodiments of the present invention have been described as operating in connection with IEEE 802.11 networks the present invention can be used in connection with any suitable wireless network environment. Other embodiments will be evident to those of ordinary skill in the art. It is therefore not intended that the present invention be limited except as indicated by the appended claims.

