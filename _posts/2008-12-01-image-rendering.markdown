---

title: Image rendering
abstract: Systems, methods, and computer program products receive an image request identifying an image having a width and a height. A number of interleaved buffers is identified, each of the interleaved buffers operable to store data associated with the image. The image is split into each of the interleaved buffers on a computing device. An interleaved image is displayed corresponding to at least one of the interleaved buffers, where the interleaved image having substantially the same width and height of the image.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09159155&OS=09159155&RS=09159155
owner: Autodesk, Inc.
number: 09159155
owner_city: San Rafael
owner_country: US
publication_date: 20081201
---
In rendering images for viewing on a computer display there has always been a trade off between rendering quality and speed. Better quality rendering typically takes more computing power and CPU time. In order to speed up a rendering generally there are sacrifices that must be made in the quality. An example of a high quality rendering might be a photo realistic image while lower quality fast rendering might be used for interactivity with an image.

Conventional attempts to render a high quality image such as ray tracing image can take a substantial amount of time to fully render include splitting an image into tiles. As a result a conventional approach to rendering such an image is by rendering only portions such as tiles of the image at a time. This requires a user to wait for a portion of the image to be rendered after which the user can view only the tile or portion of the image rather than the entire image.

This specification describes technologies relating to image rendering. In particular systems methods and computer program products allow high quality photo realistic rendering to progressively blend with a much faster low visual quality environment allowing interactivity and progressive quality.

In general one aspect of the subject matter described in this specification can be embodied in a method including receiving an image request identifying an image having a width and a height and identifying a number of interleaved buffers each of the interleaved buffers operable to store data associated with the image. The method further includes splitting the image into each of the interleaved buffers on a computing device and displaying an interleaved image corresponding to at least one of the interleaved buffers the interleaved image having substantially the same width and height of the image.

According to a feature displaying further includes iteratively displaying interleaved images corresponding to two or more of the interleaved buffers. According to another feature the method can include blending the interleaved image with at least one other interleaved image corresponding to an interleaved buffer. According to yet another feature the method can include displaying the blended image.

In another feature the interleaved image includes the image for display. The number of interleaved buffers can also be identified based on a size of the image or based on a user input. According to another feature a blur filter is applied is the interleaved image prior to displaying the interleaved image. According to still another feature splitting the image into each of the interleaved buffers includes splitting the image into each of the interleaved buffers using sampling.

Displaying an interleaved image can include displaying an interleaved image corresponding to at least one of the interleaved buffers the interleaved image having the width and the height of the received image. According to a feature the method can include rendering the interleaved image corresponding to the at least one of the interleaved buffers using ray tracing. A camera angle may be employed to render the interleaved image corresponding to the at least one of the interleaved buffers. The camera angle may be adjusted by offsetting the same angle prior to rendering at least one other interleaved image corresponding to an interleaved buffer.

Other embodiments of the above aspects include corresponding systems apparatus and computer program products.

Particular implementations of the subject matter described in this specification can realize one or more of the following advantages. Using the techniques described herein users can quickly view a lower resolution view of an entire image. Once each of the remaining buffers is rendered they are blended into the image to provide the full detail of an image.

The details of one or more embodiments of the invention are set forth in the accompanying drawings and the description below. Other features aspects and advantages of the invention will become apparent from the description the drawings and the claims.

Implementations described herein split an image to be rendered into interleaved buffers. The buffers are small in comparison to a conventional single buffer used for rendering by a proportional amount based on the degree to which the image is split. For instance four buffers may be used instead of a single frame buffer to split an image into four images where each interleaved buffer is one quarter the size e.g. in pixels of the single frame buffer. The total number of pixels rendered remains constant but each interleaved buffer is separately rendered and viewable.

Because each interleaved buffer is not simply a tile i.e. a portion of the image but represents the whole view of an image to be rendered the image is displayed immediately. Using interleaved buffers users can quickly view a lower resolution view of an entire image while the other interleaved buffers are still being rendered. Once each of the remaining buffers is rendered they are blended into the image to provide the full detail of an image.

Additionally because each interleaved buffer is separately rendered some can be rendered using fast techniques while others can be rendered more slowly with higher quality results. The combination of blended images from respective buffers permits the image to be rendered with a dynamic mixture of speed and quality. For instance all interleaved buffers may be assigned fast status complete their render and interleave steps and then can be individually switched to higher quality and contribute their new results to the image.

Yet another advantage is that without increasing the number of pixels or samples interleaving at non regular grid offsets provides anti aliasing. In addition to blending speed and quality sketches e.g. CAD sketches or any other effects added to the image e.g. highlighting can be blended.

The rendering module processes graphics data and render an image that can include one or more effects such as shading reflections line drawings etc. In some implementations the GPU includes the necessary hardware and or software to permit the rendering module to process graphics data and render an image. In other implementations the CPU includes the necessary hardware and or software to permit the rendering module to process graphics data and render an image. The interleaved buffers store data processed by the GPU and or CPU . When an interleaved buffer is full the contents of that interleaved buffer may be output to the display device for display to a user. As explained below the interleaved buffers can iteratively render images on the display device such that low quality images are quickly rendered from one or more interleaved buffers and then subsequently replaced by higher quality images from the same or other buffers. Although many interleaved buffers can be included in the computing device the device may operate with as few as two. Typically the display device is a CRT or LCD display.

Persons skilled in the art will recognize that any system having one or more processing units configured to implement the teachings disclosed herein falls within the scope of the present invention. For example the computing device may be for instance a desk top computer a laptop computer a mobile device a personal digital assistant device or the like.

Although not shown in one or more of the components of the computing device can be distributed across two or more computing devices such as distributed across one or more networks e.g. a LAN WAN the Internet or a combination thereof . As an example the display device can reside on a client computer and the GPU and or CPU can reside in a server computer in a client server system. Additionally one or more of the components may be distributed and or combined with other components.

It should be appreciated that the components described herein with respect to may include computer executable software running in conjunction with computer hardware. For instance as illustrated in and as described in detail below the rendering module can include computer executable programs i.e. software stored within one or more memories of the computing device that are executed by the GPU and or CPU to effect the functions described in detail herein. In some implementations the rendering module may be implemented by an application specific integrated circuit ASIC firmware dedicated components or the like as are known in the art. Thus it will be appreciated that the computing device may be implemented in an entirely hardware embodiment an embodiment combining software and hardware or an embodiment comprised entirely of hardware.

In some implementations the buffers are sized in comparison to a full size frame buffer that typically handles a full image smaller and proportional to the amount the image is split up because the bytes in each interleaved buffer are not repeated in other buffers. Thus the size of each interleaved buffer are a fraction of the size of a typical display buffer. For instance if an image has a width of 640 height of 480 and a 24 bit color depth a single buffer size would need to be 640 480 24 bytes or 921 600 bytes. If four interleaved buffers are used the buffers would each account for of the single buffer so each would be required to be 921 600 4 bytes or 230 400 bytes.

According to some implementations the number of interleaved buffers may be determined by the rendering module based on the size of the image to be rendered. For instance the rendering engine may select a number of interleaved buffers such that no single interleaved buffer has more than a certain number of bytes. In some implementations the determination of the number of interleaved buffers may be done automatically by the rendering module . In other implementations the number of buffers may be programmed by a user via one or more graphical user interfaces that permit the user to control settings of the rendering module .

The use of a smaller interleaved buffers permits faster rendering on the display device . Because images are divided up evenly in some implementations when more buffers are desired the number of buffers are increased in number by a power of 4. According to some implementations 4 or 16 buffers are desirable though a greater or fewer number may also be used. According to some implementations to identify how an image to be rendered is split up the resolution of an image is divided by the total number of buffers. For instance a 640 480 image can be divided into 4 buffers each having 320 240 resolution. Unlike conventional techniques the 320 240 resolution images are not tiled but they overlap and thus represent pixels over the entire area of the fully rendered image but at lower resolution.

After the image is split into interleaved buffers optionally on or more effects are applied. The effects can be applied by one or more interleaved buffers in the same manner as the original image. For instance features such as shadowing sketches e.g. CAD sketches and the like can be applied using respective interleaved buffers. The interleaved buffers are then iteratively rendered to display the image . This may be performed for instance by the rendering module . Prior to displaying the image one or more additional effects can be applied such as a small blur filter e.g. blurring using a 3 3 block surrounding a pixel . The blur filter may be applied to an image rendered from an interleaved buffer.

In some implementations ray tracing is used to render an image. In such implementations a set of camera parameters may be used to control the location of a pixel grid representing samples of the original image where the pixel grid defines the pixels included in each interleaved buffer. The position of the camera is changed slightly to produce the sample pixels in each interleaved buffer. To the naked eye the rendering of each interleaved buffer may appear similar for the same resolution sample even if each is generated with a slightly different camera offset.

According to some implementations the camera parameters can be supplied by an application developer using the CPU and or GPU . According to other implementations the camera parameters can be supplied by an application developer using a graphics application which may or may not be stored and operating in the computing device of . A graphics application may include calls to a graphics application programming interface API . Well known graphics API s include the OpenGL and Direct3D APIs however no particular graphics API is required to effect the processes described herein. In some implementations a graphics API can provide a collection of function calls and data structures to a graphics application used to draw and manipulate complex two dimensional or three dimensional scenes from simple primitives. One or more drivers or hardware can also implement functions and data structures defined by graphics.

Illustratively the pixel grid is a 2 2 grid that is translated down and to the right in terms of x y coordinates relative to the position of the pixel grid shown . In one embodiment the set camera parameters specify the grid resolution. As shown in pixel represents four pixels in the pixel grid of . The pixel therefore represents a sample of the portion of the image represented by the four pixels . Therefore the pixel grid represents one quarter the resolution of the pixel grid of

In the sample pixel grid the center of the sample pixels corresponds to the center of of the pixels in the pixel grid specifically those pixels in the upper left hand corner of a four pixel grouping. As described below a camera offset is implemented for each respective buffer. Offsetting the camera results in the center of the sample pixels corresponding to the center of other pixels in the pixel grid . For instance a camera offset for a subsequent interleaved buffer may result in the center of the sample pixels corresponding to the center of other pixels e.g. pixels in the upper right hand corner of a four pixel grouping in the pixel grid . Once the sample data is collected for each of the interleaved buffers the images corresponding to each interleaved buffer can be combined or blended to reproduce the image.

In some implementations the formula for determining the camera offset to generate respective interleaved buffers depends on the number of interleaved buffers. For a the interleaved buffer number frameNumber out of a total number of buffers totalFrames the camera offset may be calculated as 

As an example if the total number of buffers is 4 the first buffer has a frameNumber of 0 which results in a camera offset of X 0.25 and Y 0.25. For the second buffer with a frameNumber of 1 the camera offset is X 0.25 Y 0.25 for the third buffer with a frameNumber of 2 the camera offset is X 0.25 Y 0.25 and for the fourth buffer with a frameNumber of 3 the camera offset is X 0.25 Y 0.25.

Splitting the image into the interleaved buffers permits a ray traced image to be represented progressively. This use of multiple interleaved buffers therefore permits the blending of images using a series of rendered images corresponding to each interleaved buffer.

As described above some of the interleaved buffers may be used to render an image quickly by sampling the image such as using the techniques described above. According to some implementations after rendering a low quality sample of an image one or more of the interleaved buffers can be switched to a higher quality and then contribute the new results to the image. For instance a buffer can first include data representing a lower quality representation of an image and after rendering can be switched to include data representing a higher quality version of the image. This may require a lower sampling rate and greater buffer capacity. According to some implementations 4 buffers can be used which each store low quality representations of an image where each is switched to a higher quality as each completes the low quality rendering and becomes available. The low quality buffers can also be switched at random with higher quality samples to hide interleaving of the buffers from a user.

To hide the interleaving and improve the visual quality a small blur filter 3 3 pixels can be applied before the user sees the image. It will also be appreciated that sample images may be interleaved at non regular offsets which may result in anti aliasing. Additionally it will be appreciated that in addition to blending low and high quality images one or more interleaved buffers can be used to blend in effects such as sketches e.g. CAD sketched shadowing or the like. In some implementations processes that are much for intensive to compute can be added subsequent to processes that are less intensive to compute. For instance in ray tracing implementations rendering using direct lighting can occur first after which shadows and then indirect lighting or global illumination processes follow.

Next for each interleaved buffer a camera offset is calculated . This calculation can occur for instance by the rendering module . Sample data is taken for each interleaved buffer using its corresponding camera offset . This data can be determined by the rendering module and the sample data is stored in a respective interleaved buffer.

Each of the example images can represent a sequence of images rendered for display to a user. Therefore the user will view a full frame of the image albeit at a lower resolution as shown for instance in immediately. That image will be replaced consecutively by the images shown in . It will be appreciated that blending is the result of interleaving two or more interleaved images where each interleaved image contributes a portion of the pixels comprising the original image to be rendered. For instance two interleaved images may respectively contribute one quarter of the total number of pixels of an image such that the two interleaved images with contribute half of the total number of pixels of the image when they are blended or added together.

Embodiments of the subject matter and the functional operations described in this specification can be implemented in digital electronic circuitry or in computer application firmware or hardware including the structures disclosed in this specification and their structural equivalents or in combinations of one or more of them. Embodiments of the subject matter described in this specification can be implemented as one or more computer program products i.e. one or more modules of computer program instructions encoded on a computer readable medium for execution by or to control the operation of data processing apparatus. The computer readable medium can be a machine readable storage device a machine readable storage substrate a memory device or a combination of one or more of them. The term data processing apparatus encompasses all apparatus devices and machines for processing data including by way of example a programmable processor a computer or multiple processors or computers. The apparatus can include in addition to hardware code that creates an execution environment for the computer program in question e.g. code that constitutes processor firmware a protocol stack a database management system an operating system or a combination of one or more of them.

A computer program also known as a program application script or code can be written in any form of programming language including compiled or interpreted languages and it can be deployed in any form including as a stand alone program or as a module component subroutine or other unit suitable for use in a computing environment. A computer program does not necessarily correspond to a file in a file system. A program can be stored in a portion of a file that holds other programs or data e.g. one or more scripts stored in a markup language document in a single file dedicated to the program in question or in multiple coordinated files e.g. files that store one or more modules sub programs or portions of code . A computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.

The processes and logic flows described in this specification can be performed by one or more programmable processors executing one or more computer programs to perform functions by operating on input data and generating output. The processes and logic flows can also be performed by and apparatus can also be implemented as special purpose logic circuitry e.g. an FPGA field programmable gate array or an ASIC application specific integrated circuit .

Processors suitable for the execution of a computer program include by way of example both general and special purpose microprocessors and any one or more processors of any kind of digital computer. Generally a processor will receive instructions and data from a read only memory or a random access memory or both. The essential elements of a computer are a processor for performing instructions and one or more memory devices for storing instructions and data. Generally a computer will also include or be operatively coupled to receive data from or transfer data to or both one or more mass storage devices for storing data e.g. magnetic magneto optical disks or optical disks. However a computer need not have such devices. Moreover a computer can be embedded in another device e.g. a mobile telephone a personal digital assistant PDA a mobile audio player a Global Positioning System GPS receiver to name just a few. Computer readable media suitable for storing computer program instructions and data include all forms of non volatile memory media and memory devices including by way of example semiconductor memory devices e.g. EPROM EEPROM and flash memory devices magnetic disks e.g. internal hard disks or removable disks magneto optical disks and CD ROM and DVD ROM disks. The processor and the memory can be supplemented by or incorporated in special purpose logic circuitry.

To provide for interaction with a user embodiments of the subject matter described in this specification can be implemented on a computer having a display device e.g. a CRT cathode ray tube or LCD liquid crystal display monitor for displaying information to the user and a keyboard and a pointing device e.g. a mouse or a trackball by which the user can provide input to the computer. Other kinds of devices can be used to provide for interaction with a user as well for example feedback provided to the user can be any form of sensory feedback e.g. visual feedback auditory feedback or tactile feedback and input from the user can be received in any form including acoustic speech or tactile input.

Embodiments of the subject matter described in this specification can be implemented in a computing system that includes a back end component e.g. as a data server or that includes a middleware component e.g. an application server or that includes a front end component e.g. a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the subject matter described is this specification or any combination of one or more such back end middleware or front end components. The components of the system can be interconnected by any form or medium of digital data communication e.g. a communication network. Examples of communication networks include a local area network LAN and a wide area network WAN e.g. the Internet.

The computing system can include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client server relationship to each other.

While this specification contains many specifics these should not be construed as limitations on the scope of the invention or of what may be claimed but rather as descriptions of features specific to particular embodiments of the invention. Certain features that are described in this specification in the context of separate embodiments can also be implemented in combination in a single embodiment. Conversely various features that are described in the context of a single embodiment can also be implemented in multiple embodiments separately or in any suitable subcombination. Moreover although features may be described above as acting in certain combinations and even initially claimed as such one or more features from a claimed combination can in some cases be excised from the combination and the claimed combination may be directed to a subcombination or variation of a subcombination.

Similarly while operations are depicted in the drawings in a particular order this should not be understood as requiring that such operations be performed in the particular order shown or in sequential order or that all illustrated operations be performed to achieve desirable results. In certain circumstances multitasking and parallel processing may be advantageous. Moreover the separation of various system components in the embodiments described above should not be understood as requiring such separation in all embodiments and it should be understood that the described program components and systems can generally be integrated together in a single application product or packaged into multiple application products.

Thus particular embodiments of the invention have been described. Other embodiments are within the scope of the following claims. For example the actions recited in the claims can be performed in a different order and still achieve desirable results.

