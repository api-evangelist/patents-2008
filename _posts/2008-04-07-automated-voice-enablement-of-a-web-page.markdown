---

title: Automated voice enablement of a web page
abstract: Embodiments of the present invention provide a method, system and computer program product for the automated voice enablement of a Web page. In an embodiment of the invention, a method for voice enabling a Web page can include selecting an input field of a Web page for speech input, generating a speech grammar for the input field based upon terms in a core attribute of the input field, receiving speech input for the input field, posting the received speech input and the grammar to an automatic speech recognition (ASR) engine and inserting a textual equivalent to the speech input provided by the ASR engine into a document object model (DOM) for the Web page.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08831950&OS=08831950&RS=08831950
owner: Nuance Communications, Inc.
number: 08831950
owner_city: Burlington
owner_country: US
publication_date: 20080407
---
The present application is related to the following co assigned U.S. Patent Applications which are expressly incorporated by reference herein 

U.S. application Ser. No. 12 099.036 now U.S. Pat. No. 8 543 404 entitled PROACTIVE COMPLETION OF INPUT FIELDS FOR AUTOMATED VOICE ENABLEMENT OF A WEB PAGE filed on Apr. 7 2008.

U.S. application Ser. No. 12 099 041 entitled FREE FORM INPUT FIELD SUPPORT FOR AUTOMATED VOICE ENABLEMENT OF A WEB PAGE filed on Apr. 7 2008.

The present invention relates to the field of speech recognition and more particularly to voice input processing in a Web page.

Speech recognition systems perform a critical role in commerce by providing an essential reduction in operating costs in terms of avoiding the use of expensive human capital in processing human speech. Generally speech recognition systems include speech recognition and text to speech processing capabilities coupled to a script defining a conversational flow. Consequently speech recognition systems can be utilized to provide a voice interactive experience for speakers just as if a live human had engaged in a person to person conversation.

Speech recognition systems have proven particularly useful in adapting computer based information systems to the audible world of voice processing. In particular while Web based information systems have been particularly effective in collecting and processing information from end users through the completion of fields in an on line form the same also can be said of speech recognition systems. In particular Voice XML and equivalent technologies have provided a foundation upon which Web forms have been adapted to voice. Consequently speech recognition systems have been configured to undertake complex data processing through forms based input just as would be the case through a conventional Web interface.

Integrating speech processing with Web pages of a Web application is not for the feint of heart. Expertise is required not only in the field of Web page and Web application development but also in the field of speech application development. Integral to speech application development is the design and use of a speech grammar reflecting the intended use of the speech application. In that expected information for different fields in a Web form can vary from field to field in many instances a different grammar must be generated for each field.

Thus the speech development component of a voice enabled application often occurs concurrently with the development of the Web application and requires coordination between the speech developer and the Web developer. Only then can both be combined into a single voice enabled Web application. Given the complexity of this task voice enabled applications elude widespread adoption for many types of businesses simply because many businesses lack the resources and expertise to coordinate the development of a voice enabled application. Consequently an important modality of interaction oftentimes is omitted from Web distributed content and customers suffer as a result.

Embodiments of the present invention address deficiencies of the art in respect to the voice enablement of a Web page and provide a novel and non obvious method system and computer program product for the automated voice enablement of a Web page. In an embodiment of the invention a method for voice enabling a Web page can include selecting an input field of a Web page for speech input generating a speech grammar for the input field based upon terms in a core attribute of the input field receiving speech input for the input field posting the received speech input and the grammar to an automatic speech recognition ASR engine and inserting a textual equivalent to the speech input provided by the ASR engine into a document object model DOM for the Web page.

In another embodiment of the invention a Web application data processing system can be enabled for voice enablement of a Web page. The system can include a voice enablement widget including program code enabled to generate a speech grammar for an input field in a Web page based upon terms in a core attribute of the input field to receive speech input for the input field to post the received speech input and the grammar to a communicatively coupled ASR engine and to insert a textual equivalent to the speech input provided by the ASR engine into a DOM for the Web page. Optionally the core attribute can be a hidden title field. Further the terms can include permitted terms for a corresponding grammar. Yet further the terms also can include a prefix a semantic indicator or both. Finally the ASR engine can be a representational state transfer REST compliant ASR engine.

Additional aspects of the invention will be set forth in part in the description which follows and in part will be obvious from the description or may be learned by practice of the invention. The aspects of the invention will be realized and attained by means of the elements and combinations particularly pointed out in the appended claims. It is to be understood that both the foregoing general description and the following detailed description are exemplary and explanatory only and are not restrictive of the invention as claimed.

Embodiments of the present invention provide a method system and computer program product for the automated voice enablement of a Web page. In accordance with an embodiment of the present invention a Web page of a Web application can be rendered in a content browser and voice input can be received for an input field of the Web page. A grammar can be determined for the input field and if the grammar cannot be determined a grammar can be dynamically generated for the input field. In this regard a core attribute of the input field such as the title of the input field can specify permissible input for the input field or the core attribute can reference an existing grammar.

In either case the grammar and the voice input can be posted to a speech recognition engine from the content browser and a textual equivalent can be received in return. For instance a REST compliant speech recognition engine can receive the posting of the voice input and grammar from the content browser and the speech recognition engine can return to the content browser a textual equivalent to the voice input for example text formatted according to the Javascript Object Notation JSON . Thereafter the textual equivalent can be inserted into a DOM for the Web page and the portion of the Web page affected by the insertion can be re rendered to provide a visualization of the text input for the input field.

In this way the Web application can be voice enabled even in the absence of specific expertise in speech application development. In particular one seeking to voice enable fields of a Web page in a Web application need only specify permitted terms for the input field within a core attribute of the input field. The speech grammar can be generated automatically with reference to the core attribute of the input field. Further the textual equivalent of voice input for the input field can be seamless integrated into the input field by inserting the textual equivalent directly into the DOM for the Web page. Thus no speech recognition expertise is required to speech enable the Web page of the Web application.

In illustration pictorially shows a process for the automated voice enablement of a Web page. As shown in a Web page of a Web application not shown can be represented by DOM produced by a content browser not shown rendering the Web page . The DOM can define within the Web page one or more different input fields A B N. Each of the input fields A B N can include a core hidden attribute such as a title. It is to be recognized by the skilled artisan that core attributes of markup language element like an input field are well known and well documented according to the Hypertext Markup Language HTML specification.

Voice enablement widget can process speech input provided by end user for a given one of the input fields A B N. Specifically upon received of speech input from end user it can be determined whether or not a grammar has been specified for the given one of the input fields A B N. If not a grammar can be generated for the given one of the input fields A B N by referring to a corresponding core attribute for the given one of the input fields A B N. In this regard an exemplary markup language element for the input fields A B N providing permitted terms for a corresponding grammar follows 

Additionally a prefix can be provided for each field such as the or an or to to permit natural speech. Yet further semantic meaning can be provided for the permitted terms. As an example 

The resulting grammar can reflect the permitted terms prefix and semantic values for example as follows 

The voice enablement widget can provide the resulting grammar with the speech input to a speech recognition service for example a RESTful automatic speech recognition ASR engine. The speech recognition service can process the speech input in connection with the grammar to produce a textual equivalent to the speech input . The textual equivalent can be returned to the voice enablement widget which in turn can insert the textual equivalent into a portion of the DOM for the Web page corresponding to the given one of the input fields A B N. Optionally the speech input also can be passed to a speaker independent verification SIV to perform voice authentication. engine Finally the DOM can be processed by the content browser not shown to re render the Web page with the textual equivalent shown in the given one of the input fields A B N.

The process described in respect to can be implemented in a Web application data processing system. In illustration schematically depicts a Web application data processing system configured for the automated voice enablement of a Web page. The system can include a content server communicatively coupled to a client over computer communications network . The content server can be configured to serve Web pages to the client over the computer communications network for rendering in a content browser . Optionally the Web pages each can be a mash up of content drawn from multiple different content sources not shown distributed about the computer communications network .

Voice enablement widget can be coupled to the content browser . The voice enablement widget can include computer program code enabled to generate a grammar for providing voice input for a field in the mash up from terms in a core attribute of the input field. The program code further can be enabled to provide both the grammar and the voice input to an ASR engine and to receive in return text input equivalent to the voice input . Finally the program code can be yet further enabled to insert the text input into a DOM for the mash up and to re render the mash up in the content browser to include the text input in the input field of the mash up into which the voice input had been provided.

In yet further illustration of the operation of the voice enablement widget is a flow chart illustrating a process for voice enabling a Web page in a Web application data processing system. Beginning in block a Web page can be received for rendering in a content browser and in block a DOM can be created for the Web page. Subsequently in block the DOM can be rendered in the content browser as a Web page.

The Web page can provide one or more input fields into which textual input is expected however a user interface element can be provided in the Web page in connection with one or more of the input fields that when activated permits speech input to be provided in place of textual input for the input field. As such in block an input field can be selected for speech input and in decision block it can be determined whether or not a speech grammar exists for the input field. If so the grammar can be loaded for the input field. Otherwise in block terms can be retrieved from a core attribute of the input field and in block a speech grammar can be generated based upon the terms.

In either circumstance in block speech input can be received for the input field and in block the speech input can be posted to a coupled ASR engine along with the speech grammar. Thereafter in block equivalent text produced by the ASR engine for the speech input can be inserted into a node for the DOM corresponding to the input field. Finally in block the Web page can be re rendered to show the textual input in the input field.

Embodiments of the invention can take the form of an entirely hardware embodiment an entirely software embodiment or an embodiment containing both hardware and software elements. In a preferred embodiment the invention is implemented in software which includes but is not limited to firmware resident software microcode and the like. Furthermore the invention can take the form of a computer program product accessible from a computer usable or computer readable medium providing program code for use by or in connection with a computer or any instruction execution system.

For the purposes of this description a computer usable or computer readable medium can be any apparatus that can contain store communicate propagate or transport the program for use by or in connection with the instruction execution system apparatus or device. The medium can be an electronic magnetic optical electromagnetic infrared or semiconductor system or apparatus or device or a propagation medium. Examples of a computer readable medium include a semiconductor or solid state memory magnetic tape a removable computer diskette a random access memory RAM a read only memory ROM a rigid magnetic disk and an optical disk. Current examples of optical disks include compact disk read only memory CD ROM compact disk read write CD R W and DVD.

A data processing system suitable for storing and or executing program code will include at least one processor coupled directly or indirectly to memory elements through a system bus. The memory elements can include local memory employed during actual execution of the program code bulk storage and cache memories which provide temporary storage of at least some program code in order to reduce the number of times code must be retrieved from bulk storage during execution. Input output or I O devices including but not limited to keyboards displays pointing devices etc. can be coupled to the system either directly or through intervening I O controllers. Network adapters may also be coupled to the system to enable the data processing system to become coupled to other data processing systems or remote printers or storage devices through intervening private or public networks. Modems cable modem and Ethernet cards are just a few of the currently available types of network adapters.

