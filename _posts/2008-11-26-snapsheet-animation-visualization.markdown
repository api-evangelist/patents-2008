---

title: Snapsheet animation visualization
abstract: To assist users in identifying the contributions of specific computer graphics variable or animation variable knots to the timing, rhythm, and expression of complicated animations, an animation software interface includes a snapsheet mode for visualizing and authored poses of objects. The snapsheet mode presents a series of rendered still images corresponding with the authored poses of one or more selected entities. The snapsheet mode may use one or more computer graphics variables, one or more objects, or arbitrary frames or shot time values as selected entities. The snapsheet mode associates each still image with a portion of the shot time of the overall animation corresponding with the selected entity's influence in the animation. Users may modify animation data via the snapsheet mode using each image may act as a proxy for manipulating associated authored values of one or more computer graphics variables.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08228335&OS=08228335&RS=08228335
owner: Pixar
number: 08228335
owner_city: Emeryville
owner_country: US
publication_date: 20081126
---
The present invention relates to the field of computer graphics and in particular to methods and apparatus for creating modifying and visualizing animation data. Many computer graphic images are created by mathematically modeling the interaction of light with a three dimensional scene from a given viewpoint. This process called rendering generates a two dimensional image of the scene from the given viewpoint and is analogous to taking a photograph of a real world scene. Animated sequences can be created by rendering a sequence of images of a scene as the scene is gradually changed over time. A great deal of effort has been devoted to making realistic looking rendered images and animations.

In computer generated animation an object s appearance is defined by a three dimensional computer model. To appear realistic the computer model of an object is often extremely complex having millions of surfaces and tens of thousands of attributes. Due to the complexity involved with animating such complex models particularly character models with hundreds or thousands of degrees of freedom animation tools often rely on computer graphics variables and associated computer graphics variable functions to define the attributes of objects. Examples of computer graphics variables include animation variables shader relationships weighting relationships and mappings of influence between computer graphics components. Computer graphics variable functions associate input values to a corresponding output values according to some rule or mathematical expression. Computer graphics variable functions may be functions of an input time variable or any other type of input.

For example animation variables which are sometimes referred to as avars are parameters used by functions to modify the position or pose of all or a portion of a model. Animation variables and their associated functions can specify relatively simple motions such as the translation and rotation of objects. Animation variables and their associated functions are also used to abstract complicated modifications to a model to a relatively simple control. For example animation variables can specify the rotation angles of the joints of a character model thereby positioning the character model s limbs and appendages. More complicated animation variables can define the degree of opening of a character s mouth. In this example the value of a single animation variable is provided to one or more computer graphics variable functions to determine the positions of many different parts of the character model needed to open the characters mouth to the desired degree. In this example animation software tools then modify the character model according to the outputs of the computer graphics variable functions to produce a character model posed with an open mouth.

Users define computer graphics images and animated sequences by specifying the values of computer graphics variables of an object and hence the pose of an object at one or more key frames. A pair of a computer graphics variable value and its associated input value such as a time value is referred to as a knot. A set of one or more knots at a given input value defined by a user or another application such as an inverse kinematic system is referred to as an authored pose of an object.

Based on the authored poses of one or more objects an animation system determines the poses of object for frames time values or any other type of input values where authored poses are not defined. Typically animation systems interpolate the values of its computer graphics variables from the knots of authored knots. A variety of different interpolation schemes are used in animation including linear cubic b spline Bezier and Catmull Rom. Typically animation tools will display a line or curve such as a spline curve defined by one or more knots of a computer graphics variable and the interpolation scheme.

Precise control of the timing rhythm values and interpolation of computer graphics variable knots is essential to achieving artistically effective animation. Subtle adjustments in the value timing and interpolation of knots can greatly change the artistic impact of animation. During animation many gestures or actions are comprised of large numbers of knots from one or more computer graphics variables acting in concert to achieve the desired motion. For example a sequence of knots of a single computer graphics variable might define how a character s mouth opens during a sequence of dialog. In another example a sequence of knots for multiple computer graphics variables might define a character s arm and hand movements while waving or pointing.

Because animation is often defined by large numbers of related computer graphics variable knots it is often difficult for users to identify the visual and aesthetic contribution of specific computer graphics variable knots to complicated animations. In particular the timing and rhythm of specific computer graphics variable knots are difficult to discern within complicated animations.

To assist users in identifying the contributions of specific computer graphics variable or animation variable knots to the timing rhythm and expression of complicated animations an embodiment of an animation software interface includes a snapsheet mode for visualizing and optionally modifying authored poses of objects. The snapsheet mode presents a series of rendered still images corresponding with the authored poses of one or more selected entities. The snapsheet mode may use one or more computer graphics variables one or more objects or arbitrary frames or shot time values as selected entities. In an embodiment the snapsheet mode associates each still image with a portion of the shot time of the overall animation corresponding with the selected entity s influence in the animation. For example a still image may be associated with the shot time from a first knot of a selected animation variable up to the shot time of an adjacent following knot of the selected animation variable.

In a further embodiment users may modify animation data via the snapsheet mode. For example each image may act as a proxy for manipulating one or more authored values of one or more animation variables associated with the image. Users may move knots forwards or backwards in shot time by manipulating associated images allowing users to modify the timing or rhythm of animation. In another example a user can provide a command to move the knots associated with an image to a new shot time. In still another example user may move knots preceding or following an image to the current shot time.

Example animation software interface includes shoulder animation variable elbow animation variable hip animation variable and knee animation variable . In this example animation variables including shoulder animation variable elbow animation variable hip animation variable and knee animation variable parameterized according to shot time input values.

Each of the animation variables is associated with one or more knots or control points. Each knot specifies a value of the animation variable for a shot time input value. Animation variable knots may be specified by users or by other applications such as inverse kinematics systems. In general a knot of a computer graphics variable such as an animation variable is referred to as an authored value of the computer graphics variable because it is specified explicitly by a user or an application. A set of knots defined for a set of animation variables of an object at a specific time input value is referred to as the authored pose of the object at that shot time input value.

Animation and computer graphics software applications determine the values of computer graphics variables at input values without defined knots using interpolation or other techniques. For example an animation software application may interpolate between two or more knots of an animation variable to determine the value of the animation variable for frames or other shot time input values between the knots of the animation variable. Embodiments of animation software applications may use a variety of interpolation schemes including linear cubic b spline Bezier and Catmull Rom techniques. In general the values of computer graphics variables that are not specified by knots are referred to as the generated values of the computer graphics variable.

Example animation software interface displays the authored and generated values of animation variables. In an embodiment animation software interface displays the authored values of animation variables as highlighted points and the generated values of animation variables as lines or curves such as a spline curve. For example animation software interface displays the authored values of shoulder animation variable as points and . Animation software interface displays the generated values of shoulder animation variable as curve . Similarly animation software interface displays the authored values of elbow animation variable as points and and its generated values as curve . Animation software interface displays the authored values of hip animation variable as points and and its generated values as curve . Animation software interface displays the authored values of knee animation variable as points and and its generated values as curve .

The groups and animation variables shown in example animation software interface are intended to illustrate one application of embodiments of the invention. However embodiments of example animation software interface may include any arbitrary number and types of computer graphics variables arranged with or without groups or hierarchies.

Additionally in example animation software interface the animation variables and are expressed as functions of input shot time values. However embodiments of example animation software interface are also applicable to any type of computer graphics variable parameterized by inputs other than time.

For example a single input computer graphics variable may be used to represent a complex behavior or transformation such as the deformation of a character model s face when opening its mouth. In this example multiple deformation functions may be required to produce the desired result. For each of these deformation functions a weighting or influence computer graphics variable specifies the weight or influence of its associated deformer function based on the value of the input computer graphics variable. In this example each deformation function can have its own weighting or influence computer graphics variable. These weighting or influence computer graphics variables are parameterized by the input computer graphics variable rather than by shot time.

To assist users in identifying the contributions of specific computer graphics variable or animation variable knots to the timing rhythm and expression of complicated animations an embodiment of an animation software interface includes a snapsheet mode for visualizing and optionally modifying authored poses of objects. The snapsheet mode presents a series of rendered still images corresponding with the authored poses of one or more selected entities. The snapsheet mode may use one or more computer graphics variables one or more objects or arbitrary frames or shot time values as selected entities. In an embodiment the snapsheet mode associates each still image with a portion of the shot time of the overall animation corresponding with the selected entity s influence in the animation. For example a still image may be associated with the shot time from a first knot of a selected animation variable up to the shot time of an adjacent following knot of the selected animation variable.

In an embodiment the pose of a character model is determined by the values of its animation variables. While the snapsheet mode is active the animation software interface replaces the animation of all or a portion of the scene including the selected entity with still images. In an embodiment each still image is associated with an authored value of a selected entity such as a knot of an animation variable. In a further embodiment each still image is displayed for a portion of the shot animation time associated with the selected entity such as from the shot time of a knot of an animation variable to the shot time of the next adjacent knot.

For example when shoulder animation variable is the selected entity a first still image including the character model in a first pose is associated with the interval of shot time from knot to knot . Similarly a second still image including the character model in a second pose is associated with the interval of shot time from knot to knot . In this example the values of elbow animation variable and any other animation variables or other types of computer graphics variables are still used to change the poses of the character model however these changes are only shown in still images which are associated with knots of the selected shoulder animation variable .

The number of images associated with animation data and their associated shot time intervals may vary depending upon the selected entity. illustrates a second example operation of an animation software interface according to an embodiment of the invention. Like example the second example operation illustrates the snapsheet mode of the animation software interface in response to the selection of a second animation variable.

In example the elbow animation variable is selected for visualization using the snapsheet mode. Conversely shoulder animation variable is not selected for inclusion in the snapsheet animation visualization in this example. Embodiments of animation software interfaces may or may not display animation variables and their values while the snapsheet mode is active.

In an embodiment the pose of a character model is determined by the values of its animation variables. For example when elbow animation variable is the selected entity a first still image including the character model in a first pose is associated with the interval of shot time from knot to knot . Similarly a second still image including the character model in a second pose is associated with the interval of shot time from knot to knot . A third still image including the character model in a third pose is associated with the interval of shot time from knot to knot

Although examples and are based on the same animation data the images from the snapsheet mode are different because of the difference in selected entities. The images resulting from the snapsheet mode may be presented to a user to emphasize the timing and rhythm of animation data associated with the selected entity. Users may select one or more animation variables or other computer graphics variables as the selected entities to control the presentation of images by the snapsheet mode. In a further embodiment users may select specific frames or shot times instead of or in addition to the computer graphics variables as selected entities. In the case of a selected frame or shot time as a selected entity the snapsheet mode will render an image of the scene at the selected frame or shot time regardless of the timing of any knots or authored values.

Images associated with intervals of shot time by the snapsheet mode such as images and can be presented to users in a number of ways. In one embodiment a timeline including all or a portion of the images may be displayed in conjunction with a graphical representation of the intervals of shot time associated with the images. illustrates an example timeline according to this embodiment. Example timeline includes images showing poses of a model based on at least animation variables and .

In this example shoulder animation variable is the selected entity thus the number and shot time intervals of images produced by the snapsheet mode of the animation software interface will be based on the authored values or knots of shoulder animation variable .

Timeline includes image showing a model in pose based at least in part on the value of knot of animation variable . A visual indicator shows the shot time interval associated with image which corresponds with the shot time between knots and . Similarly timeline includes image showing a model in pose based at least in part on the value of knot of animation variable . A visual indicator shows the shot time interval associated with image which corresponds with the shot time between knots and

In a further embodiment users may modify animation data via the snapsheet mode. For example if a user moves image from its position on the timeline to a new position an embodiment of the animation software interface moves any animation variable knots associated with the image such as knot to a new position corresponding with the new position for example forming a modified knot . In this example each of the images acts as a proxy for manipulating one or more authored values of one or more animation variables that are selected entities. Users may move knots forwards or backwards in shot time by manipulating associated images allowing users to modify the timing or rhythm of animation.

In another example a user can provide a command to move any animation variable knots such as knot to a new shot time for example forming a modified knot . Users may move knots forwards or backwards in shot time by manipulating associated images allowing users to modify the timing or rhythm of animation. In response to the user command an embodiment of the animation software interface modifies the position of associated image on the timeline .

In an embodiment images or other user interface elements in the snapsheet mode are associated with their corresponding authored data values via an active bidirectional association. The active bidirectional association allows modifications in the snapsheet mode to modify the authored data. Similarly the active bidirectional association allows modifications in the authored data to modify the presentation of images in the snapsheet mode. Active bidirectional associations can be implemented using any technique known in the art including application programming interfaces event and message handling systems and inter application and or intra application communication techniques. The active bidirectional association may identify images and authored data using specific identifiers or general attributes such as the shot time value or other input parameter values of the images or authored data values.

In another embodiment an animation including all or a portion of the images may be displayed with the each image displayed for a time period proportional to its associated shot time interval. illustrates an example animation view according to this embodiment. Example animation view presents a sequence of images such as the images shown in as an animation showing a pose of a model based on at least animation variables and .

In this example shoulder animation variable is the selected entity thus the number and shot time intervals of images produced by the snapsheet mode of the animation software interface will be based on the authored values or knots of shoulder animation variable .

Animation view includes image showing a model in pose based at least in part on the value of knot of animation variable . In an embodiment image will be displayed for a time period proportional to the shot time between knots and

In a further embodiment a user may interactively change the playback of the images in animation view for example including pausing the playback skipping advancing or reversing to a specific shot time or frame or to a relative shot time or frame offset from the current shot time increasing or decreasing the playback speed and or skipping to an adjacent preceding or following image which is associated with an adjacent knot of a selected entity.

In a further embodiment users may modify animation data via the snapsheet mode. For example a user can provide a command to move the knots associated with image to a new shot time. In response to the user command an embodiment of the animation software interface moves any animation variable knots associated with the image such as knot to a new shot time for example forming a modified knot . Users may move knots forwards or backwards in shot time by manipulating associated images allowing users to modify the timing or rhythm of animation.

In a further embodiment a user may move preceding or following knots to the current shot time. For example if during playback of the sequence of images the current shot time is time a user may direct the animation software interface to move knots associated with the following image such as knot to shot time creating modified knot

The animation variables and their knots are shown in the examples of for purposes of illustration. However embodiments of the invention may include or omit the display of all or any portion of the animation variables from the animation software interface while the snapsheet mode is active. Alternate embodiments of the invention can include the display of all or any portion of the animation variables from the animation software interface while the snapsheet mode is active.

User input devices communicate user inputs from one or more users to the computer system examples of which may include keyboards mice joysticks digitizer tablets touch pads touch screens still or video cameras and or microphones. Network interface allows computer system to communicate with other computer systems via an electronic communications network and may include wired or wireless communication over local area networks and wide area networks such as the Internet. An audio processor is adapted to generate analog or digital audio output from instructions and or data provided by the CPU memory and or storage . The components of computer system including CPU memory data storage user input devices network interface and audio processor are connected via one or more data buses .

A graphics subsystem is further connected with data bus and the components of the computer system . The graphics subsystem includes at least one graphics processing unit GPU and graphics memory . Graphics memory includes a display memory e.g. a frame buffer used for storing pixel data for each pixel of an output image. Graphics memory can be integrated in the same device as GPU connected as a separate device with GPU and or implemented within memory .

Pixel data can be provided to graphics memory directly from the CPU . In some implementations instructions and or data representing a scene are provided to renderfarm or set of server computers each similar to computer system via the network interface or storage . The renderfarm generates one or more rendered images of the scene using the provided instructions and or data. These rendered images are returned to the computer system for display.

Alternatively CPU provides the GPU with data and or instructions defining the desired output images from which the GPU generates the pixel data of one or more output images. The data and or instructions defining the desired output images can be stored in memory and or graphics memory . In an embodiment the GPU includes 3D rendering capabilities for generating pixel data for output images from instructions and data defining the geometry lighting shading texturing motion and or camera parameters for a scene. The GPU can employ any surface or volume rendering technique known in the art to create one or more rendered images from the provided data and instructions including rasterization scanline rendering REYES or micropolygon rendering ray casting ray tracing image based rendering techniques and or combinations of these and any other rendering or image processing techniques known in the art. The GPU can further include one or more programmable execution units capable of executing shader programs. GPU can be comprised of one or more graphics processing unit cores.

The graphics subsystem periodically outputs pixel data for an image from graphics memory to be displayed on display device . Display device is any device capable of displaying visual information in response to a signal from the computer system including CRT LCD plasma OLED and SED displays. Computer system can provide the display device with an analog or digital signal.

In embodiments of the invention CPU is one or more general purpose microprocessors having one or more homogenous or heterogeneous processing cores. In further embodiments all or a portion of the graphics subsystem or GPU is integrated into CPU .

Embodiments of the invention may render images for the snapsheet mode using any rendering technique known in the art. In an embodiment an image of a scene is rendered for each authored value or knot of each selected entity as well as for any specific frames or shot times selected by the user. Embodiments of the animation software application may include an internal renderer and or be adapted to interface with external renderer applications to generating image and or animations. An embodiment of the snapsheet mode then assembles the rendered images to create a presentation such as a timeline or animation view. In this embodiment if the user changes the timing of knots associated with an image the presentation may be updated without re rendering all or a portion of the object associated with the modified knots.

In a further embodiment a background animation can be rendered separately from the objects selected for examination with the snapsheet mode. Each still image may be composited or blended with a corresponding portion of the background animation so that the selected entity appears static while the background animation moves. Depth information for the still images and the background animation may be stored during rendering to enable this compositing to correctly occlude objects.

Further embodiments can be envisioned to one of ordinary skill in the art after reading the attached documents. In other embodiments combinations or sub combinations of the above disclosed invention can be advantageously made. The block diagrams of the architecture and flow charts are grouped for ease of understanding. However it should be understood that combinations of blocks additions of new blocks re arrangement of blocks and the like are contemplated in alternative embodiments of the present invention.

The specification and drawings are accordingly to be regarded in an illustrative rather than a restrictive sense. It will however be evident that various modifications and changes may be made thereunto without departing from the broader spirit and scope of the invention as set forth in the claims.

