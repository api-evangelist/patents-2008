---

title: On-demand provisioning of services running on embedded devices
abstract: A service type repository is populated with types of services exposed on a network that has a dynamic organization. The services are embedded on one or more devices included in the network and the services providing information about the one or more devices. A query is received that includes a request for a type of service, and the requested type of service is compared to the types of services in the service type repository to select a collection of matching service types that satisfy the request. Active instances of services that have a type included in the collection of matching service types are identified. The active instances are instances of services embedded on one or more devices included in the network. When no active instances are identified, active instances of services that have a type included in the collection of matching service types are discovered.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08874701&OS=08874701&RS=08874701
owner: SAP SE
number: 08874701
owner_city: Walldorf
owner_country: DE
publication_date: 20081222
---
Web services may be deployed on embedded devices and the services running on these devices may provide information about the device or the environment in the vicinity of the devices.

In one general aspect a user may submit a query that requests a particular type of service to a service system. The service system monitors one or more devices that are included in a network of devices to identify active instances of services currently embedded on the devices. As the set of devices that are included in the network changes the service system is able to continuously monitor the service landscape provided by the devices as the landscape changes with the addition and removal of devices to and from the network. In some implementations if no active instance of a service of the type requested is found instructions that implement the missing service is installed on a device included in the network.

In another general aspect a service type repository is populated with types of services exposed on a network that has a dynamic organization that accommodates removal of services from the network and addition of services to the network. The services are embedded on one or more devices included in the network and the services provide information about the one or more devices. A query is received that includes a request for a type of service and the requested type of service is compared to the types of services in the service type repository to select a collection of matching service types that satisfy the request. Active instances of services that have a type included in the collection of matching service types are identified. The active instances are instances of services embedded on one or more devices included in the network. When no active instances are identified active instances of services that have a type included in the collection of matching service types are discovered.

Implementations may include one or more of the following features. The discovered active instance may be embedded on a device added to the network after populating the service type repository. The discovered active instance may be embedded on a device included in the network when populating the service type repository and the active instance may become active after populating the service type repository. An augmented query may be generated based on the received query. The augmented query may include the requested type of service and information related to the requested service type and comparing the requested service to the types of services in the service type repository also may include comparing the information related to the requested type of service to the types of services in the service type repository.

The information related to the requested service may include an indication of a context in which the query was generated. The indication of the context in which the query was generated may include one or more of a location from which the query was generated and an application from which the query was generated. In some implementations instructions that when embedded on and executed by a device create an active instance of a service having a type of the requested type of service may be retrieved and the instructions may be installed on a device included in the network. The service type repository may include instructions that when embedded on and executed by a device create an instance of a service running on the device and the instructions that create the active instance of the service may be retrieved from the service type repository.

In some implementations after populating the service type repository whether devices have been added or removed from the network may be determined to identify devices currently included in the network types of services available from the devices currently included in the network may be determined and the service type repository may be updated based on the services available currently included in the network. The active instances may be ranked based on one or more of a quality of each of the active instances and a location of the active instance The active instances may be displayed and user input that selects an active instance from the display of active instances may be accepted.

The information about the one or more devices may include one or more of a type of service available from the device and a physical characteristic of the device. A physical characteristic of the device may include one or more of an amount of throughput of the device a unique identifier of the device an amount of available stored energy on the device and an action the device is configured to perform. Identifying the active instances of services may include monitoring devices in the network with a device monitor to determine one or more physical characteristics of the devices included in the network and a service monitor that determines instances of services running on the devices. A service type may include a description of the service including metadata and an interface for interacting with a device on which the service is embedded. At least one of the one or more devices included in the network may be a sensor configured to sense a physical property of an area near the sensor.

In another general aspect a system includes one or more computers and a computer readable medium coupled to the one or more computers having instructions stored thereon which when executed by the one or more computers cause the one or more computers to perform operations including populating a service type repository with types of services exposed on a network that has a dynamic organization that accommodates removal of services from the network and addition of services to the network. The services are embedded on one or more devices included in the network and the services providing information about the one or more devices. A query that includes a request for a type of service is received and the requested type of service is compared to the types of services in the service type repository to select a collection of matching service types that satisfy the request. Active instances of services that have a type included in the collection of matching service types are identified. The active instances are instances of services embedded on one or more devices included in the network. When no active instances are identified active instances of services that have a type included in the collection of matching service types are discovered.

Implementations may include one or more of the following features. The system may include a display configured to present an interface to a user and the instructions may further cause the one or more computers to perform operations including displaying a list the active instances on the display and accepting user input that selects an active instance from the list of active instances. The instructions may further cause the one or more computers to perform operations when no active instances are discovered that include retrieving instructions that when embedded on and executed by a device create an active instance of a service having a type of the requested type of service and installing the instructions on a device included in the network.

Implementations of any of the techniques described above may include a method or process a system a device an apparatus or instructions stored on a computer readable storage device. The details of particular implementations are set forth in the accompanying drawings and description below. Other features will be apparent from the following description including the drawings and the claims.

Referring to a system includes a service system that allows a user to search for services that are exposed on a network. The service system includes a service type repository a network monitor and a discovery module . A query may be submitted to the service system . In the example shown in the query is submitted by a user of an application . In other examples the query may be submitted by an automated process. The query may be a request to determine whether a type of service is provided by one or more devices that are included in a network . Devices that are in communication with the service system may be considered to be included in the network . In some examples no devices are included in the network and in these examples the network may be considered empty.

In the examples shown in the network is a network that has a topology or organization that changes over time. shows the network at a time t shows the network at a time t and shows the network at a time t. As shown in the examples shown in the snapshots of the system at the times t t and t the devices that are included in the network may change over time. For example the devices included in or excluded from the network may change over time as for example devices that were dormant come online additional devices move into communications range of the service system e.g. if the example network is a wireless network and or other devices within the network devices fail and or devices are intentionally removed from or added to the network e.g. by plugging or unplugging cables if the example network is a wired network . The network may be for example a network of devices that are in communication with the service system and or each other.

The devices included in the network may host services that provide information about the device. The network may be in a factory or other manufacturing facility. Services embedded in the devices included in the network may be used to for example allow a user who is remote from the factory to monitor processes performed by the devices included in the network . Because the devices that are included in the network may change over time the services that are exposed on the network e.g. the services that are available to potentially satisfy the request for a type of service made in the query also may change over time.

As discussed above the service system includes a service type repository a network monitor and a discovery module . The service type repository stores definitions of types of services that are exposed on the network . A service type definition may include a description of the service human readable or machine processable or both a description of an interface for interacting with a device on which the service is embedded and other metadata. The metadata may include for example semantic information about message parameters such as information that explains the meaning of data. For example temperature readings may be reported in different units such as Fahrenheit Celsius and or Kelvin and the metadata may indicate which unit or units is associated with a particular reading. The metadata may include dependency information such as information that describes what other service instances a deployed instance of the type depends on. For example dependency information may include instances of the same or of another service type located on the same device in network proximity or somewhere on the network. Metadata also may be keywords that may be used to improve query results. Service types may be independent of service instances. The service type repository may be for example a database.

The network monitor includes a service monitor and a device monitor . The device monitor monitors devices that are included in the network and determines one or more physical characteristics of the devices that are included in the network . For example the device monitor may determine an amount of throughput of a device a unique identifier of a device an amount of available stored energy on a device and or or an action a device is configured to perform. The device monitor may monitor physical characteristics of devices included in the network to for example determine a level of fitness of the services hosted by the devices that are included in the network . The network monitor also includes the service monitor . The service monitor monitors the service instances that are currently available to the service system . Thus the service monitor monitors the service instances that are running on the devices currently included in the network . The service instances that are running on the devices currently included in the network may be referred to as the service landscape. Additionally the service monitor uses information from the device monitor to determine the fitness of the services hosted by the devices that are included in the network .

As discussed above the devices included in the network may change over time. The devices included in the network at a time t include a vibration sensor temperature sensors and and a PLC Programmable Logic Controller . However a moisture sensor is not included a device in the network at time t. The devices that are included in the network provide information to the network monitor . Thus in the example shown in the devices provide information to the network monitor as indicated by arrows respectively. The temperature sensors and each read a temperature of a location near the sensor and one or more of the sensors and may have an instance of a temperature reading service. At time t the temperature sensor produces a temperature reading of 11 degrees Celsius C. and the temperature sensor produces a reading of eight degrees Celsius. The temperature sensors and can read temperatures of other objects in the network .

In response to the query the service system may compare the requested type of service to service types stored in the service type repository to select a collection of matching service types that satisfy the query . In some implementations and as discussed more below with respect to the query may be augmented with contextual and semantic information before a comparison is performed. After matching service types have been identified the service system may identify active service instances that are embedded on one or more devices. Active service instances are instances of services currently running executing or otherwise available on one or more devices included in the network and that are of the same type as the type of service included in the collection of matching service types. For example for the query requesting a service of reading a temperature of a particular object e.g. pipe A a first active instance of a temperature reading service embedded on the temperature sensor and a second active instance of a temperature reading service embedded on the temperature sensor may be determined.

Determined active service instances which are capable of satisfying the query may be ranked. For example instances may be ranked on a quality of service QoS measurement. In some implementations the ranking may be based on the closeness of the current context of the user e.g. location application currently used etc. to the corresponding context of the service instance e.g. physical proximity and or measure of relatedness to user application . The ranking of instances also may be based on a combination of such context comparisons rather than on a single context comparison. In some implementations active instances e.g. all active instances or active instances meeting a certain criteria may be displayed to the user e.g. on an interface presented by the application . For example active instances having a service quality measurement exceeding a threshold may be displayed for selection. The user may select an active instance for example from a list of displayed active instances. The user may choose to invoke the service provided by the selected active instance.

For instance for the example query the user may be presented with a list of service instances which include a temperature reading service instance offered by the temperature sensor and a temperature reading service instance offered by the temperature sensor . Suppose the user selects a temperature reading service instance offered by the temperature sensor and suppose also that the user selects an option to invoke the corresponding service. In this example the user may be presented with an output of the temperature reading service e.g. 11 degrees Celsius . A request to invoke the temperature reading service may be communicated to the temperature sensor by a message . In an example implementation the message may be a SOAP message sent to a web service that runs on the device and the device may reply by a SOAP response that includes the requested value. In yet another example implementation the temperature service may send unsolicited messages that are cached by the service monitor and the last read value may be presented to the requesting user or application.

The network has a dynamic organization that accommodates removal of services from the network and addition of services to the network . For example a service instance may be embedded on a device that is added to the network after initial population of the service type repository . Thus in some examples the type of service that is embedded on the newly added device is not included in the service type repository . As another example a service instance embedded on a device may be inactive when the service type repository is initially populated and may later become active. Other examples of occurrences that may lead to the removal or addition of services that are exposed on the network include the physical removal or failure of a device.

If no active service instances are identified by an initial search for a service instance matching the user s request the discovery module may determine if active service instances exist that were not known beforehand. For example the discovery module may identify service instances that have not yet been registered. The discovery module may determine whether devices have been added or removed from the network which types of services are available from the devices currently included in the network and may update the service type repository with updated service type information.

For example referring to the example shown in at a time t the temperature sensor has failed a temperature reading service instance that was active at the time t is no longer active and there is no longer communication between the temperature sensor and the device monitor . Also at time t the temperature sensor has been removed or unregistered from the network and there is no longer communication between the temperature sensor and the device monitor . The failure of the temperature sensor and the removal of the temperature sensor may be discovered by the discovery module .

Also at time t the moisture sensor is included in the network . The moisture sensor may be discovered by the discovery module . The discovery module may broadcast or multicast or groupcast a message to all or all the relevant devices exposed on the network . For example a message from the discovery module may be received by the moisture sensor requesting that the moisture sensor respond with information indicating the types of services available from the moisture sensor . In some implementations the service type repository may be updated based on the response from the moisture sensor .

In the example shown in a query requesting a moisture sensing service is received from the application . In this example the query asks whether there is liquid in pipe A and the service system determines that a moisture sensing service offered by the moisture sensor can satisfy the request included in the query . Thus even though the moisture sensor was added to the network after the population of the service type repository and the service type repository may not list moisture sensing as a service the system is able to discover the newly added sensor with the discovery module .

Referring to at a time t the moisture sensor is active and is communicating with the network monitor as indicated by a connection . The user may select and request to invoke a moisture sensing service instance running on the moisture sensor which results in the sending of a response to the application indicating the status of the object as provided by the requested service. In this example the moisture sensing service running on the moisture sensor indicates that there is no fluid in pipe A .

If the discovery module does not find active instances capable of satisfying the request included in the received query e.g. a query such as the query or the query the service system may create an active instance having a type of the requested type of service. A device capable of hosting a requested service may be identified. Instructions may be retrieved from the service type repository and installed on the identified device. For example an application or user may request a temperature reading expressed in degrees Kelvin. The service system finds a suitable temperature service type in the service type repository but because the temperature sensors included in the network currently only have the instances of the Celsius version of the temperature service installed no matching services instances are found either in the service type repository or by forced discovery performed by the forced discovery module . Thus the service system may determine that the temperature sensors include in the network are capable of running the Kelvin version of the service type and install a new hosted service instance on the temperature sensors. The temperature sensors subsequently deliver the temperature values in Kelvin as requested.

Referring to a system includes a service system that allows a user to search for services exposed on a network that includes zero or more devices such as a device . When the network includes zero devices the network may be considered empty. The service system may be similar to the service system and the device may be similar to the devices both of which are discussed above with respect to . The service system includes an input module a query system a service lookup module a service type repository a network monitor a discovery module a service injection module a processor one or more I O input output devices and a memory module . The service system may communicate with one or more devices .

The input module may accept input from a user and or from an automated process. That is in some implementations the user of the service system may be a machine and the user input may be received from an automated process running on the machine and in other implementations the user may be a person that interacts with the service system directly. In some implementations the user of the service system may be an application such as an Enterprise Resource Planning EPR or Customer Relations Management CRM application. The input module may for example accept a query input that includes a request for a particular type of service. The input module also may for example accept user input that selects an active service instance from a display of one or more active service instances capable of satisfying a request for a type of service.

In the example shown in the query system includes a query augmenter and a context extraction module . The query augmenter may augment a received query with contextual and semantic information. An augmented query may include for example a requested type of service and information relating to the requested type of service. Information relating to the requested type of service may be determined as a result of the query augmenter performing one or more query strategies. For example a query strategy may involve determining one or more search words to add to a received query based on semantics and ontologies. In another example a query strategy may include determining synonyms for the words in the query and adding the synonyms to the query to produce the augmented query.

The query augmenter also may augment a query with contextual information extracted by the context extraction module . Extracted contextual information may indicate a context in which a query was generated. For example contextual information may include a location from which the query was generated and an application from which the query was generated. Determining an application from which the query was generated may further indicate an application type such as ERP Enterprise Resource Planning CRM Customer Resource Management or a database monitoring tool. The location from which the query was generated may be used to for example locate those devices that are running instances of a requested type of service and are within a certain physical proximity of the location from which the query was generated.

The service lookup module may compare an augmented query received from the query augmenter to types of services stored in the service type repository to create a collection of matching service types that satisfy a requested type of service. The service lookup module may identify active instances of services that have a type included in the collection of matching service types where the active instances are instances of services that are running and embedded on one or more devices . Active service instances may be ranked according to a ranking algorithm. For example the collection of matching service types may include more than one active service instance and those active service instances may be ranked. In some implementations the active service instances may be ranked according to a determined quality of service measurements of the service instance. The determined quality of service of a particular service instance provides a measure of the quality and reliability of the service. The quality of service may be based in part on one or more quality of service measurements of the device that the service instance is installed on. For example the device may be a temperature sensor on which a temperature service is embedded. The quality of the temperature service may be determined based on the variation of the temperature reading produced by the temperature sensor and provided by the temperature service when the temperature sensor is placed in an area of constant temperature. For example if the temperature sensor produces a wide variation of temperature readings while the temperature of the region around the temperature sensor is constant the quality of the temperature service embedded on the temperature sensor would be considered to be rather poor. In contrast if the temperature sensor produced a relatively constant temperature in this type of environment the temperature service would be considered to be of relatively high quality. In another example a location sensor that can sense location at a frequency of 10 Hz ten times per second is assumed to deliver a higher QoS quality of service than a location sensor that measures location at a frequency of 0.1 Hz once every ten seconds .

The service type repository stores definitions of types of services. The service type repository may be similar to the service type repository discussed above with respect to . Service types are descriptions of services that are independent of a particular running instance of a service. A service type definition associated with one or more services may include a description of the service a description of an interface for interacting with a device on which the service is embedded and other metadata. In some implementations a service type may be described using an WSDL Web Service Definition Language description e.g. a description without a concrete endpoint reference . In another example the service may be described as a set of extensible Markup Language XML schemas to describe a REST like interface but without concrete resource Uniform Resource Locators URLs . A REST like interface may also be described in the Web Application Description Language WADL or the Web Service Description Language WSDL 2.0 which also supports REST interfaces. In yet another example the interface may be described as names of name value pairs of a distributed knowledge base. In this implementations communication with the service includes reading and writing the values of the name value pairs. Service types may be independent of service instances.

The service type repository may be for example a relational database that logically organizes data into a series of database tables. Each database table arranges data in a series of columns where each column represents an attribute of the data stored in the database and rows where each row represents attribute values . The service type repository may be for example an object oriented database that logically or physically organizes data into a series of objects. Each object may be associated with a series of attribute values. The service type repository also may be a type of database management system that is not necessarily a relational or object oriented database. For example a series of XML eXtensible Markup Language files or documents may be used where each XML file or document includes attributes and attribute values. In another example XML pieces may be stored in the database.

The service system also includes the network monitor . The network monitor includes a service monitor and a device monitor . The network monitor may be similar to the network monitor and the service monitor may be similar to the service monitor both of which are discussed above with respect to . The service monitor monitors devices included in the network to determine instances of services that are currently exposed on the network. The service monitor determines instances of services running on the device . The service monitor monitors the service instances that are currently available to the service system . That is the service monitor monitors the service instances that are running on the devices . Additionally the service monitor uses information from the device monitor to determine the fitness of the services hosted by the devices .

The device monitor monitors devices such as the device that are included in the network. In some implementations the device monitor monitors the devices constantly. The device monitor determines one or more physical characteristics of the device . The device monitor may be similar to the device monitor discussed above with respect to . For example the device monitor may determine an amount of throughput of a device a unique identifier of a device an amount of available stored energy on a device or an action a device is configured to perform. The device monitor may monitor physical characteristics of devices for example to determine a level of fitness of the services hosted by the devices .

The service system also includes the discovery module . The discovery module may be similar to the discovery module discussed above with respect to . For example if no active service instances are identified by the service lookup module the discovery module may determine if active service instances exist that were not known beforehand. For example the discovery module may identify service instances that have not yet been registered in the service type repository and or may determine whether devices that are running services have been added or removed from a network. In some implementations the discovery module may determine types of services available from the devices and may update the service type repository with updated service type information. Newly discovered service types can be automatically added to the service type repository or new service types can be added after a user reviews the newly discovered service types and determines which service types to add to the service type repository . As another example newly discovered service types can be selectively added to the service type repository based on criteria such as if a device owner identifier is included in a set of recognized identifiers e.g. to only add newly discovered service types announced from recognized devices .

If no active instances are discovered by the discovery module the service injection module may create an active instance of a service having a type of a requested service type. To create the active instance of a service the service injection module may retrieve instructions from the service type repository . The service injection module may install the retrieved instructions on the device . When embedded on and executed by the device the retrieved instructions create an active service instance.

The service system also includes the processor . The processor may be a processor suitable for the execution of a computer program such as a general or special purpose microprocessor and any one or more processors of any kind of digital computer. In some implementations the service system includes more than one processor . The processor may receive instructions and data from the memory module . The memory module may store instructions and data corresponding to any or all of the components of the service system . The memory module may include read only memory random access memory or both.

The I O devices are configured to provide input and or output to from the service system . For example the I O devices may include a mouse a keyboard a stylus or any other device that allows the input of data into the service system or otherwise communicate with the service system . The I O devices may also include a display a printer or any other device that accepts data from the service system and outputs the accepted data to a user of the service system For example in some implementations the active instances of services having a type that is included in the collection of matching service types from the service type repository may be shown on a display such that a user of the service system may select one or more active instances.

The service system is in communication with a network of devices such as the device . The example device shown in includes embedded services an announcement service device specific hardware a processor one or more I O devices a memory module a power source and a communications port . The embedded services provide information about the device and or trigger functionality of the device . For example the device may be a temperature sensor and a temperature reading service embedded on the temperature sensor may read and output a value produced by the temperature sensor. The embedded services may provide information about a physical characteristic of the device . A physical characteristic may be for example an amount of throughput of the device a unique identifier of the device an amount of available stored energy on the device or an action the device is configured to perform. Continuing the example of the device being a temperature sensor the physical characteristic may be an identifier of the device that indicates that the temperature sensor is located in an oven that is used to in the manufacture gourmet cat food that is specially formulated for tonkinese cats. Another example of a physical characteristic of such a temperature sensor is the type of temperature sensing element included in the temperature sensor. For example the temperature sensor may be identified as including a thermocouple.

The announcement service may provide information about the types of services provided by the device . For example the discovery module may send a broadcast message requesting that all devices announce their available services and the devices may respond using the announcement service . Additionally the device may without prompting from another system use the announcement service to announce available services when the device comes online or becomes active or announces these periodically or at random intervals.

Each type of device may include device specific hardware . For example a temperature sensor may include hardware for sensing temperature an identifier reader device may include an RFID Radio Frequency Identification reader and or a barcode reader and a vibration sensor may include hardware for detecting vibration. The device may also include or communicate with the one or more I O devices . The I O devices provide input and or output to from the device .

The processor may be a processor suitable for the execution of a computer program such as a general or special purpose microprocessor and any one or more processors of any kind of digital computer. The processor may receive instructions and data from the memory module . In some implementations the device includes more than one processor . The memory module may include read only memory random access memory or both.

In some implementations the power source may be a portable power source that is included within the device such as a battery. In other implementations the power source may be external to the device . In yet other implementations the power source is integrated with the device . The communications port allows the device to communicate with the service system and with other devices. The communications port may accept wireless or wired data connections with the other devices. In some implementations the communications port includes both wireless and wired data connections.

Referring to a system includes an application . The application may allow a user to input a query to determine whether a type of service is provided by one or more devices . The device may include one or more hosted embedded services . For example in a warehouse environment various devices may be included in a network and these devices may act to control a conveyor belt system that is in the warehouse. The various devices may include a vibration sensor that offers a service to communicate a sensed degree of vibration of the conveyor belt. A temperature sensor may offer a service that communicates a sensed temperature of a motor powering the conveyor belt. Another sensor may offer a service communicating the speed of the motor. A proximity sensor may offer a service that communicates whether or not an object is in front of the sensor e.g. such a sensor may be used to determine whether an object has reached the end of the conveyor belt . In some implementations the embedded service is a software component implementing an action that can be triggered e.g. invoked by a client of the device .

The query received by the application may be submitted to a service system . The query may request a particular service. The service system may use a query augmentation module to augment the received query with context and semantics. A service type lookup module may compare an augmented query received from the query augmentation module to types of services stored in a service type repository to create a collection of matching service types that satisfy the requested type of service.

In a more detailed example and as shown in a query augmenter can use one or more query strategies to enhance an initial query inputted into an application . For example the initial query may include a search phrase that includes one or more search keywords. A query strategy may be employed which looks up each user entered keyword in a thesaurus online encyclopedia or other resource to find additional keywords which are synonyms of or otherwise related to user entered keywords e.g. translations of the user entered keyword into another language or into a numeric code . The additional keywords may be added to the user entered keywords. Other query strategies may be used.

As a more specific example suppose the initial query is a request to determine whether an identification reading service is available. The query augmenter may employ the query strategy to find additional keywords such as bar code and RFID that are related to the query . The augmented query can be presented as a suggested query to the user using a query assistant module . The query assistant module may allow the user to accept or reject the suggested additional keywords. In some implementations the additional keywords determined by the query augmenter are automatically added to the initial query without user involvement.

As another example the initial query is entered in the context of the conveyor belt system example described above and the initial query is a search phrase of belt speed intended to determine whether there is a service available to determine the speed of a conveyor belt. The query augmenter may find additional keywords or phrases such as conveyor motor speed and or velocity and or Geschwindigkeit e.g. the German translation .

The user query may also be augmented by contextual information extracted by a context extractor . For example the user s location may be identified and it may be determined that the user s location is relevant to the query . In the example where the query is a request for an identification reading service the user s location may be relevant because an identification reading device located in close proximity to the user may be more useful than a device located farther away from the user. The location of the user may be determined for example based on a determined location of a display terminal that a user uses to enter the query . For example the user may be working in a warehouse that has many display terminals. Other contextual information may be relevant to the query . For example the type of application e.g. ERP CRM or other application may be relevant to the query .

A service type lookup module may search a service type repository for service types which may relate to the augmented query. The service type lookup module may produce a list of service types which satisfy the initial query . In some implementations the list of service types is a set of WSDL elements which do not include endpoints.

Returning to a service instance search module may determine one or more active service instances embedded on one or more devices that have a type included in the collection of matching service types produced by the service type lookup module . For example a service monitor may monitor the service instances that are currently available to the service system . Multiple service instances having a type included in the collection of matching service types may be identified. For example multiple service instances may have the same interface and provide the same or similar functionality. If exactly one active service instance is identified the identified service instance may be presented to the user in a presentation interface of the application . If more than one active service instance is identified the identified active service instances may be ranked by a service instance ranking module according to how relevant each service instance is to the user s request. Active instances e.g. all active instances or active instances meeting a certain criteria may be displayed to the user e.g. on an interface presented on the application . The user may select an active instance for example from a list of displayed active instances. The user may choose to invoke the service provided by the selected active instance.

In a more detailed example and as shown in a service instance ranking module receives a list of service types e.g. a set of WSDL elements without endpoints such as produced by the service type lookup module of . The service instance ranking module may send the list of service types as well as context information e.g. context information extracted by the context extractor of to a service monitor . The service monitor may find all currently available service instances having a type included in the list of service types that also have a context related to the context information.

The service monitor may also use information from a device monitor to determine the fitness of the currently available service instances. For example the device monitor may determine one or more physical characteristics of each device hosting one or more active service instances. For example the device monitor may determine an amount of throughput of the device a unique identifier of the device or an amount of available stored energy on the device.

The determined physical characteristics may collectively indicate a quality of service for the device. For example the device monitor may determine a low level of stored energy remaining on a particular device. The service monitor may in turn deem that the performance of the device is relatively poor because the device s ability to offer services may not be reliable in the near future.

The service monitor may also determine a quality of service for each of the active service instances. For example a quality of service of a service instance may be based on historical performance of the service. For example some service instances may have historically produced more consistent accurate and precise results than other service instances. Some service instances for example may have a history of producing erroneous and or inconsistent results e.g. results with a significant number of invalid or outlier values . Quality of service for a service may be application dependent and may be based on any application specific criteria.

The service instance ranking module receives a list of active service instances from the service monitor along with associated device and service quality of service information. The service instance ranking module may rank service instances according to one or more rating strategies . A rating strategy is an algorithm that may take into account device and service quality of service along with how well each service instance matches the context of the initial user query. A rating strategy may be selected from a collection of rating strategies automatically or a rating strategy may be selected by the user. A quality of result criteria may be applied to the output of the rating strategy . For example if the number of service instances having a particular e.g. satisfactory score is greater than a threshold a list of service instances may be delivered to the application. In some implementations the list of service instances is a set of WSDL elements with endpoints.

If the number of service instances having a satisfactory score is less than a threshold one or more other service instances may be discovered using a forced discovery module . The forced discovery module may be invoked automatically or may be invoked based on a user selection. If no satisfactory service instances are discovered by the forced discovery module a service instance may be created by an on demand injection module . The on demand injection module may be invoked automatically or may be invoked in response to a user selection.

Returning to as discussed above if no active service instances are found by ranking service instances one or more other service instances may be discovered such as by using a forced discovery module . The forced discovery module may discover devices which had been previously unavailable. For example the discovery module may identify devices that have not yet been registered. The forced discovery module may send a broadcast or multicast or groupcast message to all or all relevant devices on a network requesting that each device announce or re announce available services using an announcement service . Service instances discovered by the forced discovery module may be subsequently ranked by the service instance ranking module for example using information received from the service monitor and a device monitor .

As mentioned above if no satisfactory service is found by a forced discovery approach a service instance may be created such as by a service injection module . A device capable of hosting a requested service may be identified. Instructions may be retrieved from the service type repository and installed on the identified device .

Referring to an example process may be used to discover services. The example process may be performed by one or more processors included in a service system such as the service system or the service system discussed above with respect to or by a processor included in any other system.

A service type repository is populated with types of services exposed on a network . The types of services exposed on the network may be the services that are currently running on devices that are included in the network at the time that the service type repository is populated. For example the service type repository described above with respect to may be populated.

A query that includes a request for a type of service is received . For example the query may be received by the service system as described above with respect to . As another example a user may enter a query such as I would like to find an RFID service . A query augmenter e.g. query augmenter described above with respect to may augment the received query such as by determining synonyms or other additional keywords related to words in the user s initial query. For example the query augmenter may determine additional related queries such as I would like to find a bar code reading service and I would like to find a dot matrix service. 

The requested type of service is compared to the types of services in the service type repository to select a collection of matching service types . If the service type repository includes service types that match the requested type of service the collection of matching service types is one or more of the matching service types. The collection of matching service types may be implemented as a set of WSDL elements without endpoints.

Active instances of services that have a type included in the collection of matching service types are determined . For example active instances may be determined by a service monitor e.g. service monitor as described above with respect to . In the example where the user is looking for an RFID service active instances of RFID services may be determined. Determined instances may be presented to the user.

If no active instances are determined active instances of services that have a type included in the collection of matching service types are discovered . For example an RFID reader device offering an RFID service may be added to the network after the service type repository is populated. The RFID service may be discovered e.g. by the forced discovery module as described above with respect to and a type definition corresponding to the discovered RFID service may be added to the service type repository. The discovered RFID service instance may be presented to the user.

The system includes a processor a memory a storage device and an input output device . Each of the components and are interconnected using a system bus . The processor is capable of processing instructions for execution within the system . In one implementation the processor is a single threaded processor. In another implementation the processor is a multi threaded processor. The processor is capable of processing instructions stored in the memory or on the storage device to display graphical information for a user interface on the input output device .

The memory stores information within the system . In one implementation the memory is a computer readable medium. In one implementation the memory is a volatile memory unit. In another implementation the memory is a non volatile memory unit.

The storage device is capable of providing mass storage for the system . In one implementation the storage device is a computer readable medium. In various different implementations the storage device may be a floppy disk device a hard disk device an optical disk device or a tape device.

The input output device provides input output operations for the system . In one implementation the input output device includes a keyboard and or pointing device. In another implementation the input output device includes a display unit for displaying graphical user interfaces.

The features described can be implemented in digital electronic circuitry or in computer hardware firmware software or in combinations of them. The apparatus can be implemented in a computer program product tangibly embodied in an information carrier e.g. in a machine readable storage device or in a propagated signal for execution by a programmable processor and method steps can be performed by a programmable processor executing a program of instructions to perform functions of the described implementations by operating on input data and generating output. The described features can be implemented advantageously in one or more computer programs that are executable on a programmable system including at least one programmable processor coupled to receive data and instructions from and to transmit data and instructions to a data storage system at least one input device and at least one output device. A computer program is a set of instructions that can be used directly or indirectly in a computer to perform a certain activity or bring about a certain result. A computer program can be written in any form of programming language including compiled or interpreted languages and it can be deployed in any form including as a stand alone program or as a module component subroutine or other unit suitable for use in a computing environment.

Suitable processors for the execution of a program of instructions include by way of example both general and special purpose microprocessors and the sole processor or one of multiple processors of any kind of computer. Generally a processor will receive instructions and data from a read only memory or a random access memory or both. The essential elements of a computer are a processor for executing instructions and one or more memories for storing instructions and data. Generally a computer will also include or be operatively coupled to communicate with one or more mass storage devices for storing data files such devices include magnetic disks such as internal hard disks and removable disks magneto optical disks and optical disks. Storage devices suitable for tangibly embodying computer program instructions and data include all forms of non volatile memory including by way of example semiconductor memory devices such as EPROM EEPROM and flash memory devices magnetic disks such as internal hard disks and removable disks magneto optical disks and CD ROM and DVD ROM disks. The processor and the memory can be supplemented by or incorporated in ASICs application specific integrated circuits .

To provide for interaction with a user the features can be implemented on a computer having a display device such as a CRT cathode ray tube or LCD liquid crystal display monitor for displaying information to the user and a keyboard and a pointing device such as a mouse or a trackball by which the user can provide input to the computer.

The features can be implemented in a computer system that includes a back end component such as a data server or that includes a middleware component such as an application server or an Internet server or that includes a front end component such as a client computer having a graphical user interface or an Internet browser or any combination of them. The components of the system can be connected by any form or medium of digital data communication such as a communication network. Examples of communication networks include for example a LAN a WAN and the computers and networks that form the Internet.

The computer system can include clients and servers. A client and server are generally remote from each other and typically interact through a network such as the described one. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client server relationship to each other.

A number of implementations have been described. Nevertheless it will be understood that various modifications may be made without departing from the scope of the disclosure. Accordingly other implementations are within the scope of the following claims.

