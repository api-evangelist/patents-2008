---

title: Internet location coordinate enhanced domain name system
abstract: An exemplary architecture is for an Internet Location Coordinate enhanced Domain Name System (DNS). An exemplary method includes requesting information for a plurality of servers associated with a network domain name of a Domain Name System (DNS) where the information includes information based in part on packets transmitted by each of the plurality of servers to a plurality of network beacons; receiving the requested information from a name server associated with the Domain Name System (DNS); and, based in part on the received information, selecting an optimal server for the network domain name. Other methods, devices and systems are also disclosed.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07991879&OS=07991879&RS=07991879
owner: Microsoft Corporation
number: 07991879
owner_city: Redmond
owner_country: US
publication_date: 20080303
---
The Domain Name System DNS and its associated protocols emerged in the early 1980s to organize the growing number of resources connected to and making up the ARPA Internet. As stated in an early and now obsolete Requests for Comments RFC 882 of the Internet Society the basic need is for a consistent name space which will be used for referring to resources for more recent RFCs see e.g. 1034 or 1035 . The DNS of the early 80s targeted inadequacies of the Network Information Center NIC table based mechanism for mapping between host names and Internet addresses and the lack of harmonization among burgeoning electronic mail systems. As stated in RFC 882 through the DNS w e should be able to use names to retrieve host addresses mailbox data and other as yet undetermined information .

Some 25 years later the DNS as currently implemented is somewhat underutilized. In part underutilization is linked to the DNS s simplicity. In the DNS names refer to a set of resources and queries contain resource identifiers. As stated in RFC 882 t he only standard types of information that we expect to see throughout the name space is structuring information for the name space itself and resources that are described using domain names and no nonstandard data . Thus DNS as currently implemented requires no additional data resources are typically described using only domain names and a structured name space.

The DNS alone fails to provide a remedy to severe congestion issues stemming from rising Internet traffic e.g. due to web innovations globalization and increasing connectivity to billions of people in emerging markets . In other words in the DNS as currently implemented there is no mechanism to describe how resources exist in a network environment or to describe local conditions in a network environment. As described herein various exemplary systems methods etc. can describe network conditions and make the Internet more efficient.

An exemplary architecture is for an Internet Location Coordinate ILC enhanced Domain Name System DNS . An exemplary method includes requesting information for a plurality of servers associated with a network domain name of a Domain Name System DNS where the information includes information based in part on packets transmitted by each of the plurality of servers to a plurality of network beacons receiving the requested information from a name server associated with the Domain Name System DNS and based in part on the received information selecting an optimal server for the network domain name. Other methods devices and systems are also disclosed.

Various exemplary methods devices and system described herein pertain to networks and more specifically to techniques to enhance the Domain Name System DNS . An exemplary system includes beacons in a network that provide information to participants about their respective locations in a network space. As described herein a participant can be any resource on a network e.g. a client a server etc. . Such a system can aid in routing network traffic and hence improve network efficiency. In various examples the network is the Internet. In various examples transmission of location information can occur via DNS and TXT records via Extensions to DNS EDNS and explicit new record types or entirely outside DNS but applied to select an address returned by a DNS query.

The system may depend on time distance network traffic machine workload bandwidth etc. To understand better how such a system may be defined consider a vehicle on a major interstate highway en route to an airport. At various locations along the highway the state department of transportation transmits information to displays that provide information to vehicle operators. When the vehicle is at a display location the department of transportation may transmit a travel time message that indicates how many minutes it will take for a vehicle at the display location to reach the airport. Such information is helpful as the vehicle operator may decide to take an alternate route. Further the reasons for the stated travel time may be irrelevant to the vehicle operator. In other words the vehicle operator may not care whether the travel time is lengthy due to road construction holiday traffic an accident etc. While the department of transportation may choose to display a specific reason or reasons such information may not add much value to the information conveyed by a simple travel time in minutes.

As described herein in various examples an Internet Location Coordinate ILC may be a number a set of numbers or a set of numbers where each one is associated with some additional information e.g. a tuple for each beacon . An ILC may indicate a local position to a client where this position is with respect to a network logical space measuring travel time or congestion and not necessarily geographic location. ILCs may be compared to estimate travel time or congestion between participants. Such simplicity is in line with the DNS and such an ILC may be carried according to an existing DNS protocol.

Referring again to the system of the client acquires information associated with three beacons     and  . For example a beacon can act as a reflector where the client can send a packet to the beacon and receive a response packet. The client can then determine the round trip time RTT to and from a beacon e.g. a travel time . As the client performs the same process with multiple beacons i.e. the beacons     and   the client becomes more aware of its surroundings. In particular the client becomes aware of its own condition in the system where its own condition may be represented according to a number or a set of numbers etc. In the example of the condition is shown as Internet Location Coordinate ILC . While the example of shows three beacons other numbers of beacons may be used. Generally two or more beacons may be used.

As mentioned an ILC participant can be any resource on a network. Hence the web servers     and   may be participants that can determine respective ILCs using the beacons . For example the web server   may transmit packets to the beacons     and   and receive corresponding return packets. As the web server   may know a priori information about the beacons     and   it can now determine its position in the system e.g. its ILC .

As described herein the exemplary system allows clients to determine their position in a network logical space. Such information can be used for a variety of purposes. For example where the web servers     and   provide essentially identical services such information can be used to allow the client to connect to the best web server e.g. the closest server based on ILCs .

The participants layer includes a plurality of networked clients for example the client and the web servers     and   of . Each of the clients in the participants layer includes an Internet Location Coordinate ILC module which is typically a software component for interpreting information from packets sent to and received from beacons. Such a module may determine an ILC for a client on a network. Such a module may be implemented as a component of an operating system. Hence according to the architecture an exemplary locating mechanism requires network beacons and participant instruction modules. Such a mechanism can optionally be implemented without altering the existing DNS. Of course a surrogate participant may be configured to determine an ILC for another network resource e.g. a similarly situated resource .

In an entry block a domain name is entered e.g. www.msn.com . In turn a DNS server may identify a plurality of servers associated with the domain name for example web server     and  . As explained each of the servers includes an ILC module to ascertain their respective ILCs. In a receipt block the client receives information about the group of servers along with the ILC for each of the servers in the group. In a determination block the client determines the optimal server based on the ILCs for the servers and its own ILC.

In the example of the client may be a user connected to the Internet and the domain name may be www.msn.com. This domain name has a plurality of associated servers at various geographical locations around the world. Given the exemplary architecture where beacons are scattered throughout the networked world each of the www.msn.com domain name servers knows its own ILC. When the DNS communicates with each server each server can respond by sending its ILC to the DNS server which in turn transmits this information to the client . The ILC module can then determine which server is the optimal server based on the client s ILC and those of the servers. In general the optimal server is the server that can provide the most efficient service to the client .

As mentioned an exemplary system can enhance DNS as DNS is currently implemented. shows DNS components a DNS client and a DNS server along with exemplary ILC enhanced DNS components an exemplary ILC enhanced DNS client and an exemplary ILC enhanced DNS server .

The DNS components include domains where a domain is a logical group of computers in a large network and where access to each computer in a given group is controlled by a name server a distributed database that is an archive of information about the computers in a network name servers where a name server contains address information about other computers on the network where this information can be given to client computers that make a request to the name server clients that request information from a server specifically where a client requests network addressing information from the name servers and resolvers that provide clients with address information about other computers on the network.

The client includes an operating system with a local resolver and one or more local applications . The server includes an operating system with a local resolver and one or more local applications .

The exemplary ILC enhanced DNS components include domains a distributed database name servers clients and resolvers which may be as in the DNS components yet further include beacons and ILC instructions . An exemplary ILC enhanced client includes an operating system a local resolver one or more local applications and ILC instructions . An exemplary ILC enhanced server includes an operating system a local resolver one or more local applications and ILC instructions .

Often the DNS resolver has an associated cache containing information about recent lookups. If this cache can provide an answer to the request the resolver will return the value in the cache to the application that made the request. If the cache does not contain an answer the resolver will send the request to one or more designated DNS servers.

In the method the cache does not contain an answer and at a receipt block the request is received by the user s ISP server . The ISP server has a local resolver and typically an associated cache. If the associated cache does not provide an answer for the requested domain name then the ISP server transmits the request to the DNS server . Per a receipt block the DNS server receives the domain name.

The DNS server per a search block performs a recursive search using instructions provided by a search module e.g. a standard DNS search . The search generally starts at a particular network node e.g. at a nameserver in a local ISP and progresses recursively until matching servers are found for the domain name. This matching process can contact all of the matching servers per a contact block where an opportunity exists for communication of ILC information. In the system the server includes ILC instructions that can ascertain an ILC for the server . Upon contact with the DNS server the ILC of the server may be communicated according to a standard DNS protocol. In the example of the server is also associated with the domain name and contacted by the DNS server . The server also provides an ILC to the DNS server .

According to the method after the servers have been contacted per a return block address information and corresponding ILCs flow to the ISP server . Per another return block the ISP server provides this information to the client where the client can determine whether the server or the server is the optimal server.

As mentioned the method may use a DNS protocol e.g. UDP TCP etc. . DNS primarily uses UDP on port to serve requests. Almost all DNS queries consist of a single UDP request from a client followed by a single UDP reply from a server. TCP normally comes into play when response data size exceeds 512 bytes or for such tasks as zone transfer. Some operating systems such as HP UX are known to have resolver implementations that use TCP for all queries even when UDP would suffice.

 Extensions to DNS EDNS is an extension of the DNS protocol that can enhance transport of DNS data in UDP packets and that adds support for expanding the space of request and response codes see e.g. RFC 2671 .

As described herein ILC information may be transported in a packet such as a UDP packet or a TCP packet. shows an exemplary DNS system where a UDP packet includes a portion for standard DNS information and a portion for ILC information . As shown a client transmits a request to a DNS server using a UDP packet . The DNS server has previously been contacted by a first server and a second server where the servers provide standard information and respective ILC information . The DN server then communicates the UDP packet to the client with the standard information and the ILC information .

In the example of the ILC information is structured to allow the client to associate it with the proper server. For example the order of information in the standard portion of the UDP packet may dictate the order of the ILC information in the ILC information portion of the UDP packet.

As described herein a method for communicating ILC information may be client dependent or server dependent . A client dependent method commences when a client issues a query for the domain name w.w.com . Specifically the client queries for the A record w.w.com type A and for any associated ILC text records e.g. ilc.w.w.com type txt . The method provides significant backward compatibility however it doubles the number of DNS queries. As these queries are done at about the same time they will have a minimal impact on performance. Of course the impact will increase as the number of clients performing queries increases depending on timing and frequency of queries.

In a server dependent method when a client issues a query for the A record w.w.com type A a remote name server responds with the A record s and any associated ILC text records e.g. ilc.w.w.com type txt . In the method only a single query is required. Further procedures may be implemented to ensure that any additional TXT record is appropriately handled and not ignored.

In another server dependent method when a client issues a query for the A record w.w.com type A a remote name server responds with the A record s and any associated w.w.com records of a specialized type ILC. The method requires only a single query and servers are unlikely to ignore the ILC record since it is associated with the same label. In this example the ILC record type requires implementation in the DNS system.

In yet another server dependent method when a client issues a query for the A record w.w.com type A a remote name server responds with the A record s and any associated ILC Resource Record RR type. In the method the additional ILC records can contain an indicator of the record they are associated with in addition to the ILC information.

While the example of pertains to a travel time or transmission time based on a single packet to a beacon an exemplary method may send a train of packets to a beacon. Accordingly the packet train may be analyzed to provide a more accurate indication of travel time between the client and the beacon and to incorporate congestion information.

As described herein an ILC can represent latencies in a network. As latencies may change over time an ILC may be updated. For example as peak usage nears a participant may see its respective beacon RTTs increase whereas during non peak e.g. late night early morning holidays etc. the participant may see its respective beacon RTTs decrease.

An exemplary ILC may include information such as a time of measurement for a tuple received in response to a DNS request. Such information may be generated upon transmission of a packet or upon receipt of a packet. An exemplary method records a RTT for a beacon along with a freshness time where a stale time may indicate a problem with a participant.

In various examples participants may rely on the same set of beacons. In other examples the beacons for a client and a web server or group of web servers associated with a domain name may differ. In such circumstances additional information about the beacons may be used in selecting the best participant amongst a group of participants.

In a very basic configuration computing device typically includes at least one processing unit and system memory . Depending on the exact configuration and type of computing device system memory may be volatile such as RAM non volatile such as ROM flash memory etc. or some combination of the two. System memory typically includes an operating system one or more program modules and may include program data . The operating system include a component based framework that supports components including properties and events objects inheritance polymorphism reflection and provides an object oriented component based application programming interface API such as that of the .NET Framework marketed by Microsoft Corporation Redmond Wash. The device is of a very basic configuration demarcated by a dashed line . Again a terminal may have fewer components but will interact with a computing device that may have such a basic configuration.

Computing device may have additional features or functionality. For example computing device may also include additional data storage devices removable and or non removable such as for example magnetic disks optical disks or tape. Such additional storage is illustrated in by removable storage and non removable storage . Computer storage media may include volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. System memory removable storage and non removable storage are all examples of computer storage media. Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by computing device . Any such computer storage media may be part of device . Computing device may also have input device s such as keyboard mouse pen voice input device touch input device etc. Output device s such as a display speakers printer etc. may also be included. These devices are well know in the art and need not be discussed at length here.

Computing device may also contain communication connections that allow the device to communicate with other computing devices such as over a network. Communication connections are one example of communication media. Communication media may typically be embodied by computer readable instructions data structures program modules or other data forms. By way of example and not limitation communication media includes wired media such as a wired network or direct wired connection and wireless media such as acoustic RF infrared and other wireless media.

Although the subject matter has been described in language specific to structural features and or methodological acts it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather the specific features and acts described above are disclosed as example forms of implementing the claims.

