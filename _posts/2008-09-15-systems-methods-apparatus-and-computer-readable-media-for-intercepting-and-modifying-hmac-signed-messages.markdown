---

title: Systems, methods, apparatus, and computer readable media for intercepting and modifying HMAC signed messages
abstract: Systems, methods, apparatus and computer-executable instructions stored on computer-readable media for communicating a modified hash message authentication code (HMAC) signed message between two endpoints are provided. The HMAC signature of the message may include a plurality of components. In some cases, the HMAC signature is a Server Message Block (SMB) signature. The first and/or second endpoint may be a client, server, or host. Some embodiments of the present application utilize a proxy, such as a CIFS proxy. In one embodiment, HMAC signature information sent from the first endpoint to the second endpoint may be intercepted. A value for a component of the HMAC signature may be determined by, for example, using the intercepted HMAC signature information. The intercepted message may be modified, resigned using the intercepted HMAC signature information, and transmitted to a receiving endpoint.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08452968&OS=08452968&RS=08452968
owner: Blue Coat Systems, Inc.
number: 08452968
owner_city: Sunnyvale
owner_country: US
publication_date: 20080915
---
The present application relates to systems methods apparatus and computer readable media storing computer executable instructions for communicating a modified hash message authentication code HMAC signed message between two endpoints.

Asymmetric or public key cryptography may be used to facilitate secure communications between two or more endpoints typically within a computer network. Asymmetric cryptography requires the use of both a public and a secret key for a message transmitted and or received by an endpoint. The public key of an endpoint may be widely distributed while the secret key is kept secret. A recipient s public key is used to encrypt an incoming message and the message may only be decrypted by the corresponding secret key of the recipient when received. In this way a message encrypted with a recipient s public key may only be decrypted by the recipient s corresponding secret key.

A Hash Message Authentication Code HMAC is a type of asymmetric cryptographic message authentication code that uses a secret key and a cryptographic hash function to generate an authentication code for an endpoint. HMACs may be used to verify data integrity as well as the authenticity of a message.

HMACs are commonly used within the Server Message Block SMB protocol. The SMB protocol is used to provide a secure and authenticated mechanism for exchanging information within a computer network. SMB is commonly used on computers and networks using Microsoft products. SMB may be used to provide access to for example files hardware devices e.g. printers serial ports and other communication facilities within a computer network.

A new version of the SMB protocol SMB2 was introduced by Microsoft in 2006. Advantages of SMB2 over SMB1 the original version of SMB include an improved ability to combine multiple actions into a single action through using a new compounding mechanism and considerably less complex code and are not directed toward improving SMB1 s asymmetric cryptography.

Some Microsoft enabled computers and or networks use the Common Internet File System CIFS as a computer and or network platform. CIFS is based on SMB and allows file sharing across an intranet and or the Internet. The HMAC signature for a CIFS enabled system is typically an SMB signature.

Messages signed with an HMAC signature must typically be sent from endpoint to endpoint in an unmodified fashion because changing even a single bit of the message alters the result of the hashing algorithm that generates the HMAC or SMB signature. If the signature of a message is altered then the receiving endpoint will not be able to verify the signature of the message and the communication of the message will fail.

While the inability to alter HMAC signed messages is generally considered to be an important feature of HMAC based communications it is sometimes desirable to modify such messages. Such circumstances include for example acceleration of the message through a proxy pair or other network communication facility. Currently though when such modifications are applied to an HMAC signed message the modification process alters the original HMAC signature such that the signature cannot be verified by the receiving endpoint.

Thus systems methods and apparatus enabled to communicate a modified HMAC signed message to an endpoint are desired.

Systems methods apparatus and computer readable media storing computer executable instructions for communicating a modified hash message authentication code HMAC signed message between two endpoints are provided. The HMAC information associated with the message may include a plurality of components. In some cases the HMAC signature is a Server Message Block SMB signature. The first and or second endpoint may be for example a client server or host. Some embodiments of the present application utilize a proxy such as a CIFS proxy. In one embodiment HMAC signature information sent from a first endpoint to a second endpoint may be intercepted. A value for a component of the HMAC signature may be determined by for example using or analyzing the intercepted HMAC signature information.

A HMAC signed message sent from the first endpoint to the second endpoint may also be intercepted. The message may be modified and resigned using for example the determined values. The resigned message may then be sent to the second endpoint.

In one embodiment components of the HMAC signature may include for example a sequence number a connection signing use NTLM challenge response a secret key a public key a connection signing NTLM challenge response and or a message. The connection signing use NTLM challenge response the connection signing NTLM challenge response and or the message may be derived using for example intercepted HMAC signature information.

In some cases an initial sequence number for the beginning of an HMAC transmission session may be determined and the sequence number of the intercepted message may be derived using the initial sequence number.

In another embodiment the message may be transmitted along a transmission pathway and the transmission pathway may include interface entry points. HMAC signature information may then be intercepted at the interface entry points and a secret key for the intercepted message may be derived using the intercepted secret key.

In some embodiments a list of unmatched secret keys may be acquired at for example an interface e.g. an SSPI or GSS API entry point. A secret key on the list of unmatched secret keys may be matched with the modified message and a component of the HMAC signature may be determined. An HMAC signature for the modified message may be generated using for example the associated secret key and the determined component. It may then be determined whether the generated HMAC signature matches the HMAC signature of the intercepted message. When the signature matches the modified message may be resigned with the generated HMAC signature and transmitted to the second endpoint.

In another embodiment an application may generate the HMAC signature for the intercepted message. The application may be queried for information related to the intercepted message. Data may then be received that includes a secret key for the intercepted message and the data may be analyzed to determine the secret key.

In another embodiment HMAC signature information sent from the first endpoint to the second endpoint may be intercepted. The HMAC signature information may include for example a sequence number and a secret key. An HMAC signed message sent from the first endpoint to the second endpoint may be intercepted. A boundary of the message may be recognized and a sequence number of the message may be determined. A secret key for the message may be determined. The message may be modified. The modified message may then be resigned using for example the message boundary sequence number and or secret key. The resigned message may then be transmitted to the second endpoint.

Systems methods apparatus and computer readable media storing computer executable instructions for transmitting a modified Hash Message Authentication Code HMAC signed message between two endpoints are provided. HMAC signatures may be used to verify the credentials of for example transmitted and or received messages or endpoints within a computer network such as a local area network LAN a wide area network WAN and or a network of networks such as the Internet . Some embodiments may be enabled to utilize Microsoft s Common Internet File System CIFS . CIFS enabled systems are capable of sharing files across an intranet and or the Internet. The HMAC signature for a CIFS enabled system may be for example a Server Message Block SMB signature. Some embodiments may include an interface entry point such as a Security Support Provider Interface SSPI entry point or a Generic Security Service Application Programming Interface GSS API entry point. The systems methods apparatus and computer readable media disclosed herein are compatible with both SMB1 and SMB2 and other protocols that use HMAC or similar signatures.

Before discussing various embodiments of the invention some introduction is helpful. The SMB protocol and in particular the SMB1 version of that protocol generates a signature for a given SMB message by 

Of these 5 inputs into the signature generation algorithm three can be directly derived by snooping the communication between the endpoints involved therein. These include the ConnectionSigningUseNTLMChallengeResponse the SMB message and the challenge response. The sequence number is generated deterministically and can therefore be derived by careful book keeping. The Signing Session Key however is a secret known only to each of the endpoints. The present invention provides a method to obtain that session key.

For SMB2 signature generation is similar with implementation differences in the HMAC algorithm SHA1 vs. MD5 the length of the signature and other details. Nevertheless the same approach used for interception of SMB1 messages is applicable for SMB 2.0. Indeed the present invention provides a general technique of intercepting session secret keys for any protocol that uses such items for encryption integrity checking or authentication in order to provide successful man in the middle intervention and thus impersonate a client to a server or vice versa. The interception of the necessary secrets is entailed using Application Programming Interface API hooks for example the SSPI or GSS API hooks mentioned below.

As more fully described below the present solution relies on a CIFS or other proxy to recognize SMB message boundaries for both incoming and outgoing messages track sequence numbers for an SMB connection and determine the session signing key for a connection. SMB sequence number generation is fairly straightforward. In short the sequence number always starts at a known value at the beginning of connection establishments and increments by a well defined amount depending on what type of SMB message that is being sent. The Microsoft SMB protocol specification describes in detail how the signature is generated and so those details will not be repeated here.

Current implementations of the Microsoft Windows XP and Vista SMB clients rely on the SSPI interface to perform authentication during session setup and to negotiate which security package should be used. Therefore in various embodiments of the invention the present methods provide for intercepting key SSPI entry points used by the Windows SMB client to obtain the session key. In brief the SSPI interface is exposed via a kernel mode DLL and is consumed by another routine. A redirector determines what the session key is by querying an authentication package following completion of the authentication process. By way of example one API which may be used for such a query is ksecdd QueryContextAttributes with the SECPKG ATTR SESSION KEY flag set. The return value for this API is a dataset that contains the session key. Thus determining a session key is a relatively straightforward process of hooking the QueryContextAttributes entry point and intercepting the return value given when the SECKPG ATTR SESSION KEY flag is set.

Matching the session key returned by the SSPI interface to a given connection requires a few additional details. Consider that there may be multiple connections being processed and therefore each connection has to be matched with its session key. For each intercepted session key a series of operations are needed to match that key with a given SMB connection 

As should be apparent from the description above various embodiments of the present invention may be implemented with the aid of computer implemented processes or methods a.k.a. programs or routines that may be rendered in any computer language. Moreover some portions of this detailed description that follow are presented in terms of algorithms and symbolic representations of operations on data within a computer memory. These algorithmic descriptions and representations are the means used by those skilled in the computer science arts to most effectively convey the substance of their work to others skilled in the art. An algorithm is here and generally conceived to be a self consistent sequence of steps leading to a desired result. The steps are those requiring physical manipulations of physical quantities. Usually though not necessarily these quantities take the form of electrical or magnetic signals capable of being stored transferred combined compared and otherwise manipulated. It has proven convenient at times principally for reasons of common usage to refer to these signals as bits values elements symbols characters terms numbers or the like. It should be borne in mind however that all of these and similar terms are to be associated with the appropriate physical quantities and are merely convenient labels applied to these quantities. Unless specifically stated otherwise it will be appreciated that throughout the description of the present invention use of terms such as processing computing calculating determining displaying or the like refer to the action and processes of a computer system or similar electronic computing device that manipulates and transforms data represented as physical electronic quantities within the computer system s registers and memories into other data similarly represented as physical quantities within the computer system memories or registers or other such information storage transmission or display devices.

Where embodied as computer executable instructions such instructions may be executed on any computer system. In such instances the application may reside as a computer program stored in a computer readable storage medium such as but not limited to any type of disk including floppy disks optical disks CD ROMs and magnetic optical disks read only memories ROMs random access memories RAMs EPROMs EEPROMs magnetic or optical cards or any type of media suitable for storing electronic instructions. The algorithms and processes presented herein are not inherently related to any particular computer or other apparatus.

First and second endpoints and may be any appropriate endpoints for communication within a computer network or network of networks. One or the other of first and or second endpoints and may be for example a client host or server. HMAC modules and may be any form of security module capable of generating and or verifying an HMAC signature such as an SMB signature for a message.

Proxies and may be any proxies compatible with the endpoints and for example CIFS proxies. Interception modules and are configured to intercept communications transmitted to or from first and second endpoints and respectively. Exemplary intercepted communications include messages and security information such as secret and or public security keys for an endpoint. Modification modules and are configured to modify messages transmitted from or to the endpoints and respectively. Exemplary modifications include compression and or other actions to facilitate acceleration of messages across transmission pathway . Transmission pathway may be any appropriate pathway for the communication of messages between the endpoints and including wired and wireless communication links.

In step HMAC information associated with a message and or an endpoint is intercepted prior to transmission of the message from a first endpoint to a second endpoint i.e. the interception occurs within the secure environment of the endpoint so that the sensitive HMAC information is not exposed in the clear . The HMAC information associated with a message may include for example HMAC information associated with the transmitting endpoint and an HMAC signature for the message. The HMAC information may be intercepted by for example interception module or . The HMAC information may be intercepted at for example an API entry point. The intercepted HMAC information may include for example a public and or secret key for the first endpoint or second endpoint a sequence number for an HMAC transmission and or a message. In embodiments including Microsoft enabled systems or applications the intercepted HMAC information may include a connection signing use NT Lan Manager NTLM challenge response and or connection signing NTLM challenge response. In step a message may be intercepted while being transmitted from a first endpoint to a second endpoint. The message may be intercepted by for example interception module or .

In step the intercepted message is checked to determine whether or not it is signed with an HMAC signature. If the message is not signed with an HMAC signature then process quits. In some embodiments when the message is not signed with an HMAC signature the intercepted message may be directly transmitted to the second endpoint.

In step one or more components of the HMAC information associated with for example the intercepted message may be determined. Further details regarding this determination are provided with reference to .

In step the intercepted message may be modified by for example modification module or . Exemplary modifications include compression and or acceleration of the message. In step the modified message may be resigned using for example the one or more components of the HMAC information determined in step . In most cases the HMAC signature used to resign the modified message matches the HMAC signature of the intercepted message such that the modified message may be decrypted by a receiving or second endpoint. Following resignature the message may be transmitted to the second endpoint step and process quits.

In step a secret key for the message may be determined. Further details regarding this determination are provided with reference to . In step an HMAC signature to resign a modified message such as the modified message generated in process may be generated and process may end. The HMAC signature may be generated using for example the recognized message boundary the determined sequence number and or the secret key.

In step an HMAC module may be queried for a security key. The security key may be a public and or a secret key. The querying may be performed by for example an interception module such as interception module and or . The query may be performed at for example an SSPI entry point or GSS API entry point. In step data that includes the security key may be received as a result of the query. The data may be received by for example an interception module such as interception module and or . The received data may then be analyzed step to determine the security key and process may end.

In step a list of unmatched secret keys may be acquired or accumulated. The list may be acquired by for example interception module or based on intercepted messages observed by that module. The list of unmatched keys may be periodically updated to remove secret keys that have expired. A secret key from the list may be associated with a modified message such as the modified message produced by process step . The remaining components of an HMAC signature for the message may be determined via for example process and or step .

In step an HMAC signature may be generated using for example the associated secret key and the remaining determined components of the HMAC signature. In step a check is made to determine whether the generated HMAC signature matches the original HMAC signature of the message. If the HMAC signature does not match it may be determined whether there is another secret key available in the list of unmatched secret keys step . If there is another available secret key steps through are repeated until a match is found or the list of keys is exhausted without a match. If there is not another available secret key then the message may be transmitted to an endpoint without being modified. The list of unmatched keys may be periodically updated to remove expired keys.

If the HMAC signature does match then the secret key associated with the message may be removed from the list of unmatched secret keys step . The message may then be resigned using the matching HMAC signature step . In step the resigned message may be transmitted to an endpoint such as second endpoint and process quits.

Thus systems methods apparatus and computer readable media including computer executable instructions for communicating a modified hash message authentication code HMAC signed message between two endpoints have been described.

