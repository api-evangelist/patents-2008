---

title: Methods and systems for inserting software applications into images
abstract: A computer-implemented method may include identifying an image of a first storage device, identifying a software application, and inserting the software application into the image. The method may also include inserting a software virtualization layer into the image. The method may include inserting a software package into the image. Various other methods, systems, and computer-readable media for inserting software applications into images are also disclosed.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08176482&OS=08176482&RS=08176482
owner: Symantec Corporation
number: 08176482
owner_city: Mountain City
owner_country: US
publication_date: 20080328
---
This application is related to U.S. Pat. No. 7 162 724 filed 11 Jun. 2003 and titled Layered Computing Systems and Methods U.S. Pat. No. 7 117 495 filed 11 Jun. 2003 and titled Systems and Methods for the Creation of Software Packages Using Layered Systems and U.S. Pat. No. 7 165 260 filed 11 Jun. 2003 and titled Layered Computing Systems and Methods for Insecure Environments the disclosures of each of which are incorporated in their entirety by this reference.

Many business organizations and governmental entities may rely on large data centers including hundreds or thousands of individual computer hosts or servers to provide support for complex mission critical applications. The collection of computer hosts within a data center may be heterogeneous in nature including many different types of hosts from many different manufacturers supporting different operating systems and a variety of hardware devices such as disks network cards and the like from different hardware vendors. In addition to the application servers at the data centers an information technology IT department may also need to support a large number of workstations such as desktop and or laptop computer systems and supporting servers such as email servers web servers for use by the employees of the organization.

As the computing needs of an organization grow more and more processing power may need to be deployed. The process of allocating additional resources such as new computer hosts additional storage additional networking bandwidth and other devices in response to growing needs within an organization may be termed provisioning. Configuring individual new hosts manually would be increasingly difficult expensive and error prone as the environment scales in size and complexity. Therefore in some IT organizations specialized provisioning tools may be used to ensure a desired degree of consistency when configuring newly allocated hosts. A provisioning tool may for example allow an administrator to install a desired version of an operating system and a desired set of application software on a source computer host and to create a disk image i.e. a copy of the system disk of the source computer host for use in installing newly provisioned hosts.

The disk image may then be written to a system disk at each newly provisioned host so that all newly provisioned hosts are deployed with a common operating system version and common application software. Such a provisioning technique of using a disk image to install software at a host instead of installing a newly provisioned host manually from installation CDs or other removable media may be termed image based provisioning. Image based provisioning may provide several advantages over more traditional provisioning or installation techniques including a reduction in total installation time better support for automation and a corresponding reduction in the probability of human errors. In many cases a standard set of disk images for image based provisioning may be created e.g. a set including one disk image corresponding to each operating system in use within a data center and employed repeatedly as new hosts are provisioned.

One problem with image based provisioning is that the imaging may only capture what was contained on the source computer. If an administrator wants to add a program to a host target of a disk image the administrator may need to deploy the image and then install the program after the image has been deployed to the host. This manual process may be time consuming for system administrators. In other words traditional disk imaging systems may be inefficient because they may lack post imaging customization tools.

The instant disclosure is directed to inserting a software application into an image after the images have been created. According to various embodiments a computer implemented method may comprise identifying an image of a first storage device identifying a software application and inserting the software application into the image. In some embodiments inserting the software application into the image may comprise inserting a software virtualization layer into the image.

The software application may be programmed to interface with an operating system of the image through the virtualization layer. In some embodiments inserting the software application into the image may comprise inserting a virtualization layer installation tool into the image. The virtualization layer installation tool may comprise the software virtualization layer.

In some embodiments inserting the software application into the image may comprise inserting a software package into the image. The software package may comprise the software application. In some embodiments the software package may comprise a repackaged software application such as a rapid install package or a WISE package. According to various embodiments inserting the software application into the image may comprise inserting a software virtualization system package into the image. The software virtualization system package may comprise the software application and a virtualization layer installation tool.

Throughout the drawings identical reference characters and descriptions indicate similar but not necessarily identical elements. While the exemplary embodiments described herein are susceptible to various modifications and alternative forms specific embodiments have been shown by way of example in the drawings and will be described in detail herein. However the exemplary embodiments described herein are not intended to be limited to the particular forms disclosed. Rather the instant disclosure covers all modifications equivalents and alternatives falling within the scope of the appended claims.

The following is intended to provide a detailed description of various exemplary embodiments and should not be taken to be limiting in any way. Various exemplary methods and systems for including software applications in images are described and or illustrated herein. In some embodiments inserting a software application into an image may comprise inserting a software virtualization layer into the image. In other embodiments inserting the software application into the image may comprise inserting a software package into the image. Various other embodiments of inserting software packages into images are described herein.

The process of creating an image such as image may typically begin with a selection e.g. by an IT administrator of a desired software configuration that is to be consistently deployed across new uninstalled computer systems or hosts. The term uninstalled host as used herein may refer to a host computer system that does not have a desired operating system or a desired version of an operating system installed on it. The desired software configuration may include a specific version of an operating system and one or more applications.

The operating system as well as the applications may be selected based on the set of tasks for which the new hosts are being brought into service. For example in an environment where the new hosts are to be used by software engineers for software development as well as for standard office tasks such as e mail a version of MICROSOFT WINDOWS may be selected as the operating system and the applications installed may include one or more e mail clients productivity software such as spreadsheets and word processors and a software development environment SDE selected according to a corporate or departmental policy.

The desired software configuration may then be installed e.g. using a standard installation technique such as manual installation from one or more installation CDs on a particular host selected as a master or source host from which a disk image may be obtained in a later step. The desired operating system and desired application software may be installed on the master host in this step. For some operating systems one or more tasks typically performed during installation may be modified or left out during the installation of the master in order to simplify later steps of image based provisioning. For example in a MICROSOFT WINDOWS environment a step of identifying a network domain for the master host may be omitted and the system administrator password may be left blank. One or more default user profiles may also be set up on the master host at this stage. At the end of the installation a system administrator or a tool such as an automated script may validate that all the desired software components are present on the master system.

After a successful validation a master host may need to be prepared for a creation of a disk image. For example the master host may be prepared using a special system preparation utility e.g. MICROSOFT s SYSPREP utility . The system preparation utility may perform a number of operations such as a modification of a configuration setting or parameter to ensure that a system setup tool e.g. Microsoft s Mini Setup Wizard is invoked the next time the master or another host installed using a disk image from the master is booted. The system setup tool may for example allow a specification of such host specific information as a host name an administrator password an identification of a time zone etc. when invoked during the boot process.

The next step in image based provisioning may be the creation of the disk image itself. That is the contents of a system disk i.e. a disk on which the operating system and applications were previously installed on the master host may be copied or saved e.g. on a storage device external to the master host .

The administrator may desire to create images with different applications. In traditional imaging systems if a system administrator needs to deploy images with different applications installed for each desired configuration the administrator would need to install the applications on a source host and go through the process of creating a separate image. In contrast embodiments of the instant disclosure allow the administrator to create a single image and customize the image by adding applications. This customization process may be more efficient than prior imaging solutions.

As previously noted image modification module may allow an administrator or any other user to insert a software application into an image. Image modification module may be any application module plug in or other computer executable instruction capable of inserting a software application e.g. software application into an image e.g. image after the image has been created.

In some embodiments image modification module may insert software application into image at a designated location within image . For example image modification module may insert software application in a specific special folder directory file or at a special offset within image . Software application may also be inserted in any other suitable location within image .

In some embodiments software application may be included in a software virtualization system package that also includes a virtualization layer installation tool . Software virtualization system package may be a software package that includes the programming e.g. virtualization layer installation tool to install a virtualization layer in a destination computing device after image is deployed to the destination computing device.

For example after software virtualization system package is inserted into image image may be copied to an uninstalled host where the desired software configuration is to be installed. Once the image is loaded e.g. on a target system disk at the uninstalled host the host may be booted. In cases where the system setup tool was configured to be invoked upon the next reboot as described above the host specific information may be provided either manually or via a script or configuration file to the system setup tool during system initialization and the previously uninstalled host may be brought up to provide normal operation.

During system initialization software virtualization system package may execute and may install a virtualization layer on the host. The software virtualization system package may also initiate installation of software application . Software application may be installed through the virtualization layer. In other embodiments software application and the virtualization layer may be installed in image before image is deployed. For example image modification module may modify registry settings files folders and or other data in image so that when image is deployed to a destination computer software application will be present on the destination computer as though software application had been installed on the source computer before the image was created. Inserting an application into an image refers to installing and or otherwise including the application in the image.

Allowing applications and data to be inserted into virtual layers application layers and data layers instead of being installed to the base file system and registry may have various advantages. For example installing an application into a virtual layer in an image may be simpler and faster because it may not require modification of the base file system and registry. Installing an application into a virtual layer of an image may also have various other advantages over installing applications directly to a base file system and registry. For example computing systems may be susceptible to application conflicts with the host operating system and other applications. When an application is installed to an operating system a number of globally accessible files are often placed on the computing system. Such files may include shared libraries and system configuration. The shared libraries are often provided in different versions with applications requiring one version or another. A mismatch between a library version and a version required by an application sometimes results in that application crashing becoming inoperable or exhibiting other errors. Shared configuration elements are sometimes globally available to applications which may write a favored configuration thereto. Following a write to that configuration other applications may be unable to read the configuration properly or may be unable to function under a new specified configuration. Thus following installation of a new application to a computer other applications may not work properly or may stop working.

In contrast to the problems associated with directly installing applications to a base file system and registry a virtualization layer approach of installing applications may avoid the conflicts and other issues associated with traditional application installations. A layered approach may provide virtual layers that can be managed as a unit for the purposes of exporting importing enabling disabling and otherwise managing applications with a greater degree of flexibility and reliability.

Application may make another file access . The virtualization system may not find a corresponding entry in layer B but may find an entry in layer A . A third file access request may not have a corresponding entry in layer B or layer A and the virtualization system may therefore return an entry from base file system .

Management application may provide notices to the Windows Explorer that the contents of a mounted file system have been changed. Other applications may interact with the system performing read and write operations to the file system and registry through system driver . The compression library may be provided to compress layer information especially for layer archives exported by the system.

A layer may isolate an application from a base file system and may include files and a directory structure of the application s installation. When the layer is inserted or enabled in an image the application files and directories may be shadowed or overlaid over the regular operating file system. Shared libraries such as DLLs system accessible configuration such as registry entries and version control may be managed by a layering subsystem.

Though each layer may be a separate and individual entity within an image the application files data and system accessible configuration may be presented as though they resided in their respective ordinary locations. Thus an application stored in a layer may appear to the operating system of a deployed image as if it had been installed using traditional installation techniques.

As previously noted inserting applications on virtualization layers in an image may have numerous advantages. For example if the applications are stored individually in layers interactions between application files may no longer occur due to conflicting shared libraries DLLs as each application may use its virtual libraries before accessing the base operating system. In some embodiments applications inserted into a layer in an image may be safely and completely uninstalled or removed from the image by removing the layer from the image.

The instant disclosure may provide an image in which application layers are isolated from other applications on a computer. An application layer may be defined to be a group of files in combination with any associated application configuration stored to operating system files. An application of a layered system may be an application in the most commonly used meaning such as word processors browsers system tools games and the like or may extend to other software installed to a host providing an environment such as a graphical user interface or environmental shell. Isolating application files and configuration in a layer may provide several benefits including the ability to delete disable and enable applications in a simple way and provide a barrier between applications that may use conflicting configuration or library files. Inserting layers into images may result in enhanced stability reliability usability and security of a destination computing system of the image.

In some embodiments layers may be used to insert or install software applications into images after the images have been created. As shown in an image modification module may identify an image of a first storage device Step . The first storage device may be any suitable storage device or devices of a computer or network device. Identifying an image of a first storage device may comprise creating an image selecting an image or otherwise identifying an image to which a software application will be inserted or installed. The image modification module may identify a software application as well step . Identifying a software application may comprise selecting a software application that is compatible with the operating system installed in the first storage device or selecting a software application based on any other criteria. After identifying the image and the software application the image modification module may insert the software application into the image step .

Inserting the software application into the image may comprise inserting a software virtualization layer into the image. After the image is deployed on a destination device the software application may interface with an operating system of the image through the virtualization layer.

In some embodiments inserting the software application into the image may comprise inserting a virtualization layer installation tool. The virtualization layer installation tool may comprise the software virtualization layer. In some embodiments inserting the software application into the image may comprise inserting a software virtualization system package into the image. The software virtualization system package may comprise the software application and the virtualization layer installation tool as described in .

In some embodiments inserting the software application into the image may comprise inserting a software package into the image. The software package may comprise a software application. In some embodiments the software package may comprise a repackaged software application such as a RAPIDINSTALL package a WISE package or any other repackaged software application. A repackaged software application may be an application that is packaged with settings and other user preferences. Therefore inserting repackaged software into an image may save an administrator or destination device user the effort of configuring the software after the image is installed.

Processor generally represents any type or form of processing unit capable of processing data or interpreting and executing instructions. In certain embodiments processor may receive instructions from a software application or module. These instructions may cause processor to perform the functions of one or more of the exemplary embodiments described and or illustrated herein. For example processor may perform and or be a means for performing either alone or in combination with other elements one or more of the identifying inserting imaging and deploying steps described herein. Processor may also perform and or be a means for performing any other steps methods or processes described and or illustrated herein.

System memory generally represents any type or form of volatile or non volatile storage device or medium capable of storing data and or other computer readable instructions. Examples of system memory include without limitation random access memory RAM read only memory ROM flash memory or any other suitable memory device. Although not required in certain embodiments computing system may comprise both a volatile memory unit such as for example system memory and a non volatile storage device such as for example primary storage device as described in detail below .

In certain embodiments exemplary computing system may also comprise one or more components or elements in addition to processor and system memory . For example as illustrated in computing system may comprise a memory controller an Input Output I O controller and a communication interface each of which may be interconnected via a communication infrastructure . Communication infrastructure generally represents any type or form of infrastructure capable of facilitating communication between one or more components of a computing device. Examples of communication infrastructure include without limitation a communication bus such as an ISA PCI PCIe or similar bus and a network.

Memory controller generally represents any type or form of device capable of handling memory or data or controlling communication between one or more components of computing system . For example in certain embodiments memory controller may control communication between processor system memory and I O controller via communication infrastructure . In certain embodiments memory controller may perform and or be a means for performing either alone or in combination with other elements one or more of the steps or features described and or illustrated herein such as identifying inserting imaging and deploying.

I O controller generally represents any type or form of module capable of coordinating and or controlling the input and output functions of a computing device. For example in certain embodiments I O controller may control or facilitate transfer of data between one or more elements of computing system such as processor system memory communication interface display adapter input interface and storage interface . I O controller may be used for example to perform and or be a means for performing either alone or in combination with other elements one or more of the identifying inserting imaging and deploying steps described herein. I O controller may also be used to perform and or be a means for performing other steps and features set forth in the instant disclosure.

Communication interface broadly represents any type or form of communication device or adapter capable of facilitating communication between exemplary computing system and one or more additional devices. For example in certain embodiments communication interface may facilitate communication between computing system and a private or public network comprising additional computing systems. Examples of communication interface include without limitation a wired network interface such as a network interface card a wireless network interface such as a wireless network interface card a modem and any other suitable interface. In at least one embodiment communication interface may provide a direct connection to a remote server via a direct link to a network such as the Internet. Communication interface may also indirectly provide such a connection through for example a local area network such as an Ethernet network a personal area network such as a BLUETOOTH network a telephone or cable network a cellular telephone connection a satellite data connection or any other suitable connection.

In certain embodiments communication interface may also represent a host adapter configured to facilitate communication between computing system and one or more additional network or storage devices via an external bus or communications channel. Examples of host adapters include without limitation SCSI host adapters USB host adapters IEEE 1394 host adapters SATA and eSATA host adapters ATA and PATA host adapters Fibre Channel interface adapters Ethernet adapters or the like. Communication interface may also allow computing system to engage in distributed or remote computing. For example communication interface may receive instructions from a remote device or send instructions to a remote device for execution. In certain embodiments communication interface may perform and or be a means for performing either alone or in combination with other elements one or more of the identifying inserting imaging and deploying steps disclosed herein. Communication interface may also be used to perform and or be a means for performing other steps and features set forth in the instant disclosure.

As illustrated in computing system may also comprise at least one display device coupled to communication infrastructure via a display adapter . Display device generally represents any type or form of device capable of visually displaying information forwarded by display adapter . Similarly display adapter generally represents any type or form of device configured to forward graphics text and other data from communication infrastructure or from a frame buffer as known in the art for display on display device .

As illustrated in exemplary computing system may also comprise at least one input device coupled to communication infrastructure via an input interface . Input device generally represents any type or form of input device capable of providing input either computer or human generated to exemplary computing system . Examples of input device include without limitation a keyboard a pointing device a speech recognition device or any other input device. In at least one embodiment input device may perform and or be a means for performing either alone or in combination with other elements one or more of the identifying inserting imaging and deploying steps disclosed herein. Input device may also be used to perform and or be a means for performing other steps and features set forth in the instant disclosure.

As illustrated in exemplary computing system may also comprise a primary storage device and a backup storage device coupled to communication infrastructure via a storage interface . Storage devices and generally represent any type or form of storage device or medium capable of storing data and or other computer readable instructions. For example storage devices and may be a magnetic disk drive e.g. a so called hard drive a floppy disk drive a magnetic tape drive an optical disk drive a flash drive or the like. Storage interface generally represents any type or form of interface or device for transferring data between storage devices and and other components of computing system .

In certain embodiments storage devices and may be configured to read from and or write to a removable storage unit configured to store computer software data or other computer readable information. Examples of suitable removable storage units include without limitation a floppy disk a magnetic tape an optical disk a flash memory device or the like. Storage devices and may also comprise other similar structures or devices for allowing computer software data or other computer readable instructions to be loaded into computing system . For example storage devices and may be configured to read and write software data or other computer readable information. Storage devices and may also be a part of computing system or may be a separate device accessed through other interface systems.

In certain embodiments the exemplary file systems disclosed herein may be stored on primary storage device while the exemplary file system backups disclosed herein may be stored on backup storage device . Storage devices and may also be used for example to perform and or be a means for performing either alone or in combination with other elements one or more of the identifying inserting imaging and deploying steps disclosed herein. Storage devices and may also be used to perform and or be a means for performing other steps and features set forth in the instant disclosure.

Many other devices or subsystems may be connected to computing system . Conversely all of the components and devices illustrated in need not be present to practice the embodiments descried and or illustrated herein. The devices and subsystems referenced above may also be interconnected in different ways from that shown in . Computing system may also employ any number of software firmware and or hardware configurations. For example one or more of the exemplary embodiments disclosed herein may be encoded as a computer program also referred to as computer software software applications computer readable instructions or computer control logic on a computer readable medium. The phrase computer readable medium generally refers to any form of device carrier or medium capable of storing or carrying computer readable instructions. Examples of computer readable media include without limitation transmission type media such as carrier waves and physical media such as magnetic storage media e.g. hard disk drives and floppy disks optical storage media e.g. CD or DVD ROMs electronic storage media e.g. solid state drives and flash media and other distribution systems.

The computer readable medium containing the computer program may be loaded into computing system . All or a portion of the computer program stored on the computer readable medium may then be stored in system memory and or various portions of storage devices and . When executed by processor a computer program loaded into computing system may cause processor to perform and or be a means for performing the functions of one or more of the exemplary embodiments described and or illustrated herein. Additionally or alternatively one or more of the exemplary embodiments described and or illustrated herein may be implemented in firmware and or hardware. For example computing system may be configured as an application specific integrated circuit ASIC adapted to implement one or more of the exemplary embodiments disclosed herein.

As illustrated in one or more storage devices N may be directly attached to server . Similarly one or more storage devices N may be directly attached to server . Storage devices N and storage devices N generally represent any type or form of storage device or medium capable of storing data and or other computer readable instructions. In certain embodiments storage devices N and storage devices N may represent network attached storage NAS devices configured to communicate with servers and using various protocols such as NFS SMB or CIFS.

Servers and may also be connected to a storage area network SAN fabric . SAN fabric generally represents any type or form of computer network or architecture capable of facilitating communication between a plurality of storage devices. SAN fabric may facilitate communication between servers and and a plurality of storage devices N and or an intelligent storage array . SAN fabric may also facilitate via network and servers and communication between client systems and and storage devices N and or intelligent storage array in such a manner that devices N and array appear as locally attached devices to client systems and . As with storage devices N and storage devices N storage devices N and intelligent storage array generally represent any type or form of storage device or medium capable of storing data and or other computer readable instructions.

In certain embodiments and with reference to exemplary computing system of a communication interface such as communication interface in may be used to provide connectivity between each client system and and network . Client systems and may be able to access information on server or using for example a web browser or other client software. Such software may allow client systems and to access data hosted by server server storage devices N storage devices N storage devices N or intelligent storage array . Although depicts the use of a network such as the Internet for exchanging data the embodiments described and or illustrated herein are not limited to the Internet or any particular network based environment.

In at least one embodiment all or a portion of one or more of the exemplary embodiments disclosed herein may be encoded as a computer program and loaded onto and executed by server server storage devices N storage devices N storage devices N intelligent storage array or any combination thereof. All or a portion of one or more of the exemplary embodiments disclosed herein may also be encoded as a computer program stored in server run by server and distributed to client systems and over network . Accordingly network architecture may perform and or be a means for performing either alone or in combination with other elements one or more of the identifying inserting imaging and deploying steps disclosed herein. Network architecture may also be used to perform and or be a means for performing other steps and features set forth in the instant disclosure.

As detailed above computing system and or one or more of components of network architecture may perform and or be a means for performing either alone or in combination with other elements one or more steps of the exemplary computer implemented methods described and or illustrated herein. According to certain embodiments a computer implemented method may comprise identifying an image of a first storage device identifying a software application and inserting the software application into the image.

In various embodiments the computer implemented method may also comprise inserting the software application into the image by inserting a software virtualization layer into the image. The software application may interface with an operating system of the image through the software virtualization layer.

In some embodiments inserting the software application into the image may comprise inserting a virtualization layer installation tool into the image. The virtualization layer installation tool may comprise the software virtualization layer. In at least one embodiment inserting the software application into the image may comprise inserting a software virtualization system package into the image. The software virtualization system package may comprise the software application and the virtualization layer installation tool.

In some embodiments inserting the software application into the image may comprise inserting a software package into the image. The software package may comprise the software application. In at least one embodiment the software package may comprise a repackaged software application.

In some embodiments the computer implemented method may comprise imaging the first storage device to create the image. In other embodiments the computer implemented method may further comprise deploying the image to a second storage device after the software application is inserted into the image.

In certain embodiments a computer implemented method may comprise identifying a disc image of the first disc identifying a software application and inserting the software application into the disc image after the disc image is created. The method may also comprise inserting a software virtualization layer into the disc image after the disc image is created. The software virtualization layer may be configured to interface with the software application.

In some embodiments the computer implemented method may further comprise inserting a software virtualization system package into the disc image. Inserting the software virtualization system package may comprise inserting the software application and inserting the virtualization layer. In at least one embodiment the computer implemented method may comprise imaging the first disc to create the disc image. In certain embodiments the computer implemented method may comprise deploying the disc image to a second disc after the software application is inserted into the disc image.

According to certain embodiments a computer readable medium may comprise one or more computer executable instructions that when executed by a computing device may cause the computing device to identify an image of a first storage device identify a software application and insert the software application into the image after the image is created.

In some embodiments the one or more computer executable instructions may be further operable to insert the software application into the image by inserting a software virtualization layer into the image. The software application may be configured to interface with an operating system of the image through the software virtualization layer. In some embodiments the one or more computer executable instructions may be further operable to insert the software application into the image by inserting a virtualization layer installation tool into the image. The virtualization layer installation tool may comprise the software virtualization layer.

In some embodiments the one or more computer executable instructions may be further operable to insert the software application into the image by inserting a software virtualization system package into the image. The software virtualization system package may comprise the software application and the virtualization layer installation tool.

In some embodiments the one or more computer executable instructions may be further operable to insert the software application into the image by inserting a software package into the image. The software package may comprise the software application. In some embodiments the software package may comprise a repackaged software application. According to at least one embodiment the one or more computer executable instructions may be further operable to image the first storage device to create the image. In some embodiments the one or more computer executable instructions may be further operable to deploy the image to a second storage device after the software application is inserted into the image.

The instant disclosure refers to registries and registry settings which may be specific to MICROSOFT WINDOWS operating systems. Those of skill in the art will recognize that registry settings are merely configuration settings for an operating system and applications installed to a computing device accessible through a system wide application programming interface API . The meaning of registries and registry setting is therefore extended to future WINDOWS operating systems and operating systems other than WINDOWS.

While the foregoing disclosure sets forth various embodiments using specific block diagrams flowcharts and examples each block diagram component flowchart step operation and or component described and or illustrated herein may be implemented individually and or collectively using a wide range of hardware software or firmware or any combination thereof configurations. In addition any disclosure of components contained within other components should be considered exemplary in nature since many other architectures can be implemented to achieve the same functionality.

The process parameters and sequence of steps described and or illustrated herein are given by way of example only and can be varied as desired. For example while the steps illustrated and or described herein may be shown or discussed in a particular order these steps do not necessarily need to be performed in the order illustrated or discussed. The various exemplary methods described and or illustrated herein may also omit one or more of the steps described or illustrated herein or include additional steps in addition to those disclosed.

Furthermore while various embodiments have been described and or illustrated herein in the context of fully functional computing systems one or more of these exemplary embodiments may be distributed as a program product in a variety of forms regardless of the particular type of computer readable media used to actually carry out the distribution. The embodiments disclosed herein may also be implemented using software modules that perform certain tasks. These software modules may include script batch or other executable files that may be stored on a computer readable storage medium or in a computing system. In some embodiments these software modules may configure a computing system to perform one or more of the exemplary embodiments disclosed herein.

The preceding description has been provided to enable others skilled in the art to best utilize various aspects of the exemplary embodiments disclosed herein. This exemplary description is not intended to be exhaustive or to be limited to any precise form disclosed. Many modifications and variations are possible without departing from the spirit and scope of the instant disclosure. The embodiments disclosed herein should be considered in all respects illustrative and not restrictive. Reference should be made to the appended claims and their equivalents in determining the scope of the instant disclosure.

Unless otherwise noted the terms a or an as used in the specification and claims are to be construed as meaning at least one of. In addition for ease of use the words including and having as used in the specification and claims are interchangeable with and have the same meaning as the word comprising. 

