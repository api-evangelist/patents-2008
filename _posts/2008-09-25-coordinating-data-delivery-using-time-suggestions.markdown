---

title: Coordinating data delivery using time suggestions
abstract: Coordinating delivery of data to a first computing device from a plurality of second computing devices based on known power times for a resource associated with the first computing device. One of the second computing devices requests a time interval for data delivery. The first computing device compares the requested time interval to the known power times to determine a delivery time. For example, the requested time interval is compared against activation times for recurrent schedules that use the resource, and against previously determined delivery times. The second computing device delivers data at the determined delivery time to preserve the resource. In some embodiments, the delivery time is adjusted for processing delays and network latency.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07966410&OS=07966410&RS=07966410
owner: Microsoft Corporation
number: 07966410
owner_city: Redmond
owner_country: US
publication_date: 20080925
---
Mobile computing devices such as mobile phones and personal digital assistants PDA have become increasingly popular in recent years. As the devices continue to get smaller there are increasing limitations in resources such as memory storage bandwidth and battery power. Additionally more applications now consume increasing levels of such resources. For example many applications execute recurring tasks such as synchronization with a server requiring frequent radio usage. After the radio on the mobile computing device powers on to send data the radio takes several seconds to power off e.g. about 3 seconds on 2.5G networks and about 20 seconds on 3G networks . This radio tail absorbs power and diminishes battery life on the mobile computing device. Further there are other power inefficiencies in spinning up the radio and shutting down the radio.

Connected applications with real time data push or updates are being widely adopted by mobile users. The applications include electronic mail personal information management presence information and other web applications. The servers push the data in an uncoordinated manner such that battery life on the mobile computing device degrades negatively affecting the user experience.

Embodiments of the invention coordinate delivery of data to at least one first computing device from a plurality of second computing devices. One of the second computing devices requests a time interval for data delivery. The first computing device compares the requested time interval to a plurality of known power times for a communication resource associated with the first computing device. A delivery time is determined and provided to the second computing device. Coordinating the data delivery preserves the communication resource on the first computing device. In some embodiments the determined delivery time is adjusted for processing delays and network latency.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used as an aid in determining the scope of the claimed subject matter.

Referring to the figures embodiments of the invention coordinate the delivery of data to at least one first computing device from a plurality of second computing devices to reduce consumption of a communication resource on the first computing device . In some embodiments the first computing device provides a hint suggestion recommendation or assignment of a delivery time e.g. optimal delivery time to the second computing devices such that a plurality of the second computing devices send the data to the first computing device at or around the same time. In an example in which the first computing device is a mobile computing device the coordinated delivery of data leverages known power times e.g. radio spin ups for one or more cellular radios to preserve battery life on the mobile computing device . In other examples however aspects of the invention are operable to preserve reduce consumption of extend the life of or optimize any resource on the first computing device .

In some embodiments the mobile computing device makes use of known scheduling data to identify a next scheduled radio time make accommodations for network latency and then publish this time to the interested application or server. In an example the published time is slightly before the next scheduled radio time so that both the server communication and the device schedule leverages the same radio spin up. For example the device schedule is to activate at 9 am the published time is 8 59 45 am. The server communication then occurs at 8 59 45 am that raises the radio.

In embodiments in which a fuzz or tolerance factor is associated with each of the schedules the tolerance factor affords a larger time window to target and coordinate a time for the second computing devices to contact the first computing device . In an example with a ten minute interval schedule having a tolerance factor of 50 the second computing devices may contact the first computing device any time between time 5 and time 10 to leverage a radio spin up. The tolerance factor increases the probability that a radio spin up is leveraged.

Referring again to an exemplary block diagram illustrates the first computing device receiving data from a plurality of the second computing devices such as second computing device through second computing device N where N is a positive integer. The second computing devices are connected to the first computing device via a network such as for example the Internet. In some embodiments operations such as illustrated in and are performed on the first computing device by a scheduler or other components instructions or logic.

The second computing devices execute services to send data to the first computing device periodically e.g. regularly or intermittently . In some embodiments the second computing devices provide real time content updates to the first computing device e.g. push mail calendar contacts instant messaging and social network data . The second computing devices may also send or receive heartbeat pings to keep open the connection between the second computing devices and the first computing device .

The second computing devices include but are not limited to servers proxy servers enterprise servers or any other device sending data to the first computing device . Further while described in some embodiments with reference to the first computing device including the mobile computing device aspects of the invention are operable with other devices such as laptop computers gaming consoles hand held navigation devices or any other devices communicating with the second computing devices . Additionally while embodiments of the invention are described with reference to a server sending data to the mobile computing device aspects of the invention are operable in other environments such as peer to peer connections between the first computing device and the second computing devices .

Referring next to an exemplary block diagram illustrates a computing device such as the first computing device storing known power times for a resource and computer executable components for implementing aspects of the invention. The computing device includes a processor and a memory area or other computer readable media. The memory area stores a plurality of schedules such as schedule through schedule M where M is a positive integer. The schedules are associated with and provided by the second computing devices to transmit data to the computing device . Application programs execute the respective schedules to send or receive data from devices such as the associated second computing devices which causes a communication interface such as a cellular radio on the computing device to power on. For example the application programs are hosted by the computing device . Each of the schedules has an activation time and each schedule is associated with at least one of the second computing devices . The schedules have recurring activation times in some embodiments.

Execution of the schedules includes performing or executing one or more actions associated with the schedules at the activation time . For example the activation time represents the time as an absolute or an offset at which the associated second computing devices will send data to the computing device . The transmission of the data uses a power consuming resource on the computing device e.g. a communication resource or radio resource such as one or more cellular radios . While the schedules represent known future times during which the communication resource will be in use the memory area may alternatively or in addition explicitly store one or more known power times for the communication resource.

In some embodiments the schedules stored in the memory area include conditional schedules unconditional schedules schedules that consume the communication resource and schedules that do not consume the communication resource or other resource to be optimized . In such embodiments the computing device filters searches or other generates a subset of the schedules when determining delivery times. For example unconditional schedules have a greater chance of being executed e.g. greatest likelihood of execution than conditional schedules and as such the activation times associated with unconditional schedules are given priority or preference over activation times associated with conditional schedules when determining a delivery time.

In other embodiments the schedules are pre sorted pre filtered or otherwise grouped. For example the memory are may store separate groups of conditional unconditional resource consuming and non resource consuming schedules to speed determination of the delivery time.

The memory area further stores a processing delay and network latency . The processing delay represents a delay due to processing on the computing device . The network latency represents a delay due to network transmission of data to the computing device . In some embodiments either or both of the processing delay and the network latency are expressed as an offset. The processing delay and network latency are used by the computing device to provide more accurate delivery times. In some embodiments the processing delay and the network latency are determined by the computing device e.g. measure time differences during processing or network transmissions . In other embodiments the network latency is provided to the computing device e.g. by the device sending data to the computing device .

The memory area further stores one or more previously determined delivery times . The previously determined delivery times represent hinted or suggested times for delivering data to the computing device . The previously determined delivery times represent times to occur in the future. In an example in which a current time is 12 30 pm the computing device determines and provides a delivery time of 12 40 pm to a first application program. Upon receipt of a request for a delivery time from a second application program the computing device is aware of the previously determined delivery time of 12 40 pm and able to consider providing this time to the second computing device to coordinate use of the communication resource on the computing device as described in more detail below with reference to .

The memory area further stores one or more computer executable components such as an interface component a cache component a hint component and a publication component . Operation of these components is described with reference to below.

Referring next to an exemplary flow chart illustrates a comparison of a requested time interval to activation times for the schedules and previously suggested delivery times to determine a delivery time to suggest to a server. At a computing device such as the first computing device receives a requested time value from another computing device such as the server or the second computing device . The time value includes in some embodiments a time interval or range specifying a minimum time value and a maximum time value. The time value may be an absolute time or an offset from a current time e.g. a time of receipt by the first computing device . An example means for specifying the time interval is shown in Appendix A.

Upon receipt of the requested time value the first computing device identifies one or more upcoming activation times associated with the schedules at . For example the first computing device identifies activation times associated with schedules that consume the communication resource or other resource to be optimized . The first computing device then identifies those activation times that are associated with unconditional schedules . If no such schedules are available the first computing device identifies those activation times associated with conditional schedules .

The first computing device also at identifies one or more previously determined delivery times . For example the first computing device accesses the previously determined delivery times stored in the memory area . At the requested time value is compared to the identified activation times and to the previously determined delivery times . Based on the comparison the first computing device determines a delivery time also at . In an example in which the requested time value is an interval the determined delivery time represents a time within the interval. Alternatively or in addition the determined delivery time represents a time corresponding to one of the upcoming activation times or to one of the previously determined delivery times . In such embodiments usage of the communication resource is optimized because multiple servers will use the communication resource while the communication resource is powered on.

At the determined delivery time is provided to the server. The server sends data to the first computing device at the provided delivery time. In some embodiments the requested time value is received from an application program executing on the first computing device yet associated with the server. In such embodiments the determined delivery time is provided to the application program. The application program conveys the determined delivery time to the server and the server sends the data to the first computing device at the determined delivery time.

In an embodiment in which a plurality of servers intends to send data to the first computing device each of the servers has a priority associated therewith. The first computing device uses the assigned priority when determining delivery times. For example if the communication resource is available for a particular time interval servers with a high priority requesting a delivery time will receive a determined delivery time earlier in the particular time interval. Servers with a lower priority will receive a determined delivery time later within the particular time interval.

Referring next to an exemplary flow chart illustrates determination of a data delivery time and adjustment of the determined delivery time based on processing delays and network latency . At a time interval requested by the server or other second computing device is accessed e.g. by the first computing device . The requested time interval represents a range of time during which the server desires to send data to the first computing device . At the activation times and the previously determined delivery times in some embodiments are searched to identify a subset of the activation times that are within the requested time interval. At the delivery time is determined based on the identified subset of the activation times to coordinate consumption of the communication resource. At the determined delivery time is adjusted based on an offset corresponding to the processing delay and or the network latency . At the determined delivery time is published to the server.

Referring next to an exemplary flow chart illustrates determination of a data delivery time based on known power times for the communication resource associated with the mobile computing device . In the example of the interface component cache component hint component or publication component execute on the mobile computing device . At the interface component receives or accesses a requested time interval or value. The time interval is associated with an expected transmission of data from the server to the mobile computing device . At the cache component identifies one or more anticipated power times for the communication resource on the mobile computing device . The anticipated power times represent for example upcoming activation times for schedules executing on the mobile computing device that consume the communication resource or previously determined delivery times .

At the hint component determines a delivery time based on a comparison of the requested time interval received by the interface component and the anticipated power times identified by the cache component . For example the hint component sets the delivery time to the beginning of a time interval corresponding to one of the anticipated power times. In some embodiments the request received by the interface component includes a payload value representing an expected size of the data transmission. In such embodiments the hint component determines the delivery time based on the received payload value to manage bandwidth on the mobile computing device e.g. to avoid thrashing the communication resource . For example data packets with small payloads are prioritized to be sent first followed by data packets with large payloads. Alternatively or in addition to payload size payloads traversing some of the interfaces are given a priority and send in descending priority order.

At the publication component provides the delivery time determined by the hint component to the server. The server sends the data to the mobile computing device at the provided delivery time.

In some embodiments the mobile computing device has a plurality of cellular radios. In such embodiments the request received by the interface component includes an identification of one of the cellular radios. In other embodiments the mobile computing device assigns the request to one of the cellular radios. In still other embodiments the radio used by each of the schedules that has persisted connections is tracked. The identified cellular radio becomes another variable used by the hint component to determine the delivery time. In such embodiments each of the previously determined delivery times stored in the memory area includes the identification the associated cellular radio. The hint component prioritizes schedules with the same identified cellular radio when determining a delivery time.

Referring next to an exemplary sequence diagram illustrates the scheduling of data delivery to the mobile computing device from two servers. Two application programs executing on the mobile device request hints for data delivery to the mobile computing device . Upon receipt of the hints from the scheduler the application programs provide the hints to the associated servers . The servers then attempt to send the data to the mobile computing device at the hinted times.

In the example of the list of known power times e.g. upcoming activation times or previously determined delivery times is referred to as a list of ServerSendTimes. The list of ServerSendTimes is created during startup of the scheduler or other service and is cleared when the scheduler ends processing. The list of ServerSendTimes is treated as a cache so that if a cache entry falls between the requested time interval the cache entry is considered as a candidate when determining another delivery time. In some embodiments the cache is represented as a hash map with . A map of is sorted on key ServerSendTime . In such an example the map speeds identification of the ServerSendTime nearest to the end time.

In some embodiments the activation times for each of the schedules are stored as a cache sorted by activation time e.g. ascending order . The caches stores the activation times for all active schedules . The cache is created or updated with each received request from the server to delivery data. In some embodiments the scheduler simply provides or publishes this cache to enable the server to select an appropriate delivery time.

In the example of upon receipt of a requested time interval the scheduler iterates through the cache and deletes all the entries that have expired e.g. having an activation time less than a current time . The scheduler iterates through the schedules to identify a subset of active recurring schedules that use the communication resource on the mobile computing device . The next activation time for each of the schedules in the subset of schedules is calculated. From this subset of schedules the scheduler identifies activation times that fall within the time interval requested by the server. The scheduler gives a preference to activation times associated with schedules that have a high certainty of execution. For example schedules with no conditions for execution have a high certainty of execution. The scheduler updates the cache of activation times based on the identified subset of schedules .

The scheduler determines a delivery time or other hint time based on the cache of activation times and the list of ServerSendTimes. If one of the activation times falls within the requested time interval that activation time is added to the list of ServerSendTimes and the frequency is set to one. If there is no satisfying activation time in the cache of activation times the scheduler scans the list of ServerSendTimes. If one of the ServerSendTimes falls within the requested time interval that ServerSendTime is provided to the requesting server and the frequency of that ServerSendTime is incremented in the list. If more than one ServerSendTime falls within the interval the ServerSendTime with the highest frequency is selected. If none of the ServerSendTimes fall within the requested time interval the closest ServerSendTime is selected e.g. based on a defined tolerance or delta region . The delivery time is set to the beginning of the closest ServerSendTime. If no ServerSendTime falls within the time interval the end time of the requested time interval is set to be the ServerSendTime. The end time is then entered into the list of ServerSendTimes with a frequency of one 1 .

While the example of illustrated an exemplary delivery time determination other selection methods are within the scope of aspects of the invention. Further the selection methods may be changed dynamically.

In some embodiments the minimum time value is the current time and the maximum time value represents the maximum heartbeat interval e.g. the longest period of time the mobile computing device and the server can go without transmitting data and still persist the connection .

In an embodiment not shown the server is a proxy server staging data from one or more of the servers. The proxy server stages the data before sending the data to the mobile computing device . The proxy server has a priority assigned to data packets or to the servers . The priority represents the urgency to get the data packet to the mobile computing device e.g. versus the tolerance to delay the packet . The proxy server quantifies the priority in terms of willingness e.g. in minutes to wait before sending the data. On the mobile computing device the application provides the minimum time e.g. current time and the maximum time equal to the duration that the server originating the data packet is willing to delay delivery of the data. When the mobile computing device application sends a heartbeat ping to the server it includes the determined delivery time or hint for the most optimal future time for the server to transmit data.

The ServerSendTime represents a start time for the servers to send data. In embodiments in which the resource is known to be available for some duration after the ServerSendTime e.g. a cellular radio tail the duration is considered by the scheduler . For example the tolerance or delta region is set based on the known cellular radio tail.

In an example a mail server asks for a hint and provides 12 00 and 12 20 as the minimum and maximum times. The scheduler has an active schedule with an active connection at 12 20 with a 10 minute interval duration schedule. The scheduler identifies the active schedule adjusts the delivery time to account for network latency and or processing delay e.g. thirty seconds determines a delivery time of 12 19 30 and provides the determined delivery time to the server.

In a variation of the example immediately above no activation times fall within the requested time interval. In this example the scheduler sets the maximum time of 12 20 as the determined delivery time e.g. ServerSendTime .

In a continuation of the example immediately above another server provides 12 15 and 12 30 as the minimum and maximum times. The ServerSendTime is equal to 12 20 which falls within the requested time interval. After adjusting for network latency the scheduler provides 12 19 30 as the determined delivery time.

By way of example and not limitation computer readable media comprise computer storage media and communication media. Computer storage media store information such as computer readable instructions data structures program modules or other data. Communication media typically embody computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and include any information delivery media. Combinations of any of the above are also included within the scope of computer readable media.

Although described in connection with an exemplary computing system environment embodiments of the invention are operational with numerous other general purpose or special purpose computing system environments or configurations. Examples of well known computing systems environments and or configurations that may be suitable for use with aspects of the invention include but are not limited to mobile computing devices personal computers server computers hand held or laptop devices multiprocessor systems gaming consoles microprocessor based systems set top boxes programmable consumer electronics mobile telephones network PCs minicomputers mainframe computers distributed computing environments that include any of the above systems or devices and the like.

Embodiments of the invention may be described in the general context of computer executable instructions such as program modules executed by one or more computers or other devices. The computer executable instructions may be organized into one or more computer executable components or modules. Generally program modules include but are not limited to routines programs objects components and data structures that perform particular tasks or implement particular abstract data types. Aspects of the invention may be implemented with any number and organization of such components or modules. For example aspects of the invention are not limited to the specific computer executable instructions or the specific components or modules illustrated in the figures and described herein. Other embodiments of the invention may include different computer executable instructions or components having more or less functionality than illustrated and described herein.

The embodiments illustrated and described herein as well as embodiments not specifically described herein but within the scope of aspects of the invention constitute exemplary means for determining the delivery time based on known power times for the radio resource within the requested time interval and exemplary means for adjusting the delivery time based on the processing delay and the latency.

The order of execution or performance of the operations in embodiments of the invention illustrated and described herein is not essential unless otherwise specified. That is the operations may be performed in any order unless otherwise specified and embodiments of the invention may include additional or fewer operations than those disclosed herein. For example it is contemplated that executing or performing a particular operation before contemporaneously with or after another operation is within the scope of aspects of the invention.

When introducing elements of aspects of the invention or the embodiments thereof the articles a an the and said are intended to mean that there are one or more of the elements. The terms comprising including and having are intended to be inclusive and mean that there may be additional elements other than the listed elements.

Having described aspects of the invention in detail it will be apparent that modifications and variations are possible without departing from the scope of aspects of the invention as defined in the appended claims. As various changes could be made in the above constructions products and methods without departing from the scope of aspects of the invention it is intended that all matter contained in the above description and shown in the accompanying drawings shall be interpreted as illustrative and not in a limiting sense.

The application programming interface API shown below enables an application program to provide a minimum time and a maximum time interval. A scheduler executing on the first computing device returns a hint in universal time code format for example that falls between the two intervals. The API signature is shown below.

An exemplary API to cancel a hint previously returned by TaskSchedulerGetBestNetworkTimeInRange is shown below. This API is used by any requestor who ends up not using a hint. This API increases the accuracy effectiveness of aspects of the invention at least because hinted times are weighted higher when published. With this API function call the scheduler closely tracks the usage of hint time values and improves the heuristics used internally by the scheduler when handing out hint times subsequently. In the example below the caller account using TaskSchedulerCancelBestNetworkTime to cancel an existing hint is the same caller account that used TaskSchedulerGetBestNetworkTimeInRange to get the hint.

A list of ServerSendTime is created during service startup and cleared when service is stopped. This list is treated as a cache so that if a cache entry falls between intervals the cache entry may be considered as a candidate for ServerSendTime without having to oterate through all the schedules and calculate the ServerSendTime again. The cache may be represented internally as a hashmap with where mapAcctIdtoFreq is a hash map of owner account id to frequency and may be defined as 

