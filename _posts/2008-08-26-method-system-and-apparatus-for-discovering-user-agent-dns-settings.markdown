---

title: Method, system, and apparatus for discovering user agent DNS settings
abstract: A method, system and apparatus including receiving a request from a network device, the request including an IP address of said network device, generating and sending to the network device a domain name for locating a device configured to process a DNS query, the domain name corresponding to the IP address, the network device generating and sending a DNS query including the domain name and at least one local DNS setting of the network device to the device configured to the process the DNS query, and the device processing an association between the IP address and the at least one local DNS setting of the network device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07984186&OS=07984186&RS=07984186
owner: DNSstuff, LLC
number: 07984186
owner_city: Newburyport
owner_country: US
publication_date: 20080826
---
The present invention generally relates to a device communication and more particularly relates to a method system and product for discovering a communication between user agents and DNS devices.

A user agent is application software under control of a user which accesses manipulates displays and supports navigation within information from its environment such as on a computer network. Typically the application software is used to access resources made available via various protocols. Application software includes but is not limited to desktop graphical browsers text browsers voice browsers mobile phones multimedia players plug ins and some software assistive technologies used in conjunction with browsers such as screen readers screen magnifiers and voice recognition software.

Domain Name System DNS is an Internet protocol and service that translates hostnames and domain names into Internet Protocol IP addresses. The domain name www.example.com might translate to 192.168.1.1 for example. The DNS is its own network. If one DNS server does not know how to translate a particular domain name it asks another one and so on until the correct IP address is acquired. A client consumer user or generally anyone that utilizes DNS may be called a resolver resolvers may be located in the application layer of the networking software of each Transmission Control Protocol Internet Protocol TCP IP capable entity. User agents that use the DNS rely heavily on the resolver. Communications are made to the DNS based upon the user agent s DNS settings which in turn handles the communications required.

The Web is based on the concept of hypertext and a transfer method known as Hypertext Transfer Protocol HTTP which is designed to run primarily via TCP IP connections. HTTP permits user agents of client systems connected to networks to access independent and geographically scattered systems also connected to the Internet. User agent requests for data are made by means of an HTTP request. An HTTP request is information that a user agent sends to an entity containing the details of what the user agent wants and will accept back. An HTTP response is information that an entity sends back to the user agent in response to receiving an HTTP request. These transmissions may contain environment variables which provide information about the entities involved. Much of this information may be contained in the headers of the HTTP request and may include the client IP address and identification of the user agent. However there are no protocols that specify including current DNS settings of the client user agent as an environmental variable. Therefore a server has no way to learn of both the IP address and current DNS settings from the request made by the client user agent.

The present invention enables an entity that answers network requests to discover and store an association between a requesting user agents IP address and its DNS settings. The present invention enables an entity that responds to network requests to notify a requesting entity of the reputation of the requesting entities DNS settings. The present invention enables a server to deny network resource access to user agents having unapproved DNS settings. The present invention enables remote entities to validate IP address lists contained in but not limited to the requesting entities DNS settings.

In general in accordance with the present invention a method includes an entity receiving a request from another entity a request including the IP address of the entity generating and providing a domain name for locating an entity configured to at least one of a store forward analyze monitor validate authenticate and or process a DNS query a domain name corresponding to the IP address of the entity receiving the request causing the entity to query the responding entity for resolution of DNS information where the receiving entity correlates stores and or organizes the request of the requesting entity with other information about the requesting entity.

In accordance with another aspect of the present invention a method includes a first entity receiving a first request from a second entity the first request including an IP address of the second entity generating a domain name for locating a DNS server the domain name corresponding to the IP address of the first entity sending the domain name to the second entity the second entity generating a second request including the domain name and at least one local DNS setting of the second entity the second entity sending the second request to the indicated DNS server the first entity storing an association between the IP information and the at least one DNS setting of the second entity.

In accordance with yet another aspect of the present invention a method includes a first entity receiving a first request from a second entity the first request including an IP address of the second entity the first entity generating and sending a content to the second entity the content including a domain name for locating a DNS server the domain name corresponding to the IP address of the first entity. The second entity generating and sending a second request to a DNS server the second request including the domain name and at least one DNS setting of the second entity and the DNS server storing and forwarding an association between the IP address and the at least one DNS setting.

In accordance with an additional aspect of the present invention an entity or a system includes a first entity a DNS server configured to store an association between an IP address and at least one DNS setting of a second entity and a third entity a content server in operative association with the first entity the third entity configured to receive a first request for a first content from the third entity the first request including a first domain name to locate the third entity and the IP address of the first entity generate a second content including a second domain name to locate the first entity a DNS server the second domain name corresponding to the IP address and the first domain name and send the first content and the second content to the first entity wherein the first entity is configured to generate a second request including the second domain name and the at least one DNS setting and send the second request to the third entity.

In accordance with other additional aspects of the present invention a computer readable medium that includes computer executable instructions may be used to perform substantially the same methods as those described above is provided.

The foregoing and other features of the invention are hereinafter fully described and particularly pointed out in the claims. The following description and the annexed drawings set forth in detail one or more illustrative aspects of the invention such being indicative however of but one or a few of the various ways in which the principles of the invention may be employed.

The present invention is described with reference to the drawings wherein like reference numerals are used to refer to like elements throughout.

Myriads of new applications and services may be developed if an entity was configured to learn the association between the IP address and current DNS settings via the resource request of the client user agent. Accordingly there is a need for a system to remotely discover a user agent s current DNS configuration.

Client computers may be any network access apparatus including hand held devices palmtop computers personal digital assistants PDAs notebook laptop portable computers desktop PCs workstations and or larger smaller computer systems. It is noted that the network access apparatus may have a variety of forms including but not limited to a general purpose computer a network computer a network television an internet television a set top box an IP enabled telephone an internet appliance a portable wireless device a television receiver a game player a video recorder and or an audio component for example. Each client typically includes one or more processors memories and input output devices not shown .

The computers may be similarly configured. However in many instances sites may include many computers perhaps connected by a separate private network. In fact the network may include hundreds of thousands of individual networks of computers. One embodiment of the present invention includes a specific type of computer system called a DNS server system which stores in memory and on disk and other means a database having DNS records resource records that translate domain names into IP addresses and vice versa. The DNS server system is connected to network . The DNS is a distributed database of mappings implemented in a hierarchy of DNS servers name servers and an application layer protocol that allows hosts and name servers to communicate in order to provide the translation service. Name servers for example may resemble but is not limited to UNIX machines running BIND software. In order to deal with an issue of scale for example of the Internet the DNS uses a large number of name servers organized in a hierarchical fashion and distributed around the world. No single name server has all of the mappings for all of the hosts on the Internet. Instead the mappings are distributed across many name servers .

Although the client computers are shown separate from the server computers it should be understood that a single computer may perform the client and server roles simultaneously. Those skilled in the art will appreciate that the computer environment shown in is intended to be merely illustrative. The present invention may also be practiced in other computing environments. For example the present invention may be practiced in multiple processor environments wherein the client computer includes multiple processors. Moreover the client computer need not include all of the input output devices as discussed above and may also include additional input output devices. Those skilled in the art will appreciate that the present invention may also be practiced with Intranets and more generally in distributed environments in which a client computer requests resources from other computers or itself.

During operation of the distributed system clients may access information records stored by the servers while utilizing for example the Web. The records of information may be in the form of Web pages . The pages may be data records including as content plain textual information or more complex digitally encoded multimedia content such as software programs graphics audio signals videos and so forth. It should be understood that although this description focuses on locating information on the World Wide Web the system may also be used for locating information via other wide or local area networks WANs and LANs or information stored in a single computer using other communications protocols.

The clients may execute user agents such as web browser programs to locate the pages or records . The browser programs enable users to enter addresses of specific Web pages to be retrieved. Typically the address of a Web page is specified as a Uniform Resource Identifier URI or more specifically as a Uniform Resource Locator URL . In addition when a page has been retrieved browser programs may provide access to other pages or records by clicking on hyperlinks or links to other Web pages or data. Such links may provide an automated way to enter the URL of another page and to retrieve that page.

A client of the DNS is typically called a resolver . Resolvers are typically located in the application layer of the networking software of each TCP IP capable machine. Users typically do not interact directly with the resolver . Resolvers query the DNS by directing queries at name servers which contain parts of the distributed database that is accessed by using the DNS protocols to translate domain names into IP addresses needed for transmission of information across the network. DNS is commonly employed by other application layer protocols including HTTP SMTP and FTP to translate user supplied domain names to IP addresses. When a user agent e.g. an HTTP client requests a URL having a resolvable domain name in order for the computer to be able to send an HTTP request message to a computer the user agent must obtain the IP address related to that specific resolvable domain name. The user agent runs the resolver DNS client as the client side of the DNS application. The user agent extracts the domain name from the URL and passes the domain name to the resolver as the client side of the DNS application. As part of a DNS query message the DNS client sends the domain name to a DNS server system . The DNS client eventually receives a reply which includes the IP address for the domain name in question. The browser then opens a TCP connection to the HTTP server located at the IP address.

In a more specific implementation the server employs a port listener to detect the receiving of the first request step for web content such as with an HTTP request. The server further employs an identifier generator to generate step the new domain name having a subdomain corresponding to the IP address of the server. For example the domain name for locating the server is example.com and access to the server is requested by the user agent having an IP address of 6.27.20.07 the identifier generator may then generate a subdomain and form a new domain name 6 27 20 07.example.com and embed this new domain name within the web content e.g. embedding an image tag into an HTML or XML file the tag having a URL for automatically accessing the new domain name and sent via a query responder back to the user agent . Note that the generated subdomain may be in the form of a GUID or any other identifier to encode encrypt the IP address and or any other environment variables such as URL or REFERER from the HTTP request. By encoding environment variables in a GUID enables the method to be deployed via a remote hosting script solution for monitoring or tracking usage of the instant invention of websites owned by licensees or other parties.

Web content is received and the user agent generates and sends step another request for accessing the image associated with the new domain name. In order to locate this new domain name one or more queries get sent to the DNS resolver in the local operating system of the user agent which sends a DNS query to one or more of their local DNS servers. The local DNS servers forward the request to the server using standard DNS resolution. The port listener may be configured to listen for DNS queries as well as HTTP requests FTP requests POP SMTP requests and the like. One of ordinary skill in the art is able to configure servers to detect spam virus in e mails received from questionable IP DNS pairs for example.

The request with the new domain name is received and the server may extract the IP address from the subdomain and at least one of a store forward analyze monitor validate authenticate and process step in the IP DNS log file database an association between the IP address and the at least one DNS setting found from the DNS request received by the port listener .

This new domain name may also serve as a virtual address that may generate and send a cookie including the GUID and even a TTL value to then be processed and stored by the user agent . Also the server resolves the user agent DNS query of the new domain name having the GUID. This is particularly the case when a user agent attempts to access the network resource or the server for the first time. Additionally the server may check for a stored user agent cookie before generating GUID. The cookie may serve as a cache to lower the amount of GUID s generated which may minimize bandwidth and frequency of data transfer upon making additional requests after GUID creation.

Though the IP address DNS setting log file database may be a new source of intrinsic value by applying trend analysis IP DNS pair stability frequency counts and the like there are numerous other applications that may be improved by having access to the IP DNS pair database .

Pharming is the name sometimes given to the practice of attackers modifying pieces of the DNS system so that users may think they are visiting a particular Web site but are in reality visiting a fraudulent site run by the attackers. For example a user may think that they are accessing the website example.com but an attacker may have modified aspects of the name resolution system so that example.com resolves to the attacker s website instead where the attacker may attempt to steal the user s username and password. In additional embodiments the system may guard against pharming by recording traits of the IP address DNS setting of the user agent .

One or more programs may be constructed to perform one or more aspects of the present invention. The program may be integrated as part of an API operating system or plug in add on for a web browser . Such a program may be downloaded and installed for integration into the command line of a device or location field of a browser program . In addition such a program product may be combined with other plug in products to offer additional functionality and to more quickly reach an existing customer base. Program installation may be activated in response to accessing a web site or any network resource corresponding to a URI. Modifying the source code of the browser program itself or OS e.g. Windows Linux NT UNIX MAC etc. may be more desirable in effect enabling tens or hundreds of millions of users to take advantage of more creative ways to have the advantage of remote DNS setting monitoring.

For any of the above implementations the IP DNS setting association may be determined before during and or after DNS resolution on the client side server side or at any point on a network including at peer to peer machines proxy servers firewalls hubs routers resolvers and nameservers etc. In addition the determination of IP DNS setting association may further reside in hardware software and or firmware e.g. network card BIOS adapter cards etc. .

In one aspect of the present invention databases or registries may be centrally maintained and updated through redundant servers. The data structure of such information may be stored as metadata e.g. XML or in any other format to allow integration of such data with the data managed by other naming service providers. Through Application Programming Interface API naming service providers may communicate with such resolvers registries and or databases. Furthermore access may be both platform and language independent.

The same teachings may be applied to those skilled in the art by providing a text box object as input that may be located anywhere and on any web page including a text box that is embedded or part of an on line advertisement. The text box object may be used in a stand alone application and stored on magnetic and or optical media that is either non volatile writable removable or portable. The text box object may be incorporated as an applet or servlet and embedded in other applications. The text box may be integrated in the task bar or any part of the GUI s OS or the OS bypassed and overlaid as a graphic on a display device based on modifications to a video card and or its associated firmware or software drivers. The command line text box may further be overlaid as an interactive graphical object in other embodiments such as Internet television cable television digital television or interactive television through an Internet appliance or set top box.

Although the present invention has been shown and described with respect to a certain preferred aspect or aspects it is obvious that equivalent alterations and modifications will occur to others skilled in the art upon the reading and understanding of this specification and the annexed drawings. In particular regards to the various functions performed by the above described items referred to by numerals components assemblies devices compositions etc. the terms including a reference to a means used to describe such items are intended to correspond unless otherwise indicated to any item which performs the specified function of the described item e.g. that is functionally equivalent even though not structurally equivalent to the disclosed structure which performs the function in the herein illustrated exemplary aspect or aspects of the invention. In addition while a particular feature of the invention may have been described above with respect to only one of several illustrated aspects such feature may be combined with one or more other features of the other aspects as may be desired and advantageous for any given or particular application.

The description herein with reference to the figures will be understood to describe the present invention in sufficient detail to enable one skilled in the art to utilize the present invention in a variety of applications and devices. It will be readily apparent that various changes and modifications could be made therein without departing from the spirit and scope of the invention as defined in the following claims.

