---

title: User interface for online ads
abstract: A user interface may be utilized to allow a user to control display properties of online ad content on a hosting webpage (e.g., hosting ads from one domain on a webpage from a different domain). This may be accomplished by creating a cross-domain frame in the hosting webpage, which can contain the ad content. An instantiation of a user interface may be created on the hosting webpage that has an ability to control display properties of the cross-domain frame, thereby controlling display properties of the ad content in the cross-domain frame. Further, a task manager may be utilized as part of the user interface to facilitate a host of the hosting webpage to manage ad content.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09524344&OS=09524344&RS=09524344
owner: MICROSOFT CORPORATION
number: 09524344
owner_city: Redmond
owner_country: US
publication_date: 20080626
---
This application claims priority to and the benefit of U.S. Provisional Application Ser. No. 61 058 214 which was filed Jun. 3 2008 entitled USER INTERFACE FOR ONLINE ADS the entirety of which is hereby incorporated by reference as if fully set forth herein.

In a computing environment websites and associated webpages often host online advertisements intended to be viewed by online users of the respective websites. Online advertisements typically come from a different domain than that of the hosting website. Online advertisers and hosting websites typically work with an ad syndicator which takes calls for ads from the host pulls ads from the advertiser and then directs the ads to the host s website. Often online ads have rich functionality including an ability to expand and or move about a webpage.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key factors or essential features of the claimed subject matter nor is it intended to be used to limit the scope of the claimed subject matter.

Typically when a webpage displays an online ad the display properties of the ad can be controlled by an owner of the ad and or the hosting webpage. As an example when a hosting webpage wishes to host an ad it may call to an ad syndicator for an ad indicating specifications e.g. height width for an open ad space in the host webpage. The ad syndicator can pull an ad from a catalogue of ads supplied by advertisers which meets the specifications supplied by the host webpage. In this example the ad is placed directly into the host webpage in such a way that it meets the display specifications of the host webpage. When this occurs as long as the ad meets the hosting webpage specifications the ad is often allowed to provide rich functionality including changing its size and or position on the host webpage.

However webpage viewers often find it quite annoying when ads expand over host webpage content fly around the page or follow the viewer as they scroll through a webpage for example. It may be desirable to allow webpage viewers users to control display properties of online ad content while accessing a webpage. Current or prior solutions include placing functional controls inside the ad content such as closing an ad closing and expanding ad content or some other display function. However these controls are typically supplied by the ad owner therefore if an ad content is not functioning properly e.g. if it becomes stuck open or the ad owner uses a display of a function to trick a user into clicking on the ad content these controls may not be effective.

Techniques and systems are provided herein for creating an interface for users to control display properties of online ad content on a webpage. The techniques and systems create a cross domain frame in a host webpage e.g. a cross domain inline frame IFrame which may be utilized to host ad content. An application program interface API can be utilized to create a user interface on the hosting webpage that maintains functional control of display properties of the cross domain frame. For example the API can be used by a host to determine which components of the user interface may be implemented and a link to a JavaScript file from an ad syndicator may be established for the host webpage. Components of the user interface that may be utilized can include for example closing the IFrame minimizing the IFrame maximizing the IFrame and resizing the IFrame. Further for example a colored border may be utilized that distinguishes IFrame content from host webpage content. Additionally for example a tool bar and or a tooltip box may be utilized that displays an ad content source upon mouseover. After the user interface is established for the host webpage the host webpage can for example allow users to control display properties of the IFrame e.g. including the ad content in the IFrame .

To the accomplishment of the foregoing and related ends the following description and annexed drawings set forth certain illustrative aspects and implementations. These are indicative of but a few of the various ways in which one or more aspects may be employed. Other aspects advantages and novel features of the disclosure will become apparent from the following detailed description when considered in conjunction with the annexed drawings.

The claimed subject matter is now described with reference to the drawings wherein like reference numerals are used to refer to like elements throughout. In the following description for purposes of explanation numerous specific details are set forth in order to provide a thorough understanding of the claimed subject matter. It may be evident however that the claimed subject matter may be practiced without these specific details. In other instances structures and devices are shown in block diagram form in order to facilitate describing the claimed subject matter.

At a user interface UI is created in code of the host webpage using an application program interface API . A UI for example can be created that may control display properties of an IFrame. As an example an API used to facilitate ad hosting on a host webpage may be used by a host to determine whether the UI will be used on their host webpage. Further the host may choose which portions of the UI will be utilized on the host webpage.

In this example in order to create a UI on the host webpage a link may be made between the code of the host webpage and a file e.g. a JavaScript file from an ad syndicator that instantiates the UI on the host webpage. It will be appreciated that coding for the UI may be directly installed into the code of the host webpage may be stored in another location and referenced by the website or may be obtained in another manner devised by those skilled in the art. The techniques and systems described herein are not limited to one particular technique for creating an instantiation of the UI on the host webpage.

In exemplary method at the user interface is allowed to control the cross domain frame e.g. control the display properties of an IFrame . As an example host webpage viewers users may be allowed to access the UI to control display properties of the cross domain frame. In this way because ad content is contained within the cross domain frame the users can be allowed to control display properties of the ad content. In this example if the ad content contains a bug that causes it to remain in an expanded state e.g. expanded over host webpage content a user may be allowed to close the cross domain frame thereby closing the buggy ad content.

In one aspect a website host may wish to utilize a task manager to manage ads hosted on a host webpage. For example a task manager may be an instantiation of a user interface accessible by the host which can assist the host in managing a location size functionality or other properties of ads hosted on a webpage. is a block diagram illustrating an exemplary method for utilizing a task manager to manage ads on a host webpage which may be used in conjunction with the exemplary method described in .

In this exemplary method utilizing a task manager to manage ads on the host webpage at may comprise utilizing an ad source manager at . For example if the host wishes to identify a source of the ad content the task manager can display an IP address of an owner of the ad. In this example the task manager can be linked directly to an ad syndicator which supplies the ad content to the host webpage. In this way the ad syndicator may have access to the source of the ad and can supply it to the host using the task manager.

In the exemplary method utilizing a task manager to manage ads on the host webpage at may further comprise utilizing an ad location manager at and utilizing an ad size manager at . For example if the host wishes to identify and manage a location and size of ad content on the host webpage the task manager can display the size and location to the host. Further in this example the task manager can be enabled to allow the host to resize or relocate the ad content on the host webpage. The task manager can be linked to an ad syndicator which can determine if the adjusted location and or size as changed by the host meet the specifications set forth by the ad owner for example. Additionally in this example the ad syndicator may enable the task manager to only allow the host to relocate and or resize the ad content if it meets specifications set forth by the ad owner.

In the exemplary method utilizing a task manager to manage ads on the host webpage at may further comprise utilizing an ad control manager at . For example the host may wish to activate or deactivate hosting particular ad content on the host webpage. In this example the task manager can list respective ads in the UI for the host to select. A host may be able to select a particular ad from the list for example for deactivation or activation. The task manager can be directly linked to the ad syndicator which may remove insert the particular ad content from the host webpage.

It will be appreciated that while the examples above describe an active link between the task manager and the ad syndicator to facilitate managing ad content the techniques and systems described herein are not limited to a task manager being linked directly to an ad syndicator. A task manager for example may stand alone as an UI in the host webpage and may be able to perform the actions described above without a direct link to an ad syndicator or by using other methods devised by those skilled in the art.

At of the exemplary method utilizing the task manager to manage ads on a host webpage may comprise allowing the host to access the task manager. In this aspect as an example allowing the host to access the task manager can give them an ability to perform the various ad management tasks described above. However a task manager may be devised that automatically performs ad management based on host preferences or other methods devised by those skilled in the art.

In another aspect creating a UI on the host webpage may be performed using an API for example that is configured to facilitate the host webpage hosting ad content from an ad syndicator. In one embodiment a source code interface e.g. a set of application program interfaces APIs may be devised that provides an interface for a host webpage to communicate ad content parameters and restrictions to an ad syndicator. Additionally in this embodiment the set of APIs may be used to create an instantiation of the UI on the host webpage. As an example the APIs may provide a set of UI parameters that a host of the hosting webpage can choose from which can become part of the UI to be used by webpage viewers users .

In this embodiment of the exemplary method at the host webpage can link to a JavaScript file from the ad syndicator. In this embodiment an instantiation of the UI is created on the hosting webpage by linking to a file for example at the ad syndicator s site. In this example instead of injecting additional code for a UI into the hosting webpage source code a link is created between the hosting webpage and the UI program file at the ad syndicator s site. In this way a secure ad serving experience can be provided for both the host webpage and the ad owner or syndicator. For example if a webpage host used their own UI code they may devise a way to forge user clicks e.g. increase an amount of times user s appear to click on an ad in order to increase an amount paid to the host by the ad owner e.g. a type of click fraud whereby host s are paid more by ad owners when ads are clicked on more by users .

It will be appreciated that while the embodiment above describes linking a hosting webpage to a code file from an ad syndicator the techniques and systems described herein are not limited to this embodiment. For example UI program code may be directly injected into a hosting webpage to create a UI to control ad content. Further other techniques may be devised by those skilled in the art that enable an instantiation of a UI on the hosting webpage that controls ad content.

In this embodiment of the exemplary method at the UI becomes an element within the hosting webpage s hypertext markup language HTML code. As an example the UI may become a element in the host webpage HTML. In this embodiment the UI is merely able to control those properties of the IFrame for example that were previously specified by the host. While the UI is an element in the host webpage code it may not have an ability to interact with content inside the IFrame. It will be appreciated that the UI may be instantiated into the host webpage using other means devised by those skilled in the art. The techniques and systems described herein are not limited to the UI being an element in the HTML code of the host webpage.

In another aspect once a UI is generated on a hosting webpage it may be allowed to control a cross domain frame IFrame . In one embodiment the UI may be limited to controlling specific display parameters of the IFrame and because the IFrame can contain ad content controlling specific display parameters of the ad content inside the IFrame for example. Display parameters for example may include minimizing maximizing and or closing an IFrame on the host webpage. Further in this example display parameters can include displaying a title bar and or a tool tips box in the IFrame. Additionally in this example a border may be displayed around the IFrame distinguishing its contents from that of the host webpage. Other display parameters may include an ability to resize and or move the IFrame within the host webpage.

In this embodiment of the exemplary method at a title bar may be displayed in the IFrame that shows a source for ad content e.g. an owner of the ad content inside the IFrame upon a mouseover of the ad content in the IFrame. Further at a tooltip box may be displayed that shows a source for ad content inside the IFrame upon a mouseover of the ad content in the IFrame. As an example while a user s cursor is not over the ad content in the IFrame a title bar in the IFrame may display host content. However in this example when the user moves the cursor over mouseover the ad content in the IFrame the title bar can display the source of the ad content to the user. Further in this embodiment when a user stops their cursor over mousehover the ad content a tooltip box can pop up that shows the source of the ad content to the user.

In this embodiment of the exemplary method at and functional buttons may be displayed that allow a user to respectively minimize close and maximize the IFrame within the host webpage. As an example the UI may display buttons that when clicked on enable a user to minimize close or maximize the IFrame. In this way the user can control whether they wish to see and how they wish to see ad content inside the IFrame. In this embodiment an advantage of utilizing the UI to perform these functions rather than allowing the ad content to provide these functions is that if the ad content is either malicious or does not function properly the user can decide to close or minimize it.

In this embodiment of the exemplary method at functional handles may be displayed that provide for resizing of the IFrame. Further at functional anchor points may be displayed that provide for moving the IFrame within the host webpage. As an example if a user wishes to display a custom size of the IFrame e.g. to display only a portion of an expanded ad content such as a video playing within the IFrame when the user moves their cursor to the border expansion arrows can be displayed that allow the user to resize the IFrame. Additionally in this example if the user wishes to move an IFrame to another location in the host webpage e.g. if expanded ad content covers a portion of the host webpage that the user wishes to view when the user moves their cursor to a particular location an anchor point may be displayed that allows the user to move the IFrame.

It will be appreciated that while particular display properties for a cross domain frame have been described in this embodiment the techniques and systems described herein are not limited to these particular display properties. In a computing environment there are many varied properties that may be associated with a cross domain frame on a webpage and those skilled in the art may devise ways to utilize the UI to control these properties.

A user interface UI may be devised that provides a host webpage an interface for users to control display properties of online ad content on a webpage. illustrates an exemplary embodiment of a UI. In the exemplary embodiment a host webpage has an instance of a user UI instantiated thereon. It will be appreciated that while this exemplary embodiment illustrates an instance of one UI a set of more than one UIs may be instantiated onto a host webpage comprising various parameters related to displaying the ad content on the host webpage.

In the exemplary embodiment the host webpage comprises ad content and host content in a title bar inside a cross domain frame . In this embodiment the UI comprises functional controls which are operably coupled to the cross domain frame and the controls are configured to affect display propertied of the cross domain frame . In this example the controls can be used to minimize maximize or close the cross domain frame within the host webpage .

Additionally in this embodiment the UI comprises a border delineation component configured to display a border delineating the cross domain frame content from the host webpage content. In this example the border delineation component displays a thick black line denoting the border of the cross domain frame . It will be appreciated that the border delineation component may be configured by those skilled in the art to display other visual effects that can distinguish the cross domain frame content from the host webpage content and is not limited to a thick black line.

It will be appreciated that while the exemplary embodiments and illustrate various components of a UI utilized in a variety of combinations the UI is not limited to these configurations. The UI may comprise one or more components that control display properties of the cross domain frame. Further these components may be used individually or in a variety of combinations in one or more than one UI on a host webpage. Those skilled in the art may devise UI configurations that include the described parameters and or additional parameters. Further those skilled in the art may devise UI configurations that include a variety of combinations of parameters configured to control display properties of a cross domain frame.

In one aspect a user interface may comprise a task manager accessible by a host of a hosting webpage configured to manage ad content on the host webpage. For example a task manager may be a component of a user interface accessible by the host which can assist the host in managing a location size functionality or other properties of ads hosted on a webpage. is an illustration of one embodiment of an exemplary task manager which may be utilized to manage ads on a host webpage for example in conjunction with the exemplary UI described in .

In this embodiment the task manager may comprise an ad source manager configured to identify a source of ad content e.g. an owner of the ad content . For example if the host wishes to identify a source of the ad content the task manager can display a web address of an owner of the ad content . In this example the task manager may be linked directly to an ad syndicator which can supply the ad content to the host webpage . In this way the ad syndicator may have access to the source of the ad and can supply it to the host using the task manager .

In the exemplary embodiment the task manager may further comprise an ad location manager configured to manage a location of the ad content on the host webpage . Further the task manager may further comprise an ad size manager configured to manage a size of the ad content on the host webpage . For example if the host wishes to identify and manage a location and size of ad content on the host webpage the task manager can display the size and location to the host. Further in this example the task manager may be configured to allow the host to resize or relocate the ad content on the host webpage . Additionally the task manager may be linked to the ad syndicator which can determine if the adjusted location and or size as changed by the host meet the specifications set forth by the ad owner for example. Also in this example the ad syndicator may enable the task manager to only allow the host to relocate and or resize the ad content if it meets specifications set forth by the ad owner.

In the exemplary embodiment the task manager may further comprise an ad control manager configured to manage an activity status of the ad content on the host webpage . For example the host may wish to activate or deactivate hosting of particular ad content on the host webpage . In this example the task manager can list respective ads in the UI for the host to select. A host may be able to select a particular ad from the list for example for deactivation or activation. Further the task manager may be directly linked to the ad syndicator which may remove insert the particular ad content from the host webpage .

Still another embodiment involves a computer readable medium comprising processor executable instructions configured to implement one or more of the techniques presented herein. An exemplary computer readable medium that may be devised in these ways is illustrated in wherein the implementation comprises a computer readable medium e.g. a CD R DVD R or a platter of a hard disk drive on which is encoded computer readable data . This computer readable data in turn comprises a set of computer instructions configured to operate according to one or more of the principles set forth herein. In one such embodiment the processor executable instructions may be configured to perform a method such as the exemplary method of for example. In another such embodiment the processor executable instructions may be configured to implement a system such as the exemplary system of for example. Many such computer readable media may be devised by those of ordinary skill in the art that are configured to operate in accordance with the techniques presented herein.

Although the subject matter has been described in language specific to structural features and or methodological acts it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather the specific features and acts described above are disclosed as example forms of implementing the claims.

As used in this application the terms component module system interface and the like are generally intended to refer to a computer related entity either hardware a combination of hardware and software software or software in execution. For example a component may be but is not limited to being a process running on a processor a processor an object an executable a thread of execution a program and or a computer. By way of illustration both an application running on a controller and the controller can be a component. One or more components may reside within a process and or thread of execution and a component may be localized on one computer and or distributed between two or more computers.

Furthermore the claimed subject matter may be implemented as a method apparatus or article of manufacture using standard programming and or engineering techniques to produce software firmware hardware or any combination thereof to control a computer to implement the disclosed subject matter. The term article of manufacture as used herein is intended to encompass a computer program accessible from any computer readable device carrier or media. Of course those skilled in the art will recognize many modifications may be made to this configuration without departing from the scope or spirit of the claimed subject matter.

Although not required embodiments are described in the general context of computer readable instructions being executed by one or more computing devices. Computer readable instructions may be distributed via computer readable media discussed below . Computer readable instructions may be implemented as program modules such as functions objects Application Programming Interfaces APIs data structures and the like that perform particular tasks or implement particular abstract data types. Typically the functionality of the computer readable instructions may be combined or distributed as desired in various environments.

In other embodiments device may include additional features and or functionality. For example device may also include additional storage e.g. removable and or non removable including but not limited to magnetic storage optical storage and the like. Such additional storage is illustrated in by storage . In one embodiment computer readable instructions to implement one or more embodiments provided herein may be in storage . Storage may also store other computer readable instructions to implement an operating system an application program and the like. Computer readable instructions may be loaded in memory for execution by processing unit for example.

The term computer readable media as used herein includes computer storage media. Computer storage media includes volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions or other data. Memory and storage are examples of computer storage media. Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM Digital Versatile Disks DVDs or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by device . Any such computer storage media may be part of device .

Device may also include communication connection s that allows device to communicate with other devices. Communication connection s may include but is not limited to a modem a Network Interface Card NIC an integrated network interface a radio frequency transmitter receiver an infrared port a USB connection or other interfaces for connecting computing device to other computing devices. Communication connection s may include a wired connection or a wireless connection. Communication connection s may transmit and or receive communication media.

The term computer readable media may include communication media. Communication media typically embodies computer readable instructions or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term modulated data signal may include a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal.

Device may include input device s such as keyboard mouse pen voice input device touch input device infrared cameras video input devices and or any other input device. Output device s such as one or more displays speakers printers and or any other output device may also be included in device . Input device s and output device s may be connected to device via a wired connection wireless connection or any combination thereof. In one embodiment an input device or an output device from another computing device may be used as input device s or output device s for computing device .

Components of computing device may be connected by various interconnects such as a bus. Such interconnects may include a Peripheral Component Interconnect PCI such as PCI Express a Universal Serial Bus USB firewire IEEE 1394 an optical bus structure and the like. In another embodiment components of computing device may be interconnected by a network. For example memory may be comprised of multiple physical memory units located in different physical locations interconnected by a network.

Those skilled in the art will realize that storage devices utilized to store computer readable instructions may be distributed across a network. For example a computing device accessible via network may store computer readable instructions to implement one or more embodiments provided herein. Computing device may access computing device and download a part or all of the computer readable instructions for execution. Alternatively computing device may download pieces of the computer readable instructions as needed or some instructions may be executed at computing device and some at computing device .

Various operations of embodiments are provided herein. In one embodiment one or more of the operations described may constitute computer readable instructions stored on one or more computer readable media which if executed by a computing device will cause the computing device to perform the operations described. The order in which some or all of the operations are described should not be construed as to imply that these operations are necessarily order dependent. Alternative ordering will be appreciated by one skilled in the art having the benefit of this description. Further it will be understood that not all operations are necessarily present in each embodiment provided herein.

Moreover the word exemplary is used herein to mean serving as an example instance or illustration. Any aspect or design described herein as exemplary is not necessarily to be construed as advantageous over other aspects or designs. Rather use of the word exemplary is intended to present concepts in a concrete fashion. As used in this application the term or is intended to mean an inclusive or rather than an exclusive or . That is unless specified otherwise or clear from context X employs A or B is intended to mean any of the natural inclusive permutations. That is if X employs A X employs B or X employs both A and B then X employs A or B is satisfied under any of the foregoing instances. In addition the articles a and an as used in this application and the appended claims may generally be construed to mean one or more unless specified otherwise or clear from context to be directed to a singular form.

Also although the disclosure has been shown and described with respect to one or more implementations equivalent alterations and modifications will occur to others skilled in the art based upon a reading and understanding of this specification and the annexed drawings. The disclosure includes all such modifications and alterations and is limited only by the scope of the following claims. In particular regard to the various functions performed by the above described components e.g. elements resources etc. the terms used to describe such components are intended to correspond unless otherwise indicated to any component which performs the specified function of the described component e.g. that is functionally equivalent even though not structurally equivalent to the disclosed structure which performs the function in the herein illustrated exemplary implementations of the disclosure. In addition while a particular feature of the disclosure may have been disclosed with respect to only one of several implementations such feature may be combined with one or more other features of the other implementations as may be desired and advantageous for any given or particular application. Furthermore to the extent that the terms includes having has with or variants thereof are used in either the detailed description or the claims such terms are intended to be inclusive in a manner similar to the term comprising. 

