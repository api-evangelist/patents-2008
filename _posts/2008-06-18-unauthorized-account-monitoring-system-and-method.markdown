---

title: Unauthorized account monitoring system and method
abstract: A possibly pre-infected system is inspected for the existence of tracked application-specific accounts. In a tracked application-specific account is found, the system is further audited to verify that only authorized processes are using the account and that the authorized account creation application is installed on the host computer system.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09183377&OS=09183377&RS=09183377
owner: Symantec Corporation
number: 09183377
owner_city: Mountain View
owner_country: US
publication_date: 20080618
---
The present invention relates to computer system security. More particularly the present invention relates to a system and method of detecting malicious code on a computer system.

Services are executable programs that run in sessions outside of the currently logged on user s session. Typically services run in the background and may not show any user interface. Services can start automatically when the computer system starts can be paused and restarted. Accordingly services are prime vulnerability points for attackers to compromise a computer system.

A service must run under the context of an account. An account establishes the privileges of a service running within the context of the account.

The principle of least privileges states that you give a service the least amount of access it requires to serve its function and nothing more. Thus to protect against a service that may be malicious the service is run under the context of an account that provides the service the necessary privileges required to serve its function and nothing more. However additional protection against malicious services is still needed.

A possibly pre infected system is inspected for the existence of tracked application specific accounts. If a tracked application specific account is found the system is further audited to verify that only authorized processes are using the account and that the authorized account creation application is installed on the system. For example on a Microsoft Windows type operating system the list of active services i.e. processes are checked to determine that no unauthorized unexpected services are running in one of the tracked application specific accounts.

In accordance with another embodiment real time requests to create tracked application specific accounts are intercepted. If the account creation application that is creating the account is authorized to do so the account is allowed to be created. Conversely if the account creation application that is creating the account is not authorized to do so the account creation is prevented or other protective action taken. This real time monitoring effectively closes off the creation of malicious accounts disguised as commonly used accounts i.e. as tracked application specific accounts.

In accordance with another embodiment real time requests to create processes within tracked application specific accounts are intercepted. If the process being created is authorized to use the account the process is allowed to be created. Conversely if the process being created is not authorized to use the account the process creation is prevented or other protective action taken. This real time monitoring effectively closes off the creation of malicious processes within commonly used accounts.

Embodiments are best understood by reference to the following detailed description when read in conjunction with the accompanying drawings.

Common reference numerals are used throughout the drawings and detailed description to indicate like elements.

In accordance with one embodiment referring to together a possibly pre infected system e.g. host computer system is inspected for the existence of tracked application specific accounts. If a tracked application specific account is found the host computer system is further audited to verify that only authorized processes are using the account in an AUTHORIZED PROCESS USING ACCOUNT CHECK OPERATION . Host computer system is further audited to verify that the authorized account creation application authorized to create the account is installed on host computer system in an AUTHORIZED ACCOUNT CREATION APPLICATION INSTALLED CHECK OPERATION . For example on a Microsoft Windows type operating system the list of active services i.e. processes are checked to determine that no unauthorized e.g. malicious services are running in one of the tracked application specific accounts. If an unauthorized process is detected or the authorized account creation application is not installed protective action is taken in a TAKE PROTECTIVE ACTION OPERATION e.g. the unauthorized process and or account is terminated.

In accordance with another embodiment referring now to in real time behavior monitoring and blocking requests to create tracked application specific accounts are intercepted in an ACCOUNT BEING CREATED CHECK OPERATION . If the account creation application that is creating the account is authorized to do so a YES in ACCOUNT BEING CREATED BY AUTHORIZED ACCOUNT CREATION APPLICATION CHECK OPERATION the account is allowed to be created. Conversely if the account creation application that is creating the account is not authorized to do so a NO in ACCOUNT BEING CREATED BY AUTHORIZED ACCOUNT CREATION APPLICATION CHECK OPERATION the account creation is prevented or other protective action taken in a TAKE PROTECTIVE ACTION OPERATION . This real time monitoring effectively closes off the creation of malicious accounts disguised as commonly used account i.e. as tracked application specific accounts.

In accordance with another embodiment referring now to in real time behavior monitoring and blocking requests to create processes within tracked application specific accounts are intercepted in a PROCESS BEING CREATED CHECK OPERATION . If the process being created is authorized to use the account a YES determination in a PROCESS AUTHORIZED TO USE ACCOUNT CHECK OPERATION the process is allowed to be created. Conversely if the process being created is not authorized to use the account a NO determination in a PROCESS AUTHORIZED TO USE ACCOUNT CHECK OPERATION the process creation is prevented or other protective action taken in a TAKE PROTECTIVE ACTION OPERATION . This real time monitoring effectively closes off the creation of malicious processes within commonly used accounts.

More particularly is a diagram of a client server system that includes an unauthorized account monitoring application executing on a host computer system in accordance with one embodiment.

Host computer system sometimes called a client or user device typically includes a central processing unit CPU sometimes called a processor an input output I O interface and a memory . Host computer system further includes standard devices like a keyboard a mouse a printer and a display device as well as one or more standard input output I O devices such as a compact disk CD or DVD drive floppy disk drive or other digital or waveform ports for inputting data to and outputting data from host computer system .

In one embodiment unauthorized account monitoring application is loaded into host computer system via I O device such as from a CD DVD or floppy disk containing unauthorized account monitoring application .

Host computer system is coupled to a server system of computer system by a network . Server system typically includes a display device a processor a memory and a network interface .

Host computer system is also coupled to an allowed accounts update information server computer system similar to server system by network .

Network can be any network or network system that is of interest to a user. In various embodiments network interface and I O interface include analog modems digital modems or a network interface card.

Unauthorized account monitoring application is stored for example in memory of host computer system and executed on host computer system . In accordance with one embodiment memory further includes an allowed accounts database for use by unauthorized account monitoring application .

The particular type of and configuration of host computer system allowed accounts update information server computer system and server system are not essential to this embodiment.

Herein in one embodiment malicious code is defined as any computer program module set of modules or code that enters a computer system environment without an authorized user s knowledge and or without an authorized user s consent.

As will be recognized by one of ordinary skill in the art having the benefit of this disclosure an account is a set of privileges. A privilege is a permission to perform an action. More particularly an account determines the primary security context of a process. The security context determines the ability of the process for example to access local and network resources.

There are many different types of accounts. Of particular interest are application specific accounts that are specifically created for an application. An application that creates an application specific account is referred to as an account creation application. Further the process created by an account creation application within an application specific account is referred to as an application specific process.

To illustrate Microsoft Corporation s Internet Information Server IIS application creates the following accounts 1 the iisuser account 2 the IUSER machinename account and 3 the IWAM machinename account where machinename is replaced with the name of the host computer system itself. In accordance with this example the IIS application is the account creation application for the application specific accounts 1 the iisuser account 2 the IUSER machinename account and 3 the IWAM machinename account. Further once the application specific accounts are created the IIS application creates application specific processes therein.

As another example Microsoft Corporation s ASP.net application creates the ASP.NET V2.0 account. In accordance with this example the ASP.net application is the account creation application for the application specific account the ASP.NET V2.0 account. Further once the application specific ASP.NET V2.0 account is created the ASP.net application creates one or more application specific processes therein.

In yet another example Microsoft Corporation s SQL server application creates the SQL account. In accordance with this example the SQL server application is the account creation application for the application specific account SQL account. Further once the application specific SQL account is created the SQL server application creates one or more application specific processes therein.

Accordingly an account creation application creates a specially reserve account s i.e. the application specific account s uniquely associated with the account creation application. Further once the application specific account is created the account creation application creates a specially reserved process es i.e. an application specific process es therein. In accordance with one embodiment allowed accounts database is a database of application specific processes application specific accounts and associated account creation applications.

In one embodiment a master copy of the allowed accounts database is maintaining at allowed accounts update information server computer system and updates are downloaded periodically from allowed accounts update information server computer system to host computer system to update allowed accounts database .

Illustratively a security company analyzes applications accounts and processes to determine which applications legitimately create application specific accounts and which legitimate processes use the application specific accounts. This information is compiled into allowed accounts database .

In one embodiment an application is an executable file. An executable file is a file who s contents are meant to be interpreted as a program by a computer. In one example an executable file has a .exe extension an EXE file but has other extensions such as .net in other embodiments. An application is executed using any one of a number of techniques as will be recognized by one of ordinary skill in the art having the benefit of this disclosure and the particular technique used is not essential to this embodiment.

In one embodiment an account creation application directs the operating system of host computer system to create an account on behalf of the account creation application. In another embodiment an account creation application includes an installer that creates an account on behalf of the account creation application. However depending upon the particular operating system and account creation application accounts can be created on behalf of the account creation application using any one of a number of techniques as will be recognized by one of ordinary skill in the art having the benefit of this disclosure and the particular technique used is not essential.

In one embodiment a process is an instance of the computer program that is being executed. An account creation application includes at least one process executing with the context of an account. Typically an account creation application includes several concurrent processes executing within the context of several corresponding accounts.

One example of a process is a service. Services are executable programs that run in sessions outside of the currently logged on user s session. Typically services run in the background and may not show any user interface. Services can start automatically when the computer system starts can be paused and restarted. Accordingly services are prime vulnerability points for attackers to compromise a computer system.

To illustrate malicious code e.g. a compromised service or otherwise malicious process sometimes called malware creates an application specific account for itself and executes within the application specific account. However the account creation application which would legitimately create the application specific account is not present on host computer system . Further the malware is not the application specific process which would legitimately use the application specific account.

As described below in accordance with one embodiment these mismatches between the existence of the account creation application the application specific account and the malware using the application specific account are used to detect and defeat the malware.

From an ENTER OPERATION flow moves to a SELECT ACCOUNT OPERATION . In SELECT ACCOUNT OPERATION an account of host computer system is selected. For example an operating system function is used to enumerate e.g. list the active accounts of host computer system . A first account from this list of active accounts of host computer system is selected in SELECT ACCOUNT OPERATION .

From SELECT ACCOUNT OPERATION flow moves to a KNOWN ACCOUNT CHECK OPERATION . In KNOWN ACCOUNT CHECK OPERATION a determination is made as to whether the account selected in SELECT ACCOUNT OPERATION is a known account.

In one embodiment an account is either a known account or an unknown account. Generally a known account is specifically created on behalf of an account creation application. Conversely an unknown account is a generic account that can be created for any one of a number of different reasons and is not uniquely associated with an account creation application.

In accordance with this embodiment a known account is an application specific account that appears in allowed accounts database . Stated another way a known account is an application specific account that is being tracked in allowed accounts database . Conversely an unknown account is a generic or otherwise unknown account that does not appear in i.e. is absent from allowed accounts database . An example of using allowed accounts database to determine whether an account is a known account or an unknown account is set forth in reference to .

Each entry includes a plurality of attributes. Specifically for each application specific account sometimes called a tracked application specific account the associated account creation application that legitimately creates the application specific account is listed as well as the application specific process that legitimately uses the application specific account.

The account creation application that legitimately creates the application specific account is sometimes called the authorized account creation application for the application specific account. Further the application specific process that legitimately uses an application specific account is sometimes called an authorized process for the application specific account.

To illustrate entry A includes an application specific account A. Entry A further includes an account creation application A i.e. an authorized account creation application that legitimately creates application specific account A. Further entry A further includes an application specific process A i.e. an authorized process that legitimately use application specific account A. The other entries B . . . contain accounts B . . . applications B . . . and processes B . . . respectively in a similar manner to entry A and so are not discussed in detail.

Although a one to one correlation between account A application A and process A is set forth an account creation application is associated with one or more application specific accounts in one embodiment. Further an application specific account is associated with one or more application specific processes in one embodiment. In yet another embodiment the account creation application and the application specific process are one and the same i.e. the account creation application creates that account and then uses it.

Although one example of an entry A of allowed accounts database is illustrated and discussed above it is to be understood that allowed accounts database can be organized in any one of a number of different fashions and can contain much more or different information. Generally for each account there is an account creation application that is authorized to create the account and one or more processes that are authorized to use the account.

Further although allowed accounts database is discussed herein as containing accounts applications and processes in light of this disclosure those of skill in the art will understand that the accounts the applications and the processes themselves are not actually contain within allowed accounts database but only their description e.g. their name or other identifier. Stated another way allowed accounts database contains a listing of associated accounts applications and processes.

To illustrate the account may be hard coded such as SQL or a substitution string such as the IWAM MACHINENAME where MACHINENAME is replaced by the name of the machine host computer system itself. The associated application and or process is a file name a hash of the application or process a digital signature of the application or process or any other appropriate and secure way to identify the authorized account creation application and authorized process that creates or uses the account. Generally allowed accounts database can be considered a white list of allowed accounts applications and processes.

Accordingly referring now to and together if the account is not a known account i.e. is not contained within allowed accounts database flow moves from KNOWN ACCOUNT CHECK OPERATION to an ADDITIONAL ACCOUNT CHECK OPERATION described further below. Conversely if the account is a known account i.e. is contained within allowed accounts database flow moves from KNOWN ACCOUNT CHECK OPERATION to an AUTHORIZED PROCESS USING ACCOUNT CHECK OPERATION .

In AUTHORIZED PROCESS USING ACCOUNT CHECK OPERATION a determination is made as to whether an authorized process is using the account. As discussed above an authorized process is an application specific process that legitimately uses the account.

Illustratively an operating system function is used to enumerate e.g. list the active process of the account. In one embodiment allowed accounts database is queried to determine whether the active process is authorized to use the account. More particularly if an entry in allowed accounts database associates the active process with the account a determination is made that the process is authorized to use the account.

To illustrate assume that the selected account is account A. An operating system function is used to enumerate the active processes of account A and returns with an indication that process A is using account A. As process A is associated with account A in entry A in allowed accounts database process A is authorized to use account A.

Conversely if there is no entry that associates the process with the account in allowed accounts database a determination is made that the process is not authorized i.e. is unauthorized to use the account. Specifically as the process is not one that would legitimately use the account it is highly likely that the process has been created for malicious purposes.

For example malicious code has created the process i.e. a malicious process using a commonly used account in an attempt to disguise the malicious process. However in accordance with this embodiment the fact that the malicious process is not authorized to use the account is used to detect the malicious process.

If the process is not authorized to use the account flow moves from AUTHORIZED PROCESS USING ACCOUNT CHECK OPERATION to a TAKE PROTECTIVE ACTION OPERATION . In TAKE PROTECTIVE ACTION OPERATION protective action is taken to protect against the unauthorized process using the account.

In one embodiment the unauthorized process is terminated. In another embodiment a notification is provided that an unauthorized process has been detected using the account. In various embodiments this notification is provided to a user administrator to allowed accounts update information server computer system sometimes called a back end system or otherwise logged. By providing the notification to allowed accounts update information server computer system tracking of threats is facilitated as well as data required to fix possible false positives. Although examples of protective action are set forth in light of this disclosure those of skill in the art will understand that a wide variety of protective action can be taken based on policy depending upon the severity of the threat and the desired response thereto.

Returning again to AUTHORIZED PROCESS USING ACCOUNT CHECK OPERATION if a determination is made that the process using the account is authorized flow moves to an AUTHORIZED ACCOUNT CREATION APPLICATION INSTALLED CHECK OPERATION . In AUTHORIZED ACCOUNT CREATION APPLICATION INSTALLED CHECK OPERATION a determination is made as to whether the authorized account creation application for the account is installed on host computer system .

As discussed above for each account there is an account creation application that is authorized to create the account. In one embodiment allowed accounts database is queried to determine the account creation application that is authorized to create the account. Further an operating system function is used to enumerate e.g. list the applications installed on host computer system . If the account creation application authorized to create the account is included in the list of applications installed on host computer system a determination is made that the account creation application authorized to create the account is installed on host computer system.

To use the example illustrated in once again allowed accounts database is queried to determine that application A is authorized to create account A as set forth in entry A. An operating system function is used to enumerate the applications installed on host computer system and returns with an indication that application A is installed on host computer system . As application A is installed on host computer system a determination is made that authorized account creation application A for creation of account A is installed on host computer system .

If a determination is made that the authorized account creation application for creation of the account is installed flow moves from authorized account creation application installed to ADDITIONAL ACCOUNT CHECK OPERATION which is discussed below.

Conversely if a determination is made that the authorized account creation application for creation of the account is not installed on host computer system then the account itself is unauthorized e.g. is malicious. Specifically as the account creation application that would legitimately create the account is not installed on host computer system it is highly likely that the account has been created for malicious purposes.

For example malicious code has created and named the account i.e. a malicious account after a commonly used account in an attempt to disguise the malicious account. However in accordance with this embodiment the fact that the authorized account creation application is not installed on host computer system is used to detect the malicious account.

Accordingly upon a determination that the authorized account creation application for the account is not installed on host computer system flow moves from AUTHORIZED ACCOUNT CREATION APPLICATION INSTALLED CHECK OPERATION to TAKE PROTECTIVE ACTION OPERATION . In TAKE PROTECTIVE ACTION OPERATION protective action is taken to protect against the unauthorized account.

In one embodiment the unauthorized account and any processes therein are terminated. In another embodiment a notification is provided that an unauthorized account has been detected. In various embodiments this notification is provided to a user administrator to allowed accounts update information server computer system or otherwise logged. By providing the notification to allowed accounts update information server computer system tracking of threats is facilitated as well as data required to fix possible false positives. Although examples of protective action are set forth in light of this disclosure those of skill in the art will understand that a wide variety of protective action can be taken based on policy depending upon the severity of the threat and the response thereto.

Although AUTHORIZED PROCESS USING ACCOUNT CHECK OPERATION is set forth as preceding AUTHORIZED ACCOUNT CREATION APPLICATION INSTALLED CHECK OPERATION the order is not limiting. In other embodiments AUTHORIZED ACCOUNT CREATION APPLICATION INSTALLED CHECK OPERATION is performed prior to or simultaneously with AUTHORIZED PROCESS USING ACCOUNT CHECK OPERATION .

From TAKE PROTECTIVE ACTION OPERATION flow moves to ADDITIONAL ACCOUNT CHECK OPERATION . In ADDITIONAL ACCOUNT CHECK OPERATION a determination is made as to whether there are additional accounts of host computer system that have not yet been evaluated as discussed above.

For example an operating system function is used to enumerate e.g. list the active accounts of host computer system . In ADDITIONAL ACCOUNTS CHECK OPERATION a determination is made as to whether all of the listed accounts have been evaluated. If there is at least one listed account that has not been evaluated flow returns from ADDITIONAL ACCOUNTS CHECK OPERATION to SELECT ACCOUNT OPERATION and the next account from the list is selected. OPERATIONS or combinations thereof are performed on this next selected account. This procedure is repeated for each account until all accounts have been evaluated at which point flow moves from ADDITIONAL ACCOUNTS CHECK OPERATION and exits at an EXIT OPERATION .

In the above manner a possibly pre infected system e.g. host computer system is inspected for the existence of tracked application specific accounts. If a tracked application specific account is found the host computer system is further audited to verify that only authorized processes are using the account and that the authorized account creation application is installed on the host computer system. For example on a Microsoft Windows type operating system the list of active services i.e. processes are checked to determine that no unauthorized unexpected services are running in one of the tracked application specific accounts.

From an ENTER OPERATION flow moves to a HOOK ACCOUNT CREATION FUNCTION S OPERATION . In HOOK ACCOUNT CREATION FUNCTION S OPERATION the account creation function or functions of host computer system e.g. of the operating system are hooked. An account creation function is a function sometimes called an application programming interface or API used to create new accounts. The account creation functions can be hooked using any one of a number of techniques as will be recognized by one of ordinary skill in the art having the benefit of this disclosure e.g. using a hooked system service table and the particular technique used is not essential.

Generally an account creation function is hooked by causing calls to the account creation function to be redirected e.g. to a hook module of unauthorized account monitoring application in accordance with one embodiment. This stalls execution of the account creation function allowing an evaluation of the legitimacy of the account prior to creation as described below.

From HOOK ACCOUNT CREATION FUNCTION S OPERATION flow moves to an ACCOUNT BEING CREATED CHECK OPERATION . In ACCOUNT BEING CREATED CHECK OPERATION a determination is made as to whether an account is being created. If an account is not being created flow remains at ACCOUNT BEING CREATED CHECK OPERATION . Conversely if an account is being created flow moves from ACCOUNT BEING CREATED CHECK OPERATION to KNOWN ACCOUNT CHECK OPERATION .

KNOWN ACCOUNT CHECK OPERATION is substantially similar to KNOWN ACCOUNT CHECK OPERATION of suspicious account detection process of and so is only briefly repeated here. More particularly in KNOWN ACCOUNT CHECK OPERATION a determination is made as to whether the account being created is a known account e.g. appears in allowed accounts database .

If the account being created is not a known account flow moves from KNOWN ACCOUNT CHECK OPERATION and exits at an EXIT OPERATION or returns to ACCOUNT BEING CREATED CHECK OPERATION and awaits the creation of the next account. In accordance with this embodiment as the account is unknown no further action is taken and the account is allowed to be created.

Conversely if the account being created is a known account flow moves from KNOWN ACCOUNT CHECK OPERATION to an ACCOUNT BEING CREATED BY AUTHORIZED ACCOUNT CREATION APPLICATION CHECK OPERATION . In ACCOUNT BEING CREATED BY AUTHORIZED ACCOUNT CREATION APPLICATION CHECK OPERATION a determination is made as to whether the account is being created by an authorized account creation application for the account.

As discussed above for each account there is an account creation application that is authorized to create the account. In one embodiment allowed accounts database is queried to determine the account creation application that is authorized to create the account. Further the application attempting to create the account is determine e.g. from parameters associated with the account creation function call or otherwise. If the application attempting to create the account is the authorized account creation application for the account a determination is made that the account is being created by an authorized account creation application for the account.

To illustrate paying particular attention to together assume that account A is the account that is being created by application A. This attempt to create an account is detected in ACCOUNT BEING CREATED CHECK OPERATION and flow moves to KNOWN ACCOUNT CHECK OPERATION . In KNOWN ACCOUNT CHECK OPERATION a determination is made that account A is contained within allowed accounts database and so is a known account. Accordingly flow moves to ACCOUNT BEING CREATED BY AUTHORIZED ACCOUNT CREATION APPLICATION CHECK OPERATION .

In ACCOUNT BEING CREATED BY AUTHORIZED ACCOUNT CREATION APPLICATION CHECK OPERATION allowed accounts database is queried to determine the account creation application A is authorized to create account A. More particularly entry A indicates that account creation application A is authorized to create account A. Further parameters associated with the account creation function call are analyzed to determine that application A is the application creating account A.

Finally a determination is made that application A that is attempting to create account A as determined from parameters associated with the account creation function call is the authorized account creation application for account A as determined from entry A of allowed accounts database . Accordingly a determination is made that account A is being created by authorized account creation application A for account A and flow moves from ACCOUNT BEING CREATED BY AUTHORIZED ACCOUNT CREATION APPLICATION CHECK OPERATION to EXIT OPERATION or returns to ACCOUNT BEING CREATED CHECK OPERATION and awaits the next attempt to create an account. In this event no further action is taken and account A is allowed to be created.

Conversely if a determination is made that the account is not being created by an authorized account creation application for the account then the account creation is unauthorized e.g. is malicious. Specifically as the account is not being created by the account creation application that would legitimately create the account it is highly likely that the account is being created for malicious purposes.

For example malicious code is creating and naming the account i.e. a malicious account after a commonly used account in an attempt to disguise the malicious account. However in accordance with this embodiment the fact that the authorized account creation application is not the application that is creating the account is used to detect the malicious account.

Accordingly upon a determination that the account is not being created by an authorized account creation application for the account flow moves from ACCOUNT BEING CREATED BY AUTHORIZED ACCOUNT CREATION APPLICATION CHECK OPERATION to a TAKE PROTECTIVE ACTION OPERATION . In TAKE PROTECTIVE ACTION OPERATION protective action is taken to protect against the unauthorized account creation.

In one embodiment the attempt to create the unauthorized account is terminated. In another embodiment the unauthorized account creation application that is creating the unauthorized account is terminated. In yet another embodiment a notification is provided that an attempt to create an unauthorized account has been detected. In various embodiments this notification is provided to a user administrator to allowed accounts update information server computer system or otherwise logged. By providing the notification to allowed accounts update information server computer system tracking of threats is facilitated as well as data required to fix possible false positives. Although examples of protective action are set forth in light of this disclosure those of skill in the art will understand that a wide variety of protective action can be taken based on policy depending upon the severity of the threat and the response thereto.

From TAKE PROTECTIVE ACTION OPERATION flow moves to and exits at EXIT OPERATION or returns to ACCOUNT BEING CREATED CHECK OPERATION and awaits the creation of the next account.

As demonstrated above allowed accounts database is used in real time behavior monitoring and blocking. More particularly unauthorized account monitoring application sometimes called a behavior blocking system intercepts requests to create tracked application specific accounts. If the account creation application that is creating the account is authorized to do so the account is allowed to be created. Conversely if the account creation application that is creating the account is not authorized to do so the account creation is prevented or other protective action taken. This real time monitoring effectively closes off this avenue of attack from malware writers.

From an ENTER OPERATION flow moves to a HOOK PROCESS CREATION FUNCTION S OPERATION . In HOOK PROCESS CREATION FUNCTION S OPERATION the process creation function or functions of host computer system e.g. of the operating system are hooked. A process creation function is a function sometimes called an application programming interface or API used to create new processes. The process creation functions can be hooked using any one of a number of techniques as will be recognized by one of ordinary skill in the art having the benefit of this disclosure e.g. using a hooked system service table and the particular technique used is not essential.

Generally a process creation function is hooked by causing calls to the process creation function to be redirected e.g. to a hook module of unauthorized account monitoring application in accordance with one embodiment. This stalls execution of the process creation function allowing an evaluation of the legitimacy of the process prior to creation as described below.

From HOOK PROCESS CREATION FUNCTION S OPERATION flow moves to a PROCESS BEING CREATED CHECK OPERATION . In PROCESS BEING CREATED CHECK OPERATION a determination is made as to whether a process is being created. If a process is not being created flow remains at PROCESS BEING CREATED CHECK OPERATION . Conversely if a process is being created flow moves from the PROCESS BEING CREATED CHECK OPERATION to KNOWN ACCOUNT CHECK OPERATION .

KNOWN ACCOUNT CHECK OPERATION is substantially similar to KNOWN ACCOUNT CHECK OPERATION of suspicious account detection process of and so is only briefly repeated here. More particularly in KNOWN ACCOUNT CHECK OPERATION the account into which the process is being created is determined e.g. from parameters associated with the process creation function call or otherwise. Further a determination is made as to whether the account into which the process is being created is a known account e.g. appears in allowed accounts database .

If the account into which the process is being created is not a known account flow moves from KNOWN ACCOUNT CHECK OPERATION and exits at an EXIT OPERATION or returns to PROCESS BEING CREATED CHECK OPERATION and awaits the creation of the next process. In accordance with this embodiment as the account is unknown no further action is taken and the process is allowed to be created.

Conversely if the account into which the process is being created is a known account flow moves from KNOWN ACCOUNT CHECK OPERATION to a PROCESS AUTHORIZED TO USE ACCOUNT CHECK OPERATION . In PROCESS AUTHORIZED TO USE ACCOUNT CHECK OPERATION a determination is made as to whether the process being created is authorized to use the account.

As discussed above an authorized process is an application specific process that legitimately uses the account. In one embodiment allowed accounts database is queried to determine the process that is authorized to use the account. Further the process being created is determine e.g. from parameters associated with the process creation function call. If the process being created is the authorized process for the account a determination is made that the process is authorized to use the account.

To illustrate paying particular attention to together assume that process A is the process that is being created within the context of account A. This attempt to create a process is detected in PROCESS BEING CREATED CHECK OPERATION and flow moves to KNOWN ACCOUNT CHECK OPERATION .

In KNOWN ACCOUNT CHECK OPERATION account A into which process A is being created is determined e.g. from parameters associated with the process creation function call. Further a determination is made that account A is contained within allowed accounts database and so is a known account. Accordingly flow moves to PROCESS AUTHORIZED TO USE ACCOUNT CHECK OPERATION .

In PROCESS AUTHORIZED TO USE ACCOUNT CHECK OPERATION allowed accounts database is queried to determine the process that is authorized to use the account. More particularly as shown in entry A indicates that process A is authorized to use account A.

Finally a determination is made that process A that is attempting to use account A as determined from parameters associated with the process creation function call is the authorized process for account A as determined from entry A of allowed accounts database . Accordingly a determination is made that the process being created is authorized to use the account and paying particular attention to flow moves from PROCESS AUTHORIZED TO USE ACCOUNT CHECK OPERATION to EXIT OPERATION or returns to PROCESS BEING CREATED CHECK OPERATION and awaits the next attempt to create a process. In this event no further action is taken and the process is allowed to be created.

Conversely if a determination is made that the process is not authorized to use the account then the process creation is unauthorized e.g. is malicious. Specifically as the process is not the process that would legitimately use the account it is highly likely that the process is being created for malicious purposes.

For example malicious code is creating a process in a commonly used application specific account in an attempt to disguise the malicious process. However in accordance with this embodiment the fact that the malicious process is not the process authorized to use the account is used to detect the malicious process.

Accordingly upon a determination that the process is not authorized to use the account flow moves from PROCESS AUTHORIZED TO USE ACCOUNT CHECK OPERATION to a TAKE PROTECTIVE ACTION OPERATION . In TAKE PROTECTIVE ACTION OPERATION protective action is taken to protect against the unauthorized process creation.

In one embodiment the attempt to create the unauthorized process is terminated. In another embodiment the account and or the application creating the unauthorized process is terminated. In yet another embodiment a notification is provided that an attempt to create an unauthorized process has been detected. In various embodiments this notification is provided to a user administrator to allowed accounts update information server computer system or otherwise logged. By providing the notification to allowed accounts update information server computer system tracking of threats is facilitated as well as data required to fix possible false positives. Although examples of protective action are set forth in light of this disclosure those of skill in the art will understand that a wide variety of protective action can be taken based on policy depending upon the severity of the threat and the response thereto.

From TAKE PROTECTIVE ACTION OPERATION flow moves to and exits at EXIT OPERATION or returns to PROCESS BEING CREATED CHECK OPERATION and awaits the creation of the next account.

As demonstrated above allowed accounts database is used in real time behavior monitoring and blocking. More particularly unauthorized account monitoring application sometimes called a behavior blocking system intercepts requests to create processes within tracked application specific accounts. If the process being created is authorized to use the account the process is allowed to be created. Conversely if the process being created is not authorized to use the account the process creation is prevented or other protective action taken. This real time monitoring effectively closes off this avenue of attack from malware writers.

Referring again to although unauthorized account monitoring application is referred to as an application this is illustrative only. Unauthorized account monitoring application should be capable of being called from an application or the operating system. In one embodiment an application is generally defined to be any executable code. Moreover those of skill in the art having the benefit of this disclosure will understand that when it is said that an application or an operation takes some action the action is the result of executing one or more instructions by a processor.

While embodiments have been described for a client server configuration an embodiment is carried out using any suitable hardware configuration or means involving a personal computer a workstation a portable device or a network of computer devices. Other network configurations other than client server configurations e.g. peer to peer web based intranet and internet network configurations are used in other embodiments.

Herein a computer program product comprises a tangible storage medium configured to store computer readable code in accordance with an embodiment. Some examples of computer program products are CD ROM discs DVDs ROM cards floppy discs magnetic tapes computer hard drives and servers on a network

As illustrated in this medium belongs to the computer system itself. However the medium is also removed from the computer system. For example unauthorized account monitoring application is stored in memory that is physically located in a location different from processor e.g. memory of server system . Processor should be coupled to the memory . This could be accomplished in a client server system or alternatively via a connection to another computer via modems and analog lines or digital interfaces and a digital carrier line.

More specifically in one embodiment host computer system and or server system is a portable computer a workstation a two way pager a cellular telephone a digital wireless telephone a personal digital assistant a server computer an Internet appliance or any other device that includes components that execute unauthorized account monitoring application in accordance with at least one of the embodiments as described herein. Similarly in another embodiment host computer system and or server system is comprised of multiple different computers wireless devices cellular telephones digital telephones two way pagers personal digital assistants server computers or any desired combination of these devices that are interconnected to perform the methods as described herein.

In view of this disclosure unauthorized account monitoring application in accordance with one embodiment can be implemented in a wide variety of computer system configurations. In addition unauthorized account monitoring application could be stored as different modules in memories of different devices. For example unauthorized account monitoring application could initially be stored in server system and as necessary a portion of unauthorized account monitoring application could be transferred to host computer system and executed on host computer system . Consequently part of the unauthorized account monitoring functionality would be executed on processor of server system and another part would be executed on processor of host computer system . In view of this disclosure those of skill in the art can implement various embodiments in a wide variety of physical hardware configurations using an operating system and computer programming language of interest to the user.

In yet another embodiment unauthorized account monitoring application is stored in memory of server system . Unauthorized account monitoring application is transferred over network to memory in host computer system . In this embodiment network interface and I O interface would include analog modems digital modems or a network interface card. If modems are used network includes a communications network and unauthorized account monitoring application is downloaded via the communications network.

This disclosure provides exemplary embodiments. The scope is not limited by these exemplary embodiments. Numerous variations whether explicitly provided for by the specification or implied by the specification or not may be implemented by one of skill in the art in view of this disclosure.

