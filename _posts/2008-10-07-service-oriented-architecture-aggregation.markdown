---

title: Service oriented architecture aggregation
abstract: A method, system and computer program product for identifying one or more niche services to combine into a common service, wherein the niche service is a part of a service oriented architecture (SOA). The extensible markup language (XML) schema of the one or more niche services is aggregated into a combined XML schema, wherein the combined XML schema is the XML schema of the common service. A web services description language (WSDL) of the one or more niche services are aggregated to establish a combined WSDL, wherein the combined WSDL is the WSDL of the common service. The common service is generated from the combined XML schema and the combined WSDL. The combined WSDL, utilized to identify the combined service, comprises a service provider URL, one or more service operations, and combined XML schema. The combined XML schema is associated with a common service request and a common service response. When the XML schema of the niche service is not equal with the combined XML schema, mediation is invoked.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08140582&OS=08140582&RS=08140582
owner: International Business Machines Corporation
number: 08140582
owner_city: Armonk
owner_country: US
publication_date: 20081007
---
The present invention generally relates to computer systems and in particular to service oriented architecture in computer systems.

The foundation of service oriented architectures SOAs are services. Consumers working with services of SOAs have little control over factors such as the number and organization of services. The available services are often narrowly focused on a niche segment of the business services. Focusing primarily on a niche segment of the business services is of limited value and may slow the adoption of business associated SOAs.

Existing methods for utilizing business level services involve the consumer understanding each niche service and invoking the correct service based on specifics of the business transaction. Narrowly focused services result in either complex or numerous business process execution language BPEL workflows. Niche services create a problem for the consumer wherein the consumer has to manage additional processes.

Interaction patterns have been defined which address narrowly focused services. The facade broker and router patterns each provide a high level architecture enabling a single entry point into many services. However current techniques and methods for providing a single entry point into services are complicated and difficult to incorporate into existing business systems.

Disclosed are a method system and computer program product for identifying one or more services to combine into a common service where the original service is a part of a service oriented architecture SOA . The extensible markup language XML schema of the one or more niche services is aggregated into a combined XML schema wherein the combined XML schema is the XML schema of the common aggregate service. A web services description language WSDL of the one or more services are aggregated to establish a combined WSDL wherein the combined WSDL is the WSDL of the common service. The common service is generated from the combined XML schema and the combined WSDL. The combined WSDL utilized to identify the combined service comprises a service provider URL one or more service operations and combined XML schema. The combined XML schema is associated with a common service request and a common service response. A consumer may call the common service request deployed on an Enterprise Service Bus ESB . Based on the contents of the request the ESB transforms the request into the original niche service format and forwards the request to the original niche service provider. The niche service response returns to the ESB where the niche service response originated and is then transmitted back into the common service format and returned to the caller.

The above as well as additional features of the present invention will become apparent in the following detailed written description.

The illustrative embodiments provide a method system and computer program product for identifying one or more niche services to combine into a common service wherein the niche service is a part of a service oriented architecture SOA . The extensible markup language XML schema of the one or more niche services is aggregated into a combined XML schema wherein the combined XML schema is the XML schema of the common service. A web services description language WSDL of the one or more niche services are aggregated to establish a combined WSDL wherein the combined WSDL is the WSDL of the common service. The common service is generated from the combined XML schema and the combined WSDL. The combined WSDL utilized to identify the combined service comprises a service provider URL one or more service operations and combined XML schema. The combined XML schema is associated with a common service request and a common service response. When the XML schema of the niche service is not equal with the combined XML schema mediation is invoked.

In the following detailed description of exemplary embodiments of the invention specific exemplary embodiments in which the invention may be practiced are described in sufficient detail to enable those skilled in the art to practice the invention and it is to be understood that other embodiments may be utilized and that logical architectural programmatic mechanical electrical and other changes may be made without departing from the spirit or scope of the present invention. The following detailed description is therefore not to be taken in a limiting sense and the scope of the present invention is defined only by the appended claims.

Within the descriptions of the figures similar elements are provided similar names and reference numerals as those of the previous figure s . Where a later figure utilizes the element in a different context or with different functionality the element is provided a different leading numeral representative of the figure number e.g 1xx for and 2xx for . The specific numerals assigned to the elements are provided solely to aid in the description and not meant to imply any limitations structural or functional on the invention.

It is understood that the use of specific component device and or parameter names are for example only and not meant to imply any limitations on the invention. The invention may thus be implemented with different nomenclature terminology utilized to describe the components devices parameters herein without limitation. Each term utilized herein is to be given its broadest interpretation given the context in which that terms is utilized. Specifically as utilized herein the term niche describes a narrowly scoped or focused service operation. The term common service describes a generic service in which one or more service is aggregated and included in a single service or the common service. The general term common service may describe a common service request or a common service response.

Several descriptions below refer to niche services whereby each niche service covers a small spectrum of the overall business e.g. along geographic or product lines . When niche services are aggregated the niche service may become more useful by covering a broader range of the business e.g. multiple geographies or multiple product lines . Although niche services which cover a broad range of a business are a useful application of service aggregation there are many other situations where service aggregation may also be useful. For example a cost estimating application may require a common service interface to call several unrelated services that return cost estimates for labor materials licensing etc.

With reference now to the figures depicts a block diagram representation of a data processing system connected network . DPS comprises at least one processor or central processing unit CPU connected to system memory via system interconnect bus . Also connected to system bus is I O controller which provides connectivity and control for input devices of which pointing device or mouse and keyboard are illustrated and output devices of which display is illustrated. Additionally multimedia drive e.g. CDRW or DVD drive and USB universal serial bus port are illustrated coupled to I controller . Multimedia drive and USB port may operate as both input and output storage mechanisms. DPS also comprises storage within which data instructions code may be stored.

DPS is also illustrated with a network interface device NID with which DPS connects to one or more servers via an access network such as the Internet . In the described embodiments Internet is a worldwide collection of networks and gateways that utilize the Transmission Control Protocol Internet Protocol TCP IP suite of protocols to communicate with one another. Of course network access may also be provided via a number of different types of networks such as an intranet a local area network LAN a virtual private network VPN or other wide area network WAN other than the Internet for example.

Notably in addition to the above described hardware components of DPS various features of the invention are completed via software or firmware code or logic stored within system memory or other storage e.g. storage and executed by CPU . Thus illustrated within system memory are a number of software firmware components including operating system OS e.g. Microsoft Windows a trademark of Microsoft Corp GNU Linux registered trademarks of the Free Software Foundation and Linus Torvalds or AIX a registered trademark of International Business Machines IBM and applications including service aggregation operation SAO utility . In actual implementation SAO utility may be combined with other services and or applications as a single service and or application collectively providing the various functions of each individual software component when the corresponding code is executed by CPU . For simplicity SAO utility is illustrated and described as a stand alone or separate software firmware component which provides specific functions as described below.

CPU executes SAO utility as well as OS which supports the user interface features of SAO utility . Among the software code instructions provided by SAO utility and which are specific to the invention are a code for identifying one or more services to combine into a common service wherein the one or more services are a part of a service oriented architecture SOA b code for combining the one or more of the services into one of an extensible markup language XML schema and a web services description language WSDL and c code for generating the common service from the one or more services. For simplicity of the description the collective body of code that enables these various features is referred to herein as SAO utility . According to the illustrative embodiment when CPU executes SAO utility DPS initiates a series of functional processes that enable the above functional features as well as additional features functionality which are described below within the description of .

Those of ordinary skill in the art will appreciate that the hardware and basic configuration depicted in may vary. For example other devices components may be used in addition to or in place of the hardware depicted. The depicted example is not meant to imply architectural limitations with respect to the present invention. The data processing system depicted in may be for example an IBM eServer pSeries system a product of International Business Machines Corporation in Armonk N.Y. running the Advanced Interactive Executive AIX operating system or LINUX operating system.

With reference now to wherein is depicted a block diagram of a system for generating common purchase order PO services. The system of comprises common service parameters service operations to be aggregated service aggregation operation generate aggregated XSD and WSDL and generate common service implementation . Included in service operations to be aggregated are IBM PO service Oracle PO service and SAP PO service . Generate aggregated XSD and WSDL includes common XML schema and common WSDL service . Common XML schema comprises IBM PO schema oracle PO schema and SAP PO schema . Common WSDL services comprise IBM PO services oracle PO services and SAP PO services . Generate common service implementation includes common PO request common service niche service router and EBS . Service aggregator inputs parameters into new common service parameters .

In one embodiment a service aggregator inputs one or more common service parameters. Service Aggregator inputs the new service parameters into common service parameters . Service aggregator also identifies service operations to be aggregated for example IBM PO service operation Oracle PO service operation and SAP PO service operation . Entries to common service parameters include but are not limited to service name service operation name XML schema name space XML schema name and service endpoint.

In one embodiment one or more niche services are assigned to a common service wherein the common service is the aggregated service. SAO utility generates the common service definition taking the niche service WSDL s selected operations such as IBM PO services oracle PO services and SAP PO services and processing the services to create common WSDL service . Similarly the corresponding request and response XML schemas such as IBM PO schema oracle PO schema and SAP PO schema are processed to create common XML Schema .

In one embodiment generate common service implementation is generated by SAO utility and transforms XML document instances of common PO request . Generate common service implementation changes common XML schema and common WSDL service into one or more of the following original niche schema formats IBM PO schema oracle PO schema and SAP PO schema . The common service generated via common service determines what type of niche service is requested in the common PO request and routes the request to the WSDL endpoint from the original niche service or . The common service newly generated by common service is deployed via niche service router to enterprise service bus ESB . ESB transmits the common service to the endpoint as specified by the input parameters of the service aggregator supplied in common service parameters .

Service aggregation enables selection of one or more service operations utilized to place orders or create purchase orders . Service aggregation allows multiple types of purchase orders to be processed by a single service. In one embodiment service operations may be provided via IBM PO service operation Oracle PO service operation and SAP PO service operation . One or more niche services and are combined into a common service. Common WSDL service is generated by SAO utility and utilized to communicate with each of the three services. Common WSDL service is utilized to generate a single language specific binding that is engaged to invoke one or more of the three services provided via IBM PO service operation Oracle PO service operation and SAP PO service operation .

IBM SAP and Oracle applications are combined into common XML schema and common WSDL service . In one embodiment a common service implementation is generated from the original niche services selected for aggregation the combined XML schema and the combined WSDL along with the parameters identified for the new common service. One or more values are input into common service parameters and the parameters are utilized to create the aggregate service. Values received by common service include but are not limited to values for service name service operation name XML schema name space XML schema name and service endpoint. A WSDL is defined for common WSDL service . WSDL information includes a service provider URL a service operation name and the XML schema name namespace of the service request and service response for the service operation. Values that are not defined during aggregation of the niche services are input as constants such as standard web service namespaces and WSDL element tags.

In one embodiment an aggregated XML schema is built from the values received at common service parameters and selected service operations and . A service request response and fault may be aggregated from one or more service operations selected for aggregation into common PO request . The name of the new common operation is identified by the service name input into common service parameters . The message associated with the new common operation is identified by the value of the service operation name input into common service parameters . The XML schema namespace of common service parameters identifies the location of the new common XML schema. XML schema input into common service parameters identifies the new common XML schema file name. The destination of the aggregated service is identified via the value for service endpoint. The common service is deployed to the endpoint via ESB . Generating and appending a unique prefix to each schema element or attribute for each distinct service operation being aggregated resolves naming conflicts for aggregated XML schema.

In another embodiment one or more values in a common request SOAP document such as common PO request are associated with the derived common service schema IBM PO schema oracle PO schema and SAP PO schema . One or more values associated within the common service of the common request SOAP document identify the target niche service. The one or more values are received by the common request SOAP document and the common request is routed to the original niche service endpoint IBM PO service Oracle PO service and SAP PO service via ESB .

In one embodiment one or more niche services are assigned to a common service wherein the common service is the aggregated service. Common service request comprises one or more applications wherein the applications may be IBM PO service Oracle PO service and SAP PO service . Each application comprises a service to create a new purchase order. SAO utility transfers common PO service requests purchase order requests to common service . Common service mediates the request thereby creating a niche purchase order PO service request e.g. IBM PO service Oracle PO service or SAP PO service . For two way operations on the return path common service manages the response or fault from the niche purchase order response or fault and creates a common purchase order PO response or fault.

In one embodiment one or more of an extensible stylesheet language transformations XSLT and Java are dynamically generated to identify one or more values of the common service . When the values of the common service are received the utility SAO utility replaces the values of the common service with the values of the requested niche service. In addition one or more XSLT and Java are dynamically generated to identify one or more values of the niche service. When the values of the niche service are received the values of the niche service are replaced with the values of the common service.

In another embodiment the common service is associated with the niche services. Common service is utilized to execute selection of a service. The service is automatically selected based on the parameters of common PO service requests . SAO utility enables common service to compare the format of common PO service requests to the format of the niche PO service request. When the formats of common PO service requests and the niche PO service request differ e.g. if the common PO service request and the niche PO service request do not reference the same XML schema namespace SAO utility automatically modifies the formats of common PO service requests and the niche PO service request. The format modification is dynamically enabled thereby matching the formats of common PO service requests and identifying the equivalent parameters within the common PO service requests and the niche PO service request.

In the flow charts above one or more of the methods are embodied as a computer program product in a computer readable medium or containing computer readable code such that a series of steps are performed when the computer readable code is executed on a computing device. In some implementations certain steps of the methods are combined performed simultaneously or in a different order or perhaps omitted without deviating from the spirit and scope of the invention. Thus while the method steps are described and illustrated in a particular sequence use of a specific sequence of steps is not meant to imply any limitations on the invention. Changes may be made with regards to the sequence of steps without departing from the spirit or scope of the present invention. Use of a particular sequence is therefore not to be taken in a limiting sense and the scope of the present invention is defined only by the appended claims.

As will be further appreciated the processes in embodiments of the present invention may be implemented using any combination of software firmware or hardware. As a preparatory step to practicing the invention in software the programming code whether software or firmware will typically be stored in one or more machine readable storage mediums such as fixed hard drives diskettes optical disks magnetic tape semiconductor memories such as ROMs PROMs etc. thereby making an article of manufacture or computer program product in accordance with the invention. The article of manufacture containing the programming code is used by either executing the code directly from the storage device by copying the code from the storage device into another storage device such as a hard disk RAM etc. or by transmitting the code for remote execution using transmission type media such as digital and analog communication links. The methods of the invention may be practiced by combining one or more machine readable storage devices containing the code according to the present invention with appropriate processing hardware to execute the code contained therein. An apparatus for practicing the invention could be one or more processing devices and storage systems containing or having network access to program s coded in accordance with the invention.

Thus it is important that while an illustrative embodiment of the present invention is described in the context of a fully functional computer server system with installed or executed software those skilled in the art will appreciate that the software aspects of an illustrative embodiment of the present invention are capable of being distributed as a computer program product in a variety of forms and that an illustrative embodiment of the present invention applies equally regardless of the particular type of media used to actually carry out the distribution. By way of example a non exclusive list of types of media includes recordable type tangible media such as floppy disks thumb drives hard disk drives CD ROMs DVDs and transmission type media such as digital and analogue communication links.

While the invention has been described with reference to exemplary embodiments it will be understood by those skilled in the art that various changes may be made and equivalents may be substituted for elements thereof without departing from the scope of the invention. In addition many modifications may be made to adapt a particular system device or component thereof to the teachings of the invention without departing from the essential scope thereof Therefore it is intended that the invention not be limited to the particular embodiments disclosed for carrying out this invention but that the invention will include all embodiments falling within the scope of the appended claims. Moreover the use of the terms first second etc. do not denote any order or importance but rather the terms first second etc. are used to distinguish one element from another.

