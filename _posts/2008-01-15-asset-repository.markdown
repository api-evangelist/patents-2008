---

title: Asset repository
abstract: Techniques for an asset repository are described, including storing an asset from a system in a repository, where the asset remains stored in a repository when power is removed from the system, the system including an application configured to access the asset and the repository, and configuring the repository to be accessed by the system and another system.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08015149&OS=08015149&RS=08015149
owner: Adobe Systems Incorporated
number: 08015149
owner_city: San Jose
owner_country: US
publication_date: 20080115
---
The present invention relates generally to software and repositories. More specifically techniques for an asset repository are described.

In conventional methods assets are stored and filed on a system hard drive a shared server or an online server. Assets are any type of media including for example text images sound files colors movie clips documents URLs and folders. Typically assets are stored in many locations sometimes far removed from the application itself. A conventional method of using Open dialog or browsing for the asset is cumbersome and constricted. Further collaborative design environments are constrained by the conventional methods of asset sharing that are largely dependent on detailed notifications of what assets are available and where the assets reside i.e. are stored or housed .

A OS Operating System clipboard is a conventional method of holding some media types for use within multiple applications. However the OS clipboard storage is temporary only holding assets until the system is shutdown. Further assets held in the OS clipboard cannot be shared between multiple systems. Thus the assets stored are not available to multiple users.

Thus a solution for an asset repository without the limitations of conventional techniques is needed.

Various embodiments or examples may be implemented in numerous ways including as a system a process an apparatus or a series of program instructions on a computer readable medium such as a computer readable storage medium or a computer network where the program instructions are sent over optical electronic or wireless communication links. In general operations of disclosed processes may be performed in an arbitrary order unless otherwise provided in the claims.

A detailed description of one or more examples is provided below along with accompanying figures. The detailed description is provided in connection with such examples but is not limited to any particular example. The scope is limited only by the claims and numerous alternatives modifications and equivalents are encompassed. Numerous specific details are set forth in the following description in order to provide a thorough understanding. These details are provided as examples and the described techniques may be practiced according to the claims without some or all of the accompanying details. For clarity technical material that is known in the technical fields related to the examples has not been described in detail to avoid unnecessarily obscuring the description.

In some examples the described techniques may be implemented as an application or as a module or sub component of another application. The described techniques may be implemented as software hardware firmware circuitry or a combination thereof. If implemented as software the described techniques may be implemented using various types of programming development scripting or formatting languages frameworks syntax applications protocols objects or techniques including C Objective C C C AIR Flex Java Javascript Ajax COBOL Fortran ADA XML HTML DHTML XHTML HTTP XMPP and others. Design publishing and other types of applications such as Dreamweaver Shockwave Fireworks and InDesign may also be used to implement the described techniques. The described techniques may be varied and are not limited to the examples or descriptions provided.

Techniques for an asset repository are described. Computer programs software or applications used to create or modify text visual graphic audio video or other types of content presentations and graphical user interfaces GUIs may be used to provide a repository for storing and accessing assets. Assets may include any type of media including for example text images sound files colors movie clips documents URLs and folders. As an example a repository may be accessed from multiple applications including software applications web browsing applications and a system desktop. In some examples a repository may be a window within an application. In other examples a repository is a window attached to the side of an application. In still other examples a repository is a window on the system desktop. Thus a user may easily access a repository and the assets housed within a repository from any application without exiting the application. Changes to a repository may be duplicated across some all or none of the instances of a repository. Although a repository may have multiple instances in various applications and there may be a display associated with the repository presented i.e. displayed within each of the applications each instance of a repository may be updated with a current version of the assets. For example if an asset is added to a repository in one application that asset may be added in each instance of the repository accessed from other applications. As another example if an asset is removed from a repository in one application that asset may be removed from each instance of the repository in other applications. Further a repository may be accessed from multiple systems allowing multiple users to access the same repository and enabling sharing of assets between colleagues clients vendors or other types of users.

In other examples server may be implemented and used to deliver i.e. serve content information or data requested by one or more of clients . For example content requested by client may be performed using a web browsing application not shown installed on client . Content may include text documents files images photos applications or any type of information or data. When requested from server content may be delivered to the requesting client i.e. clients . In other examples server may be a server configured for a given purpose e.g. ad server web server content server application server web services gateway and others . In yet other examples server may be a server network configured for a given purpose e.g. ad server web server content server application server web services gateway and others .

Techniques for an asset repository such as those described herein may be implemented using the above described system and topology. In some examples techniques for an asset repository may be performed locally on one or more of clients . In other examples techniques for an asset repository may be performed remotely or in a distributed manner using server one or more of clients and networks . Further other system configurations topologies clients end devices and intermediate devices and implementation techniques may be used and are not limited to those described above.

Storage module may be configured to store an asset from a system in a repository. In some examples storage module may be configured to store an asset from a system in storage . When the asset has been stored in storage the asset remains stored even if power is removed from the system. Applications module may be configured to provide access to the asset in a repository from one or more applications including software applications web browsing applications and a system desktop. Systems module may be configured to provide access to the asset in a repository from one or more systems. Since systems module provides access to the asset from one or more systems multiple users may have access to the asset.

Display module may be configured to provide a graphical interface e.g. a display configured to access the asset in a repository. In some examples display module may provide a display of a repository with the asset within an application. In other examples display module may provide a display of a repository with the asset in a window attached to an application. In still other examples display module may provide a display of a repository in a movable window on a system desktop or a locked position on a system desktop.

Update module may be configured to update multiple instances of a repository. For example if an asset is added to a repository in one application update module updates repositories in other applications to also include the added asset. As another example if an asset is removed from a repository in one application update module updates the repositories in other applications to also remove the deleted asset. Thus multiple instances of a repository are synchronized and updated. A transaction flow initiated by an interaction to access or update an asset in a repository may be communicated using API from another application or operating system OS . In some examples an interaction to access or update an asset includes adding an asset to a repository. In other examples an interaction to access or update an asset includes removing an asset from a repository. Logic module may be implemented to provide logic control coordination command signaling and other functions and features for application . For example logic module may be configured to coordinate between update module and display module when a repository has been updated and a display of a repository is changed accordingly. In other examples system and the described elements may be varied in implementation function or structure and are not limited to the examples provided.

According to some examples computer system performs specific operations by processor executing one or more sequences of one or more instructions stored in system memory . Such instructions may be read into system memory from another computer readable medium such as static storage device or disk drive . In some examples hard wired circuitry may be used in place of or in combination with software instructions for implementation.

The term computer readable medium refers to any medium that participates in providing instructions to processor for execution. Such a medium may take many forms including but not limited to non volatile media volatile media and transmission media. Non volatile media includes for example optical or magnetic disks such as disk drive . Volatile media includes dynamic memory such as system memory . Transmission media includes coaxial cables copper wire and fiber optics including wires that comprise bus for transmitting a computer data signal.

Common forms of computer readable media includes for example floppy disk flexible disk hard disk magnetic tape any other magnetic medium CD ROM any other optical medium punch cards paper tape any other physical medium with patterns of holes RAM PROM EPROM FLASH EPROM any other memory chip or cartridge carrier wave or any other medium from which a computer can read.

In some examples execution of the sequences of instructions may be performed by a single computer system . According to some examples two or more computer systems coupled by communication link e.g. LAN PSTN or wireless network may perform the sequence of instructions in coordination with one another. Computer system may transmit and receive messages data and instructions including program i.e. application code through communication link and communication interface . Received program code may be executed by processor as it is received and or stored in disk drive or other non volatile storage for later execution.

The foregoing examples have been described in some detail for purposes of clarity of understanding but are not limited to the details provided. There are many alternative ways and techniques for implementation. The disclosed examples are illustrative and not restrictive.

