---

title: Information handling systems including network adapters and methods of booting the information handling systems using boot configuration information from remote sources
abstract: A system can be operable to receive boot configuration information from a remote source independent of the type of initiator (e.g., software or hardware) used by an information handling system. The information handling system having the initiator can be coupled to the remote source, which includes the boot configuration information, and a storage array that includes a boot image. While operating within a pre-operating system (pre-OS) environment, the information handling system can create a boot configuration table and populate the boot configuration table with the boot configuration information. The boot configuration information can include an address for the boot image and information for configuring an OS initiator to be used when loading the OS.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08380971&OS=08380971&RS=08380971
owner: Dell Products, LP
number: 08380971
owner_city: Round Rock
owner_country: US
publication_date: 20081202
---
This disclosure relates generally to information handling systems and more particularly to information handling systems including network adapters and methods of booting the information handling systems using boot configuration information from remote sources.

As the value and use of information continues to increase individuals and businesses seek additional ways to process and store information. One option is an information handling system. An information handling system generally processes compiles stores and or communicates information or data for business personal or other purposes. Because technology and information handling needs and requirements can vary between different applications information handling systems can also vary regarding what information is handled how the information is handled how much information is processed stored or communicated and how quickly and efficiently the information can be processed stored or communicated. The variations in information handling systems allow for information handling systems to be general or configured for a specific user or specific use such as financial transaction processing airline reservations enterprise data storage or global communications. In addition information handling systems can include a variety of hardware and software components that can be configured to process store and communicate information and can include one or more computer systems data storage systems and networking systems.

The ability to boot an information handling system with a remotely stored boot image is becoming more important. The remotely stored boot image can allow for quicker re provisioning of an information handling system and particularly a server and also allow for better management and control of boot images. includes an illustration of a block diagram of a system that includes information handling systems and that are coupled to an Ethernet network which is coupled to an Internet Small Computer System Interface iSCSI storage array . The storage array includes a plurality of different boot images .

The information handling system IHS includes a conventional Network Interface Card NIC or Transmission Control Protocol Internet Protocol TCP IP Offload Engine Adapter or TOE Adapter . The NIC or TOE Adapter that support boot operates using a software initiator when booting within pre operating system pre OS and operating system OS environments and . When the booting sequence starts bootstrap code within a Basic Input Output System BIOS executes code such that the IHS is operating within the pre OS environment . The bootstrap code includes code for a pre OS iSCSI software initiator . The pre OS iSCSI software initiator the network stack is is started. The pre OS iSCSI software initiator also allows the IHS to communicate using the NIC or TOE Adapter using the iSCSI protocol in the pre OS environment with the iSCSI storage array to start the boot process from one of the boot images . The pre OS software iSCSI initiator is configured with boot configuration information information about the address of the iSCSI storage device and location within the storage device of its boot image to start the boot process for the HIS . Also an iSCSI Boot Firmware Table iBFT is created while the IHS is operating within the pre OS environment . The iBFT is populated with information from the boot configuration information while the information handling system is within the pre OS environment .

As part of the boot process in the OS environment the network stack the OS iSCSI software initiator and the iBFT driver are started. The iBFT driver obtains boot information from the iBFT to configure and run an OS iSCSI software driver while the IHS is within the OS environment as part of the boot process.

Because software initiators are used a standard application program interface can be used for configuration of boot regardless of the particular vendor of the NIC or TOE Adapter . Thus a common boot configuration client in the pre OS environment can be used for a given pre OS iSCSI software initiator to configure the boot configuration information. The boot configuration client can communicate with the remote source that contains boot configuration information for multiple IHS to obtain the via an Ethernet network to obtain the boot configuration information for this IHS . The boot configuration information includes an address e.g. a pointer for a boot image for the IHS .

Unlike the IHS the IHS includes a different network adapter. More particularly the IHS includes an iSCSI Host Bus Adapter iSCSI HBA . When the booting sequence starts the BIOS executes bootstrap code such that the IHS is operating within the pre OS environment . The bootstrap code includes code to interface to a pre OS iSCSI HBA initiator which may be software that can interface with the iSCSI HBA or is integrated into the iSCSI HBA. Like the IHS for IHS the pre OS iSCSI HBA initiator and iSCSI Host Bus Adapter is configured with the information of where to find the boot image for the IHS boot configuration information . The boot process is started with the pre OS iSCSI HBA initiator . Boot continues through the iSCSI Host Bus Adapter in the OS environment with the boot configuration information in the iSCSI Host Bus Adapter configured in it in the pre OS environment after configuring and starting the OS iSCSI HBA driver which is the particular hardware driver for the iSCSI Host Bus Adapter .

A particular problem with hardware initiators and their application programming interfaces to configure information for boot is that they are specific to particular manufacturers of the corresponding hardware. More particularly different manufacturers of the same type of hardware may have different application programming interfaces. Even within the same manufacturer different generations of the same type of hardware may also have different application programming interfaces. Thus to remotely configure the boot information for the IHS using boot configuration information in the remote source a boot configuration client has to implement many different application program interfaces for each specific iSCSI Host Bus Adapter which is undesirable.

Skilled artisans appreciate that elements in the figures are illustrated for simplicity and clarity and have not necessarily been drawn to scale. For example the dimensions of some of the elements in the figures may be exaggerated relative to other elements to help improve understanding of embodiments of the invention.

The following description in combination with the figures is provided to assist in understanding the teachings disclosed herein. The following discussion will focus on specific implementations and embodiments of the teachings. This focus is provided to assist in describing the teachings and should not be interpreted as a limitation on the scope or applicability of the teachings. However other teachings can certainly be utilized in this application. The teachings can also be utilized in other applications and with several different types of architectures such as distributed computing architectures client server architectures or middleware server architectures and associated components.

An IHS can include a software or a hardware initiator that can be used to boot the IHS. As described herein a boot configuration table is created and populated with boot configuration information sent from a remote source and received by the IHS when the IHS is operating within the pre OS environment. As used herein remote means that an item such as boot configuration information that includes information about the boot image an OS or the like is not resident in the IHS. In the pre OS environment boot starts with the pre OS initiator with boot configuration information retrieved from the boot configuration table. The boot configuration table includes an address e.g. a pointer dependent on the protocol over which the IHS is connected to the boot image on the storage device for the boot image to be used for the particular IHS. When the boot proceeds to the OS environment and the boot image is loaded a boot configuration interface component is loaded and operates within the OS environment. The boot configuration interface component accesses the boot configuration table and uses it to configure the software or hardware initiator for continuing the boot in the OS environment. Thus the system does not require separate APIs for each of the different hardware and software initiators. Also the systems and methods described herein are well suited for an IHS that is a bare metal system.

As used herein the term bare metal system with respect to an IHS is intended to mean that the IHS does not have a locally persisted copy of an OS Windows Vista Mac OS X Solaris 10 or the like . In a particular embodiment the IHS that is a bare metal system may not have any software but may have platform firmware such as a basic input output system BIOS adapter firmware or the like.

In an embodiment the remote source can be a storage array a database server a network storage device or other suitable system can be used to provide the boot configuration information to the IHSes and . The boot configuration information can be organized into different sets of boot configuration information. The boot configuration information includes information that the IHSes and use for the boot. The boot configuration information can include identification information about the storage device to be used for boot information about the logical unit within the storage device that has the boot image redundancy information for boot if applicable any other configuration information for the storage protocol or the boot initiator host adapter or any combination thereof.

The storage array includes physical storage devices and is arranged into logical units. The storage array includes boot images that are used by the IHSes and . In a particular embodiment each boot image includes the operating system that is to be loaded.

The network can be a local area network a wide area network a private network a public network e.g. the Internet or any combination thereof. One or more communication protocols can be used within the network to support iSCSI Fibre Channel Over Ethernet FCOE Serially Attached SCSI SAS or the like. In a non limiting particular embodiment the network can be an ethernet network that communicates using iSCSI devices and the storage array can be an iSCSI storage array. In another embodiment not illustrated the remote source and the storage array may be coupled to different networks.

The IHS includes a network adapter such as a standard NIC or TOE adapter that can be used with a software initiator. The IHS includes a network adapter such as hardware initiator e.g. an HBA adapter that implements the protocol used for boot on the adapter . The IHSes and are illustrated and described with respect to many components. The components are addressed before describing particular configurations of particular IHSes. Thus some of the components may or may not be present within IHS or . After reading this specification skilled artisans will appreciate that a particular selection of components may be made based on the needs or desires for a particular application. The booting sequence is described generically with respect to IHSes and . After reading this specification skilled artisans will appreciate that the description below can be tailored to a particular IHS.

When a booting sequence starts bootstrap code within a BIOS executes code such that the IHS is operating within the pre OS environment . The bootstrap code includes code for a pre OS initiator such as a pre OS software initiator or a pre OS hardware initiator depending on whether a software initiator or hardware initiator is used for the boot. The pre OS environment also includes a boot configuration client that can retrieve the boot configuration information for the IHS from the remote source . The boot configuration information can be used to create a boot configuration table by the pre OS environment . In general the boot configuration table can be in the form of a standard memory table that can be readily accessed by the IHS. In a particular embodiment the boot configuration table can be an iBFT. Other tables can be used for other storage protocols such as Fibre Channel or Fibre Channel Over Ethernet or the like. Thus the concepts herein are not limited to any particular storage protocol. An exemplary non limiting embodiment the boot configuration table can include identification information about the initiator host adapter to be used for boot identification information about the storage device to be used for boot information about the logical unit within the storage device that has the boot image redundancy information for boot if applicable any other configuration information for the storage protocol or the boot initiator host adapter or any combination thereof. For simplicity the term address is used to refer to information that can be used in making a request to or locating or accessing a file an image or the like.

The pre OS software initiator can be operable to allow the boot configuration client to access the standard NIC or TOE adapter over the network stack to communicate with the remote source to obtain boot configuration information . Similarly the pre OS hardware initiator can be operable to allow the boot configuration client to access the hardware initiator to communicate with the remote source to obtain boot configuration information . Alternatively the boot configuration client can access the standard NIC or TOE adapter over the network stack to communicate with the remote source to obtain boot configuration information . Either the pre OS initiator or the boot configuration client can be operable to populate the boot configuration table with the boot configuration information . The boot configuration information includes the address for the boot image and configuration information that can be used for the OS initiator.

The initiator in the operating system such as an OS software initiator or a hardware initiator can operate within the OS environment . A boot configuration table BCT interface component can be started while within the OS environment and be used to obtain boot information from the boot configuration table . The BCT interface component may depend on the particular storage protocol used and have a conventional or proprietary design. In a particular embodiment the BCT interface component can be a driver that can access an iBFT when the iSCSI protocol is used. Another interface component may be used if the storage protocol is different e.g. FCOE SAS or the like . The pre OS initiator can be operated until an OS software initiator or an OS hardware initiator driver is started. The OS software initiator can be configured with the information obtained from the boot configuration table and started in the OS environment . Alternatively the OS hardware initiator driver can be started in the OS environment and can configure the hardware initiator using information obtained from the boot configuration table . The OS software initiator accesses the boot image on the storage array through the network stack and the standard NIC or TOE adapter to continue the boot process while in the OS environment . Alternatively the OS hardware initiator driver accesses the image on the storage array through the hardware initiator to continue the boot process in the OS environment .

Other options exist regarding some of the implementation details. In a particular embodiment an OS driver e.g. OS hardware initiator driver can be started and find the configuration boot table . The OS driver can then load information from the boot configuration table into the initiator in the OS e.g. the hardware initiator and continue with the loading of the OS. Alternatively in the pre OS environment when the boot configuration information is received by the IHS such boot configuration information can be persisted in memory of the physical hardware of the network adapter e.g. in memory of the card including the network adapter and when the OS driver starts it reads the information from the memory. After reading this specification skilled artisans will appreciate that other alternatives can be used and tailored to the particular needs or desires for a particular application.

The method can also include bootstrapping using a pre OS initiator within the pre OS environment at block and populating boot configuration information within memory space at block . The actions of blocks and may be performed in parallel as illustrated or serially not illustrated . The bootstrapping can be performed with the pre OS initiator such as the pre OS software initiator or the pre OS hardware initiator . A network stack is created in the pre OS environment that allows for the boot configuration client to communicate with the remote source via the network to retrieve the boot configuration information . The pre OS environment can create and populate the boot configuration table with the boot configuration information within the memory space of the IHS or . The memory space can be physically located within a random access memory a hard disk drive a solid state drive or another suitable memory or any combination thereof. The boot configuration information can include the address for the boot image that is to be retrieved from the storage array . The boot image includes the OS that is to be loaded into the IHS. Independent of the network adapter used the pre OS initiator or can allow for communication with the storage array to start the boot process using the address information in the boot configuration table .

The method can also include starting the OS execution at block and reading boot configuration information using the BCT interface component at block in . In a particular embodiment the boot configuration interface component can be started during the OS execution. The BCT interface component can read the boot configuration information that resides in the boot configuration table . The method can further include configuring and starting an OS software or hardware initiator at block in . The boot configuration information within the boot configuration table is retrieved using the BCT interface component . The BCT interface component can use the boot configuration information to configure the OS initiator in the operating system such as the OS software initiator or the OS hardware initiator driver . After the initiator is configured it can be started. The method still further includes continuing booting using the OS initiator at block in . In The OS initiator can be used in continuing the booting sequence of the IHS or and after the OS is loaded.

The systems and methods described above are useful for a wide variety of different IHSes. For purposes of this disclosure an IHS can include any instrumentality or aggregate of instrumentalities operable to compute classify process transmit receive retrieve originate switch store display manifest detect record reproduce handle or utilize any form of information intelligence or data for business scientific control entertainment or other purposes. For example an IHS can be a personal computer a PDA a consumer electronic device a network server or storage device a switch router wireless router or other network communication device or any other suitable device and can vary in size shape performance functionality and price. The IHS can include memory one or more processing resources such as a central processing unit CPU or hardware or software control logic. Additional components of the IHS can include one or more storage devices one or more communications ports for communicating with external devices as well as various input and output I O devices such as a keyboard a mouse and a video display. The IHS can also include one or more buses operable to transmit communications between the various hardware components.

According to one aspect the chipset can be referred to as a memory hub or a memory controller. For example the chipset can include an Accelerated Hub Architecture AHA that uses a dedicated bus to transfer data between the physical processor and the nphysical processor . For example the chipset including an AHA enabled chipset can include a memory controller hub and an I O controller hub. As a memory controller hub the chipset can function to provide access to first physical processor using first bus and nphysical processor using the second host bus . The chipset can also provide a memory interface for accessing memory using a memory bus . In a particular embodiment the buses and can be individual buses or part of the same bus. The chipset can also provide bus control and can handle transfers between the buses and .

According to another aspect the chipset can be generally considered an application specific chipset that provides connectivity to various buses and integrates other system functions. For example the chipset can be provided using an Intel Hub Architecture IHA chipset that can also include two parts a Graphics and AGP Memory Controller Hub GMCH and an I O Controller Hub ICH . For example an Intel 820E an 815E chipset or any combination thereof available from the Intel Corporation of Santa Clara Calif. can provide at least a portion of the chipset . The chipset can also be packaged as an application specific integrated circuit ASIC .

The IHS can also include a video graphics interface that can be coupled to the chipset using a third host bus . In one form the video graphics interface can be an Accelerated Graphics Port AGP interface to display content within a video display unit . Other graphics interfaces may also be used. The video graphics interface can provide a video display output to the video display unit . The video display unit can include one or more types of video displays such as a flat panel display FPD or other type of display device.

The IHS can also include an I O interface that can be connected via an I O bus to the chipset . The I O interface and I O bus can include industry standard buses or proprietary buses and respective interfaces or controllers. For example the I O bus can also include a Peripheral Component Interconnect PCI bus or a high speed PCI Express bus. In one embodiment a PCI bus can be operated at approximately 66 Mhz and a PCI Express bus can be operated at approximately 128 Mhz. PCI buses and PCI Express buses can be provided to comply with industry standards for connecting and communicating between various PCI enabled hardware devices. Other buses can also be provided in association with or independent of the I O bus including but not limited to industry standard buses or proprietary buses such as Industry Standard Architecture ISA Small Computer Serial Interface SCSI Inter Integrated Circuit IC System Packet Interface SPI or Universal Serial buses USBs .

In an alternate embodiment the chipset can be a chipset employing a Northbridge Southbridge chipset configuration not illustrated . For example a Northbridge portion of the chipset can communicate with the first physical processor and can control interaction with the memory the I O bus that can be operable as a PCI bus and activities for the video graphics interface . The Northbridge portion can also communicate with the first physical processor using first bus and the second bus coupled to the nphysical processor . The chipset can also include a Southbridge portion not illustrated of the chipset and can handle input output I O functions of the chipset . The Southbridge portion can manage the basic forms of I O such as Universal Serial Bus USB serial I O audio outputs Integrated Drive Electronics IDE and ISA I O for the IHS .

The IHS can further include a disk controller coupled to the I O bus and connecting one or more internal disk drives such as a hard disk drive HDD an optical disk drive ODD and a solid state drive SSD .

The IHS can further include a Basic Input Output System BIOS that can be coupled to the chipset using a system bus . In one form BIOS can include code to bootstrap the IHS while operating in the pre OS environment until the operating system is loaded. The BIOS can include code for a software or hardware initiator that can allow a network adapter to communicate with another system or device on a network until a software or hardware driver can be configured and run within the OS environment.

The IHS can also include the I O interface . The I O interface includes a network adapter that is operably coupled to an external communication bus that is operable to be coupled to a network such as a local area network a wide area network a private network a public network e.g. the Internet or any combination thereof.

The IHS can be a particular embodiment of the IHS an IHS at the remote source the storage array or another IHS coupled to the network or used to operate the network e.g. switches routers management servers or any combination thereof.

The concepts as described herein can be used for many different types of IHSes as previously described. The methods can also be used for starting or rebooting virtual machines operating within an IHS. Similar to the prior embodiment a virtual machine may be configured and operable to serve a particular function and the virtual machine would then have another particular function that needs or is desired to be performed. The virtual machine can be rebooted substantially similar to the process described with respect to . In addition many other IHSes can be coupled to the remote source and be booted and operated as described herein. Different IHSes can be booted at substantially the same time partially overlap each other in time or at completely different non overlapping times.

In accordance with the concepts as described herein an architecture has been developed in which an IHS system regardless of the particular type of network adapter or storage communication protocol used can receive boot configuration information from a remote source and be used during the boot sequence. In this manner separate APIs are not required for all of the different types of network adapters. Thus less APIs are generated for systems that receive their boot configuration information from a remote source. The architecture is particularly well suited for bare metal systems in which operating systems are loaded from a remotely located storage array. The method can also be useful in reprovisioning information handling systems. For example the IHS may be configured and operated as a file server but another domain name server is needed or desired. The boot configuration information for a file server may be different from the boot configuration information for a domain name server. The method can allow the IHS to be rebooted so that it is properly configured to operate as a domain name server.

Many different aspects and embodiments are possible. Some of those aspects and embodiments are described below. After reading this specification skilled artisans will appreciate that those aspects and embodiments are only illustrative and do not limit the scope of the present invention.

In a first aspect a method of booting an information handling system can include starting a first initiator within a first pre OS environment for a first information handling system having a first network adapter. The method can also include receiving first boot configuration information for the first information handling system from a remote source wherein receiving is performed independent of a type of network adapter used in the information handling system.

In an embodiment of the first aspect the first initiator includes a hardware initiator. In a particular embodiment the method further includes using the first boot configuration table to determine an address for a first boot image that is to be used to boot the first information handling system. In another particular embodiment the method further includes creating a first boot configuration table while operating within the first pre OS environment and populating the first boot configuration table with the first boot configuration information while within the first pre OS environment. In a more particular embodiment the information handling system further includes booting an operating system OS using the first initiator wherein the first initiator is an initiator within the pre OS and OS environments.

In another more particular embodiment of the first aspect the method further includes starting a second pre OS initiator within a second pre OS environment for a second information handling system. The method also includes creating a second boot configuration table while operating within the second pre OS environment receiving second boot configuration information for the second information handling system from the remote source and populating the second boot configuration table with the first second configuration information while within the second pre OS environment.

In an even more particular embodiment of the first aspect the method further includes using the second boot configuration table to determine an address for a second boot image that is to be used to boot the second information handling system. The first and second boot images are at different units within the storage array.

In yet another more particular embodiment the method further includes using the second boot configuration information to configure an OS software initiator for the second network adapter and using the OS software initiator to continue booting the second information handling system within an OS environment. In a further more particular embodiment the method further includes starting a second pre OS environment for the first information handling system creating the first boot configuration table while operating within the second pre OS environment receiving second boot configuration information for the first information handling system from the remote source wherein the second boot configuration information is different from the first boot configuration information and populating the second boot configuration table with the second boot configuration information while operating within the second pre OS environment. In an even more particular embodiment the first boot configuration information or the second boot configuration information includes an address for a boot image for a virtual machine operable to run within the first information handling system.

In a second aspect a system can include a remote source including different sets of boot configuration information wherein the different sets include first boot configuration information and a storage array including different boot images wherein the different boot images include a first boot image. The system can also include a first information handling system coupled to and separate from the remote source and storage array wherein the first information handling system includes a first network adapter. The first information handling system is operable to start a first initiator within a first pre OS environment create a first boot configuration table while operating within the first pre OS environment receive first boot configuration information from a remote source and populate the first boot configuration table with the first boot configuration information while within the first pre OS environment. The creation and populating of the first boot configuration table is performed independent of a type of network adapter used in the first information handling system.

In an embodiment of the second aspect the first initiator includes a hardware initiator. In a particular embodiment the first information handling system is further operable to use the hardware initiator within an OS environment.

In still another embodiment the system further includes a second information handling system coupled to separate from the remote source the storage array and the first information handling system wherein the second information handling system includes a second network adapter. The second information handling system is operable to start a pre OS software initiator within a second pre OS environment receive second boot configuration information from the remote source use the second boot configuration information to configure an OS software initiator for the second network adapter and use the OS software initiator to continue booting the second information handling system within an OS environment. In a further embodiment the first information handling system is further operable to start within a second pre OS environment and receive second boot configuration information from the remote source wherein the second boot configuration information is different from the first boot configuration information. In a particular embodiment the first boot configuration information or the second boot configuration information includes an address for a boot image for a virtual machine operable to run within the first information handling system.

After reading this specification the functionality or performance of the methods described herein can be implemented in hardware firmware software other machine readable code or any combination thereof. Further methods described herein can be performed automatically however a portion of the method can be performed manually if needed or desired.

Note that not all of the activities described above in the general description or the examples are required that a portion of a specific activity may not be required and that one or more further activities may be performed in addition to those described. Still further the order in which activities are listed are not necessarily the order in which they are performed.

In the foregoing specification the concepts have been described with reference to specific embodiments. However one of ordinary skill in the art appreciates that various modifications and changes can be made without departing from the scope of the invention as set forth in the claims below. Accordingly the specification and figures are to be regarded in an illustrative rather than a restrictive sense and all such modifications are intended to be included within the scope of invention.

Benefits other advantages and solutions to problems have been described above with regard to specific embodiments. However the benefits advantages solutions to problems and any feature s that may cause any benefit advantage or solution to occur or become more pronounced are not to be construed as a critical required or essential feature of any or all the claims.

After reading the specification skilled artisans will appreciated that certain features are for clarity described herein in the context of separate embodiments may also be provided in combination in a single embodiment. Conversely various features that are for brevity described in the context of a single embodiment may also be provided separately or in any subcombination. Further references to values stated in ranges include each and every value within that range.

