---

title: Interactive scorekeeping and animation generation
abstract: Techniques for interactive scorekeeping and animation generation are described, including evaluating a play to form an event datum associated with execution of the play, using the event datum to form an event packet, generating an animation using the event packet, the animation being associated with the execution of the play, and presenting the animation on an endpoint.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08531462&OS=08531462&RS=08531462
owner: EyezOnBaseball, LLC
number: 08531462
owner_city: Morgan Hill
owner_country: US
publication_date: 20080609
---
The present invention relates generally to computer software applications and architecture and electronic scorekeeping. More specifically interactive scorekeeping and animation generation is described.

Conventional scorekeeping has been maintained using paper form score sheets that are populated by users either involved in a game i.e. a sporting event match or other competitive event in which competing parties groups teams or individuals establish a record of points against each other during the conduct i.e. play of a game . In some conventional approaches the sport of amateur baseball among others often uses a paper or electronic score sheet to record scores and other player information including drawing a symbol onto a representation of a playing field printed on the score sheet. As used herein the term score refers generally to keeping a record of the points gained in a game. However using conventional score sheets have drawbacks. For example novices to the game typically find populating the score sheet to be a difficult and time consuming task because there are many symbols to represent the outcome i.e. result of a play. Further conventional score sheet input typically requires providing numerical values associated with a play causing distraction and disrupting visual observation of a play and a game. Still further scoring using conventional score sheets provides summary information about the outcome of a play. Conventional scorekeeping solutions do not describe plays in detail such as specific physical motion of players environmental conditions or other information. Conventional solutions for gathering statistics about multiple facets of a play including performance of each player executing the play are data mining intensive and labor some often requiring multiple individuals i.e. users or persons keeping score to populate different areas of a score sheet. Conventional solutions fail to accurately and quickly depict the conduct of a play or game for players coaches or other stakeholders because score sheet are used to record the outcomes and not the conduct of a play. In other words conventional solutions fail to capture the execution of a play during a game.

In other conventional solutions electronic score sheets are problematic due to complex and difficult user interaction is required. Further presentation and analysis of scorekeeping data is results based i.e. outcome oriented and has many of the above described limitations of paper based score sheets.

Thus what is needed is a solution for scoring games without the limitations of conventional techniques.

Various embodiments of the invention may be implemented in numerous ways including as a system a process an apparatus or a series of program instructions on a computer readable medium such as a computer readable storage medium or a computer network where the program instructions are sent over optical or electronic communication links. In general operations of disclosed processes may be performed in an arbitrary order unless otherwise provided in the claims.

A detailed description of one or more embodiments is provided below along with accompanying figures. The detailed description is provided in connection with such embodiments but is not limited to any particular example. The scope is limited only by the claims and numerous alternatives modifications and equivalents are encompassed. Numerous specific details are set forth in the following description in order to provide a thorough understanding. These details are provided for the purpose of example and the described techniques may be practiced according to the claims without some or all of these specific details. For the purpose of clarity technical material that is known in the technical fields related to the embodiments has not been described in detail to avoid unnecessarily obscuring the description.

In some examples the described techniques may be implemented as a computer program or application application or as a module or sub component of another application. The described techniques may be implemented as software hardware firmware circuitry or a combination thereof. If implemented as software the described techniques may be implemented using various types of programming development scripting or formatting languages frameworks syntax applications protocols objects or techniques including C Objective C C C Flex Java Javascript Ajax COBOL Fortran ADA XML HTML DHTML XHTML HTTP XMPP and others. Design publishing and other types of applications such as Dreamweaver Shockwave Flash and Fireworks may also be used to implement the described techniques. The described techniques may be varied and are not limited to the examples or descriptions provided.

Techniques for interactive scorekeeping and animation generation are described including presenting an interface that is configured to record plays e.g. an action or act that is performed in any type of game resulting in an outcome or result and to produce play related animation. In some examples a play may be an act event or action while playing a game or a sport for example baseball cricket football and others. The game of baseball has many sub steps involved in executing a play such as maneuvers performed by a player including interactions with other players or objects on the playing field. In other examples the described techniques may include interactions with a user e.g. scorekeeper coach or others to obtain enter analyze filter sort or otherwise evaluate evaluate game data before during or after a game. In some examples game data may be data representing facets of the game such as a pitch result a play result an offensive result a defensive result or others. An interaction may be an input such as a mouse click mouse over i.e. moving an icon using an input output device such as a computer mouse clicking and dragging text entry or the like. Data input by a user may be used to determine whether to generate i.e. render display or present an animation associated with the play results of a game perform an evaluation to analyze game data or other type of function. In some examples game data may be stored in a file which may be logical groups of data or information that may be used to instantiate an object process or set of objects or processes when invoked. Files may include content data or information such as score sheets tables documents images video audio multimedia elements news articles and the like. In other examples various types of data or information besides game data may be used to perform the described techniques. For example animations may be edited or curtailed to present portions of a game of interest to a user. In other words a user may play back an animation sequence for a game i.e. a continuous series of animations that make up the game or an individual play within a game associated with a given player team league or the like. Further the described techniques may be used with various types of users e.g. players coaches media reporters spectators or others . In other examples the described techniques may be implemented differently and are not limited to the descriptions provided.

In some examples scorekeeping application may be invoked to provide an interactive tool configured to record and process data from a game to present results including animation simulating the game as described in greater detail below. For example an input not shown may be received by scorekeeping application that generates a record of a play consisting of a sequence with player activity i.e. an event involving execution of the play that contributes to the scoring of the game. In some examples the play may be for example a pitcher throwing a ball to a batter in which the batter swings and makes contact with the ball. Here scorekeeping application may inquire about a sequence of events such as a pitch a hit catch or the like. An inquiry may include evaluating a pitch play offensive or defensive result. Evaluating each result may generate a data packet which in some examples may contribute to forming an animation depicting the sequence of player activity using multiple data packets. Further scorekeeping application may be configured to generate other files such as electronic score sheets that may be populated with scoring information about the game which may be stored at repository . In other examples system may be configured and implemented differently than shown and described.

Here data transferred over API module may be used by application to support requests for services by for example scorekeeping application . API module may be used to transfer data between application and modules and other sources or destinations e.g. an operating system another application port or other source destination . In some examples requests may be determined based on input provided by the entry of data associated with a game game data or play play data . For example a user on client may request to enter game data associated with a pitch result with properties such as pitch type pitching speed pitch location and others. In some examples game data may include other facets of the game such as offensive plays e.g. batting running defensive plays e.g. fielding and scoring plays. In other examples requests may be used to retrieve game data which may be determined based on input provided to request access to for example repository . In some examples requests may be used to provide services for submitting game data or play data reviewing scores watching animations generated from game or play and others.

Here translation module may be used by application to parse incoming data from API module and to evaluate an identifier or tag associated with an animation. For example incoming game or play data may include content related tags that may be searched decoded retrieved or otherwise modified to generate animations associated with the content. In some examples a formatting language such as for example extensible markup language XML may be used to format game or play data for use when processing XML based data to generate animations locally or remotely by having a tag embedded in the incoming game or play data and using the tag to identify or mark mark an animation that depicts the content i.e. an amount of information about a play in the game associated with a given tag. In some examples marking an animation may be performed to identify a specific frame or multiple frames of animation and compile successively identified frames in order to generate i.e. build an animation sequence. In some examples the tag may be located in some examples within a header not shown of the incoming game or play data. In other examples the tag may be combined with other data found in a payload section of incoming game or play data. In still other examples translation module may be in data communication with an adaptor not shown configured to facilitate translation of web languages e.g. HTML i.e. hyper text markup language DHTML i.e. dynamic hypertext markup language XML XSL i.e. extensible style sheet language WSDL i.e. web services delivery language and others .

Here animation module may be used by application to render data from one or more of API module logic module input module translation module scoring module and other modules. In some examples animation module may be an animation engine configured to process game play or other types of data to generate an animation i.e. an animated visual media e.g. a 3 dimensional animation configured to present a game or portion thereof and or plays i.e. a display of motions from player avatars i.e. graphical depictions of characters associated with players coaches participants or others affiliated with a game or play . In some examples a player avatar may be a graphical image that represents a person participating in a game being scored. Also animations may present a game environment or context appropriate background depending upon the type of game being played e.g. a football stadium a baseball stadium a cricket field a polo ground a water polo aquatic stadium a rifle range a racetrack and others including but not limited to a baseball field an audience a venue setting weather elements and others. In some examples animation module may be configured to process and generate media e.g. images video voice and others to provide visual representations i.e. animations of game or play data being recorded i.e. input . In some examples animations may be configured to present three dimensional images using color and lighting properties to provide a realistic picture. In other examples animation module may be connected to input module to provide an interaction that may modify settings or properties about an animation e.g. player avatar attributes or characteristics game environmental conditions and others . For example elements such as team uniforms physical features player performance levels and others may present the animation differently. Further animation module may provide control of how animations may be presented such as modifying viewing angles for presentation on for example client for example setting a viewing angle in the third 3 person. In other examples animation module may be configured to connect to a graphics card not shown using API module and support the conversion of game play or other data to animations.

Further scoring module may be used by application to provide management of scoring a game. Baseball for example has many sub steps in scoring each play which may include recording multiple events and motions. In some examples scoring module may provide inquiries about a score using scorekeeping application that captures a situation of a game or portion thereof including but not limited to a fielding play a running play a batting play a motion by a player while executing the play a result of the play and others. In some examples an inquiry may be an instance of questioning that involves evaluating the outcome of a game or play and a resulting score. In some examples scoring module may be configured to translate a game or play into quantitative e.g. statistical or qualitative e.g. subjective data that may be used for evaluation. Also scoring module may be configured to translate an entry of game or play data into a symbol or notation that may be used for generating output data i.e. data resulting from the performance of an evaluation .

Here output module may be used by application to provide output i.e. data or information associated with a game or play . In some examples output module may be configured to present generated computer generated images i.e. animations and content related to the scoring of a game. In some examples output module may process game or play data from one or more of input module translation module animation module or scoring module . For example output module may be connected to a display not shown configured to present user interface generated by scorekeeping application using the described techniques. In other examples output module may be in data communication with modules to provide generated reports including but not limited to score sheets box scores charts graphs player pages team pages league pages animation metadata and others.

In some examples repository may be implemented using a database configured for local or remote access data bank data mart data warehouse storage area network SAN network attached storage NAS redundant array of independent drives or disks RAID or any other type of storage facility configured to store data that may be accessed by application . For example data associated with interactive scorekeeping and animation generation may be stored in repository . As another example data used to generate reports by output module and scoring module may be stored in and accessed from repository . In other examples repository may be a repository or other type of storage facility configured for remote access as described below in connection with . Here repository may be in data communication with other sources e.g. electronic devices web portal and the like using API module across network to request access to game or play data. In other examples application may be implemented differently and may also vary in architecture function design operation or other attributes.

In some examples forms may include content based on playing for example baseball cricket football or other games. In some examples page control field may be also configured to change content presented on background . Further background in some examples may be configured to present functionality such as controls responsible for recording data from a game and presenting the game or portion thereof using animation.

In some examples interface may present play form that may be configured to present fields e.g. player input field pitch result input field play result input field pitch type input field pitch ball input field pitch strike input field and pitch ground input field and others related to plays performed in a game. Each of player input field pitch result input field play result input field pitch type input field pitch ball input field pitch strike input field and pitch ground input field may be configured to receive user input associated with a game or play and the conduct of these plays. Input user data may be used to generate animations.

In some examples play form may be configured to be presented on background or elsewhere on interface . In other examples play form may be removed from presentation on background using one or more of controls not shown and displayed elsewhere. For example play form may present fields e.g. player input field pitch result input field play result input field pitch type input field pitch ball input field pitch strike input field and pitch ground input field and others configured to receive data or information about a player pitch result play result pitch location or other aspect of a play. In other examples player input field pitch result input field play result input field pitch type input field pitch ball input field pitch strike input field and pitch ground input field or other fields may be presented differently than as described above. In some examples play form may be configured to receive data or information e.g. statistics about a player coach or other participant using for example player input field . Player input field may be configured to receive data or information about a player. In some examples data or information associated with a player i.e. player data may be entered prior to scoring a game using player input field . Further player input field may be configured to present player information such as a uniform number player name position or others. In other examples play form may be configured to present pitch result input field which may be configured to receive data or information about a resulting event for example after a pitch has been thrown in a game and the resulting event being a strike or a ball. In some examples pitch result input field may record information about a strike such as whether the batter swung and missed the ball e.g. a swinging strike or the batter did not swing and a strike was called i.e. a called strike . In other examples pitch result input field may be configured to receive data or information about a ball strike or pitch. In still other examples pitch locator form may be configured to receive data or information using pitch result input field to determine whether to record a pitch as a strike or a ball. In some examples pitch locator form may have three separate inputs such as pitch strike input pitch ball input field and pitch ground input field . Also pitch locator form may be used to enter the type of pitch thrown. For example there may be several types of pitches including but not limited to fastballs curveballs breaking balls or others which may be identified using pitch type input field . In other examples there may be an input field provided on play form to record the properties of each type of pitch as described above. For example a fastball may be recorded as a split finger a two seam a four seam or others. Detailed information may be input using interface providing users with the ability to generate and view animations that accurately portray the conduct of a play or game. In still other examples pitch type input field may present an icon e.g. a baseball not shown to represent different types of pitches being recorded. Icons presented in pitch type input field may be configured for selection by a user and once selected used to identify a given parameter for use when generating an animation. In some examples the types of pitches available may be determined based on entering a position of a player e.g. pitcher i.e. fielding position 1 and others using pitch type input field . Further pitch locator form may be used to input data associated with an interaction to move for example an icon e.g. a baseball icon from pitch type input field to pitch strike input field pitch ball input field or pitch ground input field . In some examples an icon not shown may be moved from pitch type input field to pitch strike input field to record a strike and based on the location of where the icon is relocated describe how the strike was determined. In other words an icon may be clicked and dragged from pitch type input field and dragged to pitch strike input field . When placed within pitch strike input field coordinates for the location of an icon are used to determine whether the ball was thrown to the left right or center of home plate for example. Likewise pitch ground input field may record a pitch that hit the ground surface in a game being recorded as a ball. In other words a pitch hitting the ground may be recorded as a strike or a ball using the techniques described above. Thus recording data or information associated with details such as the type manner pitcher or result of a given pitch may be used to generate detailed animations that visually and graphically depict these events.

In some examples interface may present one or more controls configured to provide functionality that may be used to record game data and present animations associated with a game or play. For example animation output may provide playback control of an animation. In other examples interface may present pitching output which may be configured as a control for determining access to data or information about a pitcher. In some examples pitching output when selected may be used to control the output of quantitative e.g. statistical or qualitative e.g. subjective data about the pitches thrown by each pitcher. Inning status may be configured to present qualitative information about the current inning being scored for example tracking the number of balls strikes and outs for a given inning. Also navigation panel may be configured to provide controls for displaying viewing presenting or otherwise accessing different forms presented on interface . Examples of different forms that may be presented are those used to enter data or information associated with pitching defense running scoring or others. In other examples navigation panel may be configured to provide navigational controls to access other forms not described above. In some examples pitcher input may be a control that transmits data or information provided in pitch locator form either locally or remotely . In other examples interface may present runner input which may be configured to enter data or information associated with recording events associated with a runner on base e.g. a player gets on base after hitting a ball . For example a runner may be called out e.g. getting tagged out reaching a base considered out or others or called to advance base i.e. another hit or pitch advances the runner to the next base . As another example runner status may be a control feature presented on interface that is configured to present an icon representing a current state of runners on base e.g. a baseball diamond showing highlighted bases where runners are located during a given inning . In other examples runner status may be updated using play result input . Other features functions controls input fields or the like may be implemented with interface and are not limited to the techniques described. Further interface and the above described elements may vary in architecture function design operation implementation or other attributes.

In some examples window may be configured to present various types of information including pitch sequence B and pitching statistics A. As an example when a pointer cursor or other user input output I O device is used to interface with the text for pitch sequence B or pitching statistics A sub windows not shown may be opened. A sub window configured to present pitching statistics A may present various types or categories or statistics associated with a given pitcher. Further a sub window configured to present data associated with pitch sequence B may be opened providing graphical textual or other types of data presentation associated with the sequences of pitches performed by a given pitcher against a batter e.g. slow ball over the center of the plate a fast ball to the outside a curve ball resulting in a strike out and others . In other examples the above described presentation formatting layout or design of data presented for pitching statistics A and or pitch sequence B may be varied and are not limited to the examples provided.

Control bar in some examples may be configured to present interface controls that may be used to close minimize restore downwards or upwards among others. Further region may be configured to present data associated with teams engaged in athletic competition. For example two baseball teams i.e. Team A and Team B statistics scores listed by inning runs hits and errors may be presented in region . In other examples different types of data may be presented and are not limited to the examples shown and described.

In some examples batting order panel pitch type panel pitch result panel and play result panel may be presented. Batting order panel may be configured to present the player number name and position associated with a given batter i.e. player . Further substitute batters i.e. players hitters and the like may also be presented in batting order panel . In other examples the type layout configuration and design of information or data presented in batting order panel may be configured and are not limited to the examples provided.

Pitch type panel may be configured in some examples to provide an interface for entering data or information associated with a given pitch type e.g. pitch window A strike zone B ball status window C type of pitch e.g. fast ball change ball curve ball slider splitter and others D speed E or others . In other examples different types of data may be presented in pitch type panel and are not limited to the examples shown and described.

In some examples pitch result panel may be configured to present data or information associated with a strike or ball resulting from a pitch. For example if a pitch results in a strike data may be entered in strike window A e.g. called strike swinging strike and others . Further when a button e.g. Swinging is selected in strike window A a further drop down or other type of menu may be presented that allows the entry of specific types of swinging strikes e.g. normal strike out strike out dropped and others . Alternatively if a ball results from a pitch a corresponding input may be entered in ball window B. In other examples the types configurations layouts designs and configuration of data presented in ball window B may be varied and are not limited to those shown and described.

Play result panel may be configured in some examples to present information or data associated with the outcome of a play. For example buttons may be presented that are configured to allow entry of a foul ball out or an on base determination i.e. a batter successfully lands on first base second base third base or a home run as a result of a given play as described by entry of data entered into batting order panel pitch type panel and pitch result panel . In other examples the types of data configuration layout design or format of data or information presented in play result panel may be varied and are not limited to the descriptions provided.

Scoring navigator B may be configured in some examples for use to manipulate interface which is configured to implement the techniques and logic described herein for interactive scorekeeping. Here buttons A E may be presented to allow the selection of a given set of functionality in interface . For example if button B is selected interface may be modified to present screens forms fields or other windows that may be configured to enter data or information associated with running plays in a game. Likewise pitching and defense interfaces may be presented if buttons A or C are selected respectively. Alternatively the data fields presented in interface may be reset i.e. cleared and returned to an initial state by selecting button D i.e. Reset Screen . Further button E may be selected to invoke an interactive score sheet as described in further detail below in connection with . An overall status of the number of runners on bases may be presented using icon which provides a summary level view of the status of a given inning. Further window may be presented to provide the entry of data or information associated with runner only plays i.e. plays that are neither connected to involved with or resulting from a pitch . By selecting an option to enter now or enter after pitch window provides a sub interface to enter data or information associated with runner only plays using various techniques without limitation.

In some examples control may be used to record an out i.e. to retire a play based on the description recorded for a particular base runner involved in the play. Also runner input may be configured to transmit data entered by a user as described above. In other examples runner control may be configured to provide a result that may modify positions for one some or all of base runner icons simultaneously or substantially simultaneously with each other in order to advance to a base or for a run. In some examples display may provide field that may be configured to present or display a scoreboard or page controls. Further player information or icons may be presented as avatars not shown of various shapes sizes colors designs or other features. In some examples an avatar may present data associated with player input .

In some examples generating an animation may include generating a control signal associated with an animation and sending the control signal to an animation engine that is configured to produce animations of plays or other events as described above. As described herein any type of animation engine may be used without limitation to any specific implementation. In other examples generating an event packet may also include generating a control bit that is configured to activate the animation. In some examples an animation may be associated with execution of a play. Once generated an animation is presented on an endpoint e.g. an endpoint may refer to various types of end devices applications software hardware desktop or notebook computers servers clients personal digital assistants PDAs smart phones or others regardless of whether implemented in a wireless wired optical or other type of public or private data communication or networking environment including but not limited to those shown and described above in connection with . In other examples presenting an animation may include a user accessing an animation from a device locally or remotely which may also include rendering the animation locally. Further presenting an animation may include accessing an animation sequence for playback. For example an animation sequence i.e. a sequence of animations as described above may include at least a portion of a game having one or more plays. An animation sequence may include execution of a play such as a portion of a baseball game. An animation sequence may also be associated with a profile generated at an endpoint. In still other examples presenting an animation may also include selecting a view angle of the animation from a group of view angles. Still further the above described process may be varied in implementation order execution and design and is not limited to the examples provided above.

In some examples a record of a game may be including but not limited to a score of the game highlights of each play and others. Here recording event input may include storing a portion of an outcome of a play e.g. saving scoring data i.e. data related to a play in which one or more points are added or subtracted from a count that is used for example to record actions that are required to end a play . In other examples score recording may be performed to keeping a running score of a given game. In other examples recording event input may include describing an event associated with an outcome of a play e.g. a double play which may include three fielding events to generate a score and an animation of the play and others . Further evaluating event input may include maintaining a record of a score associated with a play.

In some examples scorekeeping application and input form may be used to generate an event datum not shown . As an example an event datum may be a unit of logic that includes processed data from scorekeeping application . In other examples an event datum may be combined with other event datum to form event packet . Here event packet may include data in various fields or sections e.g. header payload check sum and others that may be used to generate a result associated with the execution of a play. In other words event packet may be processed i.e. parsed handled interpreted and the like by scorekeeping application to generate electronic score sheets charts graphs tables profile pages player statistics or other output associated with the record of a game. In some examples event packet may be generated simultaneously or substantially simultaneously to storing a portion of event packet at repository . In other examples data stored in event packet may be used to generate a web file that is associated with generating an animation. For example translating event packet may include identifying a control signal found in a portion of event packet . For example control signal may be configured as tag which associates itself with animation . Also control signal may be configured as tag 1 which is associated with animation . Further control signal may be configured as tag N which is associated with animation . In some examples combining animations to generate animation sequence may be a computer generated video stream presented on endpoint . In other examples generation of animation sequence may be performed at endpoint using scorekeeping application . In still other examples generation of animation sequence may be performed remotely using for example repository or an external processor not shown coupled to network . Endpoint may be in data connection with network and have access to repository using scorekeeping application as a portal e.g. a website to the above described techniques. Also scorekeeping application at endpoint may be configured to modify presentation of animation sequence by selecting different viewing angles e.g. a first person view third person view bird s eye view or others . Further scorekeeping application may be configured to provide audio data simultaneously or substantially simultaneously with presenting animation sequence at endpoint . Further the above described process may be varied in implementation order execution and design and is not limited to the examples provided above.

In some examples runner data may include data or information that describes which runners i.e. players are on a base e.g. first base second base third base or home plate whether a runner has been called out or safe whether a runner has advanced to a next base whether a runner has scored or whether a runner remains on base and others. Likewise defensive data may include data or information that describes fielding activity. In some examples defensive data may include data or information that describes capturing motions or defensive actions. As an example defensive actions may include putouts i.e. a fielder performing an out retiring a play assists e.g. a relay between two fielders and one of the two fielders makes an out and errors. Further defensive data may also include data or information that describes capturing motions by fielders e.g. recording the path of a ball after a hit catching a ball by a fielder . Still f game data may be generated and presented in electronic or print output form including but not limited to a score sheet a box score a pitcher s chart a hitting chart a fielding chart a set of graphs based on the charts a statistical sheet based on the charts and animation metadata. In other examples game data and the above described examples may be varied and are not limited to the examples provided above.

If a batter hit a foul ball then an animation depicting a foul ball being hit is generated . Regardless after generating animations e.g. the above described process ends. In other examples the above described process may be varied in implementation order execution and design and is not limited to the examples provided above.

In some examples various types of user interfaces may be implemented and used to provide inputs such as those described above in connection with process . Interfaces such as those described above in connection with may be used. In other examples interfaces other than those described may be implemented.

According to some examples computer system performs specific operations by processor executing one or more sequences of one or more instructions stored in system memory . Such instructions may be read into system memory from another computer readable medium such as static storage device or disk drive . In some examples hard wired circuitry may be used in place of or in combination with software instructions for implementation.

The term computer readable medium refers to any medium that participates in providing instructions to processor for execution. Such a medium may take many forms including but not limited to non volatile media volatile media and transmission media. Non volatile media includes for example optical or magnetic disks such as disk drive . Volatile media includes dynamic memory such as system memory . Transmission media includes coaxial cables copper wire and fiber optics including wires that comprise bus for transmitting a computer data signal.

Common forms of computer readable media includes for example floppy disk flexible disk hard disk magnetic tape any other magnetic medium CD ROM any other optical medium punch cards paper tape any other physical medium with patterns of holes RAM PROM EPROM FLASH EPROM any other memory chip or cartridge carrier wave or any other medium from which a computer can read.

In some examples execution of the sequences of instructions may be performed by a single computer system . According to some examples two or more computer systems coupled by communication link e.g. LAN PSTN or wireless network may perform the sequence of instructions in coordination with one another. Computer system may transmit and receive messages data and instructions including program i.e. application code through communication link and communication interface . Received program code may be executed by processor as it is received and or stored in disk drive or other non volatile storage for later execution.

Although the foregoing examples have been described in some detail for purposes of clarity of understanding the invention is not limited to the details provided. There are many alternative ways of implementing the invention. The disclosed examples are illustrative and not restrictive.

