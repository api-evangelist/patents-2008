---

title: Method and apparatus for using a dynamic policy to manage a file purging process
abstract: A method and apparatus for using a dynamic policy to manage a file purging process is described. In one embodiment, a method for using the dynamic policy to purge files comprising processing a dynamic policy for purging files from a computer wherein the dynamic policy comprises one or more metrics and applying the dynamic policy to a plurality of files to identify at least one file to be purged.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08272026&OS=08272026&RS=08272026
owner: Symantec Corporation
number: 08272026
owner_city: Mountain View
owner_country: US
publication_date: 20080602
---
Embodiments of the present invention generally relate to computer file purge management and more particularly to a method and apparatus for implementing a dynamic policy to manage a file purging process or session where a metric of the dynamic policy is extendible and or modifiable.

A computer e.g. laptop desktop mobile computing device and the like may store and process file data e.g. a plurality of files for one or more software applications e.g. internet browsers security software and the like . Because the computer has a limited amount of storage space eventually the computer may operate slowly if the amount of storage space is low. The file data e.g. cached browser files security patches signatures updates and the like may be stored in a separate directory until the separate directory reaches a threshold size after which the file data is to be purged. The purging of the file data is a common process that may be initiated by the software application or an operating system to free storage space for future use by the computer.

Sometimes the wrong file is purged e.g. a security patch an update to a software package and the like . For example the wrong file may be a file that is frequently used during the operation of the computer and or needed in the future. The wrong file may be purged because of the application of improper static and or outdated purge decision rules when a purging session is triggered. Therefore the wrong file may be purged and or the right file may be overlooked. Furthermore undesired file deletions could be time consuming and expensive for the user if such files were downloaded and due to the deletion had to be downloaded again.

Therefore there is a need in the art for method and apparatus for managing a file purging process using a dynamic policy that comprises a plurality of metrics which are used to determine whether a particular file should be purged.

Embodiments of the present invention generally relate to a method and apparatus for using a dynamic policy to manage a file purging process. In one embodiment a method for using the dynamic policy to purge files comprising processing the dynamic policy for purging files from a computer wherein the dynamic policy comprises one or more metrics and applying the dynamic policy to a plurality of files to identify at least one file to be purged.

The computer is a computing device e.g. a laptop a desktop a Personal Desk Assistant PDA a tablet a mobile phone and the like that comprises a central processing unit CPU various support circuits and a memory . The CPU may be one or more of any commercially available microprocessors or microcontrollers that facilitate data processing and storage. The various support circuits facilitate operation of the CPU and may include clock circuits buses power supplies input output circuits and or the like. The memory includes a read only memory random access memory disk drive storage optical magnetic storage removable storage and the like. Those skilled in the art will appreciate that the various embodiments of the computer depicted in may vary. For example one or more embodiments of the computer may also include various storage processing devices e.g. an optical disk drive a computer graphics card a magnetic data storage device and the like as well as various input output devices e.g. a mouse a keyboard a computer display and the like .

The memory further includes various data such as a plurality of files herein referred to the files and a dynamic policy . The memory further includes various software packages such as an extension module and a purging module . The files may include file data of interest to the user e.g. temporary internet files security patches cached files software application updates and the like . The files may include file data for a software application patch e.g. computer code for modifying the software application that is downloaded onto the computer . The dynamic policy may include a plurality of metrics whose values are used to determine whether a particular file e.g. an executable file for a security patch a software application update and the like is to be purged during a purging session or process as described further below.

In accordance with various embodiments of the present invention the dynamic policy is used to determine whether a particular file is to be purged based on values for a plurality of metrics hereinafter referred to as metrics . In one embodiment the metrics are defined in terms of various attributes i.e. file system attributes user defined or extended attributes attributes related to the files and the like such as class ID file creation download duration time taken to virus scan result of installation num of times accessed file modified time file size last accessed time and the like. In one embodiment various measurements statistics related to the various attributes i.e. file system attribute data metadata and or the like may be provided by information regarding the file system e.g. a Master File Table MFT iNode information and the like a file itself e.g. file metadata a computer hardware resource a software application and or an Application Programming Interface API such as an implementation of a COM based Component Object Model interface associated with an operating system of the computer . For example a file size for a particular file of the files may be stored in the MFT of an operating system that is used by the computer .

The various measurements statistics are used to determine the values for the metrics. In one embodiment the values may include computed values based on measurements statistics related to a file system attribute of a particular metric. A function may be applied to the measurements statistics of the files associated with a file system attribute to compute values that indicate one or more files likely to be purged during a file purging session. A higher value for the particular metric indicates a stronger likelihood that the particular file is to be purged.

In one embodiment the computed values for the particular metric may be normalized i.e. scaled down to enable a fair comparison with values associated with another metric. For example a value i.e. non normalized value determined for the file size metric of a first file may be different from a value determined for the download duration metric of a second file. As such normalization of the values facilities an equitable determination as to whether the first file or the second file is to be purged first if at all. In another embodiment the values may include normalized values from a first number i.e. one to a second number i.e. five in which each value refers to a range of the measurements statistics related to the file system attribute of the particular metric.

For example the particular metric may be defined in terms of the file size attribute. Accordingly file sizes ranges of the files e.g. zero kilobytes 0 kb to hundred kilobytes 100 kb hundred kb to one megabyte 1 mb one mb to five mb and five mb to ten mb and ten mb to hundred mb are assigned values that represent a likelihood or probability that a file associated with a particular file size range is to be purged. For example the files are assigned values from one through five based on which file size range corresponds to the file size of each file. Hence a file with a file size within the file size range of zero kb to hundred kb is assigned the value one because files that fall within such a file size range may be most likely to be purged during a next file purging session or process. The assignment of the values with the file size ranges within the dynamic policy may be defined or modified by the user e.g. the system administrator . As an example the system administrator may assign the file size range of zero kb to hundred kb with a value of five because the files that fall within such a file size range are not likely to be purged with respect to a particular system managed by the system administrator. Since computers vary in many respects certain computers may purge files differently than other computers. Furthermore the system administrator may modify the file size range of zero kb to hundred kb into a file size range of zero kb to one mb.

In another embodiment the particular metric in the dynamic policy may be further defined by a purge order e.g. decreasing increasing and or the like . The purge order may be pre defined by an owner e.g. a manufacturer of a file purging software and or defined or modified by the user e.g. the system administrator . The purge order indicates an assignment of a value e.g. a normalized value to attribute data e.g. a measurement statistic or a range of measurements statistics related to the particular metric. In one embodiment the purge order indicates an assignment of a normalized value to file system attribute data. For example if the file size metric includes an increasing purge order normalized values of five and one may be assigned to the file size range of zero kb to hundred kb i.e. a lowest attribute data and the file size range of ten mb to hundred mb i.e. a highest attribute data respectively. As another example if the file size metric includes a decreasing purge order the normalized values of one and five may be assigned to the file size range of zero kb to hundred kb i.e. a lowest attribute data and the file size range of ten mb to hundred mb i.e. a highest attribute data respectively.

In another embodiment a weight may further define the particular metric by indicating an influence or importance of the particular metric on the determination of whether a file of the files is to be purged. For example a file size metric may be more important than a file creation metric in determining whether the file is be purged during the purging process. Hence the file size metric is assigned a relatively greater weight than the file creation metric. Furthermore each weight and or each value for each metric in the dynamic policy are used to compute a purge score for the file according to one embodiment. In one embodiment a purge score is equal to a first metric a first weight a second metric a second weight . . . a nth metric a nth weight . As explained below the purge score indicates whether the file is to be purged.

In operation after the dynamic policy is generated and stored the purging module accesses the dynamic policy and applies the metrics to the files to compute purge scores based on the values and or the weights associated with the metrics. In one embodiment of the present invention the purging module uses the purge scores to determine whether a file is to be purged. In another embodiment the purging module may compare a purge score of the file with one or more purge scores for one or more remaining files of the files .

Furthermore the purging module performs the purging process using the purge scores until a size of a directory reaches a lower threshold size. Moreover the purging module commences the purging process when a size of the directory reaches an upper threshold size. For example if a maximum size of the directory is two gigabytes gb the upper threshold size of the directory is one gigabyte gb and the lower threshold size is five hundred mg i.e. twenty five percent then the purging module starts the purging process on the files when a space occupied by the directory exceeds one gb. The purging process proceeds until at least five hundred mb of space is freed at which the purging module stops the purging process.

In accordance the present invention the extension module is configured to add define remove and modify a metric a value a weight and or a purge order to the metrics in the dynamic policy . In another embodiment the dynamic policy may be extended to include one or more user defined metrics based on various data e.g. metadata file system attribute data and the like as selected by the user e.g. a system administrator . The user may also define and or modify values for the user defined metrics and or any of the pre defined metrics in the dynamic policy through the extension module .

According to various embodiments of the present invention the dynamic policy may be described in one or more file formats e.g. a config file format a properties file format a .INI file format and the like . In one embodiment the dynamic policy is implemented in accordance with an XML Extensible Markup Language format. XML is a general purpose specification for creating custom markup languages. In one embodiment of the present invention the dynamic policy is an XML document that describes the metrics used to determine if a file is to be purged. The XML document enables an extension and or modification of the metrics through the extension module . Furthermore the dynamic policy may include indicia for identifying files such as a particular folder name whose files are never or always to be purged. Moreover the dynamic policy may include indicia for determining when the purging process is triggered and or stopped.

The Items under the system tag provide information regarding which directory stores the files and when a purging process session is to start. The directory tag refers to a file system path of the files . The maxsize tag defines a maximum size for the directory. The selftrigger tag indicates if a trigger for the purging process is manual i.e. through an external application requesting the purging process and or the like or is automatic i.e. through a file system notification API such as FindFirstChangeNotification FindNextChangeNotification ReadDirectoryChanges and the like . The lowerthreshold tag defines a size of the directory until which the purging process may be performed once started. The upperthreshold tag defines a size of the directory until which the purging process may not be performed. The exclusion list tag refers to one or more file paths filenames for one or more file that are to be ignored during the purging process and are not to be deleted for any reason.

At step a dynamic policy e.g. the dynamic policy of is generated. At step a determination is made as to whether a file purging session is triggered. If the file purging session is triggered option Yes the method proceeds to step at which the dynamic policy is accessed. If the file purging session is not triggered option No the method proceeds to step . At step the dynamic policy is accessed. At step the dynamic policy is applied to a plurality of files e.g. the files of . At step a file to be purged is identified. At step the identified file is deleted. At step a determination is made as to whether there are more files to be purged. If there are more files to be purged option Yes the method returns to step . If there are no more files to be purged option No the method proceeds to step . At step the method ends.

At step a determination is made as to whether the dynamic policy is to be extended. If the dynamic policy is to be extended option Yes the method proceeds to step . If the dynamic policy is not to be extended option No the method proceeds to step where the method ends. At step an extension function is selected. As described above extension functions are used to modify existing metrics and or values as well as to define new metrics and or values. In one embodiment the extension functions are defined in an Application Programming Interface API generated by an extension module e.g. the extension module of . Alternatively the extension functions may be used to extend or modify a policy rule.

At step a first metric is defined e.g. in terms of a file system attribute . At step one or more values a purge order and or a weight for the first metric are defined. At step the first metric is added to the dynamic policy. The steps to illustrate a first extension function e.g. a set of computer instructions code in the API of which the user executes to add the new first metric to the dynamic policy. Accordingly the plurality of metrics and the new metric may to be used to compute a purge score.

At step a second metric is removed from the dynamic policy. The step illustrates a second extension function of which the user executes to remove the second metric from the dynamic policy. In one embodiment the second metric is removed by invoking the second extension function through the API in which the second extension function is defined. Accordingly a purge score is computed using the plurality of metrics except for the second metric.

At step one or more values a purge order and or a weight for a third metric of the plurality of metrics in dynamic policy are defined and or modified. At step the third metric of the plurality of metrics in the dynamic policy is modified. The steps to illustrate a third extension function of which the user executes to modify the third metric e.g. modify a value a purge order and or a weight of the plurality of metrics. In one embodiment the third metric is modified through the API in which the third extension function is defined. Accordingly a purge score is computed using the plurality of metrics that includes the modified third metric.

At step a value for a fourth metric of the plurality of metrics in the dynamic policy is defined. The step illustrates a fourth extension function of which the user executes to define the value of the fourth metric. In one embodiment the value is assigned to a particular measurement statistic or a range of measurement statistics associated with the fourth metric. For example a value for time periods greater than five minutes for a download duration metric is defined to be one. In one embodiment the value of the fourth metric is defined through the API in which the fourth extension function is implemented. Accordingly a purge score is computed using the plurality of metrics that includes the defined value for the fourth metric.

The steps to are illustrative of the techniques in which the dynamic policy may be extended. The user may proceed in extending the dynamic policy by selecting any or all of the extension functions. At step after the selection and execution of one or more extension functions an extended dynamic policy is stored. The method ends at step .

At step a value for a metric of the plurality of metrics is determined. In one embodiment the value is determined based on attribute data e.g. measurements statistics related to a file system attribute . In another embodiment the attribute data is divided by a number to produce attribute data ranges. For example file sizes for the plurality of files are divided into five ranges in which each file size range comprises an equal number of files of the plurality of files. At step the value is normalized. The normalized value ensures an equitable comparison between various metrics. At step the normalized value is multiplied by a weight associated with the metric. At step a determination is made as to whether there are more metrics in the plurality of metrics. If there are more metrics Option Yes the method returns to step . If there are no more metrics Option No the method proceeds to step .

At step a purge score for the file is computed. At step a determination is made as to whether there are more files in the plurality of files. If there are additional files to be examined Option Yes the method returns to step . If there are no more files to be examined Option No the method proceeds to step . At step the plurality of files are sorted i.e. ranked based on the purge score of each file. In one embodiment the ranking is then used to determine if a file needs to be deleted or retained in a current purging session. At step one or more files of the plurality of files are selected to be purged. At step the method ends.

While the foregoing is directed to embodiments of the present invention other and further embodiments of the invention may be devised without departing from the basic scope thereof and the scope thereof is determined by the claims that follow.

