---

title: Dynamic search result highlighting
abstract: A dynamic highlighting system initially applies a high-level highlight to occurrences of one or more keywords in a search result that fades to a low-level highlight effect. The system receives search results from a search engine and identifies occurrences of keywords in the search results. The system applies a first highlight effect to identified occurrences of the keywords and displays the search results incorporating the highlighted keywords. Upon detecting the occurrence of a highlighting change event, such as the expiration of a timer, the system applies a second highlight effect to the displayed search results. The second highlight effect may include removing the highlight or displaying a muted highlight effect. Thus, the dynamic highlighting system provides an initial noticeable highlight that fades to a level that is still noticeable but is less likely to distract the user from other elements of the user interface.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08259124&OS=08259124&RS=08259124
owner: Microsoft Corporation
number: 08259124
owner_city: Redmond
owner_country: US
publication_date: 20081106
---
Searching is a common way to find various types of data. For example web search engines help users find web pages based on one or more keywords. Desktop search is a popular way to find data stored on a user s local computer. A commonly cited statistic states that 80 of a company s data is contained in unstructured data which may be easiest to access using searching. The data for a desktop search may include files and directories documents email messages and many other types of data. A search begins with a search query that contains one or more keywords. A search engine receives the search query and looks up the keywords in an index to identify matching content items. The search engine provides information about the matching content items as search results. For example a web search engine provides hyperlinks to matching web pages and may display a short description of the web page next to the link. A desktop search engine may display links to local data including properties of the data such as the author of a document the path to a file and so forth.

Search result highlighting calls a user s attention to occurrences of the keywords used in the search query that are present in the search results by modifying the way that the user interface displays occurrences of the keywords. For example some applications apply highlighting to occurrences of keywords that appears much like a physical yellow or other color highlighter appears to words on paper. Other applications boldface or italicize occurrences of keywords. Highlighting keywords helps the user identify relevant search results quickly by calling out the most relevant parts of potentially long descriptions or content item properties.

A problem with search result highlighting is that it can be loud and overwhelming for the user and does not always add the value intended by the application author. Some applications display colors bold or other display effects normally when displaying content item properties so that the colors or boldface of search result highlighting may detract from the look and feel that the application author intended. For example Windows Vista displays icons e.g. the yellow Microsoft Outlook email message icon next to content items in search results that can have similar colors to a highlight effect. As another example Windows Explorer displays album ratings as one to five yellow stars and various colors throughout the user interface. Previous solutions modify the highlight effect to reduce the perceived noise while unfortunately correspondingly reducing the ability of the highlighting to catch the user s attention. For example Microsoft SharePoint boldfaces occurrences of search query keywords in search results. This technique does not work for all languages such as Chinese. As another example some applications change the text color of occurrences of keywords in search results. This technique does not work for colorblind users. Both of these methods produce a less noticeable highlight as well as introducing other limitations.

A dynamic highlighting system is described that initially applies a high level highlight to occurrences of one or more keywords in the search result that fades or otherwise changes to a low level highlight effect or goes away entirely. The system receives search results from a search engine and identifies occurrences of keywords that are present in the search results. The system applies a first highlight effect to identified occurrences of the keywords and displays the search results incorporating the highlighted keywords. Upon detecting the occurrence of a highlighting change event such as the expiration of a timer the system applies a second highlight effect to the displayed search results. The second highlight effect may include removing the highlight or displaying a less distracting highlight effect such as a box around keywords or a traditional yellow box highlight effect that is more faded than the first highlight effect. The system may also animate the transition between the first and second highlight effect so that the fade is gradual. Unlike previous static solutions to reducing the noise of search result highlighting the dynamic highlighting system provides an initial noticeable highlight that fades to a level that is still noticeable but is less likely to distract the user from other elements of the user interface. The result is a more compelling user interface that does not compromise the value of search result highlighting.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used to limit the scope of the claimed subject matter.

A dynamic highlighting system is described herein that initially applies a high level highlight to occurrences of one or more keywords in the search result that fades or otherwise changes to a low level highlight effect or goes away entirely. The system receives search results from a search engine. For example the search engine may provide results as text hypertext markup language HTML extensible markup language XML or another suitable format. The system identifies occurrences of keywords that are present in the search results. For example the system may store the search query entered by the user and scan the results for keywords within the query. The system applies a first highlight effect to identified occurrences of the keywords. For example the system may apply a traditional bright yellow box highlight effect over keywords. The system then displays the search results incorporating the highlighted keywords. For example the system may present a list of search results to the user in a user interface.

Upon detecting the occurrence of a highlighting change event the system applies a second highlight effect to the displayed search results. For example the system may set a timer after initially displaying the search results and upon detecting that the timer has expired e.g. several seconds switch to the second highlight effect. The second highlight effect may include removing the highlight or displaying a less distracting highlight effect such as a box around keywords or a traditional yellow box highlight effect that is more faded e.g. more muted colors than the first highlight effect. The system may also animate the transition between the first and second highlight effect so that the fade is gradual. Unlike previous static solutions to reducing the noise of search result highlighting the dynamic highlighting system provides an initial noticeable highlight that fades to a level that is still noticeable but is less likely to distract the user from other elements of the user interface. In some cases a more muted highlight effect remains so that the user gets the benefit of being able to quickly identify the occurrences of keywords in the search results but any colors or other effects normally displayed in the search results are not be drowned out by the highlight effect. The result is a more compelling user interface that does not compromise the value of search result highlighting for enhancing the visibility of keywords.

The search engine interface component of the dynamic highlighting system receives search results from a search engine. For example a user may submit a query to the search engine through a user interface presented by an application and the system submits the search query to the search engine for processing. The search engine identifies matching content items in the search engine index and provides one or more search results to the application through the search engine interface component . The search engine may provide results in batches when the search is complete or individually over time as the search engine identifies new search results. Some searches can take enough time that the system provides a more satisfying user experience by providing the user with some early search results quickly while waiting for the search engine to produce further results that take longer to find. Those of ordinary skill in the art will recognize various common synchronous and asynchronous application programming interface API paradigms for receiving search results in batches or on an ongoing basis.

The keyword identification component of the dynamic highlighting system identifies occurrences of one or more keywords from a search query in the received search results. For example the keyword identification component may scan the search results to identify occurrences of the keywords. When the keyword identification component identifies the location of a keyword the component stores the location in a data structure for use by the rendering component . Keywords may include individual words in search results or may be part of words within search results. For example the keyword read may occur individually or within the word reading. Keywords may also wrap across lines. The keyword identification component identifies these situations and stores information for the rendering component to correctly highlight the keywords based on their positions within the search results.

The rendering component displays the search results in a particular layout e.g. a list and applies one or more highlight effects to identified occurrences of keywords in the search results. The rendering component may alter the displayed highlight effects based on instructions from the effect switch component and provide a transition between highlight effects. For example the rendering component may increase the opacity of a new highlight effect in steps over a fixed period while decreasing the opacity of an old highlight effect. This produces the appearance to the user that the old highlight effect fades into the new highlight effect.

The effect switch component switches the displayed search results from one highlight effect to another highlight effect and notifies the rendering component to display the transition. For example the effect switch component may initially select a bright highlight when the system first displays the search results. After the system has displayed the search results for a certain period the effect switch component may select a softer highlight e.g. less bright . The effect switch component directs the rendering component to apply the selected highlight effect to the search results.

The application interface component interfaces with other aspects of the application in which the dynamic highlighting system is incorporated. The dynamic highlighting system may be implemented as a rendering module that more than one application can invoke through a predefined interface to display search results with highlighting as described herein. Alternatively or additionally the dynamic highlighting system may be incorporated into a single application and may interact with other components or systems for searching and interacting with search results. Those of ordinary skill in the art will recognize various common ways for incorporating extra components into an application. For example the system may be embodied in a component object model component COM invoked directly through as a dynamically linked library DLL or statically linked as a library LIB .

The computing device on which the system is implemented may include a central processing unit memory input devices e.g. keyboard and pointing devices output devices e.g. display devices and storage devices e.g. disk drives . The memory and storage devices are computer readable media that may be encoded with computer executable instructions that implement the system which means a computer readable medium that contains the instructions. In addition the data structures and message structures may be stored or transmitted via a data transmission medium such as a signal on a communication link. Various communication links may be used such as the Internet a local area network a wide area network a point to point dial up connection a cell phone network and so on.

Embodiments of the system may be implemented in various operating environments that include personal computers server computers handheld or laptop devices multiprocessor systems microprocessor based systems programmable consumer electronics digital cameras network PCs minicomputers mainframe computers distributed computing environments that include any of the above systems or devices and so on. The computer systems may be cell phones personal digital assistants smart phones personal computers programmable consumer electronics digital cameras and so on.

The system may be described in the general context of computer executable instructions such as program modules executed by one or more computers or other devices. Generally program modules include routines programs objects components data structures and so on that perform particular tasks or implement particular abstract data types. Typically the functionality of the program modules may be combined or distributed as desired in various embodiments.

In block the system displays the search results with the first highlight effect. For example the system may display the search results with a bright yellow highlight around each identified keyword. In decision block if the timer has expired then the system continues at block else the system loops to block to wait for the timer to expire. In block the system displays the search results with a second highlight effect that is more subtle than the first highlight effect. For example the second highlight effect may leave a box around each identified keyword but remove the yellow color. Alternatively or additionally the system may remove the highlight effect entirely. After block these steps conclude.

In some embodiments the dynamic highlighting system applies a highlight around one or more keywords using a nine grid element. A nine grid element is a grid of nine cells where the center cell contains the keyword that the system will highlight. The cells to the top bottom left and right contain an area larger than the keyword e.g. padding to which the system also applies the highlight effect. The corner cells provide a shape to the highlight effect such as rounded or square corners. From a user interface design perspective a nine grid slice is used to preserve the proportional integrity and image fidelity of aspects of a design asset. For example when a typical design asset is scaled some image quality is usually lost because the resolution of the asset e.g. an image text and so on is too low to provide a satisfactory resolution at the larger size. However using a nine grid element or slice the scaling of each cell can be different so that for example rounded corners or other effects are not scaled as much as straight parts of the grid e.g. the top bottom left and right cells . Thus using a nine grid element allows the system to display a higher quality graphic element than a simple yellow rectangle as is typically used for hit highlights.

In this case the system has received two search results. The first search result is a word processing document entitled Column Header Group Behavior. The search result lists other properties of the word processing document such as the path c Users Ashley Documents where the content item was found and a selected portion of the text in the document that says . . . data is in columns. The search result contains several occurrences of the keywords in the search query that the system has highlighted. For example both keywords occur at location . The system has coalesced the highlighting of the two individual keywords column and header to highlight the phrase column header using one highlight box for a more elegant user experience. The system has also highlighted a keyword at location within a larger word namely the keyword column within the word columns. 

Where there is whitespace at an edge of a keyword the system may apply a larger highlight by padding the edges of the highlighted region. For example at location the system can apply a larger highlight because there is whitespace at each edge. However at location the system has not padded the right edge of the keyword to avoid including other letters of the word that are not part of the keyword within the highlighting effect.

Similarly the second search result is a spreadsheet document entitled Icon List that contains the keyword header that is shown in the summary text highlighted at location . The system displays the highlight at a high level initially and fades the highlight after several seconds. This calls the user s attention to the highlighted keywords initially and then allows the user to notice other properties of each document that may help the user determine which document satisfies the user s search. The displayed properties of each search result may include color and font effects such as bold italics and so on. By fading the highlight after several seconds the system reduces the chance that the highlighting applied by the system will interfere with the application author s design for the color and other effects in the search result list .

In some embodiments the dynamic highlighting system starts a timer when the system receives the first search result and continues to receive other search results. For example the search engine may provide results to the system as the search engine identifies matching results so that the user does not have to wait for the search engine to complete an exhaustive before the system displays any results to the user. The system may apply a first highlight effect to any results received during the duration of the timer and then transition to a second highlight effect. The system may only apply the second highlight effect to results that the system receives after the expiration of the timer.

In some embodiments the dynamic highlighting system the system waits until the search is complete and the system has received all results before starting the timer described herein. In such embodiments the system applies both the first and second highlight effects to each of the search results for the lifetime of the timer.

In some embodiments the dynamic highlighting system sets a timer for each search result to allow the system to display each search result with both the first and second highlight effects but still provide the user with quick feedback as soon as the system receives each search result. These embodiments call the user s attention to occurrences of the keywords in each search result while still muting the highlight effect to avoid overpowering other user interface elements that the application displays to the user.

In some embodiments the dynamic highlighting system fades the first highlight effect into the second highlight effect over several steps. For example the system may decrease the opacity of the first highlight effect in steps over time e.g. 10 per 100 milliseconds while correspondingly increasing the opacity of the second highlight effect. This makes the first highlight effect appear to morph or smoothly transition to the second highlight effect. The system may also animate the highlight effects such as by initially brightening the first highlight effect or other animations that provide a desirable user experience.

In some embodiments the dynamic highlighting system highlights portions of words containing keywords. For example if key is one of the keywords then the system may highlight the first three letters where the word keyboard appears in the search results. The system may adjust the width of the highlighted area to avoid encompassing other letters of the word that are not part of the keyword in the highlighted area.

In some embodiments the dynamic highlighting system coalesces adjacent highlights. For example if a user submits the query column header the system searches for occurrences of the keywords column and header separately but highlights using a single region locations in the search results that contain both words. This can help the user to more quickly identify phrases in the search query that are also found in the search results although it should be noted that the order of the words in the search query does not affect the coalescing described. For example the system would also coalesce occurrences of header column into a single highlighted region for the same query.

In some embodiments the dynamic highlighting system splits highlighting across two different lines when a keyword wraps across the lines. For example some applications automatically divide words with a hyphen across lines when a word occurs at the end of a line and is too long to fit completely on the line. For example an application may divide the word happen into hap on a first line and pen on a subsequent line. If a user searches for happen the system will still highlight the word across the two lines by applying two different highlight regions to the two lines.

In some embodiments the dynamic highlighting system operates for right to left languages. Right to left languages are those like Hebrew that users read from the right side of the page to the left side of the page. The operation of the system is similar for right to left languages and the system applies the same functions described herein e.g. highlighting portions of words coalescing splitting across lines and so forth to such languages.

In some embodiments the dynamic highlighting system may not highlight some keywords that appear frequently. The system may set a length threshold e.g. two letters for the length of words to which the system applies highlighting. For example if the word a is a search keyword the system may not highlight all occurrences of the letter a in the search results to avoid overwhelming the user with highlighting since a is likely to occur frequently.

In some embodiments the dynamic highlighting system uses a standard control for displaying highlighted search results and determining the pixel position of keywords in the displayed results. For example the system may use the Microsoft Rich Edit Control included with Microsoft Windows. The system requests the pixel position of the characters of the keyword from the control. The system also requests information about whether there is whitespace present at the edges of the keyword. For edges adjacent to whitespace the system pads the size of the highlighted area by several pixels. For example the system may use the nine grid element described herein and increase the size of the left or right cells.

In some embodiments the dynamic highlighting system highlights occurrences of keywords within properties of content items in the search results. For example search results that include documents may include document properties such as an author summary title and so forth and the system may highlight identified keywords anywhere within any of the properties not just in a summary of body text of the document that the system displays as part of the search result.

In some embodiments the dynamic highlighting system receives one or more configuration options that modify the operation of the system. The system may receive a configuration option that enables or disables the dynamic search result highlighting described herein. For example an application or operating system employing the system may provide a user configurable option to turn on or off search result highlighting or to define the type of highlighting used e.g. dynamic or static whether the system fades from one highlight effect to another and so forth . The system may also receive configuration options from applications that invoke the system. For example search result highlighting may be inappropriate for some applications that use a common control of which the system is a part and the application may instruct the control not to apply search result highlighting when the application is hosting the system.

From the foregoing it will be appreciated that specific embodiments of the dynamic highlighting system have been described herein for purposes of illustration but that various modifications may be made without deviating from the spirit and scope of the invention. For example application authors can apply the system to many different types of searches for many different types of content items or other searchable items. In addition application authors can apply the system to fields other than search where it is desirable to call attention to some words in a body of text. For example scanners that scan a document for confidential information before a user sends the document via email or applications that have specific context for certain words e.g. Microsoft SmartTags are other examples of applications that may use the system to display a dynamic highlight around words. Accordingly the invention is not limited except as by the appended claims.

