---

title: System and method for managing a print job in a printing system
abstract: There is disclosed a system and method of processing a document corresponding with a printable format in a print path. A browser, communicating with a user interface (having a display) and a network, is used to access a services interface, the services interface including at least one selectable service available by way of the network. A browser activating system, communicating with the browser and a print driver, is used to open the browser to display the at least one selectable service of the services interface on the user interface display. Responsive to selecting the at least one selectable service from the displayed services interface, the at least one selectable service is applied to the document corresponding with the printable format.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08842313&OS=08842313&RS=08842313
owner: Xerox Corporation
number: 08842313
owner_city: Norwalk
owner_country: US
publication_date: 20081030
---
Reference is made to commonly assigned U.S. patent application Ser. No. 12 261 129 filed concurrently herewith entitled by Steven J. Harrington the disclosure of which is incorporated herein.

The disclosed embodiments relate generally to an approach for managing a print job in a networked printing system and more particularly to an approach in which custom services can be added to a print job pursuant to its submission to a printer from a client workstation.

In the area of digital printing and copying there has been a growth in demand for multifunction electronic printing devices MFD . Such devices may assume the form of an arrangement in which a single print engine e.g. xerographic or thermal ink jet print engine is coupled with a plurality of different image input devices or services with such devices being adapted to produce image related information for use by the printer or transmitted over a network. The image related information in one example could have its origin in video facsimile signals microfilm data processing information light scanning platens for full size documents aperture cards and microfiche. MFDs provide a broader range of functionality than traditional single function devices such as dedicated printers copiers and scanners. Because of their network transmission capabilities combined with their functionality it is useful for MFDs to be able to utilize web browsers to access information from the World Wide Web and various document devices present on the LAN to which the MFD is connected.

U.S. Patent Application Publication No. 20080091800 to Sorrentino et al. published on Apr. 17 2008 and entitled Local User Interface Support of Remote Services discloses a number of prior art implementations for accessing web content on a MFD. More particularly Publication No. 20080091800 the pertinent portions of which are incorporated herein by reference discloses a MFD enabling access to both services resident on the MFD and remote services through a user interface that processes digital documents through use of a Web browser. The MFD includes a browser for requesting and viewing external web applications pages on the local user interface of the MFD for remote service s running in the browser and for transmitting system events to remote service browser page s . The MFD also includes a local applications service which controls services resident on the MFD and a local user interface which permits local and remote systems to interrogate and control the MFD. Web services provide application programming interface s capable of utilizing a plurality of web protocols.

Xerox Corporation Xerox and Canon USA Inc. each currently offer a platform permitting the introduction of custom services on the interface panel of an MFD hereinafter referred to as the custom services platform . For example each currently offered custom services platform can be used to offer special scanning or copying services at the MFD. Thus the typical custom services platform includes a copy path. However as understood the focus of these custom services platforms has not been on print path development.

In accordance with one aspect of the disclosed embodiments there is disclosed a print job processing system for use with a document processing system in which one or more document processing components are communicatively coupled with a network. The print job processing system includes a memory for storing a document corresponding with an internal format a print driver communicating with said memory for converting the document corresponding with the internal formal into a document corresponding with a printable format a user interface with a display a browser communicating with said user interface and the network for accessing a services interface the services interface including at least one selectable service available by way of the network a browser activating system communicating with said print driver and said browser for opening said browser to display the at least one selectable service of the services interface on said user interface display and wherein responsive to selecting the at least one selectable service from the displayed services interface the at least one selectable service is applied to the document corresponding with the printable format.

In accordance with another aspect of the disclosed embodiments there is disclosed a method for processing a print job with a document processing system in which one or more document processing components including a client workstation having both a print driver and memory are communicatively coupled with a network. The method includes storing a document corresponding with an internal format in the memory of the client workstation using the print driver to convert the document corresponding with the internal formal into a document corresponding with a printable format accessing a services interface with a browser the services interface including at least one selectable service available by way of the network opening the browser with a browser activating system the browser activating system being disposed in the client workstation responsive to said opening displaying the at least one selectable service selecting the at least one selectable service from the displayed services interface and applying the at least one selectable service to the document corresponding with the printable format.

While for the purposes of explanation the method and system will be described as functioning within a network including various printing and communication devices it will be appreciated by those skilled in the art that accessing remote services on a local user interface through use of a Web browser may be beneficially utilized in any communication environment which requires a secure hard copy of a facsimile confirmation. All such variations and modifications are fully contemplated by the scope of the specification and claims herein.

Various computing environments may incorporate capabilities for accessing remote services on a local user interface through use of a Web browser. The following discussion is intended to provide a brief general description of suitable computing environments in which the method and system may be implemented. Although not required the method and system will be described in the general context of computer executable instructions such as program modules being executed by a single computer. Generally program modules include routines programs objects components data structures etc. that perform particular tasks or implement particular abstract data types. Moreover those skilled in the art will appreciate that the method and system may be practiced with other computer system configurations including hand held devices multi processor systems microprocessor based or programmable consumer electronics networked PCs minicomputers mainframe computers and the like.

The method and system may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communication network. In a distributed computing environment program modules may be located in both local and remote memory storage devices.

Referring to the block diagram illustrates an example embodiment of a system that provides local user interface support for remote services such as accounting packages document repositories billing applications medical record services etc. In other words services that execute on computers external to the MFD that are provided by companies other than Xerox but do not exclude services provided by Xerox. The network environment may also contain various multifunction devices MFDs an application server for hosting remote services and various other devices such as personal computers printer servers printers etc. all connected to network with access to the internet. While for the purposes of brevity of description the method and system are described as utilizing a graphical user interface present on the MFD such access may be accomplished by a user interacting with the MFD user interface and invoking a remote service at the local user interface.

The MFD may be a standalone device or may form part of a network including various printer and copying devices. MFD may be any device capable of scanning image material. The scanned image may be in various formats for example but not limited to PDF portable document format TIFF tag image file format JPEG joint photographics experts group format GIF graphics interchange format or BMP BitMaP . In addition to scanning and transmitting the scanned image via electronic mail MFD may also include functionality for printing copying or transmitting facsimile images. Operation of MFD is controlled from a user interface which enables a user to select the function to be performed as well as enter information required by the device to perform an operation. Typically buttons or a keypad are utilized to enter information and select functionality but a touch screen or any other means known in the art may be utilized. The user interface may be customized to reflect the document processing needs of the operator or the operator s organization.

Additionally third parties with preexisting solutions or third parties that can customize existing applications may be contacted through the interface. These remote service solutions may be in the form of software and hardware solutions to extend the base functionality of the MFD. The remote services solutions may be produced for specific customers or produced as generic products for any interested party. Application server hosts the web applications that may appear on the local user interface of the MFD. The web applications hosted on the server may be registered with several MFDs and accessed via the local user interfaces of those MFDs.

All these main components are coupled together via network . The system and method herein are not limited to a particular type of network system. Typical network interfaces include general purpose systems such as POTS plain old telephone systems and ISDN Integrated Services Digital Network as well as special purpose systems such as a LAN Local Area Network or a WAN Wide Area Network . Such networking environments are commonplace in offices enterprise wide computer networks intranets and the Internet. Those skilled in the art will appreciate that the principles of the system and method described herein can be applied to virtually any network system without departing from the scope of the claims and specification.

Further structural and functional aspects of the exemplary system of are described and or illustrated in U.S. Patent Application Publication No. 20080091800 to Sorrentino et al.

Turning now to one of the concepts underlying the custom services platform is to provide an approach in which at least one custom service application can be added to an MFD . To do this the MFD UI display is actually driven by a web browser and the UI pages displayed are actually web pages. The custom service platform allows third parties to register a URL for a welcome page of a custom service. This page then becomes available through the MFD s UI. Once the welcome page for the custom service is displayed it can interact with servlets such as servlet on web servers such as web server just as any other browser based application. HTML forms on the web pages can gather user input and submit it to the servlets. Servlets can carry out computations and can interact with the MFD either through the UI pages it generates or by submission of files such as print jobs. Software supporting the custom services platform may include a set of widgets and style sheets tailored to the device UI. Each device loads its own version of these components so that if the UI is constructed from these components it will be portable across devices even though their actual displays and buttons may change.

Referring still to the custom services platform may also provide some web services that can be called by JavaScript running on the browser or by the servlet . In one contemplated approach the servlet is communicatively associated with a list of services or application. An example of a web service function may include the initiation of a scan. With this an application could for instance imitate a scan provide some image processing on the scanned image and then submit it to a printer in order to create a custom scanning feature. For a scanning application like this one might separate the interactive gathering of information at the UI from the image processing of the scanned image. One might in fact have a service that watches for scanned files to appear at for instance file storage in order to process and print them. Thus there may be two services running one a web service to handle the interaction with the user and the file watching service to watch for and to process files that are generated by scanning. Additionally one or more custom services labeled with the numeral in may share files with file watching service .

While the custom service platform of allows the introduction of custom services initiated from the MFD UI it does not address custom services that might be applied to print files submitted from a user s workstation. At first blush the application of custom services to print files may seem fairly straightforward. Following the teaching above instead of using the web browser to drive the MFD UI the web browser on the user s workstation would be used to drive the web browser. However the browser invocation above is not suitably integrated into the print submission process. Print submission occurs in two steps leading to at least two points where the custom services interface could be inserted.

Referring to when a print operation is requested in a document application a call is made to the print driver . The print driver converts a document provided in one example from a document application from its internal format to a document format suitable for printing such as PostScript or PCL . The print driver may also specify job parameters that a printer can use such as paper size or orientation . The converted document may then be sent to a printer which may be part of MFD or print server not shown . This is the task of the port monitor also known as a print monitor .

Referring still to a client workstation is shown communicating with various components of by way of the network . One approach for including custom services in a print path would be to include a custom services button in a print driver . As should be understood a custom service as contemplated herein may include not only a web service but any other service on the network . Responsive to activation of this button a client web browser is opened for displaying a custom services interface. When the browser is closed a return to the print driver for completing the print submission may occur.

In another approach a redirecting port monitor may be used to include custom services in the print path. In this second approach a special pseudo printer is registered that includes the print driver without the button and a redirecting port monitor available for example the Redmon open source redirecting monitor software available under a GNU general public license . The print driver may convert a print file and hand it off to the port monitor but the port monitor instead of sending the file to a printer may then call a custom services display application . The application in turn may open the browser call a custom service selection web page from the web server and perhaps copy the print file to a desired storage location on file storage .

In a fleet of office machines some devices or components may possess large UI display panels while others may possess small ones some may have color displays while others may have monotone. In the environment of the custom services platform a mechanism would be useful for adjusting UI layout and style to provide compliance among the various display devices available on different products. With the exemplary platform of this mechanism may be implemented by loading two files directly from the MFD. These are a JavaScript file that defines the widgets and a style sheet that defines the styles. When extending the process to print submission this mechanism has been found unsuitable because the browser displaying the UI is not on the user s workstation and the user does not have local versions of the widgets and styles for the client workstation . One approach found to work in print submission includes defining generic widget script and style sheet files and to store copies of them on the web possibly with web server such that they can be referenced by the custom services interface. The custom services UI server pages may then be adapted to include tests that would detect the loading of local copies of the widget and style sheet files. Thus when a service is requested from an MFD the commands to load local versions of the widget definitions and styles would proceed as normal and when it is discovered with the test that they have been loaded no further loading is required. However when the service is accessed from the browser the attempt to load local files would fail because the workstation doesn t have them. The test for their presence would detect this failure and in response would load copies of the generic versions on the client workstation from the web server .

When using the custom services platform of it is desirable to register custom services with each device that will present them. Once registered a given device UI will provide a list of custom services or all services for selection and invocation by the user. For services invoked from the printing process the invoking device is the user s workstation which does not necessarily have a registration or service selection mechanism. Accordingly a new service selection service that is available from the workstation is created. This service is entered as the default URL when the user s web browser is called. Thus when the redirecting port monitor opens a browser window the first page displayed on a UI display shows the selection of available services. When a selection is made the selection service transfers control to the desired choice. Instead of or in addition to registering a new service with each device where it will be presented the new services can be added to registered with the service selection service. Note it is possible to have multiple instances of the service selection service each with its own particular set of custom service choices and each available via its own URL. The set of choices presented to the user via the print path would then depend upon which instance of the service selection service was set up as the initial page for the web browser .

For the custom services platform of when a service completes a web service call can be made to the MFD to return control to normal device operation. This causes the custom service UI page to be replaced by one of the standard device UI pages and interaction with the custom service is terminated. When the interaction is with the browser on the user s workstation however there is no web service to terminate the interaction and there is no standard device UI to return to. When operating relative to the print path embodiment it would be desirable to close the web browser and thereby indicate to the custom services display application that the user interaction is complete and the print file processing can proceed. At one time JavaScript code could automatically close the browser window but as understood that was later seen as inappropriate. The Firefox browser appears to only allow a JavaScript routing to close a window that it has opened and Internet Explorer requires user confirmation for closing. An approach of the disclosed embodiments is to display a web page with a message to the user indicating that the user should close the window to proceed. This serves to complete the custom service interaction.

In constructing an application suitable for use with custom services platforms of for either copying or printing the issue of dealing with different file formats that can occur from the copy and print paths may arise. The copy path produces a scanned image in a raster image format such as TIFF or possibly a raster image within a document format such as PDF. The print path typically produces a document in PostScript or PCL format depending on the print driver. The acceptability of format depends upon the actual custom service but as a general rule for services that apply to both printing and copying the print format can be first decomposed to a raster by software such as the open source GhostScript rasterizer and then handled in the same way as the scanned rasters of the copying case. Since document file formats are typically self identifying the custom service platform of can be provided with the capacity to determine from the document itself whether such conversions are needed.

There are a couple of places where the logical behavior of the custom services platform depends upon whether the print path or copy path is being processed. Referring to one example occurs when exiting from a service interaction. In the case of the copy path a web service call may be made to return control to the MFD whereas in the case of the print path the web browser may be closed. A second place where the behavior differs is in the initiation of the document acquisition. In the copy case the custom service must send a web service call to the MFD to initiate scanning. In the case of printing the handling of the print file may be conveyed back to the workstation . The two cases may be distinguished by adding a parameter to the URL when the service is called from the custom services display application on the user s workstation . This parameter is thereby passed to the service selection service and then on to a selected service s . The presence of this parameter indicates that the call came from the print path its absence indicates that the service was initiated from the MFD as a copy function. The parameter used may comprise a unique print job identifier PrintID that can be used for coordination between the custom service and the custom services display application as described below.

When a custom service initiates scanning at the MFD it may specify a scan template. One of the scanning parameters in the template may include the destination of the scanned image file. For the print path a mechanism may be provided to permit a custom service to apprise the custom service display application where it can expect to find a given document file to be printed. In one example this can be achieved with a tracking mechanism such as a cookie mechanism. While the scan case may execute JavaScript code to call the scanning web service the print case may execute JavaScript code to write a Web cookie. The PrintID parameter described above may then be used to identify the cookie as belonging to this particular custom service interaction. The cookie may be given a short lifetime since it will only be used for this interaction instance. The data in the cookie includes the print file destination desired by the custom service and the expected naming pattern for the file. Since he custom service display application generated the PrintID the custom service display application knows what to watch for in the cookie file. This application can watch for the desired cookie to appear and when it does so it can then begin transfer of the print file. Note the cookie might also express other options such as indicating that the print file is not needed and should be discarded. The cookie could also indicate that other processing should be done by the user s workstation. The cookie might also indicate other information gathered from the user during the web browser interaction such as which printer or printers should be the final destination of the document.

Alternatively the location of the document to be printed and or other information may be provided via a web service associated with the web server of or . A custom service can deposit the information to be conveyed such as where it would expect to find a print file in a temporary storage element such as a file. The web service could then be used to examine the stored information and deliver it to a querying entity. The custom service display application can query the web service for the desired print file storage location and proceed to store the file at that location. As in the cookie case other information such as print file handling additional processing by the workstation or final printer destination can also be transferred to the custom service display application by means of the web service. An identifier such as the PrintID can be used by the web service to match the request to a particular information deposit. This approach may be preferred over the cookie approach because it does not depend upon particular browser mechanisms for storage of cookies.

When the MFD scans a document it may actually produce two files. One file contains the scanned document digital image and the second file contains metadata about the scan. Since some of this metadata is sometimes used by custom services it is desirable to also produce a metadata file for the printing case. The metadata file for the printing case may in some instances only contain the subset of values that make sense for the printing process and not all of the items that are present for the scanning case. The metadata file for the printing case might also be extended to include metadata that is only appropriate to printing.

Referring again to it is contemplated that a print job ready for printing with the printer could be communicated to the printer or print server from the file storage via file watching service . In a first example a print job including image data and metadata files would be buffered or stored at the file watching service for eventual delivery to the printer . In a second example a document in a printable format for application of a selectable custom service thereto could be stored at the file watching service in anticipation of further processing in the custom services platform. In the second example the file watching service would forward the document in the printable format to the custom service. After performing its processing the custom service could then forward the processed print job to the printer. In a third example the file watching service could forward the document in the printable format to the custom service and receive the processed print job back from the custom service after the custom service has processed it. The file watching service would then forward the processed print job to the printer. As will be appreciated by those skilled in the art the functionality of the file watching service could be integrated with any one or more of the custom services. In this way a print job could be transmitted directly from a custom service with file watching capability to a printer or print server.

The claims as originally presented and as possibly amended encompass variations alternatives modifications improvements equivalents and substantial equivalents of the embodiments and teachings disclosed herein including those that are presently unforeseen or unappreciated and that for example may arise from applicants patentees and others.

It will be appreciated that various of the above disclosed and other features and functions or alternatives thereof may be desirably combined into many other different systems or applications. Also that various presently unforeseen or unanticipated alternatives modifications variations or improvements therein may be subsequently made by those skilled in the art which are also intended to be encompassed by the following claims. Unless specifically recited in a claim steps or components of claims should not be implied or imported from the specification or any other claims as to any particular order number position size shape angle color or material.

