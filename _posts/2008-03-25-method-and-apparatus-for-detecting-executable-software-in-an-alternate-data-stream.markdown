---

title: Method and apparatus for detecting executable software in an alternate data stream
abstract: A method and apparatus of detecting executable software in alternate data streams to secure operation of a computer comprises processing information regarding a file requested for execution and determining an alternate data stream associated with the file, wherein the alternate data stream comprises executable software.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08141153&OS=08141153&RS=08141153
owner: Symantec Corporation
number: 08141153
owner_city: Mountain View
owner_country: US
publication_date: 20080325
---
Embodiments of the present invention generally relate to computer system security and more particularly to a method and apparatus for detecting executable software in an alternate data stream.

Today a computer has become a basic necessity and is used in many organizations such as government agencies and businesses for communication research productivity and the like. As the usage of the computer increases threats to the stability and performance of the computer also increases and hackers and malware being amongst the predominant threats.

Hackers aim to disrupt the operations of and exert control over a computer. A hacker may use malware i.e. malicious software code to achieve such aim for example with an intention of stealing confidential data corrupting data or the computer system among others. In certain cases malware is transmitted to the computer by the hacker and as the malware is executed the programs or data or the computer may be damaged. As a result the computer ceases to operate properly and users experience a loss in productivity.

Hackers exploit various weaknesses to invade and control the computer. For example the fact that alternate data streams are not displayed on browsing utilities is exploited to surreptitiously invade and control computers. Although the use of alternate data streams augment the functionality of the file system unfortunately hackers hide rootkits and malware in the alternate data streams to avoid detection. For example hackers can couple a 5 megabyte MB malware as an alternate data stream to a 10 kilobyte KB executable file. When a user tries to view the directory only the 10 KB executable file is visible and the alternate data stream comprising the 5 MB malware is not displayed. As such the user is not aware that malware has infected the computer.

This is due to the fact that the MICROSOFT WINDOWS operating system has the ability to fork file data into existing files alternate data streams without affecting their functionality size or display to traditional file browsing utilities like the DOS command DIR or Windows Explorer. Generally the alternate data streams are used by variety of computer programs including the native MICROSOFT WINDOWS operating system to store file system information such as file or directory attributes and metadata e.g. non resident attribute information . Such computer programs may read data from and write data to the alternate data streams. Some file systems such as NTFS implement both primary and alternate data streams. All data for a file is stored on the primary data stream but by using the syntax file stream an alternate data stream is coupled to the file. Consequently when computer programs read or execute data from the file the computer programs also read or execute the contents of the alternate data stream. Additionally a computer running the New Technology File System NTFS may use alternate data streams to be compatible with the APPLE MAC operating system and MAC file systems.

Based on data submitted to the security subscription service only malicious programs use alternate data streams to execute content e.g. another malicious program . Hence if any application requests that the executable file be accessed and run e.g. using a file open for execute request the malware is executed from the alternate data stream. As a result of execution of the malware the computer will cease to operate properly and the user may experience a loss in productivity a loss in data or any other form of damage to the computer system.

According to one of the prevalent methods alternative data stream based malware is detected using signatures e.g. a piece of the malicious code that indicates a particular group of malware . Such a method relies upon data submitted by subscribers to a security service to develop such signatures. Hence such a method creates signatures only after the hacker has already used alternate data stream based malware to attack the computer. As a result current signature based malware detection technology is limited to detecting malware for which signatures have already been created and do not detect malware that do not have signatures. Further signature based malware detection is increasingly becoming difficult and costly because hackers adapt the malicious code very quickly in response to the latest signatures.

Accordingly there is a need in the art for a method and apparatus for detecting executable software in the alternate data stream before execution where malware is an example of executable software.

Embodiments of the present invention comprise a method and an apparatus for detecting malware to secure operation of a computer. In one embodiment a method of detecting malware to secure operation of a computer comprises processing information regarding a file requested for execution and determining an alternate data stream associated with the file wherein the alternate data stream comprises executable software.

The hacker computer is a computing device that is used to attack other computer systems such as the client . The hacker computer desires to exert control over the client with an intention to damage or interfere with the operation of the client using email and web based threats. For example the hacker computer may attack the client through an email attachment. A virus Trojan or malware may be launched when the email is opened by a user of the client . As another example the hacker may be a compromised web site that attacks the client when the user browses the hacker computer . If successful the client ceases to operate properly. In one embodiment the hacker computer creates and transmits a malware to the client . The malware is any software package that comprises malicious code designed to degrade the performance of the client and allow the hacker computer to exert control over the client .

The client is any type of computing device e.g. laptop desktop Personal Desk Assistant PDA mobile phone and the like such as those generally known in the art. The client includes a central processing unit CPU various support circuits and a memory . The CPU may comprise one or more commercially available microprocessors or microcontrollers that facilitate data processing and storage. The support circuits facilitate the operation of the CPU and comprise at least one of clock circuits power supplies cache input output circuits and the like. The memory comprises at least one of read only memory ROM random access memory RAM disk drive storage optical storage removable storage and the like. The memory includes various software packages such as a security module a driver . The memory further includes various data such as file system information .

The server includes a central processing unit CPU various support circuits and a memory . The CPU may comprise one or more commercially available microprocessors or microcontrollers that facilitate data processing and storage. The support circuits facilitate the operation of the CPU and comprise at least one of clock circuits power supplies cache input output circuits and the like. The memory comprises at least one of read only memory ROM random access memory RAM disk drive storage optical storage removable storage and the like. The memory includes various software packages such as a monitor . The memory further includes various data such user submitted information . The user submitted information includes information regarding malware that has been detected on various computers such as the client . The user submitted information indicates that if a first program attempts to execute a second program from an alternate data stream both programs are malicious and should be flagged and or removed. Generally alternate data streams are rarely used by non operating system software.

The network comprises a communication system that connects computers to one another by wire cable fiber optic and or wireless link facilitated by various types of well known network elements such as hubs switches routers and the like. The network may employ various well known protocols to communicate information amongst the network resources. For example the network may be a part of the internet or intranet using various communications infrastructure such as Ethernet WiFi WiMax General Packet Radio Service GPRS and the like.

The file system information is used by an operating system to manage various resources associated with the client . The file system information stores various data pertaining to one or more file systems used by the operating system to organize and retrieve files and directories. The file system information further stores various attributes related to such files and directories e.g. execution access rights filename owner modified time among others . The file system information includes a file and an alternate data stream . The file may be requested for execution by various applications e.g. software packages such as word processing applications business applications or financial applications and the like . The alternate data stream is also portion of the file system information and coupled to the file . The alternate data stream is typically used for storing metadata or and other attribute information for the file by the operating system of the client . The alternate data stream may include executable software such as a malware . The malware is malicious code that is transmitted to the client and hides in the alternate data stream awaiting execution.

By the way of example and not as a limitation the hacker computer may open a connection e.g. a socket on the client through one or more web based or email based techniques which allows the malware to migrate to the client and stores the malware e.g. mal.exe in the file system information as the alternate data stream . The hacker computer associates the alternate data stream with the file using the malware . The file may be an executable file e.g. file1.exe . For example in NTFS the correct syntax of a filename for file1.exe with mal.exe attached as an alternate data stream is file1.exe mal.exe. The alternate data stream will fork with the file e.g. file1.exe because the operating system considers mal.exe to simply be more data associated with file1.exe. As a result if file1.exe is opened and executed by the malware then mal.exe or the malware is also executed. Further the malware remains undetected or hidden from recognition because current browsing utilities do not display the alternate data stream and or the operating system does not prevent or otherwise restrict the ability to open and execute a program from the alternate data stream .

The driver is a software package that couples applications e.g. word processing application financial application among others which can execute files with the file system information . In one or more embodiments the driver receives a notification that the file is requested to be open for execute by a program e.g. the malware . The driver determines if the file is permitted to be executed e.g. execute right . In one embodiment the driver parses the filename associated with the file . If the filename includes the syntax for the alternate data stream e.g. file1.exe mal.exe then there is a strong likelihood that the program requesting the execution of the file is malicious. Furthermore any program being executed from the alternate data stream is also malicious. Accordingly the malware is attempting to execute the malware from the alternate data stream . In one or more embodiments the driver identifies both the first malware and the second malware as malicious because no legitimate program should be executing another program from the alternate data stream unless both programs are malware.

In another embodiment the driver monitors one or more events e.g. process or section creation events Application Programming Interface API calls and the like associated with the file system information and the operating system of the client . In general a section creation event occurs when a file is mapped into the memory and a process is created after it is opened for execution. In operation the malware requests that the operating system open the file for execution in order to execute the malware from the alternate data stream . At this point a process is being created for the file and the alternate data stream . In one embodiment the driver parses the filename for the file to determine whether the filename comprises the syntax for alternate data streams. If the driver identifies the alternate data stream e.g. a process created for the alternate data stream then the driver prevents the execution and or removes the malware and the malware from the client . Alternatively the malware may use the API function CreateProcess to execute the malware from the alternate data stream . In this alternate embodiment the driver intercepts the CreateProcess function call for the file and determines that a process is being created for the alternate data stream . For example the driver examines the filename for the file to determine if the filename comprises the syntax for alternate data streams.

The security module may be a security application that forms a portion of a security subscription service for securing the client e.g. SYMANTEC NORTON products . The security module may perform various functions once the driver has identified the first malware and the second malware . In one or more embodiments the security module may terminate and remove the first malware and the second malware from the client . In another embodiment the security module may communicate information regarding the first malware and the second malware to the server .

In one or more embodiments the monitor processes information regarding the first malware and or the second malware . The information is communicated by the security module via network for further evaluation. In one or more embodiments the information processed by the monitor is stored as the user submitted information .

The method starts at step and proceeds to step at which a driver e.g. the driver of processes a request for execution of a file e.g. the file of . At step a determination is made as to whether an alternate data stream e.g. the alternate data stream of is coupled to the file. If it is determined that the file is coupled to the alternate data stream option YES then the method proceeds to step . If at step it is determined that the file is not coupled to the alternate data stream option NO then the method proceeds to step . The step is discussed further with respect to .

At step the driver identifies executable software in the alternate data stream e.g. the malware and the malware of . At step the executable software is removed by a security module e.g. the security module of . At step information regarding the executable software is submitted to a monitor e.g. the monitor of on a server e.g. the server of for further evaluation. The method ends at step .

At step the file open for execute request is analyzed. At step a determination is made as to whether the file has an execute right. If the file is determined to have an execute right option YES then the method proceeds to step . If at step it is determined that the file does not have execute rights option NO then the method proceeds to step .

At step a filename associated with the file is parsed. At step a determination is made as to whether the filename includes the syntax for the alternate data stream. If it is determined that the filename has the syntax for the alternate data stream option YES then the method proceeds to the step . In one embodiment a driver determines that the filename includes for the file includes a colon and the alternate data stream following the file.

If at step it is determined that the filename does not include the syntax for the alternate data stream option NO then the method proceeds to the step . At step the file open for execute request is relayed to the operating system. The operating system opens the file for execute. The method ends at step .

While the foregoing is directed to embodiments of the present invention other and further embodiments of the invention may be devised without departing from the basic scope thereof and the scope thereof is determined by the claims that follow.

