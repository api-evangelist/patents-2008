---

title: Integrating telephony applications and television broadcasts on a multimedia device
abstract: Systems and methods for integrating telephony and multimedia content include concurrently displaying a graphical user interface and a video channel of a media broadcast on a screen of a multimedia device. The graphical user interface has a graphical element by which an end-user of the multimedia device can select execution of an interactive application that invokes a telephony service. In response to a selection of the interactive application by the end-user, a message is sent to a networked resource requesting the telephony service. The requested telephony service can be to ignore, reject, or forward the incoming telephone call. Alternatively, the requested telephony service can be a click-to-call. Other interactive applications can request access to an address book, acquire presence information, or request an RSS (Really Simple Syndication) feed.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09407451&OS=09407451&RS=09407451
owner: GENBAND US LLC
number: 09407451
owner_city: Plano
owner_country: US
publication_date: 20081209
---
This utility application claims the benefit of U.S. Provisional Patent Application No. 61 053 782 filed on May 16 2008 titled System and Method Suitable for Providing Communication Capabilities to a Multimedia Device the entirety of which application is incorporated by reference herein.

The invention relates generally to multimedia devices. More specifically the invention relates to a system and method for integrating communication capabilities content and television on a multimedia device.

Multimedia devices are useful for presenting non interactive content to end users in a variety of forms such as text audio animation and video. For example television viewers watch television broadcasts which consist of a combination of audio and video signals. To control the functionality of their television sets the viewers traditionally use their external remote control devices to manipulate the power volume display color and non interactive content. The television set however is an example of a multimedia device that traditionally does not support two way interactive communications between its end user viewer and other systems or devices.

To bring interactive communications to such multimedia devices industry has devised various proprietary server client architecture solutions. One example solution is the set top box. In general a set top box is electronic equipment that receives a television broadcast over a network e.g. a cable network and from the television signals produces audio and video output for the television set. The set top box also brings interactive capabilities to the television set that is the television viewer is able to key in certain input using for example a remote control device that prompts the set top box to communicate with a system or device on the network.

Traditionally however cable operators employed proprietary software in their set top boxes referred to as middleware to perform the interactive communication between the network service and the multimedia device. This proprietary middleware is as a layer of software that executes on top of the operating system running on the set top box. Interactive applications running on the set top box were similarly proprietary in that they interfaced specifically with the proprietary middleware.

The proprietary nature of the set top box presented various problems that slowed innovation in the industry. As an example interactive applications written for one vendor could not be reused in set top boxes of other vendors. Interactive applications thus required reinventing and redeveloping for each given set top box vendor. The process of adding new communication applications to the cable industry hence became particularly cumbersome.

To provide an alternative to proprietary middleware and thus to encourage innovation members of the cable television industry developed the OpenCable Platform specification also known as the OpenCable Application Platform or OCAP. The OpenCable Platform specification defines a standardized i.e. open Java based middleware software layer. Using this open middleware application developers are able to produce interactive services and applications that can run on a variety of digital set top boxes and cable ready devices. This interoperability enables manufacturers to build and sell retail digital devices that are capable of supporting all cable services currently being delivered to leased set top boxes and future cable services offered by the cable operator without the need of a set top box.

In one aspect the invention features a method for integrating telephony and multimedia content comprising concurrently displaying on a screen of a multimedia device a video channel of a media broadcast and a graphical user interface having a graphical element by which an end user of the multimedia device can select execution of an interactive application that invokes a telephony service and sending in response to a selection of the interactive application by the end user a message to a networked resource requesting the telephony service.

In another aspect the invention features a system for integrating telephony and multimedia services. The system includes a server component and a client component. The server component is configured to communicate with a networked resource in order to provide a telephony service to client components that request the telephony service. The client component is configured to display concurrently on a screen of a multimedia device a video channel of a media broadcast and a graphical user interface having a graphical element by which an end user of the multimedia device can select execution of an interactive application that invokes the telephony service. The client component is also configured to send in response to a selection of the interactive application by the end user a message to the server component requesting the telephony service.

In still another aspect the invention features a receiver for integrating telephony and multimedia services comprising memory storing middleware with an application program interface API for providing interactive services at a multimedia device and storing an interactive application that calls the API of the middleware and invokes a request for a telephony service when executed. A video output controller presents a video channel of a media broadcast and a graphical user interface to a multimedia device for concurrent display on a screen of the multimedia device. The graphical user interface has a graphical element by which an end user of the multimedia device can select execution of an interactive application that invokes the telephony service. A processor is programmed to execute the interactive application in response to a selection of the interactive application by the end user and to send a message to a server system requesting the telephony service.

Systems described herein integrate communication and content capabilities into television TV environments and can provide two way interactive digital cable services over a service provider network e.g. a cable video network . Examples of such interactive services include but are not limited to integrated telephony services program guides advertisements games chat communications web browsing and t commerce i.e. television commerce . A system includes at least one portable application layered on an open middleware implementation that provides bidirectional interactive communication between an end user of a multimedia device and a networked resources device or system collectively networked resource . The interactive communication may be achieved between any kind of multimedia device and networked resource including content portals and social networks using for example SIP Session Initiation Protocol SOA Service Oriented Architecture web services Web 2.0 technologies and proprietary interfaces which in some cases are programming language driven e.g. .NET Java PHP Personal Home Page or Python .

The client component is in communication with the multimedia device . The client component includes a plurality of portable communication applications that run on open middleware software. Such communication applications produce interactive communication content in addition to non interactive content received from traditional sources on the multimedia device which usually lacks bi directional telephony related communication capabilities. Examples of such multimedia devices include but are not limited to television sets laptop computers personal computers digital video recorders DVRs personal video recorders PVRs and mobile devices such as PDAs personal digital assistants . Because such communication applications run on open middleware they can support multimedia devices and client components across different vendors. Although shown separately in some embodiments the client component can be part of the multimedia device e.g. CableCARD technology deployed in a DVR . In addition a user of the multimedia device may have access to one or more telephones .

In one embodiment the multimedia device is a television set and the client component is part of a digital set top box STB . The STB receives a television broadcast over for example a terrestrial cable or satellite link which includes television signals for a plurality of channels which the STB demodulates decrypts decodes and provides as audio and video for display on the screen of the television set. The STB can also combine internally generated graphics with the one or more video channels to be displayed on the television screen. The generated graphics typically include information such as channel number a programming guide program descriptions and programming time slot. The generated graphics can overlay or appear alongside of the video presented on the screen.

The networked resources include but are not limited to voice over IP VOIP servers SIP Session Initiation Protocol servers the PSTN public switched telephone network IP PBX Internet Protocol Private Branch Exchange Instant Messaging IM servers Mobile devices RSS Really Simple Syndication feed sources Presence servers Web servers Multimedia Communication Servers MCS and REpresentational State Transfer REST servers.

In brief overview an end user of the multimedia device can for example establish caller identification or call disposition accept deny reject telephonic communications with another party by submitting a service request through a graphics user interface GUI displayed on the screen of the multimedia device . The client component receives the service request and communicates with the server component to acquire the desired service. The server component subsequently communicates with the appropriate networked resource which takes the appropriate action to accomplish the requested service functionality. The server component interfaces with the networked resource using for example SIP SOA Service Oriented Architecture web services and Web 2.0 technologies.

The client component includes one or more Xlet applications XA and middleware . In general an Xlet application is a software component designed to support digital television. Each Xlet application executes within the context of another program and performs a specific function. Examples of Xlet applications include but are not limited to displaying a caller ID rejecting ignoring and forwarding incoming telephone calls getting an RSS feed performing a click to call making calls accessing an address book acquiring presence information about contacts and accessing and displaying a photo taken from the Web. The server system includes a corresponding application service for supporting each Xlet application of the client component .

The middleware includes an application program interface API for providing interactive services at the multimedia device. In general the middleware enables the Xlet applications that call this API to render interactive communication content in addition to non interactive content from traditional sources on the multimedia device . In one embodiment the middleware operates in accordance with the OpenCable Application Platform OCAP standard developed by Cable Television Laboratories Inc. of Louisville Colo. For this embodiment the server system and its application services and the receiver and its Xlet applications are also OCAP compliant.

The server system is in communication with various networked resources in the network . For example as shown in the server system is in communication with a SIP server and an MCS server through the SIP messaging and with an RSS server and a click to call CTC server through Web 2.0 based messaging.

Upon start up the server system registers with the SIP server . When the receiver starts the receiver establishes the socket connection with the server system . At the receiver implementation of the socket connection includes detecting a server connection and server disconnection and automatically reconnecting in the event of a disconnection. Conversely at the server system functionality for managing the socket connection includes detecting a connection and disconnection with the receiver and automatically establishing reconnection in the event of disconnection. After the socket connection is established the server system passes a default callee to the receiver .

Also on start up the receiver sends to the server system the telephone number of the telephone to be associated with the multimedia device . The telephone is SimRing enabled. The server system registers the telephone number of the SimRing enabled telephone with the SIP server .

Through the socket connection the server system and receiver exchange messages constructed in accordance with a messaging protocol. Each message in the protocol whether originating from the server system or from the receiver is a string text message that includes a command accompanied by zero one or two parameters and optionally data. Table 1 below provides an example list of the messages in the protocol. It is to be understood that the protocol can have fewer or more messages than those shown depending upon the types of applications implemented by the system .

The server system is in communication with various SIP enabled networked resources e.g. SIP server MCS through the SIP interface and in communication with various non SIP enabled networked resources e.g. REST server RSS through the HTTP interface . The SIP agent of the server system operates primarily as a SIP server that receives transmits SIP request messages from to a SIP server e.g. MCS SIP server and responds to such requests with SIP response messages. The SIP agent of the server system also operates as a SIP client for example when it sends a REGISTER request message to the SIP server e.g. MCS at the beginning of a process. The server system also has SimRing capability for sending SimRing commands to SimRing enabled telephones associated with the server system . In this example embodiment the application services include Caller ID Ignore Call Reject Call Forward Call Answer Call Presence SMS Click to call CTC RSS Call Logs Address Book AB and Photo album. The number and types of application services is illustrative in general any number and type of SIP HTTP and SOAP based services can be developed and implemented at the server component for access by the client component .

The client component includes TV channels unbounded Xlet applications a secure socket interface and OCAP compliant middleware . An unbounded application continues to run after a user changes a TV channel that is the execution of such an application is not coupled to a particular TV channel. The socket interface of the client component is in communication with the socket interface and the socket based HTTP interface of the server component . In addition to supporting multiple TV channels and unbounded Xlet applications other capabilities of the client component include updating and displaying dynamic information and TV channel information presenting graphical buttons for user actions displaying an information banner and displaying RSS feeds with scrolling capability on the screen of the multimedia device .

In one embodiment of the receiver the unbounded Xlet applications include interactive applications for dynamically displaying Caller ID for disposing of an incoming call for establishing a call through a click to call process for acquiring an RSS feed for accessing an address book for determining the presence of contacts in the address book. For each such application the server system has a corresponding application service that supports the execution of a given interactive application . The click to call application service can be designed to use either the SIP interface or the HTTP interface in order to communicate with a networked resource .

Each of the application activation buttons corresponds to an unbounded application that the viewer can initiate using the remote controller . The user can use the four arrow keys to navigate among the buttons . The SELECT key can serve to invoke an action the SETTINGS key to enter information and the EXIT key to save and set a newly inputted telephone number. In addition the MENU key can operate to toggle the main GUI i.e. information banner buttons area for scrolling text between visible and invisible.

As illustrative examples the button corresponds to the click to call application button corresponds to an ignore call application button corresponds to a reject call application button corresponds to a forward call application button corresponds to acquiring an RSS feed and button corresponds to accessing an address book. It is to be understood that the practice of the invention can involve fewer or more buttons than those shown. For forwarding a call and click to call a second level of buttons appear that allow the viewer to assign the forwarding number the caller number and the callee number with default or new numbers.

Along the bottom of the screen the client component can provide an RSS scroll area for displaying RSS feed information obtained from an RSS source. In one embodiment the RSS feed information scrolls as a string of text information from right to left across the screen. Depending upon the particular application activated the client component can use other areas of the television screen to display information for example caller and callee telephone numbers. The displays produced by the client component overlays the video content of the TV channels . Typically the screen presents the video content without any overlying displays i.e. the information banner and buttons are invisible . Overlaid displays appear when specifically activated by the viewer through the remote controller or upon the occurrence of certain events that trigger a display for example an incoming telephone call.

The tuner receives the video and audio signals of the media broadcast and delivers them to the processor for processing. The video output controller controls the video signal to be outputted to the screen of the multimedia device. The command receiver receives user keyed in commands from the remote controller and forwards the commands to the processor . Based on the particular command forwarded from the command receiver the processor selects and executes one or more of the interactive applications and depending upon the operation of the interactive application communicates with the video output controller to update the graphics on the display screen accordingly.

Through the display of the Caller ID a television viewer receives notification of an incoming call. The Caller ID and name of the caller if available appear within the information banner on the screen . If the information banner is currently invisible at the time of the incoming call the Caller ID and name abruptly appear. In one embodiment a picture image or video of the caller also appears if the caller with the image or video is listed within the address book described below of the viewer. The server system passes the image to the receiver through its HTTP interface .

To handle incoming calls the server system includes a SIP agent that receives an INVITE request message from a SIP server e.g. MCS . Encapsulated within the request message is the caller information such as Caller ID and name. The SIP agent extracts the caller information and passes it to the receiver through the socket connection using the CID command Table 1 to pass the information.

The call disposition applications enable the viewer to respond to the incoming call in one of a plurality of ways the viewer can ignore the call reject the call or forward the call to another telephone number. Using the remote controller the television viewer selects the GUI button displayed on the television screen corresponding to the desired action. In the case of forwarding a call the viewer can use the remote controller to assign forwarding number i.e. with a default number or a specific new number .

In this example the user of the multimedia device chooses to ignore the call and using the keys of the remote controller activates the particular button within the GUI displayed on the television screen . An ignore call command Table 1 passes from the STB to the socket interface of the server system . Parameters passed with the ignore command include the caller ID and optionally a call ID. The SIP agent receives the command from the socket interface sends a 487 reply to the SIP server and through the socket interface tells the STB that the incoming telephone call has been ignored. The STB acknowledges the communication from the server system .

In addition the SIP server replies to the server system with a cancel command which the server system acknowledges . The server system also sends an instruction to the telephone to cause it to stop ringing.

In this example the end user of the multimedia device chooses to reject the call and using the keys of the remote controller activates the particular button of the GUI displayed on the television screen . A reject call command passes from the STB to the socket interface of the server system . The parameters accompanying the reject command include the caller ID. The SIP agent acquires the reject call command from the socket interface and in response to the command sends a 603 command to the SIP server . In addition the SIP agent communicating through the socket interface tells the STB that the incoming telephone call has been rejected using a reject command . The STB acknowledges the communication from the server system . Further the SIP server replies to the server system with a cancel command which the server system acknowledges . The server system also sends a message to the telephone to cause it to stop ringing.

In this example the user of the multimedia device chooses to forward the call to the second telephone . For instance the second telephone may be a cell phone that is more conveniently accessible to the user than the ringing telephone . To forward the incoming call the user activates the particular button within the GUI displayed on the screen . The GUI prompts the end user to supply the telephone number to which the call is being forwarded. By way of the remote controller the user can select a default telephone number or enter a new telephone number. After the selection of the forwarding telephone number the STB sends a forward call command Table 1 to the socket interface of the server system . The current called telephone number and the forwarding telephone number are parameters sent with the forward call command. In response to the forward call command and parameters the server system runs the forward call application service with the SIP agent sending a 302 message to the SIP server with the forwarding telephone number. Through the socket interface the SIP agent sends a forward command to the STB to signify that the incoming telephone call has been forwarded. The STB acknowledges the communication.

In addition the SIP server replies to the server system with a cancel command and sends an invite message to the second telephone causing it to ring. The server system acknowledges the cancel command from the SIP server and sends an instruction to the telephone to cause it to stop ringing.

The click to call application enables the end user of the multimedia device to initiate a third party call between a caller and a callee using default telephone numbers or specified telephone numbers. Telephony related features described herein support PSTN telephone numbers and SIP addresses. In one embodiment the viewer can locate the contact information of an individual in an address book described below and initiate a click to call while viewing that contact information.

After the end user selects or submits the requested information the STB sends a CTC command Table 1 with two parameters the caller and callee phone numbers through the socket interface of the server system . In response to the CTC command the server system invokes a click to call web service e.g. REST from the CTC server through the HTTP interface . In an alternative embodiment the server system invokes a SIP based service through the SIP interface .

The CTC server sends invites to the telephones of the caller and callee respectively causing both telephones to ring. Additionally the server system sends a CTC command through the socket interface to the STB to signify that the click to call has been invoked. The STB acknowledges the communication.

The RSS feed application enables the television viewer to obtain an RSS feed from a specified RSS source. Through the GUI on the screen of the multimedia device the viewer can choose from among RSS sources. In one embodiment the RSS feed scrolls from right to left within the RSS scroll area along the bottom of the screen.

The RSS source replies with an RSS XML eXtensible Markup Language file. The RSS feed application parses the RSS XML file and sends a text string to the STB including the identity of the RSS source and the publication date i.e. timestamp . The text string scrolls across the RSS scroll area of the display screen. The RSS source identity and time appear in the information banner .

The Address Book application enables the end user to access his or her contact information which has been preconfigured into the STB before the Address Book application begins. The end user activates the address book application by using the remote controller to select the corresponding button presented on the GUI. A list of contacts appears on the screen of the multimedia device . Contact information and the presence status described below of each contact can appear adjacent that contact. In addition the address book is used for displaying an image of a caller in addition to the caller ID. The status of any given contact changes dynamically and concurrently with changes at the MCS Multimedia Communication Server client.

The end user can step through the list of contacts using the directional keys of the remote controller . The end user can also select a highlighted contact by pressing the select key causing detailed contact information of that contact and one or more buttons for user navigation to appear on the screen. Such contact information can include the contact s name address phone number age relationship and photograph. Navigation buttons include but are not limited to a previous more return CTC and SMS . The end user is able to use the directional keys of the remote controller to navigate through the list of contacts. For example the end user can navigate to and select the CTC button to start a click to call between this contact and the default callee. If the end user navigates to the SMS button and selects the SMS the GUI becomes visible. Through the GUI the end user can then retrieve or send an SMS message.

Through the STB the end user sends an address command Table 1 to the server system to request access to the address book. The address command includes two parameters 1 init and 2 request. The server system responds with an address command with one parameter init effectively acknowledging the request and with a XML file containing the list of contacts and associated contact information.

The Presence status application enables an end user to see the presence status of a specific contact e.g. online offline busy . In addition the end user can receive a status notification on the screen of the multimedia device with an updated presence status when status of the contact changes.

To acquire the presence status of every contact in the address book the server system sends a SUBSCRIBE SIP message to the SIP server . The server system sends the SUBSCRIBE message periodically because each subscription expires. The SIP server acknowledges the SUBSCRIBE message and notifies each of the subscribed to contacts here in represented by contacts C and C of the subscription. Each subscribed to contact automatically sends a notify message which includes the presence status of the contact to the registered address of the server system maintained at the SIP server . The SIP server forwards the presence status information to the server system .

After receipt of the presence status information the server system acknowledges the receipt and determines if the presence status of a contact has changed. Upon detecting a change the server system updates the status of the contact in the address book at the server system and sends a presence command Table 1 to the STB with an identifier of the contact and status as parameters to update dynamically the presence status of the contact on the screen of the multimedia device . The STB replies with a presence command with the contact identifier and acknowledgment as parameters to acknowledge the updated presence status communication.

The server system also sends an address command with an update parameter and with the list of contacts in the address book to the STB to update dynamically the contact information displayed on the screen of the multimedia device . The STB acknowledges this communication by responding with an address ADDR command including an update parameter and an ACK parameter.

The SMS messaging application enables an end user of the multimedia device to send and receive SMS messages. shows an example of a process for receiving SMS messages at and sending SMS messages from the multimedia device . The process is similar for MMS messages. With respect to receiving an SMS message the SIP server receives an SMS message sent to the registered address of the server system . After receiving the message the SIP server sends a SIP message to the server system which includes the SMS message. The server system sends an SMS command Table 1 to the STB for display on the screen of the multimedia device . The SMS command includes the identity of the caller i.e. message sender as one parameter and the contents of SMS message. Thus the end user of the multimedia device is notified of an incoming SMS or MMS message. Displayed on the screen are the caller number caller name callee number and text message or picture s . In reply the STB sends an SMS command to the server system with an acknowledgement ACK as an included parameter.

With respect to sending an SMS message the end user uses the remote controller to select the SMS messaging application for sending an SMS message. The STB sends an SMS command with the address of the callee i.e. target of the SMS message and the message as parameters to the server system . The server system responds by replying with an SMS command that acknowledges the communication and by sending a SIP message containing the SMS message to the SIP server . The SIP server sends the SMS message to the callee and replies to the server system with an acknowledgement.

In addition the server system stores all SMS messages and organizes such SMS messages according to contact. The end user can then search the history of SMS messages through the GUI on the screen of the multimedia device. Upon end user selection the STB retrieves the SMS messages of a given contact. After selecting one of the messages for review the end user has the option of replying to this message. Other features supported for SMS messaging include but are not limited to 1 providing an SMS alert on the information banner and on the GUI of the address book and 2 displaying a retrieved SMS message at the bottom of the screen using scrolling text and in the GUI presented for SMS.

The end user is also able to select a contact in the address book and then an SMS message to send to that individual. In one embodiment the SMS messages that may be sent are pre configured in the STB for example pre configured SMS messages such as Hello I m home and Call me. Alternatively the end user can enter a message through the numerical keys of the remote controller in cell phone like fashion that is the end user enters each letter of the message by pressing a numerical key of the remote controller the particular number of times required to produce that letter.

The Call logs application allows an end user to see the history of incoming telephone calls and SMS messages on the screen of the multimedia device . Each incoming call in the history includes the caller name and call ID. Each displayed SMS message in the list includes the name of the sender and the time of the SMS message.

When the caller ID appears on the screen the end user can select to answer the call by activating a corresponding button on the GUI. The selection causes the STB to send 708 an answer command Table 1 to the server system including the IP address and port number of the STB.

In response to the answer command the server system constructs a new SDP message identified in as SDP  and sends a SIP message to the SIP server . The SIP message includes the SDP  message with the IP address port number and audio video A V parameters of the STB . The server system also responds to STB with an answer command with an acknowledgement parameter . When the STB receives the acknowledgement it starts its RTP Real time Transport Protocol player and waits for the RTP UDP user datagram protocol stream listening to the media port included in its answer command and in the server system s SDP  message. The STB consequently receives the media stream audio and video directly from the MCS client in peer to peer fashion without any intervening handling of the media stream by the server system .

After the SIP server determines that the MCS client has hung up the SIP server sends a BYE SIP message to the server system . In response the server system sends an answer command to the STB . The answer command includes bye as a parameter. From this command the STB knows to stop its RTP player.

The photo album application enables an end user to display images and video stored at a web site on the screen of the multimedia device. The end user clicks the corresponding button on the GUI displayed on the screen. As part of the execution of the photo album application the STB prompts the end user to provide the address location of the image or video content to be downloaded to the screen and any username and password information needed to access the content. The STB sends a command with the address username and password to the server system to activate a corresponding service application. The server system uses the supplied information to acquire the image or video from the web site through the HTTP interface and forwards the image or video through the socket connection to the STB as a parameter of a command. Upon receiving the

The voice mail application enables an end user to receive on the screen of the multimedia device notifications of new unheard voice mail messages. To listen to a voice mail message the end user navigates to the corresponding voice mail button on the main GUI using the arrow keys of remote controller. When the end user presses the SELECT key of the remote controller a call is established between the telephone number for the voice mail system and the default callee. The operation of establishing the telephone call with the voice mail system is similar to that of the click to call or third party call application one party is the end user the second party is the voice mail system.

Program code or software of the present invention may be embodied as computer executable instructions on or in one or more articles of manufacture or in or on computer readable medium. A computer computing system or computer system as used herein is any programmable machine or device that inputs processes and outputs instructions commands or data. In general any standard or proprietary programming or interpretive language can be used to produce the computer executable instructions. Examples of such languages include C C Pascal JAVA BASIC Visual Basic and Visual C .

Examples of articles of manufacture and computer readable medium in which the computer executable instructions may be embodied include but are not limited to a floppy disk a hard disk drive a CD ROM a DVD ROM a flash memory card a USB flash drive an non volatile RAM NVRAM or NOVRAM a FLASH PROM an EEPROM an EPROM a PROM a RAM a ROM a magnetic tape or any combination thereof. The computer executable instructions may be stored as e.g. source code object code interpretive code executable code or combinations thereof. Further although described predominantly as software embodiments of the described invention may be implemented in hardware digital or analog software or a combination thereof.

While the invention has been shown and described with reference to specific preferred embodiments it should be understood by those skilled in the art that various changes in form and detail may be made therein without departing from the spirit and scope of the invention as defined by the following claims.

