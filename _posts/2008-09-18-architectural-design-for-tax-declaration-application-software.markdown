---

title: Architectural design for tax declaration application software
abstract: Methods, systems, and apparatus, including computer program products, for implementing a software architecture design for a software application implementing tax declaration. The application is structured as multiple process components interacting with each other through service interfaces, and multiple service interface operations, each being implemented for a respective process component. The process components include an Accounting process component, a Due Item Processing process component, and a Payment Processing process component.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08315926&OS=08315926&RS=08315926
owner: SAP AG
number: 08315926
owner_city: Walldorf
owner_country: DE
publication_date: 20080918
---
The subject matter of this patent application relates to computer software architecture and more particularly to the architecture of application software for tax declaration.

Enterprise software systems are generally large and complex. Such systems can require many different components distributed across many different hardware platforms possibly in several different geographical locations. Thus the architecture of a large software application i.e. what its components are and how they fit together is an important aspect of its design for a successful implementation.

This specification presents a software architecture design for a tax declaration software application.

The present software architecture design can be implemented as methods systems and apparatus including computer program products for implementing a software architecture design for a software application implementing tax declarations. The software application is structured as multiple process components interacting with each other through service operations each implemented for a respective process component. The process components include an Accounting process component a Due Item Processing process component and a Payment Processing process component.

The subject matter described in this specification can be implemented to realize one or more of the following advantages. Effective use is made of process components as units of software reuse to provide a design that can be implemented reliably in a cost effective way. Effective use is made of deployment units each of which is deployable on a separate computer hardware platform independent of every other deployment unit to provide a scalable design. Service interfaces of the process components define a pair wise interaction between pairs of process components that are in different deployment units in a scalable way.

Details of one or more implementations of the subject matter described in this specification are set forth in the accompanying drawings and in the description below. Further features aspects and advantages of the subject matter will become apparent from the description the drawings and the claims.

As shown in the tax declaration design includes three deployment units a Financial Accounting deployment unit a Due Item Management deployment unit and a Payment deployment unit .

The Financial Accounting deployment unit includes an Accounting process component that records relevant business transactions for valuation and profitability analysis.

The Due Item Management deployment unit includes a Due Item Processing process component . The Due Item Processing process component handles the collection management and monitoring of trade receivables or payables and corresponding sales tax or withholding tax.

The Payment deployment unit includes a Payment Processing process component . The Payment Processing process component handles the processing and management of all payments. In addition the Payment Processing process component is responsible for associated communications with financial institutions such as banks and provides primary input for liquidity management.

A number of external process components described below will be used to describe the architectural design. These include a Processing of Product Tax Declaration at Tax Authority process component a Payment Order Processing at House Bank process component a Bank Statement Creation at Bank process component a Processing of Withholding Tax Declaration at Tax Authority process component a Processing of European Community Sales List Report at Tax Authority process component a Cash Flow Statement Auditing at Auditor process component a Balance Sheet Auditing at Auditor process component an Account Balance Report Auditing at Auditor process component an Accounting Document Report Auditing at Auditor process component a Golden Audit Report Processing at Golden Audit System process component and a Payment Processing at Business Partner process component .

The Processing of Product Tax Declaration at Tax Authority process component can receive messages from the Due Item Processing process component . The Payment Order Processing at House Bank process component can confirm a performed action such as a bank transfer debit or printing action to a requester. The Bank Statement Creation at Bank process component can notify the Payment Processing process component about transactions on a bank account. The Processing of Withholding Tax Declaration at Tax Authority process component can receive messages from the Due Item Processing process component . The Processing of European Community Sales List Report at Tax Authority process component can receive messages from the Due Item Processing process component . The Cash Flow Statement Auditing at Auditor process component can receive messages from the Accounting process component . The Balance Sheet Auditing at Auditor process component can receive messages from the Accounting process component . The Account Balance Report Auditing at Auditor process component can receive messages from the Accounting process component . The Accounting Document Report Auditing at Auditor process component can receive messages from the Accounting process component . The Golden Audit Report Processing at Golden Audit System process component can receive messages from the Accounting process component . The Payment Processing at Business Partner process component can receive messages from the Payment Processing process component .

Not explicitly represented in the figures is a foundation layer that contains all fundamental entities that are used in multiple deployment units . These entities can be process components business objects and reuse service components. A reuse service component is a piece of software that is reused in different transactions. A reuse service component is used by its defined interfaces which can be e.g. local APIs Application Programming Interfaces or service interfaces.

A process component of an external system is drawn as a dashed line process component . Such a process component represents the external system in describing interactions with the external system however the process component need not represent more of the external system than is needed to produce and receive messages as required by the process component that interacts with the external system.

The connector icon is used to simplify the drawing of interactions between process components . Interactions between process component pairs involving their respective business objects process agents at and operations interfaces and messages at and are described as process component interactions which determine the interactions of a pair of process components across a deployment unit boundary i.e. from one deployment unit to another deployment unit . Interactions between process components are indicated in by directed lines arrows . Interactions between process components within a deployment unit need not be described except to note that they exist as these interactions are not constrained by the architectural design and can be implemented in any convenient fashion. Interactions between process components that cross a deployment unit boundary will be illustrated by the figures of this patent application these figures will show the relevant elements associated with potential interaction between two process components but interfaces process agents at and and business objects that are not relevant to the potential interaction will not be shown.

The architectural design is a specification of a computer software application and elements of the architectural design can be implemented to realize a software application that implements the end to end process mentioned earlier. The elements of the architecture are at times described in this specification as being contained or included in other elements for example a process component is described as being contained in a deployment unit . It should be understood however that such operational inclusion can be realized in a variety of ways and is not limited to a physical inclusion of the entirety of one element in another.

The architectural elements include the business object . A business object is a representation of a type of a uniquely identifiable business entity an object instance described by a structural model. Processes operate on business objects. This example business object represents a specific view on some well defined business content. A business object represents content which a typical business user would expect and understand with little explanation. Business objects are further categorized as business process objects and master data objects. A master data object is an object that encapsulates master data i.e. data that is valid for a period of time . A business process object which is the kind of business object generally found in a process component is an object that encapsulates transactional data i.e. data that is valid for a point in time . The term business object will be used generically to refer to a business process object and a master data object unless the context requires otherwise. Properly implemented business objects are implemented free of redundancies.

The architectural elements also include the process component . A process component is a software package that realizes a business process and generally exposes its functionality as services. The functionality includes the ability to perform all or parts of particular kinds of business transactions. A process component contains one or more semantically related business objects . Any business object belongs to no more than one process component. Process components can be categorized as a standard process component a process component at a business partner a third party process component or a user centric process component. The standard process component named simply process component is a software package that realizes a business process and exposes its functionality as services. The process component at a business partner is a placeholder for a process component or other technology that performs the essential functions of the process component used at a business partner. The third party process component is a process component or other technology that performs the essential functions of the process component provided by a third party. The user centric process component is a process component containing user interface parts.

Process components are modular and context independent. That they are context independent means that a process component is not specific to any specific application and is reusable. The process component is often the smallest most granular element of reuse in the architecture.

The architectural elements also include the operation . An operation belongs to exactly one process component . A process component generally is able to perform multiple operations . Operations can be synchronous or asynchronous corresponding to synchronous or asynchronous process agents e.g. at and which will be described below. Operation may be the smallest separately callable function described by a set of data types used as input output and fault parameters serving as a signature.

The architectural elements also include the service interface referred to simply as the interface. An interface is a named group of operations . Interface typically specifies inbound service interface functionality or outbound service interface functionality. Each operation belongs to exactly one interface . An interface belongs to exactly one process component . A process component might contain multiple interfaces . In some implementations an interface contains only inbound or outbound operations but not a mixture of both. One interface can contain both synchronous and asynchronous operations. All operations of the same type either inbound or outbound which belong to the same message choreography will belong to the same interface. Thus generally all outbound operations directed to the same other process component are in one interface .

The architectural elements also include the message . Operations transmit and receive messages . Any convenient messaging infrastructure can be used. A message is information conveyed from one process component instance to another with the expectation that activity will ensue. An operation can use multiple message types for inbound outbound or error messages. When two process components are in different deployment units invocation of an operation of one process component by the other process component is accomplished by an operation on the other process component sending a message to the first process component. In some implementations the message is a form based message that can be translated into a recognized format for an external process component . The form message type is a message type used for documents structured in forms. The form message type can be used for printing faxing emailing or other events using documents structured in forms. In some implementations the form message type provides an extended signature relative to the normal message type. For example the form message type can include text information in addition to identification information to improve human reading.

The architectural elements also include the process agent e.g. at and . Process agents do business processing that involves the sending or receiving of messages . Each operation will generally have at least one associated process agent. The process agent can be associated with one or more operations . Process agents at and can be either inbound or outbound and either synchronous or asynchronous.

Asynchronous outbound process agents are called after a business object changes e.g. alter a create update or delete of a business object instance. Synchronous outbound process agents are generally triggered directly by a business object .

An outbound process agent and will generally perform some processing of the data of the business object instance whose change triggered the event. An outbound agent triggers subsequent business process steps by sending messages using well defined outbound services to another process component which generally will be in another deployment unit or to an external system. An outbound process agent is linked to the one business object that triggers the agent but it is sent not to another business object but rather to another process component. Thus the outbound process agent can be implemented without knowledge of the exact business object design of the recipient process component.

Inbound process agents and are called after a message has been received. Inbound process agents are used for the inbound part of a message based communication. An inbound process agent starts the execution of the business process step requested in a message by creating or updating one or multiple business object instances. An inbound process agent is not the agent of a business object but of its process component. An inbound process agent can act on multiple business objects in a process component.

Synchronous agents and are used when a process component requires a more or less immediate response from another process component and is waiting for that response to continue its work.

Operations and process components are described in this specification in terms of process agents. However in alternative implementations process components and operations can be implemented without use of agents by using other conventional techniques to perform the functions described in this specification.

The architectural elements also include the communication channel template. The communication channel template is a modeling entity that represents a set of technical settings used for communication. The technical settings can include details for inbound or outbound processing of a message. The details can be defined in the communication channel template. In particular the communication channel template defines an adapter type a transport protocol and a message protocol. In some implementations various other parameters may be defined based on a selected adapter type. For example the communication channel template can define a security level conversion parameters default exchange infrastructure parameters processing parameters download URI parameters and specific message properties.

The communication channel template can interact with internal or external process components at and . To interact with an internal process component the communication channel template is received and uploaded to be used with an operation and interface pair. To interact with an external process component the communication channel template is received and uploaded to be used with an external entity such as an external bank business partner or supplier.

The elements also include the deployment unit . A deployment unit includes one or more process components that are deployed together on a single computer system platform. Conversely separate deployment units can be deployed on separate physical computing systems. For this reason a boundary of a deployment unit defines the limits of an application defined transaction i.e. a set of actions that have the ACID properties of atomicity consistency isolation and durability. To make use of database manager facilities the architecture requires that all operations of such a transaction be performed on one physical database as a consequence the processes of such a transaction must be performed by the process components of one instance of one deployment unit .

The process components of one deployment unit interact with those of another deployment unit using messages passed through one or more data communication networks or other suitable communication channels. Thus a deployment unit deployed on a platform belonging one business can interact with a deployment unit software entity deployed on a separate platform belonging to a different and unrelated business allowing for business to business communication. More than one instance of a given deployment unit can execute at the same time on the same computing system or on separate physical computing systems. This arrangement allows the functionality offered by a deployment unit to be scaled to meet demand by creating as many instances as needed.

Since interaction between deployment units is through service operations a deployment unit can be replaced by other another deployment unit as long as the new deployment unit supports the operations depended upon by other deployment units. Thus while deployment units can depend on the external interfaces of process components in other deployment units deployment units are not dependent on process component interaction within other deployment units. Similarly process components that interact with other process components or external systems only through messages e.g. as sent and received by operations can also be replaced as long as the replacement supports the operations of the original .

In contrast to a deployment unit the foundation layer does not define a limit for application defined transactions. Deployment units communicate directly with entities in the foundation layer which communication is typically not message based. The foundation layer is active in every system instance on which the application is deployed. Business objects in the foundation layer will generally be master data objects. In addition the foundation layer will include some business process objects that are used by multiple deployment units . Master data objects and business process objects that should be specific to a deployment unit are assigned to their respective deployment unit .

The Payment Processing process component can notify the Accounting process component about the creation or cancellation of a payment ordered received or allocated. The Payment Processing process component processes and manages payments received as well as the associated communication with financial institutions such as banks. In addition the Payment Processing process component provides input for liquidity management.

As shown in the Payment Processing process component includes an Incoming Check business object a Check Deposit business object a Payment Order business object a House Bank Statement business object a Payment Allocation business object a Bill of Exchange Receivable business object a Bill of Exchange Deposit business object a Cash Transfer business object and a Payment Advice business object . The Incoming Check business object represents a check issued by a business partner payable to the company. The Check Deposit business object represents a deposit of checks at a house bank for credit to a house bank account. The Payment Order business object represents an order within a company to make a payment to a business partner at a specified time. A payment order can be a collective order that contains several individual orders. The House Bank Statement business object represents a legally binding notification from the house bank about the revenues within a specific time period at a house bank account with a defined starting and closing balance. The Payment Allocation business object represents an assignment of a payment item to the payment reasons from which the payment item originated. The Bill of Exchange Receivable business object represents a bill of exchange issued either by the company or by a business partner for the benefit of the company. The Bill of Exchange Deposit business object represents a deposit of bills of exchange receivable at a house bank for credit to a house bank account. The Cash Transfer business object represents a company internal money transfer that can include payments from one house bank account to another house bank account transfer payments from one cash storage to another cash transfer payments from a cash storage to a house bank account cash deposit and or payments from a house bank account to a cash storage cash withdrawal . The Payment Advice business object represents an announcement of a payment transaction by a business partner to the company specifying payment reasons.

The Incoming check business object uses a Notify of Payment from Incoming Check to Accounting outbound process agent to invoke a Notify of Payment operation or a Notify of Payment Cancellation operation . The operations and are included in a Payment Accounting Out interface .

The Check Deposit business object uses a Notify of Payment from Check Deposit to Accounting outbound process agent to invoke the Notify of Payment operation or the Notify of Payment Cancellation operation .

The Payment Order business object uses a Notify of Payment from Payment Order to Accounting outbound process agent to invoke the Notify of Payment operation or the Notify of Payment Cancellation operation .

The House Bank Statement business object uses a Notify of Payment from Bank Statement to Accounting outbound process agent to invoke the Notify of Payment operation or the Notify of Payment Cancellation operation .

The Payment Allocation business object uses a Notify of Payment from Payment Allocation to Accounting outbound process agent to invoke the Notify of Payment operation or the Notify of Payment Cancellation operation .

The Bill of Exchange Receivable business object uses a Notify of Payment from Bill of Exchange Receivable to Accounting outbound process agent to invoke the Notify of Payment operation or the Notify of Payment Cancellation operation .

The Bill of Exchange Deposit business object uses a Notify of Payment from Bill of Exchange Deposit to Accounting outbound process agent to invoke the Notify of Payment operation or the Notify of Payment Cancellation operation .

The Cash Transfer business object uses a Notify of Payment Cash Transfer to Accounting outbound process agent to invoke the Notify of Payment operation or the Notify of Payment Cancellation operation .

The Payment Advice business object uses a Notify of Payment from Payment Advice to Accounting outbound process agent to invoke the Notify of Payment operation or the Notify of Payment Cancellation operation .

If the Notify of Payment operation is invoked the operation generates a Payment Accounting Notification message . If the Notify of Payment Cancellation operation is invoked the operation generates a Payment Cancellation Accounting Notification message . Both messages are sent to the Accounting process component .

A Create Accounting Document operation receives the Payment Accounting Notification message . A Cancel Accounting Document operation receives the Payment Cancellation Accounting Notification message . The operations and are included in a Payment Accounting Out interface . The operations and use a Maintain Accounting Document based on Payment inbound process agent to update an Accounting Notification business object . The Accounting Notification business object represents a notification sent to the Accounting process component by an operational component regarding a business transaction. For example the Accounting Notification business object can represent the operational business transaction in a standardized form for all business transaction documents and can include the data needed to valuate the business transaction.

As shown in a bank statement is created at a bank and an IT CBI Bank Account Statement Notification message with statement information is generated. The IT CBI Bank Account Statement Notification message uses Mapping Entity to transform the IT CBI formatted message to a Bank Account Statement Notification message . The message is received in the Payment Processing process component where a Create Bank Statement operation is invoked to create a bank statement. The Create Bank Statement operation is included in a Payment Processing Incoming Payment Advicing In interface . A Maintain Bank Statement inbound process agent updates a House Bank Statement business object by creating a new bank statement. The House Bank Statement business object represents a legally binding notification from the house bank about the revenues items within a specific time period at a house bank account with a defined starting and closing balance.

The Bank Statement Creation at Bank process component receives information from the Payment Processing process component using an IT CBI Notify Of Bank Account Statement communication channel template . The communication channel template can provide information from an external party about a bank statement.

As shown in the Payment Processing process component includes a Payment Allocation business object . The Payment Allocation business object represents the assignment of a payment item to a payment reason from which the payment item originated.

The Payment Allocation business object uses a Request Clearing Maintenance from Payment Allocation to Due Item Processing outbound process agent to invoke a Request Clearing operation . The operation generates a Clearing Request message . The message requests the clearing of payments within the Due Item Processing process component . The Request Clearing Maintenance from Payment Allocation to Due Item Processing outbound process agent can also use a Request Clearing Cancellation operation to cancel a payment clearing using a Clearing Cancellation Request message . Both operations and are included in a Clearing Out interface .

The message is received by a Create Clearing operation . The operation creates a clearing for business partner initiated payments. Similarly the Clearing Cancellation Request message is received by a Cancel Clearing operation . The operation cancels a previously sent clearing request by reference. The Create Clearing operation and the Cancel Clearing operation are both included in a Clearing In interface . Upon creating or canceling a clearing a Maintain Clearing inbound process agent updates a Tax Due Payment business object or a Due Payment business object or both.

The Tax Due Payment business object represents a payment request or payment confirmation with regard to trade receivables and payables e.g. from goods and or services etc. . The Due Payment business object represents a payment request or payment confirmation with regard to trade receivables and payables.

The Tax Due Payment business object uses a Confirm Clearing from Due Payment to Payment Processing outbound process agent to invoke a Confirm Clearing operation . The operation is included in a Clearing Out interface . The operation can initiate a Clearing Confirmation message to the Payment Processing process component . The message is received by the Payment Processing process component and handled by a Change Payment Allocation Based on Clearing Request Confirmation operation . The operation confirms the execution or rejection of a sent clearing request. The operation is included in a Clearing In interface . An update can be made to the Payment Allocation business object using a Change Payment Allocation Based on Clearing Request Confirmation inbound process agent .

The Due Payment business object uses a Confirm Clearing from Product Tax Declaration to Payment Processing outbound process agent to invoke the Confirm Clearing operation . The agent can confirm or reject clearing of a foreign initiated payment for tax receivables payables from product tax. The operation can initiate the Clearing Confirmation message to the Payment Processing process component . The message is received by the Payment Processing process component and handled by the Change Payment Allocation Based on Clearing Request Confirmation operation . The operation confirms the execution or rejection of a sent clearing request. An update can be made to the Payment Allocation business object using the Change Payment Allocation Based on Clearing Request Confirmation inbound process agent .

Interactions Between Process Components Payment Processing and Payment Order Processing at House Bank 

As shown in the Payment Processing process component includes a Bank Payment Order business object . The Bank Payment Order business object represents an order to a house bank to make a transfer or direct debit from a specified house bank account to fulfill a payment order. In some instances the house bank can be a bank located in France.

The Bank Payment Order business object uses a Request File Based Payment Order from Bank Payment Order to House Bank outbound process agent to invoke a Request File based Payment Order operation . The Request File based Payment Order operation instructs a house bank using a file to make a bank transfer or a direct debit. The operation is included in a Payment Ordering Out interface . The Request File based Payment Order operation generates a File based Collective Payment Order Request message . The File based Collective Payment Order Request message uses Mapping Entity to transform the file based message type to a Collective Payment Order Request message that can be received by the Payment Order Processing at House Bank process component . The Collective Payment Order Request message is in a format that the house bank e.g. a bank located in France can understand. A collective payment order can be an instruction based on a file transfer to a credit institution to carry out one or more payment transactions e.g. bank transfers or direct debits . The Payment Order Processing at House Bank process component receives information from the Payment Processing process component using a Payment Order Request communication channel template . The communication channel template can provide information from a third party about a payment order request.

As shown in the Due Item Processing process component includes the Due Payment business object a Product Tax Declaration business object and the Tax Due Payment business object . The Due Payment business object represents a payment request or payment confirmation with regard to trade receivables and payables. The Product Tax Declaration business object represents a declaration of the product tax payables receivables of a company to the responsible tax authority according to the tax declaration arrangement and country specific legal requirements that trigger the payment to the tax authority if required. The Tax Due Payment business object represents a payment request or payment confirmation with regard to trade receivables and payables e.g. from goods and or services etc. .

The Due Payment business object uses a Synchronous Request Payment Reservation from Due Payment to Payment Processing outbound process agent . An update in the Due Payment business object can trigger the Synchronous Request Payment Reservation from Due Payment to Payment Processing outbound process agent to invoke one or more operations in a Payment Request Out interface . The outbound process agent can invoke a Request Payment Information and Provisional Payment Reservation operation a Request Payment Information and Provisional Payment Reservation Change operation or a Notify of Provisional Payment Reservation Change Cancellation operation . The Request Payment Information and Provisional Payment Reservation operation can request payment information with a provisional reservation of money in payment processing. The Request Payment Information and a Provisional Payment Reservation Change operation can request payment information with a change of provisional reservation of money in payment processing. The Notify of Provisional Payment Reservation Change Cancellation operation can register a change of a provisional payment to the last transactional or saved state.

The operation can handle a Payment Order Reservation Confirmation message received by the Due Item Processing process component . The operation can also send a Payment Order Reservation Request message .

As shown in the messages are generated and handled respectively by a Create Payment Reservation operation which is included in a Payment Request In interface in the Payment Processing process component . The Create Payment Reservation operation can check and determine payment data and create a reservation of payment. After the reservation is created the operation can confirm the reservation creation to a caller.

The operation uses a Synchronous Maintain Payment Reservation inbound process agent to update the Payment Order business object . The inbound process agent can create change and cancel the Payment Order business object for a reservation request. The Payment Order business object represents an order within a company to make a payment to a business partner at a specified time. A payment order can be a collective order that contains several individual orders.

The Request Payment Information and Provisional Payment Reservation Change operation can send a Payment Order Reservation Change Request message . The operation can also handle a Payment Order Reservation Change Confirmation message received by the Due Item Processing process component . The messages are handled and sent respectively by a Synchronous Change Payment Reservation operation which is included in the Payment Request In interface of the Payment Processing process component . The Synchronous Change Payment Reservation operation can synchronously change a reservation of payment and confirm the change to the caller. After the reservation is changed the operation can confirm the reservation change to the caller. The operation uses the Synchronous Maintain Payment Reservation inbound process agent to update the Payment Order business object .

The Notify of Provisional Payment Reservation Change Cancellation operation can send a Payment Order Reservation Change Cancellation Notification message . The message is received by the Payment Processing process component and handled by a Change Payment Reservation operation which is included in the Payment Request In interface . For example the Change Payment Reservation operation can change a reservation of payment and confirm the change to the caller. In this example the operation triggers a Maintain Payment Order inbound process agent to create or update the Payment Order business object .

The Due Payment business object uses a Request Payment front Due Payment to Payment Processing outbound process agent to invoke a Request Payment operation and a Request Payment Cancellation operation . Both operations and are part of the Payment Request Out interface . The Request Payment operation can send a request for payment to the Payment Processing process component . In some cases the request can confirm a provisional payment made before. The Request Payment Cancellation operation can cancel at least one provisional requested or ordered payment.

The Request Payment operation can send a Payment Order Request message to the Payment Processing process component . The Payment Request In interface of the Payment Processing process component includes a Create Payment Order operation to handle the message . The Create Payment Order operation can create a request for payment by triggering the Maintain Payment Order inbound process agent to update the Payment Order business object .

The Request Payment Cancellation operation can transmit a Payment Order Cancellation Request message to the Payment Processing process component . The Payment Request In interface of the Payment Processing process component includes a Cancel Payment Order operation to handle the message . The Cancel Payment Order operation can cancel a request for payment by triggering the Maintain Payment Order inbound process agent to update the Payment Order business object .

A creation or update in the Product Tax Declaration business object triggers a Request Payment from Product Tax Declaration to Payment Processing outbound process agent to initiate or cancel a payment from the Product Tax. Declaration business object . The outbound process agent can initiate a payment request using the Request Payment operation or can cancel a payment request using the Request Payment Cancellation operation .

A creation or update in the Tax Due Payment business object triggers a Request Payment from Tax Due Payment to Payment Processing outbound process agent to initiate or cancel a payment from the Tax Due Payment business object . The outbound process agent can initiate or cancel a tax payment via a payment request using the Request Payment operation or can cancel a payment request using the Request Payment Cancellation operation .

A creation or update in the Payment Order business object triggers a Confirm Payment Request from Payment Order to Due Item Processing outbound process agent . The outbound process agent can confirm a processing status of a payment to the sender of a payment request by invoking a Confirm Payment Request operation which is included in a Payment Request out interface . The Confirm Payment Request operation sends a Payment Order Confirmation message to the Due Item Processing process component .

As shown in Payment Order Confirmation message is handled by a Change Payment based on Payment Request Confirmation operation . The Change Payment based on Payment Request Confirmation operation is included in a Payment Request In interface . The operation confirms the execution of a payment request or a payment request cancellation. A Change Payment based on Payment Request Confirmation inbound process agent can update a processing status of the Due Payment business object the Product Tax Declaration business object or the Tax Due Payment business object based on the confirmation of a payment request or a payment request cancellation.

The Due Item Processing process component includes the Due Clearing business object the Due Payment business object the Product Tax Declaration business object a Withholding Tax Declaration business object and the Tax Due Payment business object . The Accounting process component includes the Accounting Notification business object . Updates in some or all of the Due Cleaning business object the Due Payment business object the Product Tax Declaration business object the Withholding Tax Declaration business object or the Tax Due Payment business object can trigger messages to be sent to the Accounting process component .

The Due Clearing business object represents a group of receivables and payables for clearing. The Product Tax Declaration business object represents a declaration of the product tax payables receivables of a company to the responsible tax authority according to the tax declaration arrangement and country specific legal requirements that trigger the payment to the tax authority if required. The Withholding Tax Declaration business object represents a declaration of withholding tax payables of a company to a tax authority according to the tax declaration arrangement and country specific legal requirements that triggers the payment to the tax authority if required. The Due Payment business object represents a payment request or confirmation with regard to trade receivables and payables. The Tax Due Payment business object represents a payment request or confirmation with regard to tax payables and receivables.

As shown in an update in the Due Clearing business object uses a Notify of Payment from Due Clearing to Accounting outbound process agent . The Notify of Payment from Due Clearing to Accounting outbound process agent invokes a Notify of Payment operation or a Notify Payment Cancellation operation . Both operations are included in a Payment Accounting Out interface . The Notify of Payment from Due Clearing to Accounting outbound process agent invokes the Notify of Payment operation if the due clearing is released. The Notify of Payment from Due Clearing to Accounting outbound process agent invokes the Notify of Payment Cancellation operation if the due clearing is cancelled. The Notify of Payment operation can notify accounting of payments or clearings of trade and tax receivables or payables. The Notify of Payment operation sends a Payment Accounting Notification message to the Accounting process component . The Notify of Payment Cancellation operation can notify accounting of payment or clearing cancellations for trade and tax receivables or payables. The Notify of Payment Cancellation operation sends a Payment Cancellation Accounting Notification message to the Accounting process component .

A Payment Accounting In interface includes a Create Accounting Document operation and a Cancel Accounting Document operation . The Create Accounting Document operation can receive the Payment Accounting Notification message . The Cancel Accounting Document operation receives the Payment Cancellation Accounting Notification message . Both operations and use a Maintain Accounting Document based on Payment inbound process agent to update the Accounting Notification business object . The Accounting Notification business object represents a notification sent to accounting by an operational component e.g. Financial Accounting regarding a business transaction. It represents this operational business transaction in a standardized form for all business transaction documents and can contain the data needed to valuate the business transaction.

The Due Payment business object uses a Notify of Payment from Due Payment to Accounting outbound process agent to send notification to the Accounting process component for inward or outward trade receivables or payables payments. The Notify of Payment from Due Payment to Accounting outbound process agent invokes the Notify of Payment operation or the Notify Payment Cancellation operation . The Notify of Payment from Due Payment to Accounting outbound process agent invokes the Notify of Payment operation if a VAT value added tax declaration is released. The Notify of Payment from Due Payment to Accounting outbound process agent invokes the Notify of Payment Cancellation operation if the VAT declaration is cancelled.

The Product Tax Declaration business object uses a Notify of Payment from Product Tax Declaration to Accounting outbound process agent to send notification to the Accounting process component for a payment of tax receivables or payables. The Notify of Payment from Product Tax Declaration to Accounting outbound process agent invokes the Notify of Payment operation or the Notify Payment Cancellation operation . The Notify of Payment from Product Tax Declaration to Accounting outbound process agent invokes the Notify of Payment operation if a VAT declaration is released. The Notify of Payment from Due Clearing to Accounting outbound process agent invokes the Notify of Payment Cancellation operation if the VAT declaration is cancelled.

The Withholding Tax Declaration business object uses a Notify of Payment from Withholding Tax Declaration to Accounting outbound process agent to send notification to the Accounting process component for a payment of withholding tax receivables and or payables. The Notify of Payment from Withholding Tax Declaration to Accounting outbound process agent invokes the Notify of Payment operation or the Notify Payment Cancellation operation . The Notify of Payment from Withholding Tax Declaration to Accounting outbound process agent invokes the Notify of Payment operation if a VAT declaration is released. The Notify of Payment from Withholding Tax Declaration to Accounting outbound process agent invokes the Notify of Payment Cancellation operation if the VAT declaration is cancelled.

The Tax Due Payment business object uses a Notify of Payment from Tax Due Payment to Accounting outbound process agent to send notification to the Accounting process component of a payment of tax receivables and or payables. The Notify of Payment from Tax Due Payment to Accounting outbound process agent invokes the Notify of Payment operation or the Notify Payment Cancellation operation . The Notify of Payment from Tax Due Payment to Accounting outbound process agent invokes the Notify of Payment operation if a VAT declaration is released. The Notify of Payment from Tax Due Payment to Accounting outbound process agent invokes the Notify of Payment Cancellation operation if the VAT declaration is cancelled.

Interactions Between Process Components Due Item Processing and Processing of Product Tax Declaration at Tax Authority 

As shown in the Due Item Processing process component includes the Product Tax Declaration business object . The Product Tax Declaration business object represents a declaration of the product tax payables and receivables of a company to the responsible tax authority according to the tax declaration arrangement and country specific legal requirements that triggers the payment to the tax authority. The Product Tax Declaration business object uses a Notify of Product Tax Declaration to Tax Authority outbound process agent to send notification to the Processing of Product Tax Declaration at Tax Authority process component . The process agent invokes the Notify of Product Tax Declaration operation . The operation is included in a Product Tax Declaration Out interface . The operation generates a form based or file based Product Tax Declaration Notification message and a Form Product Tax Declaration Notification message . The messages may be sent to the Processing of Product Tax Declaration at Tax Authority process component . The message uses a Mapping Entity to transform the file based message type to a Product Tax Declaration Notification message that can be received by the Processing of Product Tax Declaration at Tax Authority process component . In some instances the Processing of Product Tax Declaration at Tax Authority process component receives information from the Due Item Processing process component using a Netherlands NL Product Tax Declaration communication channel template . The communication channel template can define protocols and parameters used for communication with an external party which can be based in the Netherlands for example.

A Product Tax Declaration Receipt Notification message is received by the Due Item Processing process component where it is handled by a Change Product Tax Declaration based on Receipt Notification operation . The Change Product Tax Declaration based on Receipt Notification operation is included in a Product Tax Declaration In interface . The operation uses a Change Product Tax Declaration based on Receipt Notification inbound process agent to update the Product Tax Declaration business object to confirm the receipt of a product tax declaration e.g. update processing status of Product Tax Declaration business object based on the confirmation from tax authorities for receipt of the tax declaration .

Interactions Between Process Components Due Item Processing and Processing of European Community Sales List Report at Tax Authority 

As shown in the Due Item Processing process component includes a European Community Sales List Report business object . The European Community Sales List Report business object represents a declaration of the statistical VAT tax payables receivables of a European Union EU member state company to a tax authority according to the tax declaration arrangement and country specific legal requirements. The European Community Sales List Report business object uses a Notify of European Community Sales List Report to Tax Authority outbound process agent to send notification to the Processing of European Community Sales List Report at Tax Authority process component . The process agent invokes a Notify of European Community Sales List Report operation . The operation is included in a European Community Sales List Report Out interface . The operation generates a European Community Sales List Report Notification message and a Form European Community Sales List Report Notification message . The messages are sent to the Processing of European Community Sales List Report at Tax Authority process component .

Interactions Between Process Components Payment Processing and Payment Processing at Business Partner 

As shown in the Payment Processing process component includes an Outgoing Check business object . The Outgoing Check business object represents a check issued by a company payable to a business partner to fulfill a payment order. The Outgoing Check business object uses an Issue Check from Outgoing Check to Business Partner outbound process agent to invoke an Issue Check operation . The operation requests the issuing a check and is included in a Check Issuing Output Out interface . The operation generates a Form Check Issue Request message . The message is sent to the Payment Processing at Business Partner process component .

As shown in the Accounting process component includes a Cash Flow Statement business object . The Cash Flow Statement business object represents a statement of changes in cash and cash equivalents during a period published in a predefined format as stipulated by the legal authorities. The Cash Flow Statement business object uses a Notify of Cash Flow Statement outbound process agent to send notification to the Cash Flow Statement Auditing at Auditor process component . The process agent invokes a Notify of Cash Flow Statement operation . The operation is included in a Cash Flow Statement Out interface . The operation generates a Cash Flow Statement Notification message . The message is sent to the Cash Flow Statement Auditing at Auditor process component .

As shown in the Accounting process component includes a Balance Sheet and Income Statement Report business object . The Balance Sheet and Income Statement Report business object represents a report that discloses the book value and net income of a business or other organization at a particular date often at the end of its fiscal year in a predefined format as stipulated by the legal authorities. The Balance Sheet and Income Statement Report business object uses a Notify of Balance Sheet and Income Statement Report outbound process agent to send notification to the Balance Sheet Auditing at Auditor process component . The process agent invokes a Notify of Balance Sheet and Income Statement Report operation . The operation is included in a Balance Sheet and Income Statement Out interface . The operation generates a Form of Balance Sheet and Income Statement Request message . The message is sent to the Balance Sheet Auditing at Auditor process component .

Interactions Between Process Components Due Item Processing and Processing of Withholding Tax Declaration at Tax Authority 

As shown in the Due Item Processing process component includes the Withholding Tax Declaration business object . The Withholding Tax Declaration business object represents a declaration of withholding tax payables of company to a tax authority according to the tax declaration arrangement and country specific legal requirements that trigger the payment to the tax authority. The Withholding Tax Declaration business object uses a Notify of Withholding Tax Declaration at Tax Authority outbound process agent to send notification to the Processing of Withholding Tax Declaration at Tax Authority process component . The process agent invokes a Notify of Notify of Withholding Tax Declaration operation . The operation is included in a Withholding Tax Declaration Out interface . The operation generates a Withholding Tax Declaration Notification message and a Form Withholding Tax Declaration Notification message . The messages are sent to the Processing of Withholding Tax Declaration at Tax Authority process component .

Interactions Between Process Components Accounting and Accounting Document Report Auditing at Auditor 

As shown in the Accounting process component includes an Accounting Document Report business object . The Accounting Document Report business object represents a record of accounting documents grouped by period and formatted as stipulated by the legal authorities. The Accounting Document Report business object uses a Notify of Accounting Document Report outbound process agent to send notification to the Accounting Document Report Auditing at Auditor process component . The process agent invokes a Notify of Accounting Document Report operation . The operation is included in an Accounting Document Report Out interface . The operation generates a Form Accounting Document Report message . The message is sent to the Accounting Document Report Auditing at Auditor process component .

As shown in the Accounting process component includes an Account Balance Report business object . The Account Balance Report business object represents a record of general ledger account balances at the end of an accounting period often at the end of a company s fiscal year in a predefined format as stipulated by the legal authorities. The Account Balance Report business object uses a Notify of Account Balance Report outbound process agent to send notification to the Account Balance Report Auditing at Auditor process component . The process agent invokes a Notify of Account Balance Report operation . The operation is included in an Account Balance Report Out interface . The operation generates a Form Account Balance Report message . The message is sent to the Account Balance Report Auditing at Auditor process component .

The subject matter described in this specification and all of the functional operations described in this specification can be implemented in digital electronic circuitry or in computer software firmware or hardware including the structural means disclosed in this specification and structural equivalents thereof or in combinations of them. The subject matter described in this specification can be implemented as one or more computer program products i.e. one or more computer programs tangibly embodied in an information carrier e.g. in a machine readable storage device or in a propagated signal for execution by or to control the operation of data processing apparatus e.g. a programmable processor a computer or multiple computers. A computer program also known as a program software software application or code can be written in any form of programming language including compiled or interpreted languages and it can be deployed in any form including as a stand alone program or as a module component subroutine or other unit suitable for use in a computing environment. A computer program does not necessarily correspond to a file. A program can be stored in a portion of a file that holds other programs or data in a single file dedicated to the program in question or in multiple coordinated files e.g. files that store one or more modules sub programs or portions of code . A computer program can be deployed to be executed on one computer or on multiple computers at one site or distributed across multiple sites and interconnected by a communication network.

The processes and logic flows described in this specification can be performed by one or more programmable processors executing one or more computer programs to perform functions by operating on input data and generating output. The processes and logic flows can also be performed by and apparatus can also be implemented as special purpose logic circuitry e.g. an FPGA field programmable gate array or an ASIC application specific integrated circuit .

Processors suitable for the execution of a computer program include by way of example both general and special purpose microprocessors and any one or more processors of any kind of digital computer. Generally a processor will receive instructions and data from a read only memory or a random access memory or both. The essential elements of a computer are a processor for executing instructions and one or more memory devices for storing instructions and data. Generally a computer will also include or be operatively coupled to receive data from or transfer data to or both one or more mass storage devices for storing data e.g. magnetic magneto optical disks or optical disks. Information carriers suitable for embodying computer program instructions and data include all forms of non volatile memory including by way of example semiconductor memory devices e.g. EPROM EEPROM and flash memory devices magnetic disks e.g. internal hard disks or removable disks magneto optical disks and CD ROM and DVD ROM disks. The processor and the memory can be supplemented by or incorporated in special purpose logic circuitry.

To provide for interaction with a user the subject matter described in this specification can be implemented on a computer having a display device e.g. a CRT cathode ray tube or LCD liquid crystal display monitor for displaying information to the user and a keyboard and a pointing device e.g. a mouse or a trackball by which the user can provide input to the computer. Other kinds of devices can be used to provide for interaction with a user as well for example feedback provided to the user can be any form of sensory Feedback e.g. visual feedback auditory feedback or tactile feedback and input from the user can be received in any form including acoustic speech or tactile input.

The subject matter described in this specification can be implemented in a computing system that includes a back end component e.g. a data server a middleware component e.g. an application server or a front end component e.g. a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the subject matter described herein or any combination of such back end middleware and front end components. The components of the system can be interconnected by any form or medium of digital data communication e.g. a communication network. Examples of communication networks include a local area network LAN and a wide area network WAN e.g. the Internet.

The computing system can include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client server relationship to each other.

While this specification contains many specifics these should not be construed as limitations on the scope of the present disclosure or of what may be claimed but rather as an exemplification of preferred embodiments of the present disclosure. Certain features that are described in this specification in the context of separate embodiments may also be provided in combination in a single embodiment. Conversely various features that are described in the context of a single embodiment may also be provided in multiple embodiments separately or in any suitable subcombination. Moreover although features may be described above as acting in certain combinations and even initially claimed as such one or more features from a claimed combination can in some cases be excised from the combination and the claimed combination may be directed to a subcombination or variation of a subcombination.

The subject matter has been described in terms of particular variations but other variations can be implemented and are within the scope of the following claims. For example the actions recited in the claims can be performed in a different order and still achieve desirable results. As one example the processes depicted in the accompanying figures do not necessarily require the particular order shown or sequential order to achieve desirable results. In certain implementations multitasking and parallel processing may be advantageous. Other variations are within the scope of the following claims.

