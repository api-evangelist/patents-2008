---

title: System and method for configuring an electronic device
abstract: A system and method configures an electronic device. The method comprises detecting a coupling of a peripheral device to a host device. The peripheral device appears as a compound device including an interface device and a communications device. The method comprises identifying a protocol utilized by the communications device. The method comprises generating a communications link between the communications device and the host device when the protocol is compatible with a driver of the host device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08082369&OS=08082369&RS=08082369
owner: Symbol Technologies, Inc.
number: 08082369
owner_city: Holtsville
owner_country: US
publication_date: 20081208
---
The present invention relates generally to a system and method for configuring an electronic device. Specifically a driver of a host device may be configured to be compatible with a protocol of a peripheral device connected thereto to enable bi directional communication.

When a peripheral device is coupled to a host device the peripheral device will utilize a predetermined communication protocol to interface with the host device. However the protocol may not support configuration of the peripheral device either directly with predefined commands or indirectly with encapsulated commands in the protocol. For example the protocol may not be capable of transmitting configuration data to the peripheral device. To establish a communication link between the peripheral device and the host device which provides for transmission of the configuration data the peripheral device must switch communication protocols. This is conventionally done manually. For example a scanner coupled to a computer would have to scan one or more barcodes to switch protocols to establish the communication link and then scan one or more further barcodes to obtain the configuration data.

The peripheral device is typically manually configured with settings input by an installer. Attempts by untrained personnel to accomplish hardware and software installation of the peripheral device may result in wasted time un needed repair requests when the peripheral device is working properly but has been installed incorrectly etc. Costs are also incurred when outside personnel e.g. IT staff are contracted to install configure and troubleshoot the peripheral devices. Furthermore when non standard protocols are utilized by the peripheral device a configuration may be required to be aborted manually when the non standard protocol is not recognized by the host device.

The present invention relates to a system and method for configuring an electronic device. The method comprises detecting a coupling of a peripheral device to a host device. The peripheral device appears as a compound device including an interface device and a communications device. The method comprises identifying a protocol utilized by the communications device. The method comprises generating a communications link between the communications device and the host device when the protocol is compatible with a driver of the host device.

The exemplary embodiments of the present invention may be further understood with reference to the following description and the appended drawings wherein like elements are provided with the same reference numerals. The exemplary embodiments of the present invention may be related to a system and method for automating a process of establishing a communication between a host device and a peripheral device. In the exemplary embodiments the present invention will be described with reference to installing and configuring a peripheral device in a point of service POS sale environment to a host device. However those skilled in the art will understand that the present invention may be implemented in any computing environment in which one or more peripheral devices are coupled to the host device such as industrial warehouse manufacturing and healthcare environments.

The POS system may comprise a host device e.g. a register a computer etc. and one or more peripheral devices coupled thereto e.g. a keyboard a scanner a display a keypad a mouse a printer a magnetic strip smart card interface an image based scanner a laser based scanner a linear CCD scanner a contact scanner an RFID reader and a magnetic strip reader etc. . The host device may be a stand alone register computer thin client device network bootable device mobile device etc. In the exemplary embodiment the register may be a PC laptop or other computing unit which includes an operating system applications and drivers and is enabled for communication on the network . That is the register may include an Ethernet port for communicating on a LAN a radio frequency transceiver for communicating on a wireless LAN and or other network connection. The register further includes one or more host peripheral interfaces for coupling to the peripheral device s . The hardware port used for attaching each of the peripheral devices may be selected based on a corresponding interface used thereby. For example the keyboard and the scanner may connect to USB ports or Bluetooth connections on the register while the printer and the display may utilize RS 232 ports. While the exemplary embodiment will be described with reference to the USB ports those skilled in the art will understand that the present invention may be implemented for any host device with at least one host peripheral interface.

As is common in retail environments the peripheral devices may be interchangeably used with the POS system . For example the peripheral devices may be added removed re installed upgraded temporarily removed for maintenance etc. To save costs a retail store operator may ask a store employee to install and configure the peripheral devices. The installation may typically require a hardware connection e.g. via the hardware port and a software connection e.g. installing a driver for the peripheral device on the register . The software connection may also require configuring software settings such as drive mapping data routing etc. An untrained employee may encounter several problems with these tasks requiring help from in house or contracted IT personnel. In either instance costs are incurred by the retail store operator because manual installation of the peripheral device requires technical understanding which a typical store employee may not possess.

According to the present invention the POS system may include an application or a driver embodied in software and or hardware which controls configuration of the peripheral device. The driver of the POS system may be a Remote Scanner Management RSM driver. The RSM driver may be configured to control devices such as for example removable peripheral devices that may be connected and disconnected from the POS system . As will be discussed in further detail below the RSM driver may be associated with various protocols to enable the controlling of the removable devices.

According to the exemplary embodiments of the present invention the driver detects a connection of peripheral devices to the register . The peripheral device may be configured to virtually appear to the driver as a compound device. For example the driver may virtually view the connected peripheral device as two or more separate devices. The first device that the peripheral device may appear to the POS system may be a human interface device HID keyboard. The HID keyboard may include a broadly defined protocol that may conform easily to a variety of drivers installed for the POS system . Thus the peripheral device appearing as the HID keyboard may enable a substantially guaranteed conforming with the POS system thereby enabling the user to enter data inputs. The second device that the peripheral device may appear to the POS system may be as a bidirectional communications device. The bidirectional communications device may include a protocol that enables the bidirectional communications. For example the protocol may be a standard one such as CDC Serial Emulation. In another example the protocol may be a proprietary one i.e. non standard and may also be product specific such as Special Needs Application Programming Interface SNAPI .

By providing a virtual appearance to the POS system the HID portion may be generally accepted using USB hosts. Furthermore the bi directional communications portion may be used to enable an active managing and controlling of the peripheral device via the RSM driver. Those skilled in the art will understand that when a peripheral device is configured with the HID mode the user may be prevented from personalizing the peripheral device as desired and will be forced to use the configurations set for the peripheral device as dictated by the HID mode.

While the exemplary embodiments describe the application as residing in the driver those skilled in the art will understand that the application may reside within the register outside of the driver at the server on a removable storage medium etc.

As is known in the art when the peripheral device e.g. the scanner is coupled to the register via the USB port the register may request that the scanner describe itself by supplying enumeration data. While the exemplary embodiment will be described with reference to the scanner those skilled in the art will understand that the other embodiments may reference any of the peripheral devices described herein and or commonly known in the art. The enumeration data may be included in a series of fields which are defined in the host peripheral interface such as a USB standard or a Bluetooth standard. The enumeration data provided in for example a device class field a device subclass field and or a device protocol field may be used by the register to determine whether the scanner is utilizing a conforming protocol that is compatible with the driver of the register .

The register may utilize conventional host side USB software to determine the communication protocol utilized by the scanner when virtually appearing as the second device to the register . That is the USB standard defines several device class types such as for example a mass storage device a HID etc. In the exemplary embodiment the register determines the communication protocol used by the virtual second device of the scanner based on the enumeration data provided. For example the enumeration data from the scanner may be indicative of a USB HID keyboard device which utilizes a protocol. When the RSM driver of the register recognizes the protocol the register works with the scanner since the protocol is supported by the RSM driver. When the RSM driver of the register does not recognize the protocol the RSM driver requests the scanner to re enumerate to a supported protocol thereby enabling the register to work with the scanner .

In an exemplary embodiment where the register does not recognize the protocol and the scanner is incapable of being re enumerated to a supported protocol a user may abort the procedure. The user may be required to manually abort the procedure thereby providing an indication that the scanner is incompatible with the register . It should be noted that the RSM driver may be updated in a variety of manners so that the procedure may not be required to be aborted. In a first example if the register is associated with a network including a database with a most current list of available protocols the RSM driver residing on the register may be updated to incorporate all available protocols. In such an exemplary embodiment an overall reduction of procedures that are aborted is achieved. In a second example the RSM driver of the register may be configured to support a preset number of protocols. The preset number may relate to popularly used protocols by the scanner . When a protocol that is not supported by the RSM driver is used by the scanner the RSM driver may also be manually updated for example via the connection to the network receiving a storage device that includes additional supported protocols etc.

It should be noted that various steps may be assumed to have already been performed prior to the method . For example the RSM driver may have already been installed on the register in any conventional manner. The driver may be installed from a removable storage medium e.g. floppy CD DVD pen drive etc. or downloaded from the server .

In step the RSM driver detects when the peripheral device such as the scanner is coupled to the register . As discussed above the register may include a connection port such as a USB. Through conventional detection methods the RSM driver may determine when the peripheral device has been connected to the register . Furthermore as discussed above when the RSM driver detects the coupling of the peripheral device the peripheral device virtually appears as a compound device.

A subsequent step to step may be for a receiving of enumeration data that is supplied by the peripheral device to the register . The enumeration data may indicate that the peripheral device is a particular type of device. According to the exemplary embodiments of the present invention the enumeration data that is provided may indicate that a HID and a bi directional communications device have been coupled.

In step the driver determines a protocol used by the peripheral device. In the exemplary embodiment the driver monitors the enumerations on the host peripheral interface. As stated above after the scanner is coupled to the register the enumeration data of the scanner is requested by the register . Using the enumeration data in the device class device subclass and or device protocol fields the driver determines the protocol used by the virtual bidirectional communications device of the scanner .

In step a determination is made whether the protocol used by the virtual bidirectional communications device is compatible with the RSM driver of the scanner . As discussed above the RSM driver may be configured to be compatible with a predetermined list of protocols. For example the RSM driver may be configured to be compatible with standard protocols and certain non standard protocols.

When the protocol used by the virtual bidirectional communications device is compatible with the RSM driver the method continues to step . In step a bidirectional communications link is established between the scanner and the register . Once the link is established the determined protocol that is compatible with the RSM driver enables data to be properly exchanged between the scanner and the register .

When the protocol used by the virtual bidirectional communications device is incompatible with the RSM driver the method may end. In one exemplary embodiment the user may be prompted for a manual canceling of the procedure for establishing a communication link between the register and the scanner . In a second exemplary embodiment the register may request the scanner to re enumerate to a supported protocol.

In step a determination may be made whether an update is available for the RSM driver. The update for the RSM driver may be determined from a variety of sources. In a first example the update may be provided from a remote source such as a network resource e.g. a database of the network . In a second example the update may be provided from a local source. The local source may be a memory of the register that includes the various updates not currently installed for the RSM driver. The local source may also be a separate resource possessed by the user such as a CD ROM containing various updates. When no update is available for the RSM driver e.g. the protocol is proprietary and only a specified driver is compatible therewith the method may end. As discussed above the user may be prompted to provide a manual abort for the procedure of establishing the communication link between the scanner and the register .

If it is determined that the update is available the method continues to step where a determination is made whether the source for the update is a remote source. As discussed above the register may be communicatively connected to the network . A network resource such as the server and or a database of the network may be the remote source that is configured to provide the update. If the update is available via the remote source the method continues to step where the register connects to the network if not already connected . The register may connect to the network through a variety of manners. In a first example the register may include a wireless interface to communicatively connect to the network when disposed in an operating area provided by the network . In a second example the register may include a wired connection to the server . In step the register receives the update for the RSM driver from the network . If the update is available via the local source the method continues to step where the register receives the update locally such as from a memory of the register a local source e.g. CD ROM etc.

Once the register receives the update remotely via steps or locally via step the method continues to step where the scanner may be re enumerated according to the specifications of the updated protocol. The received update of either step or step may correspond to the protocol used by the virtual bidirectional communications device. Thus by re enumerating the scanner according to the updated protocol the RSM driver may now be compatible with the protocol determined in step . Consequently the bidirectional communications link may be established in step between the register and the scanner .

Those skilled in the art will understand that the above described exemplary embodiments may be implemented in any number of manners including as a separate software module as a combination of hardware and software etc. For example the re enumeration of the RSM driver may be performed by a program containing lines of code that when compiled may be executed on a processor.

It will be apparent to those skilled in the art that various modifications may be made in the present invention without departing from the spirit or scope of the invention. Thus it is intended that the present invention cover the modifications and variations of this invention provided they come within the scope of the appended claims and their equivalents.

