---

title: Method of pattern recognition using noise reduction uncertainty
abstract: A method and apparatus are provided for using the uncertainty of a noise-removal process during pattern recognition. In particular, noise is removed from a representation of a portion of a noisy signal to produce a representation of a cleaned signal. In the meantime, an uncertainty associated with the noise removal is computed and is used with the representation of the cleaned signal to modify a probability for a phonetic state in the recognition system. In particular embodiments, the uncertainty is used to modify a probability distribution, by increasing the variance in each Gaussian distribution by the amount equal to the estimated variance of the cleaned signal, which is used in decoding the phonetic state sequence in a pattern recognition task.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07769582&OS=07769582&RS=07769582
owner: Microsoft Corporation
number: 07769582
owner_city: Redmond
owner_country: US
publication_date: 20080725
---
The present application is a divisional of and claims priority from U.S. patent application Ser. No. 11 435 254 filed May 16 2006 and entitled METHOD OF PATTERN RECOGNITION USING NOISE REDUCTION UNCERTAINTY which was a divisional of and claimed priority from U.S. patent application Ser. No. 10 152 127 filed on May 20 2002 and entitled METHOD OF PATTERN RECOGNITION USING NOISE REDUCTION UNCERTAINTY now U.S. Pat. No. 7 103 540.

The present invention relates to pattern recognition. In particular the present invention relates to performing pattern recognition after noise reduction.

A pattern recognition system such as a speech recognition system takes an input signal and attempts to decode the signal to find a pattern represented by the signal. For example in a speech recognition system a speech signal often referred to as a test signal is received by the recognition system and is decoded to identify a string of words represented by the speech signal.

To decode the incoming test signal most recognition systems utilize one or more models that describe the likelihood that a portion of the test signal represents a particular pattern. Examples of such models include Neural Nets Dynamic Time Warping segment models and Hidden Markov Models.

Before a model can be used to decode an incoming signal it must be trained. This is typically done by measuring input training signals generated from a known training pattern. For example in speech recognition a collection of speech signals is generated by speakers reading from a known text. These speech signals are then used to train the models.

In order for a model to work optimally the signals used to train the model should be similar to the eventual test signals that are decoded. In particular it is desirable that the training signals contain the same amount and type of noise as the test signals that are decoded.

Typically the training signal is collected under clean conditions and is considered to be relatively noise free. To achieve this same low level of noise in the test signal many prior art systems apply noise reduction techniques to the testing data. These noise reduction techniques result in a cleaned test signal that is then used during pattern recognition. In most systems the noise reduction technique produces a sequence of multi dimensional feature vectors with each feature vector representing a frame of a noise reduced signal.

Unfortunately noise reduction techniques do not work perfectly and as a result there is some inherent uncertainty in the cleaned signal. In the past there have been two general techniques for dealing with such uncertainty. The first has been to ignore the uncertainty and treat the noise reduction process as being perfect. Since this ignores the true state of the recognition system it results in recognition errors that could be avoided.

The other prior art technique for dealing with uncertainty in noise reduction is to identify frames of the input signal where the noise reduction technique is likely to have performed poorly. In these frames dimensions of the feature vectors that are likely in error are marked by the noise reduction system so that they are not used during recognition. Thus the feature vector components that have more than a predetermined amount of uncertainty are completely ignored during decoding. Although such systems acknowledge uncertainty in noise reduction the technique of completely ignoring a component treats the component as providing no information that would be helpful during recognition. This is highly unlikely because even with a significant amount of uncertainty the noise reduced component still provides some information that would be helpful during recognition.

In light of this a technique is needed that effectively uses the uncertainty in noise reduction during pattern recognition.

A method and apparatus are provided for using the uncertainty of a noise removal process during pattern recognition. In particular noise is removed from a representation of a portion of a noisy signal to produce a representation of a cleaned signal. An uncertainty associated with the noise removal is identified and is used with the representation of the cleaned signal to identify a probability for a phonetic state. In particular embodiments the uncertainty is used to modify a probability distribution that is used in determining the probability of the phonetic state.

The invention is operational with numerous other general purpose or special purpose computing system environments or configurations. Examples of well known computing systems environments and or configurations that may be suitable for use with the invention include but are not limited to personal computers server computers hand held or laptop devices multiprocessor systems microprocessor based systems set top boxes programmable consumer electronics network PCs minicomputers mainframe computers telephony systems distributed computing environments that include any of the above systems or devices and the like.

The invention may be described in the general context of computer executable instructions such as program modules being executed by a computer. Generally program modules include routines programs objects components data structures etc. that perform particular tasks or implement particular abstract data types. The invention may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment program modules may be located in both local and remote computer storage media including memory storage devices.

With reference to an exemplary system for implementing the invention includes a general purpose computing device in the form of a computer . Components of computer may include but are not limited to a processing unit a system memory and a system bus that couples various system components including the system memory to the processing unit . The system bus may be any of several types of bus structures including a memory bus or memory controller a peripheral bus and a local bus using any of a variety of bus architectures. By way of example and not limitation such architectures include Industry Standard Architecture ISA bus Micro Channel Architecture MCA bus Enhanced ISA EISA bus Video Electronics Standards Association VESA local bus and Peripheral Component Interconnect PCI bus also known as Mezzanine bus.

Computer typically includes a variety of computer readable media. Computer readable media can be any available media that can be accessed by computer and includes both volatile and nonvolatile media removable and non removable media. By way of example and not limitation computer readable media may comprise computer storage media and communication media. Computer storage media includes both volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical disk storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by computer . Communication media typically embodies computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term modulated data signal means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media includes wired media such as a wired network or direct wired connection and wireless media such as acoustic RF infrared and other wireless media. Combinations of any of the above should also be included within the scope of computer readable media.

The system memory includes computer storage media in the form of volatile and or nonvolatile memory such as read only memory ROM and random access memory RAM . A basic input output system BIOS containing the basic routines that help to transfer information between elements within computer such as during start up is typically stored in ROM . RAM typically contains data and or program modules that are immediately accessible to and or presently being operated on by processing unit . By way of example and not limitation illustrates operating system application programs other program modules and program data .

The computer may also include other removable non removable volatile nonvolatile computer storage media. By way of example only illustrates a hard disk drive that reads from or writes to non removable nonvolatile magnetic media a magnetic disk drive that reads from or writes to a removable nonvolatile magnetic disk and an optical disk drive that reads from or writes to a removable nonvolatile optical disk such as a CD ROM or other optical media. Other removable non removable volatile nonvolatile computer storage media that can be used in the exemplary operating environment include but are not limited to magnetic tape cassettes flash memory cards digital versatile disks digital video tape solid state RAM solid state ROM and the like. The hard disk drive is typically connected to the system bus through a non removable memory interface such as interface and magnetic disk drive and optical disk drive are typically connected to the system bus by a removable memory interface such as interface .

The drives and their associated computer storage media discussed above and illustrated in provide storage of computer readable instructions data structures program modules and other data for the computer . In for example hard disk drive is illustrated as storing operating system application programs other program modules and program data . Note that these components can either be the same as or different from operating system application programs other program modules and program data . Operating system application programs other program modules and program data are given different numbers here to illustrate that at a minimum they are different copies.

A user may enter commands and information into the computer through input devices such as a keyboard a microphone and a pointing device such as a mouse trackball or touch pad. Other input devices not shown may include a joystick game pad satellite dish scanner or the like. These and other input devices are often connected to the processing unit through a user input interface that is coupled to the system bus but may be connected by other interface and bus structures such as a parallel port game port or a universal serial bus USB . A monitor or other type of display device is also connected to the system bus via an interface such as a video interface . In addition to the monitor computers may also include other peripheral output devices such as speakers and printer which may be connected through an output peripheral interface .

The computer may operate in a networked environment using logical connections to one or more remote computers such as a remote computer . The remote computer may be a personal computer a hand held device a server a router a network PC a peer device or other common network node and typically includes many or all of the elements described above relative to the computer . The logical connections depicted in include a local area network LAN and a wide area network WAN but may also include other networks. Such networking environments are commonplace in offices enterprise wide computer networks intranets and the Internet.

When used in a LAN networking environment the computer is connected to the LAN through a network interface or adapter . When used in a WAN networking environment the computer typically includes a modem or other means for establishing communications over the WAN such as the Internet. The modem which may be internal or external may be connected to the system bus via the user input interface or other appropriate mechanism. In a networked environment program modules depicted relative to the computer or portions thereof may be stored in the remote memory storage device. By way of example and not limitation illustrates remote application programs as residing on remote computer . It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used.

Memory is implemented as non volatile electronic memory such as random access memory RAM with a battery back up module not shown such that information stored in memory is not lost when the general power to mobile device is shut down. A portion of memory is preferably allocated as addressable memory for program execution while another portion of memory is preferably used for storage such as to simulate storage on a disk drive.

Memory includes an operating system application programs as well as an object store . During operation operating system is preferably executed by processor from memory . Operating system in one preferred embodiment is a WINDOWS CE brand operating system commercially available from Microsoft Corporation. Operating system is preferably designed for mobile devices and implements database features that can be utilized by applications through a set of exposed application programming interfaces and methods. The objects in object store are maintained by applications and operating system at least partially in response to calls to the exposed application programming interfaces and methods.

Communication interface represents numerous devices and technologies that allow mobile device to send and receive information. The devices include wired and wireless modems satellite receivers and broadcast tuners to name a few. Mobile device can also be directly connected to a computer to exchange data therewith. In such cases communication interface can be an infrared transceiver or a serial or parallel communication connection all of which are capable of transmitting streaming information.

Input output components include a variety of input devices such as a touch sensitive screen buttons rollers and a microphone as well as a variety of output devices including an audio generator a vibrating device and a display. The devices listed above are by way of example and need not all be present on mobile device . In addition other input output devices may be attached to or found with mobile device within the scope of the present invention.

In the discussion below the present invention is described with reference to speech recognition to facilitate understanding of the invention. However those skilled in the art will recognize that the present invention is not limited to speech recognition and may be used in any pattern recognition system.

The goal of speech recognition is to convert a speech signal into a sequence of words. To do this the speech signal is typically divided into overlapping frames of speech and each frame is converted into a feature vector y which describes the content of the frame. During recognition also referred to as decoding an acoustic model is used to identify a most likely sequence of phonetic states that could be represented by the feature vectors. The resulting sequence of phonetic states represents the decoded sequence of words.

Many acoustic models evaluate a mixture of Gaussians to determine the probability of any one phonetic state. Thus at each frame a mixture of Gaussians is evaluated for each phonetic state to identify the most likely phonetic state for the frame. The evaluation of each Gaussian can be viewed as determining p y m which is the probability of the feature vector y given the mixture component m for the phonetic state.

When using noise reduction in combination with speech recognition a noisy input feature vector y is converted into a cleaned feature vector circumflex over x by the noise reduction system. The cleaned feature vector represents an estimate of an actual clean feature vector x. The cleaned feature vector circumflex over x is then applied as an input signal to the speech recognition system which attempts to identify a most likely phonetic state given the cleaned feature vector.

Without noise corruption the observation vector y is the same as the clean vector x. As such evaluating a Gaussian for a mixture component for a clean observation vector p y m is the same as evaluating the probability of clean vector x given mixture component m p x .

However when the observation vector is corrupted by noise and a noise reduction system is used the input to the recognizer is no longer the ideal clean vector x but instead is the cleaned feature vector circumflex over x which is only an estimate of x. In the past it has been common to simply treat the cleaned feature vector circumflex over x as if it were equal to the ideal clean feature vector x. In such cases evaluating a Gaussian for a mixture component p y m has been approximated by determining the probability p circumflex over x m .

Under the present invention a more rigorous approach is used in which the probability p y m is determined by marginalizing a joint conditional probability density function p y x m over all possible unseen clean speech vectors. In terms of an equation EQ. 1

To make the computations associated with EQ. 2 easier to implement the probability p y x m is assumed to be independent of m so that it becomes p y x . This probability is then modeled as a Gaussian distribution that describes the certainty of the noise removal process. In particular EQ. 3 where the distribution is defined across the cleaned feature vectors circumflex over x and has a mean equal to the ideal clean feature vector x and a variance that represents the variance associated with the noise removal process. Note that in EQ. 3 a simplified notation has been used to represent the Gaussian distribution as a single Gaussian across the entire vector. In fact there is a separate Gaussian with its own mean and variance for each dimension of the feature vector. For example EQ. 4 where yis component of the noisy feature vector xis component of the clean feature vector circumflex over x is component of the cleaned feature vector and is the variance also referred to as uncertainty associated with the noise removal process for component of the feature vectors.

The prior probability p x m is also modeled as a collection of Gaussian distributions one for each component of the vector such that EQ. 5 where is the mean of the prior distribution and is the variance of the distribution for component of the feature vectors.

Thus under the framework of the present invention the variance of the distribution used in the acoustic model is a combination of the variance associated with the prior model and the variance or uncertainty associated with the noise removal process . As a result if the uncertainty associated with the noise removal process is high for a component there will be little difference between the probabilities generated for each phonetic state. As a result the component will have little effect on the decoding of the phonetic state sequence. However if the uncertainty of the noise removal process is small the acoustic models for the various phonetic states will generate distinctive probabilities for the component and the component will thereby strongly influence the selection of the phonetic state.

Under one embodiment of the present invention the uncertainty of the noise removal process is selected based on the noisy input signal. In particular the noise reduction module uses the noisy input vector to create a noise reduced vector and to select an uncertainty for each component of the noise reduced vector. The noise reduced vector and a vector containing the various uncertainties is then passed to the recognizer. Each component of the noise reduced vector is applied to the distribution of EQ. 6 which is defined in part by the uncertainty passed in for that component. The resulting probabilities are then used to perform the decoding for finding an optimal phonetic state sequence.

One example of a noise reduction system that may be used to practice the present invention is a Stereo Piecewise Linear Compensation for Environment SPLICE system. Under SPLICE noise reduction is performed by applying a correction vector r to the noisy input vector y to form the cleaned vector circumflex over x .

A method for training the correction vectors under one embodiment of the present invention is described below with reference to the flow diagram of and the block diagram of . A method of applying the correction vectors and determining uncertainty vectors for noisy feature vectors is described below with reference to the flow diagram of .

The method of training correction vectors begins in step of where a clean channel signal is converted into a sequence of feature vectors. To do this a speaker of speaks into a microphone which converts the audio waves into electrical signals. The electrical signals are then sampled by an analog to digital converter to generate a sequence of digital values which are grouped into frames of values by a frame constructor . In one embodiment A to D converter samples the analog signal at 16 kHz and 16 bits per sample thereby creating 32 kilobytes of speech data per second and frame constructor creates a new frame every 10 milliseconds that includes 25 milliseconds worth of data.

Each frame of data provided by frame constructor is converted into a feature vector by a feature extractor . In one embodiment each feature vector includes a set of static coefficients that describe the static aspects of a frame of speech a set of delta coefficients that describe current rates of change of the static coefficients and a set of acceleration coefficients that describe the current rates of change of the delta coefficients. Thus the feature vectors capture the dynamic aspects of the input speech signal by indicating how the speech signal is changing over time. Methods for identifying such feature vectors are well known in the art and include 39 dimensional Mel Frequency Cepstrum Coefficients MFCC extraction with 13 static coefficients 13 delta coefficients and 13 acceleration coefficients.

In step of a noisy channel signal is converted into feature vectors. Although the conversion of step is shown as occurring after the conversion of step any part of the conversion may be performed before during or after step under the present invention. The conversion of step is performed through a process similar to that described above for step .

In the embodiment of the process of step begins when the same speech signal generated by speaker is provided to a second microphone . This second microphone also receives an additive noise signal from an additive noise source . Microphone converts the speech and noise signals into a single electrical signal which is sampled by an analog to digital converter . The sampling characteristics for A D converter are the same as those described above for A D converter . The samples provided by A D converter are collected into frames by a frame constructor which acts in a manner similar to frame constructor . These frames of samples are then converted into feature vectors by a feature extractor which uses the same feature extraction method as feature extractor .

In other embodiments microphone A D converter frame constructor and feature extractor are not present. Instead the additive noise is added to a stored version of the speech signal at some point within the processing chain formed by microphone A D converter frame constructor and feature extractor . For example the analog version of the clean channel signal may be stored after it is created by microphone . The original clean channel signal is then applied to A D converter frame constructor and feature extractor . When that process is complete an analog noise signal is added to the stored clean channel signal to form a noisy analog channel signal. This noisy signal is then applied to A D converter frame constructor and feature extractor to form the feature vectors for the noisy channel signal.

In other embodiments digital samples of noise are added to stored digital samples of the clean channel signal between A D converter and frame constructor or frames of digital noise samples are added to stored frames of clean channel samples after frame constructor . In still further embodiments the frames of clean channel samples are converted into the frequency domain and the spectral content of additive noise is added to the frequency domain representation of the clean channel signal. This produces a frequency domain representation of a noisy channel signal that can be used for feature extraction.

The feature vectors for the noisy channel signal and the clean channel signal are provided to a noise reduction trainer in . At step of noise reduction trainer groups the feature vectors for the noisy channel signal into mixture components. This grouping can be done by grouping similar noisy feature vectors together using a maximum likelihood training technique or by grouping feature vectors that represent a temporal section of the speech signal together. Those skilled in the art will recognize that other techniques for grouping the feature vectors may be used and that the two techniques listed above are only provided as examples.

After the feature vectors of the noisy channel signal have been grouped into mixture components noise reduction trainer generates a set of distribution values that are indicative of the distribution of the feature vectors within the mixture component. This is shown as step in . In many embodiments this involves determining a mean vector and a standard deviation vector for each vector component in the feature vectors of each mixture component. In an embodiment in which maximum likelihood training is used to group the feature vectors the means and standard deviations are provided as by products of identifying the groups for the mixture components.

Once the means and standard deviations have been determined for each mixture component the noise reduction trainer determines a correction vector r for each mixture component m at step of . Under one embodiment the vector components of the correction vector for each mixture component are determined using a weighted least squares estimation technique. Under this technique the correction vector components are calculated as 

Where ris the ivector component of a correction vector r for mixture component m yis the ivector component for the feature vector yin the tframe of the noisy channel signal xis the ivector component for the feature vector in the tframe of the clean channel signal T is the total number of frames in the clean and noisy channel signals and p is the probability of the mmixture component given the feature vector for the tframe of the noisy channel signal.

In equations 7 and 8 the p m y term provides a weighting function that indicates the relative relationship between the mmixture component and the current frame of the channel signals.

The probability of the noisy feature vector given the mmixture component p y m can be determined using a normal distribution based on the distribution values determined for the mmixture component in step of . In one embodiment the prior probability of the mmixture component p m is simply the inverse of the number of mixture components. For example in an embodiment that has 256 mixture components the probability of any one mixture component is 1 256.

After a correction vector and correction error have been determined for each mixture component at step the process of training the noise reduction system of the present invention is complete. The correction vectors and distribution values for each mixture component are then stored in a noise reduction parameter storage of .

Once a correction vector and its expected mean squared error have been determined for each mixture they may be used to perform noise reduction and to identify the uncertainty of the noise removal process.

Where circumflex over m is the best matching mixture component cis a weight factor for the mmixture component N y is the value for the individual noisy feature vector y from the normal distribution generated for the mean vector and the variance vector of the mmixture component. In most embodiments each mixture component is given an equal weight factor c.

Once the best mixture component for each input feature vector has been identified at step the corresponding correction vector for those mixture components is used with the noisy feature vector to produce the cleaned feature vector at step and to determine the uncertainty associated with the best mixture component at step .

To perform steps and distribution parameters associated with the probability p y x are determined. This probability can be calculated as 

Using the distribution of EQ. 12 for p x y m and a Gaussian distribution having a mean and a variance for p y m equation 15 becomes 

In order to simplify the calculation of EQ. 16 the mixture of Gaussians is approximated by a single Gaussian of the form 

Equation 22 defines the cleaned feature vector circumflex over x and equation 23 defines the uncertainty in the noise reduction process which are both provided to the recognizer to be used in step to identify a phonetic state as discussed above in connection with EQ. 6. Note that because the uncertainty of the noise reduction process as defined in EQ. 23 is not dependent on the observed noisy feature vector the uncertainty under this embodiment may be trained at the time the correction vector and correction error are trained instead of after the noisy feature vector is received. In such embodiments a separate uncertainty is trained for each mixture component and the uncertainty is selected based on the best matching mixture component for the observed noisy feature vector. This eliminates the need to compute all terms in the sum of EQ 21 and it approximates the sum while drastically reducing computational complexity.

In a speaker either a trainer or a user speaks into a microphone . Microphone also receives additive noise from one or more noise sources . The audio signals detected by microphone are converted into electrical signals that are provided to analog to digital converter .

Although additive noise is shown entering through microphone in the embodiment of in other embodiments additive noise may be added to the input speech signal as a digital signal after A to D converter .

A to D converter converts the analog signal from microphone into a series of digital values. In several embodiments A to D converter samples the analog signal at 16 kHz and 16 bits per sample thereby creating 32 kilobytes of speech data per second. These digital values are provided to a frame constructor which in one embodiment groups the values into 25 millisecond frames that start 10 milliseconds apart.

The frames of data created by frame constructor are provided to feature extractor which extracts a feature from each frame. The same feature extraction that was used to train the noise reduction parameters the correction vectors means and standard deviations of the mixture components is used in feature extractor .

The feature extraction module produces a stream of feature vectors that are each associated with a frame of the speech signal. This stream of feature vectors is provided to noise reduction module of the present invention which uses the noise reduction parameters stored in noise reduction parameter storage to reduce the noise in the input speech signal using the techniques discussed above. In addition noise reduction module identifies a uncertainty associated with the noise removal for the current frame.

For each frame the output of noise reduction module is a cleaned feature vector and an uncertainty associated with the cleaned feature vector. If the input signal is a training signal each of cleaned feature vectors is provided to a trainer which uses the cleaned feature vectors and a training text to train an acoustic model . Techniques for training such models are known in the art and a description of them is not required for an understanding of the present invention.

If the input signal is a test signal the cleaned feature vectors and the respective uncertainties are provided to a decoder which identifies a most likely sequence of words based on the stream of feature vectors a lexicon a language model the acoustic model and the uncertainty of the noise removal process as discussed above in connection with EQ. 6.

The most probable sequence of hypothesis words is provided to a confidence measure module . Confidence measure module identifies which words are most likely to have been improperly identified by the speech recognizer based in part on a secondary acoustic model not shown . Confidence measure module then provides the sequence of hypothesis words to an output module along with identifiers indicating which words may have been improperly identified. Those skilled in the art will recognize that confidence measure module is not necessary for the practice of the present invention.

Although depicts a speech recognition system the present invention may be used in any pattern recognition system and is not limited to speech.

Although the present invention has been described with reference to particular embodiments workers skilled in the art will recognize that changes may be made in form and detail without departing from the spirit and scope of the invention.

