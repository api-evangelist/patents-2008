---

title: System for comparing content
abstract: A method for comparing content can include receiving first content generated by an author over a communications medium and comparing at least a portion of the first content to at least a portion of second content using one or more content-matching techniques to detect matched content. The method may further include providing content-matching feedback over the communications medium. The content-matching feedback can include suggestions for changing at least a portion of the first content based on the matched content. In some implementations, the first content can include a document written by the author, and the second content can include one or more publications.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08620872&OS=08620872&RS=08620872
owner: Amazon Technologies, Inc.
number: 08620872
owner_city: Reno
owner_country: US
publication_date: 20080910
---
The practice of generating content for publication such as writing articles Web logs blogs etc. often involves describing or incorporation aspects of content generated by other authors. Authors may find such referenced content by researching publications which can include books periodicals online articles blogs and the like. Typically authors are encouraged or required to directly reference such as through citations or bibiliographies any publications that they quote or paraphrase in their published content. References to publications give attribution to the originators of thoughts and ideas. References can also include identification information that enable readers to find the publications should they wish to check facts conduct further research or the like.

Some authors may omit references to others works either intentionally or unintentionally. By doing so an author may be committing plagiarism copyright infringement and other acts that may give rise to legal and or social consequences. In its most extreme form plagiarism can include copying of an entire publication or unpublished work. More often authors may make attribution errors such as forgetting to cite others works improperly citing others works or the like.

Some currently available computer systems exist for detecting plagiarism in papers. These currently available systems typically allow authors such as students to submit papers for plagiarism checking. When these systems are used in school settings a typical system is a closed system that analyzes a set of submitted papers in a similar manner. For example such a system may be set to analyze a writing assignment for an entire college class. The typical closed system might send a report to an administrator such as a teacher describing the plagiarism detected in the submitted papers. Such a closed system may not however provide feedback to the author to assist him or her with correcting attribution errors in the paper and is not likely configurable by individual authors of the system e.g. the student authors in terms of how the paper is analyzed for possible detection of plagiarism.

In certain embodiments systems and methods are provided for content matching that allow authors such as students and researchers to submit documents for content matching feedback. These systems and methods can provide reports to the authors describing any attribution errors in their documents. In addition in certain embodiments the reports can recommend additional publications for research and can provide authors with access to these publications. Certain embodiments of the systems and methods also perform many other functions.

As used herein the term document in addition to having its broad ordinary meaning can include any written work paper digital representation of text and or other multimedia software software code combinations of the same and the like.

For purposes of illustration the methods or processes disclosed herein are described primarily in the context of a network resource such as a web site or network based service. However the disclosed processes need not be implemented as part of or in conjunction with a web site. For example the processes described herein can be implemented as one or more applications on any processor based system whether networked or not.

These systems and methods will now be described with reference to the drawings summarized above. Throughout the drawings reference numbers may be re used to indicate correspondence between referenced elements. The drawings associated descriptions and specific implementation are provided to illustrate embodiments of the inventions described herein and not to limit the scope thereof.

In addition methods and processes described herein are not limited to any particular sequence and the blocks or states relating thereto can be performed in other sequences that are appropriate. For example described blocks or states may be performed in an order other than that specifically disclosed or multiple blocks or states may be combined in a single block or state. Moreover the various modules of the systems described herein can be implemented as software applications hardware and or software modules or components on one or more computers such as servers. While the various modules are illustrated separately they may share some or all of the same underlying logic or code.

Referring to an embodiment of a network environment for generating content matching feedback is shown. The network environment includes a content matching system that can be implemented using one or more computer systems such as servers. In addition the content matching system may be implemented as a network resource such as a web site or the like. In certain embodiments the content matching system enables authors to submit documents for content matching feedback.

The content matching system may be accessed by authors from author systems . Although shown as personal computers for purposes of illustration the author systems may include various other types of computing devices such as web pads personal digital assistants PDAs mobile phones set top television boxes media players laptop computers tablets desktop computers electronic book readers kiosks and the like.

The content matching system includes one or more servers for communicating with the author systems over a communications medium which may be a network such as the Internet a local or wide area network LAN or WAN intranet or the like. The servers can be web servers in some embodiments. As web servers the servers can process Hypertext Transfer Protocol HTTP and other protocol requests received over the communications medium from the author systems . Additional protocols and components for providing communication between the author systems and servers via the communication medium may be provided in various implementations.

In response to requests from the author system s the servers can dynamically generate content by accessing a repository of templates which can include display templates that specify the layout and format of author interface displays such as web pages widgets Iframes combinations of the same and the like. For example the servers can generate author interfaces for submitting documents for providing content matching feedback for providing research recommendations for purchasing publications or portions thereof and the like. The servers can populate these templates with information that may be dependent on the particular author system accessing a template as may be determined for example using browser cookies or a login procedure.

In certain embodiments authors can submit or upload content such as documents from their author systems to the servers to receive content matching feedback. For example the authors may use browser or other application software installed on their systems to upload the documents. In response to receiving a document from an author system the servers may transmit the document to a content matching service . The servers may in turn retrieve content matching feedback from the content matching service and provide this feedback to the author systems .

Some of the author systems such as the author system may include a plug in for communicating with the content matching system . The plug in can be a software component that interfaces with a document creation program e.g. a word processor . The plug in can access certain features of the content matching system from within the author s document creation program. In response to a request for content matching feedback from the author for example the plug in can use one or more application programming interfaces APIs to submit web service calls to the content matching service . In sending web service calls the plug in may submit the author s document and a request for content matching feedback. The servers may in turn retrieve content matching feedback from the content matching service and provide this feedback to the plug in . When the plug in receives the content matching feedback from the servers the plug in can display the feedback within the author s document creation program or in a separate author interface. Web service calls to the content matching service may also be submitted by applications running in the communications medium such as network based word processing applications.

The content matching service can be a software service such as a web service that analyzes the text of documents provides feedback on attribution generates recommendations for further research and the like. In the depicted embodiment the content matching service includes a content matching engine and a research recommender .

The content matching engine can be a software component that analyzes documents submitted by authors for originality. In certain embodiments the content matching engine uses one or more natural language processing techniques to analyze text within documents. These techniques might include preliminary steps such as removing common stop words e.g. articles word stemming and the like. The natural language processing techniques may further include pattern matching algorithms for comparing the text of the document to the text of other publications. One example pattern matching algorithm that may be used is latent semantic analysis.

In certain embodiments the content matching engine can compare at least a portion of the text of the document with at least a portion of the text of one or more publications stored in a publication data repository . The content matching engine can compare the entire document with the publications or the content matching engine can compare a part of the document with the publications. For example the content matching engine may remove vowels from the document and compare the consonants in the document with consonants in the publications. In another example the content matching engine may process the document to identify the most statistically significant phrases or terms and compare the results. Alternatively the content matching engine may compare a representation such as a transformation of at least part of the document with a like representation of at least some of the publications. For instance the content matching engine may use a cryptographic hash function to generate a signature from at least a portion of the document and compare the signature with signatures of the publications. One example hash function that may be used is the MD5 algorithm.

The publication data repository can include publications from many sources. The publications can include electronic copies of books periodicals webpage content blogs newspaper articles and the like. In addition the publications can include previous submission of author documents. For example the publication data repository can include data corresponding to physical publications that have been scanned. The submissions of author documents can be optional in certain embodiments. The publication data repository may also include citations to the publications. These citations may be in several citation formats. The publications may be stored as whole publications or portions thereof including consonant only portions hash signatures combinations of the same and the like.

Publications can be obtained using a catalog service in certain embodiments. The catalog service may be a software component that automatically accesses networks such as the Internet to obtain the publications e.g. by crawling web sites downloading articles from publisher s websites and the like. In addition certain publications such as books periodicals and the like may be optically scanned into the publication data repository e.g. using optical character recognition . The catalog service can periodically update the publication data in the repository in order to maintain a current or relatively current set of publication data. In addition the catalog service may generate a catalog author interface for authors to browse and purchase the publications in the repository .

As described above authors might make attribution errors such as forgetting to include citations to publications improperly citing publications or the like. By using pattern matching algorithms to match the content of the author generated document with content of publications in the publication data repository the content matching engine can determine whether the author made attribution errors. The content matching engine can provide content matching feedback to the author to report any potential plagiarism to the author. The content matching feedback might include for example suggestions on which passages of a document s text should be cited suggested citation formats corrections to citations and the like.

The content matching feedback may also include a score percentage or level to which un cited or improperly cited portions of the submitted document match the content of other existing publications. The score percentage or level may also correspond to an amount to which some or all of the content in the document matches the content of an existing publication. In one embodiment the score percentage or level of the content matching feedback may be increased if the style of the document matches the style of an existing publication. Style may include the formatting fonts and other non content features of the document. The content matching engine may provide the content matching feedback by sending an content matching feedback report or the like to the author s system via the servers . An example content matching feedback report is described below with respect to .

The content matching feedback can help authors correct attribution errors. As a result when authors submit their documents to a teacher or to another reviewing entity such as a publisher the authors may be less likely to be accused for plagiarism. In one embodiment the content matching engine can generate a certificate or the like that certifies that an author s document was checked for plagiarism or attribution errors. The content matching engine can submit this certification to an author s teacher or other reviewing entity upon the author s request or upon the teacher or reviewing entity s request. The certification may for example designate a particular score that could reflect either the strength of the match with other content or the probability of plagiarism. In other embodiments if such a score met a particular threshold the certificate may indicate whether the document has met the threshold for passing the plagiarism analysis. The certification may also include a signature generated using a cryptographic hash of the document. As hash signatures can differ substantially for documents with minor differences the signature provided with the certification can indicate which version of the document was analyzed. In such an embodiment the content matching system can operate as third party certification clearinghouse to provide and or validate certificates to requesting entities.

The content matching engine may also provide options for customizing the way that the content matching engine analyzes documents. For instance the content matching engine may provide configuration options that allow the author to specify author preferences. These configuration options may be accessed in some embodiments using the plug in of the author system . Alternatively the configuration options may be accessed using a browser or other application. The content matching engine may store these preferences in an author preference data repository . For instance the author preferences might include options for causing the content matching engine to ignore any text appearing within quotes. As another example an author might use a particular citation format such as the format espoused by the Chicago Manual of Style. The configuration options may also include feedback preferences which may allow the author to adjust the level or type of content matching feedback provided by the content matching engine .

Other examples of configuration options that an author might adjust include settings for determining according to a distance between matching terms or phrases. The distance between the terms or phrases can be measured by a number of intervening words sentences paragraphs or the like in the document. Another possible configuration option is to include settings that allow an author to set a minimum number of matching terms to reduce false content matching feedback. For example an author might wish to configure the system to ignore potential matches of phrases having a length of four words or less. Another configuration option might be to configure the system to ignore certain words such as capitalized words proper nouns catch phrases and the like. Many other configuration options may be provided in various embodiments.

The content matching engine in addition to or in place of providing configuration options may be able to learn author s preferences and store the learned author preferences in the repository . The content matching engine might observe for instance that an author generally uses one citation format over another. In response the content matching engine might determine that the author prefers this style of citation and save a preference to that effect in the repository .

Sometimes authors may cite sources that are not preferred sources for citation. For example authors might cite an online encyclopedia instead of a periodical article. Other times authors may cite some sources but wish to include citations to additional sources in their documents. In certain embodiments the content matching engine can also retrieve citations to additional publications as research recommendations. The research recommendations can include publications or citations to publications that are similar to one or more of the publications cited in an author s paper. The content matching engine may retrieve these research recommendations from the research recommender .

The research recommender may generate recommendations using data obtained from one or more associated publications tables . The associated publications tables can include publication to publication associations or mappings created by an association mining component . The association mining component can create these associations by analyzing data stored in the publication data repository . Additional details on the recommendation generation process are described below with respect to .

In presenting content matching feedback and or research recommendations to the author the content matching engine can provide the ability for the author to purchase publications or portions thereof. The content matching engine can for example offer portions of the publications cited as research recommendations for purchase. Additional details on providing publications to authors are described below with respect to .

Although the content matching system has been described primarily in the context of comparing text more generally the content matching system may compare any content with other content. One example of such content is software code. For instance in certain embodiments the author may wish to submit a document containing software code to the content matching engine . At least a portion of the software code may be compared with other software code stored in the publication data repository . The software code in the publication data repository may include for example open source software code malicious code and the like. The content matching engine may determine an extent to which submitted source code includes open source software code. Additionally the content matching engine can provide feedback on open source licenses associated with the detected open source software code. This feedback can help the author cite open source licenses in the document or acknowledge rules of compliance.

At block a document can be received from an author. The document may also be provided from an author s computer system through author interaction with a browser application a plug in or the like. The author may submit the document to obtain feedback on the author s usage of quotations citations and the like. The document may be automatically submitted as part of saving the document or uploading the document to another network resource. The document may be received by the content matching engine .

The content of the document can be compared to the content of one or more other documents at block . This comparison can include using pattern matching algorithms to compare the text of the document with the text of publications and or previously submitted author documents. This block can also be implemented by the content matching engine .

At block content matching feedback responsive to the comparison of the documents is generated. The content matching feedback may be generated for example by the content matching engine . The content matching feedback can include advice on correcting citation or bibliographic errors correcting quotations and the like.

Research recommendations may be generated at block . This block may be performed by the research recommender . Research recommendations may be generated to assist the author in conducting further research. The research recommendations may include publications or citations to publications that are related to publications cited by the author. The publications provided as recommendations may be more authoritative than publications cited by the author or the publications provided as recommendations may supplement the publications cited by the author. The process of generating recommendations is described in more detail below with respect to .

At block the content matching feedback and research recommendations may be output for display to the author. The feedback and recommendations may be provided in a single author interface such as a web page document or the like. The content matching feedback and or recommendations may also be provided within the author s document or in a separate document. The content matching feedback and research recommendations may be sent to the author using the content matching engine .

At block publication associations can be detected. In certain embodiments this block need not be performed each time an author requests recommendations. As described in more detail below this block may be performed as a pre processing step and or concurrently with blocks . The publication associations can be detected in block based at least in part on citations in the publications. For example referring again to the association mining module can mine citation data from the publication data repository . This citation data can include citations within the text of publications in the publication data repository . The association mining module can detect associations between publications based at least in part on the frequency that different citations occur in the same publication. For example if a citation to a particular journal article is mentioned multiple times in one publication and if a citation to a particular book is also mentioned several times in that publication then the association mining module might create an association between the journal article and the book.

The association mining module may store the publication associations in one or more associated publications tables . For example the association mining module might store a mapping that links the publications by name by citation by links to files containing their publication text or the like. The association mining module can assign scores to the associated publications that indicate a degree of association between publications or portions of publications. A pair of publications that are cited together relatively frequently for example might have a higher score than a pair of publications cited together relatively less frequently. Other ways in which the association mining module might create associations may include detecting the proximity of citations within a publication and detecting similar publications based on an analysis of their text. For example the analysis may use latent semantic analysis.

In addition the association mining module may use collaborative filtering to detect related publications. Collaborative filtering can include detecting purchase based and view based associations between items such as publications. Example algorithms that may be used to generate these associations are described in U.S. Pat. No. 6 853 982 entitled Content personalization based on actions performed during a current browsing session issued Feb. 8 2005 the disclosure of which is hereby incorporated by reference in its entirety.

The association mining module may operate in an off line process. Thus in certain embodiments the associated publications tables are pre generated prior to providing research recommendations to an author. This off line process may be performed for example on a periodic or aperiodic basis during off peak processing times. Alternatively the association mining module may also mine data concurrently with other actions being performed by the content matching system . For example the associated publications tables may receive updates from the association mining module while the research recommender is using the associated publications tables to generate recommendations. The association mining module may update the associated publications tables once daily or may update more or less frequently.

Turning again to citations can be extracted from an author generated document at block . The citations may be extracted by the research recommender . At block research recommendations may be generated based at least in part on the publication associations described above and on publications cited in the author generated document. For example the research recommender may look up one or more of the citations or publications referenced by the citations from the document in the associated publications tables to retrieve associated publications. The retrieved set of associated publications can include scores or rankings based on the relatedness of the associated publications to the one or more citations from the author generated document.

At block a subset of the research recommendations may be selected for output to the author. This block may be implemented by the research recommender providing a subset of the associated publications as recommendations. The subset can include for example a most highly ranked set of associated publications. These recommendations can be provided to the content matching engine which can in turn provide the research recommendations to the author.

In addition to the recommendation techniques described above in certain embodiments the research recommender can provide recommendations based on the author s social network. The research recommender may for instance communicate with a social networking web site or network resource using an API to retrieve papers written and posted to the web site by the author s friends or by people the author follows. The research recommender may recommend to the author publications cited in the papers of the author s friends.

For purposes of illustration the content matching feedback report display is shown in a web browser . The content matching feedback report display could instead be displayed within a separate application from a browser. For instance the content matching feedback report display could be displayed within an author generated document. In addition while an example layout of the content matching feedback report is shown the layout may be varied substantially in various embodiments.

In the depicted embodiment text of a document includes emphasized citation portions . Two citation portions are shown including a first citation portion and a second citation portion . The first citation portion in the text does not actually cite a source whereas the second citation portion does cite a source.

Content matching feedback is depicted in a column next to the text . The content matching feedback includes citation analysis . Two examples of citation analysis are shown. The citation analysis corresponds to the citation portion noting that a particular publication J. Roe should have been cited. In contrast the citation analysis indicates that the citation portion of the text includes a proper citation.

A button with the label Buy Pages is listed below the citation analysis . The button is one example of an author interface control that can offer an author the opportunity to purchase some or all of the pages from the publication described in the citation analysis . By offering publications or portions thereof the content matching feedback report can assist the author in conducting research. Referring again to if an author indicates a desire to purchase or view publications e.g. by pressing the button the content matching engine may communicate with a catalog service to request the pages from the publication data . In addition the catalog service which may be a software service or the like may provide an interface for the author to purchase pages or entire publications.

Referring again to the content matching feedback report may offer portions of publications such as cited passages for free while allowing the author to purchase the entire publication. The free portions of the publications may be ad supported. Or authors may pay for subscriptions to access publications.

In a column to the right of the text research recommendations are shown. The research recommendations include an example research recommendation depicted next to the citation portion . The research recommendation indicates a possible additional source to cite in place of or in addition to the source cited in the citation portion . Moreover another button is shown in proximity to the research recommendation . Similar to the button the button allows the author to purchase pages from the publication cited in the research recommendation .

Conditional language used herein such as among others can could might may e.g. and the like unless specifically stated otherwise or otherwise understood within the context as used is generally intended to convey that certain embodiments include while other embodiments do not include certain features elements and or steps. Thus such conditional language is not generally intended to imply that features elements and or steps are in any way required for one or more embodiments or that one or more embodiments necessarily include logic for deciding with or without author input or prompting whether these features elements and or steps are included or are to be performed in any particular embodiment.

Each of the processes components and algorithms described above may be embodied in and fully automated by code modules executed by one or more computers or computer processors. The code modules may be stored on any type of computer readable medium or computer storage device. The processes and algorithms may also be implemented partially or wholly in application specific circuitry. The results of the disclosed processes and process steps may be stored persistently or otherwise in any type of computer storage. In one embodiment the code modules may be configured to execute on one or more processors including sub processors. In addition the code modules may comprise but are not limited to any of the following software or hardware components such as software object oriented software components class components and task components processes methods functions attributes procedures subroutines segments of program code drivers firmware microcode circuitry data databases data structures tables arrays variables combinations of the same and the like.

The various features and processes described above may be used independently of one another or may be combined in various ways. All possible combinations and subcombinations are intended to fall within the scope of this disclosure. In addition certain method or process steps may be omitted in some implementations.

While certain embodiments of the inventions disclosed herein have been described these embodiments have been presented by way of example only and are not intended to limit the scope of the inventions disclosed herein. Indeed the novel methods and systems described herein may be embodied in a variety of other forms furthermore various omissions substitutions and changes in the form of the methods and systems described herein may be made without departing from the spirit of the inventions disclosed herein. The accompanying claims and their equivalents are intended to cover such forms or modifications as would fall within the scope and spirit of certain of the inventions disclosed herein.

