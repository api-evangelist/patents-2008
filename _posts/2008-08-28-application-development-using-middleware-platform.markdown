---

title: Application development using middleware platform
abstract: Embodiments relate to systems and methods for application development using middleware. A developer can launch a development request from a client or local network to a remote development server, thereby invoking a set of frameworks and other tools to carry out a desired application build. The development request can specify the type or configuration of the desired application, such as, for example, email, spreadsheet, media playback, or other applications, along with parameters such as target operating systems. The user can assemble desired code from libraries stored in the virtualized middleware framework, and debug the application build against a set of data sources aggregated by the development server. A developer can therefore leverage rapid application development tools at the middleware, without a necessity to invest in local development tools or separately build or locate test data sources.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09122460&OS=09122460&RS=09122460
owner: Red Hat, Inc.
number: 09122460
owner_city: Raleigh
owner_country: US
publication_date: 20080828
---
The present teachings relate to systems and methods for application development using a middleware platform and more particularly to platforms and techniques for the rapid building of new software using virtualized development at the middleware.

Software development platforms exist for various application types and various operating environments. For example rapid application development RAD packages exist for Web application frameworks and other environments in which common or typical functional modules can be incorporated from code libraries into software prototypes to allow a designer to assemble a desired larger software system without having to do original coding.

Existing software development platforms for the desktop or a local network entail certain drawbacks for the developer community however. For one it may represent a significant investment in expense time and training for a developer to acquire the various RAD or other development tools necessary to carry out an intended software build. Further once a software prototype is built developers typically wish to exercise or validate the build against a suite of test data but installing reliable data sources to carry out debugging and validation may likewise represent a burdensome task. It may be desirable to provide methods and systems for application development that avoid the limitations and reduce the costs and complexities of traditional software development platforms.

Embodiments of the present teachings relate to systems and methods for application development using middleware. More particularly embodiments relate to platforms and techniques to design implement and validate software applications using rapid development techniques at the middleware level of a network environment. In embodiments a development server located at the middleware can receive a development request to initiate or continue a development project from a client machine or local network. The development request can contain parameters to specify that type of software to be built and validated. For example the development request can specify that a word processing email messaging database or other software or application is desired to be tested and built. The development request can likewise specify parameters such as the intended operating system or Web browsing environment for the intended application. The development request can further indicate a desired validation data set to be used to verify the reliable operation of the software after completion of a build. It may be noted that in embodiments the application build can take place and execute as a process hosted on the development server rather than the client machine or local network making the development request. The requesting client or network therefore need not maintain or configure a separate set of application development tools but instead can rely upon the virtualized development resources provided by the development server to carry out development projects. In addition the requesting client or network can also rely upon access to sets of test data that are aggregated by the development server at the middleware and therefore test the application against a comparatively wide array of data types and configurations. These and other embodiments described herein address the various noted shortcomings in known application development technology and provide a user or network operator with enhanced capabilities for rapid and robust application development using virtualized resources.

Reference will now be made in detail to exemplary embodiments of the present teachings which are illustrated in the accompanying drawings. Where possible the same reference numbers will be used throughout the drawings to refer to the same or like parts.

In embodiments as shown a requesting client in set of clients can communicate a development request to development engine to initiate development processing. Development request can be or include the specifications for the desired application type of the intended development project such as a word processing application a media playback application an email application a messaging application a database application a spreadsheet application a network security application or other application utility module or other software. In embodiments the development request can also specify other parameters associated with the intended development project such as the target operating system or other environment the target network environment or other specifications settings configurations or features.

Upon receipt of development request development engine can invoke a virtual development environment through which the user of the requesting client can initiate configure manage maintain and complete the development process for target application build . In embodiments virtual development environment can be hosted in development engine at the level of middleware and communicated to the requesting client in set of clients via XML extensible markup language or other languages channels or protocols. In embodiments virtual development environment can contain resources to allow the user of the requesting client to design build test configure and deliver a target application build according to the supplied design specifications. Virtual development environment can provide for example a code library containing a set of modules for the rapid and convenient of common or typical functions into target application build . The set of modules can for instance contain modules such as a print module a user interface or gadget module a storage module a networking module a security module and other modules routines functions or other software modules or components. In embodiments code library can likewise contain or access a set of application programming interfaces APIs such as programming interfaces to permit target application build to access network connections initiate or manage a graphical user interface or perform or access other tasks. In embodiments the user at the requesting client in set of clients can select install and configure application resources including selected APIs selected code modules and other software components to assemble an initial or modified target application build via development engine at the middleware.

Once an initial version of target application build is prepared the user at the requesting client can remotely execute validation testing of the target application build via development engine . In embodiments the user can select or development engine can access one or more data sources in a set of test data sources to exercise test and confirm the stable operation of target application build against a variety of input types configurations and sizes. After a validation run of target application build against set of test data sources is conducted a set of validation results can be returned via development engine indicating the results of that testing. For instance set of validation results can contain indications of valid output and or any fault conditions program failures or faults or other execution states of target application build using the selected test data. Validation results can be communicated to the requesting client in set of clients and further updating modification patching or other manipulation of target application build via virtual application environment and development engine can be performed.

As shown in once completed target application build can be configured with set of application modules as built tested and validated according to the specifications in development request . In embodiments a copy or image of the completed target application build can be stored to development store to the requesting client in set of clients or to other locations or storage. For example in embodiments the requesting client can distribute the completed target application build to the remaining clients in set of clients to perform a network wide installation of the completed software. In embodiments target application build can be stored in development store and or other storage to permit further modification updating debugging or other development processing. In embodiments development engine or other site or resource can provide an update service to the set of installed application via one or more networks or otherwise to download further updates or patches to the eventual target application build and set of application modules as desired.

In user selections or other input from the user of a client in set of clients can be received to assemble selected module s in set of modules into target application built in virtual development environment hosted by development engine . In validation processing can be initiated in virtual development environment for example by identifying computational tests tests to exercise communications ports compatibility tests user interface tests or other tests or exercises to determine the operability and or reliability of target application build . In a set of test data sources can be identified by development engine and or the user with which to validate or exercise target application build with desired data sets such as for example databases having specified data types spreadsheet data encoded media such as video or audio files financial data or other data that can be used to provide input to target application build . In the target application build can be updated and debugged based on results of the validation testing performed on set of test data sources or otherwise. For example one or more code modules in set of code modules selected from code library to generate target application build can be updated modified or substituted. In target application build can be transmitted and or stored to the requesting client in set of clients from development engine . In embodiments development engine can in addition or instead store target application build in development store . In processing can repeat return to a prior processing point jump to a further processing point or end.

The foregoing description is illustrative and variations in configuration and implementation may occur to persons skilled in the art. For example while embodiments have been described in which a client communicates with a single development server located in the network at the middleware level in embodiments multiple servers can cooperate to provide code libraries programming interfaces debugging tools sets of test data and other resources required to carry out a development request. For further example while embodiments have been described in which a development request is made to generate one application build in embodiments two or more applications can be specified and built together or in tandem and can for instance be tested together for interoperability and other purposes. Other resources described as singular or integrated can in embodiments be plural or distributed and resources described as multiple or distributed can in embodiments be combined. The scope of the present teachings is accordingly intended to be limited only by the following claims.

