---

title: Inter-process networking for many-core operating systems
abstract: Systems and methods that facilitate inter-process networking are described that can provide inter-process communication, firewall restrictions, process and host mobility, as well as parallelization of task performance. In various embodiments, a computer process can be provided with its own internet protocol address and network stack to facilitate inter-process networking. In further embodiments, a gateway process can facilitate process mobility, host mobility, and parallelization of task performance, as well as management of a host area network by facilitating inter-process communication between suitably configured processes.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08800002&OS=08800002&RS=08800002
owner: Microsoft Corporation
number: 08800002
owner_city: Redmond
owner_country: US
publication_date: 20080218
---
The subject disclosure relates to computing systems and more particularly to inter process networking for many core operating systems.

Typically conventional networking software structure dictates a one host one network stack model. That is for each instance of a host e.g. computer operating system and or application software there is exactly one network stack for all operating system and application software processes to communicate with the network. However the networking software structure in conventional operating systems is ill equipped to provide advanced features that are possible in future computing systems.

For example although it is now common for computers to have two or more central processing unit CPU cores in even entry level consumer grade computers in the near future it is anticipated that computers can have many more CPU cores e.g. thousands of CPU cores . In addition it is anticipated that operating systems will be structured around virtual machines and hypervisors. Moreover conventional networking software structures are ill equipped to respond to increased usage of disaggregated computing e.g. remote storage and networked devices such as printers and the increased diversity in network media and applications mobility expected as a result of advances in wireless technologies. Thus conventional network software structures will be required to service and mediate an increasing number of diverse and competitive processes that simultaneously compete for scarce network resources.

As ever before security will be a paramount concern while it is anticipated that malware will become increasingly prevalent in virtually every machine. As a result administrators of enterprise computing systems are expected to have decreasing trust in internal machines. This in turn will lead to efforts toward moving firewalls into hosts and more widespread deployment of user based authentication for example as opposed to machine based authentication.

The above described deficiencies are merely intended to provide an overview of some of the problems encountered in inter process networking and are not intended to be exhaustive. Other problems with the state of the art may become further apparent upon review of the description of the various non limiting embodiments of the disclosed subject matter that follows.

In consideration of the above described deficiencies of the state of the art the disclosed subject matter provides inter process networking for many core operating systems.

In accordance with exemplary non limiting embodiments the disclosed subject matter provides systems and methods that facilitate inter process networking.

Accordingly in various exemplary embodiments the disclosed subject matter provides systems that facilitate inter process networking. For example a system that facilitates inter process networking can include a gateway process configured to manage a host area network and can facilitate managing the various network devices of the system e.g. standard network device according to Institute of Electrical and Electronics Engineers Inc. IEEE 802.3 Ethernet IEEE 802.11 Wi Fi IEEE 802.15 Zigbee IEEE 802.16 WiMax Ultra Wide Band UWB proprietary network devices and so on . In addition a first process having an internet protocol IP address and its own network stack can be configured to receive and accept or reject inter process communications from a second process over the host area network based in part on filtering rules firewall rules and or provision or lack of provision of authentication data and so on.

In further non limiting embodiments the disclosed subject matter provides methodologies that facilitate inter process communication. For example a communication such as an inter process communication can be sent to a computing process at its internet protocol address. If the computing process is determined to be authorized then the computing process network stack can accept the communication. However if the computing process is determined to be unauthorized then the computing process network stack can reject the communication.

A simplified summary is provided herein to help enable a basic or general understanding of various aspects of exemplary non limiting embodiments that follow in the more detailed description and the accompanying drawings. This summary is not intended however as an extensive or exhaustive overview. Instead the sole purpose of this summary is to present some concepts related to some exemplary non limiting embodiments of the disclosed subject matter in a simplified form as a prelude to the more detailed description of the various embodiments of the disclosed subject matter that follows.

Simplified overviews are provided in the present section to help enable a basic or general understanding of various aspects of exemplary non limiting embodiments that follow in the more detailed description and the accompanying drawings. This overview section is not intended however to be considered extensive or exhaustive. Instead the sole purpose of the following embodiment overviews is to present some concepts related to some exemplary non limiting embodiments of the disclosed subject matter in a simplified form as a prelude to the more detailed description of these and various other embodiments of the disclosed subject matter that follow. It is understood that various modifications may be made by one skilled in the relevant art without departing from the scope of the disclosed subject matter. Accordingly it is the intent to include within the scope of the disclosed subject matter those modifications substitutions and variations as may come to those skilled in the art based on the teachings herein.

As used in this application the term host can refer to a computer or a computer related entity at a specific location on a computer network. Typically a host can comprise a storage component e.g. volatile and non volatile storage and associated software for storage and or execution of data and or instructions a host central processing unit CPU e.g. for controlling the functions of the host according to data and or instructions and a communications component e.g. one or more network devices and associated software for communication with other network components . In addition a location on a network can be described by an IP address. Thus in addition to including such computer related entities as desktop computers laptop computers server computers network attached appliances with computing capability and so on the term host can include for example a tablet personal computer PC device a Smartphone and or a personal digital assistant PDA and so on.

Furthermore as used in this application the terms component process module system and the like are intended to refer to a computer related entity either hardware firmware a combination of hardware and software software software in execution firmware middle ware microcode and or any combination thereof. For example a component can be but is not limited to being a process running on a processor a processor an object an executable a thread of execution a program and or a computer. By way of illustration not limitation both an application running on a computing device and the computing device can be a component. One or more components can reside within a process and or thread of execution and a component can be localized on one computer and or distributed between two or more computers. In addition these components can execute from various computer readable media having various data structures stored thereon. The components may communicate by way of local and or remote processes such as in accordance with a signal having one or more data packets e.g. data from one component interacting with another component in a local system distributed system and or across a network such as the Internet with other systems by way of the signal . Additionally components of systems described herein may be rearranged and or complemented by additional components in order to facilitate achieving the various aspects goals advantages etc. described with regard thereto and are not limited to the precise configurations set forth in a given figure as will be appreciated by one skilled in the art.

In addition various embodiments of the disclosed subject matter are directed to methods. It is to be understood that the specific order or hierarchy of steps in the processes disclosed is an example of exemplary approaches. Based upon design preferences it is understood that the specific order or hierarchy of steps in the processes may be rearranged while remaining within the scope of the present disclosure. The method claims appended hereto present elements of the various steps in a sample order and are not meant to be limited to the specific order or hierarchy presented.

In consideration of the above described limitations in accordance with exemplary non limiting embodiments the disclosed subject matter provides systems and methods that facilitate inter process networking.

Accordingly in various exemplary embodiments the disclosed subject matter provides systems that facilitate inter process networking. For example a system that facilitates inter process networking can include a gateway process configured to manage a host area network and that can be configured to manage the various network devices of the system e.g. standard network device according to IEEE 802.3 Ethernet IEEE 802.11 Wi Fi IEEE 802.15 Zigbee IEEE 802.16 WiMax Ultra Wide Band UWB proprietary network devices and so on . In addition a first process having an IP address and its own network stack can be configured to receive inter process communications from a second process over the host area network. Additionally the first process can be further configured to allow or deny communications inter process communications from the second process according to one or more of filtering rules firewall rules and or provision or lack of provision of authentication data and so on.

In further non limiting embodiments the disclosed subject matter provides methodologies that facilitate inter process communication. For example a communication such as an inter process communication can be sent to a computing process at its internet protocol address. In addition a determination can be made by the computing process whether the communication is authorized. If it is determined that the computing process is authorized then the computing process network stack can accept the communication. If it is determined that the computing process is unauthorized then the computing process network stack can reject the communication. As an example accepting or rejecting the communication can be based on filtering rules firewall rules and or provision or lack of provision of authentication data and any combination thereof.

According to various non limiting embodiments host system can comprise any number of processes e.g. process   . . . process N process  N that can facilitate using networking inside the host system for inter process communications. Accordingly processes can facilitate providing a unitary view of inter process and inter host communication. For example processes can include application process file system processes peripheral component processes e.g. a printer process and can be either local to host system or remote therefrom. In various non limiting embodiments host system can facilitate utilizing a separate address such as an internet protocol IP address for each process in addition to utilizing networking security mechanisms e.g. firewalls filtering rules etc. to protect processes from unauthorized inter process communications.

To that end processes each can include or be associated with a lightweight network stack to facilitate process mobility authentication and network security protection e.g. firewall protection at process level granularity. Advantageously host system can facilitate providing substantially all of the networking functions to the process level by including a lightweight network stack for each process. For instance such networking functions can include firewall functions network mobility provision and authentication of authentication credentials and so on. For example process can include or be associated with firewall component to facilitate regulating flow of network traffic between and among processes . As a further example firewall component can facilitate inspecting network traffic passing through it as well as denial and or permitting passage of such network traffic based on a set of rules. Moreover host system can provide convenience and engineering efficiency to a network implementation by including substantially the same mechanism for both inter process and inter host communications.

According to various non limiting embodiments host system can facilitate inter process communication between and among processes by forming a network referred to as a host area network HAN . The disclosed subject matter in one aspect thereof can include a HAN that facilitates using internet protocols over a shared memory. The process network stack is referred to as a lightweight network stack because in one aspect of the disclosed subject matter the network stack e.g. at a device level facilitates supporting a HAN interface e.g. rather than any arbitrary network device such as arbitrary Ethernet cards wireless network cards .

In addition host system can include a gateway process according to further non limiting embodiments of the disclosed subject matter. In one aspect gateway process can include a full network stack and can facilitate managing inter process networking over HAN . In a further aspect of the disclosed subject matter gateway process can facilitate managing networking devices included or associated with host system e.g. network interfaces such as standard network device according to Institute of Electrical and Electronics Engineers Inc. IEEE 802.3 Ethernet IEEE 802.11 Wi Fi IEEE 802.15 Zigbee IEEE 802.16 WiMax Ultra Wide Band UWB proprietary network devices and so on and network media diversity e.g. wired and wireless media types and to facilitate bridging with external networks e.g. such as for inter host communications .

Advantageously host system system having a lightweight network stack per process can facilitate efficiently utilizing multiple host system processor cores as well as utilizing network security mechanisms such as firewalls and filtering rules e.g. for inter process protection . For example for communication within host system between processes inside the host host system can facilitate providing process isolation and process protection between processes . For the purposes of illustration and not limitation host system can include a system firewall not shown that can for example indicate what ports and IP addresses are open and so on to facilitate isolation and protection of processes from other processes e.g. either external or internal to host system .

According to a further example processes running within host system can be restricted according to what processes can be allowed to communicate with processes . For example firewall component can be configured to facilitate inter process communication restrictions such that processes running as process   can be allowed to communicate with processes running as process   but communication with processes running as process  N can be disallowed. Thus host system can advantageously facilitate providing two independent mechanisms for process isolation and protection rather than a common security strike point according to various aspects of the disclosed subject matter. According to further aspects the mechanisms can be unified e.g. a single firewall used to protect against inside versus outside threats while facilitating process mobility.

Accordingly host system can advantageously facilitate process mobility such as for moving a process from one host to another e.g. either between and among virtual real and or any combination thereof while being able to keep the same connection regardless of what host the process is currently executing on. For example host system can facilitate native load balancing and or failure protection by failover to other processes and or hosts e.g. operating in the HAN or in the external network . As a further example consider a number of processes executing on a number of host systems and serving various functions. As a result of a momentary change in demand or supply of a particular critical function e.g. due to increased server demand due to flash crowds decreased supply due to failures and or planned downtimes etc. host system can facilitate transitioning processes around among physical resources e.g. another host system or otherwise .

Thus for purposes of illustration and not limitation each process can be described as a tiny version of a virtual host that can include or be associated with its own lightweight network stack IP address and network connectivity to the network. Accordingly host system facilitates moving each process or virtual host e.g. process and lightweight network stack as a pair. As a result such movement of the process and lightweight network stack pair can facilitate transparently maintaining the appearance to outside processes in communication with the virtual host e.g. process and lightweight network stack of process movement within the network. For example a route page for the process and lightweight network stack pair can show that the virtual host has moved from one subnet to another subnet while retaining the same IP address residing on the same router and so on.

It is to be appreciated that the various functions components or process steps can be combined or distributed via techniques known in the art or can be eliminated or reorganized according to system design considerations without departing from the scope of the claims appended hereto. For example while the functions of lightweight network stack firewall component and gateway process are depicted as occurring in discrete blocks for purposes of illustration it should be understood that such functions can be combined or distributed as desired. As a further example system design considerations may dictate the elimination optimization or integration of such functions or portions thereof. Furthermore some or all of functions described can be combined integrated and or distributed as the system design considerations dictate. Further examples of such modifications will become apparent to those skilled in the art upon review of the various embodiments disclosed and claimed herein.

As described above a network stack can be associated with each process to facilitate inter process networking. Because processes are attached to a virtual link e.g. HAN processes can be configured to support one interface e.g. interfaces to other processes . As a result drastic simplifications over a general purpose network stack are possible while facilitating inter process networking. Thus relative to general purpose network stack the process network stack of the disclosed subject matter can be referred to as a lightweight network stack. For example processes can have one interface and one set of IP addresses on that interface e.g. rather than supporting arbitrary network interfaces which in one aspect can be a hard coded interface of the same type among processes . In a further aspect the disclosed subject matter can facilitate choosing a different network stack for a process based on for example application requirements. For example a multi threaded process can use a multi threaded network stack. As a further example a file system process can use a different network stack than an application process network stack.

In addition processes running in the same host system can advantageously facilitate resource sharing between the processes . For instance typical virtual machines have code and data replicated and loaded multiple times into the same physical memory e.g. using different address spaces . In contrast various non limiting embodiments of the disclosed subject matter can facilitate resource sharing and communicating between processes running on the same physical machine. As an illustration it can be appreciated that it can be much more efficient to communicate between process   and process   across a host area network via the respective lightweight network stacks   and   rather than communicating through the full network stack e.g. down through the virtual local area network LAN across the virtual LAN and back up the full network stack . Thus the disclosed subject matter in various embodiments thereof facilitates efficient communication across virtual hosts e.g. the process lightweight network stack pair not achievable using full general purpose network stacks.

Accordingly computing process can include various components that facilitate a lightweight network stack functionality. For example process can include a firewall component to facilitate firewall capability at the boundary of each process . As a result process can facilitate setting fine grained access control for example to allow communications from a trusted process and deny them from unknown e.g. malware processes.

In addition process can include a mobility component to facilitate process mobility. For example process mobility provided by the lightweight network stack can facilitate processes changing their point of attachment to the HAN or connected host systems without changing their IP address. Thus mobility component can be configured to facilitate such process mobility e.g. such as by Internet Engineering Task Force IETF standard communications protocol Mobile IP . As a result mobility component can facilitate a single communication mechanism with a consistent address to support process mobility e.g. migration between virtual hosts between hosts systems in a cluster between any two hosts systems over the Internet and so on .

For the purpose of illustration and not limitation consider a user running a Live enabled application on one host system . After the user is done using the host system the user can suspend the application the state of which can be saved e.g. in a network of cloud servers . Thereafter the user can log in to another host system and can download and resume the application from the state saved from the host system . According to an aspect of the disclosed subject matter communications process mobility can be provided by a lightweight network stack for example embedded in the process itself.

Additionally process can include an authentication component to facilitate authentication on a per process basis. For example the process authentication capability facilitated by an authentication component in a lightweight network stack at each process can provide per user or per process credentials and verification thereof e.g. rather than only have per host credentials in a one host one network stack model .

Thus authentication component can solicit authentication data from and or provide authentication data to an entity e.g. a process a user a device a component and or a subcomponent and so on or another object e.g. an operating system and or other application software on behalf of an entity and upon receiving the proper authentication data so solicited can be employed individually and or in conjunction with information acquired and ascertained as a result of biometric modalities employed to facilitate authentication of the entity to permit limit and or restrict access to process .

For example authentication component can facilitate authenticating an entity based on information provided e.g. from a host system from another process and or via a proxy and or a trusted third party and so on . For instance authentication data can be in the form of a password e.g. a sequence of humanly cognizable characters a pass phrase e.g. a sequence of alphanumeric characters that can be similar to a typical password but is conventionally of greater length and contains non humanly cognizable characters in addition to humanly cognizable characters a shared secret such as a pass code e.g. Personal Identification Number PIN and the like for example. Additionally and or alternatively public key infrastructure PKI data can also be employed by authentication component . PKI arrangements can provide for trusted third parties to vet and affirm entity identity through the use of public keys that typically can be certificates issued by trusted third parties. Such arrangements can enable entities to be authenticated to each other and to use information in certificates e.g. public keys and private keys session keys Traffic Encryption Keys TEKs cryptographic system specific keys and or other keys to encrypt and decrypt messages communicated between entities.

The authentication component can implement one or more machine implemented techniques to identify an entity e.g. a process a user a device a component and or a subcomponent and so on or another object e.g. an operating system and or other application software on behalf of an entity by an entity s unique physical characteristics e.g. MAC address hash string and so on and or behavioral characteristics and attributes. For example in the case of user authentication biometric modalities that can be employed can include for example face recognition wherein measurements of key points on an entity s face can provide a unique pattern that can be associated with the entity iris recognition that measures from the outer edge towards the pupil the patterns associated with the colored part of the eye the iris to detect unique features associated with an entity s iris and finger print identification that scans the corrugated ridges of skin that are non continuous and form a pattern that can provide distinguishing features to identify an entity.

According to further non limiting embodiments process can include a parallelization component to facilitate parallel processing. As described above the disclosed subject matter can facilitate choosing a different network stack for a process based on for example application requirements. For example to facilitate parallel processing process in the form of a multi threaded process can use a multi threaded network stack. Accordingly a lightweight network stack at each process can be designed and configured to include parallelization component to facilitate highly parallelized processing. As a result various non limiting embodiments of the disclosed subject can efficiently utilize many core architectures for parallel processing.

In an exemplary non limiting embodiment a lightweight network stack associated with process or portions thereof can be configured to run in a different core of a many core architecture from user code of the process . As a result simultaneous incoming and outgoing packets can traverse the lightweight network stack in parallel in different cores. As further described below regarding gateway process can additionally facilitate parallel network processing by managing network devices and providing such functions as bridging routing and or gateway functions.

In addition in further non limiting embodiments of the disclosed subject matter process can include a cryptographic component to provide secure inter process network functions e.g. inter process communication process mobility etc. . In accordance with an aspect of the disclosed subject matter cryptographic component can provide symmetric cryptographic tools and accelerators e.g. Twofish Blowfish AES TDES IDEA CAST5 RC4 etc. to facilitate encrypting and or decrypting data. Thus cryptographic component can facilitate securing data being communicated to a process stored via a process such as a file system process and or read from a process such as via a network file storage process transmitted to or received from a HAN or external network connected processes and or creating a secure communication channel as part of a secure association between hosts and or processes with an entity e.g. a process a user a device a component and or a subcomponent and so on or another object e.g. an operating system and or other application software on behalf of an entity to facilitate protecting data and or instructions to restrict access to those entities authorized and or authenticated to do so.

For example to facilitate secure file storage via a network file system process the disclosed subject matter in one aspect thereof can facilitate encrypting and or decrypting data and or instructions to limit access to those authorized and or trusted entities. To the same ends cryptographic component can also provide asymmetric cryptographic accelerators and tools e.g. RSA Digital Signature Standard DSS and the like in addition to accelerators and tools e.g. Secure Hash Algorithm SHA and its variants such as for example SHA 0 SHA 1 SHA 224 SHA 256 SHA 384 and SHA 512 .

As described above a gateway process can include a full network stack and can facilitate managing inter process networking over HAN . In addition gateway process can facilitate managing networking devices included or associated with host system e.g. network interfaces such as standard network device according to IEEE 802.3 Ethernet IEEE 802.11 Wi Fi IEEE 802.15 Zigbee IEEE 802.16 WiMax Ultra Wide Band UWB proprietary network devices and so on and network media diversity e.g. wired and wireless media types and facilitate bridging with external networks e.g. such as for inter host communications .

Accordingly gateway process can include various components that facilitate inter process networking. In exemplary non limiting embodiments of the disclosed subject matter gateway process can include HAN management component to facilitate establishing HAN and managing inter process communication over HAN . For example according to various embodiments process   can communicate directly with process  . However in further non limiting embodiments gateway process can facilitate process mobility for example between host systems e.g. host systems .

In addition gateway process can include gateway component to facilitate managing networking devices included or associated with host system e.g. network interfaces as described above and network media diversity e.g. wired and wireless media types and to facilitate bridging with external networks. For example gateway component can facilitate linking the virtual link e.g. HAN via a host system real link e.g. network devices to network components external to host system . As a result for the purpose of illustration and not limitation gateway component can be described as bridging between a virtual link to the real link similar to a network bridge.

It should be further appreciated that depending on the context or system design requirements the mechanism used in a gateway component between HANs can facilitate different and or complementary functions. Basic functionality of gateway component facilitates interconnecting between processes and connecting with network components external to host system e.g. another host a networked resource such as a printer or storage component etc. 

For example although the above description refers to bridge functionality in various non limiting embodiments gateway component can provide functionality or a subset thereof of a NAT box a switch a router and or anything that would naturally be used to connect one LAN to another LAN e.g. wired and or wireless or any combination thereof and any combination thereof. It should be appreciated that the selection of which analog can result in slightly different implementation scenarios of the disclosed subject matter depending on context and system design considerations.

As a further example the choice of which functionalities are selected can depend in part on what protocol support is desired e.g. to facilitate process mobility between the host systems . For instance if the choice for gateway process functionality is that functionality typically provided by a router then it should be understood that a HAN of one host system and the HAN of a different host system would typically reside on different subnets even if the two machines are adjacent to each other. As a result of a process moving from one host system to the other the IP address of process would change from one host system in the network to another in the network. Accordingly gateway process can be configured to implement IETF mobile IP for example to facilitate such a scenario.

Alternatively if the choice for gateway process functionality is that functionality typically provided by a bridge to connect HAN to the physical LAN connection e.g. network devices then can be configured to utilize mobile link layer protocols to facilitate MAC addresses moving from one switchboard to another switchboard.

According to further non limiting embodiments gateway process can include parallelization component that facilitates inter process networking. For example in addition to within host parallelization for a many core host system parallelization component can facilitate parallel network processing by managing network devices and providing such functions as bridging routing and or gateway functions as described for inter host communications in support of parallel processing.

According to further non limiting embodiments gateway process can include authentication component that can provide process authentication capability whether for the purpose of authentication by gateway process host system a process thereof e.g. process or otherwise. For example authentication component can solicit authentication data from and or provide authentication data to an entity e.g. a process and or a user a device a component and or a subcomponent and so on or another object e.g. an operating system and or other application software on behalf of an entity and upon receiving the proper authentication data so solicited can be employed individually and or in conjunction with information acquired and ascertained as a result of biometric modalities employed to facilitate authentication of the entity to permit limit and or restrict access to process .

For example authentication component can facilitate authenticating an entity based on information provided e.g. from a host system from a process and or via a proxy and or a trusted third party and so on . For instance authentication data can be in the form of a password e.g. a sequence of humanly cognizable characters a pass phrase e.g. a sequence of alphanumeric characters that can be similar to a typical password but is conventionally of greater length and contains non humanly cognizable characters in addition to humanly cognizable characters a shared secret such as a pass code e.g. Personal Identification Number PIN and the like for example. Additionally and or alternatively public key infrastructure PKI data can also be employed by authentication component . PKI arrangements can provide for trusted third parties to vet and affirm entity identity through the use of public keys that typically can be certificates issued by trusted third parties. Such arrangements can enable entities to be authenticated to each other and to use information in certificates e.g. public keys and private keys session keys Traffic Encryption Keys TEKs cryptographic system specific keys and or other keys to encrypt and decrypt messages communicated between entities.

The authentication component can implement one or more machine implemented techniques to identify an entity e.g. a process and or a user a device a component and or a subcomponent and so on or another object e.g. an operating system and or other application software on behalf of an entity by an entity s unique physical characteristics e.g. MAC address hash string digital signature and so on and or behavioral characteristics and attributes. For example in the case of user authentication biometric modalities that can be employed can include for example face recognition wherein measurements of key points on an entity s face can provide a unique pattern that can be associated with the entity iris recognition that measures from the outer edge towards the pupil the patterns associated with the colored part of the eye the iris to detect unique features associated with an entity s iris and finger print identification that scans the corrugated ridges of skin that are non continuous and form a pattern that can provide distinguishing features to identify an entity.

According to further non limiting embodiments of the disclosed subject matter gateway process can include cryptographic component to facilitate secure inter process network functions e.g. inter process communication process mobility etc. . In accordance with an aspect of the disclosed subject matter cryptographic component can provide symmetric cryptographic tools and accelerators e.g. Twofish Blowfish AES TDES IDEA CAST5 RC4 etc. to facilitate encrypting and or decrypting data whether for the purpose of encrypting and or decrypting by gateway process host system a process thereof e.g. process or otherwise. Thus cryptographic component can facilitate securing data being communicated to a process stored via a process such as a file system process and or read from a process such as via a network file storage process transmitted to or received from a HAN or external network connected processes and or creating a secure communication channel as part of a secure association between hosts and or processes with an entity e.g. a process and or a user a device a component and or a subcomponent and so on or another object e.g. an operating system and or other application software on behalf of an entity to facilitate protecting data and or instructions to restrict access to those entities authorized and or authenticated to do so.

For example to facilitate secure file storage via a network file system process the disclosed subject matter in one aspect thereof can facilitate encrypting and or decrypting data and or instructions to limit access to those authorized and or trusted entities. To the same ends cryptographic component can also provide asymmetric cryptographic accelerators and tools e.g. RSA Digital Signature Standard DSS and the like in addition to accelerators and tools e.g. Secure Hash Algorithm SHA and its variants such as for example SHA 0 SHA 1 SHA 224 SHA 256 SHA 384 and SHA 512 .

It is to be appreciated that processes lightweight network stack HAN gateway and network interfaces can each include their respective functionality as more fully described herein for example with regard to host system process and or gateway process . In addition host systems and can include local file system  F and local printer  LP each configured according to various aspects of the disclosed subject matter to facilitate inter process networking. Advantageously gateway process can also be configured to block such communications for example across HAN to network interfaces . For example gateway process can be configured to require authentication from processes e.g. processes and upon failing such a requirement e.g. as malware would be expected to fail gateway process can facilitate blocking any such traffic from the requesting process. As a result any malware infection can be mitigated by restricting its proliferation to the local host e.g. host system or .

As described above malware e.g. adware spyware browser hijacking software worms viruses Trojans rootkits and so on are expected to be increasingly prevalent in host systems. Thus as ever before security will be of paramount importance. Accordingly host system depicts malware attempting to communicate with processes . Advantageously a process   with firewall capability and configured according to various aspects of the disclosed subject matter can facilitate setting fine grained access control. For example host system illustrates that process   or portions thereof as well as other similarly configured processes can facilitate allowing communications from a trusted process e.g. other processes such as    F and so on and denying communications from and unknown e.g. malware processes.

In various non limiting embodiments the disclosed subject matter facilitates treating inter process networking with local resources the same as inter process networking with remote resources not shown e.g. across gateway . Accordingly host system can facilitate treating the local file system process  F as well as local peripheral resources such as local printer  LP in the same manner as a remote file system process not shown .

Advantageously by treating such resources agnostically various embodiments of the disclosed subject matter can natively support load balancing and failover functions. For example according to an aspect the disclosed subject matter can facilitate configuring process   to have no preference for local file system process  F versus a remote file system process not shown . Thus if local file system process  F is busy responding to other tasks process   can be configured to seek out available remote file system processes not shown . According to a further aspect the disclosed subject matter can facilitate configuring process   to have preferences of varying degree for local processes e.g. local file system process  F versus remote processes e.g. a remote file system process not shown . For example a highly sensitive and or critical process might strictly desire local system storage by local file system process  F whereas a general documents back up process can desire less strict preferences.

As a further advantage treating such resources agnostically further supports network level and or host level parallelization. For example rather than waiting for a local file system process  F to finish a process executing in parallel with another process on another host not shown can seek out suitable alternative file system processes not shown .

For example system illustrates host system connected to host system via switches   and   and router   creating system or cluster network segment . As described above the choice of which functionalities are selected for gateway process can depend in part on what protocol support is desired e.g. to facilitate process mobility between the host systems .

In the example of system the choice for gateway process functionality is that functionality typically provided by via router and switch functionality at the HAN . Thus it should be understood that a HAN   of host system and a HAN   of to host system would typically reside on different subnets e.g. 1.1.1.24 and 1.1.1.1 respectively . As a result of a process  F moving from one host system to the other e.g. from host system to host system the IP address of process  F would change from one host system in the network to another in the network . Accordingly gateway process or portions thereof as implemented in router   can be configured to implement IETF mobile IP for example to facilitate this scenario.

One of ordinary skill in the art can appreciate that the disclosed subject matter can be implemented in connection with any computer or other client or server device which can be deployed as part of a computer network or in a distributed computing environment connected to any kind of data store. In this regard the disclosed subject matter pertains to any computer system or environment having any number of memory or storage units and any number of applications and processes occurring across any number of storage units or volumes which can be used in connection with inter process networking in accordance with the disclosed subject matter. The disclosed subject matter can apply to an environment with server computers and client computers deployed in a network environment or a distributed computing environment having remote or local storage. The disclosed subject matter can also be applied to standalone computing devices having programming language functionality interpretation and execution capabilities for generating receiving and transmitting information in connection with remote or local services and processes.

Distributed computing provides sharing of computer resources and services by exchange between computing devices and systems. These resources and services include the exchange of information cache storage and disk storage for objects such as files. Distributed computing takes advantage of network connectivity allowing clients to leverage their collective power to benefit the entire enterprise. In this regard a variety of devices can have applications objects or resources that implicate the systems and methods that facilitate inter process networking of the disclosed subject matter.

It can also be appreciated that an object such as can be hosted on another computing device etc. or etc. Thus although the physical environment depicted may show the connected devices as computers such illustration is merely exemplary and the physical environment can alternatively be depicted or described comprising various digital devices such as PDAs televisions MP3 players etc. any of which can employ a variety of wired and wireless services software objects such as interfaces COM objects and the like.

There are a variety of systems components and network configurations that support distributed computing environments. For example computing systems can be connected together by wired or wireless systems by local networks or widely distributed networks. Currently many of the networks are coupled to the Internet which provides an infrastructure for widely distributed computing and encompasses many different networks. Any of the infrastructures can be used for exemplary communications made incident to inter process networking according to the designs of the disclosed subject matter.

In home networking environments there are at least four disparate network transport media that can each support a unique protocol such as Power line data both wireless and wired voice e.g. telephone and entertainment media. Most home control devices such as light switches and appliances may use power lines for connectivity. Data Services can enter the home as broadband e.g. either DSL or Cable modem and are accessible within the home using either wireless e.g. HomeRF or 802.11B or wired e.g. Home PNA Cat 5 Ethernet even power line connectivity. Voice traffic can enter the home either as wired e.g. Cat 3 or wireless e.g. cell phones and can be distributed within the home using Cat 3 wiring. Entertainment media or other graphical data can enter the home either through satellite or cable and is typically distributed in the home using coaxial cable. IEEE 1294 and DVI are also digital interconnects for clusters of media devices. All of these network environments and others that emerge or already have emerged as protocol standards can be interconnected to form a network such as an intranet that can be connected to the outside world by way of a wide area network such as the Internet. In short a variety of disparate sources exist for the storage and transmission of data and consequently any of the computing devices of the disclosed subject matter may share and communicate data in any existing manner and no one way described in the embodiments herein is intended to be limiting.

The Internet commonly refers to the collection of networks and gateways that utilize the Transmission Control Protocol Internet Protocol TCP IP suite of protocols which are well known in the art of computer networking. The Internet can be described as a system of geographically distributed remote computer networks interconnected by computers executing networking protocols that allow users to interact and share information over network s . Because of such wide spread information sharing remote networks such as the Internet have thus far generally evolved into an open system with which developers can design software applications for performing specialized operations or services essentially without restriction.

Thus the network infrastructure enables a host of network topologies such as client server peer to peer or hybrid architectures. The client is a member of a class or group that uses the services of another class or group to which it is not related. Thus in computing a client is a process i.e. roughly a set of instructions or tasks that requests a service provided by another program. The client process utilizes the requested service without having to know any working details about the other program or the service itself. In a client server architecture particularly a networked system a client is usually a computer that accesses shared network resources provided by another computer e.g. a server. In the illustration of as an example computers etc. can be thought of as clients and computers etc. can be thought of as servers where servers etc. maintain the data that is then replicated to client computers etc. although any computer can be considered a client a server or both depending on the circumstances. Any of these computing devices can be processing data or requesting services or tasks that implicate the systems and methods that facilitate inter process networking in accordance with the disclosed subject matter.

A server is typically a remote computer system accessible over a remote or local network such as the Internet or wireless network infrastructures. The client process can be active in a first computer system and the server process can be active in a second computer system communicating with one another over a communications medium thus providing distributed functionality and allowing multiple clients to take advantage of the information gathering capabilities of the server. Any software objects utilized pursuant to the techniques for inter process networking of the disclosed subject matter can be distributed across multiple computing devices or objects.

Client s and server s communicate with one another utilizing the functionality provided by protocol layer s . For example HyperText Transfer Protocol HTTP is a common protocol that is used in conjunction with the World Wide Web WWW or the Web. Typically a computer network address such as an Internet Protocol IP address or other reference such as a Universal Resource Locator URL can be used to identify the server or client computers to each other. The network address can be referred to as a URL address. Communication can be provided over a communications medium e.g. client s and server s can be coupled to one another via TCP IP connection s for high capacity communication.

Thus illustrates an exemplary networked or distributed environment with server s in communication with client computer s via a network bus in which the disclosed subject matter can be employed. In more detail a number of servers etc. are interconnected via a communications network bus which can be a LAN WAN intranet GSM network the Internet etc. with a number of client or remote computing devices etc. such as a portable computer handheld computer thin client networked appliance or other device such as a VCR TV oven light heater and the like in accordance with the disclosed subject matter. It is thus contemplated that the disclosed subject matter can apply to any computing device in connection with which it is desirable to provide inter process networking according to embodiments of the disclosed subject matter.

In a network environment in which the communications network bus is the Internet for example the servers etc. can be Web servers with which the clients etc. communicate via any of a number of known protocols such as HTTP. Servers etc. can also serve as clients etc. as can be characteristic of a distributed computing environment.

As mentioned communications can be wired or wireless or a combination where appropriate. Client devices etc. may or may not communicate via communications network bus and can have independent communications associated therewith. For example in the case of a TV or VCR there may or may not be a networked aspect to the control thereof. Each client computer etc. and server computer etc. can be equipped with various application program modules or objects etc. and with connections or access to various types of storage elements or objects across which files or data streams can be stored or to which portion s of files or data streams can be downloaded transmitted or migrated. Any one or more of computers etc. can be responsible for the maintenance and updating of a database or other storage element such as a database or memory for storing data processed or saved according to the disclosed subject matter. Thus the disclosed subject matter can be utilized in a computer network environment having client computers etc. that can access and interact with a computer network bus and server computers etc. that can interact with client computers etc. and other like devices and databases .

As mentioned the disclosed subject matter applies to any device wherein it can be desirable to provide inter process networking. It should be understood therefore that handheld portable and other computing devices and computing objects of all kinds are contemplated for use in connection with the disclosed subject matter i.e. anywhere that a device can utilize the systems and methods that facilitate inter process networking or otherwise receive process or store data. Accordingly the below general purpose remote computer described below in is but one example and embodiments of the disclosed subject matter may be implemented with any client having network bus interoperability and interaction. Thus the disclosed subject matter can be implemented in an environment of networked hosted services in which very little or minimal client resources are implicated e.g. a networked environment in which the client device serves merely as an interface to the network bus such as an object placed in an appliance.

Although not required the disclosed subject matter can partly be implemented via an operating system for use by a developer of services for a device or object and or included within application software that operates in connection with the component s of the disclosed subject matter. Software may be described in the general context of computer executable instructions such as program modules being executed by one or more computers such as client workstations servers or other devices. Those skilled in the art will appreciate that the disclosed subject matter can be practiced with other computer system configurations and protocols.

With reference to an exemplary remote device for implementing the disclosed subject matter includes a general purpose computing device in the form of a computer . Components of computer can include but are not limited to a processing unit a system memory and a system bus that couples various system components including the system memory to the processing unit . The system bus can be any of several types of bus structures including a memory bus or memory controller a peripheral bus and a local bus using any of a variety of bus architectures.

Computer typically includes a variety of computer readable media. Computer readable media can be any available media that can be accessed by computer . By way of example and not limitation computer readable media can comprise computer storage media and communication media. Computer storage media includes both volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CDROM digital versatile disks DVD or other optical disk storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by computer . Communication media typically embodies computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media.

The system memory can include computer storage media in the form of volatile and or nonvolatile memory such as read only memory ROM and or random access memory RAM . A basic input output system BIOS containing the basic routines that help to transfer information between elements within computer such as during start up can be stored in memory . Memory typically also contains data and or program modules that are immediately accessible to and or presently being operated on by processing unit . By way of example and not limitation memory can also include an operating system application programs other program modules and program data.

The computer can also include other removable non removable volatile nonvolatile computer storage media. For example computer could include a hard disk drive that reads from or writes to non removable nonvolatile magnetic media a magnetic disk drive that reads from or writes to a removable nonvolatile magnetic disk and or an optical disk drive that reads from or writes to a removable nonvolatile optical disk such as a CD ROM or other optical media. Other removable non removable volatile nonvolatile computer storage media that can be used in the exemplary operating environment include but are not limited to magnetic tape cassettes flash memory cards digital versatile disks digital video tape solid state RAM solid state ROM and the like. A hard disk drive is typically connected to the system bus through a non removable memory interface such as an interface and a magnetic disk drive or optical disk drive is typically connected to the system bus by a removable memory interface such as an interface.

A user can enter commands and information into the computer through input devices such as a keyboard and pointing device commonly referred to as a mouse trackball or touch pad. Other input devices can include a microphone joystick game pad satellite dish scanner or the like. These and other input devices are often connected to the processing unit through user input and associated interface s that are coupled to the system bus but can be connected by other interface and bus structures such as a parallel port game port or a universal serial bus USB . A graphics subsystem can also be connected to the system bus . A monitor or other type of display device is also connected to the system bus via an interface such as output interface which can in turn communicate with video memory. In addition to a monitor computers can also include other peripheral output devices such as speakers and a printer which can be connected through output interface

The computer can operate in a networked or distributed environment using logical connections to one or more other remote computers such as remote computer which can in turn have media capabilities different from device . The remote computer can be a personal computer a server a router a network PC a peer device or other common network node or any other remote media consumption or transmission device and can include any or all of the elements described above relative to the computer . The logical connections depicted in include a network such local area network LAN or a wide area network WAN but can also include other networks buses. Such networking environments are commonplace in homes offices enterprise wide computer networks intranets and the Internet.

When used in a LAN networking environment the computer is connected to the LAN through a network interface or adapter. When used in a WAN networking environment the computer typically includes a communications component such as a modem or other means for establishing communications over the WAN such as the Internet. A communications component such as a modem which can be internal or external can be connected to the system bus via the user input interface of input or other appropriate mechanism. In a networked environment program modules depicted relative to the computer or portions thereof can be stored in a remote memory storage device. It will be appreciated that the network connections shown and described are exemplary and other means of establishing a communications link between the computers can be used.

Various distributed computing frameworks have been and are being developed in light of the convergence of personal computing and the Internet. Individuals and business users alike are provided with a seamlessly interoperable and Web enabled interface for applications and computing devices making computing activities increasingly Web browser or network oriented.

For example MICROSOFT s managed code platform i.e. .NET includes servers building block services such as Web based data storage and downloadable device software. Generally speaking the .NET platform provides 1 the ability to make the entire range of computing devices work together and to have user information automatically updated and synchronized on all of them 2 increased interactive capability for Web pages enabled by greater use of XML rather than HTML 3 online services that feature customized access and delivery of products and services to the user from a central starting point for the management of various applications such as e mail for example or software such as Office .NET 4 centralized data storage which increases efficiency and ease of access to information as well as synchronization of information among users and devices 5 the ability to integrate various communications media such as e mail faxes and telephones 6 for developers the ability to create reusable modules thereby increasing productivity and reducing the number of programming errors and 7 many other cross platform and language integration features as well.

While some exemplary embodiments herein are described in connection with software such as an application programming interface API residing on a computing device one or more portions of the disclosed subject matter can also be implemented via an operating system or a middle man object a control object hardware firmware intermediate language instructions or objects etc. such that the systems and methods that facilitate inter process networking in accordance with the disclosed subject matter can be included in supported in or accessed via all of the languages and services enabled by managed code such as .NET code and in other distributed computing frameworks as well.

There are multiple ways of implementing the disclosed subject matter e.g. an appropriate API tool kit driver code operating system control standalone or downloadable software object etc. which enables applications and services to utilize inter process networking and related systems and methods of the disclosed subject matter. The disclosed subject matter contemplates the use of the disclosed subject matter from the standpoint of an API or other software object as well as from a software or hardware object that provides inter process networking in accordance with the disclosed subject matter. Thus various implementations of the disclosed subject matter described herein can have aspects that are wholly in hardware partly in hardware and partly in software as well as in software.

The word exemplary is used herein to mean serving as an example instance or illustration. For the avoidance of doubt the subject matter disclosed herein is not limited by such examples. In addition any aspect or design described herein as exemplary is not necessarily to be construed as preferred or advantageous over other aspects or designs nor is it meant to preclude equivalent exemplary structures and techniques known to those of ordinary skill in the art. Furthermore to the extent that the terms includes has contains and other similar words are used in either the detailed description or the claims for the avoidance of doubt such terms are intended to be inclusive in a manner similar to the term comprising as an open transition word without precluding any additional or other elements.

As mentioned above while exemplary embodiments of the disclosed subject matter have been described in connection with various computing devices and network architectures the underlying concepts can be applied to any computing device or system in which it is desirable to provide inter process networking. For instance the systems and methods that facilitate inter process networking of the disclosed subject matter can be applied to the operating system of a computing device provided as a separate object on the device as part of another object as a reusable control as a downloadable object from a server as a middle man between a device or object and the network as a distributed object as hardware in memory a combination of any of the foregoing etc. While exemplary programming languages names and examples are chosen herein as representative of various choices these languages names and examples are not intended to be limiting. One of ordinary skill in the art will appreciate that there are numerous ways of providing object code and nomenclature that achieves the same similar or equivalent functionality achieved by the various embodiments of the disclosed subject matter.

As mentioned the various techniques described herein can be implemented in connection with hardware or software or where appropriate with a combination of both. As used herein the terms component system and the like are likewise intended to refer to a computer related entity either hardware a combination of hardware and software software or software in execution. For example a component can be but is not limited to being a process running on a processor a processor an object an executable a thread of execution a program and or a computer. By way of illustration both an application running on computer and the computer can be a component. One or more components can reside within a process and or thread of execution and a component can be localized on one computer and or distributed between two or more computers.

Thus the methods and apparatus of the disclosed subject matter or certain aspects or portions thereof can take the form of program code i.e. instructions embodied in tangible media such as floppy diskettes CD ROMs hard drives or any other machine readable storage medium wherein when the program code is loaded into and executed by a machine such as a computer the machine becomes an apparatus for practicing the disclosed subject matter. In the case of program code execution on programmable computers the computing device generally includes a processor a storage medium readable by the processor including volatile and non volatile memory and or storage elements at least one input device and at least one output device. One or more programs that can implement or utilize the systems and methods that facilitate inter process networking of the disclosed subject matter e.g. through the use of a data processing API reusable controls or the like are preferably implemented in a high level procedural or object oriented programming language to communicate with a computer system. However the program s can be implemented in assembly or machine language if desired. In any case the language can be a compiled or interpreted language and combined with hardware implementations.

The methods and apparatus of the disclosed subject matter may also be practiced via communications embodied in the form of program code that is transmitted over some transmission medium such as over electrical wiring or cabling through fiber optics or via any other form of transmission wherein when the program code is received and loaded into and executed by a machine such as an EPROM a gate array a programmable logic device PLD a client computer etc. the machine becomes an apparatus for practicing the disclosed subject matter. When implemented on a general purpose processor the program code combines with the processor to provide a unique apparatus that operates to invoke the functionality of the disclosed subject matter. Additionally any storage techniques used in connection with the disclosed subject matter may invariably be a combination of hardware and software.

Furthermore portions of the disclosed subject matter can be implemented as a system method apparatus or article of manufacture using standard programming and or engineering techniques to produce software firmware hardware or any combination thereof to control a computer or processor based device to implement aspects detailed herein. The term article of manufacture or alternatively computer program product where used herein is intended to encompass a computer program accessible from any computer readable device carrier or media. For example computer readable media can include but are not limited to magnetic storage devices e.g. hard disk floppy disk magnetic strips . . . optical disks e.g. compact disk CD digital versatile disk DVD . . . smart cards and flash memory devices e.g. card stick . Additionally it is known that a carrier wave can be employed to carry computer readable electronic data such as those used in transmitting and receiving electronic mail or in accessing a network such as the Internet or a local area network LAN .

The aforementioned systems have been described with respect to interaction between several components. It can be appreciated that such systems and components can include those components or specified sub components some of the specified components or sub components and or additional components and according to various permutations and combinations of the foregoing. Sub components can also be implemented as components communicatively coupled to other components rather than included within parent components hierarchical . Additionally it should be noted that one or more components may be combined into a single component providing aggregate functionality or divided into several separate sub components and any one or more middle layers such as a management layer can be provided to communicatively couple to such sub components in order to provide integrated functionality. Any components described herein can also interact with one or more other components not specifically described herein but generally known by those of skill in the art.

In view of the exemplary systems described supra methodologies that can be implemented in accordance with the disclosed subject matter will be better appreciated with reference to the flowchart of . While for purposes of simplicity of explanation the methodologies are shown and described as a series of blocks it is to be understood and appreciated that the claimed subject matter is not limited by the order of the blocks as some blocks may occur in different orders and or concurrently with other blocks from what is depicted and described herein. Where non sequential or branched flow is illustrated via flowchart it can be appreciated that various other branches flow paths and orders of the blocks can be implemented which achieve the same or a similar result. Moreover not all illustrated blocks may be required to implement the methodologies described hereinafter.

Furthermore as will be appreciated various portions of the disclosed systems and methods can include or consist of artificial intelligence or knowledge or rule based components sub components processes means methodologies or mechanisms e.g. support vector machines neural networks expert systems Bayesian belief networks fuzzy logic data fusion engines classifiers . . . . Such components inter alia can automate certain mechanisms or processes performed thereby to make portions of the systems and methods more adaptive as well as efficient and intelligent.

While the disclosed subject matter has been described in connection with the preferred embodiments of the various figures it is to be understood that other similar embodiments can be used or modifications and additions can be made to the described embodiment for performing the same function of the disclosed subject matter without deviating therefrom. For example while exemplary network environments of the disclosed subject matter are described in the context of a networked environment such as a peer to peer networked environment one skilled in the art will recognize that the disclosed subject matter is not limited thereto and that the methods as described in the present application can apply to any computing device or environment such as a gaming console handheld computer portable computer etc. whether wired or wireless and can be applied to any number of such computing devices connected via a communications network and interacting across the network. Furthermore it should be emphasized that a variety of computer platforms including handheld device operating systems and other application specific operating systems are contemplated especially as the number of wireless networked devices continues to proliferate.

While exemplary embodiments refer to utilizing the disclosed subject matter in the context of particular programming language constructs the disclosed subject matter is not so limited but rather may be implemented in any suitable language to provide systems that facilitate inter process networking and related methods. Still further the disclosed subject matter can be implemented in or across a plurality of processing chips or devices and storage can similarly be effected across a plurality of devices. Therefore the disclosed subject matter should not be limited to any single embodiment but rather should be construed in breadth and scope in accordance with the appended claims.

