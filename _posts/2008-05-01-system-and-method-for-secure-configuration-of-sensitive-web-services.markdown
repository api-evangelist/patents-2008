---

title: System and method for secure configuration of sensitive web services
abstract: The present invention discloses a system and method for configuration of access rights to sensitive information handled by a sensitive Web-Service. In a case of requested configuration changes initiated by the client system the Web-Server system provides a configuration data file to the client system preferably using a SOAP-communication protocol. The changes of the configuration data file are exclusively performed offline at the client side and the updated configuration data file is signed with authentication information and sent as a part of a SOAP-request to the Web-Server system. The Web-Server system provides a filter component for identifying and discarding non-SOAP requests as well as an access control manager for providing authentication examination for incoming SOAP-requests. After successful passing these components the SOAP-request is used for updating the existing configuration data file.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07926093&OS=07926093&RS=07926093
owner: International Business Machines Corporation
number: 07926093
owner_city: Armonk
owner_country: US
publication_date: 20080501
---
This application is a Continuation of U.S. application Ser. No. 10 242 129 filed on Sep. 12 2002 which is incorporated herein by reference in its entirety.

The present invention relates to secure configuration of access rights to sensitive information and more particular to secure configuration of access rights to sensitive information handled by a sensitive Web Service especially by a secure electronic vault Web Service.

In the prior art a well known system for storing sensitive information is the secure electronic vault . The secure electronic vault may be defined as a secure data store that allows users to securely store their sensitive information into a remote data store and customize the access rights to that sensitive information by means of a configuration program. Sensitive information may be any information like contracts legal documents passwords debit card numbers bills receipts etc. Configuration of a secure electronic vault running at a remote Web Server requires a login of the client to the Web Server and the client typically starts a configuration program for doing the required changes of the access rights to the secure electronic vault.

The communication between client and Web Server is typically based on the Hypertext Transfer Protocol HTTP . Usually HTTP takes places over TCP IP Transmission Control Protocol Internet Protocol . A HTTP request consists of the HTTP method e.g. GET HEAD POST the Universal Resource Identifier URI the protocol version and an optional supplemental information. The method is executed on the object named by the URI. The connection is established by the client prior to the request and terminated by the Web Server after the response is transmitted.

HTTP requires a permanent online communication between client and Web Server that simultaneously implies security issues taking into consideration that Web Servers are often intruded by unauthorized user e.g. Hacker who can manipulate files or configuration data at the Web Server side. This applies accordingly to Web Servers with the latest firewall technology.

It is therefore an object of the present invention to provide a system and method for configuration of access rights to sensitive information without having the security problems of the prior art.

This object is solved by the features of the independent claims. Further embodiments of the present invention are laid down in the dependent claims.

The present invention discloses a system and method for configuration of access rights to sensitive information handled by a sensitive Web Service. In a case of requested configuration changes initiated by the client system the Web Server system provides a configuration data file to the client system preferably using a SOAP communication protocol. The changes of the configuration data file are exclusively performed offline at the client side and the updated configuration data file is signed with authentication information and sent as a part of a SOAP request to the Web Server system. The Web Server system provides a filter component for identifying and discarding non SOAP requests as well as an access control manager for providing authentication examination for incoming SOAP requests. After successfully passing these components the SOAP request is used for updating the existing configuration data file.

A new technology is currently evolving in the Internet the so called Web Services. Web Services may be defined as providing existing or new e business services into a service oriented architecture SOA . These Web Services are normally offered by independent Service Providers to support other Internet users in managing their Internet activities. Examples of such services may be tax calculation for an online shop payment handling for internet shops document translation into various languages or secure electronic vaults. To support these Web Services in the Internet a new architecture was defined SOA the Service Oriented Architecture. This new architecture describes how a Web Service may be found by user and how a potential user can access such Web Services.

The communication protocol for these Web Services is also a newly defined protocol called SOAP that stands for Simple Object Access Protocol.

SOAP is a way for a program running in one kind of operating system e.g. client to communicate with a program in the same or another kind of an operating system e.g. Web Server by using preferably the World Wide Web s Hypertext Transfer Protocol HTTP and the Extensible Mark up Language XML as the mechanisms for information exchange. Since Web protocols are installed and available for use by all major operating system platforms HTTP and XML provide an already at hand solution to the problem of how programs running under different operating systems in a network can communicate with each other. SOAP specifies exactly how to encode an HTTP header and an XML file so that a program in one computer can call a program in another computer and pass it information. It also specifies how the called program can return a response.

The basic architecture of SOAP is shown in . The basic architecture comprises three components the Service Providers the Service Brokers and the Service requesters.

The Service Providers publish the availability of their Web Services the Service Brokers register and categorize the published Web Services and provide search services and the Service Requesters using Service Broker to find a needed Web Service and then employing that Web Service.

The Service Provider offers a Web Service e.g. secure electronic vault Web Service. Service Providers publish their Web Service to a Service Broker. The Service Provider knows the semantics of the Web Service and publishes it in the right category in the Service Broker s taxonomy. What is published by the Service Provider to the Service Broker is called a service description. Service descriptions are XML documents that describe the semantics and the message API Application Programming Interface of a certain Web Service. For example the service description for a secure electronic vault Web Service may include the price of the service availability functionality URL IDL and so on. IDL or Interface Definition Language defines the input and output data required or provided by that Web Service. Service requesters knowing the Web Service they need ask the Service Broker for a list of services in that category. A Service Requester receives by SOAP Find response a service description for the requested Web Service. The Service Requester uses the IDL for converting the input data format generated by the shopping application into a data format required by the Web Service and sends a SOAP request containing the converted input data to the Web Service. The Web Service returns a SOAP response containing the result output data e.g. tax result to the Service Requester.

The online session between the client and Web Server is established by the client prior to the client s request using the HTTP communication protocol . Then the client especially client SOAP Client generates a SOAP request containing a data element indicating configuration of a requested sensitive Web Service preferably a secure electronic vault Web Service . That SOAP request is signed by client s private key or digital signature. That request is routed to the Web Server configuration program via HTTP Web Server Application Web Server SOAP Web Server and Access Control Manager all located at the Web Server side . The Access Control Manager executes an authentication check and if successful forwards that request to the configuration program. Furthermore the Access Control Manager controls the access rights to the sensitive information stored by the secure electronic vault Web Service by using the information in the configuration document. The configuration program is preferably implemented as a Java Session Bean session. The Java Session Bean responds to the client request by sending a Java applet containing a configuration program that assists the client by the configuration of his requested Web Service . The Java applet is sent as a part of a SOAP request to the client . Preferably that SOAP request is signed by Web Server s key e.g. Web Server s private key or symmetric key exchanged between client and Web Server. Furthermore the configuration program additionally provides the current configuration of the secure electronic vault Web Service in the form of a configuration data file preferably laid down as an XML document to the client . The configuration document is sent as part of a SOAP response that is preferably signed with a key asymmetric or symmetric . Now the online session between client and Web Server is closed and the further steps are executed offline at the client side . The client receiving both responses from the Web Server starts the applet via its browser and makes changes by means of the applet providing a configuration tool at the configuration document . Typical updates of the secure electronic vault may give other users access to specific documents remove access rights lock documents for any access. The online session between client and Web Server is again reestablished by the client prior to the client s SOAP request . The updated configuration document is sent via SOAP client as a part of a SOAP request to the Web Server providing the Web Service . The SOAP request is then provided to the Access Control Manager via SOAP Web Server HTTP Web Server and Application Web Server all located at the Web Server side . Preferably the SOAP request is signed by a key asymmetric or symmetric key . The Access Control Manager checks the authentication of the SOAP request and if successful forwards the SOAP request to the session bean handling updates of the configuration data file stored in the data base . In another embodiment of the present invention there is no need for providing an additional configuration applet from the Web Server to the client. Instead the browser located at the client provides the functionality to update the configuration data file provided by the Web Web Server.

Service Requester components are client applications that request the Web Services of the secure electronic vault. They use the SOAP protocol and HTTP for communication. These client applications are normally part of bigger applications installed at the client side.

For scalability and availability purposes the secure electronic vault Web Service uses the WebSphere Edge Web Server described below 

The IBM WebSphere Edge Server or simply Edge Server helps information technology administrators provide better service both to users who access documents stored on the enterprise s server machines and to their internal users who access the Internet In other words Edge Server helps both to host Web accessible content and to provide Internet access more efficiently and economically. The name Edge Server indicates that the software usually runs on machines that are close in a network configuration sense to the boundary between an enterprise s intranet and the Internet.

The Edge Server includes two main components that provide complementary functionality the Caching Proxy and the Network Dispatcher.

The Caching Proxy component intercepts data requests from end users service requesters retrieves the requested information from content hosting machines and delivers it back to the end users. Most commonly the requests are for documents stored on Web server machines also called origin servers or content hosts and delivered via the HyperText Transfer Protocol HTTP .

The Network Dispatcher also intercepts data requests from end users but rather than actually retrieving data it forwards the request to the Web Server machine that is currently best able to fill the request. In other words it load balances incoming requests among a defined set of machines that service the same type of requests. A form of load balancer is sometimes termed a sprayer because it divides up an incoming stream of requests and distributes them to the machines that service them. The Network Dispatcher can distribute requests to many types of servers including both HTTP origin servers and Caching Proxy machines. If desired you can write rules that specify the criteria used by the Network Dispatcher when determining which server can best handle a request.

IBM Secure Way Boundary Server provides protection for Internet based business transactions through the use of firewall virtual private networking and content filtering technologies.

For availability and scalability reasons the secure electronic vault application is configurable to run in multiple nodes. Depending on the installation needs these nodes can run on a single machine on a single machine with multiple processors and on different machines. The distribution of requests is handled by the network dispatcher described earlier. This multi node concept is facilitated by IBM s Websphere Application Servers ability to provide workload management WLM .

In this scenario the so called cloning concept is shown. Cloning is a mechanism provided by the WebSphere Administration system that allows for the creation of multiple copies of an object such as an application server. The clones can be instantiated on multiple nodes and it is also possible to instantiate multiple clones on the same node.

The IBM HTTP Server communicates requests coming from a requester to the IBM WebSphere application server. The HTTP server can be configured to allow HTTP requests on a specific port only.

The Application Server in WebSphere is the process that is used to run servlet and or EJB based applications providing both the servlet run time components Servlet Engine Web applications and EJB run time EJB container .

The SOAP Web Server is a component from SOAP that handles SOAP requests and responses. It is implemented as a servlet. It is a standard component of the SOAP runtime environment.

The secure electronic vault Access Control Manager s main task is to validate the authentification and authorization of the digitally signed SOAP Messages. It uses a Certification Authority for these validations CA LDAP server . Furthermore it contains a filter component for identifying and discarding non valid requests especially non SOAP requests.

Depending on the request the Access Control Manager then calls the appropriate components like the Safe Box Handler a Session Bean that calls an Entity Bean . The Entity Bean itself is responsible for performing the action requested e.g. store configuration document update configuration document. For Access Control Information that is not in the CA e.g. A user profile an Entity bean receives the information directly from the database .

In this setup the DB2 XML Extender is used together with DB2 to serve as the database for the XML configuration documents that the requesters want to store in the secure electronic vault. DB2 XML Extender serves as a repository for XML documents and their document type definitions DTDs . It provides the option to store the entire configuration document as an XML user defined column or to decompose the configuration document into multiple tables and columns. Fast search using indices is provided for XML elements and attributes.

In summary this invention avoids the necessity to logon to such a sensitive Web Server if configuration changes to an installed Web Service are required. The sensitive Web Server offers only one single HTTP access port. Furthermore only signed SOAP requests will be accepted by the HTTP Web Server. All other incoming requests will be discarded by applying specific filter mechanisms provided by the HTTP Web Server. In a case of required configuration changes the client is sending a signed SOAP request to the Web Server requesting the configuration document to be changed. The changes of the configuration document are accomplished exclusively offline and the updated configuration document is sent as a part of a signed SOAP request to the Web Server. The updated configuration document is used by a program at the Web Web Server side that receive that document and configures the Web Service according to the updated configuration document.

