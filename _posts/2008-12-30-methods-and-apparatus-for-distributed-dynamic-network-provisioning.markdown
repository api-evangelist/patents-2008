---

title: Methods and apparatus for distributed dynamic network provisioning
abstract: In one embodiment, a method includes detecting a virtual resource hosted by a host device, selecting a configuration template associated with the virtual resource, and providing a provisioning instruction to a virtual switch module hosted by the host device based on the configuration template. The host device is operatively coupled to a network device. The detecting is at the network device; the selecting is at the network device; and the providing is at the network device. The virtual switch module is in communication with the virtual resource. The configuration template associated with the virtual resource is selected from a library of configuration templates accessible to the network device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08565118&OS=08565118&RS=08565118
owner: Juniper Networks, Inc.
number: 08565118
owner_city: Sunnyvale
owner_country: US
publication_date: 20081230
---
This application is related to a U.S. patent application Ser. No. 12 346 632 filed on Dec. 30 2008 now U.S. Pat. No. 8 331 362 and entitled Methods and Apparatus for Distributed Dynamic Network Provisioning which is incorporated herein by reference in its entirety.

Some embodiments relate generally to methods and apparatus for dynamic distributed provisioning in a network including for example provisioning of network resources by network devices. Some embodiments relate more specifically to providing distributed provisioning of virtual computing resources by network devices such as access switches in a switch fabric within a data center.

Virtualized environments or enterprises such as those in data centers include virtual computing resources or virtual machines that execute or are hosted on physical servers. Multiple virtual machines can be hosted by a single physical server. Virtual machines can be configured to perform most functions that physical servers perform. Use of virtual machines can be beneficial for for example efficient use of physical computing resources fault tolerance of physical computing resources and continued service during maintenance of physical computing resources.

Virtual machines can also introduce additional complexity in a network environment. For example to provide fault tolerance of physical computing resources virtual machines typically migrate or are transferred from a first server to a second server. In large scale network environments such as for example data center environments migration of virtual machines typically involves provisioning or configuration of network ports and or network devices such that network traffic is routed from the first server to the second server after the migration. Some known network management solutions pre provision the network ports and or devices in the network. Although pre provisioning addresses the need to provision network ports and or devices after migration of a virtual machine it can result in inefficient usage of forwarding path resources. For example pre provisioning includes defining or reserving IP addresses before they are used processing data packets at network switches for virtual resources that are not operatively coupled to those network switches and forwarding network traffic to network ports or virtual ports that are not yet connected to a particular virtual machine. Additionally this situation can be a security concern because network traffic can be forwarded to network ports on servers with no virtual machine or service active at those network ports.

Other known network management solutions rely on complex management and policy orchestration tools to manage migration and provisioning of network ports and or devices. Such known tools typically provision the network ports and or devices based on a description of the network topology provided a priori by a system administrator. These known tools typically rely on such a description to determine which network ports and or switches will be provisioned after migration of a virtual machine. Such descriptions can be difficult to compile maintain and verify resulting in additional complexity for the network administrator and significant opportunities for misconfiguration of network ports and or devices. Additionally because such descriptions are provided a priori such tools can impose static requirements on the topology of networks. Thus a need exists for improved dynamic provisioning in networks.

In one embodiment a method includes detecting a virtual resource hosted by a host device selecting a configuration template associated with the virtual resource and providing a provisioning instruction to a virtual switch module hosted by the host device based on the configuration template. The host device is operatively coupled to a network device. The detecting is at the network device the selecting is at the network device and the providing is at the network device. The virtual switch module is in communication with the virtual resource. The configuration template associated with the virtual resource is selected from a library of configuration templates accessible to the network device. In some embodiments the method further comprises provisioning a local port on the network device based on the configuration template.

Network ports and or devices in a network can be dynamically provisioned after migration of a virtual resource within the network without a management orchestration tool. For example a network can include multiple network devices such as network switches each storing a library of configuration templates including provisioning instructions for services provided over the network by virtual machines in the network. When a virtual machine migrates to and or is instantiated or started on a server connected to a port of a network switch the server can send to the switch an identifier related to a service provided by the virtual machine. The network device can select a configuration template from the library of configuration templates based on the identifier and provision the port and or the server based on the configuration template. Thus the task of provisioning network ports and or devices can be distributed across switches in the network and vary dynamically as virtual machines or resources are migrated among servers within the network.

As used in this specification provisioning can include various types or forms of device and or software module setup configuration and or adjustment. For example provisioning can include configuring a network device such as a network switch based on a network policy. More specifically for example network provisioning can include one or more of the following configuring a network device to operate as a network router or a network switch alter routing tables of a network device update security policies and or device addresses or identifiers of devices operatively coupled to a network device selecting which network protocols a network device will implement setting network segment identifiers such as virtual local area network VLAN tags for a port of a network device and or applying access control lists ACLs to a network device. The network switch can be provisioned or configured such that rules and or access restrictions defined by the network policy are applied to data packets that pass through the network switch. In some embodiments virtual devices can be provisioned. A virtual device can be for example a software module implementing a virtual switch virtual router or virtual gateway that is configured to operate as an intermediary between a physical network and virtual resources hosted by a host device such as a server. In some embodiments the virtual switch is hosted by the host device. In some embodiments provisioning can include establishing a virtual port or connection between a virtual resource and a virtual device.

As used in this specification the singular forms a an and the include plural referents unless the context clearly dictates otherwise. Thus for example the term a host device is intended to mean one or more host devices or a combination of host devices network device is intended to mean one or more network devices or a combination thereof.

As illustrated in host devices and host or execute virtual resources R and R and R and R respectively. Additionally host devices and host or execute virtual switch modules VS and VS respectively. Virtual resources R R R and R can be any of a variety of software modules running on a host device. For example a virtual resource can be a web server a file server a guest operating system in a virtual machine or a network service such as for example local directory access protocol LDAP . Virtual switch modules typically operate as a gateway between virtual resources hosted by a host device and a physical network interface such as a network interface card NIC . For example host device can be operatively coupled to network device via a NIC. Virtual switch module VS can be in communication with the NIC to send data packets received by the NIC to virtual resources R and R based on a destination address of the data packets. Additionally virtual switch module VS can receive data packets from virtual resources R and R and provide those data packets to the NIC to be forwarded via network device switch fabric and network device to a destination such as for example virtual resource R.

Network device and network device can be for example a switch router gateway bridge and or other network device configured to provide host device and host device with access to switch fabric . is system block diagram of a network device according to an embodiment. Network device includes processor operatively coupled to memory network interface port communication interface port communication port and communication port . Processor is configured to communicate with computing devices such as host devices e.g. servers in a network via communication interface port communication interface port and communication interface port . In some embodiments network device can include more or fewer communication interface ports than are illustrated in . Network device can include for example 64 128 256 or more communication interface ports.

Network device is configured to receive data packets and forward the data packets to one or more of network interface port communication interface port communication interface port and or communication interface port based on parameters of the data packets. In some embodiments network device can be operatively coupled to a switch fabric such as switch fabric in and communication interface ports and or can be operatively coupled to host devices such as host devices and in . In some embodiments host devices operatively coupled to network devices which are operatively coupled to a common switch fabric can communicate one with another via the network devices and a switch fabric. For example a data packet received via network interface port can include a destination parameter having a value associated with an identifier of a host device connected to communication interface port . Processor can determine to which communication interface port if any the packet should be forwarded based on for example data stored in memory . Because the data packet includes a destination address or parameter having a value associated with an identifier of a host device connected to communication interface port processor can determine that the data packet should be forwarded to communication interface port . In some embodiments memory can include rules and or access control lists ACLs that can be satisfied by parameters of the data packet before processor will forward the data packet. For example a rule can specify that a source address parameter of the data packet includes a value in a range of values specified in the rule. If the value is outside of the specified range of values the data packet will not be forwarded to communication interface .

In some embodiments network device can be configured as a network switch such as an access switch coupled to a switch fabric. In some embodiments network device can be configured as a network router network hub network gateway or network bridge.

In some embodiments network device can include a control interface port not shown . The control interface port can be used for communicating with for example an administration device such as a network management module and or an external management entity not shown in or . For example a network management module can be incorporated into a control plane of a network appliance or a switch fabric and network device can be operatively coupled to the control plane of the network appliance via the control interface. In other embodiments network device can communicate with a network management module via network interface port and or one or more of communication interface port communication interface port and communication interface port .

In some embodiments memory is configured to store a library of configuration templates. A configuration template can include for example a configuration template identifier and provisioning or configuration instructions for provisioning a network port or device. Processor can be configured to select a configuration template from the library of configuration templates stored in memory and provision one or more of communication interface port communication interface port and communication interface port based on the configuration template. Additionally in some embodiments processor is configured to provision a host device operatively coupled to one of communication interface port communication interface port and communication interface port based on the configuration template. In some embodiments processor is configured to provision a virtual switch module hosted by host device operatively coupled to one of communication interface port communication interface port and communication interface port based on the configuration template.

Communication module is operatively coupled to configuration template identifier determination module . Configuration template identifier determination module is configured to receive from communication module a device identifier and determine a configuration template identifier based on the device identifier. In some embodiments configuration template identifier determination module can be configured to extract a configuration template identifier from a device identifier based on for example a bit mask or a byte mask. In some embodiments a portion of a device identifier can be configuration template identifier. For example the first sixteen bits in a 48 bit device identifier can represent a configuration template identifier. Thus sixteen bits of the device identifier can identify a configuration template related to the virtual resource or a device with which the device identifier is associated and the remaining thirty two bits can be a unique or semi unique e.g. unique within a particular network or network segment device identifier associated with the virtual resource or device. In some embodiments configuration template identifier determination module is configured to extract an index value from a device identifier and select a configuration template identifier from a table based on the index value. In some embodiments the entire device identifier can be an index value.

Configuration template identifier determination module can be configured to provide the configuration template identifier to configuration template selection module . Configuration template selection module can be configured to receive a configuration template identifier from configuration template identifier determination module and select a configuration template from for example configuration template library based on the configuration template identifier. In some embodiments configuration template selection module can be configured to select a configuration template from a database including a library of configuration templates that is external to network device . For example multiple network devices can have access to a single database including a library of configuration templates. Thus in some embodiments the library of configuration templates need not be updated separately for each network device in a system or network.

In some embodiments one or more of communication module configuration template identifier determination module configuration template selection module and or configuration template library can be combined into a single module. Thus in some embodiments configuration template identifier determination module and configuration template selection module can be a single module. For example a module can receive a device identifier from communication module and determine a configuration template based on the device identifier without providing a configuration template identifier to a separate module.

Virtual resource R and virtual resource R can be for example software modules including network services such as web servers dynamic host configuration protocol DHCP servers file transfer protocol FTP servers file servers and or other software modules. In some embodiments virtual resource R and virtual resource R are virtual machines or virtual network appliances. Virtual machines and virtual network appliances can be software modules that are configured to emulate computing devices such as general purpose computers and or specialized computing devices including network appliances.

Virtual resource R and virtual resource R are configured to communicate with a network via virtual switch module VS. Virtual switch module VS is configured to operate as a bridge between for example a physical network to which host device is operatively coupled via communication interface and virtual resources R and R.

Virtual switch module VS can be a software module operating at a processor or a portion of a processor configured to communicate with virtual resource R virtual resource R and communication interface . Communication interface is typically a physical communication interface such as a network interface card NIC or a portion of a software network stack associated with a NIC. In some embodiments virtual switch module VS can be integrated with a software network stack associated with a NIC. In other words virtual switch module VS can be a portion of a NIC network stack. In some embodiments a virtual switch module can be a hardware module or a portion of a hardware module. For example a virtual switch module can be a hardware based NIC. In other words a virtual switch module can be implemented in software and or embedded in hardware.

Communication interface is configured to be operatively coupled to a network or other computing or network device. For example host device can be operatively coupled to another host device or a network device via communication interface . Processor can communicate with the network or other computing or network device via communication interface . For example a data packet can be received by processor via communication interface . Processor can execute code representing virtual switch module VS to determine to if the data packet should be forwarded to one or both of virtual resource R and virtual resource R. If processor determines that the data packet should be forwarded to for example virtual resource R processor can execute code associated with virtual switch VS and or code associated with virtual resource R such that the data packet is forwarded or transferred to a portion of memory representing a data packet input of virtual resource R. Processor can then execute code representing virtual resource R to process and or respond to the data packet by for example providing a response to the source of the data packet via virtual switch module VS and communication interface . In some embodiments a virtual switch module can be a hardware module.

Referring now to host device includes or hosts virtual resource R virtual resource R and virtual switch module VS. Virtual switch module VS is in communication with virtual resource R and virtual resource R. Similarly host device includes or hosts virtual resource R virtual resource R and virtual switch module VS. Virtual switch module VS is in communication with virtual resource R and virtual resource R. In some embodiments virtual resource R and or virtual resource R can migrate or be transferred from host device to host device such that virtual switch module VS is in communication with virtual resource R virtual resource R and virtual resource R and or virtual resource R. In some embodiments virtual resource R and or virtual resource R can migrate or be transferred from host device to host device such that virtual switch module VS is in communication with virtual resource R virtual resource R and virtual resource R and or virtual resource R.

In some embodiments network device is configured to detect or determine that virtual resource R and or virtual resource R has migrated to host device . Network device is configured to select or access a configuration template or provisioning instructions or provisioning parameters based on an identifier related to virtual resource R and or virtual resource R. Additionally network device is configured to provision one or more ports of network device host device and or virtual switch module VS based on the configuration template such that other devices connected to switch fabric can communicate with virtual resource R and or virtual resource R via network device .

In some embodiments network device is similarly configured with respect to host device and virtual switch module VS. In other words network device is configured to detect or determine that virtual resource R and or virtual resource R has migrated to host device and determine a configuration template or provisioning parameters based on an identifier related to virtual resource R and or virtual resource R. In other embodiments network device is configured to detect another event related to a virtual resource such as for example instantiation of a virtual resource a resume event of a virtual resource and or a suspend event of a virtual resource. Further network device is configured to provision one or more ports of network device host device and or virtual switch module VS based on the configuration template such that other device connected to switch fabric can communicate with virtual resource R and or virtual resource R via network device .

In some embodiments network device is configured to detect or determine that virtual resource R and or virtual resource R is no longer hosted by host device . For example network device can detect that virtual resource R has migrated from host device or has been shutdown. Network device can determine a deprovisioning instruction based on the detection or determination and provide the deprovisioning instruction to for example virtual switch module VS or a port of network device to which host device is connected. Similarly in some embodiments network device is configured to detect or determine that virtual resource R and or virtual resource R is no longer hosted by host device . Network device can determine a deprovisioning instruction based on the detection or determination and provide the deprovisioning instruction to for example virtual switch module VS or a port of network device to which host device is connected. In some embodiments network device can receive a notification from another device such as for example network device an external management entity not shown or some other device not shown that a port should be deprovisioned in response to for example a virtual resource migration instantiation suspension and or resume event. In some embodiments network device can deprovision the port in response to the notification.

In some embodiments deprovisioning can be based on one or more events and or notifications. In some embodiments an external management entity can provide and instruction or command such as a provisioning instruction to a network device to cause the network device to deprovision a port of the network device. For example an external management entity can cause a virtual resource to migrate from one host to another and the external management entity can cause a network device operatively coupled to the host device from with the virtual resource will migrate to deprovision the port operatively coupled to that host device. In some embodiments a host device or a software module such as a hypervisor or other virtual resource management module running at a host device can provide a notification that a port of a network device should be deprovisioned. In some embodiments a host device or a software module running at a host device can provide a command to a network device to deprovision a port of the network device. In some embodiments a network device can detect that a port should be deprovisioned based on a timeout. For example if no data for a virtual resource is received at a network device operatively coupled to the virtual resource for a period of time exceeding a timeout value the network device can determine that the port operatively coupled to the virtual resource should be deprovisioned for the virtual device. In some embodiments the network device can detect that no data has been sent to and or from the virtual resource for a period of time exceeding the timeout value. In some embodiments the network device can deprovision the port based on an instruction a command or a timeout value.

Server is operatively coupled to access switch . Server is operatively coupled to access switch . Access switch and access switch are operatively coupled to switch fabric . Switch fabric is operatively coupled to access switch . Access switch is operatively coupled to edge device . Edge device is operatively coupled to network . In some embodiments edge device is a firewall gateway bridge and or other device configured to connect switch fabric to network . In some embodiments network is outside the data center network. For example network can be the Internet an intranet and or some other network or combination of networks. Thus resources operatively coupled or connected to switch fabric such as for example virtual resource R hosted on server can communicate with devices not shown connected to network .

In some embodiments edge device includes a firewall module configured to limit access to switch fabric from network . For example edge device can prevent certain internet protocol IP addresses from accessing switch fabric and or prevent access to certain transport control packet TCP ports on server server access switch and or access switch .

Server includes virtual resource R virtual resource R and virtual switch module VS. Server includes virtual resource R virtual resource R and virtual switch module VS. Access switch includes memory and access switch includes memory . In some embodiments memory and memory include a library of configuration templates. Each configuration template in the library of configuration templates includes a configuration template identifier and provisioning instructions or commands. The provisioning instructions or commands can be interpreted or used by access switch and or access switch to provision one or more of access switch access switch server virtual switch module VS server and virtual switch module VS after a migration of virtual resource R virtual resource R virtual resource R and or virtual resource R. In some embodiments memory and memory can be a shared memory between access switch and access switch . For example a database can include the library of configuration templates and be accessible to both access switch and access switch .

A configuration template can be applied to a port of a network device and or to a virtual switch module and the network device and or virtual switch module can route data packets or other network communication based on the configuration template. For example a virtual switch module can drop or discard or not forward data packets that do not match parameters of an ACL included in a term of a configuration template. In some embodiments a virtual switch module can forward data that include a VLAN identifier or tag that is included in a configuration template. In some embodiments a configuration template can include a flag to indicate whether a parameter of an ACL is used to drop or to forward data packets. In other words in some embodiments some parameters or rules in a configuration template are exclusive rules e.g. when matched by a portion of a data packet the data packet is dropped and other parameters or rules in the configuration template are inclusive e.g. when matched by a portion of a data packet the data packet is forwarded .

In some embodiments the parameters of a configuration template are provisioning instructions. For example a VLAN parameter can be interpreted by a network device as an instruction to change a VLAN setting of the port of the network device operatively coupled to a virtual resource. The VLAN setting of the port can be set to a value included in a VLAN parameter of a configuration template related to the device identifier of the virtual resource. Similarly the other parameters of a configuration template can be provisioning instructions. In some embodiments a configuration template can include executable code not shown in and a network device can execute the executable code as a provisioning instruction.

Referring now to in some embodiments virtual resources are configured to provide a device identifier to an access to which the server hosting the virtual resources are connected. For example virtual resource R can send a broadcast data packet when virtual resource R is instantiated on or migrated to server that is received by access switch . Access switch can use the device identifier to select a configuration template from a library of configuration templates and provision a port or virtual port of access switch that is operatively coupled to virtual resource R. In some embodiments access switch can query server for device identifiers of virtual resources hosted by server via a protocol. In some embodiments access switch can detect a virtual resource and a device identifier of a virtual resource based on network communication between virtual resource R and another device operatively coupled to for example network .

In some embodiments a device identifier includes multiple portions such as for example a portion containing the configuration template identifier and another portion including the unique identifier. For example a device identifier can be represented by a bit vector of forty eight bits. Twelve bits can represent a number that is the configuration template identifier and the remaining thirty six bits can be a unique identifier such that the resource associated with the device identifier is uniquely identified by the device identifier based on the unique identifier. In other words the device identifier can be a concatenation of a configuration template identifier and a unique identifier.

In some embodiments a device identifier can be produced based on a transform or encoding of a configuration template and a unique identifier. is a block diagram of another device identifier according to another embodiment. Similar to illustrates a device identifier based on a configuration template identifier and a unique identifier. As illustrated in a configuration template and a unique identifier can be encoded or transformed to produce a device identifier. For example a configuration template identifier can be represented by a bit vector or bit string and a unique identifier can be represented by a bit vector. The bit vectors representing the configuration template identifier and the unique identifier can be encoded together to define a device identifier. For example a forty eight bit device identifier can be produced based on a twelve bit configuration template identifier and a thirty six bit unique identifier by interleaving one bit of the configuration template identifier between every third bit of the unique identifier such that each of the bits of the configuration template identifier are interleaved among the bits of the unique identifier to produce a forty eight bit device identifier. Such an encoding can for example cause the device identifier to appear more random. In some embodiments the encoding can be configured to be progressive based on the unique identifier e.g. positioning of bits in a vector representation of the device identifier varies with bit value in a vector representation of the unique identifier . For example the encoding of bits from the configuration template identifier into the device identifier can be based on the value e.g. 1 or 0 of one or more bits in the unique identifier. In other embodiments some other encoding is used.

In some embodiments the encoding can be reversed such that the configuration template identifier can be determined based on the device identifier. Thus the configuration template identifier of the configuration template associated with the virtual resource identified by the device identifier can be extracted from the device identifier. In some embodiments a bit mask can be used extract a configuration template identifier from a device identifier. In some embodiments a bit mask and logical operations such as for example bit shifts an AND operation and or an OR operation can be used to extract a configuration template identifier from a device identifier.

In some embodiments a system or network administrator can use a software application to produce a device identifier for each virtual resource that will be available in a network such as in a data center network. Such a software application can be configured to have access to configuration parameters of the virtual resources such that the software application can update a parameter of each virtual resource including the device identifier of that virtual resource. In other words the software application can associate a device identifier with a virtual resource by updating a parameter of the virtual resource. For example a software application can have access via a network or a local file system to data files including configuration parameters of virtual machines. The software application can produce or generate device identifiers for the virtual machines based on a configuration template identifier of a configuration template related to each virtual machine and a unique identifier. After generating a device identifier the software application can store the device identifier as a parameter of the virtual machine such that the virtual machine can be identified by the device identifier after the virtual machine has been instantiated on a host device such as a server.

In some embodiments the system or network administrator can also provide the software application with commands or instructions configured to cause the software application to relate a configuration template with a virtual machine. In some embodiments the software application can provide a graphical user interface GUI or command line interface CLI for providing such commands. In some embodiments a data file such as a script file including such commands can be provided to the software application.

In some embodiments virtual machines or virtual resources can be identified by the software application based on a file name of a configuration file or a name of the virtual machine. In some embodiments virtual machines or virtual resources can be identified by the software application based on a type of the virtual resource or a service provided by the virtual resource. In some embodiments the type of the virtual resource or an identifier of a service provided by the virtual resource can be included in a configuration file accessible to the software application.

In some embodiments the unique identifier can be generated at random by the software application e.g. a unique identifier can be a nonce . In some embodiments the unique identifier is input to the software application by a system or network administrator.

As illustrated in external management entity can be operatively coupled to access switch access switch and access switch to send commands via access switch and access switch to server and server respectively. Access switch and access switch can provide various interfaces such as command interfaces to enable external management entity to communicate with access switch and access switch . In some embodiments external management entity can provide instructions or commands to virtual resources hosted on server and server . In some embodiments external management entity can be configured to send commands to server and or server to initiate or direct migration and or instantiation of virtual resources. In some embodiments external management entity can provide configuration templates to network resources such as for example access switches and . For example external management entity can update a database including a library of configuration templates that is accessible to access switches and .

In some embodiments access switch and access switch can communicate via a proprietary protocol with external management entity . In some embodiment communication between external management entity and access switch and or access switch is encrypted or secured using an encryption scheme such as for example symmetric encryption public private key encryption and or digital certificates. In some embodiments external management entity can send provisioning instructions or commands to server and or server through a network management module not shown in communication with access switch access switch server and or server via an application programming interface API . More details related to network management module and external management entities are set forth in co pending U.S. patent application Ser. No. 12 346 623 filed on Dec. 30 2008 and entitled Method and Apparatus for Determining a Network Topology during Network Provisioning which is incorporated herein by reference in its entirety.

In some embodiments external management entity is in communication with server and server via a control plane of switch fabric . In other words external management entity can be directly coupled to access switch and or or access switch and provide commands to server and server through access switch and access switch respectively. In some embodiments external management entity can be in communication with switch fabric and provide commands to server and server via switch fabric . In some embodiments external management entity can be connected to network and provide commands to server and via network . In some embodiments not shown in external management entity can be directly connected to access switch access switch server and server . In some embodiments access switch access switch server server and or external management entity can be operatively coupled to and configured to communication via a network not shown s separate from network . For example access switch access switch server server and or external management entity can be operatively coupled to a management network not shown .

In some embodiments external management entity is configured to provide instructions to server and server related to migration instantiation and removal of virtual resources. For example external management entity can provide instructions to servers and based on server utilization network bandwidth maintenance schedule or needs and or other factors. In some embodiments external management entity sends instructions to virtual resources R and R hosted on server and virtual resources R and R hosted on server . Access switch is configured to provision access switch server and or virtual switch module VS after server and or server have responded to the instructions from external management entity . Access switch is configured to provision access switch server and or virtual switch module VS after server and or server have responded to the instructions from external management entity. In some embodiments external management entity can manage start stop halt pause and or migration of virtual resources and access switch and access switch can provision resources in the network after start stop halt pause and or migration of one or more virtual resources. Thus provisioning in the network can be distributed across access switches in the system and dynamic in response to changes in the topology of virtual resources in the network.

In some embodiments access switches and can be configured to communicate with servers and and or other devices e.g. storage servers database servers and or other computer servers via a protocol such as Ethernet and with switch fabric or core of a switch fabric via another protocol e.g. a cell based protocol or other protocol other than Ethernet . In other words access switches and can provide host devices and respectively and or other devices configured to communicate via one protocol with access to a switch fabric configured to communication via another protocol. In some embodiments a switch fabric can include various types or classes or switches. For example a switch fabric can include core switches aggregation switches and or access switches. More specifically in some embodiments a switch fabric can include a core switch operatively coupled to a group of aggregation switches and each aggregation switch in the group of aggregation switch can be operatively coupled to a group of access switches. Each access switch can be operatively coupled to a group of servers. Thus each server can be operatively coupled to the other servers via the switch fabric.

More specifically for example the core of switch fabric can be configured as a strictly non blocking network or rearrangeably non blocking network such as a Clos network and can include a data plane and a control plane. Thus host devices and can be operatively coupled one to another via access switches and respectively which are operatively coupled to switch fabric . For example host device can send a data packet addressed to a host device via an Ethernet protocol to access switch . Access switch can receive the data packet and send the data packet via switch fabric using a proprietary protocol to access switch operatively coupled to access switch . For example access switch can send the data packet to access switch by separating or segmenting the data packet into cells that are transported via switch fabric configured for example as a cell based switch fabric based on data signals in a data plane and control signals in a control plane of switch fabric . Alternatively in some embodiments switch fabric can segment the data packet prior to transporting it to access switch . Access switch can then receive the cells representing the segmented data packet reassemble the data packet and send the data packet to host device via an Ethernet protocol. Alternatively switch fabric can reassemble the data packet based on the cells representing the data packet prior to providing the data packet to access switch .

Said differently in some embodiments access switches and can be configured to function as gateway devices between switch fabric host devices and and or other devices which can be configured to communicate based on different protocols. As described above a server can be configured to communicate based on an Ethernet protocol and a switch fabric can be a cell based fabric where one or more portions of data e.g. data packets are transmitted via the switch fabric in one or more cells e.g. variable size cells fixed size cells . In other words access switches and or can provide servers and or and or other devices configured to communicate via one protocol with access to switch fabric which can be configured to communicate via another protocol. In some embodiments access switch and or access switch can be configured to function as a router a network hub device and or a network bridge device.

Additionally in some embodiments access switch and or access switch can be configured to function as a gateway device for multiple host devices or servers . Specifically routing functionality between virtual resources at multiple host devices can be performed at a network device such as access switch and or access switch . This capability can facilitate scaling of host devices configured to access for example a switch fabric via a network device in a desirable fashion. More details related to switch fabrics and control planes of switch fabrics are set forth in co pending patent application U.S. patent application Ser. No. 12 345 498 filed on Dec. 29 2008 and entitled Control Plane Architecture for Switch Fabrics which is incorporated herein by reference in its entirety.

After the data packet is received a configuration template identifier is determined at . In some embodiments the data packet includes an identifier of the virtual resource or a service provided by the virtual resource that can be used to select a configuration template including provisioning parameters or instructions. For example the data packet can include a device identifier of the virtual resource a virtual local area network VLAN identifier of a VLAN to which the virtual resource and or service is related or a service identifier of a service provided by the virtual resource. In some embodiments such an identifier is used to determine a configuration template associated with or related to the service or virtual resource. For example a table or database can include a device identifier of a virtual resource and a configuration template identifier associated with that resource.

In some embodiments a configuration template identifier can be embedded within a device or service identifier. For example as discussed above in relation to a configuration template identifier can be embedded within a MAC address or other device identifier of a virtual resource. In some embodiments the device identifier has a first portion that represents a unique value such as for example a unique identifier to uniquely identify the virtual resource in the network or a network segment and a second portion that represents the configuration template identifier. In some embodiments a device identifier is a 48 bit value and the least significant or lower 32 bits are used to uniquely identify the virtual resource and the most significant or higher 16 bits are used to represent a configuration template identifier. For example a hexadecimal representation of such a device identifier can be 0x00FA8391DE1B. The lower 32 bits can be masked e.g. logically combined based on a logical AND operation with a hexadecimal value of 0xFFFF00000000 and the resulting value right bit shifted 32 bits to extract the configuration template identifier of 0x00FA or 250 as a decimal representation .

In some embodiments a configuration template identifier can be extracted from a device identifier based on other operations. For example as illustrated in a device identifier can be defined based on a transform e.g. mathematical operation that is reversible such that the configuration template identifier can be determined based on the device identifier and for example an inverse of the transform. In some embodiments a configuration template identifier can be extracted from or defined by a device identifier using an inverse or reverse of other methods discussed above in relation to and or other transforms or combinations.

At a configuration template identifier can be used to select a configuration template from a library of configuration templates. In other words a configuration template identifier can be used to determine an appropriate configuration template for a virtual resource or a service provided by a virtual resource. For example a configuration template identifier can be an index into table database or library of configuration templates. The configuration template can include the provisioning parameters instructions and or commands that are interpreted or sent to provision network resources.

Based on the configuration template selected at resources can be provisioned at and . In some embodiments at one or more network ports can be provisioned. For example a port of a network device such as an access switch to which a host device hosting a virtual resource is connected can be provisioned based on a configuration template. Rules and or ACLs for example can be applied to the port such that data packets received by the access switch that do not satisfy the rules and or ACLs are not forwarded to the host device or virtual resource. Such rules and or ACLs can be based on IP addresses TCP ports authentication credentials and or bandwidth limitations. In some embodiments process is implemented on a network device e.g. an access switch and the network device provisions ports on the network device. In other words the network device can provision its own ports.

In some embodiments at a virtual switch module hosted by a host device and in communication with the virtual resource can be provisioned. Similar to ports on a network device a virtual switch module can have virtual ports to which virtual resources are operationally coupled. Such virtual resources are logically coupled rather than physically coupled to a virtual switch module via virtual ports. In other words in some embodiments virtual ports via which virtual resources are coupled to a virtual switch are realized or implemented in a memory of a network device by a processor in communication with the memory. Because more than one virtual resource can be operatively coupled to a virtual network switch and rules and or ACLs are applicable to virtual resource virtual switch modules can be provisioned similar to ports of a network device.

In some embodiments a network device can provision a host device or a virtual switch module hosted by a host device by pushing a portion of a configuration template such as for example a provisioning instruction to the host device or virtual switch module. The virtual switch module can interpret the provisioning instruction and apply the necessary provisioning e.g. rules and ACLs based on the configuration template. In some embodiments a network device can provide or send commands or instructions to the host device to provision a virtual switch module. In other words in some embodiments a virtual switch module can be provisioned based on commands provided by a network device.

A provisioning instruction can be code or other commands such as for example a script that can be interpreted by a network device and or other device to configure a device in the network. For example a provisioning instruction can specify an ACL or a rule that is to be applied to a port of a network device or that a virtual port connection is to be defined between a virtual resource and a virtual switch module. In some embodiments a provisioning instruction can be an instruction to a virtual machine to change an operational state. For example an instruction or command to the virtual machine to shut down suspend or restart.

In some embodiments a port at and or a virtual switch module at are provisioned similarly. In other words the same provisioning such as rules and or ACLs for example can be applied to a virtual switch module as are applied to a port of a network device. In some embodiments a port and a virtual switch module are provisioned complimentarily. Said differently a configuration template can include one set of provisioning instructions for a port of network device and another set of provisioning instructions for a virtual switch module. In other embodiments a port and a virtual switch are provisioned with some similar provisioning instructions and some complimentary provisioning instructions. More details related to cooperative provisioning and or operation of virtual switch modules and network devices are set forth in co pending U.S. patent application Ser. No. 12 346 608 filed on Dec. 30 2008 and entitled Methods and Apparatus Related to Data Transmissions between Virtual Resources via a Network Device co pending U.S. patent application Ser. No. 12 346 612 filed on Dec. 30 2008 and entitled Methods and Apparatus Related to Data Transmissions between Virtual Resources via a Network Device co pending U.S. patent application Ser. No. 12 346 615 filed on Dec. 30 2008 and entitled Methods and Apparatus For Routing between Virtual Resources based on a Routing Location Policy co pending U.S. patent application Ser. No. 12 346 618 filed on Dec. 30 2008 and entitled Methods and Apparatus for Provisioning at a Network Device in Response to a Virtual Resource Migration Notification and co pending U.S. application Ser. No. 12 346 625 filed on Dec. 30 2008 and entitled Methods and Apparatus Related to Managing Communications Between Virtual Resources all of which are incorporated herein by reference in their entireties. In some embodiments a virtual switch module or virtual switch can be configured as a multiplexer and or demultiplexer and switching or routing can take place or occur at a network device.

After the port and or the virtual switch module are provisioned the virtual resource can communicate with other devices. In some embodiments a virtual resource can communicate with other virtual resources connected to a common access switches via the common access switch. In some embodiments a virtual resource can communicate with other virtual resources or devices coupled to a common access switch or other access switch via a switch fabric such as a multi stage switch fabric to which each of the access switches is coupled. In some embodiments a virtual resource can communicate with devices and or virtual resources connected to a network to which that virtual resource is coupled via an access switch switch fabric and or edge device.

At process waits for data packets to or from the virtual resource. If a data packet is received the data packet is serviced at . A data packet can be serviced by applying the rules and or ACLs provisioned at the port and or virtual switch module to the data packet. In other words the data packet is filtered or categorized based on data in the data packets. Further after rules and or ACLs are applied to a data packet the data packet can be sent or forwarded to the virtual resource if so addressed or sent of forwarded to another device via for example a switch fabric or a network. After the data packet has been serviced process can return to step .

If a data packet is not received within a timeout period a network device can determine that the virtual resource or physical resource such as a server or other host device is no longer in communication with the port. For example the virtual resource could have halted suspended crashed migrated and or had some other change in state. After a time out is detected the provisioning of steps and can be reversed or changed e.g. the virtual resource is deprovisioned at . For example a rule added or applied to a virtual switch module during step can be removed after the timeout period. In some embodiments the configuration template determined at step can be interpreted to determine what deprovisioning is appropriate at . After deprovisioning at process can return to step .

In some embodiments a network device can concurrently implement multiple processes . For example an access switch can manage or implement an instance of process for each virtual resource detected by the access switch. In some embodiments process can include additional steps and or fewer steps than illustrated in . For example in some embodiments a network device is not provisioned based on a configuration template. In some embodiments a single process or instance of process is implemented on a network device for all the virtual resources detected by the network device. Accordingly process can include additional steps for managing the state of each virtual resource detected by the network device. For example after deprovisioning a port and or a virtual switch module after a timeout process can include additional steps to determine whether additional virtual resource have already been detected and provisioned by that network device and return to step to wait for data packets to or from already detected and provisioned virtual resources. In other embodiments deprovisioning can be based on a notification or command sent from an external management entity a host device or hypervisor or other software module executing at the host device and or from some other device. For example a notification that virtual resource will be migrated suspended and or change an operational state.

In some embodiments process can include additional steps to receive and respond or react to state or status changes of a virtual resource based on for example information provided by that virtual resource and or a host device at which that virtual resource is running. For example a virtual resource can provide a migration suspend or halt notification to a network device implementing process . The network device can for example deprovision a virtual switch module and or port based on the notification and or configuration template related to the virtual resource. In some embodiments a virtual switch module is not provisioned. In some embodiments a port of a network device is not provisioned.

In some embodiments a virtual resource can coordinate migration of the virtual resource with one or more network devices. For example a virtual resource can provide a migration notification to a first network device including an identifier of a host device to which the virtual resource will migrate. In response to such a notification the first network device can deprovision a port and or virtual switch module. Additionally the first network device provide a notification to a second network device e.g. via a switch fabric to the network device connected to the host device to which the virtual resource will migrate indicating that the virtual resource will migrate to the second host device. The second network device can receive the notification and provision resources e.g. a port of the network device and or a virtual switch module based on information included in the notification. Thus network devices and virtual resources can pre provision ports virtual switch modules and or other resources in a network to decrease interruptions of service as a virtual resource migrates from one host device to another. In some embodiments the notification can include additional information such as for example an identifier of the virtual resource or a service provided by the virtual resource an identifier of the host device from which the virtual resource will migrate and or other information associated with the migration or provisioning.

In some embodiments devices in a network or operatively coupled one to another such as host device network device virtual resources and or an external management entity can cooperate during migration of a virtual resource such that provisioning of a network device is complete before the virtual resource is migrated or instantiated on a host device operatively coupled to that network device. In some embodiments device in a network can similarly cooperate to deprovision a network device before and or after a virtual device migrates from or is suspended on a host device operatively coupled to that network device. In some embodiments provisioning and or deprovisioning a network device includes provisioning and or deprovisioning a port of the network device.

For example when virtual resource migrates from one server to another server it can be desirable to want to ensure that the new server and or access switch operatively coupled to that server is provisioned for the virtual resource before migration is complete. In some embodiments provisioning is not complete but some coordination during provisioning exists between the server on which the virtual resource is hosted and or the access switch to which that server is operatively coupled before the migrations. In some embodiments such a priori or early provisioning can prevent data or traffic loss between the virtual resource and other devices. In some embodiments an applications enabled by a virtual resource can be agnostic to or not receive any notification or indication associated with a migration. Thus in some embodiments access switches and or host devices are provisioned such that a virtual resource can continue operating after migration without configuration changes at the virtual resource. For example access switches can be provisioned such that a virtual resource has one IP address before and after a migration and can communicate with other devices based on that IP address before and after the migration.

In some embodiments a server or other host device attached to an access switch or other network device can provide early notification to the access switch that a virtual resource will be migrated. In some embodiments the notification is configured to cause the access switch to deprovision the access switch for the virtual resource for example because the virtual resource will be migrated from a server operatively coupled to that access switch. In some embodiments the notification is configured to cause the access switch to provision the access switch for the virtual resource for example because the virtual resource will be migrated to a server operatively coupled to that access switch. In some embodiments notification may come from an external management entity a host device a network device and or some other source. In some embodiments a network device can suspend and or resume operation of a server and or virtual resource based on or in response to such a notification.

After receiving the initialization broadcast packet network device provisions a port of network device operatively coupled to virtual resource . In some embodiments network device receives the data packet and provides provisioning information to virtual resource for example as discussed in relation to process . In some embodiments provisioning information is sent to the host device on which virtual resource is hosted and or a virtual switch module also hosted on that host device and in communication with virtual resource . After the provisioning data packets can be exchanged between virtual resource network device and other device with which network device is in communication. For example virtual resource can be a web server and clients can access the web server via the Internet to which network device is connected via a switch fabric in a data center.

At time T virtual resource migrates to a host device operatively coupled to network device . For example when the host device operatively coupled to network device requires service and or is faulty or when a network traffic load between the host device coupled to network device and the host device coupled to network device is desired the virtual resource can migrate to the host device operatively coupled to network device . Virtual resource sends an initialization broadcast packet or data packet to network device during an initialization routine after being migrated to the host device coupled to network device . In some embodiments some other data packets including information about virtual resource and or services provided by virtual resource is broadcast or sent to network device and or other devices.

Network device receives the data packet and provisions a port of network device operatively coupled to virtual resource . In some embodiments network device provides provisioning information to virtual resource for example as discussed in relation to process . In some embodiments provisioning information is sent to the host device on which virtual resource is hosted and or a virtual switch module also hosted on that host device and in communication with virtual resource . After virtual resource or the host device or virtual switch module is provisioned data packets can be exchanged between virtual resource network device and other device with which network device is in communication.

A host device can provide the requested information related to virtual machines hosted by the host device to the network device at . The network device can parse and or interpret the information provided by the host device to determine how to provision the resources. In some embodiments step and step are described in a protocol implemented by a network device and host device for exchange of information related to virtual resources. In some embodiments communication between the host device and network device based on the protocol are encrypted and or otherwise secured.

In some embodiments the information received at the network device from the host device includes identifiers of virtual resources and or a service provided by virtual resources that can be used to select a configuration template including provisioning parameters or instructions. For example the information related to the virtual resources hosted by the host device can include a device identifier of each virtual resource a VLAN identifier of a VLAN to which a virtual resource and or service is related or a service identifier of a service provided by a virtual resource. In some embodiments such an identifier is used to determine a configuration template associated with or related to each service or virtual resource. For example a table or database can include a device identifier of a virtual resource and a configuration template identifier associated with that resource.

In some embodiments a configuration template identifier can be embedded within a device or service identifier. For example as discussed above in relation to a configuration template identifier can be embedded within a MAC address or other device identifier of a virtual resource. In some embodiments the device identifier has a first portion that represents a unique value such as for example a unique identifier to uniquely identify the virtual resource in the network or a network segment and a second portion that represents the configuration template identifier. In some embodiments a device identifier is a 48 bit value and the least significant or lower 32 bits are used to uniquely identify the virtual resource and the most significant or higher 16 bits are used to represent a configuration template identifier. More specifically for example a hexadecimal representation of such a device identifier can be 0x00FA8391DE1B. The lower 32 bits can be masked e.g. logically combined based on a logical AND operation with a hexadecimal value of 0XFFFF00000000 and the resulting value right bit shifted 32 bits to extract the configuration template identifier of 0x00FA or 250 as a decimal representation .

In some embodiments a configuration template identifier can be extracted from a device identifier based on other operations. For example as illustrated in a device identifier can be defined based on a transform e.g. mathematical operation that is reversible such that the configuration template identifier can be determined based on the device identifier and for example an inverse of the transform. In some embodiments a configuration template identifier can be extracted from or defined by a device identifier using an inverse or reverse of other methods discussed above in relation to and or other transforms or combinations.

At a configuration template identifier can be used to select a configuration template from a library of configuration templates. In other words a configuration template identifier can be used to determine an appropriate configuration template for each virtual resource hosted by the host device. For example a configuration template identifier can be an index into table database or library of configuration templates. The configuration template can include the provisioning parameters instructions and or commands that are interpreted or sent to provision network resources.

In some embodiments a configuration template identifier can be included in the information related to the virtual devices hosted by the host device requested in and . For example based on the protocol between the host device and the network device a configuration template identifier can be provided to the network device with the identifier of each virtual resource related to or associated with that configuration template identifier. Configuration templates can then be selected based on the configuration template identifiers provided by the host device. In other embodiments configuration templates can be provided by the host device to the network device. In other words the host device or for example a virtual switch module hosted by the host device or a virtual resource can provide configuration templates to a network device. Additionally an identifier of each virtual resource related to the configuration template can be provided to the network device with the configuration template.

Based on the configuration template selected or provided resources can be provisioned at and for each virtual resource. In some embodiments at one or more network ports can be provisioned. For example a port of a network device such as an access switch to which a host device hosting a virtual resource is connected can be provisioned based on a configuration template. Rules and or ACLs for example can be applied to the port such that data packets received by the access switch that do not satisfy the rules and or ACLs are not forwarded to the host device or virtual resource. Such rules and or ACLs can be based on IP addresses TCP ports authentication credentials and or bandwidth limitations. In some embodiments process is implemented on a network device and the network device provisions ports on the network device. In other words the network device can provision its own ports.

In some embodiments at a virtual switch module hosted by a host device and in communication with the virtual resource can be provisioned. Similar to ports on a network device a virtual switch module can have virtual ports to which virtual resources are operatively coupled. In some embodiments a network device can provision a host device or a virtual switch module hosted by a host device by pushing a portion a configuration template to the host device or virtual switch module. The virtual switch module can interpret the configuration template and apply the necessary provisioning e.g. rules and ACLs based on the configuration template. In some embodiments a network device can provide or send commands or instructions to the host device to provision a virtual switch module. In other words in some embodiments a virtual switch module can be provisioned based on commands provided by a network device.

In some embodiments a port at and a virtual switch module at are provisioned similarly. In other words the same provisioning such as rules and or ACLs for example can be applied to a virtual switch module as are applied to a port of a network device. In some embodiments at port and a virtual switch module are provisioned complimentarily. Said differently a configuration template can include one set of provisioning instructions for a port of network device and another set of provisioning instructions for a virtual switch module. In other embodiments a port and a virtual switch are provisioned with some similar provisioning instructions and some complimentary provisioning instructions. More details related to cooperative provisioning and or operation of virtual switch modules and network devices are set forth in co pending U.S. patent application Ser. No. 12 346 608 filed on Dec. 30 2008 and entitled Methods and Apparatus Related to Data Transmissions between Virtual Resources via a Network Device which is incorporated herein by reference in its entirety.

After the port and or the virtual switch module is provisioned the virtual resource can communicate with other devices. In some embodiments a virtual resource can communicate with other virtual resources connected to a common access switch via the access switch. In some embodiments a virtual resource can communicate with other virtual resources or devices coupled to a common access switch or other access switches via a switch fabric such as a multi stage switch fabric to which each of the access switches are coupled. In some embodiments a virtual resource can communicate with devices and or virtual resources connected to a network to which that virtual resource is coupled via an access switch switch fabric and or edge device.

At process waits for data packets to or from the virtual resource. If a data packet is received the data packet is serviced at . A data packet can be serviced by applying the rules and or ACLs provisioned at the port and or virtual switch module to the data packet. In other words the data packet is filtered or categorized based on data in the data packets. Further after rules and or ACLs are applied to a data packet the data packet can be sent or forwarded to the virtual resource if so addressed or sent of forwarded to another device via for example a switch fabric or a network. After the data packet has been serviced process can return to step .

If a data packet is not received within a timeout period a network device can determine that the virtual resource is no longer in communication with the port. For example the virtual resource could have halted suspended crashed migrated and or had some other change in state. After a time out is detected the provisioning of steps and can be reversed or changed e.g. the virtual resource is deprovisioned at . For example a rule added or applied to a virtual switch module during step can be removed after the timeout period. In some embodiments the configuration template determined or received can be interpreted to determine what deprovisioning is appropriate at . After deprovisioning at process can return to step .

At a network device can receive information from a host device related to a change in a state or status of a virtual resource. For example a change in the state or status e.g. running suspended stopped or migrating of a virtual resource can be provided by the virtual resource or a host device hosting the virtual resource. For example a host device can provide a migration suspend or halt notification and an identifier of a virtual resource to a network device implementing process . The network device can at update provisioning based on the change of state information. For example a network device can deprovision a virtual switch module and or port based on the notification and or configuration template related to the virtual resource. In other embodiments a change in status of a virtual machine can be a change in a security parameter and an ACL at a port and or at a virtual switch module hosted by a host device can be updated by the network device at . In some embodiments a configuration of a port of a network device and or a virtual switch module hosted by a host device can be updated by an external management entity a network management module and or an access switch.

In some embodiments a change in a virtual resource can be an instantiation of a virtual machine. In such embodiments update provisioning can include steps and to provide provisioning for the instantiated virtual resource. In some embodiments update provisioning includes providing a provisioning instruction to the virtual resource to cause the virtual resource to change state. For example a network device can receive a migration notification associated with a virtual resource and can provide a provisioning instruction to the virtual resource to cause the virtual resource to shut down or suspend. The virtual resource can be migrated e.g. transferred from one host device to another host device and restarted. In some embodiments one network device can provide the provisioning instruction to cause the virtual resource to change to a suspended state and another network device can provide the provisioning instruction to cause the virtual resource to restart. After provisioning is updated it is determined whether to continue waiting for data packets at . If the virtual resource is no longer running e.g. the virtual resource has not been halted stopped paused or migrated on the host device process can return to step to request information about additional virtual resources. If the virtual resource is still running on the host device process can return to step to continue to wait for data packet to or from the virtual resource.

In some embodiments a network device can concurrently implement multiple processes . For example an access switch can manage or implement an instance of process for each virtual resource detected by the access switch. In some embodiments process can include additional steps and or fewer steps than illustrated in . For example in some embodiments a network device is not provisioned based on a configuration template. In some embodiments a single process or instance of process is implemented on a network device for all the virtual resources detected by the network device. Accordingly process can include additional steps for managing the state of each virtual resource detected by the network device. For example after deprovisioning a port and or a virtual switch module after a timeout process can include additional steps to determine whether additional virtual resource have already been detected and provisioned by the network device and return to step to wait for data packets to or from already detected and provisioned virtual resourced. In some embodiments a virtual switch module is not provisioned. In some embodiments a port of a network device is not provisioned.

In some embodiments a virtual resource can provide a migration notification to a network device including an identifier of a host device to which the virtual resource will migrate. The network device can deprovision a port and or a virtual switch module and provide a notification to the network device connected to the host device identified by the identifier sent by the virtual resource that the virtual resource will migrate to the host device. That network device can receive the notification and provision resources based on information included in the notification. For example the notification can include an identifier of the virtual resource or a service provided by the virtual resource an identifier of the host device to which the virtual resource will migrate and or other information associated with the migration or provisioning. In some embodiments another device such as a network device an external management entity a host device another virtual resource and or another device can provide a notification related to migration instantiation or change in the operational state of a virtual resource.

In some embodiments process includes one or more steps to determine whether an identifier provided by a host device is related to a virtual resource for which provisioning instructions have been provided. In some embodiments additional provisioning instructions are not provided for a virtual resource if provisioning instructions have already been provided. In some embodiments provisioning instructions are provided to update prior provisioning.

In some embodiments a port and or a virtual switch module is provisioned based on more than one configuration template. For example a port can be provisioned for a first configuration template and a second configuration template. Process can include steps for merging the first and second configuration templates and applying the merged or composite configuration template to the port. In some embodiments configuration instructions for a virtual switch module can be modified based on modification to configuration instructions for a port. For example conflicting provisioning instructions can be removed from port provisioning portions of first and second configuration templates and moved to virtual switch module portions of the first and second configuration templates. Thus each provisioning instruction for a virtual resource can be applied to the resource without conflicting configurations at a port of a network device. Similarly provisioning instructions can be moved from virtual switch module portions of configuration templates to port portions of configuration templates.

Based on the description provided by host device network device determines appropriate provisioning for a port of network device operatively coupled to the virtual resources hosted by host device and provides the provisioning. For example network device can determine and provide provisioning such as for example provisioning instructions as discussed above with respect to process and or process . In some embodiments provisioning instructions are provided to host device for provisioning a virtual switch module and or other modules hosted by host device . After the provisioning e.g. one or more ports of network device and or a virtual switch module hosted by host device data packets can be exchanged between the virtual resources hosted by host device network device and other device with which network device is in communication. For example a virtual resource hosted by host device can be an electronic mail server and clients can access the electronic mail server via the Internet to which network device is connected via a switch fabric in a data center.

In some embodiments host device can provide network device with a resource change notification associated with a change or future change in the status or state of a virtual resource hosted by host device . Such a notification can indicate that a virtual resource will be shutdown restarted and or migrated. Network device can acknowledge the notification and provide deprovisioning and or provisioning to appropriately handle to notification. For example if a virtual resource will be shutdown network device can deprovision the virtual port operatively coupled to that virtual resource. In some embodiments network device can provide deprovisioning instructions to host device . If a virtual resource will restart the network device can acknowledge the notification save state information associated with the virtual resource and provide provisioning instructions after the virtual resource has restarted based on the saved state information. If a virtual resource will be migrated network device can deprovision a virtual port operatively coupled to that virtual resource and provide a notification of the migration to the host device to which the virtual resource will be migrated. Additionally a migration notification can be provided to a network device to which the virtual resource will be operatively coupled after the migration.

In some embodiments a network device can update provisioning of a port in response to a resource change notification and a host device and network device can continue exchanging data packets after the provisioning is updated. For example a resource change notification can include instructions for updating provisioning of a network device port operatively coupled to a virtual resource in response to a change in a security policy or requirement of the virtual resource. The network device can update the provisioning of the port and continue exchanging data with the virtual resource.

In some embodiments a resource change notification can be provided by an external management entity. In some embodiments a resource change notification can be provided by a network management module. In some embodiments a resource change notification can be provided by a virtual resource. In some embodiments a resource change notification can be provided by a network device. In some embodiments a network device does not receive a resource change notification but can detect that a virtual resource has changed an operational state. For example a network device can detect based on a timeout value and or data sent to and or from a virtual resource that the virtual resource has changed an operation state e.g. has been migrated has suspended has resumed and or has been instantiated .

Resource mobility domain is a group of host devices among which virtual resources can migrate. As illustrated in host device host device host device and host device are included in resource mobility domain . Host device is not included in resource mobility domain . Thus a virtual resource hosted by host device can migrate to any of host device host device and host device . For example an external management entity not shown in can be configured to migrate virtual machines only among the host devices included in resource mobility domain .

Dynamic network provisioning system includes network device network device network device and network device . Network device is operatively coupled to host device host device and switch fabric . Network device is operatively coupled to host device and switch fabric . Network device is operatively coupled to host device and switch fabric . Network device is operatively coupled to host device and switch fabric . Each network device in dynamic provisioning system includes a library of configuration templates related to the virtual resources that can be hosted by host devices in resource mobility domain . Accordingly any host device in resource mobility domain can be connected to any network device in dynamic provisioning system and receive provisioning as described above for example with respect to process and or process .

In other words dynamic provisioning system is configured to provide dynamic provisioning for any virtual resource hosted by any host device in resource mobility domain . Accordingly any host device in resource mobility domain can be connected to any network resource in dynamic provisioning system and a virtual machine instantiated on or migrated to that host device can be provisioned by the network device to which that host device is connected. For example host device can be disconnected from network device and connected to network device . Network device can detect or query host device regarding virtual resources hosted by host device determine appropriate provisioning and apply the provisioning without manual or administrator configuration or network topology description updates as discussed above in relation to for example .

Such a system can be particularly beneficial in environments such as data centers with many network device and many host devices. Because of many factors including the number of host device and network device the number of ports on each network device down time and or failure of host device and operator error manual configuration of networks and network connections between host devices and network devices can be complex and error prone. Embodiments described herein mitigate the difficulties in administration of such systems because the interconnections among the components of the system e.g. host device and network devices can vary dynamically without reconfiguration of the system.

Referring again to an administrator can designate which host devices are included in resource mobility domain . In some embodiments the administrator specifies in an external management entity not shown which host devices can host certain virtual resources. The external management entity can then only move or migrate virtual resources to the host devices included in the mobility domain. Thus in some embodiments a mobility domain can be configured in a software application and that software application can enforce or effect the mobility domain. In some embodiments the administrator provides manual commands e.g. via a command line interface to migrate instantiate suspend etc. virtual resources and thus manually administers or implements resource mobility domain . As discussed in relation to an external management entity can be in communication with network devices such that it provides configuration templates including provisioning instructions to network devices.

In some embodiments a mobility domain is defined by the configuration templates available to one or more network devices. For example network devices can provision ports and or virtual switch modules for any virtual resource for which it has a configuration template. Thus a mobility domain of the virtual resources for which one or more network device have access to configuration templates is the set of host devices attached or operatively coupled to those network devices.

Configuration templates associated with virtual resources that can be hosted by host devices in resource mobility domain are compiled into a library list or database and provided to one or more network devices of dynamic provisioning system by for example an external management entity not shown . In some embodiments each network device of dynamic provisioning system includes the library of configuration templates. In some embodiments some network devices in dynamic provisioning system are related to one resource mobility domain and receive configuration templates associated with that resource mobility domain and other network devices in dynamic provisioning system are related to another resource mobility domain and receive configuration templates associated with the other resource mobility domain. In some embodiments some network devices in dynamic provisioning system receive two or more libraries of configuration templates each library related to a different resource mobility domain. In some embodiments the network devices of dynamic provisioning system have access to a common memory such as for example a database and commonly access one or more libraries of configuration templates.

In some embodiments methods and apparatus described herein can improve convergence in a network such as for example a data center network after migration of a virtual resource. Convergence in a network can refer to for example the process in a network whereby network devices and virtual switch modules in the network have been properly provisioned such that a data packet with a destination address of a virtual resource will be delivered to that virtual resource. Additionally convergence can refer to the process whereby the network policies rules and or access restrictions related to the virtual resource have been applied to the ports e.g. network device ports and or virtual ports of a virtual switch module to which the virtual resource is operationally coupled. In other words a network has converged when the provisioning of the devices in the network have been updated to reflect a change in the network such as for example the migration of a virtual resources. In some embodiments convergence can refer to the time when the network has converged after a migration or instantiation of a virtual resource.

Using methods and apparatus discussed above network devices can coordinate with virtual resources host devices and or external management entities to improve the rate of convergence in a network. For example network devices can receive and provide migration notifications prior to the migration of a virtual resource. The network devices can provide provisioning instructions to virtual switch modules virtual resources and or can provision ports of the network devices such that provisioning is accomplished prior to or nearly concurrent with the completed migration of the virtual resource. In some embodiments network devices can prepare to provide provisioning instructions and or provision ports of the network device in response to migration notifications and can complete the provisioning after receiving an indication from the virtual resource that it has been restarted. In some embodiments an indication can be for example a broadcast packet e.g. a gratuitous address resolution protocol ARP packet or signal sent by the virtual resource.

Some embodiments include a processor and a related processor readable medium having instructions or computer code thereon for performing various processor implemented operations. Such processors can be implemented as hardware modules such as embedded microprocessors microprocessors as part of a computer system Application Specific Integrated Circuits ASICs and Programmable Logic Devices PLDs . Such processors can also be implemented as one or more software modules in programming languages as Java C C assembly a hardware description language or any other suitable programming language. A processor according to some embodiments includes media and computer code also can be referred to as code specially designed and constructed for the specific purpose or purposes. Examples of processor readable media include but are not limited to magnetic storage media such as hard disks floppy disks and magnetic tape optical storage media such as Compact Disc Digital Video Discs CD DVDs Compact Disc Read Only Memories CD ROMs and holographic devices magneto optical storage media such as floptical disks read only memory ROM and random access memory RAM devices such as solid state or FLASH drives. Examples of computer code include but are not limited to micro code or micro instructions machine instructions such as produced by a compiler and files containing higher level instructions that are executed by a computer using an interpreter. For example an embodiment of the invention may be implemented using Java C or other object oriented programming language and development tools. Additional examples of computer code include but are not limited to control signals encrypted code and compressed code.

While certain embodiments have been shown and described above various changes in form and details may be made. For example some features of embodiments that have been described in relation to one embodiment and or process for provisioning a host device or network device can be useful in other embodiments and or processes. Additionally embodiments described with reference to specific forms of communication such as communication between host device network devices network management modules and external management entities via a network are also applicable to other forms of communication such as communication via a command or control plane. Some embodiments that have been described in relation to a software implementation can be implemented as digital or analog hardware. For example software modules can be implemented on semiconductor chips. Furthermore it should be understood that the systems and methods described herein can include various combinations and or sub combinations of the components and or features of the different embodiments described. Thus features described with reference to one or more embodiments can be combined with other embodiments described herein.

