---

title: Pattern-based mobile device unlocking
abstract: A computer-implemented method of authenticating a user with a computing device is disclosed. The method involves displaying a grid of selectable visually-distinguishable graphical elements on a device display, receiving from a user of the device a drawn pattern across the selectable graphical elements, comparing the received drawn pattern to information representing a stored authentication pattern for the user, and unlocking access to functions on the device if the received drawn pattern substantially matches the stored authentication pattern.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08904479&OS=08904479&RS=08904479
owner: Google Inc.
number: 08904479
owner_city: Mountain View
owner_country: US
publication_date: 20080328
---
This document relates to systems and techniques for generating graphical display elements and controls.

More and more personal computing devices are moving from the desktop to the palmtop. As mobile devices such as smart phones gain more computing power and graphical capabilities while shrinking in size people can perform on the go many of the tasks that used to be reserved for the office. As a result more and more data is available to users through their mobile devices. Such data may also become available to others who acquire the mobile devices such as thieves or other ne er do wells.

Access to a device by such bad actors may be blocked by requiring that a password be entered to access the device when it is first powered up. In addition when a device has been left untouched for a predetermined time period it may also go into a locked down sleep mode from which a password is required in order to enter information. Also certain limited functionality may be provided without the entry of a password such as the display of contact information for the true owner of the device and access to emergency e.g. 911 dialing on the device.

This document describes systems and techniques that may be used to lock or unlock a mobile device so as to restrict access to certain of the device s functions to an authorized user. The access may be restricted by requiring a user seeking access to draw a pattern on a display of the device such as by drawing with their finger or a stylus across elements on a touch screen display in a connect the dots fashion. The pattern may be a pattern that was previously recorded by the user as a form of personalized password. If the pattern drawn by the user matches a saved pattern the device may be unlocked for use by the user.

Certain particular features may be provided with such an implementation. For example the speed with which a user traces the pattern may be tracked both at the time of setting the pattern and at the time of entering the pattern to gain access to the device. Such speed may be checked over a portion of the pattern so that the user may integrate into his or her pass code a tracing that runs fast in some areas and slow in others or over the pattern as a whole e.g. so that only the time from the beginning of the tracing to the end is compared . In addition the user may be able to trace back across part of the pattern and to double back if they would like.

Other such non typed pass code input techniques can be used. For example a user may trace out a pattern in the air with their device and an accelerometer in the device may track the motions to match them against prior motions. In such a situation the precision required to make a match may be loosened on the device since it will be harder for a user to repeat motions in free form space. Also an accelerometer in the device may sense taps on the device and match the tempo or rhythm of the taps to stored values. As such a user s pass code may be the opening tempo of the William Tell Overture and the user may tap the code in with his or her fingers when the device is sitting on a tabletop.

Such an input pattern may also be used as an identification badge that is presented to the user. By presenting the badge to a user a central system can identify itself as an organization that is properly associated with the user and is not a fraudulent organization pretending to be the legitimate organization e.g. the user s bank . The badge can also be used as a passcode for qualifying the user e.g. by presenting a large number of badges to the user and making them select the one that is their traced passcode. Such an approach may be helpful where the user initially enters a passcode for a system when they are on their touch screen device and they later wish to log into their account from a non touch screen device. A traced passcode may also be mixed with a textual password so that the user may enter the former if they cannot type and can enter the latter if they cannot draw. To provide additional options for a badge and thus additional security the badge may be animated i.e. shown with the elements in a grid being lit up in the order they were initially traced by the user.

In certain implementations such systems and technique may provide one or more advantages. For example a user may more readily remember certain drawn inputs where they might forget a traditional typed password. Also the tracing may be conducted using a single finger on one hand which may provide more flexibility for a user on the run than does a requirement to type in a password. Moreover traced inputs may be personalized to a user s particular style especially when the speed of the input is used as part of the authentication process much like a person stylizes their signature and can repeat it without thinking.

In one implementation a computer implemented method of authenticating a user with a computing device is disclosed. The method comprises displaying a grid of selectable visually distinguishable graphical elements on a device display receiving from a user of the device a drawn pattern across the selectable graphical elements comparing the received drawn pattern to information representing a stored authentication pattern for the user and unlocking access to functions on the device if the received drawn pattern substantially matches the stored authentication pattern. Comparing the received drawn pattern to information representing a stored authentication pattern can comprises generating an ordered list of graphical elements traversed by the tracing and comparing the ordered list to a stored ordered list. The method can also comprise monitoring the speed of the drawn pattern and comparing information indicative of the speed with information indicative of a speed for the authentication pattern.

In some aspects the information indicative of the speed comprises a time to track a full pass code. Also the information indicative of the speed can comprise a multiple times that each correspond to a time to trace part of a pass code and wherein each of the multiple times are compared to a time corresponding to a time for part of the authentication pattern. In addition the selectable visually distinguishable graphical elements can comprise spatially separated dots in an m n grid wherein m may equal or not equal n. In certain aspects the method can comprise changing the appearance of the selectable visually distinguishable graphical elements as a user selects each element while tracing. The grid of selectable visually distinguishable graphical elements can also not be displayed until the user has begun drawing a pattern.

The method can additionally include determining a prior state of the computing device and making the device available to a user in that state upon unlocking access to functions on the device. The method can also comprise unlocking access to features of the device for contacting public emergency services even if a pattern that substantially matches the authentication pattern is not received and unlocking access to substantially all device features if a pattern that substantially matches the authentication pattern is received.

In other aspects the drawn pattern passes each of a plurality of the selectable visually distinguishable graphical elements more than once. The method can also include receiving from a user of the device a traced pattern and storing corresponding information as the authentication pattern. In addition the method can comprise presenting a graphical representation of the drawn pattern to a user as a badge to identify a service provider to the user as being a legitimate service provider and also subsequently presenting a graphical representation of the drawn pattern to a user along with a large plurality of other patterns and verifying the user if the user selects the drawn pattern. The method can also comprise determining whether the user is using a device having touch input before presenting the graphical representation of the drawn pattern along with the other patterns.

In another implementation a tangible article comprising a computer readable data storage medium storing program code operable to cause one or more machines to perform operations is disclosed. The operations comprise displaying a grid of selectable visually distinguishable graphical elements on a device display receiving from a user of the device a drawn pattern across the selectable graphical elements comparing the received drawn pattern to information representing a stored authentication pattern for the user and unlocking access to functions on the device if the received drawn pattern substantially matches the stored authentication pattern. The operations can further comprise monitoring the speed of the drawn pattern and comparing information indicative of the speed with information indicative of a speed for the authentication pattern. In addition the operations can comprise changing the appearance of the selectable visually distinguishable graphical elements as a user selects each element while tracing. The operations may also include determining a prior state of the computing device and making the device available to a user in that state upon unlocking access to functions on the device.

In certain aspects the operations comprise unlocking access to features of the device for contacting public emergency services even if a pattern that substantially matches the authentication pattern is not received and unlocking access to substantially all device features if a pattern that substantially matches the authentication pattern is received. The drawn pattern can pass each of a plurality of the selectable visually distinguishable graphical elements more than once and the operations can further comprise subsequently presenting a graphical representation of the drawn pattern to a user along with a large plurality of other patterns and verifying the user if the user selects the drawn pattern.

In yet another implementation a computer implemented user interface system is disclosed and comprises a graphical user interface module to display a grid of selectable visually distinguishable graphical elements on a device display a touch screen to receive user drawn patterns across the grid of selectable visually distinguishable graphical elements and an access manager programmed to compare information from the received drawn pattern to information from a stored authentication pattern for the user and unlock access to functions on the device if the comparison indicates a match. The access manager can be programmed to identify the speed of the drawn pattern and compare information indicative of the speed with information indicative of a speed for the authentication pattern.

In certain aspects the graphical user interface module can be controlled to change the appearance of the selectable visually distinguishable graphical elements as a user selects each element while tracing. Also the access manager can be programmed to unlock access to features of the device for contacting public emergency services even if a pattern that substantially matches the authentication pattern is not received and to unlock access to substantially all device features if a pattern that substantially matches the authentication pattern is received.

In another implementation a computer implemented user interface system is disclosed. The system comprises a graphical user interface module to display a grid of selectable visually distinguishable graphical elements on a device display a touch screen to receive user drawn patterns across the grid of selectable visually distinguishable graphical elements and means for providing user access to the device in response to the user drawn patterns.

And in another implementation a computer implemented method of authenticating a user with a computing device includes providing for display to a user data representing a badge previously drawn by the user on a computing device receiving a confirmation from the user that the badge is associated with the user displaying a drawing area to the user and receiving from the user a pattern drawn on a touch screen interface device comparing the received drawn pattern to information representing a stored authentication pattern for the user and unlocking access to functions for the user if the received drawn pattern substantially matches the stored authentication pattern.

The details of one or more embodiments are set forth in the accompanying drawings and the description below. Other features and advantages will be apparent from the description and drawings and from the claims.

This document describes systems and techniques by which mobile devices may interact with a user of such devices. For example users may provide input for unlocking a mobile device by tracing a pattern through a grid of graphical elements that are distinct from each other i.e. physically different and visually distinguishable so as to match a connect the dots pattern that has been stored on the device. The time to complete the overall tracing and or the time to complete certain portions of the tracing may also be used to provide greater security so that it would not be enough for an interloper simply to copy a pattern. As a result the owner of the device could create a secure pass code even with a simple pattern simply by varying the speed with which he or she traces the pattern. Various limited functionality can be provided where the user fails to provide the proper pass code.

Display provides an example of how a screen on the device may look when it is locked from use by a user. Such a display may be produced for example when the device is first turned on or otherwise activated after a user has explicitly placed the device into a sleep or other similar mode or after the user has failed to provide input to the device for a predetermined period.

Shown on the display is a 3 3 grid of gray dots much like a tick tack toe board. The dots may be only moderately visible if they are displayed as dark gray circles or similar elements on a black background. Also shown are instructions repeated on display to draw pattern to unlock along with a key to indicate that drawing a pattern will serve to unlock the mobile device for input. In other words the user of the device is invited to draw a pattern across the dots in the grid typically with their fingertip or fingertips to unlock the device. In addition a selectable control in the form of a button labeled emergency may be selected by the user to provide limited functionality from the mobile device typically in the form of telephone functionality that may dial only a limited number of telephone numbers such as 911.

In display the user has begun to draw a pattern on the display to unlock the display as shown by a shadow line across the top three dots in the grid and down to the middle dot in the grid. When the user begins drawing such a pattern the particular dots that their finger crosses may be activated such as in a green color to indicate that they are proceeding correctly. As soon as the user has drawn a complete unlocking pattern such as a pattern that matches an earlier entered pattern when setting up the device the device may become unlocked. The dots may also be activated in the same manner whether the user is tracing the right pattern or not so as not to tip off the user until they lift their finger or otherwise indicate they are done.

The actual elements in the grid may remain hidden until after a user has started drawing and moving in a particular direction. The actual grid shown may depend on the direction the user chooses. For example if the person begins drawing left to right the grid may be displayed as a 3 3 grid whereas if the person begins drawing top to bottom the grid may be a 4 4 grid. As a result a dishonest interloper will not be able even to know the grid in which they are to be tracing thus making hacking of the pass code harder. At the same time however if the grid is shown right after the user starts drawing they will be given an immediate guide to where the particular elements in their grid are. Thus the benefit of showing the proper owner the grid as a guide to drawing can be provided even when hiding the grid from improper users is achieved.

If the user draws an incorrect pattern an error message such as that shown in display may be generated alerting the user that the pattern was not appropriate. In this example the user traced a pattern across the top of the grid and down the left side of the grid. The error message may be generated immediately upon the user leaving the appropriate path with their tracing or for more security may be generated only after the user has lifted their finger from the display.

A hardware button is programmed in this example to set the device back into a locked state and in this example to reset the pattern drawing activity so that a user can try again if they would like. In addition a trackball may be provided and the user may employ the trackball to move a cursor across the grid of dots in order to trace a pattern.

The pattern drawn by a user may take a variety of forms across each of the dots which are discrete elements in a grid generated and shown to the user to help guide the user introducing the pattern. In this manner the dots or similar elements such as square dots or complete squares that touch each other may serve to assist the user along their tracing path. In one example the tracing may take a single path across the device such as the path shown in display and or may take a Z shaped path. Alternatively a path may overlap with itself such as where a user traces across the outer perimeter of the grid two or more times. Paths may also double back on themselves in certain situations such as when a user traces across the top three dots in the grid and then back up the middle dot before proceeding downward so as to create a shape like the letter T. 

Multiple paths may also be created where a user lifts their finger and jumps to an element in the grid that is distant from the element on which they were previously pressing. For example a user may trace down the right side of the grid with their finger and then trace down the opposite side of the grid. In such a situation an entry by the user would not be considered complete simply because the user lifted his or her finger.

Also the speed at which a path is drawn by a user may be measured. Such measurement may occur at a macro level by measuring the total elapsed time to draw the path or at a more micro level by measuring the time to draw certain segments of the path. For example a user may decide to have a fairly simple and easy to guess shape such as the letter Z. However the user may make their code harder to guess by tracing the horizontal lines of the letter very quickly and the diagonal line very slowly. In such an implementation the device may be programmed to identify substantial changes in speed in the tracing of the path and to classify the speed at certain segments.

The classification of speed may take a variety of forms. For example the elements in a path may be initially identified by an ordered list of elements in the grid that are selected in the path. For example the path represented in display may be indicated by the ordered list 0 2 0 1 0 0 1 1. The speed for tracing the path may be indicated for example by adding a total elapsed time to the end of the ordered list or by adding to each element in the list an elapsed time at which data element was pressed. In determining whether a later traced pattern matches a code that the user previously entered the speed may be approximated such as to create a match if the later entered pattern is within 30 40 or 50 of the speed for the earlier entered pattern. In addition the speed may be classified as fast medium or slow and matches may be made if the two tracings the original tracing setting the pass code and the later tracing trying to unlock the device match for patterns and for such speed classifications.

Referring again to display when an improper pattern has been entered when the user s finger leaves the display the user may be notified in a variety of ways that the pattern was wrong. In one example the elements that appear in the form of dots here may be a first color such as green while they are being traced and may change to a second color such as red if the user lifts their finger and the pattern is not a match.

If the pattern is correctly drawn and matches an earlier selected or entered pattern display may be shown to the user which is largely blank in this illustration but represents whatever ongoing application was previously active on the device. Alternatively a background with selectable application icons may be shown when a proper pass code is traced.

If during the tracing of a pattern or at another time when the device is locked the user needs to employ emergency services on the device such as 911 dialing the user may select control to have display generated on the device. Display may include a dialing control that may take a form similar to that provided for normal dialing with a telephony function on the device but with certain features disabled such as dialing by using a contact list and the like. In this example an emergency call has been dialed by the 911 number and the user is given the option of completing the call by pressing hardware key . When the selection to complete the call is made display may be shown to indicate to the user that the call is being completed and also indicate the total elapsed time of the call. In addition a soft button in the form of a cancel button and a hardware button in the form of a back button may take the user back to the locked state yet again.

Finally if the putative user attempts to draw a pattern a predetermined number of times such as three times and fails display may be provided on the device such as to notify the putative user that no more entries will be permitted for a certain period of time. Alternatively the display may simply lock up and go black and requite interaction by a different mode such as by dialing a number of the device and entering in a secret code. In this manner for example corporate IT staffs can re enable devices that have been accidentally locked by employees.

Display shows an initial input screen with instructions that may be provided to a user of a mobile device after they have selected an entry to provide a pass code for their device. The display shows a grid of elements here a series of circles in a 3 3 tic tac toe pattern along with an example of a dragging action across the grid. In addition a short instruction sentence indicates to the user that they are to drag their finger in a pattern on the display. The user may select a menu button on the device to be showing display which is a help screen. Display may show one or more still images or an animation of a finger tracing a pattern on the device to indicate the manner in which the user is to provide their pass code to the device. The particular pass code shown on the display may be automatically rejected if the user attempts to trace that is their own password so as to prevent the adoption of easily pickable pass codes in the system.

Display shows action simulating dragging of the user s finger across the screen starting in the top right corner and moving left. The instruction has now changed to a statement that indicates that the user is to release or lift their finger when they are done tracing their code. In display the user has now traced across four different elements in the beginning of the pattern. The user may now with their finger or may continue dragging to complete their pattern

Safeguards may be implemented to ensure that a pattern selected by a user is adequately secure. As shown in display an error message may be displayed if the user does not trace across enough elements to provide for a sufficiently secure password in this case more than two separate elements. A difficulty score may also be generated for a pattern and may be displayed to the user after they have traced the pattern or while they are tracing the pattern so that the user may choose to trace a different pattern if their score is too low. Also a pattern may be rejected by the system if the score indicates that the pattern is not sufficiently secure.

Referring now to display shows the screen after an appropriate pattern has been recorded by the user. The pattern may be shown exactly as in display with traced dots being lit up and a shadowed path being drawn between the selected dots. In addition direction arrows not shown may be added to show the direction in which the tracing occurred. This allows the user to see review and memorize the pattern that they have traced.

After a set period of time such as three seconds the traced patterns may fade out and the instruction may change to request that the user repeat the pattern much like requiring repetition of passwords to ensure that the entered pass code is the pass code that the user actually intended and can provide a later time. At display the user is shown to have entered a pattern that looks like a Tetris playing piece rather than the beginning of a backward letter Z and the instruction area indicates an error by the user. Alternatively at display the device indicates that the user properly repeated the pattern that they previously entered. Of course the whole pattern would only be displayed after the user has traced out the pattern with their finger so as not to provide the user with the answer before they have entered it. Finally at display the device indicates to the user that the setup and assignment of a pass code has been successful and that their selected pattern can be used to unlock the device or that the user may go back and selected another pattern.

Display shows an example of the device where the user has selected to see a visible pattern as a trace whereas display is an example in which the user has selected not to see the pattern. The particular arrows shown on display and display are provided for clarity to indicate the path drawn by the user and would not typically be shown on the display itself.

The particular displays shown here may be initiated when a user slides open a screen on a slider phone mobile device so as to uncover the device s keyboard. Such an action may be taken by the device reasonably to indicate that the user wishes to provide input to the device . If the device does not have its code lock set then the application that was displayed before the device went into sleep mode may be displayed again in a typical manner at display . If the code lock is on display may be shown and the user may trace a pass code pattern onto the display .

If the user instead selects the emergency control on display the display may be shown which is pre filled with the 911 emergency call number. The user may then select the telephone icon of hardware button so as to begin the call and to thereby cause the generation of display that provides the user with visual tracking of the call progress.

Displaying the patterns has a two fold purpose. First if the user s actual passcode is one of the patterns among those being displayed the user can have some confidence that the application or web site displaying the patterns is legitimate and not a spoof or a phishing attempt. Second if the user selects the appropriate pattern from among the patterns the application or web page can treat that selection like an entry of a password. In short verification can be achieved in both directions.

In this example only nine simple patterns are shown for clarity so that an improper user might guess the proper passcode but in an actual implementation a much larger number of traced patterns may be used as badges. In addition each of the nine traced patterns may be rendered in a particular color where the color and the pattern must match in order for the badge to be a match. Such double matching requirement may also provide additional security.

Also the badges may be animated so as to show the pattern in the order that it was originally drawn i.e. line a line slowly growing across each grid . By animating the same pattern in different directions a system may make it harder yet for an interloper to break into a device or account. The animations need not be stored as literal animation files but instead may be created on the fly from data indicating the order in which the graphical elements were traversed by the user when the user selected his or her passcode initially.

The second device shows a single pattern across a 9 9 grid. In this example the pattern is being used only as a badge e.g. from the user s bank to verify the identity of the bank before the user is asked to provide any private information. The larger size of the grid does not make this a better example of a badge necessarily but would normally provide additional security if the user were asked to enter it as a passcode. Thus for example the user may have a common passcode pattern for accessing their device and for accessing their on line accounts. The user may initially set the passcode when they get the device and may have that passcode passed to their on line account or may enter the passcode again to set up their on line account. Then when they later go to a web site of their on line service provider they may be shown a display such as that showing pattern so that they know it is truly their provider. If they need to access the provider the passcode may be provided automatically by the device to the provider to give a form of single sign in for the device and the account. Access to the passcode on the device may be adequately protected by an operating system for the device that integrates passcode handling along with synchronization with a passcode for an information provider.

The mode of access may vary depending on the device the user is using. For example if the user is accessing a system from a device that has a touch screen then the user may be asked to trace their pattern onto a blank grid of elements a very secure method. If instead the user s current device has no touch screen they may be presented with a large number of badges and may be asked to select their badge.

Also the badges that are shown with the user s badge may be selected or generated in real time to be sufficiently similar to the user s badge so that the real badge does not stand out. For example where the badge is traced other decoy badges may be selected to have levels of complexity that are similar to that of the real badge.

In a first example a passcode and badging technique may be employed by a web site operated by a server system that is remote from the device. A user may initially register with the system such as when they become part of an on line community. They may be presented a blank space or a grid and may draw a freeform figure or trace a path through the grid respectively. Such input may be registered by the remote server system and may become a passcode and or badge for the user. When the user later contacts the system by particular mechanisms such as by selecting a link in an e mail notification from the web site the user may be presented with the badge in one of the ways discussed herein so that the user can be confident that they were truly contacted by the appropriate web site and not by an organization trying to phish for data. A different pattern may be used as a log on passcode that the user is subsequently require to enter if they want to enter the system. They may draw that passcode if they have a touch screen or tablet input mechanism may use arrows keys or the like if they do not or pass enter a traditional alphanumeric password as an alternative.

In a second example the passcode and badging may be employed by a mobile device itself. For example a user may initially turn on their device or touch the screen of a device that is in sleep mode to show an intent to unlock and use the device. The device would display the user s badge to verify that the legitimate operating system was in control and not a spoofing program and that it is really the appropriate user s device. The operating system would then present a space or grid into which a user could draw or trace a pattern where the prior display of the badge would help indicate that the grid is legitimate and not a phishing mechanism. The user may then trace or draw their pattern which would generally differ from that in the badge and can then be granted access to the device.

In a third example the passcode and badging may be employed by a combination of a mobile device and a remote server system. For example a user may initially purchase a device associated with an on line service provider. As part of the set up process for the device the user may trace a passcode with which they are later to be associated. They may also trace a passcode that is to serve as their badge. The set up process may then transmit such information to the on line service provider where it can be stored for future using in verifying the on line service provider with the user and with verifying the user with the on line service provider. When the user later logs onto their device they may be presented with the badge and may present their passcode. When they subsequently try to access a service from the on line service provider the device may automatically submit the passcode by a secure agreed upon protocol. If no such passcode is provided e.g. because the user is trying to access the service from a different device the on line service provider may display a grid and or area in which the user may enter their passcode to be verified by the service provider.

The badge in these situations can be drawn as a freeform design particularly when it is simply presented visually of the user for verification. In such a situation the design need not be repeated by the user where verification of whether the design has been repeated properly can be much more complex for a free form design than for a tracing in a grid or other arrangement of visually distinct elements that are pre displayed to the user for tracing though.

Using such badging techniques a user can upload a badge without the need to identify a particular image file or the like. Such a feature may be particularly useful on mobile devices where the user may not have immediate access to many image files that they could otherwise use as a badge. Also because the badge looks like many other tracings it can provide more security than could a photograph in certain situations because the photograph might give away to an interloper something personal about the owner of the device. In addition different passcode and badging techniques can be used by a person depending on their situation. For example as noted above drawing can be eschewed on devices that don t have touch screens and can be replaced by selecting a badge from a field of badges or by entering an alphanumeric passcode such as onto a keyboard of a device. Alternate techniques for verifying oneself may also be made available at the same time e.g. with a password box at the bottom of a display and with a tracing grid in the main body of the display. The user may then choose whether they have enough hands free to complete either data entry operation.

The techniques also permit a user to personalize their access mechanisms in a graphical manner but without a need to be a true artist or to find content to upload. In particular a user can quickly select a pattern that will snap to the graphical elements in the grid over which they are tracing and that pattern can be saved easily and efficiently.

Display shows the effect of selecting the lock feature where the device at first shows very basic information such as the time and date along with a message that the device is locked and an indication of what the user needs to do to unlock the device. After several seconds in this mode the device turns off its screen as show by display . When a user later selects a particular control here the menu button in the center of the device an unlock display may be shown to the user. The unlock display is similar to display in in that in shows a number of discrete graphical elements in a grid in the form of circles or dots that are physically separated form each other. The user can readily understand that they are to trace a particular dot to dot pattern over the dots because of an instruction on the display . Also the user can readily see that emergency access is available with the device even if they cannot unlock it e.g. they are not the owner or are nervous and have forgotten the pattern .

Display shows the device when it has been awakened but is locked. In this situation the basic time date and instruction information from prior figures is shown to the user. In addition the display also shows a status bar along its top edge. Typically such a status bar shows static indicators such as battery life signal strength and the presence or absence of features such as WiFi or Bluetooth here battery strength and signal strength indicators are shown .

In this example additionally the status bar also shows graphical elements for notifications. In particular four icons are shown on the left side of the status bar representing from left to right one or more received voice mails since the screen was last operating one or more missed calls one or more text messages e.g. from GOOGLE TALK and one or more received e mail messages. These icons help the user see whether and to what extent they have received information since last looking at their device so that they can quickly determine whether they need to take the time to unlock the device.

Display shows additional activity in the status bar that occurs upon the receipt of a notification. In particular the notification here is of an incoming e mail and sender and subject information from the e mail temporarily replaces the normal information displayed in the status bar and is scrolled from right to left across the status bar so that the user can readily see such information. In this manner even where the user has not used the device for a long time they can still quickly glance at it to see if the newest arriving message is of interest to them. Such an arriving message may also be accompanied by an audible sound from the device so as to alert the user to the coming message information.

The display of information about incoming messages may also be prevented in one or more ways for purposes of security. For example a device may take an open locked state and a closed locked state. The open locked state may be taken after several minutes of inactivity while the closed locked state may be taken after a much longer period of inactivity. Both delay periods may be set by the user. In the open locked state information about incoming messages may be displayed in the status bar under the assumption that the rightful user still likely possesses the device so that eavesdropping on the messages is unlikely and in any event at least the device is locked to user input until a pass code is provided. In the closed locked state there is a much more likely chance that the device has been stolen so no message information is shown. In this manner a thief might be able to see information from several incoming messages but that ability will shut off after for example 30 minutes or an hour. As a result stepped levels of security may be provided so as to minimize the interference with a user s use of a mobile device.

Display shows options presented to a user when they indicate an intent to power their device off. Such intent may be shown for example by a selection of an appropriate item from an on screen menu or by long pressing one of the hardware keys on the device. In the pictured example the right most hardware key is shown schematically as receiving a long press input. Such a selection by the user raises a global actions menu that allows the user to lock the device power the device down turn the sound for the device on or off and turn BLUETOOTH functionality on or off among other things. If the user selects to power the device off a shut down animation is shown as represented schematically on display .

The display may also show a control for powering the device off which may be used alternatively to a long press on a hardware key such as is indicated on the right most hardware key of the device to turn off the device and thereby play a shutdown animation as shown in display .

One such component is a display manager which may be responsible for rendering content for presentation on display . The display manager may receive graphic related content from a number of sources and may determine how the content is to be provided to a user. For example a number of different windows for various applications on the device may need to be displayed and the display manager may determine which to display which to hide and what to display or hide when there is overlap between various graphical objects. Also as shown in certain information such as full application information in a main part of the display may be blocked from a user s view while information in a peripheral part of the display such as providing message information and messaging icons in a status bar may be displayed.

An input manager may be responsible for translating commands provided by a user of device . For example such commands may come from a keyboard from touch screen display from trackball or from other such sources including dedicated buttons or soft buttons e.g. buttons whose functions may change over time and whose functions may be displayed on areas of display that are adjacent to the particular buttons . The input manager may determine for example in what area of the display commands are being received and thus in what application being shown on the display the commands are intended for. In addition it may interpret input motions on the touch screen into a common format and pass those interpreted motions e.g. short press long press multiple press straight line drags and multi touch inputs to the appropriate application. The input manager may also report such inputs to an event manager not shown that in turn reports them to the appropriate modules or applications.

A variety of applications may operate generally on a common microprocessor on the device . The applications may take a variety of forms such as mapping applications e mail and other messaging applications web browser applications and various applications running within a web browser or running extensions of a web browser.

An access manager may control access to device . In particular access manager may turn off or may limit the ability to provide inputs to the device such as on touch screen display . In one example the access manager may when a period of inactivity on the device has passed notify the event manager to provide indications of input events only to the access manager. The access manager may then determine whether the input is in an area for tracing a pattern or an area for accessing emergency numbers. If it is in neither the access manager may retain the device in a locked state. If the input is in an emergency area the access manager may pass control to an emergency number dialing application that may permit limited user interaction to dial 911 or a similar number. If the input is in a tracing area then the access manager may register the areas in a grid that the tracing occurs may provide visual feedback to a user doing the tracing and may compare an entered tracing to a stored pass code when the user completes the tracing.

A wireless interface managers communication with a wireless network which may be a data network that also carries voice communications. The wireless interface may operate in a familiar manner and may provide for communication by the device with messaging service such as text messaging e mail and telephone voice mail messaging. In addition the wireless interface may support downloads and uploads of content and computer code over a wireless network.

Various forms of persistent storage may be provided such as using fixed disk drives and or solid state memory devices. In particular a user data database may stored particular information about a user of the device . In the example relevant here the user data may include preferences entered by the user regarding whether the device is to be lockable automatically the period of inactivity required to lock the device and the unlocking pattern for the user.

Using the pictured components and others that are omitted here for clarity the device may provide particular actions in response to user inputs. Specifically the device may go into a locked mode after a period of inactivity and may go into a deeper locked mode after an even greater period of inactivity or in response to a specific selection by a user to lock the device e.g. by long pressing one of the device hardware keys . The device may then respond in manners like those described above to user inputs to unlock the device or failures to unlock the device or to access certain limited services on the device such as notices of incoming messages or interaction to access emergency services.

The input from the user may take other forms. For example where the device contains an accelerometer the input may take the form of sweeping the device through the air in a pattern or tapping a pattern on the phone with a user s fingers. Under the first scenario for example the user may trace out a word in space with the device and the changes in acceleration sensed by the accelerometer may be compared to a recorded motion of the device. So that perfect matches are not required the acceleration data may be generalized to a sufficient degree that a user who knows the general motion that is required may repeat the motion most of the time whereas someone who does not know the motion cannot easily get into the device. For the second scenario a user may tap the device using the beats from a favorite song while they imagine the song in their head. The timing of the taps may be compared to a previously generated signature that was produced from the user providing the sequence earlier. The tempo of the tapping may be normalized out of the tapping timing so that only the relative speed of taps e.g. quarter notes eighth notes and sixteenth notes etc. is considered.

If the input matches the stored profile or values by whatever form it is entered as determined at box then the device shows the user the active application box . For example the application or applications that were active when the device went into a locked state may be displayed in the same form they took when the device was locked. Likewise a welcome screen or desktop may also be displayed. If the input is not a match then the lockout screen is displayed in its original form again perhaps with a message stating that the prior attempt to unlock the device was a failure.

Upon receiving an indication that the user has finished entering a pass code such as by the lifting of a user finger off a touch screen or by tracking the elements passed by the finger in real time until all elements in the code have been contacted in the right order the device may compare the pattern drawn the speed of the drawing and or the size of the user s finger with stored values that were selected earlier by the legitimate user or entered earlier by the legitimate user box . If the measured parameters match the stored parameters sufficiently i.e. an exact match may not be required for a parameter such as speed lest the user not be able to unlock their own device then the device is opened and an appropriate device state is determined box . For example the device may check a status registry or similar structure to determine what applications were running when the device was locked and the status of those applications. If the status registry is empty such as when the device is first turned on the device state may simply be a desktop or home screen for the device. With the appropriate state determined that state may then be displayed on the device box and the user may interact with the device in a normal manner.

If the entered pass code is not a sufficient match then the device may determine whether the user has failed to enter the pass code multiple times in a row and is thus likely to be an interloper trying to hack into the device box . If the count has been succeeded then the device can be locked down with a lock down message being displayed box so that the device can only be unlocked by alternative mechanisms. For example the device may have a separate pass code that is much more complex than the first or may be unlocked only be being contacted wirelessly over a network and then being subjected to a pre determined unlocking protocol. In these ways the true user may have techniques for unlocking the device that he or she would not carry with him or her so that a thief could not rummage through the person s belongings for a hint and or a corporate IT department may have uber pass codes that they can use when employees get into trouble.

Referring now to the exterior appearance of an exemplary device that implements the user interface features described here is illustrated. Briefly and among other things the device includes a processor configured to display notifications regarding events on the device and to permit a user to conveniently pull down detail about the events relating to the notifications into an extended view of the events.

In more detail the hardware environment of the device includes a display for displaying text images and video to a user a keyboard for entering text data and user commands into the device a pointing device for pointing selecting and adjusting objects displayed on the display an antenna a network connection a camera a microphone and a speaker . Although the device shows an external antenna the device can include an internal antenna which is not visible to the user.

The display can display video graphics images and text that make up the user interface for the software applications used by the device and the operating system programs used to operate the device . Among the possible elements that may be displayed on the display are a new mail indicator that alerts a user to the presence of a new message an active call indicator that indicates that a telephone call is being received placed or is occurring a data standard indicator that indicates the data standard currently being used by the device to transmit and receive data a signal strength indicator that indicates a measurement of the strength of a signal received by via the antenna such as by using signal strength bars a battery life indicator that indicates a measurement of the remaining battery life or a clock that outputs the current time.

The display may also show application icons representing various applications available to the user such as a web browser application icon a phone application icon a search application icon a contacts application icon a mapping application icon an email application icon or other application icons. In one example implementation the display is a quarter video graphics array QVGA thin film transistor TFT liquid crystal display LCD capable of 16 bit or better color.

A user uses the keyboard or keypad to enter commands and data to operate and control the operating system and applications that provide for responding to notification of alerts and responding to messages and the like and also to a touch screen . The keyboard includes standard keyboard buttons or keys associated with alphanumeric characters such as keys and that are associated with the alphanumeric characters Q and W when selected alone or are associated with the characters and 1 when pressed in combination with key . A single key may also be associated with special characters or functions including unlabeled functions based upon the state of the operating system or applications invoked by the operating system. For example when an application calls for the input of a numeric character a selection of the key alone may cause a 1 to be input.

In addition to keys traditionally associated with an alphanumeric keypad the keyboard also includes other special function keys such as an establish call key that causes a received call to be answered or a new call to be originated a terminate call key that causes the termination of an active call a drop down menu key that causes a menu to appear within the display a backward navigation key that causes a previously accessed network address to be accessed again a favorites key that causes an active web page to be placed in a bookmarks folder of favorite sites or causes a bookmarks folder to appear a home page key that causes an application invoked on the device to navigate to a predetermined network address or other keys that provide for multiple way navigation application selection and power and volume control.

The user uses the pointing device to select and adjust graphics and text objects displayed on the display as part of the interaction with and control of the device and the applications invoked on the device . The pointing device is any appropriate type of pointing device and may be a joystick a trackball a touch pad a camera a voice input device a touch screen device implemented in combination with the display or any other input device.

The antenna which can be an external antenna or an internal antenna is a directional or omni directional antenna used for the transmission and reception of radiofrequency RF signals that implement point to point radio communication wireless local area network LAN communication or location determination. The antenna may facilitate point to point radio communication using the Specialized Mobile Radio SMR cellular or Personal Communication Service PCS frequency bands and may implement the transmission of data using any number or data standards. For example the antenna may allow data to be transmitted between the device and a base station using technologies such as Wireless Broadband WiBro Worldwide Interoperability for Microwave ACCess WiMAX 5GPP Long Term Evolution LTE Ultra Mobile Broadband UMB High Performance Radio Metropolitan Network HIPERMAN iBurst or High Capacity Spatial Division Multiple Access HC SDMA High Speed OFDM Packet Access HSOPA High Speed Packet Access HSPA HSPA Evolution HSPA High Speed Upload Packet Access HSUPA High Speed Downlink Packet Access HSDPA Generic Access Network GAN Time Division Synchronous Code Division Multiple Access TD SCDMA Evolution Data Optimized or Evolution Data Only EVDO Time Division Code Division Multiple Access TD CDMA Freedom Of Mobile Multimedia Access FOMA Universal Mobile Telecommunications System UMTS Wideband Code Division Multiple Access W CDMA Enhanced Data rates for GSM Evolution EDGE Enhanced GPRS EGPRS Code Division Multiple Access 2000 CDMA2000 Wideband Integrated Dispatch Enhanced Network WiDEN High Speed Circuit Switched Data HSCSD General Packet Radio Service GPRS Personal Handy Phone System PHS Circuit Switched Data CSD Personal Digital Cellular PDC CDMAone Digital Advanced Mobile Phone System D AMPS Integrated Digital Enhanced Network IDEN Global System for Mobile communications GSM DataTAC Mobitex Cellular Digital Packet Data CDPD Hicap Advanced Mobile Phone System AMPS Nordic Mobile Phone NMP Autoradiopuhelin ARP Autotel or Public Automated Land Mobile PALM Mobiltelefonisystem D MTD Offentlig Landmobil Telefoni OLT Advanced Mobile Telephone System AMTS Improved Mobile Telephone Service IMTS Mobile Telephone System MTS Push To Talk PTT or other technologies. Communication via W CDMA HSUPA GSM GPRS and EDGE networks may occur for example using a QUALCOMM MSM7200A chipset with an QUALCOMM RTR6285 transceiver and PM7540 power management circuit.

The wireless or wired computer network connection may be a modem connection a local area network LAN connection including the Ethernet or a broadband wide area network WAN connection such as a digital subscriber line DSL cable high speed internet connection dial up connection T 1 line T 3 line fiber optic connection or satellite connection. The network connection may connect to a LAN network a corporate or government WAN network the Internet a telephone network or other network. The network connection uses a wired or wireless connector. Example wireless connectors include for example an INFRARED DATA ASSOCIATION IrDA wireless connector a Wi Fi wireless connector an optical wireless connector an INSTITUTE OF ELECTRICAL AND ELECTRONICS ENGINEERS IEEE Standard 802.11 wireless connector a BLUETOOTH wireless connector such as a BLUETOOTH version 1.2 or 5.0 connector a near field communications NFC connector an orthogonal frequency division multiplexing OFDM ultra wide band UWB wireless connector a time modulated ultra wide band TM UWB wireless connector or other wireless connector. Example wired connectors include for example a IEEE 1394 FIREWIRE connector a Universal Serial Bus USB connector including a mini B USB interface connector a serial port connector a parallel port connector or other wired connector. In another implementation the functions of the network connection and the antenna are integrated into a single component.

The camera allows the device to capture digital images and may be a scanner a digital still camera a digital video camera other digital input device. In one example implementation the camera is a 5 mega pixel MP camera that utilizes a complementary metal oxide semiconductor CMOS .

The microphone allows the device to capture sound and may be an omni directional microphone a unidirectional microphone a bi directional microphone a shotgun microphone or other type of apparatus that converts sound to an electrical signal. The microphone may be used to capture sound generated by a user for example when the user is speaking to another user during a telephone call via the device . Conversely the speaker allows the device to convert an electrical signal into sound such as a voice from another user generated by a telephone application program or a ring tone generated from a ring tone application program. Furthermore although the device is illustrated in as a handheld device in further implementations the device may be a laptop a workstation a midrange computer a mainframe an embedded system telephone desktop PC a tablet computer a PDA or other type of computing device.

The CPU can be one of a number of computer processors. In one arrangement the computer CPU is more than one processing unit. The RAM interfaces with the computer bus so as to provide quick RAM storage to the CPU during the execution of software programs such as the operating system application programs and device drivers. More specifically the CPU loads computer executable process steps from the storage medium or other media into a field of the RAM in order to execute software programs. Data is stored in the RAM where the data is accessed by the computer CPU during execution. In one example configuration the device includes at least 128 MB of RAM and 256 MB of flash memory.

The storage medium itself may include a number of physical drive units such as a redundant array of independent disks RAID a floppy disk drive a flash memory a USB flash drive an external hard disk drive thumb drive pen drive key drive a High Density Digital Versatile Disc HD DVD optical disc drive an internal hard disk drive a Blu Ray optical disc drive or a Holographic Digital Data Storage HDDS optical disc drive an external mini dual in line memory module DIMM synchronous dynamic random access memory SDRAM or an external micro DIMM SDRAM. Such computer readable storage media allow the device to access computer executable process steps application programs and the like stored on removable and non removable memory media to off load data from the device or to upload data onto the device .

A computer program product is tangibly embodied in storage medium a machine readable storage medium. The computer program product includes instructions that when read by a machine operate to cause a data processing apparatus to store image data in the mobile device. In some embodiments the computer program product includes instructions that generate notifications about alerts such as newly arriving messages on the device.

The operating system may be a LINUX based operating system such as the GOOGLE mobile device platform APPLE MAC OS X MICROSOFT WINDOWS NT WINDOWS 2000 WINDOWS XP WINDOWS MOBILE a variety of UNIX flavored operating systems or a proprietary operating system for computers or embedded systems. The application development platform or framework for the operating system may be BINARY RUNTIME ENVIRONMENT FOR WIRELESS BREW JAVA Platform Micro Edition JAVA ME or JAVA 2 Platform Micro Edition J2ME using the SUN MICROSYSTEMS JAVASCRIPT programming language PYTHON FLASH LITE or MICROSOFT .NET Compact or another appropriate environment.

The device stores computer executable code for the operating system and the application programs such as an email instant messaging a video service application a mapping application word processing spreadsheet presentation gaming mapping web browsing JAVASCRIPT engine or other applications. For example one implementation may allow a user to access the GOOGLE GMAIL email application the GOOGLE TALK instant messaging application a YOUTUBE video service application a GOOGLE MAPS or GOOGLE EARTH mapping application or a GOOGLE PICASA imaging editing and presentation application. The application programs may also include a widget or gadget engine such as a TAFRI widget engine a MICROSOFT gadget engine such as the WINDOWS SIDEBAR gadget engine or the KAPSULES gadget engine a YAHOO widget engine such as the KONFABULTOR widget engine the APPLE DASHBOARD widget engine the GOOGLE gadget engine the KLIPFOLIO widget engine an OPERA widget engine the WIDSETS widget engine a proprietary widget or gadget engine or other widget or gadget engine the provides host system software for a physically inspired applet on a desktop.

Although it is possible to provide for notifications and interactions with messages and other events using the above described implementation it is also possible to implement the functions according to the present disclosure as a dynamic link library DLL or as a plug in to other application programs such as an Internet web browser such as the FOXFIRE web browser the APPLE SAFARI web browser or the MICROSOFT INTERNET EXPLORER web browser.

The navigation module may determine an absolute or relative position of the device such as by using the Global Positioning System GPS signals the GLObal NAvigation Satellite System GLONASS the Galileo positioning system the Beidou Satellite Navigation and Positioning System an inertial navigation system a dead reckoning system or by accessing address internet protocol IP address or location information in a database. The navigation module may also be used to measure angular displacement orientation or velocity of the device such as by using one or more accelerometers.

The operating system can generally be organized into six components a kernel libraries an operating system runtime application libraries system services and applications . The kernel includes a display driver that allows software such as the operating system and the application programs to interact with the display via the display interface a camera driver that allows the software to interact with the camera a BLUETOOTH driver a M Systems driver a binder IPC driver a USB driver a keypad driver that allows the software to interact with the keyboard via the keyboard interface a WiFi driver audio drivers that allow the software to interact with the microphone and the speaker via the sound interface and a power management component that allows the software to interact with and manage the power source .

The BLUETOOTH driver which in one implementation is based on the BlueZ BLUETOOTH stack for LINUX based operating systems provides profile support for headsets and hands free devices dial up networking personal area networking PAN or audio streaming such as by Advance Audio Distribution Profile A2DP or Audio Video Remote Control Profile AVRCP . The BLUETOOTH driver provides JAVA bindings for scanning pairing and unpairing and service queries.

The libraries include a media framework that supports standard video audio and still frame formats such as Moving Picture Experts Group MPEG 4 H.264 MPEG 1 Audio Layer 3 MP3 Advanced Audio Coding AAC Adaptive Multi Rate AMR Joint Photographic Experts Group JPEG and others using an efficient JAVA Application Programming Interface API layer a surface manager a simple graphics library SGL for two dimensional application drawing an Open Graphics Library for Embedded Systems OpenGL ES for gaming and three dimensional rendering a C standard library LIBC a LIBWEBCORE library a FreeType library an SSL and an SQLite library .

The operating system runtime includes core JAVA libraries and a Dalvik virtual machine . The Dalvik virtual machine is a custom virtual machine that runs a customized file format .DEX .

The operating system can also include Mobile Information Device Profile MIDP components such as the MIDP JAVA Specification Requests JSRs components MIDP runtime and MIDP applications as shown in . The MIDP components can support MIDP applications running on the device .

With regard to graphics rendering a system wide composer manages surfaces and a frame buffer and handles window transitions using the OpenGL ES and two dimensional hardware accelerators for its compositions.

The Dalvik virtual machine may be used with an embedded environment since it uses runtime memory very efficiently implements a CPU optimized bytecode interpreter and supports multiple virtual machine processes per device. The custom file format DEX is designed for runtime efficiency using a shared constant pool to reduce memory read only structures to improve cross process sharing concise and fixed width instructions to reduce parse time thereby allowing installed applications to be translated into the custom file formal at build time. The associated bytecodes are designed for quick interpretation since register based instead of stack based instructions reduce memory and dispatch overhead since using fixed width instructions simplifies parsing and since the 16 bit code units minimize reads.

The application libraries include a view system a resource manager and content providers . The system services includes a status bar an application launcher a package manager that maintains information for all installed applications a telephony manager that provides an application level JAVA interface to the telephony subsystem a notification manager that allows all applications access to the status bar and on screen notifications a window manager that allows multiple applications with multiple windows to share the display and an activity manager that runs each application in a separate process manages an application life cycle and maintains a cross application history.

The applications include a home application a dialer application a contacts application and a browser application . Each of the applications may generate graphical elements that either do or do not have long press interactions. As described above those that do not have long press interactions may provide no immediate visual feedback when they are first pressed while those that do have such interactions may be highlighted between the time they are first pressed and the expiration of the long press period. Also the highlighting may not occur exactly upon a press so that mere tapping of an item does not cause it to be highlighted instead the highlighting may occur upon the expiration of a short press period that is slightly more than the time period for a tap but appreciably shorter than a long press period.

The telephony manager provides event notifications such as phone state network state Subscriber Identity Module SIM status or voicemail status allows access to state information such as network information SIM information or voicemail presence initiates calls and queries and controls the call state. The browser application renders web pages in a full desktop like manager including navigation functions. Furthermore the browser application allows single column small screen rendering and provides for the embedding of HTML views into other applications.

Some processes can be persistent. For example processes associated with core system components such as the surface manager the window manager or the activity manager can be continuously executed while the device is powered. Additionally some application specific process can also be persistent. For example processes associated with the dialer application may also be persistent.

The processes implemented by the operating system kernel may generally be categorized as system services processes dialer processes browser processes and maps processes . The system services processes include status bar processes associated with the status bar application launcher processes associated with the application launcher package manager processes associated with the package manager activity manager processes associated with the activity manager resource manager processes associated with a resource manager that provides access to graphics localized strings and XML layout descriptions notification manger processes associated with the notification manager window manager processes associated with the window manager core JAVA libraries processes associated with the core JAVA libraries surface manager processes associated with the surface manager Dalvik virtual machine processes associated with the Dalvik virtual machine and LIBC processes associated with the LIBC library .

The dialer processes include dialer application processes associated with the dialer application telephony manager processes associated with the telephony manager core JAVA libraries processes associated with the core JAVA libraries Dalvik virtual machine processes associated with the Dalvik Virtual machine and LIBC processes associated with the LIBC library . The browser processes include browser application processes associated with the browser application core JAVA libraries processes associated with the core JAVA libraries Dalvik virtual machine processes associated with the Dalvik virtual machine LIBWEBCORE processes associated with the LIBWEBCORE library and LIBC processes associated with the LIBC library .

The maps processes include maps application processes core JAVA libraries processes Dalvik virtual machine processes and LIBC processes . Notably some processes such as the Dalvik virtual machine processes may exist within one or more of the systems services processes the dialer processes the browser processes and the maps processes .

Computing device includes a processor memory a storage device a high speed interface connecting to memory and high speed expansion ports and a low speed interface connecting to low speed bus and storage device . Each of the components and are interconnected using various busses and may be mounted on a common motherboard or in other manners as appropriate. The processor can process instructions for execution within the computing device including instructions stored in the memory or on the storage device to display graphical information for a GUI on an external input output device such as display coupled to high speed interface . In other implementations multiple processors and or multiple buses may be used as appropriate along with multiple memories and types of memory. Also multiple computing devices may be connected with each device providing portions of the necessary operations e.g. as a server bank a group of blade servers or a multi processor system .

The memory stores information within the computing device . In one implementation the memory is a volatile memory unit or units. In another implementation the memory is a non volatile memory unit or units. The memory may also be another form of computer readable medium such as a magnetic or optical disk.

The storage device is capable of providing mass storage for the computing device . In one implementation the storage device may be or contain a computer readable medium such as a floppy disk device a hard disk device an optical disk device or a tape device a flash memory or other similar solid state memory device or an array of devices including devices in a storage area network or other configurations. A computer program product can be tangibly embodied in an information carrier. The computer program product may also contain instructions that when executed perform one or more methods such as those described above. The information carrier is a computer or machine readable medium such as the memory the storage device memory on processor or a propagated signal.

The high speed controller manages bandwidth intensive operations for the computing device while the low speed controller manages lower bandwidth intensive operations. Such allocation of functions is exemplary only. In one implementation the high speed controller is coupled to memory display e.g. through a graphics processor or accelerator and to high speed expansion ports which may accept various expansion cards not shown . In the implementation low speed controller is coupled to storage device and low speed expansion port . The low speed expansion port which may include various communication ports e.g. USB Bluetooth Ethernet wireless Ethernet may be coupled to one or more input output devices such as a keyboard a pointing device a scanner or a networking device such as a switch or router e.g. through a network adapter.

The computing device may be implemented in a number of different forms as shown in the figure. For example it may be implemented as a standard server or multiple times in a group of such servers. It may also be implemented as part of a rack server system . In addition it may be implemented in a personal computer such as a laptop computer . Alternatively components from computing device may be combined with other components in a mobile device not shown such as device . Each of such devices may contain one or more of computing device and an entire system may be made up of multiple computing devices communicating with each other.

Computing device includes a processor memory an input output device such as a display a communication interface and a transceiver among other components. The device may also be provided with a storage device such as a microdrive or other device to provide additional storage. Each of the components and are interconnected using various buses and several of the components may be mounted on a common motherboard or in other manners as appropriate.

The processor can execute instructions within the computing device including instructions stored in the memory . The processor may be implemented as a chipset of chips that include separate and multiple analog and digital processors. The processor may provide for example for coordination of the other components of the device such as control of user interfaces applications run by device and wireless communication by device .

Processor may communicate with a user through control interface and display interface coupled to a display . The display may be for example a TFT LCD Thin Film Transistor Liquid Crystal Display or an OLED Organic Light Emitting Diode display or other appropriate display technology. The display interface may comprise appropriate circuitry for driving the display to present graphical and other information to a user. The control interface may receive commands from a user and convert them for submission to the processor . In addition an external interface may be provide in communication with processor so as to enable near area communication of device with other devices. External interface may provide for example for wired communication in some implementations or for wireless communication in other implementations and multiple interfaces may also be used.

The memory stores information within the computing device . The memory can be implemented as one or more of a computer readable medium or media a volatile memory unit or units or a non volatile memory unit or units. Expansion memory may also be provided and connected to device through expansion interface which may include for example a SIMM Single In Line Memory Module card interface. Such expansion memory may provide extra storage space for device or may also store applications or other information for device . Specifically expansion memory may include instructions to carry out or supplement the processes described above and may include secure information also. Thus for example expansion memory may be provide as a security module for device and may be programmed with instructions that permit secure use of device . In addition secure applications may be provided via the SIMM cards along with additional information such as placing identifying information on the SIMM card in a non hackable manner.

The memory may include for example flash memory and or NVRAM memory as discussed below. In one implementation a computer program product is tangibly embodied in an information carrier. The computer program product contains instructions that when executed perform one or more methods such as those described above. The information carrier is a computer or machine readable medium such as the memory expansion memory memory on processor or a propagated signal that may be received for example over transceiver or external interface .

Device may communicate wirelessly through communication interface which may include digital signal processing circuitry where necessary. Communication interface may provide for communications under various modes or protocols such as GSM voice calls SMS EMS or MMS messaging CDMA TDMA PDC WCDMA CDMA2000 or GPRS among others. Such communication may occur for example through radiofrequency transceiver . In addition short range communication may occur such as using a Bluetooth WiFi or other such transceiver not shown . In addition GPS Global Positioning System receiver module may provide additional navigation and location related wireless data to device which may be used as appropriate by applications running on device .

Device may also communicate audibly using audio codec which may receive spoken information from a user and convert it to usable digital information. Audio codec may likewise generate audible sound for a user such as through a speaker e.g. in a handset of device . Such sound may include sound from voice telephone calls may include recorded sound e.g. voice messages music files etc. and may also include sound generated by applications operating on device .

The computing device may be implemented in a number of different forms as shown in the figure. For example it may be implemented as a cellular telephone . It may also be implemented as part of a smartphone personal digital assistant or other similar mobile device.

Various implementations of the systems and techniques described here can be realized in digital electronic circuitry integrated circuitry specially designed ASICs application specific integrated circuits computer hardware firmware software and or combinations thereof. These various implementations can include implementation in one or more computer programs that are executable and or interpretable on a programmable system including at least one programmable processor which may be special or general purpose coupled to receive data and instructions from and to transmit data and instructions to a storage system at least one input device and at least one output device.

These computer programs also known as programs software software applications or code include machine instructions for a programmable processor and can be implemented in a high level procedural and or object oriented programming language and or in assembly machine language. As used herein the terms machine readable medium computer readable medium refers to any computer program product apparatus and or device e.g. magnetic discs optical disks memory Programmable Logic Devices PLDs used to provide machine instructions and or data to a programmable processor including a machine readable medium that receives machine instructions as a machine readable signal. The term machine readable signal refers to any signal used to provide machine instructions and or data to a programmable processor.

To provide for interaction with a user the systems and techniques described here can be implemented on a computer having a display device e.g. a CRT cathode ray tube or LCD liquid crystal display monitor for displaying information to the user and a keyboard and a pointing device e.g. a mouse or a trackball by which the user can provide input to the computer. Other kinds of devices can be used to provide for interaction with a user as well for example feedback provided to the user can be any form of sensory feedback e.g. visual feedback auditory feedback or tactile feedback and input from the user can be received in any form including acoustic speech or tactile input.

The systems and techniques described here can be implemented in a computing system that includes a back end component e.g. as a data server or that includes a middleware component e.g. an application server or that includes a front end component e.g. a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the systems and techniques described here or any combination of such back end middleware or front end components. The components of the system can be interconnected by any form or medium of digital data communication e.g. a communication network . Examples of communication networks include a local area network LAN a wide area network WAN and the Internet.

The computing system can include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client server relationship to each other.

A number of embodiments have been described. Nevertheless it will be understood that various modifications may be made without departing from the spirit and scope of the invention. For example much of this document has been described with respect to messaging and mapping applications but other forms of graphical applications may also be addressed such as interactive program guides web page navigation and zooming and other such applications.

In addition the logic flows depicted in the figures do not require the particular order shown or sequential order to achieve desirable results. In addition other steps may be provided or steps may be eliminated from the described flows and other components may be added to or removed from the described systems. Accordingly other embodiments are within the scope of the following claims.

