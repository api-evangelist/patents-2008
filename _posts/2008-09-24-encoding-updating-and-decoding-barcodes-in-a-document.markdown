---

title: Encoding, updating, and decoding barcodes in a document
abstract: Method for inserting a barcode image in a document including receiving a request to encode one or more properties about the document as a barcode image in the document, the request being received through a document editor, generating the barcode image based on the properties, wrapping the barcode image inside a container object, and inserting the container object into the document.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08925822&OS=08925822&RS=08925822
owner: Microsoft Corporation
number: 08925822
owner_city: Redmond
owner_country: US
publication_date: 20080924
---
Electronic documents contain metadata or properties that provide additional information about the file such as date of last modification the author the location of the document on a server etc. However after a document is printed all of the metadata associated with the electronic form of the document is no longer available on the printed document.

Described herein are implementations of various techniques for using a document editor to encode and decode barcodes on a document. In one implementation a document editor application may include an option on its graphical user interface GUI to create a barcode image on a document. Upon receiving a command to add a barcode image to the document the document editor application may present the user another GUI that may prompt the user to select one or more properties pertaining to the document that he may wish to encode into the barcode image. After receiving the user s selections the document editor application may encode information about the selected properties into a barcode image format such as Quick Response QR or Data Matrix.

The document editor application may then wrap the barcode image inside a container object or element which may later be queried by the document editor s object model. The container object may be tagged or marked with a string that may indicate the location of the barcode image in the document. The document editor application may then insert the container object containing the barcode image into the document.

After the barcode image is inserted into the document the document editor application may generate an Extensible Markup Language XML document that may include a list of the properties about the document a property value for each listed property and an indication of whether the property was selected to be encoded into the barcode image by the user. The XML document may be inserted into the document s format s property bag and may be accessed by the document editor s object model.

When a document is opened the document editor application may query the document s property bag for an XML document that may contain information pertaining to the barcode image in the document. If the XML document exists the document editor may extract information from the XML file and store the information in a memory cache. If the XML document does not exist the document editor assumes that the document does not contain a barcode image.

Before a document is printed saved or updated the document editor application may update the barcode images that may be contained within the document. In order to update the barcode images the document editor application may first receive the current properties of the document from the document editor s object model. It may then generate a new barcode image containing information about the current properties of the document. The document editor s object model may then be utilized to scan the document for tags or markings that may be in one or more container objects. For each located tag or marking the document editor application may replace the existing barcode image in the container object with the new barcode image.

In another implementation the document editor application may also decode a barcode image that may exist on a document. Generally the document editor application may receive a digital image of the barcode image and it may return an aggregated string that may be encoded in the barcode image. The document editor application may present the string to the user in a user friendly format or it may determine if the document s file path is indicated within the aggregated string. If the file path exists within the aggregated string the document editor application may search the file directories of its computer network for the file path. In one implementation if the document editor application locates the file path it may subsequently open the document.

The above referenced summary section is provided to introduce a selection of concepts in a simplified form that are further described below in the detailed description section. The summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used to limit the scope of the claimed subject matter. Furthermore the claimed subject matter is not limited to implementations that solve any or all disadvantages noted in any part of this disclosure.

In general one or more implementations described herein are directed to using a document editor application to encode and decode a barcode. One or more implementations of various techniques for using a document editor application to encode and decode a barcode image will now be described in more detail with reference to in the following paragraphs.

Implementations of various technologies described herein may be operational with numerous general purpose or special purpose computing system environments or configurations. Examples of well known computing systems environments and or configurations that may be suitable for use with the various technologies described herein include but are not limited to personal computers server computers hand held or laptop devices multiprocessor systems microprocessor based systems set top boxes programmable consumer electronics network PCs minicomputers mainframe computers distributed computing environments that include any of the above systems or devices and the like.

The various technologies described herein may be implemented in the general context of computer executable instructions such as program modules being executed by a computer. Generally program modules include routines programs objects components data structures etc. that performs particular tasks or implement particular abstract data types. The various technologies described herein may also be implemented in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network e.g. by hardwired links wireless links or combinations thereof. In a distributed computing environment program modules may be located in both local and remote computer storage media including memory storage devices.

The computing system may include a central processing unit CPU a system memory and a system bus that couples various system components including the system memory to the CPU . Although only one CPU is illustrated in it should be understood that in some implementations the computing system may include more than one CPU. The system bus may be any of several types of bus structures including a memory bus or memory controller a peripheral bus and a local bus using any of a variety of bus architectures. By way of example and not limitation such architectures include Industry Standard Architecture ISA bus Micro Channel Architecture MCA bus Enhanced ISA EISA bus Video Electronics Standards Association VESA local bus and Peripheral Component Interconnect PCI bus also known as Mezzanine bus. The system memory may include a read only memory ROM and a random access memory RAM . A basic input output system BIOS containing the basic routines that help transfer information between elements within the computing system such as during start up may be stored in the ROM .

The computing system may further include a hard disk drive for reading from and writing to a hard disk a magnetic disk drive for reading from and writing to a removable magnetic disk and an optical disk drive for reading from and writing to a removable optical disk such as a CD ROM or other optical media. The hard disk drive the magnetic disk drive and the optical disk drive may be connected to the system bus by a hard disk drive interface a magnetic disk drive interface and an optical drive interface respectively. The drives and their associated computer readable media may provide nonvolatile storage of computer readable instructions data structures program modules and other data for the computing system .

Although the computing system is described herein as having a hard disk a removable magnetic disk and a removable optical disk it should be appreciated by those skilled in the art that the computing system may also include other types of computer readable media that may be accessed by a computer. For example such computer readable media may include computer storage media and communication media. Computer storage media may include volatile and non volatile and removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Computer storage media may further include RAM ROM erasable programmable read only memory EPROM electrically erasable programmable read only memory EEPROM flash memory or other solid state memory technology CD ROM digital versatile disks DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by the computing system . Communication media may embody computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and may include any information delivery media. The term modulated data signal may mean a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media may include wired media such as a wired network or direct wired connection and wireless media such as acoustic RF infrared and other wireless media. Combinations of any of the above may also be included within the scope of computer readable media.

A number of program modules may be stored on the hard disk magnetic disk optical disk ROM or RAM including an operating system one or more application programs a document editor application program data and a database system . The operating system may be any suitable operating system that may control the operation of a networked personal or server computer such as Windows XP Mac OS X Unix variants e.g. Linux and BSD and the like. The document editor application may be a document processing program that may enable a user to create save and print a document. In one implementation the document editor application may include a barcode application that may be capable of encoding and decoding a barcode image. In one implementation the barcode application may be separate from the document editor application . The document editor application and the barcode application will be described in more detail with reference to in the paragraphs below.

A user may enter commands and information into the computing system through input devices such as a keyboard and pointing device . Other input devices may include a microphone joystick game pad satellite dish scanner or the like. These and other input devices may be connected to the CPU through a serial port interface coupled to system bus but may be connected by other interfaces such as a parallel port game port or a universal serial bus USB . A monitor or other type of display device may also be connected to system bus via an interface such as a video adapter . In addition to the monitor the computing system may further include other peripheral output devices such as speakers and printers.

Further the computing system may operate in a networked environment using logical connections to one or more remote computers The logical connections may be any connection that is commonplace in offices enterprise wide computer networks intranets and the Internet such as local area network LAN and a wide area network WAN .

When using a LAN networking environment the computing system may be connected to the local network through a network interface or adapter . When used in a WAN networking environment the computing system may include a modem wireless router or other means for establishing communication over a wide area network such as the Internet. The modem which may be internal or external may be connected to the system bus via the serial port interface . In a networked environment program modules depicted relative to the computing system or portions thereof may be stored in a remote memory storage device . It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used.

It should be understood that the various technologies described herein may be implemented in connection with hardware software or a combination of both. Thus various technologies or certain aspects or portions thereof may take the form of program code i.e. instructions embodied in tangible media such as floppy diskettes CD ROMs hard drives or any other machine readable storage medium wherein when the program code is loaded into and executed by a machine such as a computer the machine becomes an apparatus for practicing the various technologies. In the case of program code execution on programmable computers the computing device may include a processor a storage medium readable by the processor including volatile and non volatile memory and or storage elements at least one input device and at least one output device. One or more programs that may implement or utilize the various technologies described herein may use an application programming interface API reusable controls and the like. Such programs may be implemented in a high level procedural or object oriented programming language to communicate with a computer system. However the program s may be implemented in assembly or machine language if desired. In any case the language may be a compiled or interpreted language and combined with hardware implementations.

At step the document editor application may receive a request from a user to insert a barcode image to a document. In one implementation the document editor application may provide a graphical user interface GUI option to add a barcode image to a document. For example the GUI may be presented as an icon in a toolbar of the document editor application .

At step the document editor application may display a barcode GUI to the user. In one implementation the barcode GUI may prompt the user to select one or more properties about the document to encode into the barcode image. The properties may include information such as the document s file path location author template previous author revision number application name creation date last save time total editing time number of pages number of words number of characters and the like.

At step the document editor application may receive the selections made by the user on the barcode GUI. In one implementation upon receiving the user s document property selection the document editor application may retrieve the corresponding property values of the document using the document editor s object model. For example if the user selects to add the document s file path location into a barcode image at step the document editor application may retrieve the file path location of the document from the document editor s object model.

At step the document editor application may generate a barcode image that may include information pertaining to the user s selected properties received at step . The barcode image may be a one or two dimensional image that may be capable of storing information therein. In order to generate a barcode image the document editor application may first generate an aggregated string that may include the user s selected properties and its corresponding property values. In one implementation the aggregated string may include the property name and the corresponding property value of the properties selected by the user. Referring to the previous example if the user selects to add the document s file path location into a barcode image at step the aggregated string may read file path location C Mydocs document . In this example the aggregated string may indicate that the file path for the document in which the barcode image may be generated for is in the C drive in the directory Mydocs and is a file that is named document. 

After the aggregated string is generated the document editor application may send the aggregated string to the barcode application to create a one or two dimensional barcode image with the aggregated string encoded therein. In one implementation the barcode image may be created in a format such as Quick Response QR or Data Matrix.

At step the document editor application may insert the barcode image inside a container object or element. In one implementation the container object may be tagged or marked with a string that may be used to identify the barcode image among other objects that may be in the document. The tagged or marked container object may facilitate a barcode image update by providing the document editor application a means to locate and replace all of the barcode images contained within the document. In one implementation the tag or marking in a container object may be located by the document editor s object model.

At step the document editor application may create a barcode Extensible Markup Language XML document that may list the properties of the document the corresponding value for each property and an indication as to whether the property was selected by the user to be included in the barcode image. In one implementation the barcode XML document may be inserted into the document s format property bag and it may be accessible with the document editor s object model. The barcode XML document may facilitate a barcode image update by providing the document editor application with information about which properties may need to be updated and included in the barcode image. The barcode XML document may be of a specific format or schema such that the document editor may recognize the barcode XML document for the purpose of updating a barcode image.

At step the document editor application may insert the container object into the document. In one implementation the document editor application may prompt the user to select the location on the document the barcode image may be placed.

At step the document editor application may receive a request to open a document from a user. In one implementation the document may be opened using a toolbar on the document editor application or it may be opened by locating and accessing the document file using the computing system .

At step the document editor application may search the document s property bag for a barcode XML document.

At step the document editor application may determine if the barcode XML document exists. If the barcode XML document exists the document editor application may proceed to step . However if the barcode XML document does not exist the document editor application may proceed to step .

At step the document editor application may retrieve information that may be stored in the barcode XML document such as the properties of the document the corresponding property values of the document and an indication for each property that may have been selected by the user.

At step the document editor application may store the information retrieved at step as a 3 tuple data structure in a memory cache of the computing system . In one implementation the 3 tuple data structure may include the property name the property value and a selection state for each property as it may be listed in the barcode XML document.

At step the document editor application may open the document in response to the user s request at step .

Referring back to step if the barcode XML document does not exist the document editor application may proceed to step . At step the document editor application may assume that there is no barcode image on the document. In one implementation the document editor application may then open the document in response to the user s request.

At step the document editor application may retrieve the current properties of the document. In one implementation the document editor application may use the document editor s object model to determine the current properties of the document.

At step the document editor application may generate a new barcode image to replace one or more existing barcode images that may exist on the document. In one implementation the document editor application may first generate a new aggregated string that may include the current information about the document. In order to generate a new aggregated string the document editor application may first retrieve the information that may be stored in the 3 tuple data structure in the memory cache as described in step . Using the information in the 3 tuple data structure the document editor application may determine which properties were selected by the user to be encoded in the barcode image and it may retrieve the current values of those properties using the document editor s object model. The document editor application may then create an aggregated string such that it may include the current information pertaining to the user selected properties of the document. In one implementation the aggregated string may be generated as .

After the aggregated string is generated the document editor application may pass the aggregated string to the barcode application to create a new one or two dimensional barcode image embedded with the aggregated string.

At step the document editor application may employ the document editor s object model to scan the container objects in the document for tags that may indicate where a barcode image may be located on the document.

At step the document editor application may delete each barcode image that may be in the tagged container objects in the document. The document editor application may then add the new barcode image created at step in the tagged container objects.

At step the document editor application may update the XML document to reflect the current property values of the document.

At step the document editor application may receive a barcode image in a digital format. In one implementation the document editor application may open an electronic document that may have one or more barcode images embedded within the document. In this instance the barcode image may already be stored in a digital format and the document editor application may begin decoding the barcode image by receiving an input from the pointing device the keyboard or the like.

In another implementation a user may try to decode a barcode image that may exist on a printed document. In this situation the document editor application may acquire a digital format of the barcode image of the document with the use of a digital camera a scanner or an image file such as a Portable Document Format PDF or bitmap file. The digital camera may include web cameras mobile phone cameras and any other type of camera that may create a digital image file.

At step the document editor application may pass the barcode image to the barcode application which may decode the barcode image. In one implementation the barcode application may extract the information stored in a barcode and output the aggregated string that may have originally been used to encode the barcode image. In one implementation if the barcode image was obtained from an electronic document with the click of the pointing device a click event handler may be triggered by the document editor s object model to pass the barcode image to the barcode application .

At step the document editor application may store the aggregated string returned at step in a memory cache. Although the document editor application has been described to store the string in a memory cache it should be understood that the string may be stored in any memory device such as RAM hard disk memory storage device and the like.

At step the document editor application may present the string encoded in the barcode image to the user. In one implementation the document editor application may retrieve the string from the memory cache and display it in a format that may be understood by the user. For example the document editor application may display the barcode information as . In another implementation the document editor application may present the string to the user in its entirety as an aggregated string or it may display the string in a format that may be easily interpreted by a user. Referring back to the example described in step the document editor application may present the aggregated string for the file path information in the following manner 

In another implementation the barcode image may also include information pertaining to the author of the document. In that case the aggregated string may be presented as 

In yet another implementation the document editor application may be able to map the document to a file path location. If the aggregated string includes a file path location the document editor application may search the computing system for the file path indicated in the aggregated string. If the file path is successfully located on the computing system the document editor application may subsequently open the document. Otherwise the document editor application may present the aggregated string to the user in an alternate form.

Although the subject matter has been described in language specific to structural features and or methodological acts it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather the specific features and acts described above are disclosed as example forms of implementing the claims.

