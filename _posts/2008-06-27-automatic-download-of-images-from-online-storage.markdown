---

title: Automatic download of images from online storage
abstract: Various technologies for automatically downloading one or more high resolution image files from online storage. In one implementation, an e-mail client desktop application (stored at a sender's computer) may receive a request from the sender to send an e-mail with one or more high resolution image files added to the e-mail. Although the high resolution image files may be uploaded to a server, the files may be added as lower resolution image files with hidden Uniform Resource Locator (URL) addresses that may indicate the location on the server of the corresponding high resolution image files. Prior to sending the e-mail, the e-mail client desktop application may concatenate each high resolution image file's URL address with an extension or tag such as “?download” so that the address may later be easily identified.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07970839&OS=07970839&RS=07970839
owner: Microsoft Corporation
number: 07970839
owner_city: Redmond
owner_country: US
publication_date: 20080627
---
Electronic photographs have become an increasingly popular way to share photographs with others through electronic mail e mail . Attaching electronic photographs to an e mail often increases the size of the e mail and adds to the time it takes to download the e mail. Often the e mail recipient may wish to view the photographs but he does not have an interest in downloading the image to his local machine. In response to this issue some e mail client desktop applications convert the images attached to an e mail to a lower resolution version of the original. The lower resolution version of the image may be embedded into the body of the e mail instead of being attached the original file. The original high resolution images are typically uploaded to some online storage for recipients to download if he so desires.

Described herein are implementations of various technologies for automatically downloading one or more high resolution image files from online storage. In one implementation an e mail client desktop application stored at a sender s computer may receive a request from the sender to send an e mail with one or more image files added to the message body of the e mail. After receiving a selection to add the image files to the body of the e mail the e mail client desktop application may convert the selected image files to a lower resolution image file and embed the resulting images within the message body of the e mail. The e mail client desktop application may then upload the image file s corresponding high resolution image files to a server and it may list the Uniform Resource Locator URL addresses of each uploaded high resolution image file within the message body of the e mail. Prior to sending the e mail the e mail client desktop application may concatenate each high resolution image file s URL address with an extension or tag such as download so that the address may later be easily identified.

Upon receiving the e mail an e mail client desktop application stored at a receiver s computer may determine if the incoming e mail contains one or more images added to the message body of the e mail. If the incoming e mail contains one or more images added to the message body of the e mail a new link such as Save All Images may then be created within the e mail to allow the receiver to download all of the high resolution image files from the online storage. After the receiver selects the Save All Images link a HyperText Markup Language HTML event handler may open a Save As dialog box to allow the receiver to specify the location in which to store the downloaded high resolution image files. Upon receiving input as to the location in which to save the high resolution image files the HTML event handler may search the HTML body of the e mail for the extension or tag added earlier by the sending e mail client desktop application. Upon locating a tag the HTML event handler may store the corresponding URL address into a temporary memory allocated within the e mail client desktop application. After storing all of the URL addresses into the temporary memory location the HTML event handler may then call upon an image downloader thread to download each high resolution image file.

The image downloader thread may extract a URL address from the temporary memory allocated within the e mail client desktop application and use a URLMON component to download the high resolution image file to the local cache of the user s machine. The image downloader thread may then copy the high resolution image file from the local cache to the user specified location. The image downloader thread may repeat the downloading process for each URL address listed in the temporary memory allocated within the e mail client desktop application.

The above referenced summary section is provided to introduce a selection of concepts in a simplified form that are further described below in the detailed description section. The summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used to limit the scope of the claimed subject matter. Furthermore the claimed subject matter is not limited to implementations that solve any or all disadvantages noted in any part of this disclosure.

In general one or more implementations described herein are directed to sending and receiving an e mail with one or more image files added therein. The image files may include high resolution image files that may be uploaded to a server after the e mail is sent to its recipient. The sent e mail may contain low resolution versions of the high resolution image files such that the e mail may be sent with a smaller file size. Upon receipt the incoming e mail may display an option to download all of the uploaded high resolution image files at one time. One or more implementations of various techniques for sending and receiving an e mail with one or more image files will now be described in more detail with reference to in the following paragraphs.

Implementations of various technologies described herein may be operational with numerous general purpose or special purpose computing system environments or configurations. Examples of well known computing systems environments and or configurations that may be suitable for use with the various technologies described herein include but are not limited to personal computers server computers hand held or laptop devices multiprocessor systems microprocessor based systems set top boxes programmable consumer electronics network PCs minicomputers mainframe computers distributed computing environments that include any of the above systems or devices and the like.

The various technologies described herein may be implemented in the general context of computer executable instructions such as program modules being executed by a computer. Generally program modules include routines programs objects components data structures etc. that performs particular tasks or implement particular abstract data types. The various technologies described herein may also be implemented in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network e.g. by hardwired links wireless links or combinations thereof. In a distributed computing environment program modules may be located in both local and remote computer storage media including memory storage devices.

The computing system may include a central processing unit CPU a system memory and a system bus that couples various system components including the system memory to the CPU . Although only one CPU is illustrated in it should be understood that in some implementations the computing system may include more than one CPU. The system bus may be any of several types of bus structures including a memory bus or memory controller a peripheral bus and a local bus using any of a variety of bus architectures. By way of example and not limitation such architectures include Industry Standard Architecture ISA bus Micro Channel Architecture MCA bus Enhanced ISA EISA bus Video Electronics Standards Association VESA local bus and Peripheral Component Interconnect PCI bus also known as Mezzanine bus. The system memory may include a read only memory ROM and a random access memory RAM . A basic input output system BIOS containing the basic routines that help transfer information between elements within the computing system such as during start up may be stored in the ROM .

The computing system may further include a hard disk drive for reading from and writing to a hard disk a magnetic disk drive for reading from and writing to a removable magnetic disk and an optical disk drive for reading from and writing to a removable optical disk such as a CD ROM or other optical media. The hard disk drive the magnetic disk drive and the optical disk drive may be connected to the system bus by a hard disk drive interface a magnetic disk drive interface and an optical drive interface respectively. The drives and their associated computer readable media may provide nonvolatile storage of computer readable instructions data structures program modules and other data for the computing system .

Although the computing system is described herein as having a hard disk a removable magnetic disk and a removable optical disk it should be appreciated by those skilled in the art that the computing system may also include other types of computer readable media that may be accessed by a computer. For example such computer readable media may include computer storage media and communication media. Computer storage media may include volatile and non volatile and removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Computer storage media may further include RAM ROM erasable programmable read only memory EPROM electrically erasable programmable read only memory EEPROM flash memory or other solid state memory technology CD ROM digital versatile disks DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by the computing system . Communication media may embody computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and may include any information delivery media. The term modulated data signal may mean a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media may include wired media such as a wired network or direct wired connection and wireless media such as acoustic RF infrared and other wireless media. Combinations of any of the above may also be included within the scope of computer readable media.

A number of program modules may be stored on the hard disk magnetic disk optical disk ROM or RAM including an operating system one or more application programs an e mail client desktop application program data and a database system . The operating system may be any suitable operating system that may control the operation of a networked personal or server computer such as Windows XP Mac OS X Unix variants e.g. Linux and BSD and the like. The operating system may contain certain applications such as an HTML rendering engine and an HTML event handler that may be used to interpret and display HTML documents. The HTML event handler may contain an application such as an image downloader thread . The e mail client desktop application the HTML rendering engine the HTML event handler and the image downloader thread will be described in more detail with reference to in the paragraphs below.

A user may enter commands and information into the computing system through input devices such as a keyboard and pointing device . Other input devices may include a microphone joystick game pad satellite dish scanner or the like. These and other input devices may be connected to the CPU through a serial port interface coupled to system bus but may be connected by other interfaces such as a parallel port game port or a universal serial bus USB . A monitor or other type of display device may also be connected to system bus via an interface such as a video adapter . In addition to the monitor the computing system may further include other peripheral output devices such as speakers and printers.

Further the computing system may operate in a networked environment using logical connections to one or more remote computers such as an e mail server . The e mail server may be another personal computer a server a router a network PC a peer device or other common network node. Although the e mail server is illustrated as having only a memory storage device the e mail server may include many or all of the elements described above relative to the computing system . The logical connections may be any connection that is commonplace in offices enterprise wide computer networks intranets and the Internet such as local area network LAN and a wide area network WAN .

The e mail server may be used to route e mails from its source to its destination. Furthermore the memory storage device of the e mail server may be used to store e mail attachments such as image files documents zip files and the like.

When using a LAN networking environment the computing system may be connected to the local network through a network interface or adapter . When used in a WAN networking environment the computing system may include a modem wireless router or other means for establishing communication over a wide area network such as the Internet. The modem which may be internal or external may be connected to the system bus via the serial port interface . In a networked environment program modules depicted relative to the computing system or portions thereof may be stored in a remote memory storage device . It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used.

It should be understood that the various technologies described herein may be implemented in connection with hardware software or a combination of both. Thus various technologies or certain aspects or portions thereof may take the form of program code i.e. instructions embodied in tangible media such as floppy diskettes CD ROMs hard drives or any other machine readable storage medium wherein when the program code is loaded into and executed by a machine such as a computer the machine becomes an apparatus for practicing the various technologies. In the case of program code execution on programmable computers the computing device may include a processor a storage medium readable by the processor including volatile and non volatile memory and or storage elements at least one input device and at least one output device. One or more programs that may implement or utilize the various technologies described herein may use an application programming interface API reusable controls and the like. Such programs may be implemented in a high level procedural or object oriented programming language to communicate with a computer system. However the program s may be implemented in assembly or machine language if desired. In any case the language may be a compiled or interpreted language and combined with hardware implementations.

In one implementation the e mail client desktop application may receive a request from a user to add one or more images into the HTML body of an e mail outgoing e mail . Here the e mail client desktop application may provide the user an option to select the one or more images that he wishes to add into the HTML body of the outgoing e mail. Upon receiving the user s selection the e mail client desktop application may use the selected images e.g. images as an input for an outgoing e mail module . The images may include any type of image files such as Joint Photographic Experts Group JPEG Graphics Interchange Format GIF Tagged Image File Format TIFF or other type of image media file that may be stored on a memory device accessible to the computing system .

The outgoing e mail module may convert the images into corresponding lower resolution versions of the images so that they may be embedded into and displayed within the HTML body of the outgoing e mail. The outgoing e mail module may then upload the original high resolution version of the images to an online storage such as the memory storage of the e mail server . The outgoing e mail module may then insert a URL address within the HTML body of the outgoing e mail to indicate the URL location of each high resolution image file. In one implementation the inserted URL address may be hidden from the view of the user. The outgoing e mail module may also concatenate an extension or tag such as download to the URL addresses of each high resolution image file. The tag may be used to associate the URL address with the image file in the online storage. In one implementation the extension or tag may be added to the end of a URL address. However it should be noted that the extension or tag may also be added to the front of a URL address or both to the front and the end.

The outgoing e mail module may then produce a modified version of the outgoing e mail with the low resolution versions of images embedded in its HTML body and the tags concatenated to the URL addresses of the high resolution versions of images as its output. This modified version of the email may be referred to as a tagged e mail . The e mail client desktop application may then send the tagged e mail to the e mail server via the LAN or WAN connection as shown in .

Upon receiving an e mail the e mail client desktop application stored at a recipient s computer may use the e mail as an input into an image detector module . The image detector module may scan the e mail and determine if it contains any images added inside the HTML body of the e mail . If the e mail does not include any images added to the HTML body of the e mail the image detector module may use the e mail as an input to a display e mail module . The display e mail module may then use the HTML rendering engine to display the e mail .

Otherwise if the e mail does contain images added inside the HTML body of the e mail it may be used as an input into an add link module . The add link module may alter the HTML body of the e mail such that a new option may be created for the recipient to download all of the high resolution image files from its respective URL location at one time. This option may be created in the form of an HTML link that may indicate to the HTML rendering engine when to provide the HTML event handler a notification to start the image file download process as illustrated in . In one implementation the HTML link may display Save All Images but it should be noted that a variety of similar phrases may also be used instead.

The add link module may then produce the altered e mail or linked e mail as its output. The linked e mail may then be used as an input to the display e mail module . The display e mail module may then use the HTML rendering engine to display the linked e mail .

At step the HTML handler may receive a notification from the HTML rendering engine that the user has selected the Save All Images link created in the add link module of . In one implementation the Save All Images link may be selected by the user with the pointing device while using the e mail client desktop application .

At step the HTML event handler may open a Save As dialog box on the e mail client desktop application so that the user may specify the memory location as to where the high resolution image files are to be stored.

At step the HTML event handler may receive a request to save the high resolution image files to the specified memory location. The specified memory location may be a memory location on the user s local machine a USB external drive or any other similar memory device. In one implementation the user may select the Save button inside the dialog box after he has specified the memory location in which the files may be stored.

At step the HTML event handler may search the HTML body of the linked e mail for the extension or tag concatenated to the URL address of each high resolution image file. Upon locating a tag the HTML event handler may store the corresponding URL address to a temporary memory allocated within the e mail client desktop application . The HTML event handler may continue to locate tags and store URL addresses with concatenated tags into this memory location until all of the URL addresses have been stored.

At step the HTML event handler may call the image downloader thread to start downloading each high resolution image file from its respective URL address.

At step the image downloader thread may extract one URL address from the list of URL addresses of high resolution image files stored in the temporary memory allocated within the e mail client desktop application . In one implementation the image downloader thread may initially download the first URL address listed in the memory.

At step the image downloader thread may send a command to a URLMON component to download the high resolution image file that is located at the URL address extracted at step . URLMON is a Dynamic Link Library DLL component which is part of the web browsing capabilities of the operating system. URLMON may be loaded within the context of any process running in the operating system using URL based operations such as remote resource download.

At step upon receiving the command to download the high resolution image file the URLMON component may connect to the URL address and download the high resolution image file to the cache of user s local machine. The URLMON component may be part of the HTML rendering engine and may also be used to download other files such as documents zip files and the like.

In one implementation the image downloader thread may generate an alternative file name if the user specified memory location contains a file that has the same name as the downloaded file step . For example the URLMON component may download and store an image file named picture. If the user s specified memory location already contains a file named picture the image downloader thread may generate a new name for the downloaded file such as picture  in order to prevent files from being overwritten. If the user s specified memory location does not contain a file with the same file name the image downloader thread may not generate an alternative file name. Instead the image downloader thread may move to step .

At step the image downloader thread may copy the image file stored on the local machine s cache to the specified memory location as defined in step on .

The image downloader thread may repeat steps for each URL address listed in the temporary memory allocated within the e mail client desktop application until every high resolution image file is copied to the user s specified memory location.

Although the subject matter has been described in language specific to structural features and or methodological acts it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather the specific features and acts described above are disclosed as example forms of implementing the claims.

