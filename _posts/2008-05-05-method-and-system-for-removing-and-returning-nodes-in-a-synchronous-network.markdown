---

title: Method and system for removing and returning nodes in a synchronous network
abstract: A method and system for adding a node into a network operating in a cyclic state after one or more nodes have been previously removed without interrupting the synchronous traffic of the remaining nodes on the network is provided. The method includes discovering an added node by sending data to the added node in a downstream timeslot previously assigned to a removed node, the data having a delay value for scheduling a response from the added node to coincide with an upstream timeslot previously assigned to the removed node, thereby avoiding collisions with the synchronous traffic on the network; receiving the response from the added node; configuring the added node in accordance with an original configuration of the removed node; and commencing cyclic operation of the added node.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08072999&OS=08072999&RS=08072999
owner: Motion Engineering Inc.
number: 08072999
owner_city: Santa Barbara
owner_country: US
publication_date: 20080505
---
This application claims the benefit of U.S. Provisional Application Ser. No. 60 916 694 filed on May 8 2007 which is hereby incorporated by reference in its entirety.

This invention relates to networked systems and specifically to an improved system method and computer readable instructions for removing and returning nodes to a synchronous network.

In high performance automated machinery or plant there is a need for synchronous acquisition of measurements from networked sensors and for synchronous application of set point values to networked actuators as this allows coordinated control and measurement. The synchronous measurement and synchronous application also permits loop closure via the network. The synchronous transfer of data to and from a central controller and the necessity of establishing and maintaining synchronized clocks at each of the network slaves make special requirements on the network used in such a system and although it is to some extent possible to use general purpose networks in such systems See ANSI IEEE Std 802.3 CSMA CD Access Method and Physical Layer Specifications and BS EN 50325 4 2002 Industrial communication subsystem based on ISO 11898 CAN for controller device interfaces. CANopen it is advantageous for both cost and performance reasons to use special purpose real time cyclic networks that have been devised specifically for this purpose.

The defining characteristic of a real time cyclic network hereafter abbreviated to cyclic network is that when the network is in its operational state both downstream from the controller and upstream to the controller packets are scheduled according to a repeating timetable. The simplest scheme would be to send one downstream packet to each slave node per cycle or alternatively one composite packet to all slaves and to receive one upstream packet from each slave node per cycle. There are many variations on this communication scheme it is commonplace for the controller to emit a packet specifically for network timing purposes that is broadcast to all of the nodes similarly it is possible to exchange more than one packet between the controller and each node on a cyclic basis. The period of the communication cycle is determined by software and hardware on the controller during network configuration and remains fixed during the operational phase of network operation. In general shorter cycle times provide better control and therefore in a high performance system there may be little or no idle network time.

In order to keep the terminology simple and consistent herein the node that is responsible for configuring controlling and supervising the network i.e. the network master will be referred to as the controller because in most practical systems this is the element that is also responsible for overall system control. Again for the sake of brevity the remaining nodes on the network will be referred to simply as nodes rather than slave nodes. The network is intended to carry out control or measurement or both on a machine instrument or plant to avoid repetition control will embrace measurement and system will be the network and that which is connected to it. Finally communication with the network will be described as being carried in packets in preference to the many alternative terms.

Cyclic networks provide cost effective high performance control in many machines today. However in such networks the system must remain unchanged after the network has been initialized and brought into its cyclic operational state. In general it is not possible to add new nodes to an operational network as would be advantageous in a machine that has modular structure where the modules can be brought into commission serially. Similarly it is not possible to remove a node and replace it while the network remains in its operational phase. In both cases the machine would have to cease operation the new nodes would then be added or replaced and the network would then have to be brought back into operation.

Therefore there is a need in the art for a method and system that extends the capability of many cyclic networks so that it is possible to add nodes to an operational cyclic network or to replace nodes within an operational cyclic network. This capability is often referred to in the literature as dynamic removal and attachment or hot plugging . The term hot replace may be used to cover the more restrictive case where nodes can be removed and subsequently re attached or replaced but only up to the composition of the original set of nodes on the network.

There are a number of problems and limitations of the prior art due to two main pre requisites to the implementation of hot plugging on a cyclic network. The first would be to ensure that a physical communication link remains with all nodes while a node or group of nodes is being removed. The second would be to ensure that when a node or group of nodes is added to the network the packets sent from the node s to the controller do not disrupt existing network traffic.

Ethercat See IEC PAS 62407 First edition 2005 06 Real time Ethernet control automation technology EtherCAT and U.S. Patent Pending Publication US2006 0212604A1 Coupler for a ring topology network and an Ethernet based network is a network that claims to support a form of hot plugging although the details of which have not been fully disclosed. Ethercat uses a logical ring topology which is implemented as a physical line. Communication over this network is by means of a controller initiated packet which is modified on the fly by receiving nodes before being returned in this modified form to the controller. It is reasonable to infer on the basis of the available information that a node can discern when a neighboring node has been removed and can therefore automatically loop back and likewise that said node can discern when a neighboring node has been attached and can therefore automatically change from loop back to pass through. Thus a node could be added to or removed from the end of a line of nodes with no or at least only temporary disruption to the circulating packet. As all packets are controller initiated and modified by the nodes on the fly there are no considerations of the timing of the reply packets since there are no such packets. Ethercat therefore offers a potential means of realizing the two main pre requisites to the implementation of hot plugging however the solution is restricted both topologically i.e. it only works where nodes are added or removed from the end of a line of nodes and to a particular system of signaling i.e. controller initiated packets that are modified on the fly . Therefore there still remains a need in the art for a system and method that escapes both of these limitations and is of more general applicability.

All other known examples of networks in the prior art have traffic organized so that each communication cycle comprises one or more packets sent by the controller to the nodes and with one or more packets sent from each node to the controller.

In a cyclic network realized as a ring with unidirectional links such as the typical embodiment of IEC61491 IEC61491 2002 Adjustable Speed Electric Drive Systems Incorporating Semiconductor Power Converters SERCOS if a node or a group of nodes or any link is removed then communication fails either because packets emitted by the controller can not reach any of the nodes or because packets from some or all of the nodes can not reach the controller. In such a network the reduced set of nodes can only be communicated with by re wiring the remaining nodes into a ring and re initializing the network.

In a cyclic network realized as a half duplex or full duplex bus e.g. an alternative embodiment of IEC61491 using RS 485 SERCON410B Datasheet 1994 SGS THOMSON if a node or group of nodes is disconnected it remains possible to communicate with the remaining nodes. However the problem remains of ensuring that when nodes are added to the network the packets that they send to the controller do not collide with existing network traffic.

In a cyclic network realized using hubs e.g. Powerlink if a node or group of nodes is disconnected it remains possible to communicate with the remaining nodes. Again the problem remains of ensuring that when nodes are added to the network the packets that they send to the controller do not collide with existing network traffic.

SynqNet See U.S. Pat. No. 7 024 257 U.S. Pat. No. 7 143 301 and also SERCOS III are full duplex cyclic networks that can be wired either as a line or as a ring. When a node or group of nodes is removed from the ring the controller maintains full communication with the remaining nodes this is termed self healing . In both cases the problem remains of ensuring that when nodes are added to the network the packets that they send to the controller do not collide with existing network traffic.

Several networks support a mixture of cyclic and acyclic communication typically each communication cyclic is divided into one or more time slots reserved for scheduled cyclic packets and one or more time slots reserved for acyclic traffic types hereinafter referred to herein as asynchronous time slots . Example networks include SERCOS III USB Universal Serial Bus Specification Revision 2.0 and Powerlink IEC PAS 62408 First edition 2005 06 Real time Ethernet Powerlink EPL . In such networks it is possible to ensure that a node which has been added to the network at first communicates only during an asynchronous time slot and thus does not disrupt exiting cyclic traffic one method is for the node to reply to polled packets from the controller and another method is for the node to signal its presence by an event packet confined to an asynchronous time slot. There are restrictions imposed by such schemes however. The first restriction is the necessity to reserve an asynchronous time slot at the expense of cyclic traffic. The second restriction is that the node must have some knowledge about where the time slot is in time typically this implies respecting a static timing restriction on when the node can send its reply or event packet with respect to a cyclic timing reference such as a timing packet which may be operationally inconvenient. Accordingly there is a need in the art to dispense with both of these restrictions. There is a need to avoid altogether the complication of having mixed traffic types and yet still ensures that when nodes are added to the network the packets that they send to the controller do not disrupt existing network.

Accordingly it is an object of this invention to provide a system method and computer readable instructions for removing and returning nodes to a synchronous network. The invention provides a method and system for adding a node into a network operating in a cyclic state after one or more nodes have been previously removed without interrupting the synchronous traffic of the remaining nodes on the network. The method and system include discovering an added node by sending data to the added node in a downstream timeslot previously assigned to a removed node the data having a delay value for scheduling a response from the added node to coincide with an upstream timeslot previously assigned to the removed node thereby avoiding collisions with the synchronous traffic on the network. After receiving the response from the added node the added node is configured in accordance with an original configuration of the removed node and the cyclic operation of the added node can then be commenced.

The invention can be implemented in numerous ways including as a system a device a method or a computer readable medium. Several embodiments of the invention are discussed below.

In an embodiment the invention comprises a method for adding a node into a network operating in a cyclic state without interrupting the synchronous traffic of on the network comprising a discovering an added node by sending data to the added node in a downstream timeslot previously assigned for sending data to the added node said data comprising a delay value for scheduling a response from the added node to coincide with an upstream timeslot known to be unused thereby avoiding collisions with the synchronous traffic on the network b receiving the response from the added node c configuring the added node in accordance with a previously calculated configuration such as an original configuration of a removed node or nodes or a configuration previously determined for a slot location in which a node or nodes will be added and d commencing cyclic operation of the added node. In this example up to N added nodes can be discovered sequentially to fill all of the cyclic timeslots reserved for those nodes in the original network plan. Generally the N added nodes are discovered sequentially until a final link is discovered when a response is not received. Moreover the remaining nodes on the network are configured for synchronized transfer of data according to a repeating timetable and the added node is configured according to an original schedule of the removed node or of the reserved slot location in which a node or nodes will be added in that timetable. In an embodiment the added node comprises the substantially the same node type node sequence and cable length of a node that has previously been removed from the network.

When discovering the added node the method comprises sending data to an address designed to elicit a response only from a node in an undiscovered state. A further embodiment comprises wherein N nodes are first removed from the network and subsequently up to N are re attached to the network. Further the re attachment of the nodes may be accomplished in several stages.

In an embodiment the delay value for scheduling the response from the added node is used by an asynchronous delay timer in the network node logic of the added node such that the added node will send its response back within the respective timeslot of the originally calculated cyclic schedule for the previously removed node. The delay value may be calculated based information associated with network schedule node type internal node delay and cable length of the one or more nodes that have been previously removed.

In a further embodiment the invention includes sending a set of commands to shutdown one or more nodes prior to removal of said one or more nodes to address safety factors and network errors. It also includes self healing of the network after removal of the one or more nodes. Further embodiments include routing traffic on the network across formerly idle cables as part of said self healing.

In an embodiment discovering the added node begins from port A of the controller. Alternately discovering the added node begins from port B of the controller. Moreover configuring the added node may be in accordance with the configuration for that node contained in the original network plan. Discovering an added node continues for all added nodes up to the complement of the original plan of the network. Configuring the added node in accordance with the original configuration of the removed node comprises assigning the added node the network address of the previously removed node.

The network may operate as a half duplex cyclic network or a full duplex cyclic network. Alternately the network may comprise a topology that allows for the network traffic to continue without disruption when a node or group of nodes are removed. Moreover the network may comprise one or more of a ring topology a bus topology a line topology a tree topology or a hybrid topology. The network traffic signaling may be based on one or more of RS485 RS422 LVDS 10 base T 100 base T 1000 base T 100 base F or wireless.

The invention may also a computer readable medium storing instructions for execution on a computer system which when executed by a computer system causes the computer system to perform the methods described herein. The invention may also comprise a system with components that utilize computer instructions that cause the system to perform the methods described herein.

A further embodiment includes a motion control system comprising a network and a central controller and plurality of slaves communicating with each other via said network wherein each of the plurality of slaves on the network comprise a delay timer for scheduling a response according to a delay value and wherein the central controller comprises capability for discovering an added node by sending data to the added node in a downstream timeslot previously assigned for that purpose said data comprising the delay value for scheduling a response from the added node to coincide with an upstream timeslot previously assigned for that purpose thereby avoiding collisions with the synchronous traffic on the network for receiving the response from the added node for configuring the added node in accordance with previously calculated configuration and for commencing cyclic operation of the added node. The downstream timeslot previously assigned and the upstream timeslot previously assigned may correspond to the timeslots of a removed node.

A still further embodiment comprises a network allowing for the addition of a node into a network operating in a cyclic state without interrupting the synchronous traffic of the exiting nodes on the network comprising a plurality of nodes on the network each comprising a delay timer for scheduling a response according to a delay value a controller on the network for discovering an added node by sending data to the added node in a downstream timeslot previously assigned to an unused node location said data comprising the delay value for scheduling a response from the added node to coincide with an upstream timeslot previously assigned to the unused node location thereby avoiding collisions with the synchronous traffic on the network for receiving the response from the added node for configuring the added node in accordance with a previously calculated configuration and for commencing cyclic operation of the added node. The unused node location may correspond with a removed node.

An even further embodiment comprises a system for adding a node into a network operating in a cyclic state without interrupting the synchronous traffic of on the network comprising means for discovering an added node by sending data to the added node in a downstream timeslot previously assigned for sending data to the added node said data comprising a delay value for scheduling a response from the added node to coincide with an upstream timeslot known to be unused thereby avoiding collisions with the synchronous traffic on the network means for receiving the response from the added node means for configuring the added node in accordance with an original configuration of the removed node and means for commencing cyclic operation of the added node.

The methods of the present invention may be implemented as a computer program product with a computer readable medium having code thereon.

An advantage of the present invention is that it adds live attachment to cyclic networks without changing their essential character and therefore without undue complexity. It also adds live attachment to cyclic networks without sacrifice to their performance. Moreover it is applicable to almost any cyclic network where the physical characteristics of the network allow a node or group of nodes to be removed while still permitting communication to the remaining nodes.

Further objects and advantages of our invention will become apparent from a consideration of the drawings and the technical description.

All patents patent applications provisional applications and publications referred to or cited herein or from which a claim for benefit of priority has been made are incorporated herein by reference in their entirety to the extent they are not inconsistent with the explicit teachings of this specification.

It should be understood that in certain situations for reasons of computational efficiency or ease of maintenance the ordering of the blocks of the illustrated flow charts could be rearranged or moved inside or outside of the illustrated loops by one skilled in the art. While the present invention will be described with reference to the details of the embodiments of the invention shown in the drawing these details are not intended to limit the scope of the invention.

Referring now to the drawings wherein like reference numeral designate identical or corresponding parts throughout the several views and more particularly to thereof an example network upon which the invention can be utilized is shown. The topology is a full duplex ring. In one embodiment the invention can be embodied as a set of improvements to the cyclic full duplex self healing network taught by Pearce and Cline U.S. Pat. Nos. 7 143 301 and 7 024 257 incorporated herein by reference.

The network of comprises a controller and seven links e.g. bi directional full duplex capable of carrying traffic in both directions simultaneously and six nodes . shows the network still operational after three nodes have been removed. shows the network still operational after three nodes have been re attached and hot replace has been completed.

The example operation of the first embodiment will now be illustrated. Turning back to a representative network of six nodes and a controller is shown. The topology is a full duplex ring and is implemented using SynqNet. Normal packet traffic is in both directions across the full duplex links between nodes and the controller . The network topology is a ring and under normal operation the redundant link which closes the ring does not carry return packets from nodes and is thus said to be idle N.B. during cyclic operation the controller sends the same set of packets from ports A and B therefore the redundant link is idle only in one direction .

An important practical aspect of the network is that the controller can transmit packets from one or both of its A and B ports simultaneously or it can cease to transmit from either of these ports. This feature allows the controller to carry out discovery of the nodes from either the B or the A port and to operate a ring network with a missing node or link.

A further important practical aspect of the network is that the network node logic can be configured so that the repeaters and can be selectively disabled furthermore the transmit circuit can be configured to selectively use either the A or the B port or both ports and as result the A port or the B port can be independently configured to be silent i.e. either actually quiescent electrically or at least carrying no data for example carrying idle symbols only . By way of illustration in the A port of node is silent and the link is idle. As indicated in the receive circuit can accept packets from either the A or B ports.

To reach the operational state of the network shown in and the processor in the controller first has to configure the network. Configuration embraces discovery finding the order and type of nodes enumeration assigning each node a network address configuration of the control registers within the node network logic and configuration of the operational settings of the sensor actuator circuit within each node. In particular the controller has to determine the set of downstream packets that should be sent and their timing schedule. Similarly the controller has to determine the set of upstream packets that the controller should receive and their timing schedule. When the controller has determined this information the controller must configure the network node logic in each node in particular timer value registers and the network logic in the controller itself so that the network is prepared to transition to cyclic communication for both upstream and downstream traffic according to the desired schedule.

SynqNet has destination node addressing the address range 0.251 selects the destination node which must have first been assigned an address during discovery packets with address are received by all nodes i.e. broadcast and address is received by an undiscovered node only.

The configuration process is summarized in the process starts under program control at the controller the controller first determines the topology of the network by broadcasting a special packet from port A of the controller which will return to the B port of the controller if the network is a ring otherwise it will return to port A of the controller.

The controller then puts all nodes into the undiscovered state by repeatedly broadcasting RESET REQUEST packets from ports A and B of the controller and waiting for a response from the far end of the network at this time the controller ceases to send RESET REQUEST packets and all nodes enter their undiscovered state. This action is equivalent to power cycling the network since a node emerges from power up in the undiscovered state. When a node is in the undiscovered state neither repeater and is active and the node has no assigned address it will however respond to the special undiscovered node address namely . The next step is to discover the nodes accessible to port A of the controller this procedure will be described in further detail below . If the network is not a ring it then a further step is required to discover nodes accessible to port B. When all nodes have been discovered and in the process also enumerated and otherwise configured the network is transitioned to cyclic network traffic by setting a flag in the SYNQ packet which is broadcast to all nodes SQ in .

Cyclic operation is the normal operational state of the network. The controller emits cyclic downstream packets to each node as well as a global timing packet SYNQ packet designated SQ in . The nodes synchronize their local clock to the timing packet from the controller using the period and delay parameters that have been set up during configuration. After a small delay to allow all node clocks to stabilize the nodes begin to send back their cyclic packets . Each node sends back a STATUS packet in a previously assigned time slot Sx in and a feedback packet in another previously assigned time slot Fx in . The network traffic is now cyclic as depicted in . The network will exit the cyclic state when network error counters at the nodes or the controller exceed their pre determined thresholds.

The discovery process will now be described in detail. The network traffic is asynchronous during the discovery process as depicted in . A CONTROL packet is sent to the node undergoing discovery by setting the destination address in the CONTROL packet header to a special address to which only an undiscovered node will respond. The node responds with a STATUS packet . The configuration process is carried out by the controller communicating with each node one at a time and with no constraints on when the downstream CONTROL packets are sent or the delay time before the upstream STATUS packet is returned in practice this delay is very short because the processing time through the network node logic takes just a few micro seconds . As only one node is being configured there is no risk of the packets from a node colliding with the packets from another node. Every CONTROL packet sent by the controller is responded to by a STATUS packet from the node the CONTROL packet has internal flag address and data fields which determine whether data is to written to the node or read from the node.

Referring to the controller discovers and configures each node in sequence from its A port. is a simplified flow diagram of the discovery process. When discovering from the controller s A port the controller s count of discovered nodes is set to zero . The controller then sends a CONTROL packet to address the first undiscovered node responds with a STATUS packet that identifies the node. At this point it is possible to estimate the cable length to the B port of the node by measuring round trip message times See U.S. Pat. No. 7 024 257 U.S. Pat. No. 7 143 301 or from measurements made by the PHY devices. Several CONTROL packet and STATUS packets are then exchanged until the controller determines that the configuration of the node is complete. At this point the controller reserves the next available node address for the node undergoing discovery this address is sent in a CONTROL packet to the node which acknowledges with a STATUS packet and thereby exits the discovery state. The controller then increments its tally of discovered nodes and proceeds to the discovery of the next node . The controller detects the final link when it attempts to discover a node connected to the A port of the last node in the network this will fail at step as no node will reply to the CONTROL packet. The controller then arranges for repeaters of last node to be inactive by sending a CONTROL packet for that purpose. At the end of the discovery process the final link will be idle during cyclic communication.

If the network had instead been a dual string i.e. two distinct line topology networks such as that shown in the controller would have continued the discovery process from its B port to reach nodes not accessible from the A port.

A ring connected SynqNet network such as can remain cyclic even when a cable is removed or when a contiguous group of nodes is disconnected. The key mechanism is that each node is able to detect when its upstream neighbor is no longer forwarding packets to it the node then turns off its repeaters and sends a packet to its erstwhile downstream neighbors which causes them to exchange the function of the their A and B ports in effect they become upstream neighbors . Additional mechanisms See U.S. Pat. No. 7 024 257 U.S. Pat. No. 7 143 301 ensure that the local clocks are adjusted for the different routing of the packets.

Hot replace is here defined as the ability to disconnect power down optionally substitute and then re attach one or more nodes and then re start those nodes all without interrupting normal cyclic operation of the other nodes in the system.

Hot replace of three contiguous nodes from the specimen six node cyclic network of will now be described.

The system is initially as depicted in and network traffic is as shown in cyclic traffic after discovery is completed . A flow diagram illustrates the sequence of actions that constitute hot replace. The operator normally begins the hot replace process with a software command to shutdown the nodes to be replaced or serviced while the system is in normal cyclic operation this controlled partial shutdown ensures that the machine is brought to a safe condition and a second controller software procedure ensures the false triggering of error supervisors associated with the nodes that are about to be removed is obviated. The other possible means of beginning the hot replace process is an accidental shutdown of nodes due to power or cable problems. Selected nodes are then removed shows the example system after partial shutdown. Nodes and elements and as shown in have been disconnected from the system. Communication to the remaining nodes continues without interruption . Packets from node are now routed over the formerly idle cable between node and the controller . This fault recovery action self healing is a standard feature of SynqNet. shows the resulting packet schedule the packets sent by nodes and are now missing from the upstream packet set . The controller continues to transmit downstream packets for nodes and even though the respective nodes are missing.

The nodes can then be replaced or serviced before being re attached . As shown in the nodes and elements and are re attached to the system with node types node sequence and cable lengths identical to the original system. The operator then uses a software command to activate the re start phase re discovery of the hot replace procedure. Next the controller re discovers from its A port any re connected nodes configures them to the original schedule each node then resumes normal cyclic operation as the flag in the SYNQ packet SQ in which controls when the network is cyclic is already set.

The re discovery process is essentially the same as discovery process of except that the initial node count is equal to the number of operational nodes rather than being set to zero in step . Next the controller re discovers from its A port again the procedure is similar to that of this is an optional step as step may already have discovered nodes up to the original complement of the network.

Prior to this invention the re discovery process was not possible because nodes and would attempt to return STATUS packets asynchronously and thus there was no means of ensuring that the STATUS packets transmitted by nodes and during discovery would not collide with the scheduled cyclic packets of the remaining cyclic nodes and .

Two fundamental innovations allow cyclic and asynchronous communication to co exist during the re start phase of the hot replace procedure.

The first innovation is to re use packet bandwidth already allocated in the cyclic schedule for the re discovery process as shown in . The controller uses the original timeslot for the CONTROL packet C in for node to send data downstream to node . Node will use the previously allocated timeslot to return the STATUS packet S in upstream to the controller.

The second innovation is to add a new timer called the Asynchronous Delay Timer to the network node logic of each node as shown in . When the node is using asynchronous communication the reception of a valid CONTROL packet will cause the Asynchronous Delay Timer to re load and count down. When the timer expires block sends a STATUS packet back to the controller. During the first discovery of the network following power up or a total system reset the Asynchronous Delay value is 0 and the Asynchronous Delay Timer has no effect. During the re start phase of the hot replace procedure the controller begins the re discovery of a node by writing a value to the Asynchronous Delay Timer such that the node will send its respective STATUS packet back to the controller within the respective timeslot of the originally calculated cyclic schedule thereby avoiding any packet collisions. Thus a node that is undergoing re discovery and is therefore still communicating asynchronously can co exist within the cyclic packet schedule.

It is important to appreciate some further practical details that pertain to the re discovery process. When a node is undergoing re discovery as during discovery it returns only its STATUS packet Sx in and specifically it does not send its FEEDBACK packet Fx in and therefore there is no risk of a collision of FEEDBACK packets. During re discovery it is essential that the each node s Asynchronous Delay Timer value be loaded correctly this is assured because firstly the CONTROL packet that sets the delay timer value will be rejected by the node if it has been corrupted and secondly because the controller will continue to attempt to configure this timer until it receives a STATUS packet from said node.

The controller must calculate the nominal Asynchronous Delay value for each re discovered node based on the known original schedule known node types known node internal delays and known cable lengths. The reason for taking cable lengths into account is that the original schedule for the return packets is arranged to be efficient and is padded with only the minimum idle time between packets if a node is reconnected with longer cables or a requirement for longer upstream packets then the original schedule can not be respected.

SynqNet nodes are assigned node addresses during configuration and a node that has been re connected will not initially have an assigned node address to overcome this difficulty there is a special address that any undiscovered node will receive and this address must be used during node configuration until the node has been assigned its own address.

As described above the first CONTROL packet sent to node in when undergoing re discovery must set the Asynchronous Delay timer value in node . After that the various node configuration values are then read and written via the respective CONTROL and STATUS packets. When this process has been completed node will then be transitioned to cyclic communication but nodes and will remain to be re discovered thereby resulting in the network set up of .

With reference to the re start process then proceeds to the re discovery of node from node using the connecting link . The re discovery process for node is exactly the same as for node . When node has been re discovered and transitioned to cyclic communication the network will be as shown in .

With reference to the re start process then proceeds to the re discovery of node from node using the connecting link . The re discovery process is exactly the same as for nodes and but with one important exception the controller s database of the network set up prior of informs the controller that node is the last yet to be re discovered node from the original network of . Therefore during the re discovery of node the controller will ensure that link remains idle and leaves it in this condition when it transitions node to cyclic communication. When node has been re discovered and transitioned to cyclic communication the network will be as shown in the packets are transmitted according to the normal cyclic schedule shown in . At this point full sensor actuator operation of the all of the nodes may be resumed.

Now turning to an alternate embodiment of a simpler network the principles of this invention are equally applicable to simpler networks. shows a half duplex cyclic network with one controller and three nodes interconnected on a bus such as twisted pair cabling . Each node contains or is in communication with a respective device for supplying a network address for each node Static node address circuit .

The main embodiment describes a full duplex ring. Full duplex operation yields the best performance in respect of network throughput and allows auto enumeration assignment of node addresses according to their position . The ring architecture is the most cost effective and supports self healing communication with all remaining nodes in the event that a node or group of contiguous nodes is removed . However the principles of hot replace are applicable to topologies that use hubs external or built in to the nodes or even use simple bus architectures. Likewise hot replace can be applied to a half duplex network.

Consider the network of a controller communicates with three nodes and . Communication takes place via a single twisted pair cable using a half duplex scheme and a physical layer such as RS485 or LVDS. Packets conform to the repeating timetable of note that the upstream and downstream packets do not overlap. This is a far simpler network than that of the main embodiment but all of the principles of hot replace still apply. In this network or any bussed network when nodes are re attached for example if and were removed and then re attached there is no means of steering a packet to a particular node in the network and thus discovering the nodes in topological order therefore it is necessary to set the address of each node using a static method elements such as an EEPROM or hexadecimal switches or an RFID tag or a coded connector. As in the main embodiment the controller configures a node both initially and following re attachment by sending CONTROL packets and the node responds by sending STATUS packets as in . As in the main embodiment the STATUS packets respect the original cyclic schedule by means of Asynchronous Delay Timer . The implementation of is the same as that of as depicted in of the main embodiment. As in the main embodiment the Asynchronous Delay Timer is configured by a CONTROL packet. When the re start procedure has been completed the re attached nodes observe the cyclic timing schedule by means of the logic circuitry of .

This bus topology employed in permits certain simplifications in comparison with the ring topology of the main embodiment each node has only a single port hence is simpler than and since packets can only arrive or be sent from a single port. The re start procedure is similar to that of the main embodiment but is slightly simplified as the controller does not assign the node addresses.

Hot replace as implemented by in the present invention is applicable to many cyclic network types. The preferred network types are those in which a the network traffic is not disrupted or is disrupted too briefly to affect the correct operation of the system when a node is a node is removed or attached and b that a mechanism exists for assigning an address to a node this can be a dynamic discovery method or it can be a static method such as non volatile memory or a bank of switches or an RFID tag . For these network types extending the network s capabilities to support hot replace of the present invention comprises the following elements a the addition of an Asynchronous Delay Timer circuit b implementation of a mechanism to configure the Asynchronous Delay Timer and c implementation of the hot replace procedure at the controller.

Hot replace of the present invention is not restricted to a particular topology as long as the network traffic is not disrupted when a node or group of nodes is removed or attached thus in addition to the self healing full duplex ring of the main embodiment it is alternatively possible to use bus line nodes and in and tiered topologies such as tree ring of rings or tree of rings and so forth. Tiered topologies require those nodes forming an intermediate tier to have more than two ports e.g. in or and in and therefore add cost but offer significant advantages in a system that is commissioned sequentially by branch or sub ring.

Hot replace of the present invention is not restricted to a particular network medium. The main embodiment uses the 100 base T physical layer but other layers including RS485 RS422 LVDS 10 base T 1000 base T 100 base F can be used. A wireless implementation would also be possible. The only requirement is for packets to observe a strictly cyclic schedule.

Hot replace of the present invention is not restricted to a particular schedule of cyclic packets. The downstream CONTROL and DEMAND packets could be combined. All of the downstream packets for all of the nodes could be combined into a single packet whose contents are selectively used by the nodes. There is also no requirement for a distinct timing packet as any scheduled downstream packet can be used for timing. Similarly the STATUS and FEEDBACK packets for each node could be combined. The minimum requirements are that each cycle there must be one downstream packet either per node or for all nodes and one upstream packet per node.

Hot replace of the present invention is not restricted to the replacement of the full set of nodes that have been removed any contiguous sub set from the original network that has connectivity to the controller can be used consider where it would have alternatively been possible replace node only or node only or nodes and node . In a bus network there are no restrictions on the set of nodes that can be selectively re attached in any set that is removed can be partially re attached without restriction.

Hot replace of the present invention can be carried out in stages. For example in the system could be operated with just node hot replaced and then after an interval of time node could be hot replaced while the system remains operational i.e. cyclic communications with nodes carrying out their sensor and actuator duties .

Hot replace of the present invention can be extended to allow the phased attachment of nodes in addition to those present on the original network. This requires the controller to reserve slots in the repeating timetable for packets sent to and from nodes to be sited on phantom i.e. not present but allowed for network segment s for example the controller could be configured to communicate with the network of but without some or even any of the nodes actually being connected. The phantom network segment s would be represented to the controller as a data file describing the network plan i.e. the data file gives the controller the same information that it would have obtaining during network discovery if the nodes and cabling had been present. A second alternate method is to allocate N sets of maximum sized packets for use as new nodes are discovered. Note however that the network cannot be extended beyond the original plan without carrying out a full system reset and re enumeration. Essentially the description herein that describes removed nodes can also be applicable to phantom node s segments s .

In conclusion hot replace capability of the present invention can be implemented on almost any cyclic network so that a networked system for control can partly de commissioned partly re commissioned or extended while operational.

Obviously numerous modifications and variations of the present invention are possible in light of the above teachings. It is therefore to be understood that within the scope of the appended claims the invention may be practiced otherwise as specifically described herein.

