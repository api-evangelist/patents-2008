---

title: Enhancing audio with remixing capability
abstract: One or more attributes (e.g., pan, gain, etc.) associated with one or more objects (e.g., an instrument) of a stereo or multi-channel audio signal can be modified to provide remix capability. An audio decoding apparatus obtains an audio signal having a set of objects and side information. The apparatus obtains a set of mix parameters from a user input and an attenuation factor from the set of mix parameters. The apparatus then generates a plural-channel audio signal using at least one of the side information, the attenuation factor or the set of mix parameters.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08295494&OS=08295494&RS=08295494
owner: LG Electronics Inc.
number: 08295494
owner_city: Seoul
owner_country: KR
publication_date: 20080812
---
This application claims the benefit of priority from U.S. Provisional Patent Application No. 60 955 394 for Enhancing Stereo Audio Remix Capability filed Aug. 13 2007 which application is incorporated by reference herein in its entirety.

Many consumer audio devices e.g. stereos media players mobile phones game consoles etc. allow users to modify stereo audio signals using controls for equalization e.g. bass treble volume acoustic room effects etc. These modifications however are applied to the entire audio signal and not to the individual audio objects e.g. instruments that make up the audio signal. For example a user cannot individually modify the stereo panning or gain of guitars drums or vocals in a song without effecting the entire song.

Techniques have been proposed that provide mixing flexibility at a decoder. These techniques rely on a Binaural Cue Coding BCC parametric or spatial audio decoder for generating a mixed decoder output signal. None of these techniques however directly encode stereo mixes e.g. professionally mixed music to allow backwards compatibility without compromising sound quality.

Spatial audio coding techniques have been proposed for representing stereo or multi channel audio channels using inter channel cues e.g. level difference time difference phase difference coherence . The inter channel cues are transmitted as side information to a decoder for use in generating a multi channel output signal. These conventional spatial audio coding techniques however have several deficiencies. For example at least some of these techniques require a separate signal for each audio object to be transmitted to the decoder even if the audio object will not be modified at the decoder. Such a requirement results in unnecessary processing at the encoder and decoder. Another deficiency is the limiting of encoder input to either a stereo or multi channel audio signal or an audio source signal resulting in reduced flexibility for remixing at the decoder. Finally at least some of these conventional techniques require complex de correlation processing at the decoder making such techniques unsuitable for some applications or devices.

One or more attributes e.g. pan gain etc. associated with one or more objects e.g. an instrument of a stereo or multi channel audio signal can be modified to provide remix capability.

In some implementations a stereo a cappella signal is derived from a stereo audio signal by attenuating non vocal sources. A statistical filter can be computed by using expectations resulting from an a capella stereo signal model. The statistical filter can be used in combination with an attenuation factor to attenuate the non vocal sources.

In some implementations an automatic gain panning adjustment can be applied to a stereo audio signal which prevents the user from making extreme settings of gain and panning controls. A mean distance between gain sliders can be used with an adjustment factor as a function of the mean distance to limit the range of the gain sliders.

Other implementations are disclosed for enhancing audio with remixing capability including implementations directed to systems methods apparatuses computer readable mediums and user interfaces.

The two channels of a time discrete stereo audio signal are denoted tilde over x n and tilde over x n where n is a time index. It is assumed that the stereo signal can be represented as

In some implementations the encoding system provides or generates information hereinafter also referred to as side information for modifying an original stereo audio signal hereinafter also referred to as stereo signal such that M source signals are remixed into the stereo signal with different gain factors. The desired modified stereo signal can be represented as

A goal of the encoding system is to provide or generate information for remixing a stereo signal given only the original stereo signal and a small amount of side information e.g. small compared to the information contained in the stereo signal waveform . The side information provided or generated by the encoding system can be used in a decoder to perceptually mimic the desired modified stereo signal of 2 given the original stereo signal of 1 . With the encoding system the side information generator generates side information for remixing the original stereo signal and a decoder system generates the desired remixed stereo audio signal using the side information and the original stereo signal.

Referring again to the original stereo signal and M source signals are provided as input into the filterbank array . The original stereo signal is also output directly from the encoder . In some implementations the stereo signal output directly from the encoder can be delayed to synchronize with the side information bitstream. In other implementations the stereo signal output can be synchronized with the side information at the decoder. In some implementations the encoding system adapts to signal statistics as a function of time and frequency. Thus for analysis and synthesis the stereo signal and M source signals are processed in a time frequency representation as described in reference to .

In some implementations an input stereo signal and M input source signals are decomposed by the filterbank array into a number of subbands . The subbands at each center frequency can be processed similarly. A subband pair of the stereo audio input signals at a specific frequency is denoted x k and x k where k is the down sampled time index of the subband signals. Similarly the corresponding subband signals of the M input source signals are denoted s k s k . . . S k . Note that for simplicity of notation indexes for the subbands have been omitted in this example. With respect to downsampling subband signals with a lower sampling rate may be used for efficiency. Usually filterbanks and the STFT effectively have sub sampled signals or spectral coefficients .

In some implementations the side information necessary for remixing a source signal with index i includes the gain factors aand b and in each subband an estimate of the power of the subband signal as a function of time Es k . The gain factors aand b can be given if this knowledge of the stereo signal is known or estimated. For many stereo signals aand bare static. If aor bare varying as a function of time k these gain factors can be estimated as a function of time. It is not necessary to use an average or estimate of the subband power to generate side information. Rather in some implementations the actual subband power Scan be used as a power estimate.

In some implementations a short time subband power can be estimated using single pole averaging where Es k can be computed as 1 1 3 where 0 1 determines a time constant of an exponentially decaying estimation window 

In some implementations some or all of the side information a band Es k may be provided on the same media as the stereo signal. For example a music publisher recording studio recording artist or the like may provide the side information with the corresponding stereo signal on a compact disc CD digital Video Disk DVD flash drive etc. In some implementations some or all of the side information can be provided over a network e.g. Internet Ethernet wireless network by embedding the side information in the bitstream of the stereo signal or transmitting the side information in a separate bitstream.

If aand bare not given then these factors can be estimated. Since Etilde over s n tilde over x n aEtilde over s n acan be computed as

In some implementations the short time power estimates and gain factors for each subband are quantized and encoded by the encoder to form side information e.g. a low bit rate bitstream . Note that these values may not be quantized and coded directly but first may be converted to other values more suitable for quantization and coding as described in reference to . In some implementations Es k can be normalized relative to the subband power of the input stereo audio signal making the encoding system robust relative to changes when a conventional audio coder is used to efficiently code the stereo audio signal as described in reference to .

The estimation of the remixed stereo audio signal can be carried out independently in a number of subbands. The side information includes the subband power Esi k and the gain factors aand b with which the M source signals are contained in the stereo signal. The new gain factors or mixing gains of the desired remixed stereo signal are represented by cand d. The mixing gains cand dcan be specified by a user through a user interface of an audio device such as described in reference to .

In some implementations the input stereo signal is decomposed into subbands by the filterbank array where a subband pair at a specific frequency is denoted x k and x k . As illustrated in the side information is decoded by the decoder yielding for each of the M source signals to be remixed the gain factors aand b which are contained in the input stereo signal and for each subband a power estimate Es k . The decoding of side information is described in more detail in reference to .

Given the side information the corresponding subband pair of the remixed stereo audio signal can be estimated by the remix module as a function of the mixing gains cand d of the remixed stereo signal. The inverse filterbank array is applied to the estimated subband pairs to provide a remixed time domain stereo signal.

In some implementations the remixed stereo signal can be approximated in a mathematical sense using least squares estimation. Optionally perceptual considerations can be used to modify the estimate.

Equations 1 and 2 also hold for the subband pairs x k and x k and y k and y k respectively. In this case the source signals are replaced with source subband signals s k .

Given a subband pair of the original stereo signal x k and x k the subband pair of the stereo signal with different gains is estimated as a linear combination of the original left and right stereo subband pair 9 where w k w k w k and w k are real valued weighting factors.

The weights w k w k w k and w k can be computed at each time k for the subbands at each frequency such that the mean square errors Ee k and Ee k are minimized. For computing w k and w k we note that Ee k is minimized when the error e k is orthogonal to x k and x k that is 0 0. 11 Note that for convenience of notation the time index k was omitted.

While Ex Ex and Exx can directly be estimated given the decoder input stereo signal subband pair Exy and Exy can be estimated using the side information Es a b and the mixing gains cand d of the desired remixed stereo signal 

Under the assumption 1 equation 18 is one of the non unique solutions satisfying 12 and the similar orthogonality equation system for the other two weights. Note that the coherence in 17 is used to judge how similar xand xare to each other. If the coherence is zero then xand xare independent. If the coherence is one then xand xare similar but may have different levels . If xand xare very similar coherence close to one then the two channel Wiener computation four weights computation is ill conditioned. An example range for the threshold is about 0.4 to about 1.0.

The resulting remixed stereo signal obtained by converting the computed subband signals to the time domain sounds similar to a stereo signal that would truly be mixed with different mixing gains cand d in the following this signal is denoted desired signal . On one hand mathematically this requires that the computed subband signals are similar to the truly differently mixed subband signals. This is the case to a certain degree. Since the estimation is carried out in a perceptually motivated subband domain the requirement for similarity is less strong. As long as the perceptually relevant localization cues e.g. level difference and coherence cues are sufficiently similar the computed remixed stereo signal will sound similar to the desired signal.

In some implementations if the processing described herein is used good results can be obtained. Nevertheless to be sure that the important level difference localization cues closely approximate the level difference cues of the desired signal post scaling of the subbands can be applied to adjust the level difference cues to make sure that they match the level difference cues of the desired signal.

For the modification of the least squares subband signal estimates in 9 the subband power is considered. If the subband power is correct then the important spatial cue level difference also will be correct. The desired signal 8 left subband power is

As described in the previous section the side information necessary for remixing a source signal with index i are the factors aand b and in each subband the power as a function of time Es k . In some implementations corresponding gain and level difference values for the gain factors aand bcan be computed in dB as follows 

In some implementations the gain and level difference values are quantized and Huffman coded. For example a uniform quantizer with a 2 dB quantizer step size and a one dimensional Huffman coder can be used for quantizing and coding respectively. Other known quantizers and coders can also be used e.g. vector quantizer .

If aand bare time invariant and one assumes that the side information arrives at the decoder reliably the corresponding coded values need only be transmitted once. Otherwise aand bcan be transmitted at regular time intervals or in response to a trigger event e.g. whenever the coded values change .

To be robust against scaling of the stereo signal and power loss gain due to coding of the stereo signal in some implementations the subband power Es k is not directly coded as side information. Rather a measure defined relative to the stereo signal can be used 

It can be advantageous to use the same estimation windows time constants for computing E. for the various signals. An advantage of defining the side information as a relative power value 24 is that at the decoder a different estimation window time constant than at the encoder may be used if desired. Also the effect of time misalignment between the side information and stereo signal is reduced compared to the case when the source power would be transmitted as an absolute value. For quantizing and coding A k in some implementations a uniform quantizer is used with a step size of for example 2 dB and a one dimensional Huffman coder. The resulting bitrate may be as little as about 3 kb s kilobit per second per audio object that is to be remixed.

In some implementations bitrate can be reduced when an input source signal corresponding to an object to be remixed at the decoder is silent. A coding mode of the encoder can detect the silent object and then transmit to the decoder information e.g. a single bit per frame for indicating that the object is silent.

Given the Huffman decoded quantized values 23 and 24 the values needed for remixing can be computed as follows 

In some implementations STFT short term Fourier transform based processing is used for the encoding decoding systems described in reference to . Other time frequency transforms may be used to achieve a desired result including but not limited to a quadrature mirror filter QMF filterbank a modified discrete cosine transform MDCT a wavelet filterbank etc.

For analysis processing e.g. a forward filterbank operation in some implementations a frame of N samples can be multiplied with a window before an N point discrete Fourier transform DFT or fast Fourier transform FFT is applied. In some implementations the following sine window can be used 

If the processing block size is different than the DFT FFT size then in some implementations zero padding can be used to effectively have a smaller window than N. The described analysis processing can for example be repeated every N 2 samples equals window hop size resulting in a 50 percent window overlap. Other window functions and percentage overlap can be used to achieve a desired result.

To transform from the STFT spectral domain to the time domain an inverse DFT or FFT can be applied to the spectra. The resulting signal is multiplied again with the window described in 26 and adjacent signal blocks resulting from multiplication with the window are combined with overlap added to obtain a continuous time domain signal.

In some cases the uniform spectral resolution of the STFT may not be well adapted to human perception. In such cases as opposed to processing each STFT frequency coefficient individually the STFT coefficients can be grouped such that one group has a bandwidth of approximately two times the equivalent rectangular bandwidth ERB which is a suitable frequency resolution for spatial audio processing.

Given two STFT coefficients x k and x k the values Ex k x k needed for computing the remixed stereo audio signal can be estimated iteratively. In this case the subband sampling frequency fis the temporal frequency at which STFT spectra are computed. To get estimates for each perceptual partition not for each STFT coefficient the estimated values can be averaged within the partitions before being further used.

The processing described in the previous sections can be applied to each partition as if it were one subband. Smoothing between partitions can be accomplished using for example overlapping spectral windows to avoid abrupt processing changes in frequency thus reducing artifacts.

In the example shown the bitstream is separated into a stereo audio bitstream and a bitstream containing side information needed by the proposed decoder to provide remixing capability. The stereo signal is decoded by the conventional audio decoder and fed to the proposed decoder which modifies the stereo signal as a function of the side information obtained from the bitstream and user input e.g. mixing gains cand d .

In some implementations the encoding and remixing systems described in previous sections can be extended to remixing multi channel audio signals e.g. 5.1 surround signals . Hereinafter a stereo signal and multi channel signal are also referred to as plural channel signals. Those with ordinary skill in the art would understand how to rewrite 7 to 22 for a multi channel encoding decoding scheme i.e. for more than two signals x k x k x k . . . x k where C is the number of audio channels of the mixed signal.

In some implementations certain channels can be left unprocessed. For example for 5.1 surround the two rear channels can be left unprocessed and remixing applied only to the front left right and center channels. In this case a three channel remixing algorithm can be applied to the front channels.

The audio quality resulting from the disclosed remixing scheme depends on the nature of the modification that is carried out. For relatively weak modifications e.g. panning change from 0 dB to 15 dB or gain modification of 10 dB the resulting audio quality can be higher than achieved by conventional techniques. Also the quality of the proposed disclosed remixing scheme can be higher than conventional remixing schemes because the stereo signal is modified only as necessary to achieve the desired remixing.

The remixing scheme disclosed herein provides several advantages over conventional techniques. First it allows remixing of less than the total number of objects in a given stereo or multi channel audio signal. This is achieved by estimating side information as a function of the given stereo audio signal plus M source signals representing M objects in the stereo audio signal which are to be enabled for remixing at a decoder. The disclosed remixing system processes the given stereo signal as a function of the side information and as a function of user input the desired remixing to generate a stereo signal which is perceptually similar to the stereo signal truly mixed differently.

When a subband is attenuated too much relative to neighboring subbands audio artifacts are may occur. Thus it is desired to restrict the maximum attenuation. Moreover since the stereo signal and object source signal statistics are measured independently at the encoder and decoder respectively the ratio between the measured stereo signal subband power and object signal subband power as represented by the side information can deviate from reality. Due to this the side information can be such that it is physically impossible e.g. the signal power of the remixed signal 19 can become negative. Both of the above issues can be addressed as described below.

For many cases two weights 18 are adequate for computing the left and right remixed signal subbands 9 . In some cases better results can be achieved by using four weights 13 and 15 . Using two weights means that for generating the left output signal only the left original signal is used and the same for the right output signal. Thus a scenario where four weights are desirable is when an object on one side is remixed to be on the other side. In this case it would be expected that using four weights is favorable because the signal which was originally only on one side e.g. in left channel will be mostly on the other side e.g. in right channel after remixing. Thus four weights can be used to allow signal flow from an original left channel to a remixed right channel and vice versa.

When the least squares problem of computing the four weights is ill conditioned the magnitude of the weights may be large. Similarly when the above described one side to other side remixing is used the magnitude of the weights when only two weights are used can be large. Motivated by this observation in some implementations the following criterion can be used to decide whether to use four or two weights.

In some implementations crosstalk i.e. w and w can be used to change the location of an extremely panned object. The decision to use two or four weights can be performed as follows 

The requests for changing the location of the object can be easily checked by comparing the original panning information to the desired panning information. However due to estimation error it is desired to give some margin to control the sensitivity of the decisions. The sensitivity of the decisions can be easily controlled as setting as desirable values.

When a source is to be totally removed e.g. removing the lead vocal track for a Karaoke application its mixing gains are c 0 and d 0. However when a user chooses zero mixing gains the degree of achieved attenuation can be limited. Thus for improved attenuation the source subband power values of the corresponding source signals obtained from the side information s k can be scaled by a value greater than one e.g. 2 before being used to compute the weights w w wand w.

It has been observed that the disclosed remixing scheme may introduce artifacts in the desired signal especially when an audio signal is tonal or stationary. To improve audio quality at each subband a stationarity tonality measure can be computed. If the stationarity tonality measure exceeds a certain threshold TON then the estimation weights are smoothed over time. The smoothing operation is described as follows For each subband at each time index k the weights which are applied for computing the output subbands are obtained as follows 

If TON k TON then 1 1 1 1 1 1 1 1 31 where tilde over w k tilde over w k tilde over w k and tilde over w k are the smoothed weights and w k w k W k and w k are the non smoothed weights computed as described earlier.

The remix technique described herein provides user control in terms of mixing gains cand d. This corresponds to determining for each object the gain G and amplitude panning L direction where the gain and panning are fully determined by cand d 

In some implementations it may be desired to control other features of the stereo mix other than gain and amplitude panning of source signals. In the following description a technique is described for modifying a degree of ambience of a stereo audio signal. No side information is used for this decoder task.

In some implementations the signal model given in 44 can be used to modify a degree of ambience of a stereo signal where the subband power of nand nare assumed to be equal i.e. . 34 

Again it can be assumed that s nand nare mutually independent. Given these assumptions the coherence 17 can be written as

In some implementations to control the left and right ambience the remix technique can be applied relative to two objects One object is a source with index iwith subband power Es k P k on the left side i.e. a 1 and b 0. The other object is a source with index iwith subband power Es k P k on the right side i.e. a 0 and b 1. To change the amount of ambience a user can choose c d 10and c d 0 where gis the ambience gain in dB.

In some implementations modified or different side information can be used in the disclosed remixing scheme that are more efficient in terms of bitrate. For example in 24 A k can have arbitrary values. There is also a dependence on the level of the original source signal s n . Thus to get side information in a desired range the level of the source input signal would need to be adjusted. To avoid this adjustment and to remove the dependence of the side information on the original source signal level in some implementations the source subband power can be normalized not only relative to the stereo signal subband power as in 24 but also the mixing gains can be considered 

This corresponds to using as side information the source power contained in the stereo signal not the source power directly normalized with the stereo signal. Alternatively one can use a normalization like this 

This side information is also more efficient since A k can only take values smaller or equal than 0 dB. Note that 39 and 40 can be solved for the subband power Es k .

The remix scheme described herein can easily be extended to handle stereo source signals. From a side information perspective stereo source signals are treated like two mono source signals one being only mixed to left and the other being only mixed to right. That is the left source channel i has a non zero left gain factor aand a zero right gain factor b. The gain factors aand b can be estimated with 6 . Side information can be transmitted as if the stereo source would be two mono sources. Some information needs to be transmitted to the decoder to indicated to the decoder which sources are mono sources and which are stereo sources.

Regarding decoder processing and a graphical user interface GUI one possibility is to present at the decoder a stereo source signal similarly as a mono source signal. That is the stereo source signal has a gain and panning control similar to a mono source signal. In some implementations the relation between the gain and panning control of the GUI of the non remixed stereo signal and the gain factors can be chosen to be 

That is the GUI can be initially set to these values. The relation between the GAIN and PAN chosen by the user and the new gain factors can be chosen to be 

Equations 42 can be solved for cand d which can be used as remixing gains with c 0 and d 0 . The described functionality is similar to a balance control on a stereo amplifier. The gains of the left and right channels of the source signal are modified without introducing cross talk.

In the disclosed remixing scheme the encoder receives a stereo signal and a number of source signals representing objects that are to be remixed at the decoder. The side information necessary for remixing a source single with index i at the decoder is determined from the gain factors aand b and the subband power Es k . The determination of side information was described in earlier sections in the case when the source signals are given.

While the stereo signal is easily obtained since this corresponds to the product existing today it may be difficult to obtain the source signals corresponding to the objects to be remixed at the decoder. Thus it is desirable to generate side information for remixing even if the object s source signals are not available. In the following description a fully blind generation technique is described for generating side information from only the stereo signal.

Next the subband power of the direct sound is estimated using the subband pair and mixing gains . To compute the direct sound subband power one can assume that each input signal left and right subband at each time can be written 44 where a and b are mixing gains s represents the direct sound of all source signals and nand nrepresent independent ambient sound. It can be assumed that a and b are

We can compute the direct sound subband power Es k according to the signal model given in 44 . In some implementations the following equation system is used . 46 

It has been assumed in 46 that s nand nin 34 are mutually independent the left side quantities in 46 can be measured and a and b are available. Thus the three unknowns in 46 are Es k En k and En k . The direct sound subband power Es k can be given by

In some implementations the computation of desired source subband power Es k can be performed in two steps First the direct sound subband power Es k is computed where s represents all sources direct sound e.g. center panned in 44 . Then desired source subband powers Es k are computed by modifying the direct sound subband power Es k as a function of the direct sound direction represented by M and a desired sound direction represented by the desired source level difference L 49 where . is a gain function which as a function of direction returns a gain factor that is close to one only for the direction of the desired source. As a final step the gain factors and subband powers Es k can be quantized and encoded to generate side information .

Note that with the fully blind technique described above the side information a b Es k for a given source signal scan be determined.

The fully blind generation technique described above may be limited under certain circumstances. For example if two objects have the same position direction on a stereo sound stage then it may not be possible to blindly generate side information relating to one or both objects.

An alternative to fully blind generation of side information is partially blind generation of side information. The partially blind technique generates an object waveform which roughly corresponds to the original object waveform. This may be done for example by having singers or musicians play reproduce the specific object signal. Or one may deploy MIDI data for this purpose and let a synthesizer generate the object signal. In some implementations the rough object waveform is time aligned with the stereo signal relative to which side information is to be generated. Then the side information can be generated using a process which is a combination of blind and non blind side information generation.

Finally the function is applied to the estimated subband powers which combines the first and second subband power estimates and returns a final estimate which effectively can be used for side information computation . In some implementations the function F is given by min . 50 

The architecture generally includes a download service having a repository e.g. MySQL and a server e.g. Windows NT Linux server . The repository can store various types of content including professionally mixed stereo signals and associated source signals corresponding to objects in the stereo signals and various effects e.g. reverberation . The stereo signals can be stored in a variety of standardized formats including MP3 PCM AAC etc.

In some implementations source signals are stored in the repository and are made available for download to audio devices . In some implementations pre processed side information is stored in the repository and made available for downloading to audio devices . The pre processed side information can be generated by the server using one or more of the encoding schemes described in reference to A and A.

In some implementations the download service e.g. a Web site music store communicates with the audio devices through a network e.g. Internet intranet Ethernet wireless network peer to peer network . The audio devices can be any device capable of implementing the disclosed remixing schemes e.g. media players recorders mobile phones personal digital assistants PDAs game consoles set top boxes television receives media centers etc. .

In some implementations an audio device includes one or more processors or processor cores input devices e.g. click wheel mouse joystick touch screen output devices e.g. LCD network interfaces e.g. USB FireWire Ethernet network interface card wireless transceiver and a computer readable medium e.g. memory hard disk flash drive . Some or all of these components can send and or receive information through communication channels e.g. a bus bridge .

In some implementations the computer readable medium includes an operating system music manager audio processor remix module and music library. The operating system is responsible for managing basic administrative and communication tasks of the audio device including file management memory access bus contention controlling peripherals user interface management power management etc. The music manager can be an application that manages the music library. The audio processor can be a conventional audio processor for playing music files e.g. MP3 CD audio etc. The remix module can be one or more software components that implement the functionality of the remixing schemes described in reference to .

In some implementations the server encodes a stereo signal and generates side information as described in references to A and A. The stereo signal and side information are downloaded to the audio device through the network . The remix module decode the signals and side information and provides remix capability based on user input received through an input device e.g. keyboard click wheel touch display .

A user can enter a remix mode for the device by highlighting the appropriate item on user interface . In this example it is assumed that the user has selected a song from the music library and would like to change the pan setting of the lead vocal track. For example the user may want to hear more lead vocal in the left audio channel.

To gain access to the desired pan control the user can navigate a series of submenus and . For example the user can scroll through items on submenus and using a wheel . The user can select a highlighted menu item by clicking a button . The submenu provides access to the desired pan control for the lead vocal track. The user can then manipulate the slider e.g. using wheel to adjust the pan of the lead vocal as desired while the song is playing.

In some implementations the remixing schemes described in reference to can be included in existing or future audio coding standards e.g. MPEG 4 . The bitstream syntax for the existing or future coding standard can include information that can be used by a decoder with remix capability to determine how to process the bitstream to allow for remixing by a user. Such syntax can be designed to provide backward compatibility with conventional coding schemes. For example a data structure e.g. a packet header included in the bitstream can include information e.g. one or more bits or flags indicating the availability of side information e.g. gain factors subband powers for remixing.

A stereo a capella signal corresponds to the stereo signal containing only vocals. Without loss of generality let the first M sources s s . . . s be the vocal sources in 1 . To get a stereo a capella signal out of an original stereo signal sources which are not vocals can be attenuated. The desired stereo signal is

When changing gain and panning settings of sources one could choose extreme values resulting in an impaired rendered quality. For example moving all sources to a minimum gain except on kept to 0 dB or moving all sources to left except one moved to the right side can yield poor audio quality for the isolated source. Such situations should be avoided to keep a clean rendered stereo signal without artifacts. One means to avoid this situation is to prevent extreme settings of gain and panning controls.

Each control k gain and panning sliders gand p respectively can have internal values in a graphical user interface GUI in a range of 1 1 . To limit extreme settings the mean distance between gain sliders can be computed as

Then an adjustment factor Gis computed as a function of the mean distance of to limit the range of gain sliders in the GUI 1 1 54 where defines the degree of automatic scaling Gfor an extreme setting e.g. 1. Typically is chosen to be equal to about 0.5 to reduce the gain by half in case of extreme settings.

Following the same process Pis computed and applied to panning sliders such that effective gain and panning are scaled to . 55 

The disclosed and other embodiments and the functional operations described in this specification can be implemented in digital electronic circuitry or in computer software firmware or hardware including the structures disclosed in this specification and their structural equivalents or in combinations of one or more of them. The disclosed and other embodiments can be implemented as one or more computer program products i.e. one or more modules of computer program instructions encoded on a computer readable medium for execution by or to control the operation of data processing apparatus. The computer readable medium can be a machine readable storage device a machine readable storage substrate a memory device a composition of matter effecting a machine readable propagated signal or a combination of one or more them. The term data processing apparatus encompasses all apparatus devices and machines for processing data including by way of example a programmable processor a computer or multiple processors or computers. The apparatus can include in addition to hardware code that creates an execution environment for the computer program in question e.g. code that constitutes processor firmware a protocol stack a database management system an operating system or a combination of one or more of them. A propagated signal is an artificially generated signal e.g. a machine generated electrical optical or electromagnetic signal that is generated to encode information for transmission to suitable receiver apparatus.

A computer program also known as a program software software application script or code can be written in any form of programming language including compiled or interpreted languages and it can be deployed in any form including as a stand alone program or as a module component subroutine or other unit suitable for use in a computing environment. A computer program does not necessarily correspond to a file in a file system. A program can be stored in a portion of a file that holds other programs or data e.g. one or more scripts stored in a markup language document in a single file dedicated to the program in question or in multiple coordinated files e.g. files that store one or more modules sub programs or portions of code . A computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.

The processes and logic flows described in this specification can be performed by one or more programmable processors executing one or more computer programs to perform functions by operating on input data and generating output. The processes and logic flows can also be performed by and apparatus can also be implemented as special purpose logic circuitry e.g. an FPGA field programmable gate array or an ASIC application specific integrated circuit .

Processors suitable for the execution of a computer program include by way of example both general and special purpose microprocessors and any one or more processors of any kind of digital computer. Generally a processor will receive instructions and data from a read only memory or a random access memory or both. The essential elements of a computer are a processor for performing instructions and one or more memory devices for storing instructions and data. Generally a computer will also include or be operatively coupled to receive data from or transfer data to or both one or more mass storage devices for storing data e.g. magnetic magneto optical disks or optical disks. However a computer need not have such devices. Computer readable media suitable for storing computer program instructions and data include all forms of non volatile memory media and memory devices including by way of example semiconductor memory devices e.g. EPROM EEPROM and flash memory devices magnetic disks e.g. internal hard disks or removable disks magneto optical disks and CD ROM and DVD ROM disks. The processor and the memory can be supplemented by or incorporated in special purpose logic circuitry.

To provide for interaction with a user the disclosed embodiments can be implemented on a computer having a display device e.g. a CRT cathode ray tube or LCD liquid crystal display monitor for displaying information to the user and a keyboard and a pointing device e.g. a mouse or a trackball by which the user can provide input to the computer. Other kinds of devices can be used to provide for interaction with a user as well for example feedback provided to the user can be any form of sensory feedback e.g. visual feedback auditory feedback or tactile feedback and input from the user can be received in any form including acoustic speech or tactile input.

The disclosed embodiments can be implemented in a computing system that includes a back end component e.g. as a data server or that includes a middleware component e.g. an application server or that includes a front end component e.g. a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of what is disclosed here or any combination of one or more such back end middleware or front end components. The components of the system can be interconnected by any form or medium of digital data communication e.g. a communication network. Examples of communication networks include a local area network LAN and a wide area network WAN e.g. the Internet.

The computing system can include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client server relationship to each other.

In some implementations the system includes a mix signal decoder a parameter generator and a remix renderer . The parameter generator includes a blind estimator user mix parameter generator and a remix parameter generator . The remix parameter generator includes an eq mix parameter generator and an up mix parameter generator .

In some implementations the system provides two audio processes. In a first process side information provided by an encoding system is used by the remix parameter generator to generate remix parameters. In a second process blind parameters are generated by the blind estimator and used by the remix parameter generator to generate remix parameters. The blind parameters and fully or partially blind generation processes can be performed by the blind estimator as described in reference to .

In some implementations the remix parameter generator receives side information or blind parameters and a set of user mix parameters from the user mix parameter generator . The user mix parameter generator receives mix parameters specified by end users e.g. GAIN PAN and converts the mix parameters into a format suitable for remix processing by the remix parameter generator e.g. convert to gains c d . In some implementations the user mix parameter generator provides a user interface for allowing users to specify desired mix parameters such as for example the media player user interface as described in reference to .

In some implementations the remix parameter generator can process both stereo and multi channel audio signals. For example the eq mix parameter generator can generate remix parameters for a stereo channel target and the up mix parameter generator can generate remix parameters for a multi channel target. Remix parameter generation based on multi channel audio signals were described in reference to Section IV.

In some implementations the remix renderer receives remix parameters for a stereo target signal or a multi channel target signal. The eq mix renderer applies stereo remix parameters to the original stereo signal received directly from the mix signal decoder to provide a desired remixed stereo signal based on the formatted user specified stereo mix parameters provided by the user mix parameter generator . In some implementations the stereo remix parameters can be applied to the original stereo signal using an n n matrix e.g. a 2 2 matrix of stereo remix parameters. The up mix renderer applies multi channel remix parameters to an original multi channel signal received directly from the mix signal decoder to provide a desired remixed multi channel signal based on the formatted user specified multi channel mix parameters provided by the user mix parameter generator . In some implementations an effects generator generates effects signals e.g. reverb to be applied to the original stereo or multi channel signals by the eq mix renderer or up mix renderer respectively. In some implementations the up mix renderer receives the original stereo signal and converts or up mixes the stereo signal to a multi channel signal in addition to applying the remix parameters to generate a remixed multi channel signal.

The system can process audio signals having a variety of channel configurations allowing the system to be integrated into existing audio coding schemes e.g. SAOC MPEG AAC parametric stereo while maintaining backward compatibility with such audio coding schemes.

In some implementations an SDV downmix signal is received and decomposed by the filterbank into subband signals. The downmix signal can be a stereo signal x x given by 51 . The subband signals X i k X i k are input either directly into the eq mix renderer or into the blind estimator which outputs blind parameters A P P. The computation of these parameters is described in U.S. Provisional Patent Application No. 60 884 594 for Separate Dialogue Volume. The blind parameters are input into the parameter generator which generates eq mix parameters w w from the blind parameters and user specified mix parameters g i k e.g. center gain center width cutoff frequency dryness . The computation of the eq mix parameters is described in Section I. The eq mix parameters are applied to the subband signals by the eq mix renderer to provide rendered output signals y y. The rendered output signals of the eq mix renderer are input to the inverse filterbank which converts the rendered output signals into the desired SDV stereo signal based on the user specified mix parameters.

In some implementations the system can also process audio signals using remix technology as described in reference to . In a remix mode the filterbank receives stereo or multi channel signals such as the signals described in 1 and 27 . The signals are decomposed into subband signals X i k X i k by the filterbank and input directly input into the eq renderer and the blind estimator for estimating the blind parameters. The blind parameters are input into the parameter generator together with side information a b P received in a bitstream. The parameter generator applies the blind parameters and side information to the subband signals to generate rendered output signals. The rendered output signals are input to the inverse filterbank which generates the desired remix signal.

In some implementations the original content e.g. the original mixed audio file side information and optional preset mix parameters remix information can be provided to a service provider e.g. a music portal or placed on a physical medium e.g. a CD ROM DVD media player flash drive . The service provider can operate one or more servers for serving all or part of the remix information and or a bitstream containing all of part of the remix information. The remix information can be stored in a repository . The service provider can also provide a virtual environment e.g. a social community portal bulletin board for sharing user generated mix parameters. For example mix parameters generated by a user on a remix ready device e.g. a media player mobile phone can be stored in a mix parameter file that can be uploaded to the service provider for sharing with other users. The mix parameter file can have a unique extension e.g. filename.rms . In the example shown a user generated a mix parameter file using the remix player A and uploaded the mix parameter file to the service provider where the file was subsequently downloaded by a user operating a remix player B.

The system can be implemented using any known digital rights management scheme and or other known security methods to protect the original content and remix information. For example the user operating the remix player B may need to download the original content separately and secure a license before the user can access or user the remix features provided by remix player B.

Other configurations for encoder and decoder interfaces are possible. The interface configurations illustrated in can be used to define an Application Programming Interface API for allowing remix enabled devices to process remix information. The interfaces shown illustrated in are examples and other configurations are possible including configurations with different numbers and types of inputs and outputs which may be based in part on the device.

On the encoder side a mixed audio signal is encoded by the mix signal encoder e.g. mp3 encoder and sent to the decoding side. Objects signals e.g. lead vocal guitar drums or other instruments are input into the remix encoder which generates side information e.g. gain factors and subband powers as previously described in reference to for example. Additionally one or more object signals of interest are input to the signal encoder e.g. mp3 encoder to produce additional side information. In some implementations aligning information is input to the signal encoder for aligning the output signals of the mix signal encoder and signal encoder respectively. Aligning information can include time alignment information type of codex used target bit rate bit allocation information or strategy etc.

On the decoder side the output of the mix signal encoder is input to the mix signal decoder e.g. mp3 decoder . The output of mix signal decoder and the encoder side information e.g. encoder generated gain factors subband powers additional side information are input into the parameter generator which uses these parameters together with control parameters e.g. user specified mix parameters to generate remix parameters and additional remix data. The remix parameters and additional remix data can be used by the remix renderer to render the remixed audio signal.

The additional remix data e.g. an object signal is used by the remix renderer to remix a particular object in the original mix audio signal. For example in a Karaoke application an object signal representing a lead vocal can be used by the enhanced remix encoder to generate additional side information e.g. an encoded object signal . This signal can be used by the parameter generator to generate additional remix data which can be used by the remix renderer to remix the lead vocal in the original mix audio signal e.g. suppressing or attenuating the lead vocal .

In some implementations the downmix signal X e.g. left channel of original mix audio signal is combined with additional remix data e.g. left channel of lead vocal object signal and scaled by scale modules and and the downmix signal X e.g. right channel of original mix audio signal is combined with additional remix data e.g. right channel of lead vocal object signal and scaled by scale modules and . The scale module scales the downmix signal X by the eq mix parameter w the scale module scales the downmix signal X by the eq mix parameter w the scale module scales the downmix signal X by the eq mix parameter wand the scale module scales the downmix signal X by the eq mix parameter w. The scaling can be implemented using linear algebra such as using an n by n e.g. 2 2 matrix. The outputs of scale modules and are summed to provide a first rendered output signal Y and the scale modules and are summed to provide a second rendered output signal Y.

In some implementations one may implement a control e.g. switch slider button in a user interface to move between an original stereo mix Karaoke mode and or a capella mode. As a function of this control position the combiner controls the linear combination between the original stereo signal and signal s obtained by the additional side information. For example for Karaoke mode the signal obtained from the additional side information can be subtracted from the stereo signal. Remix processing may be applied afterwards to remove quantization noise in case the stereo and or other signal were lossily coded . To partially remove vocals only part of the signal obtained by the additional side information need be subtracted. For playing only vocals the combiner selects the signal obtained by the additional side information. For playing the vocals with some background music the combiner adds a scaled version of the stereo signal to the signal obtained by the additional side information.

While this specification contains many specifics these should not be construed as limitations on the scope of what being claims or of what may be claimed but rather as descriptions of features specific to particular embodiments. Certain features that are described in this specification in the context of separate embodiments can also be implemented in combination in a single embodiment. Conversely various features that are described in the context of a single embodiment can also be implemented in multiple embodiments separately or in any suitable sub combination. Moreover although features may be described above as acting in certain combinations and even initially claimed as such one or more features from a claimed combination can in some cases be excised from the combination and the claimed combination may be directed to a sub combination or variation of a sub combination.

Similarly while operations are depicted in the drawings in a particular order this should not be understand as requiring that such operations be performed in the particular order shown or in sequential order or that all illustrated operations be performed to achieve desirable results. In certain circumstances multitasking and parallel processing may be advantageous. Moreover the separation of various system components in the embodiments described above should not be understood as requiring such separation in all embodiments and it should be understood that the described program components and systems can generally be integrated together in a single software product or packaged into multiple software products.

Particular embodiments of the subject matter described in this specification have been described. Other embodiments are within the scope of the following claims. For example the actions recited in the claims can be performed in a different order and still achieve desirable results. As one example the processes depicted in the accompanying figures do not necessarily require the particular order shown or sequential order to achieve desirable results.

As another example the pre processing of side information described in Section 5A provides a lower bound on the subband power of the remixed signal to prevent negative values which contradicts with the signal model given in 2 . However this signal model not only implies positive power of the remixed signal but also positive cross products between the original stereo signals and the remixed stereo signals namely Exy Exy Exy and Exy.

Starting from the two weights case to prevent that the cross products Exy and Exy become negative the weights defined in 18 are limited to a certain threshold such that they are never smaller than A dB.

Then the cross products are limited by considering the following conditions where sqrt denotes square root and Q is defined as Q 10 A 10 

