---

title: Dynamically configurable switch for distributed test lab
abstract: A switch is provided which is dynamically configurable via a network port thereon. One switch is employed to establish point-to-point electrical connections between devices under test (DUTs) and host devices coupled to upstream ports and downstream ports on the switch respectively. Two switches coupled to a network are employed to facilitate a distributed test lab. DUTs are coupled to upstream ports on a first switch which, based on communication with a test controller over the network, establishes a logical connection between the upstream port coupled to a particular DUT and the network. Host devices are coupled to downstream ports on a second switch which, based on communication with the test controller over the network, establishes a logical connection between the downstream port coupled to a particular host device and the network. A logical connection is also established across the network between the particular DUT and host device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07984194&OS=07984194&RS=07984194
owner: Microsoft Corporation
number: 07984194
owner_city: Redmond
owner_country: US
publication_date: 20080923
---
Design verification testing and quality assurance testing are common test procedures used in the development of a new hardware and or software product. These test procedures among others are generally successfully completed before the new product is manufactured in volume and released to market. Depending on the nature intended use and intended market for the new product the test procedures may test the product in a myriad of different ways and in different configurations. For example the test procedures may functionally test the product to verify that its operating features meet the original design goals for the product. The test procedures may also functionally test the product to verify its compatibility and interoperability with other products. The test procedures may also functionally test the product to verify its compatibility with various software and hardware system environments. The test procedures may also functionally stress test the product under a variety of environmental conditions e.g. thermal stress electrical stress and the like to verify its operation across a specified range of environmental conditions. The test procedures may also functionally stress test the product under different data load and system load conditions. These different types of tests may also be implemented in various combinations.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described hereafter in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used as an aid in determining the scope of the claimed subject matter.

Dynamically configurable switch DCS framework embodiments described herein generally involve a switch which is dynamically configurable via a network port on the switch. In one embodiment a DCS framework is provided in which one switch is employed to establish connections between a plurality of devices. The switch contains a plural number of upstream ports one or more of which are each coupled to a different device under test DUT . The switch also contains a plural number of downstream ports one or more of which are each coupled to a different host device. The switch also contains a switch fabric which is dynamically configurable to establish a point to point electrical connection between any upstream port and any downstream port. The switch also contains a computing device which is coupled to the switch fabric and contains a network port which is coupled to the computing device. Upon receiving a command over the network port to connect a particular DUT to a particular host device the computing device dynamically configures the switch fabric to connect the particular upstream port which is coupled to the particular DUT to the particular downstream port which is coupled to the particular host device.

In another embodiment a DCS framework is provided in which two switches are employed. A first switch containing a plural number of upstream ports resides in a first test lab. One or more DUTs also reside in the first test lab where each DUT is coupled to a different upstream port on the first switch. The first switch is coupled to a network and is dynamically configurable to establish a logical connection between any upstream port and the network. A second switch containing a plural number of downstream ports resides in a second test lab which is located remotely from the first test lab. One or more host devices also reside in the second test lab where each host device is coupled to a different downstream port on the second switch. The second switch is also coupled to the network and is dynamically configurable to establish a logical connection between any downstream port and the network. A test controller device is also coupled to the network where the test controller device dynamically controls the configuration of the first and second switches by communicating with the switches over the network via a first communication protocol where this protocol serves to establish a logical connection across the network between a particular DUT and a particular host device.

The time and resources consumed to successfully complete the aforementioned test procedures on a new product in development have a direct bearing on the cost associated with developing the product and the time it takes to release the product to market. In other words and generally speaking the more time and resources that are needed to complete the test procedures on a new product the larger the product development cost and the longer it will take to release the product to market. As will be appreciated from the Detailed Description of the DCS framework embodiments which follows the DCS framework embodiments described herein provide for efficient testing of a new product in development and reduce the time and resources needed to complete the product test procedures that are necessary to confidently manufacture the product in volume and release it to market.

In addition to the just described benefits other advantages of the DCS framework embodiments described herein will become apparent from the Detailed Description which follows hereafter when taken in conjunction with the drawing figures which accompany the Detailed Description.

In the following description of dynamically configurable switch DCS framework embodiments reference is made to the accompanying drawings which form a part hereof and in which are shown by way of illustration specific embodiments in which the DCS framework can be practiced. It is understood that other embodiments can be utilized and structural changes can be made without departing from the scope of the DCS framework embodiments. It is further understood that although the DCS framework embodiments are described herein in the context of testing being performed on one or more peripheral devices which are dynamically connected to one or more supporting host devices the DCS framework embodiments are not limited to testing just the peripheral devices. Rather the DCS framework embodiments can also be used to perform testing on the host devices as well as on the relationship between particular peripheral devices and host devices. It is yet further understood that the DCS framework embodiments are not limited to testing just the peripheral device and host device hardware. Rather the DCS framework embodiments can also be used to perform testing on software which is being executed on both the peripheral devices and host devices.

DCS framework embodiments are described in detail hereafter. The DCS framework embodiments generally involve a switch which is dynamically configurable via a network port on the switch.

Referring again to the test lab also contains a dynamically configurable switch which generally operates to dynamically establish a point to point electrical connection between any DUT and any supporting host device . More particularly the switch contains a number N of upstream ports a number Y of downstream ports and a network port where N L and Y M. As described hereafter in tested embodiments of the DCS framework described herein N Y. However alternate embodiments of the DCS framework are also possible where N Y or N

Referring again to each upstream port is coupled to a different DUT via a dedicated static physical connection . Each downstream port is coupled to a different host device via a dedicated static physical connection . As will be described in detail hereafter the switch can dynamically establish a point to point electrical connection between any upstream port and any downstream port i.e. the switch can dynamically establish a total of N Y different connections . In one tested embodiment of the DCS framework described herein a 2 2 switch was implemented which contained two upstream ports and two downstream ports and which can dynamically establish a total of four different connections. In another tested embodiment a 4 4 switch was implemented which contained four upstream ports and four downstream ports and which can dynamically establish a total of 16 different connections. Other embodiments are also possible which employ other numbers of upstream ports and downstream ports such as an 8 8 switch which contains eight upstream ports and eight downstream ports and which can dynamically establish a total of 64 different connections.

Referring again to in tested embodiments of the DCS framework described herein conventional Universal Serial Bus USB ports were employed for both the upstream and downstream ports and on the dynamically configurable switch a USB keyboard and a USB mouse were employed for the DUTs each DUT was coupled to an upstream port via a wired USB connection USB compatible personal computers PCs were employed for the supporting host devices and each host device was coupled to a downstream port via a wired USB connection. Other embodiments are also possible which employ a wide variety of other types of USB devices as the DUT such as USB compatible memory based data storage devices magnetic disk based data storage devices video game controllers network adapters portable audio players mobile phones digital still cameras printers scanners and the like. Yet other embodiments are also possible where functionally different types of DUTs are coupled to the switch in a given test configuration. By way of example but not limitation in tested embodiments both USB keyboards and USB mice were coupled to a common switch and were tested in common according to a prescribed test procedure.

Referring again to alternate embodiments of the DCS framework described herein are also possible which employ other types of ports for the upstream and downstream ports and on the dynamically configurable switch . By way of example but not limitation in one alternate embodiment conventional Institute of Electrical and Electronics Engineers IEEE 1394 ports are employed for both the upstream and downstream ports and . In this embodiment 1394 compatible devices such as digital video cameras data storage devices and the like are employed for the DUTs where each DUT is coupled to an upstream port via a wired 1394 connection and 1394 compatible devices such as PCs and the like are also employed for the supporting host devices where each host device is coupled to a downstream port via a wired 1394 connection. In another alternate embodiment conventional External Peripheral Component Interconnect Express External PCI E also known as Cabled PCI E ports are employed for both the upstream and downstream ports and . In this embodiment External PCI E compatible devices such as video graphics processors data storage controllers and the like are employed for the DUTs where each DUT is coupled to an upstream port via a wired External PCI E connection and External PCI E compatible devices such as PCs and the like are employed for the supporting host devices where each host device is coupled to a downstream port via a wired PCI E connection. In yet another alternate embodiment conventional Ethernet ports are employed for both the upstream and downstream ports and . In this embodiment Ethernet compatible devices such as printers scanners network communication devices computing devices and the like are employed for the DUTs where each DUT is coupled to an upstream port via a wired Ethernet connection and Ethernet compatible devices such as PCs and other types of computing devices are employed for the supporting host devices where each host device is coupled to a downstream port via a wired Ethernet connection.

Referring again to the network port of the dynamically configurable switch is coupled to a network via a communications connection . The network provides a logical connection between the switch in the test lab and other devices which are coupled to the network. Examples of such other devices include but are not limited to the following. A local test controller device can optionally reside in the test lab and be coupled to the network via another communications connection . A remote test controller device can optionally reside in a remote location and be coupled to the network via yet another communications connection . It is noted that any suitable type of network and related network port can be employed. In tested embodiments of the DCS framework described herein the Internet was employed for the network a conventional Ethernet port was employed for the network port and the network port was coupled to the network via a wired Ethernet connection. Other embodiments are also possible which employ other types of networks such as an intranet and the like and other types of network ports and related communications connections such as an RS 232 interface to a dial up modem and the like.

Referring again to another embodiment of the DCS framework described herein is possible where a plurality of remote test controller devices reside in a plurality of remote locations . Yet another embodiment is also possible where no remote locations are employed and the network and test configuration are confined to the test lab . In this case the local test controller device would be in sole control of the dynamically configurable switch s configuration and would be coupled to the network port either directly or via a local area network LAN not shown in the test lab . Yet another embodiment is also possible where no local test controller device is employed in the test lab . In this case the remote test controller device s would be in sole control of the switch s configuration.

Generally speaking and referring again to based upon input from a test person into a user interface of the local test controller device or input from another test person into a user interface of the remote test controller device the test controller device communicates over the network with the dynamically configurable switch via the network port in order to dynamically control the configuration of the switch. More particularly via a first communication protocol between the test controller device and the switch the test controller device sends commands over the network to the switch and receives responses over the network from the switch via the network port of the switch where the commands dynamically control the switch s configuration e.g. which upstream port is connected to which downstream port and also determine the switch s current status.

Referring again to one of skill in the art of product development and testing will appreciate that the DCS framework embodiments described herein provide for efficient testing of a new product in development in a variety of ways including but not limited to the following. Given an exemplary test configuration where eight different DUTs are coupled to the eight upstream ports of a dynamically configurable 8 8 switch and eight different supporting host devices are coupled to the eight downstream ports of the switch the switch can be dynamically commanded via the aforementioned first communication protocol to establish 64 different test configurations. In other words a point to point electrical connection can be dynamically established between any of the eight DUTs and any of the eight host devices based upon the needs of the prescribed test procedure. Thus DUT resources and host device resources are efficiently utilized since redundant DUT units and redundant host devices are not needed. Test personnel resources are also efficiently utilized since the test people do not have to manually perform repeated static connection of DUTs to host devices and subsequent disconnection therefrom. As a result the test procedure can be completed in a minimum period of time. Any need for the developers to have to replicate distribute and track prototype DUT units containing a proposed design modification is generally precluded. Additionally the fact that a test person residing in a remote location can dynamically control the test configuration precludes any need for the test person to have to physically travel to the test lab to manually perform their desired configuration changes or communicate their desired changes to someone residing in the test lab and then wait for this person to manually perform the changes.

Referring again to a test lab B which is located remotely from test lab A contains a number M of supporting host devices and a dynamically configurable switch B containing a number Y of downstream ports and a network port where 1 M Y as described heretofore. Each downstream port is coupled to a different host device in the manner described heretofore. The network port is coupled to the network via another communications connection in the manner described heretofore.

Referring again to in one embodiment of the DCS framework described herein switch A is implemented as a 2 2 switch containing two upstream ports and switch B is implemented as a 2 2 switch containing two downstream ports . In another embodiment switch A is implemented as a 4 4 switch containing four upstream ports and switch B is implemented as a 4 4 switch containing four downstream ports . Other embodiments are also possible which employ other numbers of upstream ports and downstream ports . By way of example but not limitation switch A can be implemented as an 8 8 switch containing eight upstream ports and switch B can be implemented as an 8 8 switch containing eight downstream ports . Other embodiments are also possible where switch A and switch B differ in size. By way of example but not limitation switch A can be implemented as a 4 4 switch and switch B can be implemented as an 8 8 switch. It is noted that all the upstream ports for switch A and downstream ports for switch B are not shown for simplicity.

Referring again to the network provides a logical connection between the dynamically configurable switch A in test lab A the dynamically configurable switch B and other devices which are coupled to the network. Examples of such other devices include but are not limited to the following. A local test controller device A can optionally reside in test lab A and be coupled to the network via a communications connection . A local test controller device B can optionally reside in test lab B and be coupled to the network via another communications connection . A remote test controller device can optionally reside in a remote location and be coupled to the network via yet another communications connection . Another embodiment of the DCS framework described herein is possible where a plurality of remote test controller devices reside in a plurality of remote locations . Yet another embodiment is also possible where no remote locations are employed in which case the local test controller device A and or the local test controller device B would be in control of the configuration of the switch A and switch B . Yet another embodiment is also possible where no local test controller devices are employed in the test labs in which case the remote test controller device s would be in control of the configuration of the switch A and switch B .

Generally speaking and referring again to based upon input from a test person into a user interface of the local test controller device A or input from another test person into a user interface of the local test controller device B or input from yet another test person into a user interface of the remote test controller device the test controller device communicates over the network with both the dynamically configurable switch A and switch B via the aforementioned first communication protocol in order to dynamically control the configuration of these switches and also determine the current status of the switches. The switches also communicate directly with each other over the network via a second communication protocol.

More particularly and referring again to in order to establish a logical connection across the network between a particular DUT in test lab A and a particular supporting host device in test lab B a particular test controller device uses the first communication protocol to send a first command over the network to the network port of switch A which instructs switch A to dynamically establish a logical connection between the network port and the particular upstream port to which the particular DUT is coupled . It is noted that this logical connection can be either unidirectional or bidirectional based on the particular type of upstream port employed. This first command further instructs switch A to use the second communication protocol to send data traffic it receives from the particular DUT via the particular upstream port over the network to the switch to which the particular host device is coupled in this case switch B . This first command yet further instructs switch A to use the second communication protocol to receive data traffic over the network from the switch to which the particular host device is coupled in this case switch B and to forward this received data traffic to the particular DUT via the particular upstream port . The particular test controller device also uses the first communication protocol to send a second command over the network to the network port of switch B which instructs switch B to dynamically establish a logical connection between the network port and the particular downstream port to which the particular host device is coupled . It is noted that this logical connection can be either unidirectional or bidirectional based on the particular type of downstream port employed. This second command further instructs switch B to use the second communication protocol to send data traffic it receives from the particular host device via the particular downstream port over the network to the switch to which the particular DUT is coupled in this case switch A . This second command yet further instructs switch B to use the second communication protocol to receive data traffic over the network from the switch to which the particular DUT is coupled in this case switch A and to forward this received data traffic to the particular host device via the particular downstream port . In this manner any of the DUTs in test lab A can be tested on any of the host devices in test lab B according to a prescribed test procedure where switch A and switch B are dynamically configured and interoperate such that the DUTs appear to be locally connected to the host devices despite the fact that the DUTs and host devices are located remotely from one another.

Referring again to alternate embodiments of the DCS framework described herein are possible in which the distributed test lab topology depicted in employs more than two instantiations of the dynamically configurable switch described herein. In other words one or more additional test labs not shown can be added to the topology depicted in where each additional test lab is located remotely from test lab A and test lab B . Each additional test lab would contain its own local switch not shown whose network port is coupled to the network in the manner described heretofore and each additional test lab could be configured in one of the following exemplary ways. In one alternate embodiment an additional test lab could contain one or more DUTs each of which is coupled to an upstream port on the local switch i.e. such an additional test lab would be configured like test lab A . In another alternate embodiment an additional test lab could contain one or more supporting host devices each of which is coupled to a downstream port on the local switch i.e. such an additional test lab would be configured like test B . In yet another alternate embodiment an additional test lab could contain both one or more DUTs and one or more host devices i.e. such an additional test lab would be configured like the test lab depicted in . In each of these alternate embodiments the test controller device dynamically controls the configuration of the local switch in the additional test lab by communicating with this switch over the network via the first communication protocol described herein. As necessary this switch also communicates over the network directly with other remote switches in the topology via the second communication protocol described herein. Thus in the aforementioned alternate embodiment where an additional test lab contains both DUTs and host devices a logical connection can be established across the network between any DUT residing in the additional test lab and any host device remotely residing in another test lab. A logical connection can also be established across the network between any host device residing in the additional test lab and any DUT remotely residing in another test lab. An electrical connection can also be established between any DUT residing in the additional test lab and any host device also residing in the additional test lab.

One of skill in the art of product development and testing will appreciated that the DCS framework embodiments described in this section provide for efficient testing of a new product in development in a variety of additional ways besides those which have been described heretofore. By way of example but not limitation since a common test lab can be dynamically shared between a plurality of test people who are located remotely from one another different development teams e.g. hardware development firmware development driver software development application software development and the like can perform their own specialized testing of a particular DUT on a particular supporting host device without having to physically transport the DUT and host device from one test lab to the next and so on and without having to produce redundant DUTs or procure redundant host devices. Additionally since a particular DUT and a particular host device do not have to be physically co located in the same test lab in order for the DUT to be tested on the host device any time and expense associated with having to physically transport either the DUT or host device so that they are co located is eliminated.

Referring again to the switch sends a series of servo motor control commands to each servo motor control interface module coupled to the switch where these commands control the mechanical actions performed by each servo motor coupled to the interface module. Whenever the interface module receives such a command it sends the appropriate signals to the servo motors which result in the motors performing a mechanical action s on the DUT coupled to the motors. In this manner the servo motors perform an automated series of prescribed mechanical actions on the DUT coupled thereto. The particular nature of each servo unit s mechanical actions is tailored to the needs of the particular DUT which is coupled thereto and the needs of the prescribed test procedure which is being implemented to test the DUT. Exemplary mechanical actions include pressing buttons on a keyboard moving a joystick pressing a power on off switch and the like. As such each servo unit facilitates automated testing of such a DUT by eliminating the need for a test person to have to manually interact with the DUT to complete the testing. Furthermore the need for a test person to have to be present in the test lab during the DUT testing is eliminated. It is also noted that the mechanical design of the servo unit is flexible so that it can be modified to support different mechanical action schemes on different types of DUTs using different types of electrical mechanical devices such as linear motors and the like.

Referring again to the switch fabric module contains a data switch fabric unit which is coupled to a group of downstream data signals emanating from each of the downstream port connectors where these signals carry data traffic to and from a device which may be coupled to these connectors . The data switch fabric unit is also coupled to a group of upstream data signals emanating from each of the upstream port connectors where these signals carry data traffic to and from a device which may be coupled to these connectors . The data switch fabric unit is dynamically configurable and operates to electrically connect in a point to point manner the upstream data signals emanating from any upstream port connector to the downstream data signals emanating from any downstream port connector . It is noted that this electrical connection can be either unidirectional or bidirectional based on the particular type of port that is employed.

Referring again to and as described heretofore a variety of types of ports can be employed for the upstream ports and downstream ports of the switch . In the case where a particular type of port is employed that contains one or more power signals in addition to data signals e.g. the aforementioned USB port type the switch fabric module will also contain a power distribution switch fabric unit which will be coupled to the downstream power signal s emanating from each of the downstream port connectors and will also be coupled to the upstream power signal s emanating from each of the upstream port connectors . The optional power distribution switch fabric unit is dynamically configurable and operates to electrically connect in a point to point manner the upstream power signal s emanating from any upstream port connector to the downstream power signal s emanating from any downstream port connector .

Referring again to the computing device generates a group of control signals which are coupled to the switch fabric module . The control signals dynamically control the configuration of the data switch fabric unit and the optional power distribution switch fabric unit in tandem. In other words whenever the switch contains both the data switch fabric unit and the power distribution switch fabric unit the configuration of the two switch units is controlled in tandem such that the upstream data signals and power signal s emanating from a particular upstream port connector are connected as a pair to the downstream data signals and power signal s emanating from a particular downstream port connector . The computing device is also coupled to the network port . A data channel also exists between the data switch fabric unit and the computing device . The data channel provides the computing device with access to the upstream data signals emanating from each of the upstream port connectors and access to the downstream data signals emanating from each of the downstream port connectors . The data channel is used by the computing device to establish the aforementioned logical connection between the network port and any of the upstream ports or downstream ports . In the case where a servo unit is coupled to a particular upstream port on the switch the computing device would also use the data channel to send servo motor control commands to the servo unit via the particular upstream port s data signals where these commands serve to dynamically control the mechanical actions of the servo motors contained in the servo unit.

Referring again to all commands and data traffic received by the switch over the network not shown via the network port are processed as needed by the computing device . In other words the computing device generally controls the operation of the switch based on commands and data traffic it receives from either a test controller device or another switch. By way of example but not limitation in the case where the switch receives a command to establish a point to point electrical connection between a device not shown which is coupled to a particular upstream port and another device not shown which is coupled to a particular downstream port the computing device will generate the control signals necessary to configure the switch fabric to establish the connection between the particular upstream and downstream ports. In the case where the switch receives a command to establish a logical connection across the network between a local device not shown which is coupled to an upstream or downstream port on the switch note that the first device could be coupled to any of the upstream or downstream ports and a remote device not shown which is coupled to a remote switch not shown the computing device will operate as follows. Data traffic sent from the local device to the switch via the upstream downstream port will be received over the data channel by the computing device and will be sent by the computing device over the network via the network port to the remote switch. Data traffic received over the network from the remote switch will be received by the computing device via the network port and will be sent by the computing device over the data channel to the local device via the appropriate upstream downstream port .

Referring again to each test controller device generally operates to control each switch and servo unit in a coordinated manner according to a prescribed test procedure. More particularly based upon input from a test person into the user interface of the test controller device the test application module communicates with the switch communication module via the API module in order to send commands to each switch where these commands generally control the switch s configuration determine its current status and control any servo units which may be coupled to the switch. The switch communication module sends the commands to the appropriate switch and receives status responses therefrom via a first communication protocol . The test controller communication module of the appropriate switch receives commands from the test controller device and communicates with the hardware control module and servo control module as necessary to complete the operation indicated by the received commands.

Referring again to and whenever the switch receives a command from the test controller device via the first communication protocol which necessitates that the switch sends a response to the test controller device the test controller communication module sends the response to the test controller device via the first communication protocol. The test controller communication module of a first switch also communicates directly with the test controller communication module of a second switch via a second communication protocol in order to bidirectionally transfer data traffic between a first device which is coupled to a port on the first switch and a second device which is coupled to a port on the second switch. Whenever the switch receives a servo unit control command from the test controller device via the first communication protocol which necessitates that a new mechanical action be performed by a servo unit coupled to the switch the servo control module sends one or more servo motor control commands to the servo unit via a third communication protocol . In this manner the servo motors contained in the servo unit can be precisely controlled to perform a series of mechanical actions on the DUT coupled thereto such as pressing a sequence of buttons on a keyboard and the like and these actions can be coordinated with dynamic changes to the switch s configuration according to a prescribed test procedure.

While the DCS framework has been described in detail by specific reference to embodiments thereof it is understood that variations and modifications thereof can be made without departing from the true spirit and scope of the DCS framework. By way of example but not limitation and referring again to the servo control module described heretofore can be implemented in a separate servo controller device residing outside the dynamically configurable switch . In this case the servo controller device could control a plurality of servo units .

By way of further example one or more servo units can be optionally employed in a test lab containing one or more host devices to which mechanical action must be applied in order to complete the host device and or DUT testing in real world operating scenarios. In this case the servo motor control interface module of each servo unit would be coupled to a downstream port on a dynamically configurable switch in the test lab in the manner described heretofore. The one or more servo motors contained in each servo unit would be mechanically coupled to a particular host device in the test lab where the host device is coupled to another downstream port on the switch. The switch would send a series of servo motor control commands to each servo motor control interface module coupled to the switch where these commands control the mechanical actions performed by each servo motor coupled to the interface module. Whenever the interface module receives such a command it would send the appropriate signals to the servo motors which result in the motors performing one or more mechanical actions on the host device coupled to the motors. In this manner the servo motors could perform an automated series of prescribed mechanical actions on the host device coupled thereto. The particular nature of each servo unit s mechanical actions would be tailored to the needs of the particular host device which is coupled thereto and the needs of the prescribed test procedure which is being implemented to test the host device and or the DUT which is coupled to the host device.

It is also noted that any or all of the aforementioned embodiments can be used in any combination desired to form additional hybrid embodiments. Although the DCS framework embodiments have been described in language specific to structural features and or methodological acts it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described heretofore. Rather the specific features and acts described heretofore are disclosed as example forms of implementing the claims.

This section provides a brief general description of a suitable computing system environment in which portions of the DCS framework embodiments described herein can be implemented. These DCS framework embodiments are operational with numerous general purpose or special purpose computing system environments or configurations. Exemplary well known computing systems environments and or configurations that can be suitable include but are not limited to personal computers PCs server computers hand held or laptop devices multiprocessor systems microprocessor based systems set top boxes programmable consumer electronics network PCs minicomputers mainframe computers distributed computing environments that include any of the aforementioned systems or devices and the like.

As exemplified in an exemplary system for implementing portions of the DCS framework embodiments described herein includes one or more computing devices such as computing device . In its simplest configuration computing device typically includes at least one processing unit and memory . Depending on the specific configuration and type of computing device the memory can be volatile such as RAM non volatile such as ROM and flash memory among others or some combination of the two. This simplest configuration is illustrated by dashed line .

As exemplified in computing device can also have additional features and functionality. By way of example computing device can include additional storage such as removable storage and or non removable storage . This additional storage includes but is not limited to magnetic disks optical disks and tape. Computer storage media typically embodies volatile and non volatile media as well as removable and non removable media implemented in any method or technology. The computer storage media provides for storage of various information needed to operate the device such as computer readable instructions associated with an operating system application programs and other program modules and data structures among other things. Memory removable storage and non removable storage are all examples of computer storage media. Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical disk storage technology magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by computing device . Any such computer storage media can be part of computing device .

As exemplified in computing device also includes a communications connection s that allows the device to operate in a networked environment and communicate with a remote computing device s such as remote computing device s . Remote computing device s can be a PC a server a router a peer device or other common network node and typically includes many or all of the elements described herein relative to computing device . Communication between computing devices takes place over a network s which provides a logical connection s between the computing devices. The logical connection s can include one or more different types of networks including but not limited to a local area network s LAN and wide area network s WAN . Such networking environments are commonplace in conventional offices enterprise wide computer networks intranets and the Internet. It will be appreciated that the communications connection s and related network s described herein are exemplary and other means of establishing communication between the computing devices can be used.

As exemplified in communications connection s and related network s are an example of communication media. Communication media typically embodies computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term modulated data signal means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example but not limitation communication media includes wired media such as a wired network or direct wired connection and wireless media such as acoustic radio frequency RF infrared frequency modulation FM radio and other wireless media. The term computer readable medium as used herein includes both the aforementioned storage media and communication media.

As exemplified in computing device also includes an input device s and output device s . Exemplary input devices include but are not limited to a keyboard mouse pen touch input device microphone and camera among others. A user can enter commands and various types of information into the computing device through the input device s . Exemplary output devices include but are not limited to a display device s a printer and audio output devices among others. These input and output devices are well known and need not be described at length here.

Referring again to the DCS framework embodiments described herein can be further described in the general context of computer executable instructions such as program modules which are executed by computing device . Generally program modules include routines programs objects components and data structures among other things that perform particular tasks or implement particular abstract data types. The DCS framework embodiments can also be practiced in a distributed computing environment where tasks are performed by one or more remote computing devices that are linked through a communications network . In a distributed computing environment program modules can be located in both local and remote computer storage media including but not limited to memory and storage devices .

