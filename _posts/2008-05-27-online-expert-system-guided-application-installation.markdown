---

title: Online expert system guided application installation
abstract: An online expert system that can communicate software installation instructions to a remote node through the use of a generic installer executing on the remote node is provided. Embodiments of the online expert system can identify a set of installation instructions configured to install a software product on the remote node, execute the set of installation instructions, record results of the execution of the installation instructions, and, if an error is detected in the results, submit the results for analysis to determine whether a solution to the error is available and execute the solution, if any. Aspects of the online expert system provide for the executing of the installation instructions to include communicating installation-related information to the remote node over a network. Further aspects of the online expert system provide for executing a solution to an error to include communicating solution-related information to the remote node over the network.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09058230&OS=09058230&RS=09058230
owner: Symantec Operating Corporation
number: 09058230
owner_city: Mountain View
owner_country: US
publication_date: 20080527
---
The present invention relates to the field of computer software installation and particularly to a system and method for performing software installations from a centralized online expert system that provides product installation instructions fixes for any errors that occur during software installation or subsequent testing.

Computers both those used in the home and those used by businesses find much of their utility based in the software that is executed upon those computers. In many case the first experience that a computer user or system administrator has with software is during the process of installing the software on a computer. It is often said that the first impression is the most important and this holds true as much in a software context as in any other.

Since installation is often the first encounter a customer has with a product any negative experience can be detrimental to the quality associated with that product by the customer. For example if a customer is evaluating software and cannot get the product installed it is likely that the customer will not purchase the software later. Such installation problems may often go undetected by those responsible for creating installation methods for software e.g. software engineers because there has been no reliable method for providing information as to such failures. In the past often sales or technical support has had to rely upon customer experiential information rather than hard data related to an installation failure.

Another issue presented to customers experiencing software installation failure has been an inability for the customer to automatically receive help either in the form of a fix for the problem or links to advice for solving the problem or even communication from a technical support agent. It is therefore desirable to have a mechanism by which data related to a software installation failure is provided to members of the entity distributing the software as well as a mechanism for automatically providing a solution or at least information related to the problem automatically to the customer.

In order to avoid delays in propagating fixes to installation related failures it is also desirable to have a mechanism by which propagation of solutions can be rapidly provided. It is further desirable to have a mechanism by which a newly discovered installation related failure can be rapidly remedied by providing an avenue for technical support agents to interact with a software installation that is currently in a failure mode.

Embodiments of the present invention provide an online expert system that can communicate software installation instructions to a remote node through the use of a generic installer executing on the remote node. Embodiments of the online expert system can identify a set of installation instructions configured to install a software product on the remote node execute the set of installation instructions record results of the execution of the installation instructions and if an error is detected in the results submit the results for analysis to determine whether a solution to the error is available and execute the solution if any. Aspects of the online expert system provide for the executing of the installation instructions to include communicating installation related information to the remote node over a network. Further aspects of the online expert system provide for executing a solution to an error to include communicating solution related information to the remote node over the network.

Another aspect of the above embodiments of the online expert system includes receiving from the remote node an identification of the software product to install and in response to receiving this identification requesting configuration information about the configuration of the remote node. A further aspect of the above embodiments of the online expert system includes identifying the set of installation instructions using the identification of the software product and the remote node s configuration information. An additional aspect of the above embodiments of the online expert system is that the communicating is performed via an application programming interface installed on the remote node.

Embodiments of the present invention provide an online expert system that can communicate software installation instructions to a remote node through the use of a generic installer executing on the remote node. Once the remote node requests to install a specified product the expert system can instruct the generic installer to gather configuration information about the remote node and provide that information to the expert system. Based upon the product identification and the configuration information of the remote node the expert system can then select an appropriate set of instructions for installing the specified product on the remote node and then communicate the necessary instructions and files to the remote node for installing the software. Further embodiments of the present invention can respond to errors occurring in the installation of the software on the remote node by automatically searching a database of reported errors and their solutions and providing a found solution to the encountered error. In the event that a solution to an installation error is not found embodiments of the present invention can contact a technical support agent who can provide instructions to the remote node to overcome the installation related errors. Embodiments of the present invention can further maintain logs and other files related to all software installations performed by the expert system in order to provide detailed feedback to technical support agents who can use this information to improve installation processing. Further embodiments of the invention can also track software user licenses and report on installations performed by the expert system.

Embodiments of the present invention can be used to overcome a variety of installation related issues associated with current methods of software installation. For example in current software application installations all possible situations should be accounted for in the installer logic. Once the installer is shipped to a customer discovered bugs that can cause installation failures are difficult to impossible to remedy. In many such cases the customer must manually get new install media containing fixes for the problem or download a new version of the installer. In addition when many current installers encounter an error that prevents installation they will just provide the user an error message or a means to contact technical support which effectively leaves the customer to fend for themselves. Current installers do not centrally track information about installations e.g. log files so it is difficult to collect data on the quality of installers being shipped to customers. Embodiments of the present invention address all of these shortcomings of current installers.

Remote node is coupled to installation server via a network . Embodiments of the present invention are agnostic to the nature of network and only require that network provide a means of communication between remote node and installation server . Network can for example be a local area network a metro area network a wide area network or any combination thereof.

Thus generic installer is used to primarily provide a mechanism by which the central online expert system can provide installation related instructions to remote node and receive information regarding the progress of an installation from remote node . In order to provide a mechanism by which such information can be exchanged embodiments of generic installer provide an application programming interface API coupled to a network interface that allows the central online expert system to provide instructions to remote node . In this manner the central online expert system can always use a common set of instructions for any node that is performing an install regardless of the nature of that node e.g. processor operating system type and operating system version .

Generic installer can further provide an installation processing module that is coupled to API . Installation processing module can implement the received installation related instructions from the central online expert system. For example installation processing module can execute instructions to decompress files received from installation server or execute executable files received from installation server . Further embodiments of generic installer can also include a status reporting module that is configured to report to central online expert system information related to the status of an install being performed by generic installer . Such status information can include log files and error related information.

Application programming interface is configured to receive and relay installation related commands and information from and to central online expert system . As will be discussed in more detail below in order to assist in determining appropriate software installation packages to provide to a remote node or to determine whether it is indeed appropriate to install a requested software product the central online expert system can require information about the configuration of remote node . Application programming interface can be configured to receive and convey those requests and instructions to installation processing module or directly interface with the processor of remote node . Examples of commands that can be provided to API include 

It should be noted that the above list of API commands is not intended to be exclusive and can be varied over time as additional functionality is added to the central online expert system. The generic installer is configured as a proxy for the central online expert system at the remote node and is therefore configured to flexibly implement changes made to the central online expert system. In addition in response to each API command the generic installer can return result information from the remote node to the central online expert system. Such information can inform the central online expert system of a successful completion of the command failure of the command or information responsive to queries or other analysis requested by the command.

In embodiments of the present invention install processor performs the bulk of installation related processing for remote nodes communicating with installation server . For example upon receiving a request to install an identified software product install processor can query a product database to determine the types of configuration information about the requesting remote node to request. Such configuration information is used to decide for example which version of the specified software product should be installed on the remote node or if the specified product can be installed on the remote node.

Product database can contain for example entries for each available software item. Each entry can reference one or more templates describing information needed from a remote node in order to perform decision making as to the specified software product. Installation processor can then use the information provided by the template to assemble one or more requests to query remote node for the described information. Those requests can then be communicated to the remote node via communication module to API executing on the remote node. The requests and the responses to those requests can include identifying information related to the remote node performing the installation so that central online expert system can properly track information related to a specific installation.

Once the central online expert system has received the requested information from the remote node install processor can then select an appropriate product installer for the selected product from a product installer database . Product installer database can take the form of a storage volume containing product installers configured for each available product in light of for example operating system environment on which the product will be installed or any other system related variable queried by the central online expert system. Install processor can then execute the retrieved product installer performing tasks specified by the product installer. Such tasks can include for example providing compressed files or executable files to remote node which can then be executed by generic installer .

During the course of executing the product installer install processor can record the progress of the product install in an installation database . Information can be recorded in the form of for example log files or database entries. Status information recorded in this manner will include an identifier of the remote node on which the installation is performed and an identifier of the product being installed in order to provide a means to track the installations.

Once an installation is completed install processor can access one or more tests for the installed software from a test database . Install processor can supervise testing of the software through generic installer and receive those results and record them in installation database .

During the course of installation and testing install processor can monitor the status of the installation in order to determine if an error has occurred in either the installation or subsequent testing. In the event of an error install processor can inform an error processor of the error e.g. via information received in response to API commands executed by the generic installer . Error processor can then perform a review of the stored status information in installation database . From any error code and other information in the installation database error processor can attempt to determine the nature of the error and then determine if a solution to the error is available. Error processor can determine if a solution is available by for example searching a solutions database for any solutions related to the recorded failure related information. Error processor can collect sufficient information from installation database to enable an efficient search of solutions database . Such information can include for example product name product version error code and information from log files relative to the reported error code. If error processor finds a solution to the reported problem the error processor can provide that solution to install processor which can then implement the solution through communication with generic installer installed on remote node .

If however error processor fails to discover a solution to the problem the error processor can communicate with a technical support agent through an agent interface . Through the use of the agent interface the technical support agent can examine the nature of an installation related error and take control of the installation session. In one embodiment of the present invention the technical support agent has available the same commands to issue to the remote node that the central online expert system can. Using such commands the technical support agent can transmit queries to the remote node or provide a solution to the remote node through the same communication path utilized by install processor . In this manner involvement of a technical support agent can be a seamless transition from a point of view of a user on remote node . In addition a log can be maintained of the commands performed by the technical support agent which can then be edited and added to solutions database associated with the identified error.

Alternatively should no solution be available in solutions database error processor can provide to a user on remote node information on how to contact a technical support person or provide a source for additional information e.g. a website URL . Embodiments of the present invention can include a database identifying a level of support paid for by a customer associated with the remote node. For example a technical support agent can be contacted if the customer has paid for that level of support. If the customer has not then they can just be provided with the URL for additional information or an option to purchase the services of a technical support agent for the current problem.

It should be noted that the generic installer can be introduced to the remote node in a variety of ways. For example a customer can initiate an online purchase of the software product and upon the completion of the transaction for the purchase the generic installer can be installed on the user s computer in order to perform the installation of the software product. Alternatively a customer can purchase software on a computer readable storage medium and the computer readable storage medium can include the generic installer. In the scenario in which a user purchases computer readable storage media that computer readable storage media can also include executable and compressed files related to the installation. How those files are utilized will be discussed further below.

Once the central online expert system receives the initial contact from the remote node the software identification can be used to determine what additional system information regarding the remote node should be requested . As discussed above one mechanism for making such a determination is to perform a search of a product database using the name and version of the selected software product as a key to identify an associated template file. The associated template file can include identification of the various pieces of system information required in order to make a determination as to whether the selected software product can be installed on the system and if so which product installer should be used to perform the installation. In one embodiment of the present invention as discussed above such system information is requested using API commands to the generic installer. In response the generic installer provides the required information which is received by the central online expert system. If the received system information contraindicates installation of the selected software product then the central online expert system can notify the remote node of the reasons for the contraindication .

As stated above the system information is used to identify the installation instructions for the system environment of the remote node . Embodiments of the present invention can for example maintain sets of flow charts of instructions for the central online expert system to follow for various system environment scenarios. Such instructions can include downloading files to the remote node copying files providing cabinet type compressed files to the remote node uncompressing files from a cabinet file reading and writing registry values and launching executables on the remote node. Installation instructions are executed by the central online expert system and implemented on the remote node through the use of an application programming interface that is part of the generic installer . For example the flow chart of instructions is followed based upon results received from the back and forth communication between generic installer and central online expert system and continues until the installation is completed or an error occurs that terminates the installation. During this period of executing the installation instructions the central online expert system maintains log files and other data related to the installation. If an error occurs during the course of the product installation then a knowledge base can be searched for a solution to the problem . If a solution is found then instructions related to the solution can be executed and implemented on the remote node . If no solution is found to the installation error then a technical support agent can be contacted to provide guidance . If no error occurred during the installation then test instructions can be communicated to the generic installer . As discussed above test instructions can be provided by a search of a test database and executed and implemented on the remote node. If no error occurs during the testing of the software installation then the remote node can be notified of a successful installation . If an error occurs during the testing phase then the knowledge base can be searched for a solution to the test error . If a solution is found to the test error then the solution can be executed by the central online expert system and implemented on the remote node . Such a solution can include a reinstallation of all or part of the product. Subsequent to the reinstallation additional testing can occur as discussed above. In addition if no solution to the test error is found then a technical support agent can be contacted to provide assistance . Alternatively step can make a determination if a customer associated with the remote node has paid for a level of support providing a technical support agent. If so then the agent can be contacted. If not then a reference to a support site can be provided to the remote node or an option to purchase technical support for this problem can be provided.

In the instances where a customer has purchased computer readable storage media that includes a software distribution the central online expert system can determine whether the images on the computer readable storage media are the most recent images available for the software installation. If the images on the computer readable storage media are the most recent then the central online expert system can instruct the generic installer to utilize those images during the course of the software installation. Alternatively if the images on the computer readable storage media are not the most recent then the central online expert system can provide images from the product installer database as discussed above.

Through use of the above described system software installation is provided from a centrally managed source. Further software installation related errors are addressed during the course of installation thereby seamlessly providing a clean install for the remote node user. In addition support from a technical support agent is automatically provided in the event that no readily identifiable fixes are found.

As shown above the present invention can be implemented using a variety of computer systems and networks. An example of one such computing and network environment is described below with reference to .

Bus allows data communication between central processor and system memory which may include read only memory ROM or flash memory neither shown and random access memory RAM not shown as previously noted. The RAM is generally the main memory into which the operating system and application programs are loaded. The ROM or flash memory can contain among other code the Basic Input Output system BIOS which controls basic hardware operation such as the interaction with peripheral components. Applications resident with computer system are generally stored on and accessed via a computer readable medium such as a hard disk drive e.g. fixed disk an optical drive e.g. optical drive a floppy disk unit or other storage medium. Additionally applications can be in the form of electronic signals modulated in accordance with the application and data communication technology when accessed via network modem or interface .

Storage interface as with the other storage interfaces of computer system can connect to a standard computer readable medium for storage and or retrieval of information such as a fixed disk drive . Fixed disk drive may be a part of computer system or may be separate and accessed through other interface systems. Modem may provide a direct connection to a remote server via a telephone link or to the Internet via an internet service provider ISP . Network interface may provide a direct connection to a remote server via a direct network link to the Internet via a POP point of presence . Network interface may provide such connection using wireless techniques including digital cellular telephone connection Cellular Digital Packet Data CDPD connection digital satellite data connection or the like.

Many other devices or subsystems not shown may be connected in a similar manner e.g. document scanners digital cameras and so on . Conversely all of the devices shown in need not be present to practice the present invention. The devices and subsystems can be interconnected in different ways from that shown in . The operation of a computer system such as that shown in is readily known in the art and is not discussed in detail in this application. Code to implement the present invention can be stored in computer readable storage media such as one or more of system memory fixed disk optical disk or floppy disk . The operating system provided on computer system may be MS DOS MS WINDOWS OS 2 UNIX Linux or another known operating system.

Moreover regarding the signals described herein those skilled in the art will recognize that a signal can be directly transmitted from a first block to a second block or a signal can be modified e.g. amplified attenuated delayed latched buffered inverted filtered or otherwise modified between the blocks. Although the signals of the above described embodiment are characterized as transmitted from one block to the next other embodiments of the present invention may include modified signals in place of such directly transmitted signals as long as the informational and or functional aspect of the signal is transmitted between blocks. To some extent a signal input at a second block can be conceptualized as a second signal derived from a first signal output from a first block due to physical limitations of the circuitry involved e.g. there will inevitably be some attenuation and delay . Therefore as used herein a second signal derived from a first signal includes the first signal or any modifications to the first signal whether due to circuit limitations or due to passage through other circuit elements which do not change the informational and or final functional aspect of the first signal.

With reference to computer system modem network interface or some other method can be used to provide connectivity from each of client computer systems and to network . Client systems and are able to access information on storage server A or B using for example a web browser or other client software not shown . Such a client allows client systems and to access data hosted by storage server A or B or one of storage devices A N B N N or intelligent storage array . depicts the use of a network such as the Internet for exchanging data but the present invention is not limited to the Internet or any particular network based environment.

The present invention is well adapted to attain the advantages mentioned as well as others inherent therein. While the present invention has been depicted described and is defined by reference to particular embodiments of the invention such references do not imply a limitation on the invention and no such limitation is to be inferred. The invention is capable of considerable modification alteration and equivalents in form and function as will occur to those ordinarily skilled in the pertinent arts. The depicted and described embodiments are examples only and are not exhaustive of the scope of the invention.

The foregoing describes embodiments including components contained within other components e.g. the various elements shown as components of computer system . Such architectures are merely examples and in fact many other architectures can be implemented which achieve the same functionality. In an abstract but still definite sense any arrangement of components to achieve the same functionality is effectively associated such that the desired functionality is achieved. Hence any two components herein combined to achieve a particular functionality can be seen as associated with each other such that the desired functionality is achieved irrespective of architectures or intermediate components. Likewise any two components so associated can also be viewed as being operably connected or operably coupled to each other to achieve the desired functionality.

The foregoing detailed description has set forth various embodiments of the present invention via the use of block diagrams flowcharts and examples. It will be understood by those within the art that each block diagram component flowchart step operation and or component illustrated by the use of examples can be implemented individually and or collectively by a wide range of hardware software firmware or any combination thereof.

The present invention has been described in the context of fully functional computer systems however those skilled in the art will appreciate that the present invention is capable of being distributed as a program product in a variety of forms and that the present invention applies equally regardless of the particular type of signal bearing media used to actually carry out the distribution. Examples of signal bearing media include computer readable storage media transmission type media such as digital and analog communications links as well as media storage and distribution systems developed in the future.

The above discussed embodiments can be implemented by software modules that perform certain tasks. The software modules discussed herein may include script batch or other executable files. The software modules may be stored on a machine readable or computer readable storage media such as magnetic floppy disks hard disks semiconductor memory e.g. RAM ROM and flash type media optical discs e.g. CD ROMs CD Rs and DVDs or other types of memory modules. A storage device used for storing firmware or hardware modules in accordance with an embodiment of the invention can also include a semiconductor based memory which may be permanently removably or remotely coupled to a microprocessor memory system. Thus the modules can be stored within a computer system memory to configure the computer system to perform the functions of the module. Other new and various types of computer readable storage media may be used to store the modules discussed herein.

The above description is intended to be illustrative of the invention and should not be taken to be limiting. Other embodiments within the scope of the present invention are possible. Those skilled in the art will readily implement the steps necessary to provide the structures and the methods disclosed herein and will understand that the process parameters and sequence of steps are given by way of example only and can be varied to achieve the desired structure as well as modifications that are within the scope of the invention. Variations and modifications of the embodiments disclosed herein can be made based on the description set forth herein without departing from the scope of the invention.

Consequently the invention is intended to be limited only by the scope of the appended claims giving full cognizance to equivalents in all respects.

Although the present invention has been described in connection with several embodiments the invention is not intended to be limited to the specific forms set forth herein. On the contrary it is intended to cover such alternatives modifications and equivalents as can be reasonably included within the scope of the invention as defined by the appended claims.

Although the present invention has been described in connection with several embodiments the invention is not intended to be limited to the specific forms set forth herein. On the contrary it is intended to cover such alternatives modifications and equivalents as can be reasonably included within the scope of the invention as defined by the appended claims.

