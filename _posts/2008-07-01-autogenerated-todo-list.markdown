---

title: Auto-generated to-do list
abstract: Methods, systems, and computer readable media for providing an auto-generated to-do list are described. Text is received in an instant messenger conversation, wherein the text comprises a task sender, a task body, and a task date, and an input is received selecting a selection of the text, wherein the selection comprises the task body. The text is analyzed to identify the task sender, the task body, and the task date. The task is then entered into the to-do list, wherein the task comprises the task sender, the task body, and the task date, thereby providing an auto-generated to-do list.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08108206&OS=08108206&RS=08108206
owner: International Business Machines Corporation
number: 08108206
owner_city: Armonk
owner_country: US
publication_date: 20080701
---
With today s workforce being spread across the globe many employees interact with each other in real time via instant messaging services. During these interactions employees are often assigned tasks to complete with specific deadlines. It is then up to the employee to add that task to their own calendar or to do list to ensure that the task gets completed on time. With this approach employees often forget to add the task to their to do lists in a timely fashion and can forget the context of the assignment when they endeavor to complete it later. This can lead to the task being performed incorrectly or being forgotten entirely.

Methods systems and computer readable media for providing an auto generated to do list are described. Text is received in an instant messenger conversation wherein the text comprises a task sender a task body and a task date and an input is received selecting a selection of the text wherein the selection comprises the task body. The text is analyzed to identify the task sender the task body and the task date. The task is then entered into the to do list wherein the task comprises the task sender the task body and the task date thereby providing an auto generated to do list.

In an exemplary embodiment a user can be prompted to verify the task sender the task body and the task date.

The entering the task into the to do list can include generating a task entry into the to do list wherein the entry comprises the task sender the task body and the task date. In an exemplary embodiment a transcript of the instant messenger conversation can be appended to the task entry. Also a link to a file containing a transcript of the instant messenger conversation can be appended to the task entry.

In an exemplary embodiment an input can be received defining a time period before the task date to begin causing reminder messages to be sent.

An option may be provided to enter the task into a follow up list. The follow up list and the to do list can be mutually exclusive. Also a combined task list can be provided that includes the to do list and the follow up list wherein tasks from the follow up list are marked differently from tasks from the to do list.

In an exemplary embodiment the analyzing the selection of the text can be performed by locating keywords identifying the task sender the task body and the task date.

The to do list can be integrated with a calendar feature of an e mail program. Furthermore a message can be sent related to the task to be displayed when the task date arrives.

Processes systems and computer readable media for providing an auto generated to do list are described. The following description is presented to enable one of ordinary skill in the art to make and use the invention and is provided in the context of a patent application and its requirements. Various modifications to the preferred embodiments and the generic principles and features described herein will be readily apparent to those skilled in the art. Thus the present invention is not intended to be limited to the embodiments shown but is to be accorded the widest scope consistent with the principles and features described herein.

Each IM message is transmitted from a task sender to one or more addressed task recipients . Although IM messages are typically text based IM messages may also include voice digital images and video. The task sender and the addressed task recipients are typically computers but can also be any other device used to send and or receive IM messages such as a mobile telephone or a handheld computer. When the IM message is received it can be appended to IM conversation which can be a transcript including all of the IM messages sent and received by the task sender and the task recipient .

According to the exemplary embodiment an auto generator for a to do list is provided that can create task entries in the to do list from the IM conversation . The auto generator receives text from the IM client and creates entries in the to do list based upon the contents of the text. In one embodiment the auto generator may reside on the same computer as the IM client from which it generates task entries into the to do list .

The to do list can be a service providing a user s tasks laid out in a chronologically arranged list. The to do list can be integrated with a calendar or similar existing feature of an e mail application or a calendar application or can be a standalone application. In an exemplary embodiment the to do list the IM client and the auto generator can be part of the same application. In an exemplary embodiment the to do list can cause messages to be displayed when a task is due or in a predetermined amount of time prior to when the task is due. Also in an exemplary embodiment the to do list can cause messages to be displayed when a task is due.

The auto generator may be implemented in several ways. For example the auto generator may be implemented as any of the following as part of a customized IM client as a plug in to the IM client as a plug in to the to do list or the application that includes the to do list as a feature as an application programming interface API or as a stand alone application. Together the auto generator and the to do list can help a user keep track of tasks assigned to the user and can provide the user with the context of the task if the user elects to perform the task at a later date.

In an exemplary embodiment the auto generator can be configured to provide an option to provide entries into a follow up list . The follow up list can be used by the task sender to remember the context of the task sent to the task recipient and to follow up when the task is due. The follow up list can be mutually exclusive from the to do list as shown in or can appear on a combined task list. The combined task list can include the to do list and the follow up list and tasks from the follow up list can be marked differently from tasks from the to do list.

While the exemplary embodiment shown in shows an IM system that uses the auto generator for a to do list the auto generator for a to do list is not restricted to an IM system environment. In another embodiment the auto generator for a to do list could receive the text from any text based communication medium e.g. an e mail system or a web message board viewed in a web browser .

Text is received in an instant messenger chat wherein the text includes a task sender a task body and a task date block . The text can be within the IM conversation for example. The task sender can be the individual that communicates the task to the task recipient and the task sender may be the same or different as the sender of an IM message containing the task body and task date. The task body can be a description of the task that needs to be completed. The task date can be the due date of the task or another date that is relevant to the completion of the task. The task date can include a time and a date or can include only a date and the time for the task can be set at a default predetermined time e.g. 9 00 AM of the due date or 5 00 PM of the due date or any other suitable time .

An input is received selecting a selection of the text wherein the selection includes at least the task body block . The selection of the text can include a portion of the text of an IM message or an IM conversation for example. The selection of the text can also include the task sender and task date but this is unnecessary because the task sender and the task date can be determined contextually in certain exemplary embodiments as discussed below . In an exemplary embodiment if the task date is not included within the selection of the text a default setting can be applied whereby the task date is assumed to be the same day the IM message is sent.

While the embodiment shown in shows receiving a selection of the text in an exemplary embodiment no text need be selected. Instead incoming IM messages can be analyzed to determine if their contents include the task body task sender and or task date. In another exemplary embodiment the IM conversation can be analyzed at a predetermined time e.g. at regular intervals or when the IM conversation is closed to locate the task body task sender and or task date. In such embodiments the user can be presented with the option to accept decline or modify the task entry before it is entered into the to do list. Is this embodiment OK 

A request is received to add a task to a to do list block . The request can be performed for example by right clicking on the selection of the text or by using a drop down menu. The task being added can be described in the task body can originate from the task sender and be due at the task date for example.

The selection of the text is analyzed to identify the task sender the task body and the task date block . In an exemplary embodiment the analyzing the selection of the text is performed by locating keywords identifying the task sender the task body and the task date. The keywords can be commonly used phrases or words that indicate the task sender the task body and or the task date. Examples of keywords that can be used to identify the task body include do perform need and the like. Keywords indicating date can be commonly used date formats and nomenclature e.g. names of days months periods of times etc. . Keywords associated with the task sender can include for or from for example.

The task sender can be also identified for example by searching the selection of the text for a name on a contact list which can be imported from the IM client or from an e mail application for example. Alternatively the task sender can be identified contextually through the IM client by identifying the individual that sent the IM message containing the task body for example.

The task is entered into the to do list wherein the task comprises the task sender the task body and the task date block . After the keywords are located for example then the text adjacent to the keywords can be inserted into fields for task sender task body and task date respectively and the task can be stored into the to do list. In an exemplary embodiment a task entry is generated into the to do list wherein the entry includes the task sender the task body and the task date. The task entry can be a discrete page or area in the to do list dedicated exclusively to the task. The task entry can also be assigned a suggested task title in some embodiments. The task title can be assigned when the selection of the text is analyzed and can be determined based upon context in some embodiments e.g. the first sentence of the task body .

A transcript of the IM conversation or a link to a file containing a transcript of the IM conversation may be appended to the task entry. Allowing a user to have immediate access to the entire IM conversation can be advantageous because the user may want to remember the context under which the task was assigned. Using a link to a separate file can be advantageous because it can prevent the task entry from becoming cluttered with potentially irrelevant material from the IM conversation .

The user can be prompted to verify the task sender the task body and the task date block . At this step the user can opt to change any of the task sender the task body the task date and if applicable the task title to better suit the user s preferences.

An input can be received defining a time period before the task date to begin causing reminder messages to be displayed block . This can be advantageous in situations where the user would prefer to be reminded before the task date that the task needs to be performed.

A message related to the task to can be displayed when the task date arrives block . The message can include information descriptive of the task e.g. the task title or the task body . Displaying such messages can be advantageous because it can permit the user to be aware that the task is due without requiring the user to view the to do list.

While the process shown in is described with respect to a task entry in a to do list it is equally applicable to embodiments where a follow up list is used instead of the to do list. The auto generation of task entries functions essentially in the same manner in follow up list embodiments.

In an exemplary embodiment the invention is implemented in software which includes but is not limited to firmware resident software microcode etc. The invention can take the form of a computer program product accessible from a computer usable or computer readable medium providing program code for use by or in connection with a computer or any instruction execution system. For the purposes of this description a computer usable or computer readable medium can be any apparatus that can contain store communicate propagate or transport the program for use by or in connection with the instruction execution system apparatus or device.

The medium can be an electronic magnetic optical electromagnetic infrared or semiconductor system or apparatus or device or a propagation medium. Examples of a computer readable medium include a semiconductor or solid state memory magnetic tape a removable computer diskette a random access memory RAM a read only memory ROM a rigid magnetic disk and an optical disk. Current examples of optical disks include compact disk read only memory CD ROM compact disk read write CD R W and DVD.

A data processing system suitable for storing and or executing program code will include at least one processor coupled directly or indirectly to memory elements through a system bus. The memory elements can include local memory employed during actual execution of the program code bulk storage and cache memories which provide temporary storage of at least some program code in order to reduce the number of times code must be retrieved from bulk storage during execution.

Input output or I O devices including but not limited to keyboards displays pointing devices etc. can be coupled to the system either directly or through intervening I O controllers.

Network adapters may also be coupled to the system to enable the data processing system to become coupled to other data processing systems or remote printers or storage devices through intervening private or public networks. Modems cable modem and Ethernet cards are just a few of the currently available types of network adapters.

The present invention is mainly described in terms of particular systems provided in particular implementations. However one of ordinary skill in the art will readily recognize that this method and system will operate effectively in other implementations. For example the systems devices and networks usable with the present invention can take a number of different forms. The present invention will also be described in the context of particular methods having certain steps. However the method and system operate effectively for other methods having different and or additional steps not inconsistent with the present invention.

A method and system for providing an auto generated to do list has been described. The present invention has been described in accordance with the embodiments shown and one of ordinary skill in the art will readily recognize that there could be variations to the embodiments and any variations would be within the spirit and scope of the present invention. For example the present invention can be implemented using hardware software a computer readable medium containing program instructions or a combination thereof. Software written according to the present invention is to be either stored in some form of computer readable medium such as memory or CD ROM or is to be transmitted over a network and is to be executed by a processor. Consequently a computer readable medium is intended to include a computer readable signal which may be for example transmitted over a network. Accordingly many modifications may be made by one of ordinary skill in the art without departing from the spirit and scope of the appended claims.

