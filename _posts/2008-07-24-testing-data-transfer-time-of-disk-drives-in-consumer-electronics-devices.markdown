---

title: Testing data transfer time of disk drives in consumer electronics devices
abstract: Systems, apparatus and methods are disclosed for testing performance of a disk drive in a digital home communications terminal. One such method comprises: downloading a disk drive performance test application from a server over a communication channel; executing the test application to measure at least one time for data transfer of a group of sectors on the disk drive; and reporting the time to the server over the communication channel. A digital video recorder comprises: a disk drive; a communication interface; memory storing executable instructions thereon; and a processor configured by the executable instructions. The processor is configured to download a disk drive performance test application from a server over the communication interface; execute the test application to measure at least one time for data transfer of a group of sectors on the disk drive; and report the time to the server over the communication interface.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07877538&OS=07877538&RS=07877538
owner: 
number: 07877538
owner_city: 
owner_country: 
publication_date: 20080724
---
This application is a divisional of U.S. patent application Ser. No. 11 414 952 filed May 1 2006 which is entirely incorporated herein by reference.

The present disclosure relates to disk drives and more specifically to a system and method for disk drive performance testing.

A digital video recorder DVR allows a user to record video programming to a recordable medium and to play back the recorded programs. The recordable medium in a DVR is typically a disk drive also known as a hard disk or a hard drive . Before a video program is recorded it is digitally encoded which occurs at a fixed rate. On play back video decoding also occurs at a fixed rate. To function properly a DVR disk drive should be able to complete read or write requests at a sustained threshold rate which is related to the encoding decoding rate. If the performance of the DVR disk drive is below this threshold the quality of the recording will be adversely affected and in some cases the DVR will not be usable for recording and or playback.

Performance testing of DVR disk drives can be performed at the factory before the disk is deployed. However disk drive performance depends on the physical conditions under which it is used e.g. temperature and can degrade over time. Therefore a disk which passed the performance test at the factory may later fail at the consumer location. Also factory testing is not helpful for units that have already been deployed. Thus a need arises to address the above mentioned problems among others.

In some embodiments communication channel is unidirectional and DVR receives but does not transmit. In other embodiments communication channel is bi directional allowing DVR to receive and transmit. A bi directional channel comprises a downstream channel D used for communication from program source to DVR and an upstream channel U used for communication from DVR to program source .

In one embodiment bi directional communication channel comprises a bi directional HFC cable. In other embodiments the bi directional communication channel is a logical composition of physical channels that are not themselves bi directional. In one example of such a logical composition among others upstream channel U is a unidirectional hybrid fiber coax HFC cable and upstream channel U is a bi directional telephone line.

In one embodiment DVR is a standalone unit. In another embodiment DVR is integrated into a digital home communication terminal DHCT also known as a set top or set top box. In yet another embodiment DVR is integrated into another consumer device such as a television a personal computer or a portable device among others.

Memory comprises non volatile memory N and random access memory RAM R. Residing in memory are application manager M DVR application D and disk drive performance test application T. In one embodiment DVR application D and application manager M reside in flash memory N and disk drive performance test application T resides in RAM R while other embodiments include other memory arrangements and other locations for such elements.

Video programs are digitally encoded before being stored on recordable medium by DVR application D. In the example DVR of digital encoding is performed by an encoder . In another embodiment the program is digitally encoded by program source rendering encoding by the DVR unnecessary. Omitted from are a number of conventional components known to those skilled in the art that are unnecessary to explain the operation of the system and method for disk drive performance testing.

In the embodiment of data is stored in magnetic form on a platter which rotates on a spindle not shown at a constant rate. A disk controller precisely positions a head over the spinning platter and read write channel electronics reads or writes data at this position by either detecting current in or supplying current to head . Once read data bits are stored in buffers in memory which is locally accessible to disk controller . Memory also contains a read cache A and a write cache B.

Data is communicated between the hard disk subsystem and the host processor via a host bus . A host bus controller is responsible for transferring data to be recorded into a portion of memory and for transferring data read by the read write channel into a portion of memory .

As is typical for a hard disk subsystem in this embodiment of DVR one or more outermost tracks R are reserved for use by disk controller . Example uses of reserved tracks R by disk controller include storing sector remap tables error events observed by controller results of diagnostic tests run by controller . In this embodiment of DVR one or more innermost tracks D are reserved for used by DVR application D to store application specific data. Examples of DVR application data stored on tracks D include a guide for programs received by DVR and tables describing how stored programs are arranged on hard disk subsystem . The remaining tracks V between the outer tracks R and the inner tracks D are thus available for storing video programs.

The embodiments disclosed herein measure disk performance for sectors located in different regions of platter where each region is located at a different distance from the center of platter . One embodiment of disk drive performance test application T measures disk performance for tracks V containing video data while another embodiment also measures disk performance tracks D containing DVR application data. It will be understood by one of ordinary skill in the art that the choice of platter location for which performance measurements are made can be adapted to reflect knowledge of the layout of files and data on the disk and that the layout can in turn be tuned to optimize the application for which the hard disk subsystem is intended.

Each track is composed of sectors . Sectors are typically numbered starting from the outside and moving in. In the embodiment described herein access time for sectors in three regions is measured inner region I middle region M and outer region O. However other embodiments with different numbers of regions are also contemplated.

In one embodiment the size of each region is 200 MB or 409 600 sectors at 512 bytes per sector. The region size is a relatively small percentage of the total size of hard disk subsystem since a typical DVR disk drive is 40 MB or larger. Measuring performance on relatively small regions of hard disk subsystem appears to predict a failure of hard disk subsystem with a useful degree of accuracy and takes less time than measuring performance on larger regions. However other embodiments include larger regions.

In one embodiment the regions are located as follows outer region O starts after the DVR data portion D which is at sector 2 097 152 1 GB 512 bytes per sector middle region M starts at two thirds of drive capacity plus 1 GB and inner region I starts at drive capacity minus 2 508 806 bytes so that the region excludes reserved tracks R. It is clear to those skilled in the art that these numbers can be adjusted to match various system parameters for example allocation or mapping of drive partitions or specific data elements.

In one embodiment the sector locations of regions are described by a data structure not shown maintained by disk drive performance test application T. In one embodiment this section location table is configurable for a user of disk drive performance test application T while in another embodiment this table cannot be modified at run time. Thus a particular manufacturer of the device that contains test application T may choose to allow customization of the table by the user of the program for example when the end user is a cable network operator.

At step the timer is stopped when the data transfer completes. At step the elapsed time for the data transfer is computed as the difference between the start time and the stop time. Steps are repeated for each platter region to be tested. In one embodiment the procedure of is executed first to measure performance on a disk write and then for a disk read.

The mechanism used to disable access to the disk by software other than the disk drive performance test application T will depend on the software hardware platform used by the DVR . In one embodiment all software other than disk drive performance test application T uses a platform hard disk device driver which examines a particular memory location before accessing the disk. In this embodiment disk drive performance test application T disables access by writing a flag value to this memory location. Other embodiments may use a different disable mechanism for example a specific API call.

One of ordinary skill in the art will be familiar with one or more application programming interfaces APIs available for a disk read or write of specified sectors. Such APIs may be provided by the operating system the basic input output system BIOS or the device driver for the disk drive. Accordingly these APIs need not be discussed here. In one embodiment the API provided by the Integrated Drive Electronics IDE device driver is used to perform sector reads and writes. The IDE device driver includes a read look ahead feature that can be enabled or disabled and in one embodiment the read look ahead is disabled while measuring performance of disk reads.

To reduce overhead disk drive performance test application T reads writes a relatively large number of sectors in each API call. One of ordinary skill in the art will understand that in one embodiment the number of sectors per API call will depend on the amount of memory that can be allocated for read write buffers by the disk drive performance test application T. Thus if 5 MB can be allocated for data transfer buffers a 200 MB region can be tested with 40 API calls but if only 512 KB of buffers can be allocated then the same 200 MB region would use 400 API calls.

The disk performance test results can thus be expected to vary as a function of the size of the data transfer buffers. In one embodiment the measured elapsed time for data transfer is adjusted or normalized to account for this expected variation. The factor used for normalization can be empirically determined by running the performance tests on a DVR using the same hard disk subsystem and varying the total data transfer buffer size. In one embodiment this normalization is determined during application development before DVR is deployed. In one embodiment the normalization is performed by the disk drive performance test application T but in other embodiments normalization is done by another software entity which obtains the test results from the disk drive performance test application T.

In this embodiment the test is performed in a non destructive manner by reading and then writing the same data back. Because the data on the HDD is not altered the data is always intact even if the test is interrupted by a dramatic event such as a power cycle. Thus this embodiment is intrinsically non destructive.

At step a group of sectors located in a particular region of the platter is selected for non destructive write performance testing. Next step read buffers are allocated. In order to reduce the influence of drive latency on the measurement a relatively large amount of data is read written during each read write cycle. However memory fragmentation reduces the probability of allocating a large data transfer buffer. One embodiment handles this trade off by allocating 5 MB of read buffers in 512 KB chunks for a total of 10 read buffers . Of course amounts can vary greatly throughout the disclosure in other embodiments.

Step executes a series of disk sector reads into the read buffers allocated in step . Each read in the series uses one of the allocated read buffers. As described earlier each read operation in the series preferably reads multiple sectors to reduce API call overhead.

At step a head seek is executed to move the disk head back to the first sector read in step . This seek minimizes the influence of intervening reads on the upcoming write operation. In one embodiment the head seek is accomplished by a sector read API call with the hard disk subsystem read cache A disabled.

At step a timer is started. Step executes a series of disk sector writes from the read buffers that were filled at step thus writing back what was read earlier. Hard disk subsystem write cache B is enabled during the sector write operations. Next step the write cache is flushed thus ensuring that the data has been committed to the disk rather than cached in buffers which are internal to the disk controller.

The enable write flush strategy has two advantages. First issuing writes with write cache B enabled allows hard disk subsystem to issue writes in a fast and more efficient manner. Second by issuing a cache flush the DVR is able to accurately determine the moment at which the writing activity is finished. The result is a more accurate measurement of the faster available write strategy.

At step the timer is stopped when the flush has completed. At step the elapsed time for the read write sequence is computed as the difference between the start time and the stop time. At step the elapsed time is added to a total elapsed time for the entire region.

The total amount of free memory in DVR is typically much less than the region size e.g. 8 MB of memory compared to a 200 MB region size . Therefore each execution of steps covers only a portion of the selected region under test and steps are repeated as necessary to cover the remaining portion of the region under test. For example if the read write operation steps and used buffers totaling 5 MB then steps would be executed 40 times to cover a 200 MB region.

Occasionally the data in a sector is not readable. This can happen for example because the write was faulty or because of physical damage to that location on the platter . The resulting error affects the performance measurement since time is spent in attempting error recovery. Thus a performance test that does not take this into account will be inaccurate. One embodiment described in accounts for this effect by invoking a sector recovery process which re reads the bad sector and then resumes performance measurement.

If the sector read in step reports an error then disk drive performance test application T moves to reading and writing one sector at a time starting with step . At step a Current sector position is initialized to the Start sector position. Next step a single sector read is executed for Sector Current into the last used read buffer. If no error is reported from the single sector read operation then processing continues at step where a single sector write is executed for the sector Current using the buffer which was filled by the last single sector read. Processing then continues at step . If the single sector read reports an error then processing continues at step where a single sector write from a zero filled buffer is executed for the sector Current. Processing then continues at step .

At step the Current sector position is incremented by one since a single sector read then write was performed . At step disk drive performance test application T determines if all the sectors in the block have been read where a block refers to the number of sectors read in each multiple sector read of step . If all sectors in the block have not yet been read individually then single sector read processing continues at step . Otherwise processing continues at step where the entire block spanning Sector Start to Finish is read again with a multiple sector read operation.

If the read operation in step reports an error then the performance test is terminated at step and an error is reported. If the read operation completed with no error then single sector read write operations are finished. Disk drive performance test application T returns to multiple sector operations using the next read buffer at step .

Any process descriptions or blocks in flowcharts should be understood as representing modules segments or portions of code which include one or more executable instructions for implementing specific logical functions or steps in the process. As would be understood by those of ordinary skill in the art of the software development alternate implementations are also included within the scope of the disclosure. In these alternate implementations functions may be executed out of order from that shown or discussed including substantially concurrently or in reverse order depending on the functionality involved.

In the embodiment of the disk drive performance test application T is a downloadable application rather than a permanent feature of DVR and can communicate performance test results to the head end server . This allows a head end operator to assess disk drive performance for DVRs that have already been deployed even if the DVRs were not shipped with performance test software.

The sequence of begins with head end server sending a DownloadSoftware message to DVR . The application manager M on DVR loads the downloaded executable image into RAM block and disk drive performance test application T begins execution. Test application T waits block for a ScheduleTest message from head end server . The Schedule Test message specifies a time window for initiation of the disk drive performance test. As one example of specifying a time window the Schedule Test message may contain a start time and a maximum start delay. Note that this messaging strategy will also work in with a downstream path that is unidirectional head end server to DVR .

In one embodiment the actual test start time within the window is pseudo random but is selected to avoid particular time periods such as periods before and after the on the hour and half hour clock times. As an example if the testing time window is 2 AM to 4 AM then the test would be scheduled sometime during the following intervals 2 01 to 2 30 2 31 to 2 50 3 01 to 3 20 and 3 31 to 3 50. Avoiding these time periods reduces the probability that the performance test will interrupt a scheduled recording.

On receipt of the message schedules the test and waits for the scheduled time block . In one embodiment test application T runs the disk drive performance test described in connection with at the scheduled time. In another embodiment at the scheduled time test application T determines if hard disk subsystem is currently recording and if so checks again in a short period of time e.g. one minute . This cycle continues until either no record activity is detected or the scheduled test window closes.

After the test is completed test results are reported by sending an unsolicited message to head end server . In one embodiment the test results message is sent using an unreliable transport protocol such as UDP. Note that the test randomization process spreads out the upstream reporting of the test results process and reduces peak traffic to head end server .

After sending the unsolicited message test application T requests message that application manager M execute a soft reboot in which the system is not powered down. Using a soft reboot ensures that test application T remains in RAM. In one embodiment test application T uses flash memory to store state information across reboots.

After reboot test application T installs an SNMP MIB that contains the performance test results and then waits for an SNMP message from head end server . At some later point in time head end server sends an SNMP request message to test application T. On receipt of the SNMP request test application T sends an SNMP reply message that includes the performance test results.

After receiving the SNMP reply from DVR head end server sends a RemoveSoftware message to application manager M. Application manager M in turn sends a Quit message to test application T then unloads test application T from memory block . In one embodiment using satellite communications DVR awaits a Quit message addressed to itself transmitted over the downstream satellite channel. In another embodiment using satellite communications DVR receives a Quit message via the upstream telephone channel.

Next block performance test results are received from at least one of the DVRs . One of ordinary skill in the art will recognize that many mechanisms can be used for reporting test results including relatively simply mechanisms such as unreliable messaging e.g. unreliable datagram protocol UDP and more sophisticated mechanisms such as Simple Network Management Protocol SNMP .

At block test results for a particular DVR are compared to a threshold. If the test results do not meet or exceed the threshold the DVR is designated as having failed the test. In one embodiment information about DVRs is stored in a head end database each DVR record includes a Hard Disk Failure field and the failure designation uses this field.

The systems and methods for disk drive performance testing disclosed herein can be implemented in software hardware or a combination thereof. In some embodiments the system and or method is implemented in software that is stored in a memory and that is executed by a suitable microprocessor situated in a computing device. However the systems and methods can be embodied in any computer readable medium for use by or in connection with an instruction execution system apparatus or device. Such instruction execution systems include any computer based system processor containing system or other system that can fetch and execute the instructions from the instruction execution system. In the context of this disclosure a computer readable medium can be any means that can contain store communicate propagate or transport the program for use by or in connection with the instruction execution system. The computer readable medium can be for example but not limited to a system or propagation medium that is based on electronic magnetic optical electromagnetic infrared or semiconductor technology.

Specific examples of a computer readable medium using electronic technology would include but are not limited to the following an electrical connection electronic having one or more wires a random access memory RAM a read only memory ROM an erasable programmable read only memory EPROM or Flash memory . A specific example using magnetic technology includes but is not limited to a portable computer diskette. Specific examples using optical technology include but are not limited to an optical fiber and a portable compact disk read only memory CD ROM .

Note that the computer readable medium could even be paper or another suitable medium on which the program is printed. Using such a medium the program can be electronically captured using for instance optical scanning of the paper or other medium compiled interpreted or otherwise processed in a suitable manner and then stored in a computer memory. In addition the scope of the certain embodiments of the present disclosure includes embodying the functionality of the preferred embodiments of the present disclosure in logic embodied in hardware or software configured mediums.

This description has been presented for purposes of illustration and description. It is not intended to be exhaustive or to limit the disclosure to the precise forms disclosed. Obvious modifications or variations are possible in light of the above teachings. The embodiments discussed however were chosen to illustrate the principles of the disclosure and its practical application. The disclosure is thus intended to enable one of ordinary skill in the art to use the disclosure in various embodiments and with various modifications as are suited to the particular use contemplated. All such modifications and variation are within the scope of this disclosure as determined by the appended claims when interpreted in accordance with the breadth to which they are fairly and legally entitled.

