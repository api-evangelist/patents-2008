---

title: Flexible scalable application authorization for cloud computing environments
abstract: A representational state transfer-based model for a computing environment uses models resources with links between them. Security principals are resources which can be independently authenticated. Each resource may be associated with an authorization policy that determines level of access, protocol supported. Successfully presenting security credentials at a security principal allows use of an instance of the security principal (i.e. application) as well as generation of an authentication token that can be presented across the computing environment to resources subscribing to the same authorization policy. As security principals with different security policies are authenticated, the appropriate tokens may be combined to allow broader access without undue re-authentication for resources subscribing to the same security policy. Authorization requirements (policies) may be attached to links to resources so that an application instance can dynamically discover authentication rules for that resource by inspecting the link.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08418222&OS=08418222&RS=08418222
owner: Microsoft Corporation
number: 08418222
owner_city: Redmond
owner_country: US
publication_date: 20080930
---
This application is a continuation in part of co pending U.S. patent application Ser. No. 12 042 637 filed Mar. 5 2008 now U.S. Pat. No. 8 196 175 the entire disclosure of which is hereby incorporated by reference for all purposes.

The success of the Web and email may be due to their scalability and interoperability. In part such scalability and interoperability are enabled by standardized message formats protocols and addressing schemes. The Web in particular takes advantage of URI universal resource identifier addressing to find endpoints. Traditionally endpoints were software components supporting remote procedure calls. However a new model for network based computing uses a representational state transfer REST paradigm. In the REST paradigm sources of specific information are called resources and are identified typically by a URI. A connector can mediate the requests made for resources. Servers caches tunnels etc. are all examples of connectors. Each may make or forward a request without explicit knowledge of where the actual resource may be.

Resources may be owned by one entity hosted by another entity and support connectors may be from virtually anywhere. Varying requirements for security resulting from this variety may prevent transparent operation of such a mesh of resources because different participants may have different requirements for security. In addition not all participants may support the same security processes and protocols.

For example one resource owner may require public key authentication and support only elliptic curve key types. However a requester attempting to use that resource may support only RSA key types. Further the requester may have to traverse a network that requires an SSL2 secure communication protocol for transport sercurity while another path may not.

A computing environment including both client and cloud computing entities may be modeled as resources with relationships between them modeled as links. An authenticatable entity is modeled as a security principal. When a security principal for example a user device or application issues a request against a resource the cloud may invoke an authentication engine to examine an authentication policy or policies in place for that resource. The security principal s credentials may be examined with respect to the authentication policy or policies and if found acceptable the authentication engine may grant access to the resource and issue an authentication token for use by an instance of the resource to use in related requests to other resources. The authentication token may also be used to allow the security principal for example a user more elevated access to the resource e.g. granting admin rights .

Any links to the resource may also include authorization token links so that an application instance can discover any authorization requirements by inspecting all resource links for authorization token links.

More than one authentication policy may be associated with a resource. For example a resource may have a policy associated with the resource owner as well as the resource host. A policy may describe requirements for use of the resource requirements for access to the resource e.g. administrative access security protocols supported by the resource etc. The policy may also include operational rules for example that one CPU is granted per authorization.

As described in the above referenced related application a combination of resource caching and resource synchronization may allow the use of the authentication scheme by both client based applications and cloud based applications or services.

Although the following text sets forth a detailed description of numerous different embodiments it should be understood that the legal scope of the description is defined by the words of the claims set forth at the end of this patent. The detailed description is to be construed as exemplary only and does not describe every possible embodiment since describing every possible embodiment would be impractical if not impossible. Numerous alternative embodiments could be implemented using either current technology or technology developed after the filing date of this patent which would still fall within the scope of the claims.

It should also be understood that unless a term is expressly defined in this patent using the sentence As used herein the term is hereby defined to mean . . . or a similar sentence there is no intent to limit the meaning of that term either expressly or by implication beyond its plain or ordinary meaning and such term should not be interpreted to be limited in scope based on any statement made in any section of this patent other than the language of the claims . To the extent that any term recited in the claims at the end of this patent is referred to in this patent in a manner consistent with a single meaning that is done for sake of clarity only so as to not confuse the reader and it is not intended that such claim term by limited by implication or otherwise to that single meaning. Finally unless a claim element is defined by reciting the word means and a function without the recital of any structure it is not intended that the scope of any claim element be interpreted based on the application of 35 U.S.C. 112 sixth paragraph.

With reference to an exemplary system for implementing the claimed method and apparatus includes a general purpose computing device in the form of a computer . Components shown in dashed outline are not technically part of the computer but are used to illustrate the exemplary embodiment of . Components of computer may include but are not limited to a processor a system memory a memory graphics interface also known as a Northbridge chip and an I O interface also known as a Southbridge chip. The system memory and a graphics processor may be coupled to the memory graphics interface . A monitor or other graphic output device may be coupled to the graphics processor .

A series of system busses may couple various system components including a high speed system bus between the processor the memory graphics interface and the I O interface a front side bus between the memory graphics interface and the system memory and an advanced graphics processing AGP bus between the memory graphics interface and the graphics processor . The system bus may be any of several types of bus structures including by way of example and not limitation such architectures include Industry Standard Architecture ISA bus Micro Channel Architecture MCA bus and Enhanced ISA EISA bus. As system architectures evolve other bus architectures and chip sets may be used but often generally follow this pattern. For example companies such as Intel and AMD support the Intel Hub Architecture IHA and the Hypertransport architecture respectively.

The computer typically includes a variety of computer readable media. Computer readable media can be any available media that can be accessed by computer and includes both volatile and nonvolatile media removable and non removable media. By way of example and not limitation computer readable media may comprise computer storage media. Computer storage media includes both volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical disk storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can accessed by computer .

The system memory includes computer storage media in the form of volatile and or nonvolatile memory such as read only memory ROM and random access memory RAM . The system ROM may contain permanent system data such as identifying and manufacturing information. In some embodiments a basic input output system BIOS may also be stored in system ROM . RAM typically contains data and or program modules that are immediately accessible to and or presently being operated on by processor . By way of example and not limitation illustrates operating system application programs other program modules and program data .

The I O interface may couple the system bus with a number of other busses and that couple a variety of internal and external devices to the computer . A serial peripheral interface SPI bus may connect to a basic input output system BIOS memory containing the basic routines that help to transfer information between elements within computer such as during start up.

A super input output chip may be used to connect to a number of legacy peripherals such as floppy disk keyboard mouse and printer as examples. The super I O chip may be connected to the I O interface with a bus such as a low pin count LPC bus in some embodiments. Various embodiments of the super I O chip are widely available in the commercial marketplace.

In one embodiment bus may be a Peripheral Component Interconnect PCI bus or a variation thereof may be used to connect higher speed peripherals to the I O interface . A PCI bus may also be known as a Mezzanine bus. Variations of the PCI bus include the Peripheral Component Interconnect Express PCI E and the Peripheral Component Interconnect Extended PCI X busses the former having a serial interface and the latter being a backward compatible parallel interface. In other embodiments bus may be an advanced technology attachment ATA bus in the form of a serial ATA bus SATA or parallel ATA PATA .

The computer may also include other removable non removable volatile nonvolatile computer storage media. By way of example only illustrates a hard disk drive that reads from or writes to non removable nonvolatile magnetic media. The hard disk drive may be a conventional hard disk drive.

Removable media such as a universal serial bus USB memory firewire IEEE 1394 or CD DVD drive may be connected to the PCI bus directly or through an interface . A storage media may coupled through interface . Other removable non removable volatile nonvolatile computer storage media that can be used in the exemplary operating environment include but are not limited to magnetic tape cassettes flash memory cards digital versatile disks digital video tape solid state RAM solid state ROM and the like.

The drives and their associated computer storage media discussed above and illustrated in provide storage of computer readable instructions data structures program modules and other data for the computer . In for example hard disk drive is illustrated as storing operating system application programs other program modules and program data . Note that these components can either be the same as or different from operating system application programs other program modules and program data . Operating system application programs other program modules and program data are given different numbers here to illustrate that at a minimum they are different copies. A user may enter commands and information into the computer through input devices such as a mouse keyboard or other input device combination. Other input devices not shown may include a microphone joystick game pad satellite dish scanner or the like. These and other input devices are often connected to the processor through one of the I O interface busses such as the SPI the LPC or the PCI but other busses may be used. In some embodiments other devices may be coupled to parallel ports infrared interfaces game ports and the like not depicted via the super I O chip .

The computer may operate in a networked environment using logical connections to one or more remote computers such as a remote computer via a network interface controller NIC . The remote computer may be a personal computer a server a router a network PC a peer device or other common network node and typically includes many or all of the elements described above relative to the computer . The logical connection between the NIC and the remote computer depicted in may include a local area network LAN a wide area network WAN or both but may also include other networks. Such networking environments are commonplace in offices enterprise wide computer networks intranets and the Internet. The remote computer may also represent a web server supporting interactive sessions with the computer or in the specific case of location based applications may be a location server or an application server.

In some embodiments the network interface may use a modem not depicted when a broadband connection is not available or is not used. It will be appreciated that the network connection shown is exemplary and other means of establishing a communications link between the computers may be used.

When a resource in a mesh requires a claim ticket for access the requirement is expressed by including a URI Universal Resource Identifier that identifies where the claim ticket may be retrieved as an attribute on links to that resource. Optionally a resource link may be arranged to include an inline value of the required claim ticket as an attribute which eliminates the extra step of retrieving the required claim ticket. By associating links to the resources with the authorization requirements for accessing the resources a client can traverse a mesh and access its resources while obtaining the required claim tickets along the way.

As illustrated in the client entity may include one or more of a user a device an application etc. One feature of the elements of the client entity is that each is authenticable.

The cloud based services platform or simply the computing cloud may include a number of resources that are navigable by links or references. For example in resources include R R R R and R .

The resources may each have an associated security policy P P or more not depicted . The security policies may be stored in a policy repository . Each security policy etc. may be related to a party with an interest in the resource. For example a first security policy P may specify access criteria specified by an owner of the resource used to limit what users may access the resource. Additional first security policy P criteria may describe what credentials must be presented for higher level e.g. administrator access to the resource. The first security policy P may also include additional access criteria protocols cryptographic algorithms key lengths etc.

A second security policy P may represent the interests of a host of the resource for example specifying required authentication protocols such as RSA public key over an SSL2 transport. As with the first security policy P the second security policy P may also specify additional access conditions protocols cryptographic algorithms key lengths etc.

As depicted in a resource may be associated with one or more security policies or in the case of resource R may not have any security policy.

An authentication engine may handle requests made for access to a resource for example a request from application for access to resource R . The request may include the security credentials of the application such as a ID password or signed challenge response. In one embodiment the request uses an HTTP protocol with an authentication header and token.

The authentication engine may examine the credentials and evaluate them in view of the appropriate security policies that may be in place for the selected resource. When the security policy is met by the credential one or more authorization tokens T T or T may be generated. The tokens etc. may be stored in a token repository .

Additionally authorization token links and may be attached to relevant links so that in traversing links to resources an application instance may find a link to the token repository or other resource from which the authorization token may be retrieved upon successfully satisfying the associated authentication requirements. It is therefore possible to dynamically discover any authorization requirements by inspecting all resource links to detect the presence of authorization token links. In this fashion authorization rules for the computing environment are self describing.

In operation the security principal be it a user with a LiveID credential a first or third party application such as a code function or gadget may request services from the computing cloud . The request and credentials may be passed to a resource and the credentials and related security policy verified at the authentication engine .

The authentication engine may generate one or more tokens . Should the resource need to make subsequent calls to additional resources e.g. R or R or respectively the links to the resources may be examined for authorization token links and to determine the appropriate security requirements and to retrieve the previously generated tokens if required. When the representation returned for R contains links to resources R and R each link is annotated with an authorization token link as a link attribute. The authorization token link for R refers to T and the authorization token link for R refers to T .

Before issuing a request to interact with resource R the client must first issue a request to T to obtain an authorization token. The authorization engine may generate the requested authorization token on demand based on the security credentials provided by the client.

As more resources are traversed the client can build up a dictionary of entries for each resource link remembering which authorization tokens were needed in order to interact with that resource. This reduces the need to repeatedly obtain authorization tokens for resources that it interacts with multiple times.

This process allows abstraction of security policies authentication and resource traversal reducing overhead in both storage of policies and tokens and of computing power used to repetitively validate credentials. Further because the authorization rules are self describing additional overhead to maintain databases of security status and pointers are eliminated. This abstraction applies to both first and third party security principals whether inside or outside the computing cloud .

The security policy may specify a credential requirement for use of the resource or for access to the resource. That is one level of credential may allow use of a program or gadget while another credential may allow the requester to access the resource for example as an administrator to perform a maintenance function. The security policy may specify a cryptographic policy such as requiring the use of 3DES or RSA public keys and or a minimum key strength. One security policy applied to a resource may be associated with a first entity having an interest in the resource for example an owner of the resource. Another security policy applied to the same resource may be associated with a second entity having an interest in the resource such as a host of the resource. Other parties with an interest in the resource who may also contribute to additional security policies may include an author a security monitor an auditor etc.

In one embodiment a set of standard policies may be developed and stored that may be associated with one or more resources. The use of standard policies can minimize the risk of a missed criteria as well as create a more uniform security environment.

At block the cloud computing environment may receive a request from a security principal to access a resource. The request may include a security credential of the security principal. When receiving the request for access the cloud computing environment may route the request to an authentication engine instead of or in addition to routing the request to the correct resource.

At block the authentication engine may determine which if any security policies may be applicable to the requested resource. The authentication engine may then determine whether the credentials presented satisfy the requirements of the security policy . If the credentials do not satisfy the requirements the process ends. Assuming the credentials meet the requirements of the security policy e.g. both the protocol and key data requirements of the security policy execution may continue.

At block the authorization engine may generate an authorization token when the security credential satisfies the at least one security policy . The authorization engine may generate a token for the requested resource. The authentication engine may generate a token for each security policy in the mesh for which the supplied credential satisfies its requirements. The one or more authorization tokens may be stored in a token repository . Alternatively as a link is traversed the policy may be discovered and a token generated. In either case the authentication engine may generate a separate authentication token for each security policy successfully authenticated.

At block security policy related information may be attached to a resource link used to traverse to the resource. The security policy related information may correspond to the one or more security policies attached to the resource. The security policy related information may be an authorization token link identifying a second resource from which the authorization token is retrievable.

At block security policy information attached to the resource link e.g. an authorization token link may be inspected to determine a security requirement for the resource. In this manner even as the resources are realigned in the mesh the security requirements are self describing.

Returning to block after one or more authentication tokens are generated the resource may forward an authentication token from an instance of the resource that is a specific incarnation of the resource related to operation related to the request to another resource. Such use of authentication tokens eliminates the need for successive authentication each time an entity is accessed related to the first request.

