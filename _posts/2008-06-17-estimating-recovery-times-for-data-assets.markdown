---

title: Estimating recovery times for data assets
abstract: Estimating a recovery time for a data asset is provided. A request is received to project a recovery time for a data asset that uses a repository. A determination is made as to whether there are one or more existing recovery times for other data assets and other repositories that have characteristics similar to the data asset and the repository of the request. The recovery time for the data asset is projected using the one or more existing recovery times in response to an existence of the one or more existing recovery times.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08055630&OS=08055630&RS=08055630
owner: International Business Machines Corporation
number: 08055630
owner_city: Armonk
owner_country: US
publication_date: 20080617
---
The present application relates generally to an improved data processing apparatus and method and more specifically to an apparatus and method for estimating the recovery time for data assets.

Within many enterprises data assets may be comprised of different types of data depending upon how the data assets are used and the importance of the data assets to the enterprises. Some examples of data assets are applications databases servers files file systems and the like. Similarly there are many tools for managing these data assets and the data on these data assets. For instance one known enterprise data protection product provides many different data protection techniques to protect data assets within an enterprise corporation remote office or the like. Some of these data protection techniques are progressive incremental backup image backup snapshot orchestration and management and continuous data protection. However other known data protection management solutions do not provide a mechanism to plan for and orchestrate recovery operations based upon recovery objectives for an organization. Another data asset management tool is a storage resource management SRM product. The SRM product helps to monitor and manage storage resources within an enterprise including capacity planning and reporting provisioning replication management and such.

However the combination of data protection products and data asset management tools do not offer a holistic or integrated view with the focus on 

That is known data protection and storage resource monitoring systems are missing an integrated approach that offers analysis and assessment of recovery readiness for data assets. This existing deficit within the storage protection and management tools significantly increases the complexity of protecting and managing data. More importantly known data protection and storage resource monitoring systems leave the determination about the readiness and efficacy of recovery to a manual process if readiness and efficacy of recovery are being considered at all.

In one illustrative embodiment a method in a data processing system is provided for estimating a recovery time for a data asset. The illustrative embodiments receive a request to project a recovery time for a data asset that uses a repository. The illustrative embodiments determine if there are one or more existing recovery times for other data assets and other repositories that have characteristics similar to the data asset and the repository of the request. Responsive to an existence of the one or more existing recovery times the illustrative embodiments project the recovery time for the data asset using the one or more existing recovery times.

In other illustrative embodiments a computer program product comprising a computer useable or readable medium having a computer readable program is provided. The computer readable program when executed on a computing device causes the computing device to perform various ones and combinations of the operations outlined above with regard to the method illustrative embodiment.

In yet another illustrative embodiment a system apparatus is provided. The system apparatus may comprise one or more processors and a memory coupled to the one or more processors. The memory may comprise instructions which when executed by the one or more processors cause the one or more processors to perform various ones and combinations of the operations outlined above with regard to the method illustrative embodiment.

These and other features and advantages of the present invention will be described in or will become apparent to those of ordinary skill in the art in view of the following detailed description of the exemplary embodiments of the present invention.

As will be appreciated by one skilled in the art the present invention may be embodied as a system method or computer program product. Accordingly the present invention may take the form of an entirely hardware embodiment an entirely software embodiment including firmware resident software micro code etc. or an embodiment combining software and hardware aspects that may all generally be referred to herein as a circuit module or system. Furthermore the present invention may take the form of a computer program product embodied in any tangible medium of expression having computer usable program code embodied in the medium.

Any combination of one or more computer usable or computer readable medium s may be utilized. The computer usable or computer readable medium may be for example but not limited to an electronic magnetic optical electromagnetic infrared or semiconductor system apparatus device or propagation medium. More specific examples a non exhaustive list of the computer readable medium would include the following an electrical connection having one or more wires a portable computer diskette a hard disk a random access memory RAM a read only memory ROM an erasable programmable read only memory EPROM or Flash memory an optical fiber a portable compact disc read only memory CDROM an optical storage device a transmission media such as those supporting the Internet or an intranet or a magnetic storage device. Note that the computer usable or computer readable medium could even be paper or another suitable medium upon which the program is printed as the program can be electronically captured via for instance optical scanning of the paper or other medium then compiled interpreted or otherwise processed in a suitable manner if necessary and then stored in a computer memory. In the context of this document a computer usable or computer readable medium may be any medium that can contain store communicate propagate or transport the program for use by or in connection with the instruction execution system apparatus or device. The computer usable medium may include a propagated data signal with the computer usable program code embodied therewith either in baseband or as part of a carrier wave. The computer usable program code may be transmitted using any appropriate medium including but not limited to wireless wireline optical fiber cable radio frequency RF etc.

Computer program code for carrying out operations of the present invention may be written in any combination of one or more programming languages including an object oriented programming language such as Java Smalltalk C or the like and conventional procedural programming languages such as the C programming language or similar programming languages. The program code may execute entirely on the user s computer partly on the user s computer as a stand alone software package partly on the user s computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario the remote computer may be connected to the user s computer through any type of network including a local area network LAN or a wide area network WAN or the connection may be made to an external computer for example through the Internet using an Internet Service Provider .

The illustrative embodiments are described below with reference to flowchart illustrations and or block diagrams of methods apparatus systems and computer program products according to the illustrative embodiments of the invention. It will be understood that each block of the flowchart illustrations and or block diagrams and combinations of blocks in the flowchart illustrations and or block diagrams can be implemented by computer program instructions. These computer program instructions may be provided to a processor of a general purpose computer special purpose computer or other programmable data processing apparatus to produce a machine such that the instructions which execute via the processor of the computer or other programmable data processing apparatus create means for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

These computer program instructions may also be stored in a computer readable medium that can direct a computer or other programmable data processing apparatus to function in a particular manner such that the instructions stored in the computer readable medium produce an article of manufacture including instruction means which implement the function act specified in the flowchart and or block diagram block or blocks.

The computer program instructions may also be loaded onto a computer or other programmable data processing apparatus to cause a series of operational steps to be performed on the computer or other programmable apparatus to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide processes for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

The flowchart and block diagrams in the figures illustrate the architecture functionality and operation of possible implementations of systems methods and computer program products according to various embodiments of the present invention. In this regard each block in the flowchart or block diagrams may represent a module segment or portion of code which comprises one or more executable instructions for implementing the specified logical function s . It should also be noted that in some alternative implementations the functions noted in the block may occur out of the order noted in the figures. For example two blocks shown in succession may in fact be executed substantially concurrently or the blocks may sometimes be executed in the reverse order depending upon the functionality involved. It will also be noted that each block of the block diagrams and or flowchart illustration and combinations of blocks in the block diagrams and or flowchart illustration can be implemented by special purpose hardware based systems that perform the specified functions or acts or combinations of special purpose hardware and computer instructions.

The illustrative embodiments provide mechanisms for estimating the recovery time for data assets. As such the mechanisms of the illustrative embodiments are especially well suited for implementation within a distributed data processing environment and within or in association with data processing devices such as servers client devices and the like. In order to provide a context for the description of the mechanisms of the illustrative embodiments are provided hereafter as examples of a distributed data processing system or environment and a data processing device in which or with which the mechanisms of the illustrative embodiments may be implemented. It should be appreciated that are only exemplary and are not intended to assert or imply any limitation with regard to the environments in which aspects or embodiments of the present invention may be implemented. Many modifications to the depicted environments may be made without departing from the spirit and scope of the present invention.

With reference now to the figures depicts a pictorial representation of an exemplary distributed data processing system in which aspects of the illustrative embodiments may be implemented. Distributed data processing system may include a network of computers in which aspects of the illustrative embodiments may be implemented. The distributed data processing system contains at least one network which is the medium used to provide communication links between various devices and computers connected together within distributed data processing system . The network may include connections such as wire wireless communication links or fiber optic cables.

In the depicted example server and server are connected to network along with storage unit . In addition clients and are also connected to network . These clients and may be for example personal computers network computers or the like. In the depicted example server provides data such as boot files operating system images and applications to the clients and . Clients and are clients to server in the depicted example. Distributed data processing system may include additional servers clients and other devices not shown.

In the depicted example distributed data processing system is the Internet with network representing a worldwide collection of networks and gateways that use the Transmission Control Protocol Internet Protocol TCP IP suite of protocols to communicate with one another. At the heart of the Internet is a backbone of high speed data communication lines between major nodes or host computers consisting of thousands of commercial governmental educational and other computer systems that route data and messages. Of course distributed data processing system may also be implemented to include a number of different types of networks such as for example an intranet a local area network LAN a wide area network WAN a storage area network SAN or the like. As stated above is intended as an example not as an architectural limitation for different embodiments of the present invention and therefore the particular elements shown in should not be considered limiting with regard to the environments in which the illustrative embodiments of the present invention may be implemented.

If distributed data processing system is implemented as a storage area network SAN the SAN may be implemented as a Fibre Channel FC compliant SAN. Fibre Channel is a scalable technology data transfer interface technology that maps several common transport protocols including Internet Protocol IP and Small Computer System Interface SCSI allowing it to merge high speed I O and networking functionality in a single connectivity technology. Fibre Channel is a set of open standards defined by American National Standards Institute ANSI and International Organization for Standardization ISO . Detailed information regarding the various Fibre Channel standards is available from ANSI Accredited Standards Committee ASC X3T11 www.t11.org which is primarily responsible for the Fibre Channel project. These standards are collectively referred to in this specification as the Fibre Channel standard or the Fibre Channel specification. Fibre Channel operates over both copper and fiber optic cabling at distances of up to 10 Kilometers and supports multiple inter operable topologies including point to point arbitrated loop and switching and combinations thereof .

With reference now to a block diagram of an exemplary data processing system is shown in which aspects of the illustrative embodiments may be implemented. Data processing system is an example of a computer such as client in in which computer usable code or instructions implementing the processes for illustrative embodiments of the present invention may be located.

In the depicted example data processing system employs a hub architecture including north bridge and memory controller hub NB MCH and south bridge and input output I O controller hub SB ICH . Processing unit main memory and graphics processor are connected to NB MCH . Graphics processor may be connected to NB MCH through an accelerated graphics port AGP .

In the depicted example local area network LAN adapter connects to SB ICH . Audio adapter keyboard and mouse adapter modem read only memory ROM hard disk drive HDD CD ROM drive universal serial bus USB ports and other communication ports and PCI PCIe devices connect to SB ICH through bus and bus . PCI PCIe devices may include for example Ethernet adapters add in cards and PC cards for notebook computers. PCI uses a card bus controller while PCIe does not. ROM may be for example a flash binary input output system BIOS .

HDD and CD ROM drive connect to SB ICH through bus . HDD and CD ROM drive may use for example an integrated drive electronics IDE or serial advanced technology attachment SATA interface. Super I O SIO device may be connected to SB ICH .

An operating system runs on processing unit . The operating system coordinates and provides control of various components within the data processing system in . As a client the operating system may be a commercially available operating system such as Microsoft Windows XP Microsoft and Windows are trademarks of Microsoft Corporation in the United States other countries or both . An object oriented programming system such as the Java programming system may run in conjunction with the operating system and provides calls to the operating system from Java programs or applications executing on data processing system Java is a trademark of Sun Microsystems Inc. in the United States other countries or both .

As a server data processing system may be for example an IBM eServer System p computer system running the Advanced Interactive Executive AIX operating system or the LINUX operating system eServer System p and AIX are trademarks of International Business Machines Corporation in the United States other countries or both white LINUX is a trademark of Linus Torvalds in the United States other countries or both . Data processing system may be a symmetric multiprocessor SMP system including a plurality of processors in processing unit . Alternatively a single processor system may be employed.

Instructions for the operating system the object oriented programming system and applications or programs are located on storage devices such as HDD and may be loaded into main memory for execution by processing unit . The processes for illustrative embodiments of the present invention may be performed by processing unit using computer usable program code which may be located in a memory such as for example main memory ROM or in one or more peripheral devices and for example.

A bus system such as bus or bus as shown in may be comprised of one or more buses. Of course the bus system may be implemented using any type of communication fabric or architecture that provides for a transfer of data between different components or devices attached to the fabric or architecture. A communication unit such as modem or network adapter of may include one or more devices used to transmit and receive data. A memory may be for example main memory ROM or a cache such as found in NB MCH in .

Those of ordinary skill in the art will appreciate that the hardware in may vary depending on the implementation. Other internal hardware or peripheral devices such as flash memory equivalent non volatile memory or optical disk drives and the like may be used in addition to or in place of the hardware depicted in . Also the processes of the illustrative embodiments may be applied to a multiprocessor data processing system other than the SMP system mentioned previously without departing from the spirit and scope of the present invention.

Moreover the data processing system may take the form of any of a number of different data processing systems including client computing devices server computing devices a tablet computer laptop computer telephone or other communication device a personal digital assistant PDA or the like. In some illustrative examples data processing system may be a portable computing device which is configured with flash memory to provide non volatile memory for storing operating system files and or user generated data for example. Essentially data processing system may be any known or later developed data processing system without architectural limitation.

The illustrative embodiments provide a new level of correlated analysis of estimating the recovery time for data assets. While known systems provide for reporting monitoring and analysis of backup operations those known systems do not perform these functions for all of the different types of backup and recovery options that are available for the data asset. One illustrative embodiment of the present invention provides for the discovery monitoring and reporting of different types of backup and recovery options such as traditional backup block level continuous data protection file level continuous data protection application replication and the like that are available for the data asset which may be a file file system database table application server or the like. This illustrative embodiment provides an assessment of recovery times for data assets based on the recovery times associated with current data assets and or processing sample data to determine the recovery time for a given data asset.

In addition another illustrative embodiment generates a recovery health index for a data asset based on one or more estimated recovery times and or current recovery times. The recovery health index uses a recovery health status indicator to represent the overall recoverability of data assets. This recovery health index presents a summary view of the correlated analysis of data recovery readiness for the data asset. This illustrative embodiment may also take into consideration recovery rate input factors associated with the backup configuration the data repositories or the like.

Data protection application may store and retrieve data from protected data assets which are a subset of data assets that require monitoring for recovery readiness using known network based protocols and transmissions of data to and from data protection server or data protection agent . Data protection application may further manage the data from protected data assets by storing or retrieving the data to or from data protection resources . Alternatively data protection application may store or retrieve the backed up data of protected data assets directly from data protection resources . Through a coordinated use of data protection resources with data protection application and while using advance storage capabilities such as storage area networks SANs and fibre channel FC protocols data protection agent may have direct access to data protection resources . Therefore data protection application performs a data protection operation by reading data from protected data assets and transferring the data to a targeted one of data protection resources or reading the data from data protection resources and writing the data to protected data assets .

Data recovery readiness correlation engine may include data protection management module and recovery analysis and orchestration RAO module . Data protection management module may manage data protection application which is executed on data protection server and or data protection agent . Data protection management module may evaluate the data from protected data assets and data assets in terms of where the data is located and the importance of the data to the user. Similarly data protection management module may be responsible for evaluating and determining what data protection methodologies are being deployed to protect the data on data assets specifically the data in protected data assets . Data protection management module may keep track of the physical storage resources provisioned and in use in data protection resources protected data assets backed up on data protection resources data transfer rates as data is moved between protected data assets and data protection resources data placement correlation to know where data is kept on data assets or data protection resources and or the like.

For example while a primary copy of the data resides in protected data assets a backup or replica copy of the data may exist in data protection resources . The replica may have been created by data protection application running on data protection server and or data protection agent . Data protection application may have created the backup or replica copy of the data on data protection resources using a hardware level disk snapshot a software copy command or the like.

Both data protection management module and data protection application may use one or more databases to store various types of information regarding the data in protected data assets that is being backed up or recovered. Data protection application may track metadata that describes the data in protected data assets the location of the data on data protection resources or the like. Similarly data protection management module may also track data assets in terms of the type of data the location of the data in data assets protected data assets data transfer times other descriptive information about that data and or the like. Data protection management module and data protection application may use various discovery technologies such as agents and standards based discovery application programming interfaces APIs to collect the information about the data protection resources and data assets .

RAO module may interact with the data protection management module data protection server data assets and or data protection resources in order to discover or retrieve a variety of information to determine the data recovery readiness for data assets that require protection such as 

Thus RAO module may interrogate data protection management module and or data protection application running on data protection server to determine the type of data protection and methodology referred to herein as metrics being applied to each of protected data assets . RAO module may also collect metric information on how the existing backup operation performs such as time required for current operation to complete size of data asset to be protected number of channels available to protect the data asset throughput rates achieved for the backup operation resources used to perform the backup and the like.

In order to perform a correlated analysis of data recovery readiness RAO module may solicit a set of recovery policies from policy manager associated with data protection management module and or data protection application running on data protection server . Policy manager may include attributes such as the scope of the policy the recovery objective of the policy or the like. The scope of the policy refers to the data assets covered by the policy such as a file directory drive server or application. The recovery objective of the policy refers to the type of recovery operation to be enforced such as recovery point recovery time or the like.

Once RAO module has identified the recovery policies and the metrics RAO module may then apply the recovery operation associated with each data asset in protected data assets using the metrics that were collected for that data asset. The metrics are applied in such a way as to establish a recovery health index RHI for each of protected data assets . The RHI may be derived by using the information for the backup s of protected data assets as being a representative indication of the restore capacity and throughput that could be achieved during recovery of protected data assets . Thus if protected data assets are managed using a recovery time objective RTO then RAO module may compare the available recent backup information such as transfer times amount of data backup location or the like compared to the recovery time objective desired for each of protected data assets . If the RTO is for recovery in 120 minutes or less RAO module uses the time it takes to perform the backup for each of protected data assets divided by the RTO to establish the RHI for each of protected data assets . For example if the time it takes to perform the backup for a given data asset is 130 minutes then the RHI would be 130 120 1.08. RAO module may then use an algorithm to alert or take action for each of protected data assets with a RHI greater than a predetermined value such as 1.0. RAO module identifies each of protected data assets where the RHI is equal to or less than the predetermined value as being adequately provided for recovery based on the existing approach.

RAO module may also use the RHI algorithm to determine if a recovery point objective RPO may be met. For example if one of protected data assets has an RPO of a snapshot or image 12 times per day RAO module considers the type of snapshot technology being used and a frequency that the snapshot is being captured. The determination made by RAO module depends upon the reporting capabilities of data protection management module the capabilities of data protection application and or monitoring of protected data assets .

The following pseudo code illustrates how this RHI algorithm would work for the various ones of protected data assets being considered 

For those ones of protected data assets with an RHI equal to or less than the predetermined value RAO module may identify those data assets as needing no change. For those ones of protected data assets with an RHI greater than the predetermined value RAO module may identify those data assets as not being able to meet the required recovery needs and additional actions may be needed.

Once RAO module identifies the particular ones of protected data assets for which recovery system is able to meet the required recovery needs RAO module may then evaluate the devices snapshots or other resources needed to recover those data assets. RAO module may evaluate the resources used for the recovery compared to those available for the recovery. That is RAO module analyzes the data protection resources of data protection resources that are used to protect the particular data asset being evaluated and the remaining ones of data protection resources that are available for data protection. If RAO module determines that the required data protection resources are not readily available then RAO module may update the RHI to reflect that recovery may not be possible and would list the resources that are needed which may not be available. Similarly RAO module may make recommendations about alternate data protection approaches that could be used to satisfy the recovery policies for protected data assets .

Once RAO module identifies the particular ones of protected data assets for which recovery system is not able to meet the required recovery needs RAO module may determine if a policy could be implemented that would enable recovery system to meet the required recovery needs. RAO module may analyze each of protected data assets for which recovery system is not able to meet the required recovery needs may analyze the data protection application and interfaces available for effecting a change and may analyze the data protection resources that are available.

If RAO module determines that a recovery policy could be implemented that would meet the required recovery needs of protected data assets then RAO module may automatically implement the determined recovery policy based upon user preferences. Otherwise RAO module may alert an administrator of the determined recovery policy so that the administrator may implement the recovery policy. If RAO module fails to determine a recovery policy that could be implemented that would meet the required recovery needs of protected data assets RAO module may alert an administrator that a recovery policy to meet the required recovery needs of protected data assets could not be determined.

In addition to RAO module identifying the particular ones of protected data assets for which recovery system is or is not able to meet the required recovery needs RAO module may also project data recovery times using an associated recovery analysis module for a test recovery configuration using a repository in data protection resources or a simulated repository by testing a test repository configuration on an existing repository in data protection resources or a simulated repository with a repeating pre defined data workload. For instance recovery analysis module may read and write a defined 100 MB pattern 10 times using a test recovery configuration to an existing repository in data protection resources . Based on this result the recovery factor value for that test recovery configuration and repository may be determined and assigned for use in enhanced RHI calculations.

An exemplary calculation of the estimated recovery time for a given data asset and further used in the calculation of the enhanced RHI based on recovery metrics may be the following equation Recovery Time 

In this exemplary equation the Recovery Timerepresents the total estimated time for recovery for a data asset. D D . . . Drepresent amounts of data stored in backup configurations e.g. repositories for a given data asset. R R . . . Rmay represent estimated recovery throughput rates amount of data per time period for recovery configurations on one or more repositories in data protection resources . The throughput rates may be determined by any recovery operation that occurred from the specific backup configuration or repository. These recovery throughput rates are associated with each backup data configuration or repository and are continually updated to reflect total average recovery throughput rates over time . Alternatively R R . . . Rmay represent recovery times that may be projected for a given test recovery configuration on an existing repository in data protection resources or simulated repository by testing the repository with a repeating pre defined data workload as shown in the above example. If existing recovery time or projected recovery times are not available recovery analysis module may also use predefined backup throughput rates for the data asset.

F F . . . Frepresent recovery rate impact factors associated with each of different existing or test recovery configurations repositories or the like. Recovery rate impact factors are introduced to represent impacts to recovery times and may represent different recovery time characteristics of each possible configuration or repository for backing up data such as distinct time delays associated with network connections repositories or the like. For example a time associated with mounting a tape drive or that normal production connectivity between a storage resource and recovery target has throughput rate of x such as GB Ethernet however in a recovery scenario the connectivity may be limited to 100 MB Ethernet. As such the recovery rate input factors may be used to denote differences in capacity or capability in the infrastructure being used. The recovery rate input factors may be applied to estimate recovery times for each existing or test recovery configuration on an existing repository in data protection resources or simulated repository e.g. a recovery rate impact factor of 0.9 would result in a slower recovery data rate estimated for a given configuration or repository . Recovery rate impact factors may either be set by the recovery analysis module or may be configurable by the user.

If at step the applied recovery operation meets the required objective for the protected data asset then the RAO module identifies the protected data asset as needing no change for the applied recovery operation step . The RAO module then determines if there is another protected data asset to analyze step . If at step there is an additional protected data asset to analyze then the operation returns to step . If at step there is not an additional protected data asset to analyze then the operation ends.

If at step the applied recovery operation fails to meet the required objective for the protected data asset then the RAO module determines if a recovery policy could be implemented that would meet the required recovery needs for the protected data asset step . If at step the RAO module determines a recovery policy that could be implemented that would meet the required recovery needs of the protected data asset then the RAO module may implement the determined recovery policy automatically based upon user preferences step with the operation continuing to step thereafter. If at step the RAO module fails to determine a recovery policy that could be implemented that would meet the required recovery needs of the protected data asset then the RAO module sends an error that the applied recovery operation does not meet recovery objectives and another recovery policy could not be determined step with the operation continuing to step thereafter.

If at step the existing recovery times are not usable then recovery analysis module employs a test recovery configuration in order to establish a projected recovery time for the data asset and repository with the specified characteristics in the request step . Once the test recovery configuration is identified recovery analysis module determines if there is a repository in the data protection resources that meets the characteristics of the repository in the request step . If at step the recovery analysis module is unable to identify a repository in the data protection resources that meets the characteristics of the repository in the request the recovery analysis module determines if a repository may be simulated with the characteristics of the repository in the request step . If at step the recovery analysis module determines that a repository with characteristics of the repository in the request may not be simulated then the recovery analysis module signals an error step with the operation ending thereafter.

If at step the recovery analysis module identifies a repository in the data protection resources that meets the characteristics of the repository in the request or if at step the recovery analysis module determines that a repository with characteristics of the repository in the request may be simulated the recovery analysis module then uses the identified repository or simulated repository to test recovery times using a repeating pre defined data workload asset with characteristics of the data asset in the request step . Once the recovery analysis module receives the test recovery times the recovery analysis module may use the test recovery times as well as any recovery time input factors to project a recovery time for the data asset in the request step with the operation proceeding to step thereafter.

Thus the illustrative embodiments provide for estimating recovery times for data assets. This illustrative embodiment provides an assessment of recovery times for data assets based on the recovery times associated with current data assets and or processing sample data to determine a recovery time for a given data asset. The illustrative embodiments may also provide for a recovery health index for the data asset that may be used for a correlated analysis of data recovery readiness for the data asset.

As noted above it should be appreciated that the illustrative embodiments may take the form of an entirely hardware embodiment an entirely software embodiment or an embodiment containing both hardware and software elements. In one exemplary embodiment the mechanisms of the illustrative embodiments are implemented in software or program code which includes but is not limited to firmware resident software microcode etc.

A data processing system suitable for storing and or executing program code will include at least one processor coupled directly or indirectly to memory elements through a system bus. The memory elements can include local memory employed during actual execution of the program code bulk storage and cache memories which provide temporary storage of at least some program code in order to reduce the number of times code must be retrieved from bulk storage during execution.

Input output or I O devices including but not limited to keyboards displays pointing devices etc. can be coupled to the system either directly or through intervening I O controllers. Network adapters may also be coupled to the system to enable the data processing system to become coupled to other data processing systems or remote printers or storage devices through intervening private or public networks. Modems cable modems and Ethernet cards are just a few of the currently available types of network adapters.

The description of the present invention has been presented for purposes of illustration and description and is not intended to be exhaustive or limited to the invention in the form disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art. The embodiment was chosen and described in order to best explain the principles of the invention the practical application and to enable others of ordinary skill in the art to understand the invention for various embodiments with various modifications as are suited to the particular use contemplated.

