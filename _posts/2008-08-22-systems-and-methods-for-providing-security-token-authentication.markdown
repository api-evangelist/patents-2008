---

title: Systems and methods for providing security token authentication
abstract: Described herein are systems and methods for centralizing and standardizing implementation of security tokens so as to provide one token per one user for accessing business applications across an enterprise, providing scalability to support authentication of as many enterprise users as desired or needed, and providing a standardized token management interface that supports both pre-binding and post-binding user registration processes and different types of security token.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08032932&OS=08032932&RS=08032932
owner: Citibank, N.A.
number: 08032932
owner_city: New York
owner_country: US
publication_date: 20080822
---
The Federal Financial Institutions Examination Council FFIEC required all financial institutions to support multi factor authentication MFA for accessing Internet facing applications that hold personal data by Dec. 31 2006. As refers herein and understood in the art MFA refers to the requirement for accessing an information technology IT system application or service with at least two different methods or factors of authentication. As also referred herein and understood in the art IT encompasses all forms of technology including but not limited to the design development installation and implementation of hardware and software information or computing systems and software applications used to create store exchange and utilize information in its various forms including but not limited to business data conversations still images motion pictures and multimedia presentations technology and with the design development installation and implementation of information systems and applications.

Accordingly MFA delivers a higher level of authentication assurance as opposed to single factor authentication wherein an individual needs only one type of authentication to show access authorization to an IT system application or service. To adhere to the FFIEC mandated MFA financial institutions have implemented multiple authentication mechanisms such as passwords or personal identification numbers PINs biometric identifications and the ubiquitous security tokens. As referred herein and understood in the art a security token may be a hardware or software security token. A hardware security token includes credentials such as one time passwords OTPs stored in a dedicated physical device to aid an individual with user authentication to access an IT system application or service. Examples of hardware security tokens with OTPs include but are not limited to Safeword tokens by Secure Computing Corporation SecurID tokens by RSA and Digipass tokens by VASCO . Unlike a hardware security token a software security token include credentials that may be stored on a general purpose device such as a computer mobile phone or personal digital assistant PDA to aid the individual with user authentication to access an IT system application or service. The same credentials that are stored in a hardware security token may be software implemented as a software token stored in a general purpose device.

As referred herein an enterprise may be a company a corporation or any other organization or business entity. Large business enterprises such as large financial institutions with multiple business units or divisions therein typically implement different types of security tokens for different business units based on the preferences of the later. For example while a foreign exchange FX business unit of a financial institution may offer RSA SecurID tokens to individuals authorized to access the FX systems and applications via the Internet a commodity exchange business unit of the same financial institution may offer VASCO Digipass tokens to individuals authorized to access its commodity exchange systems and applications via the Internet. The authorized individuals may be employees or customers of the enterprise or one of its business units or any other users authorized to access the enterprise s system or business applications therein. As referred herein a business application is an application that is hosted by a business unit and such application may be a financial application an IT application an engineering application or any other application as desired to be hosted by the business unit depending on the type of business unit or the type of the enterprise to which the business unit belongs.

There are a number of issues with the aforementioned conventional token implementation. First because each business unit implements its security token solution the security tokens cannot be shared across the enterprise and between business applications therein. This may raise audit or compliance issues as there is no standard token implementation for each token deployment. Second due to the different types of security tokens implemented for different business units IT support for security tokens is not centralized and becomes more expensive for the enterprise as each of its business units needs to duplicate the token domain and support functions for its own type of security tokens. The added cost also may prohibit each business unit to offer more than one type of security tokens to authorized individuals. Consequently each business unit has to decide which type of security tokens to deploy for its entire customer population regardless of the token preference of each customer. Third the conventional security token architecture is not scalable because each token domain operates as a separate token infrastructure. Because each business unit or application can only point to one token domain for user authentication problems arise when such unit or application needs to support more users than the underlying token infrastructure can support. Fourth authorized individuals need to have multiple tokens to access multiple business applications especially when such applications belong to different business units. That is because tokens cannot be shared between applications if applications are not configured to point to the same token domain for authentication. Consequently the requirement to have multiple tokens may negatively impact the user experience of authorized individuals such as the enterprise customers with the enterprise and affect the enterprise s business.

Thus there is a desire by business enterprises to achieve the goal of one token per one customer so as to increase the customer satisfaction and experience and to reduce operating costs with less issued tokens and a more simplified token infrastructure and supporting functions. To further increase customer satisfaction and reduce support cost business enterprises also desire the ability to offer different types of tokens to different users within each business unit depending on the user preferences or geographical location. For example customers in one geographical region may be more familiar with one specific type of security token and therefore would want to use that token type with less support cost for example less customer service calls on how to operate unfamiliar tokens .

Accordingly described herein are token systems and methods for centralizing and standardizing implementation of security tokens also hereinafter tokens so as to provide one token per one user of an enterprise to reduce operating costs and the user may employ a single token to access applications across the enterprise. These token systems and methods are scalable to support as many enterprise users as desired or needed. In various embodiments described herein there is also provided a token management interface TAMIN for the information security administration ISA and business helpdesks to administer users and tokens with support for both pre binding and post binding token registration processes. The TAMIN may include a web based application having application programming interfaces APIs so that its functions may be integrated into business applications. Also an enterprise is provided with a centralized and standardized authentication interface for all business applications across the enterprise with supports for multiple types of tokens for authentication.

In one embodiment there is provided a system for authenticating a security token provided to request access to at least one business application in an enterprise comprising a plurality of token domains each token domain operates to authenticate a type of security token a lookup database that stores therein a mapping of security tokens to token types and the plurality of token domains a token management interface that operates to register the provided security token by creating a user profile that includes the provided security token a token type of the provided security token as provided by the mapping in the lookup database and a corresponding one of the token domains as also provided by the mapping in the lookup database a user store database that operates to store the user profile and an authentication broker that operates to receive the provided security token from the at least one business application and to look up the provided security token in the user profile stored in the user store database to identify the token type and the corresponding token domain of the provided token so as to authenticate the provided security token.

In another embodiment there is provided a method for authenticating a request to access at least one business application in an enterprise comprising receiving a request for a security token for authenticating the request to access the at least one business application creating a unique user identification UID for the security token request assigning and activating a security token in response to the security token request the security token is identified by a unique token identification looking up the assigned security token and its unique token identification to identify a token type of the assigned security token and an associated token domain for authenticating the assigned security token storing the UID the unique token identification the identified token type and an identification of the associated token domain in a user profile receiving the request to access the at least one business application wherein the request includes the assigned and activated security token responsive to the request to access looking up the assigned and activated security token and its unique token identification in the user profile to identify the token type and the associated token domain of the assigned and activated security token invoking an authentication plug in particular to the identified token type to connect to the associated token domain based on the identification of the associated token domain in the user profile and authenticating the assigned and activated security token with the associated token domain as connected to by the authentication plug in.

For simplicity and illustrative purposes the principles of the embodiments are described by referring mainly to examples thereof. In the following description numerous specific details are set forth in order to provide a thorough understanding of the embodiments. It will be apparent however to one of ordinary skill in the art that the embodiments may be practiced without limitation to these specific details. In other instances well known methods and structures have not been described in detail so as not to unnecessarily obscure the embodiments.

The authentication broker is customer facing. It is operable to receive through its centralized and standardized authentication interface authentication requests from business applications across the enterprise and to forward such requests to appropriate backend token domains for authentication. An authorization request is generated when a user requests to access one of the business applications. The authorization request may be sent to the authentication broker via a software agent of a single sign on SSO authentication application . Alternatively the authorization request may be sent to the authentication broker via an API call from an SSO authentication application . For example the user interacts with such SSO authentication application or which may be a web based application implemented on a client machine such as a client computer that can make calls to the authentication broker to gain access to one or more applications across the enterprise with a single token. The SSO authentication application or may be a standalone application or embedded in a business application which the user requests to access. Although not illustrated in the SSO authentication applications and also may be connected to the authentication broker via a public data network such as the Internet or a private data network such as an intranet. Further details of the authentication broker are described later with reference to .

The SSO user store database stores user profiles that include user data such as user identification user ID or UID personal identification number PIN token serial number or any other unique token identification token type and token domain name that were configured through a pre binding or post binding token registration process. A unique user profile is maintained in the SSO user store database for each user authorized to access one or more business applications of the enterprise. The user profile includes a UID that is unique across the entire SSO user store database regardless of the token type the user has. The UID is used for identification and tracking of the user within the token system . This is to avoid the need for extensive changes to a user s data if a token is lost or replaced. Each UID has a corresponding token with a token serial number that is uniquely mapped to the UID. Thus each user profile includes multi valued attributes for storing token and application access information such as token type token serial number and token domain. A token may be shared by multiple applications across the same or different business units in the enterprise. Each business unit in the enterprise via its business helpdesk may disable a user from accessing its application but it cannot remove the user profile from the SSO user store database .

A user may be permitted to use the token serial number as a username. Alternatively enterprise business units may desire their users to use alphanumeric usernames rather than token serial numbers to log into their sites. These usernames may be of different formats but they are mapped to the user s unique token serial number and UID. Furthermore a user may have multiple usernames. This may occur if a user happens to be a customer of multiple business units and each business unit may use a different login ID for the same user. Each username only may be mapped to one token and one associated UID. However a token and its associated UID may be mapped or linked to multiple usernames.

The SSO user store database may be implemented with lightweight directory access protocol LDAP for querying and modifying data directories therein. For example the SSO user store database utilizes three LDAP object classes to store SSO user and token information. The first LDAP object class is a structural object class that is used to store basic user information such as the UID attribute and the user s personal information home phone home address picture ID department number office number etc. . The second LDAP object class is an auxiliary object class used to store SSO user information such as login ID and password history of the user. The third LDAP object class is a structural object class used to store the user s token information such as the token serial number the token type and the token domain to which the token belongs.

The token domain lookup database is operable to store token to domain mapping information which is needed when there are multiple domains of the same token type to provide scalability to the token system . Without the token domain mapping information customers would need to provide token type and token domain name information when registering tokens which is impractical and burdensome on the users. With the token domain mapping information stored in a database users merely provides token serial number information when registering tokens. A token domain lookup data upload utility is used to upload token domain mapping information to the token domain lookup database .

The identity manager serves as a token management interface TAMIN that is accessible by the business helpdesks e.g. one helpdesk per business unit and the ISA to administer authorized users and their tokens. In one embodiment an administrator in the ISA has the authority to enable or assign or disable or unassign a user s token via the identity manager if the user has been given access to multiple applications of multiple business units to create a user profile to modify a user profile to delete a user profile to create business applications for business units to assign application owners e.g. business unit to business applications to upload the token serial numbers and token domain association to grant user access to a business application and to revoke user access from a business application. Whereas a business helpdesk administrator of a business unit is authorized to create user profiles in any desired SSO LDAP and associate the profile to any token domain to link and unlink token to modify or delete a user profile if such profile has access to only those business applications in the business unit with which the business help desk is associated and to grant or revoke access to those business applications in the associated business unit e.g. lock unlock enable and disable user accounts . However a business helpdesk administrator cannot modify or delete a user profile if the associated user has access to applications in more than one business units. Thus the TAMIN application includes a set of APIs that facilitate the above functions by the business helpdesks and ISA .

As illustrated in the identity manager interacts with the token domain lookup database the SSO user store database and the plurality of backend token domains . It is operable to retrieve the token type and token domain information from the token domain lookup database so as to register and administer users that are authorized to access the business applications in the enterprise. In one embodiment the identity manager may be implemented as a web based application that employs various LDAP and database tables to store token domain mapping information and audit log information. For identity manager server access SSO user ID and password may be used by business helpdesk and ISA administrators to establish HTTPS to secure the connection between their remote web browsers and the identity manager server to log into the TAMIN application therein.

When registering a new user the identity manager retrieves or looks up the token type and token domain information from the token domain lookup database and creates a user profile for each user in the SSO user store database . It then administers each user by unlocking the corresponding backend token domain for the user s token. An administrator from a business helpdesk may modify or delete user profiles when the users associated with such profiles are limited to access only those applications that belong to the associated business unit. If the user profile has additional access to any other application that belongs to another business unit user profile updates are carried out by the ISA who has the authority to create and modify all user profiles.

The backend token domains enable the token system to support various token types. Thus the backend token domains are operable for processing authentication requests forwarded by the authentication broker . Authentication results or statuses pass or fail may be returned back to the authentication broker . Additional token domains may be set up depending on user demand. In one embodiment for continuity of business purpose each token domain may be configured to have at least two servers so if the primary server fails the secondary or backup server may step in to provide authentication service to end users. For applications that desire better performance or high availability additional server may be added to a token domain.

The first backend token server is operable for authenticating users that have a first type of security token. For example the first token server may be a Safeword server operable for authenticating Safeword users. There may be multiple Safeword domains and each Safeword domain may have multiple Safeword servers to provide scalability for token authentication. Each Safeword domain may have as many as 10 servers and support up to one million token users. Thus additional token domain may be set up if more than one million Safeword users are in the SSO user store database.

Likewise the second backend token server is operable for authenticating users that have a second type of security token. For example the second backend token server may be a SecurID server operable for authenticating SecurID users. There may be multiple SecurID domains and each SecurID domain may have multiple SecurID servers to provide scalability for token authentication.

Certain token types such as VASCO token do not come with their own standalone infrastructures or administrative interfaces. Rather the token user data may reside in a LDAP store such as the VASCO token database accessed via a security infrastructure that supports SSO authentication as provided by one or more other components in the token system . Thus in one embodiment the administrative interface for such token type includes a web application that provides a web based graphical user interface GUI to administrators e.g. business desk and ISA administrators with backend communication using LDAP for token management functions. For example the authentication broker may be employed as the authentication interface for VASCO users and the identity manager or another web based service platform may be used as the administrative interface to administer VASCO users with LDAP for the VASCO token database and the VASCO users. The VASCO LDAP token database serves as a backend VASCO token domain that is operable to store VASCO user and token information with a SSO policy server in the authentication broker acting as the authentication front end or interface. The identity manager may be employed as a user registration server to register users in the SSO user store database as VASCO users.

A VASCO administration server not shown may be employed to interact with the VASCO database in order to administer VASCO users such as assigning a VASCO token to a user. When registering a VASCO user the identity manager first retrieves the token type and token domain name information from the token domain mapping LDAP based on the token serial number provided by the user. The identity manager then creates the user entry in the SSO user LDAP and stores the token serial number token type and token domain name information in the user entry in the VASCO token database . All VASCO data stored in the VASCO token database may be encrypted and administrative access to the identity manager for user registration and to the VASCO administration server for administering users may be protected using HTTPS SSL with SSO authentication. Again there may be multiple token databases in the token system .

The SSO policy server acts as an authentication interface and stores user specific security policies such as user authentication mechanisms static or OTP and uniform resource locator URL authorization. These policies are set by the administrator of the authentication broker who may be an IT administrator of the enterprise that hosts or maintains the token system .

At a registration agent RA of the enterprise receives a request for example from a customer for a token to access a business application hosted or provided by the enterprise. As part of the request the customer may provide the RA with personal information such as name address home phone number picture ID and department number and office number e.g. if customer is an employee of the enterprise . The RA may be a customer representative of the enterprise. The customer may make the token request remotely or in person to the RA at one of the enterprise s designated location. For example if the enterprise is a financial institution such as a bank the customer may request a token at a bank s branch office where a RA may assist the customer with the request. Alternatively the customer may remotely make a phone call to a number designated by the enterprise to request the token or use a web browser to remotely access a web site designated by the enterprise to request the token. Multiple RA s may be employed by the enterprise to handle token requests from enterprise customers.

At the RA forwards the token request to an ISA which may be centrally located to receive token requests forwarded by all RA s of the enterprise. The RA may forward the token request to the ISA internally within the enterprise via internal paper mail e mail or other electronic messaging in a manner known in the art.

At in response to the token request from the customer the ISA creates a UID for the customer that is unique across the entire SSO user store database . The ISA creates the UID by logging on to the identity manager which acts as a token management interface TAMIN with APIs that are accessible by the ISA for administering authorized users and tokens.

At the ISA also uses the identity manager or TAMIN to assign and activate a token having a token serial number and an associated PIN to the customer. The customer is to use the token in conjunction with the associated PIN in order to access the requested business application. It should be noted that prior to the commencement of the user registration process the ISA employed the token domain lookup data upload utility to upload the token domain mapping information to the token domain lookup database . As noted earlier the token domain mapping information maps each token and its token serial number to the token type and backend token domain .

At the ISA mails or otherwise forwards the personal identification number PIN information directly to the customer.

At the ISA separately mails or otherwise forwards the assigned token to the RA. The ISA also forwards the token serial number and associated UID information to a business helpdesk that is associated with the requested business application.

At an administrator or user at the business helpdesk logs on to the identity manager and uses the APIs thereof to gain access to the token domain lookup database .

At the helpdesk administrator looks up the token serial number in the database to identify the associated token type and backend token domain information.

At the identity manager as directed by the helpdesk administrator uses the looked up information to create a customer s user profile for storage in the SSO user store database . As noted earlier the user profile includes the UID and PIN created for the customer by the ISA the token serial number of the token assigned to the customer and the looked up token type and backend token domain name.

At the SSO user store database returns a user creation status to the identity manager to indicate a user profile has been created and saved.

At the identity manager as directed by the helpdesk administrator may display the user creation status to the helpdesk administrator to provide notification of the creation of the user profile for the customer. In one embodiment the identity manager or TAMIN is operable to keep track of token statistics such as the number of active users the number of users being locked and the number of tokens being activated for each business unit. This enables the enterprise and its business units therein to generate token statistics reports.

At referring back to once the RA receives the assigned token from the ISA it mails or otherwise forwards the token to the customer separately from the PIN mailing by the ISA . Thus for added security the assigned token and PIN are not mailed together to the customer. The customer now has both the PIN and token for multi factor authentication MFA to access the enterprise s IT system. Alternative embodiments are contemplated wherein an authentication mechanism other than PIN may be assigned at for MFA. As described above to create a more customer friendly service the RA is tasked with mailing the assigned token to the customer because the RA has a closer bond with the customer. However alternative embodiments are contemplated wherein the ISA may also mail out the assigned token separately from the mailing of the PIN to the customer.

It should be noted that steps are performed by the business helpdesk at a business unit to create a user profile because it is assumed that the customer s request for a token at is for accessing one or more business applications provided by the business unit. However if the customer s request at is a for a token to access business applications in more than one business unit a business helpdesk at each business unit is not authorized to create update or otherwise modify a user profile having such a token. Instead the ISA is to perform the steps . Furthermore it should be noted that some or all of the steps may be performed by the business helpdesk in lieu of the ISA depending on how much access to the token database the business helpdesk is allowed to have. Also it should be understood that the pre binding registration process may be automatically performed without any intervention by the RA the business helpdesk or the ISA through appropriate programming for the RA the business helpdesk and the ISA .

At a customer wishing to access one or more business applications e.g. business application in in the enterprise may pick up or otherwise obtain a token from a location designated by the enterprise. For example if the enterprise is a financial institution such as a bank it may designate one or more of its local bank branches as a location to pick up a token. As a condition for obtaining the token the customer may provide the enterprise with personal information such as name address home phone number picture ID and department number and office number e.g. if customer is an employee of the enterprise .

At once the customer has possession of the token the customer may remotely activate the token for use by a software application such as a web based application that interacts with a business application that the customer desires to access with the obtained token.

At the business application activates the token for the customer and logs on to the identity manager which acts as a TAMIN with APIs that are accessible by the business application for administering authorized users and tokens. The business application uses the identity manager or TAMIN to create a UID for the customer that is unique across the entire SSO user store database .

At the business application also uses the identity manager or TAMIN via the APIs provided by the later to assign a PIN to the customer. The customer is to use the obtained token in conjunction with the associated PIN in order to access the business application which is desired by the customer. Alternative embodiments are contemplated wherein an authentication mechanism other than PIN may be assigned here for MFA.

At the business application logs on to the identity manager and uses the APIs thereof to gain access to the token domain lookup database .

At the business application looks up the token serial number of the token obtained by the customer in the database to identify the associated token type and backend token domain information. It should be noted that prior to the commencement of the user registration process the ISA employed the token domain lookup data upload utility to upload the token domain mapping information to the token domain lookup database . As noted earlier the token domain mapping information maps each token and its token serial number to the token type and backend token domain .

At the identity manager as directed by the business application uses the looked up information to create a customer s user profile for storage in the SSO user store database . As noted earlier the user profile includes the UID and PIN created for the customer by the business application the token serial number of the token obtained by the customer and the looked up token type and backend token domain name.

At the SSO user store database returns a user creation status to the identity manager to indicate a user profile has been created and saved. The SSO user store database also returns the activation status of the token for example to indicate that the token has been activated to the identity manager . In one embodiment the identity manager or TAMIN is operable to keep track of token statistics such as the number of active users the number of users being locked and the number of tokens being activated for each business unit. This enables the enterprise and its business units therein to generate token statistics reports.

At the business application retrieves the token activation status and forwards it along with the assigned PIN to the customer. Thus the customer now has an activated token and a PIN for multi factor authentication to access a business application.

It should be noted that steps are performed by a business application at a business unit to create a user profile because it is assumed that the customer s request for a token at is for accessing one or more business applications provided by the same business unit. However if the customer s token obtained at is for accessing business applications in more than one business unit a business application or it business helpdesk at the associated business unit is not authorized to create update or otherwise modify a user profile having such a token. Instead the business application is replaced with the ISA in steps . Also it should be understood that actions automatically performed by the business application in the post binding registration process may be performed by an administrator at a business helpdesk that handles the business application for a business unit.

At using a security token the customer requests access to a business application by accessing an SSO authentication application or within a business application that the user wishes to access to enter authentication credentials such as a username a PIN and an OTP of a security token along with the token serial number . As discussed earlier the token may have been provided to the customer through a pre binding or post binding registration process.

At once the SSO authentication application receives the user authentication credentials which are included in the authentication requests it forwards the credentials to the authentication broker which includes a SSO policy server acting as the authentication front end or interface to receive the authentication credentials from the business application.

At the SSO policy server processes the authentication credentials to determine the validity of those credentials other than the security token based on predetermined user specific SSO policies stored in the server . If the authentication credentials are valid the server forwards the entered security token along with its token serial number to the token ID server . Otherwise the server rejects the access request and notifies the customer of the rejection.

At the token ID server looks up the security token and its token serial number in the SSO user store database to determine the token type and backend token domain name to be used for authenticating the token and its user.

At based on the token type returned by the SSO user store database the token ID server invokes the proper authentication plug in . For example if the type of token used by a user for access authentication is Safeword or SecurID the token ID server invokes a plug in which may be a remote authentication dial in user service RADIUS plug in. If the user s token type is a VASCO it invokes the VASCO authentication plug in .

At based on the backend token domain name returned by the SSO user store database the invoked authentication plug in connects to the particular backend token domain. For example the plug in connects to a SecurID domain . If there are more than one SecurID domain the backend token domain name returned by the SSO user store database enables the plug in to select the particular SecurID domain for connection thereto.

At the selected backend token domain proceeds to authenticate the customer by authenticating the token serial number and OTP of the customer s token.

At the backend token domain returns the authentication status pass or fail to the authentication plug in which passes such status on to business application and SSO authentication application therein to the customer to indicate whether authentication is successful so that the customer can access the desired business application.

The computer system also includes a main memory where software is resident during runtime and a secondary memory . The secondary memory may also be a computer readable medium CRM that may be used to store software programs applications or modules that implement the processes plug ins and configuration files and . The main memory and secondary memory and an optional removable storage unit each includes for example a hard disk drive and or a removable storage drive representing a floppy diskette drive a magnetic tape drive a compact disk drive etc. or a nonvolatile memory where a copy of the software is stored. In one example the secondary memory also includes ROM read only memory EPROM erasable programmable ROM EEPROM electrically erasable programmable ROM or any other electronic optical magnetic or other storage or transmission device capable of providing a processor or processing unit with computer readable instructions.

The computer system includes a display connected via a display adapter user interfaces comprising one or more input devices such as a keyboard a mouse a stylus and the like. However the input devices and the display are optional. A network interface is provided for communicating with other computer systems via for example a network.

Accordingly the token systems and methods as described herein for centralizing and standardizing the implementation of security tokens for user authentication do not impact existing customer login experience. Thus they may be implemented into an existing IT system of an enterprise in a manner transparent to the enterprise customers to provide token authentication using familiar tokens that the customers already possess. Furthermore the various token solutions described herein provide the enterprise with the flexibility and scalability to adapt new token products and technologies increase the number of authorized users by increasing the number of backend token domains enable each enterprise customer to use only one token to access business applications across the enterprise to improve customer experience and service. Business application development cycle is also shortened because they may be securely protected with a security token through implementation of a SSO authentication application such as a SSO web agent therein.

What has been described and illustrated herein are various embodiments along with some of their variations. The terms descriptions and figures used herein are set forth by way of illustration only and are not meant as limitations. Those skilled in the art will recognize that many variations are possible within the spirit and scope of the subject matter which is intended to be defined by the following claims and their equivalents in which all terms are meant in their broadest reasonable sense unless otherwise indicated.

