---

title: Dynamically updating backup configuration information for a storage cluster
abstract: Various embodiments of a system and method for updating backup configuration information used by backup software to perform backup operations for a storage cluster are described. Backup configuration information specifying a configuration of the storage cluster may be stored. Subsequently, a particular change to the configuration of the storage cluster may be automatically detected. In response to detecting the particular change, the backup configuration information may be automatically updated to reflect the particular change to the configuration of the storage cluster. Subsequent backup operations may then be performed using the updated backup configuration information.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08380951&OS=08380951&RS=08380951
owner: Symantec Corporation
number: 08380951
owner_city: Mountain View
owner_country: US
publication_date: 20081001
---
This invention relates to backup software for a storage cluster that includes a plurality of nodes that host storage volumes and a plurality of backup storage devices. More particularly the invention relates to a system and method for dynamically updating the backup configuration information used by the backup software in response to automatically detecting changes in the configuration of the storage cluster.

Computer executable backup software is often used to backup data in order to protect it against hardware failure accidental deletion or data corruption. The data may be stored in one or more file system volumes in the form of files. Backup software may operate to backup a volume either at the file level by individually backing up each file in the volume on a file by file basis or at the block level by creating a block level backup image of the volume typically including metadata for managing the volume as well as the file data .

Backup software can be used to backup data stored on standalone computers as well data stored in storage clusters that include a plurality of nodes. For example each node in a storage cluster may host one or more storage volumes that need to be backed up. The storage cluster may include one or more separate backup storage devices onto which the volume data from the nodes is backed up. In order to perform backup operations for a storage cluster the backup software needs to know various aspects of the cluster s configuration such as the cluster topology e.g. which nodes and backup storage devices are present in the cluster and how they are interconnected as well as other information such as which volumes are implemented in the cluster and which node hosts each volume.

Various embodiments of a system and method for updating backup configuration information used by backup software to perform backup operations for a storage cluster are described herein. The storage cluster may include a plurality of nodes and a plurality of backup storage devices. Each node may host one or more storage volumes. The backup software may execute to perform various backup operations to backup the storage volumes from the nodes to the backup storage devices.

According to one embodiment of the method backup configuration information specifying a configuration of the storage cluster may be stored. Subsequently a particular change to the configuration of the storage cluster may be automatically detected. In response to detecting the particular change the backup configuration information may be automatically updated to reflect the particular change to the configuration of the storage cluster. One or more backup operations may then be performed using the updated backup configuration information to backup one or more of the storage volumes from one or more of the nodes to one or more of the backup storage devices.

In some embodiments automatically detecting the particular change to the configuration of the storage cluster may comprise registering with one or more software modules to receive notifications of changes to the configuration of the storage cluster. After registering with the one or more software modules a notification indicating the particular change to the configuration of the storage cluster may be received. The backup configuration information may then be updated in response to the notification.

While the invention is susceptible to various modifications and alternative forms specific embodiments thereof are shown by way of example in the drawings and are described in detail. It should be understood however that the drawings and detailed description thereto are not intended to limit the invention to the particular form disclosed but on the contrary the intention is to cover all modifications equivalents and alternatives falling within the spirit and scope of the present invention as defined by the appended claims.

Various embodiments of a system and method for updating the backup configuration information used by a backup software application to perform backup operations for a storage cluster are described herein. The storage cluster may include a plurality of nodes and a plurality of backup storage devices. Each node may host one or more storage volumes. The backup software may control backup operations for the storage cluster e.g. to backup the volumes from each of the nodes onto one or more of the backup storage devices.

Briefly described the method may operate to perform a discovery process to discover backup configuration information used to backup the data from the nodes. For example the backup configuration information may specify the topology of the storage cluster such as which nodes are present which backup storage devices are present and which nodes are connected to which backup storage devices. The backup configuration information may also include other types of information needed to backup data from the nodes such as which storage volumes are present and which volumes are hosted on which nodes.

The backup configuration information discovered in the discovery process may be stored and used by the backup software when performing backup operations. In addition the backup software may be operable to automatically detect changes to the configuration of the storage cluster and update the backup configuration information to reflect the changes. For example in some embodiments the backup software may register with one or more software modules to automatically receive notifications of changes to the configuration of the storage cluster. In other embodiments the backup software may automatically detect changes to the configuration of the storage cluster in other ways such as by periodically polling one or more of the devices in the storage cluster.

Examples of storage cluster configuration changes which the backup software may automatically detect include changes such as a new node or backup storage device being added to the storage cluster an existing node or backup storage device being removed from the storage cluster a connection between a particular node and backup storage device being added or removed a new volume being added an existing volume being deleted an existing volume being moved from one node to another node etc.

In response to detecting a particular change to the configuration of the storage cluster the backup software may update the stored backup configuration information to reflect the change. This may enable the backup configuration information to remain current as the configuration of the storage cluster dynamically changes over time. Thus the backup software may have up to date backup configuration information that enables backup operations to be performed correctly and efficiently.

In various embodiments the method described above may provide an efficient technique for keeping the backup configuration information used by the backup software up to date as the configuration of the storage cluster changes. For example in some embodiments the discovery process in which the topology information and other backup configuration information is discovered may be relatively expensive to perform in terms of time and or bandwidth especially for large clusters with many nodes and backup storage devices. However the discovery process may only need to be performed once and thereafter the backup software may be automatically notified of changes to the configuration of the storage cluster so that the stored backup configuration information can be efficiently updated.

Referring now to an example of a system which may utilize the method is illustrated. The system includes a plurality of nodes and a plurality of backup storage devices . The plurality of nodes and the plurality of backup storage devices are collectively referred to herein as a storage cluster. In this example the storage cluster includes four nodes A D and seven backup storage devices A G. However in other embodiments the storage cluster may include different numbers of nodes and backup storage devices .

Each node in the storage cluster may host one or more volumes. As used herein the term volume refers to a set of files in which data is stored. A volume is also referred to herein as a storage volume. A node hosting a volume means that the node enables software applications to access the volume e.g. in order to read data from and or write data to the files in the volume. The software applications that access the volume may execute on other devices in the system and may communicate with the node through a local area network to access the volume. For example as illustrated in the system may include one or more client computers which execute software applications that access volumes hosted by the nodes . For example in some embodiments the client computers A and B may be application server computers which execute database applications electronic commerce applications or other types of software applications which use files stored in volumes hosted by various nodes .

The system also includes a backup server computer on which backup software executes to perform or control backup operations for the storage cluster. For example as described below the backup software may communicate with the nodes and instruct particular nodes to backup their data onto particular backup storage devices . In other embodiments the backup software may be distributed across multiple backup server computers. In some embodiments the backup server computer may operate primarily to perform or manage backup operations for the storage cluster while in other embodiments the backup server computer may be a general purpose server computer that also performs various other functions to manage the storage cluster.

In various embodiments each node may be any type of device configured to host storage volumes for access by software applications which execute on other devices in the system. In some embodiments the nodes may be devices specialized for or dedicated to providing file sharing or volume hosting services for other devices in the system e.g. for the client computers . Examples of nodes include network attached storage NAS devices network appliances intelligent storage devices etc. In various embodiments the nodes may include various types of storage on which the volume files are stored such as one or more disk drives. In some embodiments each node may include a plurality of high performance and high capacity disk drives which enable the node to store a large amount of data and serve the data quickly over the local area network to the client computers .

As illustrated in in some embodiments the backup software executing on the backup server computer and the software applications executing on the client computers may communicate with the nodes through a virtual interface referred to as the cluster interface .

In various embodiments the nodes may be coupled to the backup storage devices in any of various ways. For example in some embodiments the nodes may communicate with the backup storage devices through one or more storage area networks SANs . In the example illustrated in the system includes two SANs A and B. The node A is configured to access both the SAN A and the SAN B whereas the nodes B C and D are only configured to access the SAN B. In this example the node D is also configured to access the backup storage device G without communicating through a SAN. For example the backup storage device G may be coupled directly to the node D through a communication bus for example.

It is noted that is provided as an example and in various other embodiments the nodes and backup storage devices may be interconnected according to any desired architecture and may use any of various technologies to communicate such as direct attached storage iSCSI storage or through fibre channel networks or any of various other types of networks.

In various embodiments each backup storage device may be any type of device operable to store data. Examples of backup storage devices include disk storage units e.g. devices including one or more disk drives tape storage devices e.g. devices operable to store data on tape cartridges optical storage devices e.g. devices operable to store data on optical media flash memory storage devices etc.

Also in various embodiments the backup server computer and the client computers may be coupled to and may communicate with the nodes in any of various ways. For example the backup server computer and or the client computers may be coupled to the nodes through any type of network or combination of networks. For example the network may include any type or combination of local area network LAN e.g. the LAN in a wide area network WAN wireless networks an Intranet the Internet etc. Examples of local area networks include Ethernet networks Fiber Distributed Data Interface FDDI networks and token ring networks. Also each device may each be coupled to the network using any type of wired or wireless connection medium. For example wired mediums may include Ethernet fiber channel a modem connected to plain old telephone service POTS etc. Wireless connection mediums may include a wireless connection using a wireless communication protocol such as IEEE 802.11 wireless Ethernet a modem link through a cellular service a satellite link etc.

Referring again to the node A can potentially access any of the backup storage devices A F through the SANs A and B and the nodes B D can potentially access any of the backup storage devices D F through the SAN B. However in order to actually communicate with a particular backup storage device a particular node may first need to establish a connection e.g. a virtual connection or communication link to the particular backup storage device. According to the terminology used herein a particular node is said to have a connection to a particular backup storage device at a given time if the particular node is currently able to send data to the particular backup storage device e.g. in order to backup the data from a volume hosted on the particular node .

For example illustrates a particular point in time in which the node A has established connections to the backup storage devices B and D the node B has established a connection to the backup storage device E the node C has established a connection to the backup storage device F and the node D has established a connection to the backup storage device G. Thus at the point in time illustrated in the node A is currently able to backup its volume data to either one of the backup storage devices B and D and the other nodes are similarly able to backup their volume data to the respective backup storage devices to which they currently have connections.

In some embodiments the backup software may perform or control a backup operation by instructing a particular node to backup one or more of its volumes to a particular backup storage device . Thus the backup software may need to know which backup storage devices are currently connected to the particular node e.g. which backup storage devices the particular node has established connections with . For example in the backup software may select one of the backup storage devices B or D to which the node A is currently connected and may instruct the node A to backup one or more of the volumes currently hosted on the node A to the selected backup storage device. However the connections between nodes and backup storage devices may change over time. The method described below may enable the backup software to dynamically update backup configuration information which specifies the current connections between nodes and backup storage devices as the connections change over time. The method may also enable the backup configuration information to be dynamically updated to reflect various other aspects of the storage cluster s configuration as discussed below.

The backup configuration information used by the backup software may be initially discovered through a discovery process e.g. a process performed or initiated by the backup software in order to determine information about the topology of the storage cluster and other aspects of the storage cluster s configuration. In various embodiments the discovery process may operate to determine any kind of information regarding the configuration of the storage cluster. is a flowchart diagram illustrating one embodiment of the discovery process.

In block the nodes present in the storage cluster may be automatically discovered. In various embodiments any node discovery techniques known in the art may be used to discover which nodes are currently present and functioning in the storage cluster. As one example the backup software may send a node discovery message over one or more networks to the storage cluster where the node discovery message is delivered to each node on the network and requests the nodes to reply by identifying themselves. As another example the backup software may communicate with one or more other server computers in the cluster to request information specifying which nodes are currently in the storage cluster.

In block the backup storage devices present in the storage cluster may be automatically discovered. In various embodiments any of various techniques may be used to discover which backup storage devices are currently present and functioning in the cluster. For example the backup software may send a discovery message to which the backup storage devices reply or may communicate with one or more other server computers or with the nodes to request information specifying which backup storage devices are currently in the storage cluster.

In block the backup software may operate to automatically determine which nodes are currently connected to which backup storage devices. For example in some embodiments the backup software may communicate with each respective node in the storage cluster and request it to reply with a list of backup storage devices with which the respective node can currently use for backup. In another embodiment the backup software may communicate with each respective backup storage device in the storage cluster and request it to reply with a list of nodes with which the respective backup storage device can communicate. In another embodiment the backup software may retrieve information from another server or database that specifies which nodes are currently connected to which backup storage devices.

In block the backup software may operate to automatically determine information regarding storage volumes implemented in the storage cluster. In particular the backup storage device may determine a list of volumes that need to be backed up and may determine which node hosts each volume. In some embodiments the cluster may provide a mapping technique e.g. through a proprietary application programming interface API or through an extension of a standardized interface such as Network Data Management Protocol NDMP to map a file system path into volumes and relate these volumes to nodes. For example the mapping technique may enable the backup software to discover information regarding each volume such as the mount point or relative path at which the volume is mounted in the networked file system a globally unique volume ID for the volume and the node currently managing the volume.

Thus during the discovery process the backup software may discover backup configuration information needed for correctly backing up the data from the nodes to the backup storage devices. The backup configuration information may include information specifying the topology of the storage cluster such as which nodes are present which backup storage devices are present and which nodes are connected to which backup storage devices. The backup configuration information may also include information regarding the data to be backed up such as a list of file system volumes implemented in the storage cluster and which volumes are hosted on which nodes.

In block the backup software may store the backup configuration information discovered in the discovery process e.g. on non volatile storage e.g. a disk drive or in dynamic memory of the backup server . In various embodiments the backup configuration information may be structured or stored in any of various ways e.g. in one or more data structures files or databases.

Once the backup configuration information has been discovered and stored the backup software may be able to perform backup operations using the backup configuration information. The term backup operation refers to any operation in which data is backed up from one or more of the nodes to one or more of the backup storage devices. In some embodiments the backup software may perform a backup operation by communicating with a node to instruct the node to backup one or more of the node s volumes to a selected backup storage device.

In some embodiments the backup software may include an administration tool that enables an administrator of the cluster to specify a desired time schedule for the backup operations and the backup software may automatically initiate the backup operations according to the time schedule. As one example the administrator may specify one group of volumes to be backed up daily and another group of volumes to be backed up weekly.

It is possible for the configuration of the storage cluster to change over time so that the backup configuration information initially discovered no longer reflects the current configuration of the storage cluster. Continuing to use the original backup configuration information after the configuration of the storage cluster has changed may result in failures or inefficiencies in the backup operations. As one example if a volume has moved from one node to another node then an error may occur if the backup software attempts to access the volume on the first node. As another example if a particular node becomes disconnected from a particular backup storage device then an error may occur if the backup software instructs the particular node to communicate with the particular backup storage device to back up its data.

In block the backup software may automatically detect a particular change to the configuration of the storage cluster. In response to detecting the change the backup software may update the backup configuration information to reflect the change to the configuration of the storage cluster as indicated in block . The backup software may then perform one or more backup operations using the updated backup configuration information as indicated in block .

In various embodiments the backup software may be configured to automatically detect changes in the configuration of the storage cluster using any of various techniques. The changes to the configuration of the storage cluster may be programmatically detected by the backup software e.g. without user input specifying the changes. In some embodiments the changes may also be automatically detected by the backup software in real time e.g. within seconds or microseconds after the changes occur.

In block the backup software may register with one or more software modules to receive notifications of changes to the configuration of the storage cluster. For example each respective software module of the one or more software modules may be operable to automatically detect when a particular type of configuration change affecting backup operations for the storage cluster occurs. Registering with the respective software module may cause the respective software module to automatically notify the backup software when the particular type of configuration change occurs. For example the respective software module may notify the backup software in real time in response to the configuration change.

For each respective software module of the one or more software modules registering with the respective software module may comprise calling an application programming interface API of the respective software module or storing or requesting other software to store registration information specifying that the respective software module should notify the backup software when the particular type of change in the configuration of the storage cluster occurs.

Each software module of the one or more software modules is a respective portion of software that executes on one or more of the devices in the storage cluster. Each of the software modules may execute on any device in the storage cluster and may be a part of or may be associated with any of various types of software such as operating system software device management software network software file system software volume manager software client side backup software etc.

In various embodiments each of the one or more software modules may be operable to detect any of various kinds of changes in the configuration of the storage cluster e.g. any kind of configuration change that affects the backup operations performed for the storage cluster. Examples of configuration changes that may be automatically detected by various software modules in the storage cluster include a new node joining the storage cluster a new backup storage device joining the storage cluster an existing node being removed from the storage cluster an existing backup storage device being removed from the storage cluster a particular node establishing a connection to a particular backup storage device a particular node becoming disconnected from a particular backup storage device a new file system volume being added in the storage cluster an existing file system volume being deleted from the storage cluster an existing file system volume being moved from one node to another node etc.

Thus in various embodiments any of various types of software modules executing on various devices in the storage cluster may automatically detect any of various kinds of configuration changes in the storage cluster and may notify the backup software of the change in response to detecting the change. This may enable the backup software to be notified in response to dynamic configuration changes which affect backup operations performed by the backup software .

In various embodiments a software module may notify the backup software of a configuration change in any of various ways. In some embodiments the software module may asynchronously notify the backup software of the configuration change. In some embodiments notifying the backup software of the change may comprise programmatically calling a function or application programming interface API of the backup software to inform the backup software of the change. As another example notifying the backup software of the change may comprise sending a message over a network to the backup server on which the backup software executes to inform the backup software of the change.

Referring again to in block the backup software may receive a particular notification indicating a particular change to the configuration of the storage cluster e.g. may receive the particular notification from a particular software module with which the backup software registered in block .

As indicated in block in response to the particular notification the backup software may update the backup configuration information to reflect the particular change to the configuration of the storage cluster. For example updating the backup configuration information may include one or more of changing part or all of the backup configuration information previously stored adding new backup configuration information to the previously stored backup configuration information or deleting part of the previously stored backup configuration information.

As indicated in block the backup software may then perform one or more backup operations using the updated backup configuration information. Since the backup configuration information has been updated to reflect the current configuration of the cluster after it was changed the updated backup configuration information may enable the backup software to perform the one or more backup operations correctly and efficiently.

As indicated by the flowchart arrow returning from block to block the above described process of receiving notifications of changes to the configuration of the storage cluster and updating the backup configuration information in response to the notifications may be performed multiple times such that the backup configuration information is kept up to date as the configuration of the storage cluster changes over time.

The above described method may not only enable subsequent backup operations that are initiated after the backup configuration information has been dynamically updated to be performed correctly but may also enable automatic recovery for backup operations that fail as a result of the storage cluster being changed. For example suppose that a large volume is being backed up but before the backup operation completes the volume is dynamically moved to a different node e.g. such that the volume is no longer hosted by the original node. The backup software may be notified of this configuration change. For example the backup software may have previously registered with a volume manager module on the original node or on the new node which notifies the backup software that the volume has been re located to the new node. Thus the backup software may gracefully terminate the current backup operation and communicate with the new node to automatically begin a new backup operation to backup the volume e.g. because the updated volume information specifies that the volume is now hosted by the new node.

In other embodiments the backup software may automatically receive a notification from a software module indicating a change to the configuration of the storage cluster without previously registering to receive such notifications. For example in some embodiments each node in the storage cluster may execute software configured to automatically discover the backup software on the backup server when the node joins the storage cluster and communicate with the backup software to inform the backup software that the node has joined the storage cluster. In other embodiments the backup software may include one or more polling software modules which execute to periodically communicate with various devices in the cluster in order to detect whether the configuration of the cluster has changed. For example in some embodiments the backup software may include a polling module operable to periodically send a status message to each node in the cluster. Thus for example the backup software may automatically detect that a particular node is no longer in the cluster if the particular node fails to respond to the status message.

As a few example uses of the method described above according to various embodiments consider the following examples.

The backup software registers with a software module in order to request to receive automatic notifications when a particular node establishes a new connection to a new backup storage device or closes one of its current connections to a backup storage device. For example in some embodiments the backup software may register with a Simple Network Management Protocol SNMP software module on the node or on another computer in the system which is operable to detect such changes and notify the backup software in response.

Thus if the particular node established a new connection to a new backup storage device then the backup software may receive a notification of this change and update its stored backup configuration information accordingly. The updated backup configuration information may be used to optimize backup operations involving the particular node. Suppose for example that in the example of the node B becomes connected to the backup storage device D and the node C becomes connected to the backup storage device E so that the node B now has connections to both the backup storage device D and the backup storage device E and the node C now has connections to both the backup storage device E and the backup storage device F. In some embodiments the backup software may attempt to backup data in parallel from multiple nodes e.g. by backing up multiple volumes in parallel from different nodes . If the backup storage device E is currently in use to backup data from the node C then the backup software can determine from the updated backup configuration information that the backup storage device D can still be used to backup data from the node B. Thus the updated backup configuration information may enable the backup software to determine that a data backup from the node B can be initiated immediately without waiting for the data backup from the node C to finish.

When a new node joins the storage cluster e.g. boots up or re joins the storage cluster after a previous network failure software executing on the new node or executing on another server computer in the storage cluster automatically notifies the backup software that the new node has joined the storage cluster. As one example client side backup software executing on the new node may be operable to communicate with the backup software executing on the backup server . As another example the new node may include network software operable to communicate with network software on the backup server where the network software on the backup server then notifies the backup software that the new node has joined the storage cluster.

The backup software may also be notified of which volumes are hosted by the new node or may initiate communication with the new node in order to determine which volumes are hosted by the new node. The backup configuration information may be updated with a list of volumes that need to be backed up from the new node and the backup software may then initiate a backup operation to backup the volumes accordingly.

The backup software periodically polls the nodes in the storage cluster to determine their current status. The backup software determines that a particular node is no longer active in the storage cluster and updates the backup configuration information accordingly. Thus any backup operations scheduled to backup data from the particular node will not be attempted until the particular node re joins the storage cluster thus preventing backup failures and logged errors. Also if the backup software discovers that a particular backup storage device has left the storage cluster then the backup software does not attempt to use the particular backup storage device in any backup operations until the particular backup storage device re joins the storage cluster.

Referring now to an example embodiment of the backup server computer is illustrated. It is noted that is provided as an example and in other embodiments the backup server may be implemented in various other ways.

In this example the backup server includes one or more processors coupled to memory . In some embodiments the memory may include one or more forms of random access memory RAM such as dynamic RAM DRAM or synchronous DRAM SDRAM . However in other embodiments the memory may include any other type of memory instead or in addition.

The memory may be configured to store program instructions and or data. In particular the memory may store the backup software . The processor may execute the backup software to perform the functions described herein. In particular the backup software may execute to automatically detect changes in the configuration of the storage cluster. For example in some embodiments the backup software may register with other software modules in order to receive automatic notifications of changes in the configuration of the storage cluster. In other embodiments the backup software may include one or more polling modules such as the polling modules A and B which execute to periodically communicate with other devices in the system in order to detect changes to the storage cluster. The memory may also store other software which operates in conjunction with or which is used by the backup software such as operating system software file system software network communication software etc.

In various embodiments the backup software may be implemented in any of various ways and may have any desired software architecture. In some embodiments the backup software may be distributed across multiple backup server computers. Also in some embodiments the backup software may execute in conjunction with client side backup software on the nodes in order to perform backup operations.

Referring again to it is noted that the processor is representative of any type of processor. For example in some embodiments the processor may be compatible with the x86 architecture while in other embodiments the processor may be compatible with the SPARC family of processors. Also in some embodiments the backup server may include multiple processors .

The backup server may include one or more hard disk drives or other storage devices for storing data in a non volatile manner. In some embodiments the backup configuration information may be stored on one or more of the hard disk drives e.g. as illustrated by backup configuration information in . In other embodiments the backup configuration information may be stored in the memory .

The backup server may also include one or more input devices for receiving user input e.g. from an administrator of the cluster. The input device s may include any of various types of input devices such as keyboards keypads microphones or pointing devices e.g. a mouse or trackball . The backup server may also include one or more output devices for displaying output to the administrator. The output device s may include any of various types of output devices or display devices such as LCD screens or monitors CRT monitors etc. The backup server may also include network connection hardware through which the backup server connects to a network e.g. in order to communicate with other devices in the system.

The memory may store software executed by the processor s such as backup client software which communicates with the backup software on the backup server and communicates with the backup storage devices to backup the volume which may be stored on one or more hard disk drives or other storage devices included in or coupled to the node . In some embodiments the memory may also store one or more reporting modules . For example the reporting module s may execute to notify the backup software on the backup server in response to various configuration changes regarding the node such as when the node begins hosting a new volume or stops hosting a volume when the node establishes or closes a connection to a backup storage device when the node joins the storage cluster etc.

It is noted that various embodiments may further include receiving sending or storing instructions and or data implemented in accordance with the foregoing description upon a computer accessible storage medium. Generally speaking a computer accessible storage medium may include any storage media accessible by one or more computers or processors during use to provide instructions and or data to the computer s . For example a computer accessible storage medium may include storage media such as magnetic or optical media e.g. one or more disks fixed or removable tape CD ROM DVD ROM CD R CD RW DVD R DVD RW etc. Storage media may further include volatile or non volatile memory media such as RAM e.g. synchronous dynamic RAM SDRAM Rambus DRAM RDRAM static RAM SRAM etc. ROM Flash memory non volatile memory e.g. Flash memory accessible via a peripheral interface such as the Universal Serial Bus USB interface etc. In some embodiments the computer s may access the storage media via a communication means such as a network and or a wireless link.

Although the embodiments above have been described in considerable detail numerous variations and modifications will become apparent to those skilled in the art once the above disclosure is fully appreciated. It is intended that the following claims be interpreted to embrace all such variations and modifications.

