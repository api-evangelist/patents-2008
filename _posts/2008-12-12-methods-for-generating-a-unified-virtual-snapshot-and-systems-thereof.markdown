---

title: Methods for generating a unified virtual snapshot and systems thereof
abstract: A method, computer readable medium, and system for generating a unified virtual snapshot in accordance with embodiments of the present invention includes invoking with a file virtualization system a capture of a plurality of physical snapshots. Each of the physical snapshots comprises content at a given point in time in one of the plurality of data storage systems. A unified virtual snapshot is generated with the file virtualization system based on the captured plurality of the physical snapshots.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08352785&OS=08352785&RS=08352785
owner: F5 Networks, Inc.
number: 08352785
owner_city: Seattle
owner_country: US
publication_date: 20081212
---
This application claims the benefit of U.S. Provisional Patent Application Ser. No. 61 013 539 filed Dec. 13 2007 which is herein incorporated by reference in its entirety.

This invention relates generally to methods and systems for capturing snapshots of file systems and more particularly to methods for generating a unified virtual snapshot from a plurality of physical snapshots of a heterogeneous network storage system and systems thereof.

Often files and associated data in computer systems are remotely stored on one or more network storage devices. In anticipation of a possible restore request from a user computer system coupled to a network storage device a physical snapshot of the content in the network storage device may be captured at a recorded time. If the user computer system has a need for and requests a restore the captured physical snapshot can be used to recover contents from the network storage device as of the recorded time.

File virtualization systems provide methods for managing and presenting a plurality of network storage devices as a single unified file system. Basically file virtualization decouples the presentation of a file system from its physical composition. Unfortunately when file virtualization is implemented there is no method or system for generating and providing a unified virtual snapshot in a heterogeneous storage network system.

A method for generating a unified virtual snapshot in accordance with embodiments of the present invention includes invoking with a file virtualization system a capture of a plurality of physical snapshots. Each of the physical snapshots comprises content at a given point in time in one of the plurality of data storage systems. A unified virtual snapshot is generated with the file virtualization system based on the captured plurality of the physical snapshots.

A computer readable medium having stored thereon instructions for methods for generating a unified virtual snapshot in accordance with other embodiments of the present invention comprising machine executable code which when executed by at least one processor causes the processor to perform steps including invoking with a file virtualization system a capture of a plurality of physical snapshots. Each of the physical snapshots comprises content at a given point in time in one of the plurality of data storage systems. A unified virtual snapshot is generated with the file virtualization system based on the captured plurality of the physical snapshots.

A system that generates a unified virtual snapshot in accordance with other embodiments of the present invention includes an invocation system and a virtual snapshot system in a file virtualization system. The invocation system invokes a capture of a plurality of physical snapshots. Each of the physical snapshots comprises content in one of the plurality of data storage systems at a given point in time. The virtual snapshot system generates a unified virtual snapshot based on the captured plurality of the physical snapshots.

The present invention provides a number of advantages including providing a unified virtual snapshot from a plurality of physical snapshots of contents of file systems distributed across several independent network storage devices. Additionally the present invention provides a method and system which enables the use of snapshots in environments that implement file virtualization. Further the present invention captures and generates snapshots which can be utilized to re assemble contents of file systems with or without the file virtualization system.

An example of a system that generates and uses a virtual snapshot of a heterogeneous network storage system is illustrated in although the present invention can be utilized in homogeneous network storage systems with one or more storage devices. This system includes a client system a file virtualization system data storage systems and and metadata storage system although this system can include other numbers and types of systems devices equipment parts components and or elements in other configurations. The present invention provides a number of advantages including providing a unified virtual snapshot from a plurality of physical snapshots of contents of file systems distributed across several independent network storage devices.

Referring more specifically to the client system utilizes the file virtualization system to conduct one or more operations with one or more of the data storage systems and such as to store a file delete a file create a file and restore a file by way of example only although other numbers and types of network systems could be utilizing these resources and other types and numbers of functions could be performed. The client system includes a central processing unit CPU or processor a memory user input device a display and an interface system and which are coupled together by a bus or other link although the client system can include other numbers and types of components parts devices systems and elements in other configurations. The processor in the client system executes a program of stored instructions as described and illustrated herein although the processor could execute other numbers and types of programmed instructions.

The memory in the client system stores these programmed instructions for one or more aspects of the present invention as described and illustrated herein although some or all of the programmed instructions could be stored and or executed elsewhere. A variety of different types of memory storage devices such as a random access memory RAM or a read only memory ROM in the system or a floppy disk hard disk CD ROM or other computer readable medium which is read from and or written to by a magnetic optical or other reading and or writing system that is coupled to one or more processors can be used for the memory in the client system .

The user input device in the client system is used to input selections such as to store a file delete a file create a file and restore a file although the user input device could be used to input other types of data and interact with other elements. The user input device can include a computer keyboard and a computer mouse although other types and numbers of user input devices can be used. The display in the client system is used to display information such as a file or directory although other types and amounts of information can be displayed in other manners. The display can include a computer display screen such as a CRT or LCD screen although other types and numbers of displays could be used.

The interface system in the client system is used to operatively couple and communicate between the client system and the file virtualization system via a communications network although other types and numbers of communication networks or systems with other types and numbers of configurations and connections to other systems and devices can be used.

The file virtualization system manages file virtualization and the generation of unified virtual snapshots although other numbers and types of systems can be used and other numbers and types of functions can be performed. The file virtualization system includes a central processing unit CPU or processor a memory and an interface system which are coupled together by a bus or other link although other numbers and types of components parts devices systems and elements in other configurations and locations can be used. The processor in the file virtualization system executes a program of stored instructions for one or more aspects of the present invention as described and illustrated by way of the embodiments herein such as managing file virtualization and the generation of unified virtual snapshots although the processor in file virtualization system could execute other numbers and types of programmed instructions.

The memory in the file virtualization system stores these programmed instructions for one or more aspects of the present invention as described and illustrated herein although some or all of the programmed instructions could be stored and or executed elsewhere. A variety of different types of memory storage devices such as a random access memory RAM or a read only memory ROM in the system or a floppy disk hard disk CD ROM DVD ROM or other computer readable medium which is read from and or written to by a magnetic optical or other reading and or writing system that is coupled to one or more processors can be used for the memory in the file virtualization system .

The interface system in the file virtualization system is used to operatively couple and communicate between the file virtualization system and the client system the data storage system the data storage system and the metadata storage system via the communications networks although other types and numbers of communication networks or systems with other types and numbers of connections and configurations can be used.

Each of the data storage systems and is a network storage device for files directories and other data although other numbers and types of storage systems which could have other numbers and types of functions and store other data could be used. In this example data storage system is a different type of storage device e.g. different make and or model from the data storage system to form a heterogeneous network storage system although the present invention can work with other numbers and types of storage systems such as a homogeneous system.

Each of the data storage systems and include a central processing unit CPU or processor a memory and an interface system which are coupled together by a bus or other link although other numbers and types of components parts devices systems and elements in other configurations can be used. By way of example only the storage systems may not have their own separate processing capabilities. In this example the specialized processor in each of the data storage systems and executes a program of stored instructions for one or more aspects of the present invention as described and illustrated by way of the embodiments herein such as to capture a physical snapshot by way of example only although the processor in each of the data storage system could execute other numbers and types of programmed instructions.

The memory in each of the data storage systems and store these programmed instructions for one or more aspects of the present invention as described and illustrated herein although some or all of the programmed instructions could be stored and or executed elsewhere. A variety of different types of memory storage devices such as a random access memory RAM or a read only memory ROM in the system or a floppy disk hard disk CD ROM DVD ROM or other computer readable medium which is read from and or written to by a magnetic optical or other reading and or writing system that is coupled to one or more processors can be used for the memory in each of the data storage systems and .

The interface system in the data storage system and the interface in the data storage system are each used to operatively couple and communicate between the data storage system and the file virtualization system and between the data storage system and the file virtualization system via communication network although other types and numbers of communication networks or systems with other types and numbers of configurations and connections to other systems and devices can be used.

The metadata storage system is another type of network storage device to store and manage global file virtualization metadata from data storage systems and although other numbers and types of storage systems which could have other numbers and types of functions which is connected in other manners and which could store other types of data and information could be used. In this particular example the metadata storage system is external to the file virtualization system although the metadata storage could be located in the file virtualization system . The metadata storage system includes a central processing unit CPU or processor a memory and an interface system which are coupled together by a bus or other link although other numbers and types of components parts devices systems and elements in other configurations can be used for the storage system. By way of example only the storage system may not have its own separate processing capabilities. In this example the specialized processor in the metadata storage system executes a program of stored instructions for one or more aspects of the present invention as described and illustrated by way of the embodiments herein although the processor in metadata storage system could execute other numbers and types of programmed instructions.

The memory in the metadata storage system stores these programmed instructions for one or more aspects of the present invention as described and illustrated herein although some or all of the programmed instructions could be stored and or executed elsewhere. A variety of different types of memory storage devices such as a random access memory RAM or a read only memory ROM in the system or a floppy disk hard disk CD ROM DVD ROM or other computer readable medium which is read from and or written to by a magnetic optical or other reading and or writing system that is coupled to the processor in the metadata storage system .

The interface system in the metadata storage system is used to operatively couple and communicate between the metadata storage system and the file virtualization system via the communications network although other types and numbers of communication networks or systems with other types and numbers of configurations and connections to other systems and devices can be used.

Although embodiments of the client system the file virtualization system the data storage systems and and the metadata storage system are described herein each of these systems can be implemented on any suitable computer system or computing device. It is to be understood that the devices and systems of the embodiments described herein are for exemplary purposes as many variations of the specific hardware and software used to implement the embodiments are possible as will be appreciated by those skilled in the relevant art s .

Furthermore each of the systems of the embodiments may be conveniently implemented using one or more general purpose computer systems microprocessors digital signal processors and micro controllers programmed according to the teachings of the embodiments as described and illustrated herein and as will be appreciated by those ordinary skill in the art.

In addition two or more computing systems or devices can be substituted for any one of the systems in any embodiment of the embodiments. Accordingly principles and advantages of distributed processing such as redundancy and replication also can be implemented as desired to increase the robustness and performance of the devices and systems of the embodiments. The embodiments may also be implemented on computer system or systems that extend across any suitable network using any suitable interface mechanisms and communications technologies including by way of example only telecommunications in any suitable form e.g. voice and modem wireless communications media wireless communications networks cellular communications networks G3 communications networks Public Switched Telephone Network PSTNs Packet Data Networks PDNs the Internet intranets and combinations thereof.

The embodiments may also be embodied as a computer readable medium having instructions stored thereon for one or more aspects of the present invention as described and illustrated by way of the embodiments herein as described herein which when executed by a processor cause the processor to carry out the steps necessary to implement the methods of the embodiments as described and illustrated herein.

An overview of the present invention is set forth below. With this example of the present invention a file virtualization layer FV provided by file virtualization system exists between the application in client system or CL and the data storage systems and also referred to as DS and DS although other numbers and types of client systems and storage systems could be used. This file virtualization layer provided by file virtualization system manages metadata in data storage that tracks the location of files and directories that are distributed across data storage systems and in this particular example.

To generate or create a unified virtual snapshot file virtualization system erects an I O barrier to substantially suspend data storage communications between client system and data storage systems and and metadata storage system . This suspension permits either an administrator or application at client system or file virtualization system to request or invoke a capture of physical snapshots of content on data storage systems and and metadata storage system using an application programming interface API or command line interface CLI although other manners for invoking a capture of physical snapshots such as a periodic automated invocation could be used. Once all of the physical snapshots have been captured or otherwise completed by file virtualization system the unified virtual snapshot is generated by file virtualization system and the I O barrier is removed to allow storage data communications to resume. The unified virtual snapshot comprises the captured physical snapshots which are mapped together by file virtualization system to form the virtual snapshot.

In this example the I O barrier is implemented by the file virtualization system at the application protocol level such as NFS or CIFS by way of example although the I O barrier could be implemented in other manners. Packets are accepted at a transport level such as UDP or TCP by way of example but are not proxied by file virtualization system to the data storage systems and and traffic to the metadata storage system is halted while the I O barrier is asserted. As implemented the barrier operation is substantially transparent to the operator at the client system and at most the file system seems momentarily slow although system can be arranged in other manners such as to provide notice of the implementation of the barrier if desired.

To create a persistent record of the location of files and directories in physical snapshots once the I O barrier is asserted and before a physical snapshot occurs the file virtualization system initiates copying or writing of a virtual snapshot configuration record into data storage systems and and metadata storage system . The virtual snapshot configuration record is a unique record written in each of the data storage systems and and metadata storage system that allows an operator or program to locate components e.g. a file of a virtual snapshot although other types and amounts of information could be included. More specifically the snapshot configuration record records the members of a unified virtual snapshot i.e. in this particular example the members are data storage systems and and metadata storage system although the snapshot configuration record can store other types and amounts of data. By way of example only a virtual snapshot configuration record is illustrated in . In this example the virtual snapshot configuration records are made unique by a field in the header of each record although other manners for providing a unique identifier can be used.

The virtual snapshot configuration record is included in the physical snapshots to aid in recovery. With the snapshot configuration record and the stored metadata on the file virtualization system the file virtualization system can locate a particular file or directory. Additionally by including the virtual snapshot configuration record in the physical snapshot an external application that knows the format of the stored metadata can use that metadata and the snapshot configuration record to locate a file without file virtualization.

Once a unique virtual snapshot configuration record is copied to each data storage systems and and metadata storage system the data storage systems and and metadata storage system are invoked by file virtualization system to capture physical snapshots which will contain this virtual snapshot configuration record although the data storage systems and and metadata storage system can be invoked to capture physical snapshots by other systems in other manners. The data storage systems and and metadata storage system take a physical snapshot in response to this invocation.

By way of example only a snapshot command which can be used by data storage systems and and metadata storage system is illustrated in although other types of commands could be used. Again this method effectively embeds the unique virtual snapshot configuration record into each of the physical snapshots themselves.

Generation of unified virtual snapshots is implemented by the file virtualization layer in file virtualization system although the generation can be implemented by other systems. Virtual directories are dynamically created that contain a list of available virtual snapshots at different points in time in file virtualization system . Each virtual snapshot subdirectory contains files and directories that exist in the physical snapshots of the contents of the file systems on data storage systems and and metadata storage system in this example.

Referring now to an example of a method for processing requests with a file virtualization is described below. In step client system also known as CL issues a request CL REQ for a file creation operation of a file a to file virtualization system also known as FV although other types and numbers of requests could be issued from other types and numbers of systems.

In step file virtualization system receives the request CL REQ from client system . Using the stored metadata the file virtualization system translates the request CL REQ into a file virtualization request FV REQ which is suitable for execution on data storage system also known as DS in which the file is actually located although other types of requests for other systems could be received.

In step data storage system receives the request FV REQ from the file virtualization system . In response to the received request FV REQ the data storage system performs the creation of file a and issues reply DS RSP back to file virtualization system although the data storage system could perform other types and numbers of operations based on the received request.

In step file virtualization system receives the reply DS RSP from the data storage system . In response to the reply DS RSP the file virtualization system generates metadata about the file creation operation and transmits a FV REQ request to metadata storage system also known as MD to record this generated metadata.

In step metadata storage system receives the FV REQ request and stores the generated metadata. Once the FV REQ request is processed the metadata storage system issues a reply MD RSP to the file virtualization system .

In step file virtualization system receives the reply MD RSP from the metadata storage system . Next the file virtualization system using information gathered from the reply MD RSP and the reply DS RSP generates a file virtualization reply FV RSP and issues the reply FV RSP back to client system . The file virtualization system also updates the stored file virtualization configuration record to reflect this completed operation.

Referring now to an example of a method for generating one or more unified virtual snapshots is described below. In step client system issues request CL REQ for a file deletion operation of file a to file virtualization system although other types and numbers of requests could be issued from other types and numbers of systems.

In step file virtualization system accepts the request CL REQ from the client system although other types and numbers of requests could be received. Since at this time an I O barrier is asserted the file virtualization system performs no action at this time on the request CL REQ from the client system although once the I O barrier is removed the file virtualization system will process the request.

In step while the I O barrier is asserted the file virtualization system generates and transmits a write request WRITE REQ   to each of the data storage systems and and the metadata storage system to write the virtualization snapshot configuration record persistent storage although other types and numbers of requests can be transmitted to other types and numbers of systems. More specifically in this particular example the file virtualization system generates and transmits a write request WRITE REQ   to data storage system a write request WRITE REQ   to data storage system and a WRITE REQ   to metadata storage system to each write the virtualization snapshot configuration record in persistent storage.

Once the virtualization snapshot configuration record is written in persistent storage each of the data storage systems and and the metadata storage system generates and transmits a response WRITE RSP   to the file virtualization system although other types and numbers of responses can be transmitted to other types and numbers of systems. More specifically in this particular example data storage system generates and transmits a WRITE RSP   the data storage system generates and transmits a WRITE RSP   and the metadata storage system generates and transmits a WRITE RSP   to the file virtualization system once the virtualization snapshot configuration record is written in persistent storage in each storage system.

In step file virtualization system optionally flushes metadata changes write ahead logs and any other information required to ensure consistency with the file virtualization metadata snapshot although the file virtualization system may perform other types and numbers of operations.

In step once the optional flush operations described above in step are completed the file virtualization system invokes the execution of snapshot operations on data storage systems and and metadata storage system by generating and transmitting snapshot requests SNAP REQ   although the snapshot operations can be invoked in other manners and physical snapshots can be taken in other types and numbers of systems. More specifically in this particular example file virtualization system generates and transmits request SNAP REQ   to data storage systems to take a physical snapshot request SNAP REQ   to data storage systems to take a physical snapshot and request SNAP REQ   to data storage systems to take a physical snapshot.

In step the data storage systems and and the metadata storage system each receive and process the requests SNAP REQ   SNAP REQ   and SNAP REQ   respectively to perform a physical snapshot operation to capture a physical snapshot in each of the data storage systems and and the metadata storage system .

Once the physical snapshots have been taken the data storage systems and and the metadata storage system each generate and transmit a response SNAP RSP when each of the physical snapshots at the data storage systems and and the metadata storage system have been taken although other types and numbers of responses can be transmitted to other types and numbers of systems. More specifically in this particular example data storage system generates and transmits a SNAP RSP the data storage system generates and transmits a SNAP RSP and the metadata storage system generates and transmits a SNAP RSP to the file virtualization system when each of the physical snapshots at the data storage systems and and the metadata storage system have been taken.

In step file virtualization system receives completion notifications from data storage systems and and metadata storage system indicating that the physical snapshots are completed i.e. the data and metadata are consistent as of the point of time the I O barrier has been asserted and then records completion of the unified virtual snapshot. Once all of the responses SNAP RSP have been received the file virtualization system lowers the asserted I O barrier and processes request CL REQ as well as any other requests.

Referring to an example of a method for processing requests with a file virtualization after the creation of one or more unified virtual snapshots is described below. In step client system issues request CL REQ for a file deletion operation of file a to file virtualization system although other types and numbers of requests could be issued from other types and numbers of systems.

In step file virtualization system receives the request CL REQ from client system . Using the stored metadata the file virtualization system translates the request CL REQ into a file virtualization request FV REQ which is suitable for execution on data storage system in which the file is actually located although other types of requests for other systems could be received.

In step data storage system receives the request FV REQ request from the file virtualization system . In response to the received request FV REQ the data storage system performs the deletion of file a and issues reply DS RSP back to file virtualization system although the data storage system could perform other types and numbers of operations based on the received request. Although deleted by this operation file a remains in the unified virtual snapshot generated as described with reference to .

In step file virtualization system receives the reply DS RSP from the data storage system . In response to the reply DS RSP the file virtualization system generates metadata about the file deletion operation and transmits a FV REQ request to metadata storage system to record this generated metadata

In step metadata storage system receives the request FV REQ and updates the metadata stored on metadata storage system to reflect the deletion of file a although other types and numbers of updates could be recorded. Once the FV REQ request is processed the metadata storage system issues a reply MD RSP to the file virtualization system .

In step file virtualization system receives the reply MD RSP from the metadata storage system . Next the file virtualization system using information gathered from the reply MD RSP and the reply DS RSP generates and issues a file virtualization reply FV RSP back to client system .

An example of the hierarchy of unified virtual snapshots and physical snapshots is illustrated in the functional block diagram in and is described below. As set forth in functional block each virtual directory contains a virtual snapshot listing directory VSLD . As set forth in functional block each VSLD contains a list of virtual snapshots VSN . As set forth in functional block each VSN is an aggregation of physical snapshots PSNs . As set forth in functional block each Physical directory contains a physical snapshot listing directory PSLD . As set forth in functional block each PSLD contains a list of physical snapshots PSN . As set forth in functional block each PSN is a point in time image of the file system such as of data storage system data storage system or metadata storage system by way of example only.

An example of a method for recovering content in a heterogeneous storage system is illustrated in and is described below. In step the client system generates and issues a request CL REQ to file virtualization system to access a file in the unified virtual snapshot although other types and numbers of requests could be issued.

In step the file virtualization system receives the request CL REQ from client system although other types and numbers of requests could be received. The file virtualization system processes the request CL REQ which includes a marker indicating a traversal of a virtual snapshot listing directory although in response to the request the file virtualization system could have other types and numbers of indicators. By way of example only the request could have a marker which indicated a search of the virtual snapshot listing directory was needed to identify the virtual snapshot or the absence of a marker could indicate the need for a search. If a search is indicated by processing the request CL REQ the file virtualization system identifies the virtual snapshot in the virtual snapshot listing based on one or more factors such as a particular date range in the request although other manners for identifying the virtual snapshot can be used.

In step the file virtualization system associates request CL REQ with the identified virtual snapshot VSN based on data in the processed request CL REQ such as a specific identification of the virtual snapshot VSN although other manners for identifying the virtual snapshot can be used.

In step based on data in the request CL REQ the file virtualization system determines which of two methods for associating the request CL REQ with one of the captured physical snapshots of data storage system data storage system and metadata storage system to use although the file virtualization system could determine which method to use in other manners and could select from other types and numbers of methods In this particular example one of these methods searches virtualization metadata cached or persistent to map the request to a captured physical snapshot and the other method searches the captured physical snapshot for each of the storage systems for the target of the request.

If in step the file virtualization system determines that the method which searches virtualization metadata should be used then the file virtualization system proceeds to step . In step the file virtualization system searches stored virtualization metadata cached or persistent to map the target identified in the request CL REQ to one of the captured physical snapshots of one of data storage system data storage system and metadata storage system . Based on the search the file virtualization system identifies one of these captured physical snapshots although the file virtualization system can perform other operations based on the result of this search such as generating and transmitting a message to client system that the request CL REQ can not be completed.

If in step the file virtualization system determines that the method which searches the captured physical snapshots should be used then the file virtualization system proceeds to step . In step the file virtualization system searches the captured physical snapshots for each of the data storage systems and and metadata storage system for a target identified in the request CL REQ . Based on the search the file virtualization system either identifies one of these captured physical snapshots although the file virtualization system can perform other operations based on the result of this search such as generating and transmitting a message to client system that the request CL REQ can not be completed.

In step once the captured physical snapshot has been identified the file virtualization system translates the request CL REQ in a format suitable for execution on the data storage system or data storage system from which the identified captured physical snapshot was taken. Once the request CL REQ has been translated the file virtualization system forwards the translated request CL REQ to the data storage system or the data storage system from which the identified captured physical snapshot was taken. The data storage system or data storage system from which the identified captured physical snapshot was taken processes the translated request CL REQ executes any operations and generates and transmits a response back to the file virtualization system although other types and numbers of operations could be performed based on the received translated request.

In step the file virtualization system translates the response from the data storage system data storage system or metadata storage system which processed the translated request CL REQ and issues a reply back to the client system although the file virtualization system could perform other types and numbers of operations based on the received response.

Accordingly as illustrated by the description herein the present invention provides a number of advantages including providing a unified virtual snapshot from a plurality of physical snapshots of contents of file systems distributed across several independent network storage devices of dissimilar make and model. Additionally the present invention provides a method and system which enables the use of snapshots in environments that implement file virtualization. Further the present invention captures and generates snapshots which can be utilized to re assemble contents of file systems with or without the file virtualization system.

Having thus described the basic concept of the invention it will be rather apparent to those skilled in the art that the foregoing detailed disclosure is intended to be presented by way of example only and is not limiting. Various alterations improvements and modifications will occur and are intended to those skilled in the art though not expressly stated herein. These alterations improvements and modifications are intended to be suggested hereby and are within the spirit and scope of the invention. Additionally the recited order of processing elements or sequences or the use of numbers letters or other designations therefore is not intended to limit the claimed processes to any order except as may be specified in the claims. Accordingly the invention is limited only by the following claims and equivalents thereto.

