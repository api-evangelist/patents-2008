---

title: Methods and apparatus for dataset synchronization in a wireless environment
abstract: Methods, apparatus, systems, and computer program products are provided for wirelessly synchronizing datasets that are stored on a wireless device and at a network device, such as a network server or database. Present aspects provide for a simplified and efficient synchronization process, whereby synchronization can be completed in a single round-trip of wireless communication between the wireless device and the network device. Single round-trip synchronization provides for less use of network resources, shorter overall synchronization cycle times and lessens the likelihood of wireless network failures, such as call drops or the like, causing the synchronization process to fail. Additionally, simplification and efficiency are further realized by creating a synchronization process that allows the network dataset to be independent of the wireless device datasets, i.e., the network server does not require a full change history nor is the network server required to know the wireless device dataset version.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09143560&OS=09143560&RS=09143560
owner: QUALCOMM Incorporated
number: 09143560
owner_city: San Diego
owner_country: US
publication_date: 20080619
---
The present Application for patent claims priority to Provisional Application No. 60 945 088 entitled METHODS AND APPARATUS FOR DATASET SYNCHRONIZATION IN A WIRELESS ENVIRONMENT filed Jun. 19 2007 and assigned to the assignee hereof and hereby expressly incorporated by reference herein.

The disclosed aspects relate to wireless communication devices and more particularly to systems methods and apparatus for wirelessly synchronizing datasets stored on the wireless communication device with corresponding datasets stored at a network site.

Synchronization is the process by which a single file otherwise referred to as a dataset is synchronized between two or more devices. The process is carried out by automatically copying changes back and forth amongst the devices until the dataset is generally equivalent amongst the devices.

Synchronization of files or datasets is becoming more commonplace in the wireless environment. For example a user s contact list stored on one wireless device can be synchronized with other wireless devices or with networked databases. Synchronization of datasets is especially beneficial in instances in which applications are used in an off line mode prior to moving to an on line mode which triggers data exchange. An exemplary application includes electronic mail email in which a user inputs email during an off line mode and the email is subsequently sent to network database once the device is returned to on line mode. The synchronization process is also implemented in community type environments in which multiple users interact through a shared network database. For example in the wireless environment gaming communities which allow users to participate in real time video games also provide for gaming information to be stored and shared at a central network database. Such community activities are also prone to use in an off line mode in which a user can make changes to the user s locally stored database and the changes are synchronized with the network database when the user moves to an on line mode.

In one approach synchronization can be conducted locally by docking a wireless device such as a personal data assistant PDA or the like to a docking device having a serial connection to a personal computer. This type of synchronization requires the wireless device and the computer to be in close proximity to one another. However the advent of more powerful wireless devices has made it possible to remotely synchronize datasets over the wireless network.

Remote synchronization of data has been accomplished via Synchronization Markup Language SyncML which provides a common data synchronization protocol for wireless networks. SyncML relies on eXtensible Markup Language XML as the underlying carrier protocol for all SyncML communications transpiring during the wireless synchronization sync session. As such multiple messages are sent between the wireless device and the network server during any one sync session. Additionally the data structure of each message is large resulting in a high bandwidth requirement to exchange the messages. Thus SyncML is a relatively complex synchronization process that necessitates the exchange of multiple messages demands a large amount of network bandwidth and requires a relatively long amount of time for completion. The complexity of the SyncML process coupled with the limitations of cellular networks e.g. potential loss of signal bandwidth limitations etc. causes the synchronization process to be less than reliable. For example failure to make a connection or dropping a connection during the synchronization process often results in the need to perform a full synchronization process. During a full synchronization process the entire dataset is communicated to the wireless device or network as opposed to just the changes that have occurred.

Therefore a need exists to develop a synchronization process for the wireless development that is less complex more efficient and more robust than current wireless solutions.

In this regard simplicity may be realized by the present aspects which use less network resources and require less in terms of historical data than current wireless sync processes. The use of less network resources can result in a more efficient sync process as the time to complete a sync cycle can decrease. Additionally the described synchronization process allows wireless network failures to occur without mandating the need for a full synchronization of the dataset between a server and a wireless device.

In particular present aspects provide for methods devices systems and computer program products for wirelessly synchronizing datasets that are stored on a wireless device and at a network device such as a network server or database. Present aspects provide for a simplified and efficient synchronization process whereby synchronization can be completed in a single round trip of wireless communication between the wireless device and the network device. Single round trip communication provides for less use of network resources shorter overall synchronization cycle times and lessens the likelihood of wireless network failures such as call drops or the like causing the synchronization process to fail. Additionally simplification and efficiency are further realized by creating a synchronization process that allows the network dataset to be independent of the wireless device datasets i.e. the network server may not require a full change history and the network server may not be required to know the wireless device dataset version. Present aspects also provide for a robust synchronization process such that communication failures allow for re application of the synchronization process without having to implement a full synchronization of the datasets. In this regard present aspects are suited for synchronizing datasets that are used in a wireless community type environment such as a wireless gaming community or the like or in applications that provide for offline mode use such as email gaming and the like.

In one aspect a method for synchronization of a dataset on a wireless device is defined. The method includes generating a synchronization request message for a dataset that includes a current wireless device dataset version communicating wirelessly the synchronization request message to a network device and receiving wirelessly in response to the communication of the synchronization request message a synchronization confirmation message that includes a network device dataset version number. The synchronization request message and the synchronization confirmation message are operable to provide synchronization based on a single round trip of communication between the wireless device and the network device. In some aspects the method may include changing the current wireless device version number to the network dataset version number if the network dataset version number in the confirmation message differs from the current wireless device version number. Additionally the synchronization confirmation message may include a synchronization status indicator and or a network device change list that includes one or more changed data items in the network device dataset and thus the method may include changing the wireless device dataset according to the network device change list.

In some aspects of the method generating a synchronization request message may further include verifying status of a change indicator for each data item in the wireless device dataset compiling a wireless device change list that includes one or more changed data items based on the change indicator for one or more of the data items indicating a change and including the wireless device change list in the synchronization request message.

In some aspects the synchronization request message and the synchronization confirmation message are communicated via a lightweight data interchange carrier protocol such as JavaScript Object Notation JSON protocol.

In some aspects if the synchronization status indicator indicates a synchronization failure the method may further include initiating full synchronization between the wireless device and the network device based on the synchronization failure indicator. In other aspects if the wireless device fails to receive the synchronization confirmation message after a predetermined time period a new synchronization session may be initiated by generating and communicating a synchronization request message.

A further related aspect is provided for by at least one processor. The processor is configured to include a first module for generating a synchronization request message for a dataset that includes a current wireless device dataset version number a second module for communicating wirelessly the synchronization request message to a network device and a third module for receiving wirelessly in response to the communication of the synchronization request message a synchronization confirmation message that includes a network device dataset version number. The synchronization request message and the synchronization confirmation message are operable to provide synchronization based on a single round trip of communication between the wireless device and the network device.

Another related aspect is defined by a computer program product that includes a computer readable medium. The medium includes at least one instruction for causing a computer to generate a synchronization request message for a dataset that includes a current wireless device dataset version number at least one instruction for causing the computer to communicate wirelessly the synchronization request message to a network device and at least one instruction for causing the computer to receive wirelessly in response to the communication of the synchronization request message a synchronization confirmation message that includes a network device dataset version number. The synchronization request message and the synchronization confirmation message are operable to provide synchronization based on a single round trip of communication between the wireless device and the network device.

Yet another related aspect is defined by an apparatus. The apparatus includes means for generating a synchronization request message for a dataset that includes a current wireless device dataset version number means for communicating wirelessly the synchronization request message to a network device and means for receiving wirelessly in response to the communication of the synchronization request message a synchronization confirmation message that includes a network device dataset version number. The synchronization request message and the synchronization confirmation message are operable to provide synchronization based on a single round trip of communication between the wireless device and the network device.

A further aspect is provided for by a wireless communication device. The device includes a computer platform including a memory and at least one processor a dataset stored in the memory and including a plurality of data items and a synchronization module stored in the memory and executable by the at least one processor. The synchronization module is operable to generate a synchronization request message for the dataset that includes a current wireless device dataset version number communicate the synchronization request message to a network device and receive in response to the communication of the synchronization request message a synchronization confirmation message that includes a network device dataset version number. The synchronization request message and the synchronization confirmation message are operable to provide synchronization based on a single round trip of communication between the wireless device and the network device. The synchronization module may further be operable to change the current wireless device version number to the network dataset version number if the network device dataset version number in the confirmation message differs from the current wireless device version number. The synchronization module may further be operable to receive a synchronization confirmation message that includes a synchronization status indicator and or a network device change list that includes one or more changed data items in the network device dataset and the apparatus may be operable to change the wireless device dataset according to the network device change list.

In alternate aspects the synchronization module is further operable to verify a status of a change indicator for each data item in the wireless device dataset compile a wireless device change list that includes one or more changed data items based on the status change indicator and including the wireless device change list in the synchronization request message.

In some aspects of the wireless device the synchronization request message and the synchronization confirmation message are communicated via a lightweight data interchange carrier protocol such as JavaScript Object Notation JSON protocol.

In some aspects of the wireless device the synchronization module is further operable to receive a synchronization confirmation message that includes a synchronization failure indicator and is further operable to initiate full synchronization between the wireless device and the network device.

Yet another aspect is provided for by a method for synchronization of a dataset on a network device. The method includes receiving wirelessly at a network device a synchronization request message that includes a wireless device dataset version number comparing the wireless device dataset version number to a current network device dataset version number compiling a network device dataset change list that includes one or more changed data items if the comparison indicates that the wireless device dataset version number differs from the network device dataset version number generating a synchronization confirmation message that includes the current network device dataset version number and any compiled network device dataset change list and communicating wirelessly the synchronization confirmation message. The synchronization request message and the synchronization confirmation message are operable to provide synchronization based on a single round trip of communication between a wireless device and the network device.

In some aspects of the method receiving a synchronization request message may further include receiving a synchronization request message that includes a wireless device dataset change list that includes one or more changed data items and changing in the network device dataset the changed data items included in the wireless device dataset change list. In some aspects of the method making changes to the network device dataset may include providing a deletion indicator for data items that have been deleted on the wireless device dataset without deleting the data item from the network device dataset.

Some aspects of the method may further include updating a data item version number based upon the change in the data item and updating the network device dataset version number to reflect the version number of a highest sequenced changed data item. In such aspects generating a synchronization confirmation message may include generating a synchronization confirmation message that includes the updated network device dataset version number and any compiled network device dataset change list.

In some aspects of the method the synchronization request message and the synchronization confirmation message are communicated via a lightweight data interchange carrier protocol such as JavaScript Object Notation JSON protocol.

A further aspect is provided for by at least one processor. The processor includes a first module for receiving wirelessly at a network device a synchronization request message that includes a wireless device dataset version number a second module for comparing the wireless device dataset version number to a current network device dataset version number a third module for compiling a network device dataset change list that includes one or more changed data items if the comparison indicates that the wireless device dataset version number differs from the network device version number a fourth module for generating a synchronization confirmation message that includes the current network device dataset version number and any compiled network device dataset change list and a fifth module for communicating wirelessly the synchronization confirmation message. The synchronization request message and the synchronization confirmation message are operable to provide synchronization based on a single round trip of communication between a wireless device and the network device.

Another related aspect is defined by a computer program product that includes a computer readable medium. The medium includes at least one instruction for causing a computer to receive wirelessly at a network device a synchronization request message that includes a wireless device dataset version number at least one instruction for causing the computer to compare the wireless device dataset version number to a current network device dataset version number and at least one instruction for causing the computer to compile a network device dataset change list that includes one or more changed data items if the comparison indicates that the wireless device dataset version number differs from the network device dataset version number. The medium also includes at least one instruction for causing the computer to generate a synchronization confirmation message that includes the current network device dataset version number and any compiled network device dataset change list and at least one instruction for causing the computer to communicate wirelessly the synchronization confirmation message. The synchronization request message and the synchronization confirmation message are operable to provide synchronization based on a single round trip of communication between a wireless device and the network device.

Yet another aspect is provided for by an apparatus. The apparatus includes means for receiving wirelessly at a network device a synchronization request message that includes a wireless device dataset version number means for comparing the wireless device dataset version number to a current network device dataset version number and a means for compiling a network device dataset change list that includes one or more changed data items if the comparison indicates that the wireless device dataset version number differs from the network device dataset version number. The apparatus additionally includes means for generating a synchronization confirmation message that includes the current network device dataset version number and any compiled network device dataset change list and means for communicating wirelessly the synchronization confirmation message. The synchronization request message and the synchronization confirmation message are operable to provide synchronization based on a single round trip of communication between a wireless device and the network device.

An aspect is also provided for by a network device. The network device includes a computer platform including a memory and at least one processor a dataset stored in the memory and including a plurality of data items and a synchronization module stored in the memory and executable by the at least one processor. The synchronization module is operable to receive a synchronization request message that includes a wireless device dataset version number compare the wireless device dataset version number to a current network device dataset version number compile a network device dataset change list that includes one or more changed data items if the comparison indicates that the wireless device dataset version number differs from the network device dataset version number generate a synchronization confirmation message that includes the current network device dataset version number and any compiled network device dataset change list and communicating wirelessly the synchronization confirmation message. The synchronization request message and the synchronization confirmation message are operable to provide synchronization based on a single round trip of communication between a wireless device and the network device.

Thus one or more of the present aspects provide for wirelessly synchronizing datasets that are stored on a wireless device and at a network device such as a network server or database. As described the present aspects provide for a simplified and efficient synchronization process whereby synchronization can be completed in a single round trip of wireless communication between the wireless device and the network device. Single round trip communication provides for less use of network resources shorter overall synchronization cycle times and lessens the likelihood of wireless network failures such as call drops or the like causing the synchronization process to fail. Additionally simplification and efficiency are further realized by creating a synchronization process that allows the network dataset to be independent of the wireless device datasets i.e. the network server does not require a full change history nor is the network server required to know the wireless device dataset version. Present aspects also provide for a robust synchronization process such that communication failures allow for re application of the synchronization process without having to implement a full synchronization of the datasets.

The present devices apparatus methods computer readable media and processors now will be described more fully hereinafter with reference to the accompanying drawings in which aspects of the invention are shown. The devices apparatus methods computer readable media and processors may however be embodied in many different forms and should not be construed as limited to the aspects set forth herein rather these aspects are provided so that this disclosure will be thorough and complete and will fully convey the scope of the invention to those skilled in the art. Like numbers refer to like elements throughout.

As used herein the word exemplary means serving as an example instance or illustration. Any aspect described herein as exemplary is not necessarily to be construed as preferred or advantageous over other aspects.

One or more aspects described herein are in connection with a wireless communication device. A wireless communication device can also be called a subscriber station a subscriber unit mobile station mobile remote station access point remote terminal access terminal user terminal user agent a user device or user equipment. A subscriber station may be a cellular telephone a cordless telephone a Session Initiation Protocol SIP phone a wireless local loop WLL station a personal digital assistant PDA a handheld device having wireless connection capability or other processing device connected to a wireless modem.

One or more of the present aspects provide for methods systems apparatus and computer program products for wirelessly synchronizing datasets that are stored on a wireless device and at a network device such as a network server or database. One or more of the present aspects provide for a simplified and efficient synchronization process whereby synchronization can be completed in a single round trip of wireless communication between the wireless device and the network device. Additionally simplification and efficiency are further realized by creating a synchronization process that allows the network dataset to be independent of the wireless device datasets i.e. the network server may not require a full change history and the network server may not be required to know or keep track of the wireless device dataset version for each wireless device. Present aspects also provide for a robust synchronization process such that communication failures allow for re application of the synchronization process without having to implement a full synchronization of the datasets. In this regard one or more of the present aspects are suited for synchronizing datasets that are used in a wireless community type environment such as a wireless gaming community or the like or in applications that provide for offline mode use such as email gaming and the like.

Referring to a block diagram depiction of a system for wireless dataset synchronization is provided according to a present aspect. The system includes one or more wireless devices and a network device such as a network server having a corresponding database which are in wireless communication via wireless network . One or more of wireless devices and network device will store a dataset and that requires synchronization. In some aspects for example in a wireless community type environment network device may initially distribute network device dataset to one or more wireless devices which store the received dataset as a wireless device dataset . Over time either or both of network server and one or more wireless devices may update their respective dataset and . As such system provides apparatus and methods that allow one or more wireless devices and network device to synchronize their respective datasets and through wireless communication.

Wireless device includes a computer platform having a processor and a memory . The memory of wireless device includes a synchronization module operable to synchronize datasets and . The synchronization module may rely on a lightweight data interchange protocol as the carrier protocol in order to limit the synchronization process to a single round trip of wireless communication between the wireless device and the network device . A lightweight data interchange protocol may characteristically be built on two structures a collection of name pair values and an ordered list of values. The name value pairs may include an object a record a structure a dictionary a hash table a keyed list an associative array or the like. The ordered list of values may include an array a vector a list a sequence or the list. One example of a lightweight data interchange protocol is JavaScript Object Notation JSON . In JSON an object is an unordered set of name value pairs an array is an ordered collection of values and a value can be a string a number a true false null indicator an object or an array. Unlike other data interchange protocols JSON supports arrays and as such requires simpler syntax and less markup. The regular and simple syntax structure of JSON combined with built in numeric and array support offers better advantages over other data interchanges protocols in terms of simpler parsing closer representation of data structures and smaller sized message.

The synchronization module is operable to generate a synchronization request message which is transmitted to network device and which operates to ask for dataset synchronization with network device . Synchronization request message forms the first leg of the single round trip synchronization process. In some aspects synchronization module may further compile a wireless device change list that indicates the changes made to a dataset since the prior synchronization process. Changes may include additions insertions and or deletions to the dataset . The synchronization module is also operable for communicating the wireless device change list to the network device for example in the synchronization request message . The synchronization module is also operable to receive a synchronization confirmation message which forms the second leg of the single round trip synchronization process. Synchronization confirmation message acts to verify completion of the sync process. Further synchronization confirmation message may include a network device change list that indicates the changes made to the corresponding network dataset since the prior synchronization process. Thus system advantageously provides for synchronization between wireless device dataset and network device dataset in a single round trip via synchronization request message and synchronization confirmation message .

Wireless device dataset will characteristically have a version number that indicates the dataset version corresponding to network database version from the last synchronization with the network database. Further each wireless device dataset will include one or a plurality of data items . Data items may include one or more data fields . It should be noted that although the illustrated data items include different numbers of data fields any data item might include any number of data fields . In accordance with some aspects changes made to the dataset are reflected in terms of data items as opposed to data fields e.g. if any field of a respective data item is changed then the respective data item is considered to be changed. Thus to provide a synchronization process having an idempotent nature meaning that changes to a wireless device dataset result in the same change to the network dataset and or another wireless device dataset the wireless device change list includes changes with respect to data items. Hence the wireless device change list includes the entirety of any data item that is being added or deleted or to which corresponding data fields have been added deleted or changed.

Network device includes a computer platform having a processor and a memory . The memory of network device includes a synchronization module operable to synchronize network device dataset with one or more wireless device datasets . Similar to synchronization module on the wireless devices the synchronization module may utilize the same lightweight data interchange protocol as the carrier protocol in order to reduce bandwidth and to allow the synchronization process to occur in a single round trip of wireless communication between the wireless device and the network device .

The synchronization module is operable to receive synchronization request message and implement any wireless device change list in the request message . The synchronization module is also operable to compile network change list that indicates the changes made to the network dataset since the prior synchronization process undertaken by the respective wireless device . In other words network device change list comprises the delta or net changes in network dataset based on the difference between the received wireless device dataset version and network dataset version . The synchronization module is additionally operable for communicating the network device change list to the requesting wireless device in the synchronization confirmation message .

In accordance with present aspects the network dataset will differ from the corresponding wireless device dataset in terms of how changes are indicated. The network dataset will characteristically have a version number that indicates the network dataset version. Each dataset will include one or a plurality of data items . Similar to the data items that form the wireless device datasets each data item may include one or more data fields . In accordance with present aspects changes made to the network dataset are reflected in terms of data items which indicate a change to one or more data fields .

Each data item in the network dataset will have a corresponding version number that indicates the current data item version. In one aspect data item version numbers are unique across all data items and are updated based on changes made to a respective data item. For example in some aspects the network dataset version number reflects the highest numbered data item version number . As such in one aspect when the network device receives a synchronization request message which indicates the current wireless device dataset version number and after executing any wireless device change list the synchronization module compares the network device dataset version number to the wireless device version number and compiles a network device change list that includes data items having version numbers greater than the wireless device version number i.e. the delta between the current wireless device dataset version number and the current network device dataset version number . In one aspect in order to provide the respective wireless device only with net changes after executing wireless device change list thereby further reducing the size of the message any data item having a version within the delta based on wireless device change list will not be included in network device change list . In such a case the respective wireless device already has in the wireless device s wireless device dataset the latest value of the respective data item. Further explanation of data item version numbers and how they are used to compile the network device change list will be discussed infra.

For example in one aspect the change indicator may have a value of 0 if the associated data item has not undergone any changes since the prior synchronization process. Further the change indicator may have a value of 1 if the associated data item has been updated e.g. insertion deletion or change to a data item or if the respective data item is a newly added data item. Additionally the change indicator may have a value of 2 if the respective data item has been deleted. The change indicator is used in compiling the wireless device change list as shown in . If a change indicator indicates a change for example if the indicator is set to 1 or 2 the corresponding data item will be included in the wireless device change list . Once the synchronization process is successfully completed all of the change indicators are reset to indicate no change has been made for example reset to 0. 

According to one aspect it may be necessary to distinguish via the change indicator between data items that have been updated or added e.g. data items having a change indicator set to 1 versus data items that have been deleted e.g. data items having a change indicator set to 2 . This is because the network dataset treats deletion of data items differently than changes to or additions of data items and therefore the network needs to be notified via the change list if a data item has been deleted.

The dataset version number which reflects the highest version number assigned to a data item may be updated upon implementing a wireless device change list shown in which revises the version number of data items that have been changed. For example if a wireless device change list includes changes to three data items and the current network device dataset version number is 16 implementation of the changes would result in the three data items being assigned data item version numbers of 17 18 and 19 respectively and the network dataset version number would be updated to 19 i.e. the highest version number assigned to a data item within the network device dataset .

The network device dataset also may include a deletion indicator which in one example is referred to as a tombstone. The tombstone indicator will be set to indicate that the associated data item has been deleted from the data set. However the deleted data item will typically be maintained in the dataset at least for a predetermined period of time for the purpose of providing a means to recreate a prior version of the dataset at the network device if an application dictates such. Additionally by providing a tombstone that indicates that a data item has been deleted subsequent attempts to update or otherwise change the tombstoned data item are ignored.

Referring to according to one aspect a detailed block diagram representation of wireless device is depicted. The wireless device may include any type of computerized communication device such as cellular telephone Personal Digital Assistant PDA two way text pager portable computer and even a separate computer platform that has a wireless communications portal and which also may have a wired connection to a network or the Internet. The wireless communication device can be a remote slave or other device that does not have an end user thereof but simply communicates data across the wireless network such as remote sensors diagnostic tools data relays and the like. The present apparatus and methods for dataset synchronization can accordingly be performed on any form of wireless communication device or wireless computer module including a wireless communication portal including without limitation wireless modems PCMCIA cards access terminals desktop computers or any combination or sub combination thereof.

The wireless device includes computer platform that can transmit data across a wireless network and that can receive and execute routines and applications. Computer platform includes memory which may comprise volatile and nonvolatile memory such as read only and or random access memory RAM and ROM EPROM EEPROM flash cards or any memory common to computer platforms. Further memory may include one or more flash memory cells or may be any secondary or tertiary storage device such as magnetic media optical media tape or soft or hard disk.

Further computer platform also includes processor which may be an application specific integrated circuit ASIC or other chipset processor logic circuit or other data processing device. Processor or other processor such as ASIC may execute an application programming interface API layer that interfaces with any resident programs such as synchronization module stored in the memory of the wireless device . API is typically a runtime environment executing on the respective wireless device. One such runtime environment is Binary Runtime Environment for Wireless BREW software developed by QUALCOMM Incorporated of San Diego Calif. Other runtime environments may be utilized that for example operate to control the execution of applications on wireless computing devices.

Processor includes various processing subsystems embodied in hardware firmware software and combinations thereof that enable the functionality of communication device and the operability of the communication device on a wireless network. For example processing subsystems allow for initiating and maintaining communications and exchanging data with other networked devices. In aspects in which the communication device is defined as a cellular telephone the communications processor may additionally include one or a combination of processing subsystems such as sound non volatile memory file system transmit receive searcher layer 1 layer 2 layer 3 main control remote procedure handset power management digital signal processor messaging call manager Bluetooth system Bluetooth LPOS position engine user interface sleep data services security authentication USIM SIM voice services graphics USB multimedia such as MPEG GPRS etc all of which are not individually depicted in for the sake of clarity . For the disclosed aspects processing subsystems of processor may include any subsystem components that interact with the synchronization module .

Computer platform additionally includes communications module embodied in hardware firmware software and combinations thereof that enables communications among the various components of the wireless communication device as well as between the communication device and wireless network . In described aspects the communication module enables the communication of all synchronization correspondence between wireless communication device and the network device . The communication module may include the requisite hardware firmware software and or combinations thereof for establishing a wireless network communication connection.

Additionally wireless communication device has input mechanism for generating inputs into communication device and output mechanism for generating information for consumption by the user of the communication device. For example input mechanism may include a mechanism such as a key or keyboard a mouse a touch screen display a microphone etc. In certain aspects the input mechanisms provide for user input to initiate the synchronization process. Further for example output mechanism may include a display an audio speaker a haptic feedback mechanism etc. In the illustrated aspects the output mechanism may include a display operable to display message indicating that synchronization is initiated in progress successfully completed and or failed or the like.

The memory of computer platform includes a synchronization module operable to synchronize datasets . The synchronization module may be initiated by a predetermined user action a predetermined device action and or at predetermined times. The user action may include engaging a predetermined user interface such as a designated keypad or button on the wireless device. The predetermined device action may include activation of the wireless network signal such that synchronization occurs whenever the device is triggered to an on line mode to accommodate changes made to a dataset during off line mode.

The synchronization module may rely on a lightweight data interchange protocol as the carrier protocol in order to limit the synchronization process to a single round trip of wireless communication between the wireless device and the network device . A lightweight data interchange protocol may characteristically be built on two structures a collection of name pair values and an ordered list of values. The name value pairs may include an object a record a structure a dictionary a hash table a keyed list an associative array or the like. The ordered list of values may include an array a vector a list a sequence or the list. One example of a lightweight data interchange protocol is JavaScript Object Notation JSON . In JSON an object is an unordered set of name value pairs an array is an ordered collection of values and a value can be a string a number a true false null indicator an object or an array.

The synchronization module includes synchronization request message generator that is operable to generate and communicate a synchronization request message . The synchronization request message includes the current dataset version number and if any changes have occurred to the dataset since the prior synchronization session a wireless device change list . As such the synchronization request message generator includes change list compiler operable to compile a change list of data items in a dataset that have been changed since the prior synchronization session. In this regard the compiler checks the change indicator such as a dirty bit or the like to verify if a change has occurred. If the change indicator indicates a change the data item is added to the change list . As previously noted in some aspects the synchronization process refers to data items as opposed to subsets of a data item referred to as data fields as shown in . Therefore the entire data item that is changed is included in the change list . It should be noted however that in some aspects only the respective data field and a reference to the corresponding data item might be included in the change list .

As previously noted the change indicator may indicate an added data item an insertion to a data item a deletion to a data item a change to a data item or a deleted data item. In order to insure proper incorporation of the change at the network device the change indicator may distinguish between an added or changed data item and a deleted data item. For example added or changed data items may be assigned a bit value of 1 and a deleted data item may be assigned a value of 2. 

Once the synchronization request message generator has generated the synchronization request message the wireless device implements communication module to facilitate wireless communication of the synchronization request message . Communication of the synchronization request message forms the first leg of the single round trip of communication needed to complete the synchronization process according to present aspects.

The synchronization module additionally includes synchronization confirmation message implementer operable for receiving the synchronization confirmation message from the network device and processing the message accordingly. The synchronization confirmation message forms the second leg of the single round trip of communication needed to complete the synchronization process. In some aspects the synchronization confirmation message may include a synchronization status indicator which indicates whether the synchronization was successful at the network device level and the network device dataset version number shown in . In other aspects the synchronization confirmation message in and of itself comprises an indicator of a successful sync session.

In some applications synchronization confirmation message may include a network device change list corresponding to data items shown in in the corresponding network device dataset shown in that have been changed and require incorporation into the wireless device dataset . As such synchronization confirmation message implementer includes dataset updater operable for making changes to the data items in the dataset according to the received network device change list . Additionally dataset updater includes version updater operable for updating the version number of the wireless device dataset to reflect the current network device version number as indicated in the synchronization confirmation message . The dataset updater includes change indicator re setter operable to re set all of the change indicators to indicate a no change state upon notification of successful completion of the synchronization process.

Referring to according to another aspect a block diagram is illustrated of a network device which is operable for synchronizing datasets. The network device may comprise at least one of any type of hardware server personal computer mini computer mainframe computer or any computing device either special purpose or general computing device. Further the modules and applications described herein as being operated on or executed by the network device may be executed entirely on the network device or alternatively in other aspects separate servers databases or computer devices may work in concert to provide data in usable formats to parties and or to provide a separate layer of control in the data flow between the wireless device and the modules and applications executed by network device .

The network device includes computer platform that can transmit and receive data across wireless network shown in and that can execute routines and applications. Computer platform includes a memory which may comprise volatile and nonvolatile memory such as read only and or random access memory RAM and ROM EPROM EEPROM flash cards or any memory common to computer platforms. Further memory may include one or more flash memory cells or may be any secondary or tertiary storage device such as magnetic media optical media tape or soft or hard disk.

Further computer platform also includes a processor which may be an application specific integrated circuit ASIC or other chipset logic circuit or other data processing device. Processor includes various processing subsystems embodied in hardware firmware software and combinations thereof that enable the functionality of network device and the operability of the network device on a wireless network. For example processing subsystems allow for initiating and maintaining communications and exchanging data with other networked devices. For the disclosed aspects processing subsystems of processor may include any subsystem components that interact with the synchronization module .

The computer platform further includes a communications module embodied in hardware firmware software and combinations thereof that enables communications among the various components of network device as well as between the network device and wireless communication devices . The communication module may include the requisite hardware firmware software and or combinations thereof for establishing a wireless communication connection. The communication module is operable to receive synchronization request messages communicated across wireless network and communicate synchronization confirmation messages across wireless network .

The memory of network device includes synchronization module operable to receive and process synchronization request messages and in response to the request messages generate and communicate synchronization confirmation messages . As such the synchronization module includes synchronization request message implementer operable to receive the request message and process the message accordingly. If the wireless device dataset shown in has undergone data item shown in changes since the previous synchronization session synchronization request message will include a wireless device change list that includes the data items that have been changed.

The synchronization request message implementer additionally includes a dataset updater that is operable to update the corresponding dataset on the network device in accordance with the wireless device change list . As such the dataset updater will change data items such as adding to a data item deleting from a data item changing a data item adding a data item or deleting a data item according to the changed data items in the wireless device change list . The dataset updater includes a data item version updater operable for updating the version number of the data item based on a change to the data item. Each data item is assigned a version number and any change to a data item will dictate a new version number . Version numbers are assigned sequentially starting from the next number after the current network device dataset version number . For example if the current dataset version number is 20 and the wireless device change list includes changes to four data items the data items will be assigned updated version numbers of 21 22 23 and 24. The dataset updater additionally includes dataset version updater operable for updating the version number of the network device dataset based on a change to any data item in the dataset . In one example the dataset version number is equivalent to the highest data item version number . Thus in the example previously presented in which four data items were changed and updated version numbers of 21 22 23 and 24 were assigned the network device dataset version number is updated from 20 to 24 .

Additionally the dataset updater will include a deletion indicator setter operable for setting a deletion indicator otherwise referred to as a tombstone for any data item that has been deleted from the dataset . In this regard a data item being deleted is assigned an updated version number and the deletion indicator is set. The deletion indicator provides for deleted items to be marked as deleted but otherwise maintained within the dataset . By maintaining deleted data items in the dataset the network device can recreate a prior version of the dataset if a synchronization session warrants such and prevent future attempts to update the respective tombstoned data item .

The synchronization module additionally includes synchronization confirmation message generator operable to generate a synchronization confirmation message which includes the synchronization status indicator e.g. synchronization successful synchronization failure etc. and the updated and or current version number of the network device dataset . The synchronization confirmation message may additionally include a network device change list if the network device dataset has undergone data item changes since the previous synchronization session with the requesting wireless device . As such the synchronization confirmation message generator includes change list compiler for compiling a network device change list . The network device change list will include data items having version numbers greater than the version number of the wireless device indicated in the synchronization request message and less than or equal to the version number of the network device dataset prior to the updating of the network device dataset i.e. the version number of the network device dataset upon receipt of the synchronization request message .

Upon generation of the synchronization confirmation message the message is communicated to the requesting wireless device via communications module . Similar to the synchronization request message the synchronization confirmation message may be communicated via a lightweight data interchange carrier protocol such as JavaScript Object Notation JSON protocol.

In network network device such as a network server can be in communication over a wired network e.g. a local area network LAN with a separate network database for storing the datasets . Further a data management server may be in communication with network device to provide post processing capabilities data flow control etc. Network device network database and data management server may be present on the cellular telephone network with any other network components that are needed to provide cellular telecommunication services. Network device and or data management server communicate with carrier network through a data links and which may be data links such as the Internet a secure LAN WAN or other network. Carrier network controls messages generally being data packets sent to a mobile switching center MSC . Further carrier network communicates with MSC by a network such as the Internet and or POTS plain old telephone service . Typically in network a network or Internet portion transfers data and the POTS portion transfers voice information. MSC may be connected to multiple base stations BTS by another network such as a data network and or Internet portion for data transfer and a POTS portion for voice information. BTS ultimately broadcasts messages wirelessly to the wireless communication devices by any acceptable over the air methods.

Version 4 of network server dataset includes four data items entitled profile.im profile.tagline profile.age and profile avatar. Each data item has a corresponding value the profile.im value is PLAYER45 the profile.tagline value is THE BEST the profile.age value is 22 and the profile.avatar value is Abc.png. Each data item has a corresponding version number profile.im is at version 1 profile.tagline is at version 3 profile.age is at version 4 and profile avatar is at version 2. Further each data item may have a corresponding deletion indicator otherwise referred to as a tombstone to indicate that the respective data item has been deleted from the respective dataset. In dataset none of the data items has been deleted and thus no tombstones are set to indicate deletion.

Synchronization between the wireless device dataset and the network server dataset ensues based on synchronization request message . In particular wireless device generates and sends synchronization request message to network device . If applicable the wireless device compiles a change list which in this case includes the data item profile.tagline and the corresponding value GO TIME based on change indicator having a value of 1 . As such in this case the wireless device change list and the current wireless device dataset version i.e. version 3 are included in the synchronization request message that is communicated to the network server . In turn at event the network service receives the synchronization request message and if applicable implements the changes in the change list updates the corresponding changed data item version numbers and updates the network server dataset version number .

Network server dataset depicts the dataset after the changes in the wireless device change list have been implemented the data item version numbers have been revised and the network server dataset version number has been revised. Specifically data item entitled profile.tagline has been changed to reflect a value of GO TIME based on wireless device change list . Further the data item version number for the data item entitled profile.tagline has been updated from version 3 to version 5 and network server dataset version number has been updated from version 4 to version 5 where version 5 corresponds to the highest sequenced data item version .

Additionally in response to the receipt of synchronization request message the network server generates and sends synchronization confirmation message to the requesting wireless device . Synchronization confirmation message includes the latest wireless device dataset version and if applicable may include network device change list to synchronize the requesting wireless device with the latest version of the respective dataset. In this case for example once the wireless device changes have been implemented at the network server the network server compiles a network server change list for inclusion with synchronization confirmation message and communicates the confirmation message to the wireless device. The network device change list includes all data items having version numbers greater than the received wireless device dataset version number up to the current version number of the network server dataset minus any changes caused by the wireless device change list e.g. the delta between the latest network device dataset version and the current wireless device dataset version. Thus in the example of the network server change list includes the data item entitled profile.age having a value of 22 since the corresponding data item version number is 4 which is greater than the wireless device version number 3 but does not include value GO TIME of data item entitled profile.tagline as this data item version was based on wireless device change list . Further in some aspects the synchronization confirmation message may include a synchronization status indicator. Thus in the illustrated example the synchronization confirmation message includes a network server dataset version number of 5 network device change list and may include a synchronization successful indicator.

Wireless device dataset depicts the dataset after the synchronization confirmation message has been received the network device change list has been implemented and wireless device version number has been revised. Specifically data item entitled profile.age having a value of 22 has been added to dataset and the dataset version number has been updated from 3 to 5. 

Referring to continuing with the prior example based on operation of an application using wireless device dataset the value corresponding to data item entitled profile.tagline has been cleared or deleted. As such prior to a synchronization session wireless device dataset has version with a value of 5 and the corresponding network server dataset has version with a value of 5. Version 5 of wireless device dataset includes four data items entitled profile.im profile.tagline profile.age and profile avatar. Each data item has a corresponding value the profile.im value is PLAYER45 the profile.tagline value is null or deleted the profile.age value is 22 and the profile.avatar value is Abc.png. Each data item has a corresponding change indicator field . The change indicator field indicates that the data items entitled profile.im profile.age and profile.avatar have not undergone change since the previous synchronization session and that the data item entitled profile.tagline has been deleted since the previous synchronization session. In this case deletion of the data item is indicated by setting the bit corresponding to change indicator to 2. 

Version 5 of network device dataset includes four data items entitled profile.im profile.tagline profile.age and profile avatar. Each data item has a corresponding value the profile.im value is PLAYER45 the profile.tagline value is Go TIME the profile.age value is 22 and the profile.avatar value is Abc.png. Further each data item has a corresponding version number profile.im is at version 1 profile.tagline is at version 5 profile.age is at version 4 and profile avatar is at version 2 . Additionally each data item may have a corresponding deletion indicator otherwise referred to as a tombstone to indicate that the respective data item that has been deleted from the dataset. For network device dataset none of the data items has been deleted and thus no tombstones are set to indicate deletion.

Synchronization between the wireless device dataset and the network server dataset ensues based on synchronization request message generated by the respective wireless device and sent to the respective network device . In this case the wireless device compiles wireless device change list that includes the data item profile.tagline and the value of 2 for the corresponding change indicator thereby representing a deletion of the respective data item from the wireless device dataset .

The wireless device change list and the current value of the wireless device dataset version e.g. version 5 in this case are included in the synchronization request message that is communicated to the network device having the corresponding network device dataset. In turn the network device receives the synchronization request message and at event implements the changes in the wireless device change list updates the respective changed data item version numbers and updates the network server dataset version number .

Network server dataset depicts the dataset after the changes in the wireless device change list have been implemented the data item version numbers have been revised and the network server dataset version number has been revised. Specifically data item entitled profile.tagline has tombstone indicator updated with a value and X in this instance which designates that the respective data item has been deleted from the network device dataset. Further the data item version number for the data item entitled profile tagline has been updated from version 5 to version 6 to reflect the change to the data item and network server dataset version number has been updated from version 5 to version 6 where version 6 is the highest sequenced data item version .

Once the changes have been implemented the network server generates a synchronization confirmation message and communicates the confirmation message to the wireless device. Since no changes occurred in the network device dataset since the previous synchronization session no network server change list is compiled and thus network server change list is not included in the synchronization confirmation message. As such in the example of the synchronization confirmation message includes the updated network server dataset version number . Thus in the illustrated example the synchronization confirmation message includes a network server dataset version number of 6. 

Wireless device dataset depicts the dataset after the synchronization confirmation message has been received and wireless device version number has been revised. In this case since the prior version of the wireless device dataset indicated that a data item was deleted upon receiving the synchronization confirmation message the wireless device is able to delete the respective data item from the wireless device dataset. Specifically data item entitled profile.tagline has been deleted from the wireless device dataset and the dataset version number has been updated from 5 to 6. 

It should be noted that other methods might be utilized to delete data items from the wireless device dataset. For example since the deletion of a data item may be considered a serious type of update or change the system may allow the network device to confirm the deletion such as by including the tombstone indicator in the network device change list to confirm to the wireless device that it is appropriate to delete the respective data item from the wireless device dataset.

Referring to a flow diagram of a method for dataset synchronization at a wireless device is depicted. At Event the synchronization session is initiated at a wireless device. Initiation of the synchronization session may be accomplished by a predetermined user action such as engaging a predetermined keypad a predetermined event such as triggering an on line mode a predetermined time and or the like. At Event the synchronization module checks the change indicator for each data item in the dataset and at Event a determination is made as to whether any of the change indicators have been set to indicate a change to a data item addition of a data item or deletion of a data item.

If it is determined that one or more of the change indicators have been set to indicate a change to a data item at Event a wireless device change is complied based on the change indicator settings. For example change indicators that indicate a change to a data item or the addition of a data item will require incorporation of changed or added data item in the compiled change list. In addition change indicators that indicate the deletion of a data item will require identification of the data item and a deletion indicator in the change in the compiled change list.

At Event a synchronization request message is generated that includes the current wireless device dataset version number and if applicable the wireless device change list. At Event the synchronization request message is communicated to a network device. In some aspects the synchronization request message is communicated via a lightweight data interchange carrier protocol such as JavaScript Object Notation JSON protocol or the like.

At Event the wireless device determines whether a predetermined time has elapsed. The predetermined time is typically defined to provide for an allowable time to receive a synchronization confirmation message. If the predetermined time has elapsed the session assumes that the communication that included the synchronization request message failed or the communication that includes the synchronization confirmation message has failed. If the predetermined time has elapsed the method returns to Event and a new synchronization session is initiated. As such present aspects allow for a robust synchronization method whereby a communication failure provides for a new soft synchronization session to be initiated without the need to perform a full synchronization procedure i.e. exchange and replacement of the entire dataset stored at the wireless device or the network device . It should be noted however that a full synchronization may be implemented for example after a predetermined number of soft sync failures and or based on receiving an error message from the network device as noted below.

At Event if the predetermined time has not elapsed meaning the synchronization session is still within allowable time limit the wireless device receives the synchronization confirmation message from the network device otherwise referred to as the synch synchronization server. The synchronization confirmation message includes the current network device dataset version number the synchronization status indicator and any applicable network device change list. Optionally at Event the synchronization status indicator is checked to determine if the synchronization was successfully performed at the network device. If the synchronization was unsuccessful at Event the wireless device initiates a full synchronization procedure. In one aspect full synchronization requires the wireless device to communicate the entire dataset to the network device for full synchronization.

If the synchronization status indicator indicates that synchronization was successful at the network device at Event the wireless device determines if the synchronization confirmation message includes a network device change list. If a change list is included in the confirmation message at Event the appropriate changes are implemented to the dataset including changes to data items adding data items and or deleting data items from the dataset. Once the changes to the dataset have been implemented at Event the wireless device dataset version number is update to reflect the version number of the network device dataset as indicated in the confirmation message. At Event all data item change indicators are re set to indicate no change and the wireless device waits until a new sync session is initiated at Event .

If at Event the wireless device determines that no change list is included in the synchronization confirmation message then at Event a determination is made as to whether the current wireless device dataset version number is different from the network device dataset revision number as indicated in the confirmation message. If the dataset version numbers are different then at Event the wireless device dataset version number is update to reflect the version number of the network device dataset as indicated in the confirmation message and at Event all data item change indicators are re set to indicate no change and the wireless device waits until a new sync session is initiated at Event . If the dataset version numbers are not different then at Event all data item change indicators are re set to indicate no change and the wireless device waits until a new sync session is initiated at Event .

Referring to a flow diagram of a method for dataset synchronization at a network device is depicted. At Event the network device receives a synchronization request message from a wireless device. At Event a determination is made as to whether the request message includes a wireless device change list. If a change list is included in the request message then at Event a determination is made as to whether any changes in the list correspond to data item deletions. If changes correspond to deletions at Event a tombstone deletion indicator is set for the deleted data item and at Event the data item version number for the deleted item is updated. The updated data item version number reflects the next sequenced number after the highest data item version number.

At Event a determination is made as to whether additional data item deletions are provided for in the change list. If additional deletions are included in the change list the process returns to Event and a tombstone deletion indicator is provided for the additional deleted data item and at Event the data item version number for the deleted item is updated. If at Event a determination is made that no additional deletions are included in the change list at Event a determination is made as whether any changes in the list correspond to data item changes and or data item additions.

If changes correspond to additions changes at Event a determination is made as to whether the data item that is being changed has a tombstone deletion indicator in the network device dataset thereby indicating that no further updates can be made to the respective data item. If the data item that is being changed has a tombstone deletion indicator then at Event the process forwards to Event to determine if there are any remaining items in the change list having updates additions which then returns to Event as described above. If the data item that is being changed does not have a tombstone deletion indicator then at Event the applicable data item change is made by replacing the data item in the current network device dataset with the data item in the change list or the applicable data item addition is made to the dataset. At Event the data item version number for the changed or added data items is updated. The updated data item version number reflects the next sequenced number after the highest data item version number.

At event a determination is made as whether any additional data items changes or additions remain in the change list. If additional changes additions exist in the change list the process returns to Event . If no additional changes additions exist in the change list then at Event the network device dataset version number is set to the highest data item version number. Additionally at Event if the change list does not include any changes additions then at Event the network device dataset version number is set to the highest data item version number.

At Event the wireless device compiles a network device change list of data items that have a version number greater then the version number of the wireless device as indicated in the request message and up to the network device dataset version number just prior to receiving the request message.

Optionally at Event a determination is made as to whether the synchronization process was successful. In one instance an unsuccessful synchronization process may be the result of various reasons including but not limited to a database failure at the network device purging of tombstoned items to create memory space or any other reason that may require the wireless device to perform a full synchronization such as the wireless device not having connected to the wireless network for a long period of time. If the synchronization is not successful at Event a synchronization error message is generated and at Event the synchronization error message is communicated to the requesting wireless device.

If the synchronization process is determined to be successful at Event a synchronization confirmation message is generated that includes the current network device dataset version number a synchronization status indicator and if applicable a network device change list. At Event the synchronization confirmation message is communicated to the requesting wireless device.

If at Event a determination is made that the synchronization request message does not include a wireless device change list then at Event a determination is made as to whether the wireless device dataset version number is different from the current network device dataset version number. If the wireless device dataset version number is not different from the current network device dataset version number then at Event the network device generates a synchronization confirmation message that includes the current network device dataset version number and the synchronization status indicator.

If the wireless device dataset version number is different from the current network device dataset version number then at Event the wireless device compiles a network device change list of data items that have a version number greater then the version number of the wireless device as indicated in the request message and up to the network device dataset version number just prior to receiving the request message. At Event a determination is made as to whether the synchronization process was successful. If the synchronization is not successful at Event a synchronization error message is generated and at Event the synchronization error message is communicated to the requesting wireless device.

If the synchronization process is determined to be successful at Event a synchronization confirmation message is generated that includes the current network device dataset version number a synchronization status indicator and if applicable a network device change list. At Event the synchronization confirmation message is communicated to the requesting wireless device.

The various illustrative logics logical blocks modules and circuits described in connection with the embodiments disclosed herein may be implemented or performed with a general purpose processor a digital signal processor DSP an application specific integrated circuit ASIC a field programmable gate array FPGA or other programmable logic device discrete gate or transistor logic discrete hardware components or any combination thereof designed to perform the functions described herein. A general purpose processor may be a microprocessor but in the alternative the processor may be any conventional processor controller microcontroller or state machine. A processor may also be implemented as a combination of computing devices e.g. a combination of a DSP and a microprocessor a plurality of microprocessors one or more microprocessors in conjunction with a DSP core or any other such configuration. Additionally at least one processor may comprise one or more modules operable to perform one or more of the steps and or actions described above.

Further either individually or in any combination the steps and or actions of a method or algorithm described in connection with the aspects disclosed herein may be embodied directly in hardware in a software module executed by a processor or in a combination of the two. A software module may reside in RAM memory flash memory ROM memory EPROM memory EEPROM memory registers a hard disk a removable disk a CD ROM or any other form of storage medium known in the art. An exemplary storage medium may be coupled to the processor such that the processor can read information from and write information to the storage medium. In the alternative the storage medium may be integral to the processor. Further in some aspects the processor and the storage medium may reside in an ASIC. Additionally the ASIC may reside in a user terminal. In the alternative the processor and the storage medium may reside as discrete components in a user terminal. Additionally in some aspects the steps and or actions of a method or algorithm may reside as one or any combination or set of codes and or instructions on a machine readable medium and or computer readable medium which may be incorporated into a computer program product.

While the foregoing disclosure shows illustrative aspects and or embodiments it should be noted that various changes and modifications could be made herein without departing from the scope of the described aspects and or embodiments as defined by the appended claims. Furthermore although elements of the described embodiments may be described or claimed in the singular the plural is contemplated unless limitation to the singular is explicitly stated. Additionally all or a portion of any aspect and or embodiment may be utilized with all or a portion of any other aspect and or embodiment unless stated otherwise.

Thus present aspects provide for methods devices systems and computer program products for wirelessly synchronizing datasets that are stored on a wireless device and at a network device such as a network server or database. As described the present aspects provide for a simplified and efficient synchronization process whereby synchronization can be completed in a single round trip of wireless communication between the wireless device and the network device. Single round trip communication provides for less use of network resources shorter overall synchronization cycle times and lessens the likelihood of wireless network failures such as call drops or the like causing the synchronization process to fail. Additionally simplification and efficiency are further realized by creating a synchronization process that allows the network dataset to be independent of the wireless device datasets i.e. the network server does not require a full change history nor is the network server required to know the wireless device dataset version. Present aspects also provide for a robust synchronization process such that communication failures allow for re application of the synchronization process without having to implement a full synchronization of the datasets.

Many modifications and other aspects will come to mind to one skilled in the art to which this invention pertains having the benefit of the teachings presented in the foregoing descriptions and the associated drawings. Therefore it is to be understood that the aspect is not to be limited to the specific aspects disclosed and that modifications and other aspects are intended to be included within the scope of the appended claims. Although specific terms are employed herein they are used in a generic and descriptive sense only and not for purposes of limitation. Accordingly the described aspects are intended to embrace all such alterations modifications and variations that fall within the spirit and scope of the appended claims. Furthermore to the extent that the term includes is used in either the detailed description or the claims such term is intended to be inclusive in a manner similar to the term comprising as comprising is interpreted when employed as a transitional word in a claim.

