---

title: Outage management portal leveraging back-end resources to create a role and user tailored front-end interface for coordinating outage responses
abstract: A solution for centrally managing and federating outage specific information and for rapidly providing controlled access to this information in a role tailored fashion. The information can be gathered and provided in real-time along with programmatically determined proposed actions. An information recipient can configure and dynamically change the manner in which the information is presented, so that relevant information for that recipient can be rapidly digested. For example, a manager with a moderate level of technical knowledge may want information to be presented pictorially and in summary fashion, while a highly technical troubleshooter may want to configure information presentation to show key network statistics and values. In one embodiment, outage information can be presented in a Web portal having multiple discrete and customizable portlets, which include a geography portlet and a system portlet.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08171415&OS=08171415&RS=08171415
owner: International Business Machines Corporation
number: 08171415
owner_city: Armonk
owner_country: US
publication_date: 20080611
---
The present invention relates to outage management and more particularly to an outage management portal leveraging back end resources to create a role and user tailored front end interface for coordinating outage responses.

Many companies conduct business operations using a network of managed resources. This network of managed resource can include any type of business resource that is subject to outages such as a set of one or more information technology IT resources a set of supply chain resources components of a delivery system a set of needed public utilities personnel resources and the like. One difficulty in controlling and maintaining these managed resources is to detect diagnose and remedy integrity troubles within the members. Common sources of trouble include adverse weather effects on physical components of a network of managed resources equipment failures user errors software incompatibilities and the like. Many of these conditions are extremely difficult to detect through traditional means which often include engaging various support teams who check their individual areas of responsibility to determine if their equipment resources caused problems.

In a distributed computing example focused upon IT resources network maintenance people will often ping a remotely located server to ensure that packages are able to pass between two end points. Local hardware maintenance people will check statistics on their responsible machines to make sure individual servers are operational. Software maintenance personnel will often check logs to determine whether a given software system has behaved or is behaving as intended. Testing discrete components in this fashion is often time consuming which results in increased downtime. Further this divide and conquer approach often minimizes combinative effects of interacting components. Additionally this troubleshooting environment can become mired in administrative induced hurdles as managers having limited areas of responsibility and or one or more outsourced service companies can focus on assessing that their equipment is fine and that the problems are not their responsibility as opposed to having everyone involved focusing upon cooperating to resolve the problem as quickly as possible. An analogous situation occurs for other types non IT resources of managed resources.

An unfortunate reality of present systems for managing a network of resources is that back end operations data is often trapped within subsystem boundaries. For the computing example server information is often localized to a given server intranet metrics are only exposed to an intranet management team and the like. These subsystem boundaries often exist as barriers imposed to protect the safety and integrity of the systems. A totality of existent but often unavailable back end data can provide a relatively clear picture of a distributed system which can be invaluable for successfully handling outages in a timely fashion. Additional information when properly organized concerning factors outside the back end data e.g. weather patterns Internet communication surges location specific emergencies such as fires floods and hurricanes can further assist troubleshooting and resolution efforts. At present troubleshooters are not provided with all relevant information existent for handling outages whether they involve networks of a computing or non computing public utilities supply chains or any transportation delivery network for that matter nature.

One aspect of the present invention can include a method computer program product system and or device for implementing a role based outage management workplace. In this aspect an outage management system can be identified that provides interface customizations based upon at least one of an identified user and a user role. An outage management workplace can be constructed from the interface customizations. The outage management workplace can include multiple views e.g. portlets in one embodiment . Each view can include view specific programmatic code which is able to be rendered and utilized independent of that for other views. Thus the various views can be separately implemented and can be added or removed from the outage management workplace without affecting the operations of the other views of the outage management workplace. The state of one view can however affect the state of at least one other view so that content changes and user interaction based changes made to one view can result in corresponding changes reflected in at least one other view. The outage workplace computing environment can be presented from a network server to a client rendering whether it be of a fat i.e. full function product for separate installation or thin i.e. Web browser implementation.

Views emanating from the outage workplace can include one that graphically presents spatially related geographic data shown on a map and corresponds to a geographically distributed networked environment. Another view can include a system perspective presenting a schematic for a specific member of the geographically distributed networked environment. The geographically oriented view can be configured to present the overall set of network members upon its map and the selection of one of those within the geographic view can result in the corresponding presentation of data relating to the selected member in the system view.

Another aspect of the present invention can include an outage workplace Web portal including multiple portlets. One of these portlets can include a geography portlet which could be a mashup comprising a visual map and related interface controls as well as overlaid content relating to an outage within a distributed networked environment of resources. The overlaid content can be based upon information dynamically obtained from a plurality of network accessible data sources. An additional system portlet can include a schematic of a resource or subsystem included within the distributed networked environment. Such a schematic can present real time information pertaining to the condition and status of the resource or subsystem being monitored whether it is of a computing or service delivery nature. The overlaid content at the geography portlet can include a set of user selectable objects each corresponding to a different networked resource. A selection of one of the user selectable objects in the geography portlet can result in the system portlet s dynamically changing to present content related to the selected resource. The geography portlet and the system portlet can be customized in accordance with a role of a user and with user established customization settings.

Still another aspect of the present invention can include a portal server for the creation and service of role customized outage workplace portals. The portal server can use role specific programmatically implemented customizations for providing role tailored portals. The roles can include an executive role an operational role and a maintenance role each tailored for the presentation of outage information to different groups of users. A data store used by the portal server can manage digitally encoded customization settings. The customization settings can be associated with specific users and can include user established settings. The programmatically implemented customizations can be configured for utilization when outage workplace portals are served to users. The portal server can also include fetching software configured to dynamically obtain outage information from at least one back end data source. Portlet creation software can also be included that modifies a software artifact obtained from at least one presentation source to include data points based upon the obtained outage information. The portlet creation software can utilize the customization settings from the data store when generating portlets for specific users. Portal binding software can be used to insert code into an outage management portal which programmatically links otherwise independent portlets. The inserted code can cause the state of at least one of the portlets to dynamically change based upon at least one of a user interface and a data update to another of the portlets of the outage workplace portal. The portal server can also include a component configured to respond to requests from remotely located clients by serving customized outage workplace portals to them. The served outage workplace portals can include at least a geography portlet and a system portlet both delivering outage related information for a distributed networked environment.

A solution for centrally managing and federating outage specific information and for rapidly providing controlled access to this information in a role tailored fashion. The information can be gathered and provided in real time along with programmatically determined proposed actions. An information recipient can configure and dynamically change the manner in which information is presented so that relevant information for that recipient can be rapidly digested. For example a manager with a moderate level of technical knowledge may want information to be presented pictorially and in a summary fashion while a highly technical troubleshooter may want to configure information presentation to show key networked resource statistics and values. One aspect of the present invention utilizes Web 2.0 interfaces tied to information federation sources yet which permit customized views. The Web 2.0 interfaces can further include communication collaboration and response management facilitation tools such as for instant messaging IM e mail co browsing video sharing presence detection presentation and the like. In one embodiment outage data can be acquired and federated using a series of Web services provided by service oriented architecture SOA components.

It should be appreciated that the use of SOA roles based portals federated data approaches mashups collaboration and other techniques are each individually well known in the art. What is unique about the presented solution is a combination of these techniques and components to create a state of the art outage system. This outage system is able to address various business challenges for the various user roles. Further the solution embraces a use of real time information in an intelligent fashion to present the appropriate data to the appropriate user at the appropriate time. Additionally the solution leverages existing information sources and is able to be cost effectively adapted as technologies data sources presentation source and business goals change.

The present invention may be embodied as a method system or computer program product. Accordingly the present invention may take the form of an entirely hardware embodiment an entirely software embodiment including firmware resident software microcode etc. or an embodiment combining software and hardware aspects that may all generally be referred to herein as a circuit module or system. Furthermore the present invention may take the form of a computer program product on a computer usable storage medium having computer usable program code embodied in the medium. In a preferred embodiment the invention is implemented in software which includes but is not limited to firmware resident software microcode etc.

Furthermore the invention can take the form of a computer program product accessible from a computer usable or computer readable medium providing program code for use by or in connection with a computer or any instruction execution system. For the purposes of this description a computer usable or computer readable medium can be any apparatus that can contain store communicate propagate or transport a program for use by or in connection with an instruction execution system apparatus or device. The computer usable medium may include a propagated data signal with the computer usable program code embodied therewith either in baseband or as part of a carrier wave. The computer usable program code may be transmitted using any appropriate medium including but not limited to the Internet wireline optical fiber cable RF etc.

Any suitable computer usable or computer readable medium may be utilized. The computer usable or computer readable medium may be for example but not limited to an electronic magnetic optical electromagnetic infrared or semiconductor system apparatus device or propagation medium. Examples of computer readable media include a semiconductor or solid state memory magnetic tape removable computer diskette random access memory RAM read only memory ROM erasable programmable read only memory EPROM or Flash memory rigid magnetic disk and an optical disk. Current examples of optical disks include the Compact Disc Read Only Memory CD ROM Compact Disc Read Write CD R W and the Digital Video Disc DVD . Other computer readable media can include transmission environments such as those supporting the Internet an Intranet or a Personal Area Network PAN and magnetic storage devices. Transmission media can include an electrical connection having one or more wires an optical fiber an optical storage device and a defined segment of the electromagnet spectrum through which digitally encoded content is wirelessly conveyed using a carrier wave.

Note that computer usable or computer readable media can even include paper or another suitable medium upon which a program is printed as the program can be electronically captured via for instance optical scanning of the paper or other medium then compiled interpreted or otherwise processed in a suitable manner if necessary and then stored in a computer memory.

Computer program code for carrying out operations of the present invention may be written in an object oriented programming language such as Java Smalltalk C or the like. However the computer program code for carrying out operations of the present invention may also be written in conventional procedural programming languages such as the C programming language or similar programming languages. The program code may execute entirely on the user s computer partly on the user s computer as a stand alone software package partly on the user s computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario the remote computer may be connected to the user s computer through a local area network LAN or a wide area network WAN or the connection may be made to an external computer for example through the Internet using an Internet Service Provider .

A data processing system suitable for storing and or executing program code will include at least one processor coupled directly or indirectly to memory elements through a system bus. The memory elements can include local memory employed during actual execution of the program code bulk storage and cache memories which provide temporary storage of at least some program code in order to reduce the number of times code must be retrieved from bulk storage during execution.

Input output or I O devices including but not limited to keyboards displays pointing devices etc. can be coupled to the system either directly or through intervening I O controllers.

Network adapters may also be coupled to the system to enable the data processing system to become coupled to other data processing systems or remote printers or storage devices through intervening private or public networks. Modems cable modems and Ethernet cards are just a few of the currently available types of network adapters.

The present invention is described below with reference to flowchart illustrations and or block diagrams of methods apparatus systems and computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and or block diagrams and combinations of blocks in the flowchart illustrations and or block diagrams can be implemented by computer program instructions. These computer program instructions may be provided to a processor of a general purpose computer special purpose computer or other programmable data processing apparatus to produce a machine such that the instructions which execute via the processor of the computer or other programmable data processing apparatus create means for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

These computer program instructions may also be stored in a computer readable memory that can direct a computer or other programmable data processing apparatus to function in a particular manner such that the instructions stored in the computer readable memory produce an article of manufacture including instruction means which implement the function act specified in the flowchart and or block diagram block or blocks.

The computer program instructions may also be loaded onto a computer or other programmable data processing apparatus to cause a series of operational steps to be performed on the computer or other programmable apparatus to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide steps for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

The browser can be used as a user interface in which multiple programmatically linked views are presented in a customized fashion. In one embodiment each of these views can represent a portlet and the outage management workplace s user interface can be a portal. Content of the outage management workplace s user interface can vary depending upon user role. Typical content for a user interface can include but not be limited to geographic or mapping information detailed schematics system models and or scorecard displays. The workplace s user interface can also include components for alerts directory lookup instant messaging support reference document display wiki style mass collaborative authorization and searching and the like.

Portals portlets are just one contemplated technology for expressing the outage workplace in a user interactive manner and a realization of the inventive arrangements described herein is not to be limited to a specific technology or set of technologies. In one embodiment for example a series of Web enabled widgets or desktop gadgets considered browsers for purposes of system on an active desktop of client can be used to interactively present different ones of the views .

The views can include any number of discrete interface sections related to outage management including but not limited to a geography view a system view a contact view a communication view a situation response view an action item view a forecast view and the like. Customization interface can be used to change behavior and settings for existing views adding a different view to an outage workplace or creating a new user designed view etc.

The various views can interoperate. For example selecting a given system object in a geography view can change the system presented in a system view . In another example when parties included in the communication view communicate with a user bibliographical and summary data for those people can be presented in a contact view assigned tasks involving the parties can be presented in a situation response view presence information for the parties can be displayed in the geography view e.g. points for where communicators are located can be displayed on a map and the like. Views can be dynamically and automatically updated as new information becomes available. In one embodiment one or more of the views can present real time and or near real time information acquired from back end systems.

System can provide mechanisms to acquire information from multiple loosely coupled systems to aggregate this information in accordance with a set of outage specific rules into a standardized format and to then process this standardized information in a user tailored manner. An information management segment of middleware can acquire data from the data sources . A source processing component can transcode reformat convert and otherwise process the acquired data from an original form into standardized output data which can be stored in a data repository . In one embodiment a number of data source plug ins can be used to convert the data conveyed over network from the back end to the middleware layer. In another embodiment the middleware can utilize a data conversion gateway to standardize the externally acquired data.

In one embodiment the information management component can also process output from a standardized format to a format specific to a given presentation source . For example a presentation source can incorporate a mashup that includes customized points overlaid upon a geographic map. The output processing component can adjust the format of the data to conform to that needed for a given presentation source .

The information management component can also include a configuration processing component which can store end user customizations in repository . These customizations can be established by interface or any other configuration mechanism.

The information management component can also include a set of programmatic rules and routines to integrate middleware components with support sources such as e mail servers telephony systems calendaring systems and the like.

Further middleware can include one or more software engines which provide one or more middleware services . These services can include for example federation services role services security services configuration services decision services experience services portal services or other services . In one embodiment the services can include one or more Service Oriented Architecture SOA services. One or more information management components and routines can optionally be implemented as middleware services .

As used herein each of the data sources can be a definable location for obtaining outage information. These data sources can include URL addressable resources sensor input linked resources and the like. Many of the data sources can have internal security which can be centrally handled e.g. suitable passwords and identification credentials by one or more security services . Subscription data sources broadcast data sources static data sources and the like can be included in system . Further a user or administrator can dynamically define new data sources and or change specifics of existing data sources . In one embodiment reconciliation rules can be established to determine which of the many data sources is to be granted priority over other sources when data conflicts occur. Many of the data sources if not all can be commercial data sources for outage related information. Data sources can include but are not limited to network monitoring sources system monitoring sources weather sources and the like.

The presentation sources can include a variety of sources and mechanisms linked to various views . The sources can include Web 2.0 sources such as wikis syndication feeds mashups and the like. Views can represent a filtered customized or otherwise manipulated version of data dependent upon one of the presentation sources . Presentation sources can be included in the middleware or can be independent of it. For example the middleware can utilize capabilities of an external mapping presentation source to provide a geography view complete with outage customized points. For example the geography view can use GOOGLE MAPS or YAHOO MAPS as a presentation source .

The support sources can represent one or more systems or applications integrated with the outage management system and can include stand alone systems having a directed purpose. Content from the support sources can be formatted for presentation in one or more of the views . Support sources can encompass scheduling systems content management systems task tracking systems communication systems and the like. For example an e mail system and or an instant messaging system can be one of the support systems and can provide a communication capability to an outage workplace interface . In another embodiment a calendaring system can be used to track tasks assigned to outage personnel during an outage event and or to provide a responder with contact information used to communicate with another outage response team member. The views tailor extracted information to a user s desires and to a specific outage scenario all of which can be a data driven process.

The middleware can be software that functions as an intermediary between two or more applications that would not otherwise be able to intercommunicate. The middleware can provide for interoperability in support of a move to coherent distributed architectures. Middleware can utilize any number of different standardized technologies including Extensible Markup Language XML based technologies Simple Object Access Protocol SOAP mechanisms Web services service oriented architecture SOA structures and the like. Middleware can include IBM WebSphere Application Server WAS IBM WEB PORTAL IBM Tivoli Management Framework TMF components an Organization for the Advancement of Structured Information Standards OASIS compliant SOA architecture a JAVA 2 ENTERPRISE EDITION based middleware structure a Common Object Request Broker Architecture CORBA based set of services and components a .NET based set of services and components and the like.

The management information component can be a software implemented component configured to assist with a management any network of manageable resources. These managed resource can be associated with computers public utilities supply chains delivery systems personnel and or any other type of resource that is capable of being interconnected and managed so long as the network of managed resources could possibly suffer from an outage. An outage can refer to any situation that affects an availability of a resource and or an ability of a network of these resources to interoperate. A set of IT resources can be a subset of the resources managed by the information management component . Further an outage can occur even though all IT resources managed by component are in a functional operational state. For example a logistical transportation vehicle e.g. truck train plane etc. that delivers supply chain materials can be unavailable which results in an outage situation that must be handled with the assistance of component . In such a situation IT resources supply chain management systems manufacturing systems etc. are fully functional yet an outage occurs.

A front end access point can be used to communicate with middleware via network . An access point can include a user and a client connected to network . Each of the clients can be a computing device capable of presenting Web content within a browser . Each client can include for example a desktop computer a server a mobile telephone a tablet computer a personal data assistant PDA a digital media player and the like.

A browser can include any software application able to interactively present user interface . The browser can be an application used to view and navigate the World Wide Web and other Internet resources. The browser can include a rich internet interface RII a REST client and other software for rendering views .

The user interface can include a graphical user interface a voice user interface a text interface a multimodal interface and the like. In one embodiment the user interface can be a portal or a series of portals e.g. multi page Web application . Each portal can include multiple Web portlets which can vary according to the role of a user.

A role can be based upon a position in an organizational hierarchy or upon a responsibility area in regards to an outage and the like. Roles can be keyed to areas of responsibility a skill set an authorization level functional lines and or can be specific to particular positions. Sample roles for an outage scenario include but are not limited to those of a company executive an operations person and a maintenance crew member.

Each of the components of system can be interconnected through one or more data networks which include network and network . These networks can include any hardware software and firmware necessary to convey data encoded within carrier waves. Data can be contained within analog or digital signals and conveyed though data or voice channels. Networks can include local components and data pathways necessary for communications to be exchanged among computing device components and between integrated device components and peripherals. The networks can also include their comprising equipment such as routers data lines hubs and intermediary servers which together form the data network. Networks can further include circuit based communication components and mobile communication components such as telephony switches modems cellular communication towers and the like. Finally networks can include line based and or wireless communications pathways.

System can store digitally encoded information in a set of one or more data stores such as repository and which are accessible by system components. These data stores can be physical or virtual storage spaces configured to store digital information. The data stores can be implemented with any type of hardware including but not limited to a magnetic disk an optical disk a semiconductor memory a digitally encoded plastic memory a holographic memory or any other recording medium. Each of the data stores can be a stand alone storage unit as well as a storage unit formed from one or more physical devices. Additionally information can be stored within the data stores in a variety of manners. For example information can be stored within a database structure or can be stored within one or more files of a file storage system where each file may or may not be indexed for information searching purposes. Further the data stores can optionally utilize one or more encryption mechanisms to protect stored information from unauthorized access.

The data acquisition process can begin in step where a data source and an optional profile and source specifics can be determined. The data source can be any source of information i.e. public trusted or secure which relates to outages. In step a connection can be established with the determined data source such as via a network. In step a content update can be received from the data source.

In step received raw content can be converted from a data source format to a standardized format used by an outage management system. In one embodiment transcoding and or conversion rules can be established by a source profile which can be a plug in for handling content from a given source. Thus the data acquisition process can be a pluggable one within which new content sources can be added through the use of associated plug in modules. In step converted data can be aggregated with other source provided data. In step a determination can be made as to whether additional updates exist or are to be determined for the data source. If so the process proceeds from step to step . Otherwise step can execute where another data source can be queried for data updates shown by progressing from step to step . When other data sources are not to be checked a cycle of the process ends to be repeated at intervals or triggered based upon an occurrence of a detectable programmatic event.

In one embodiment the data acquisition process can synchronize remote data sources with an outage management data repository. In another embodiment no persistent outage management data repository is necessary and data can be dynamically acquired and possibly converted directly from a source on demand. Implementations can use a combination of a persistent outage management data repository for some data sources and direct data utilization from other data sources.

The presentation interface tailoring process can dynamically create role and or user specific outage management workplaces e.g. user interfaces . In step a user identifier can be determined and optional authentication information can be received. Authentication information can include any security information such as a device identifier a user identifier a passcode a digital certificate a biometric input and the like. In step a user can be validated and a user s role in the context of the outage workplace can be determined. It is possible for a user to have multiple roles within an overall outage system in which case the user can be prompted to select a desired role during step .

In step role specific interface settings and or user specific interface customizations can be retrieved for the user. In step a determination can be made as to any presentation sources and or services that are needed for the user s outage workplace. For example the outage workplace user interface can be a Web portal that includes any number of portlets. One of these can incorporate a mashup which relies on a presentation source to provide a base map upon which outage specific data is overlaid. In step customizations to the presentation sources services can be applied and views e.g. portlets can be constructed as needed. These views can be integrated into the presentation interface e.g. portal as shown by step . In one embodiment the integration of the various views each of which can be associated with different URL addressable software artifacts can be performed at this stage. That is programmatic linkages can be established so that interactions occurring in one of the views fires an event which changes the state of another one of the views thus altering content presented therein. Thus different portlets or views related to outages can be programmatically linked to other portlets within a served portal in a unified and customized fashion.

The data presentation process is a process through which a customized interface e.g. an outage workplace is loaded with suitable data. In step a presentation interface and data sources for that interface can be determined. In step data sources can be linked to suitable interface elements. These links can be interactive and dynamically created programmatic links which also link various views to other views or portlets to other portlets . In step a linked interface can be presented to a user and content can be dynamically adjusted based upon user interactions and or data updates. Changes based upon data updates can be particularly important for outage workplaces that show real time and or near real time data. As previously mentioned user interactions in one view can result in changes to another view. For example a selection of a location in a geographic view e.g. portlet can result in a corresponding system being presented in a system view e.g. portlet . Step can repeat unless a new Web page or portal is selected or navigated to. In this case the process can progress from step to step where specifics for the new Web page can be determined and this new page can be populated with suitable interface and data elements. It should be noted that an outage management application can be a multi page application having from 1 to N number of pages.

As shown for example a portal workplace and its portlets can map to layer of the SOA . Multiple user roles and their associated Web browsers can access the presentation and application services . The presentation and application services can include the user experience portal server and various support applications such as an organizational directory instant messaging and content management library systems. The SOA can bifurcate presentation services from application services which can foster configurable end user experiences while ensuring consistent handling of organizational information.

The resources portion of the SOA can be involved with the provisioning of data required to drive measurements historical trending and marketplace portions of the portal workplace. Various back end enterprise level systems can yield direct or to be federated such as by a federation service data. Resource contributions must be fetched coordinated and appropriately transformed. The use of domain and enterprise service providers allows the isolation and insulation of back end systems while allowing access to their functions via Web service interfaces. The integration service provider can integrate information from the other service providers and can communicate with a service gateway . The service gateway can implement dynamic binding request response decomposition composition and content based routing of document literal Extensible Markup Language XML requests generally arriving via Web services and can additionally provide wire protocol conversion if necessary.

More specifically the integration service provider can serve as a reference system for service routing and versioning as well as the handler for complex requests and processes not addressable by the service gateway . All of the middleware and back end adapter components combine to standardize normalize and flexibly implement the loose coupling that is an SOA strength. All serve to optimize the presentation and application services access to back end systems the middleware components and may be used to cache fetched data and obviate the need for full round trips portal to back end resources where possible.

Taking the above into account and for the portal workplace the presentation and application services largely implemented with the portal server and collaboration technology can use client libraries for the conversion of Java Bean based requests into document literal XML ones which are transmitted to the service gateway for decomposition many to individuals and routing. When near real time Web portlet objects are generating requests possibly via AJAX those end up being transmitted via Web service calls to the service gateway which enables access to data cached in the service bus or requested of the appropriate resource . Responses can be sent back to the service gateway which will cache appropriate data and compose a total response to match all facets of the original request. Subsequent requests can be matched with cached data before it expires thereby extending the time before another full round trip to one or more back end resources becomes necessary.

The same approach as above can be taken for a possible marketplace portion of the portal workplace as dynamic data relating to on demand resources such as for purchasing parts in a resource network outage scenario can be accessed once again through the user experience component the service gateway the integration service provider if needed and an appropriate service provider .

In cases where multiple service providers and back end systems must contribute to federated responses or where multi step business processes must be run for analysis or report aggregation purposes the integration service provider can be utilized. Possessing business process choreography capabilities the integration service provider is able to handle requests involving conversions and synthesis that the service gateway cannot. As response routing does go back through the service gateway however the ability to capture complex results in temporary cache is still present and can be leveraged by the service gateway for subsequent requests. An example of a request requiring aggregation of data from various back end resources might be when the portal workplace fetches past present and future prediction information in one request for the display of history and trends for a given measure such as system reliability . The integration service provider provides the request decomposition and process steps to access each contributing back end system and then aggregates the responses to form one answer. 

In summary the visible portion of the portal workplace leverages the invisible portion provided by the SOA infrastructure in order to access the various pieces of data required to drive its mix of portlets. The employment of client side Java Beans for convenience document literal XML for transformation content based routing dynamic binding multi step request handling and Web service enablement of back end resources contributes to this goal.

It should be emphasized that the architecture is shown for illustrative purposes only and that the scope of the invention is not to be limited in this regard. For instance other SOA approaches not having an integration service provider component can be used to implement the portal functionality. Other architecture types such as RESTful ones can also be used to functionally implement portal in different invention embodiments.

For example each portlet of client can utilize interaction engine to interface with the portal server . In memory cache or data store can be used to store information specifying data sources for updating the portlets such as the URLs for associated Web sites. Data store can also separately store and track foreground presented information for the portlets and background hidden information.

The portal server of system can include a user experience framework a master handler an outage data handler and an alert data handler . Caches and data store contain information which can also be used by the portal server . The client can communicate with the portal server via a network infrastructure not shown . Authorization engines not shown can ensure security of portlet data.

The user experience framework or engines can interface with specific clients . The user experience engines can be communicatively linked to a registration handler not shown a master handler and data handlers as shown. Each data handler can be associated with a memory cache and or which store frequently updated data and related pertinent update frequency information. Handlers can together ensure that data presented within client portlets and obtained from providers is continuously updated.

In one embodiment user experience engines can customize enterprise content for specific user roles or communication channels such as a customer channel an employee channel a management channel an IT administrator channel and the like. The communication channels can also be linked to different market channels such as employee systems kiosks self service Web sites and the like. Accordingly the user experience engines can customize streams of enterprise data obtained from an enterprise infrastructure for different front end systems. Segmenting enterprise data from different front end systems used by clients in such a loosely coupled fashion ensures that enterprise data can be utilized by different separately customizable systems without negatively affecting back end systems.

Information can be conveyed as Web service data to the portal server via a service gateway which is connected to an integration service provider . Other providers can exist which communicate with the gateway and or the integration service provider . A service directory can specify the types of services available within system . Middleware components can optionally use one or more memory caches to improve overall system performance.

A content navigator can permit a user to specify a location or a system which are to be displayed in geography view and system view respectively. Alternatively one or more outage events can be selected which causes the views and to be adjusted to reflect the area around an outage and the system s affected. When multiple geographic regions and systems are affected by an outage selected by control the controls and can be filtered so that only those views and systems affected by the selected outage are offered for selection. Different levels of detail can be expressed for both the geography view and the system view .

Both the geography view and the system view can include displayable pop ups providing detailed information relevant for outages. For example when a pointer is positioned flown over the icon of an outage in the geography view pop up can be automatically presented to provide known details of that outage. The data in views and can be dynamically and automatically updated as related data sources are updated. Those updates can occur in a real time fashion. For example the system view can show a current model and continuous operational values for resources within its targeted area and the like. Both the maps within the geography view and the model within the system view can be structured to permit a user to change the zoom or granularity level of data displayed.

In one embodiment one or more of the views such as the geography view can incorporate a mashup which includes icons data points indicators and the like specific to outages. The base maps underneath can be provided from a standard presentation source such as a geographic information system GIS which can be unrelated to outage management.

In one embodiment selections with the geography view and or the system view can be programmatically linked to the content navigator to effect changes based upon intra view selections. For example a control point for a system can be selected from within the geography view which changes the target of selector and the system displayed in view . Different roles can cause a different set or different versions of views to be presented. As shown possible roles can include that of operations maintenance and an executive but any others could be implemented. When a logged in user has access to multiple roles the available ones can be enabled in roles section .

A number of communication tools can be included in the outage workplace such as ones for an alerting facility an instant messaging facility and a people finder directory lookup . Each of these tools can be minimized portlets which can be expanded upon selection. Further the tools or associated views can be customizable so that a user can add new tools along with portlets or views to their tailored version of the outage workplace. A user can also customize which tools portlets or views are to be initially minimized and which are to be expanded. In one embodiment the various views of the outage workplace can each be repositioned and or resized and a default layout associated with a user can be saved as a user preference. In one embodiment a number of links and menus can be available. These links and menus can for example be selected to access content such as weather general RSS syndication feeds and miscellaneous documents and reports etc.

It should be understood that the data sources the presentation sources and the support sources involved with outage workplace can have security restrictions. In one embodiment the middleware responsible for constructing the outage workplace can maintain authentication credentials and can provide them in a user transparent fashion assuming a user validated for the outage workplace has verified their identity and possesses necessary permissions for the utilized sources.

For example different icons can indicate the positions of various crews labeled . Names of the crews can be presented in section . Further selection of a crew in section can cause directory portlet to present the individual members of that crew along with relevant contact information. One contact mechanism of portlet can be to instant message a crew member which can occur immediately in instant messaging portlet . Various support sources such as a presence awareness system an instant messaging system and a contact management system can be utilized to provide content presented in portlets and .

Additionally functionality for one or more of the portlets can be provided at least in part from a commercial off the shelf service or system. For example the geography portlet can include controls for repositioning a map for adjusting a zoom level and for changing map display type all of which could provided by a general mapping service such as Google Maps. The actual outage specific elements key section and icons can represent a customized extension to the base mapping software.

Diagram also shows a set of minimized portlets which can be expanded. These portlets can include but are not limited to an alert portlet a people finder portlet a system portlet and a portlet that details outage specifics.

When this item is selected or hovered over the item view can provide detailed information about it. This information can include a name a location a manufacturer model number etc. Selection of different components in view can result in different data automatically being presented in view . Further a performance chart view can show recent and current performance of the component selected in view .

In one embodiment one or more wiki views can exist and can include useful information about the system shown in view a component shown in view or other selected items within the outage workplace. The wiki portlet can be used to capture and share lessons learned best practices and other information across an organization or among multiple organizations.

The people finder can be a view that assists a user in finding contact information. In one embodiment different directories or phone books can be established for the people finder which can be automatically filtered for a current state of a system shown in view . For example a user can select a context filter when item is experiencing problems and contact information for personnel related to that item can be presented in view . For example an inventory control person an administrator a maintenance lead and the like can appear upon selection of the filter button .

Diagram further shows a series of system related alerts . These alerts can be tailored for a user and or for a user s organizational position or role related to a system of interest.

The views or portals are not intended to be comprehensive but are instead illustrative of some of the possible views contained in an outage workplace. For example in one embodiment a blog view not shown could be used to record a system status for a user of interface . The user of the outage portal could be a maintenance agent responsible for a system. Routine activities for a shift could be entered into the blog as a record. Additionally entries about outage events could automatically make their way into the blog and could have comments subsequently injected by outage workplace users.

It should be emphasized that the outage workplace is tailored based upon user role and user preferences. The interface can for example be a tailored outage workplace for a maintenance role. Similarly interface can be tailored for an operational role. Other roles are contemplated which would result in more possible customizations for the outage management workplace.

For example an executive role can use a tailored outage management workplace that shows a mapping view oriented more towards outage impact areas and durations than deployments of individual equipment and response crews. Additionally trend information such as historic and forecasted outage times events and durations can be presented in a tabular form. Portlets or views can be presented for an executive role to show cost benefit tradeoffs of system upgrades. Further a mapping portlet can show possible upgrade placements and scenarios while other portlets may show details about upgrade timelines crews costs etc.

The diagrams in illustrate the architecture functionality and operations of possible implementations of systems methods and computer program products according to various embodiments of the present invention. In this regard each block in the flowchart or block diagrams may represent a module segment or portion of code which comprises one or more executable instructions for implementing the specified logical function s . It should also be noted that in some alternative implementations the functions noted in the blocks may occur out of the order noted in the figures. For example two blocks shown in succession may in fact be executed substantially concurrently or the blocks may sometimes be executed in the reverse order depending upon the functionality involved. It will also be noted that each block of the block diagrams and or flowchart illustration and combinations of blocks in the block diagrams and or flowchart illustration can be implemented by special purpose hardware based systems that perform the specified functions or acts or combinations of special purpose hardware and computer instructions.

The terminology used herein is for the purpose of describing particular embodiments only and is not intended to be limiting of the invention. As used herein the singular forms a an and the are intended to include the plural forms as well unless the context clearly indicates otherwise. It will be further understood that the terms comprises and or comprising when used in this specification specify the presence of stated features integers steps operations elements and or components but do not preclude the presence or addition of one or more other features integers steps operations elements components and or groups thereof.

The corresponding structures materials acts and equivalents of all means or step plus function elements in the claims below are intended to include any structure material or act for performing the function in combination with other claimed elements as specifically claimed. The description of the present invention has been presented for purposes of illustration and description but is not intended to be exhaustive or limited to the invention in the form disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art without departing from the scope and spirit of the invention. The embodiment was chosen and described in order to best explain the principles of the invention and the practical application and to enable others of ordinary skill in the art to understand the invention for various embodiments with various modifications as are suited to the particular use contemplated.

