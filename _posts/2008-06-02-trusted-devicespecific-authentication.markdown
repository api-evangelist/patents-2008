---

title: Trusted device-specific authentication
abstract: An authentication system combines device credential verification with user credential verification to provide a more robust authentication mechanism that is convenient to the user and effective across enterprise boundaries. In one implementation, user credential verification and device credential verification are combined to provide a convenient two-factor authentication. In this manner, an account authority service or other authentication provider verify both factors and provide a security token in accordance with the security policy of the account network resource the user is intending to access. The level of privilege granted by the target account network resource can vary depending on the number and type of factors verified by the account authority service.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07979899&OS=07979899&RS=07979899
owner: Microsoft Corporation
number: 07979899
owner_city: Redmond
owner_country: US
publication_date: 20080602
---
This application is related to a concurrently filed U.S. Ser. No. 12 131 140 entitled Device specific Identity which is specifically incorporated herein by reference for all that it discloses and teaches.

A typical user authentication mechanism verifies a user s credentials such as by validating a username and password as the user attempts to access a protected resource e.g. a server accessed via the Internet . However using such a traditional authentication mechanism if the username and password are stolen by a malicious entity the entity may access the user s account from anywhere in the world through any device resulting in undesirable security risks.

Another authentication scenario involves a user attempting to login to a remote device. A user authentication mechanism can authenticate the user but it may also be relevant to make certain that the remote device is actually the trusted device the user expects it to be. For example a user may attempt a login to a remote server in order to upload confidential files. If the authentication process does not verify both the user s credentials and the device s credentials the user may upload the confidential files to the wrong server. The risk of being wrong about which device one is accessing introduces severe security risks.

Implementations described and claimed herein address the foregoing problem by combining device credential verification with user credential verification to provide a more robust authentication mechanism that is convenient to the user and effective across enterprise boundaries. In one implementation user credential verification and device credential verification are combined to provide a convenient two factor authentication. Generally the user provides the user credentials e.g. username and password while the user s device provides the device credentials that have been associated with both the user and the device. In this manner an account authority service or other authentication provider verify both factors and provide a security token in accordance with the security policy of the account network resource the user is intending to access. If a required factor is not verified the account authority service can request authentication by another factor e.g. fingerprint scan retina scan HIP solutions secret questions etc. . The level of privilege granted by the target account network resource can vary depending on the number and type of factors verified by the account authority service.

In some implementations articles of manufacture are provided as computer program products. One implementation of a computer program product provides a computer program storage medium readable by a computer system and encoding a computer program. Another implementation of a computer program product may be provided in a computer data signal embodied in a carrier wave by a computing system and encoding the computer program. Other implementations are also described and recited herein.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used to limit the scope of the claimed subject matter.

Security tokens for example provide evidence of the identity of one or more entities e.g. a user and or a device using a unique secret. By providing a security token to another entity the providing entity is proffering evidence of its identity. It is up to the receiving entity to determine whether to authorize the providing entity with a level of privilege based on the security token. Further a security token may have an expiration period after which the security token is no longer reliable. In one implementation a security token supports an API Application Programming Interface that allows a computing device to interrogate it e.g. to determine whether the security token includes a username and or a device ID . It should be understood that a username is an example of a user ID and that other user IDs may be employed. Other examples may include email addresses and aliases including gamer tags.

In one implementation the user provides user credentials e.g. a username and user password to set up an account although other combinations of information may be employed to set up a user account. Account information is stored in a data repository that is accessible by the account authority service . For example an account record may include a username password one or more device IDs with their corresponding device passwords and user friendly device name among other data items. When a user attempts to log into his or her account the account authority service looks up the user s account information and verifies the user credentials against those stored in the account information. For example the account authority service looks up the user s account information using the provided username. Then the account authority service authenticates the user credentials e.g. the username and password to authorize access to the user s account.

Whether provided during account setup or afterward device credentials e.g. a device identifier ID and device password may also be transmitted from the user device to the account authority service and stored as account information in association with user credentials. A device ID refers to a globally unique device identifier generated for the device. A device ID may be generated using a variety of methods. In one implementation a device ID may be a randomly generated number such as Globally Unique Identifier GUID with a large value set so that one device ID does not conflict with another device ID. Another implementation may include consideration of unique characteristics of the device itself. For a personal computer device for example the combination of the hard disk and the BIOS offers some unique non volatile parameters or characteristics that may be used to contribute the device ID generation. Other characteristics may be related to user settings within the operating system that are generally not volatile. These non volatile characteristics allow a closer affinity of the device ID to the actual device itself so that the device ID is less spoof able and easier to recover from a loss.

In one implementation the user specifies that the user device is a trusted device and client software executing on the user device generates a device ID and device password which the user device sends to the account authority service as device credentials. The user may also provide a user friendly device name in association with the device credentials so that the user and potentially other users can identify the user device in the future.

In one implementation the account authority service records the device ID in the data repository in association with the username to establish a trust relationship between the user and the user device . Through this process the user has declared that the user device is one of his or her trusted devices within the account network affiliated with the account authority service . It should be understood that the user may designate multiple trusted devices using a similar process.

Further the user may remove a device from his or her trusted device list in his account which is useful when a device has been stolen and the user wishes to prevent authentication through the stolen device. For example the user can send a request to the account authority service to disassociate his or her user ID from a specified device ID. The account authority service can in response delete the device ID of the specified device from the user s account or otherwise designate that the user ID is no longer associated with the device ID. This mechanism can be helpful for example when the user is updating his or her computer or mobile phone e.g. a request through the older user device can specify Remove this device from my trusted device list . However in some circumstances the user may no longer have the user device that is to be removed from the trusted device list e.g. the user device has been damaged lost or stolen . In such circumstances the user can request a list of his or her trusted devices which can be listed by user friendly device name and select the device to be removed from this list. Alternatively the user can merely provide the user friendly device name in a removal request to the account authority service .

In one implementation if the user has set up his or her account with the account authority service so that the user is associated with the device ID of the user device the user can request a device certificate associated with the user device . Generally a device certificate is a digital certificate that binds a public key with a device ID. The device certificate provides evidence that the public key belongs to the device identified by the device ID. For example the user may generate a public private key pair and send the public key to the account authority service along a reference to the device of interest e.g. a user friendly device name the device ID etc. . The public key is submitted with the device credentials and or user credentials to ensure the certificate request is made by the trusted device and or the user. The public key may be transmitted to the account authority service contemporaneously with the account setup or at some other time thereafter. The account authority service encrypts the device ID using the public key to create the device certificate signs the device certificate using its private key and sends the signed device certificate back to the user device . As a result of this transaction the user device possesses trusted evidence e.g. the device certificate that it is device identified by the device ID.

When the user wishes to initiate access to an account network resource such as the e commerce server the user s browser can navigate to the e commerce server which redirects the user s browser to the account authority service . The user device can provide user credentials and the device certificate to the account authority service in a request for a security token to access the e commerce server . In one implementation a security token may include a username and or a device ID which an account network resource may access through an API. In one implementation the account authority service evaluates the user credentials the device certificate and the security policy of the e commerce server to determine whether to provide the user device with a security token for access to the e commerce server . Generally the security policy defines what the server has defined as the terms of secure activity. The security policy addresses constraints on functions and flow among them constraints on access by external systems and adversaries including programs and access to data by users. In another implementation the account authority service may also consider whether both the user credentials and device credentials have been authenticated and if not the account authority service may withhold the security token. This withholding may be performed in accordance with the network service s security policy or dictated by the account authority service itself.

If the user device receives the security token it forwards the security token to the e commerce server which evaluates the security token before allowing the user access under a determined level of privilege. If the user is allowed access to the e commerce server communications between the user device and the e commerce server may ensue under the terms of the server s security policy and the user s privilege level.

Multiple factor authentication e.g. two factor authentication can provide stronger security over single factor authentication. In one implementation the multiple factors may include user credentials plus trusted device credentials although other combinations of factors may be employed in multiple factor authentication. Multiple factor authentication tends to be stronger because a user s name and password alone can be easily phished or stolen but the physical trusted device that the user employs to access the account network resource is more difficult for a malicious user to obtain and operate. Furthermore different security decisions can be made depending on whether the trusted device factor is authenticated in addition to the user factor. For example a security policy may notify the user if an attempt is made to login from a non registered device require that changes to a user s password be made only through a trusted device set a security token with a shorter expiration if the trusted device factor is not authenticated etc.

In one implementation the e commerce server may offer a user different privilege levels depending on whether the trusted device factor is authenticated. For example a user who authenticates with both user credentials and device credentials e.g. as represented by a device certificate may be given additional storage or may experience fewer human interactive prompts HIP or other security prompts than a user who authenticates only with user credentials.

For additional security for the user account the account authority service can block attempts to change the user credentials and or the device credentials if the user is unable to obtain verification of both user credentials and device credentials of a trusted device. Practically this feature can prevent a user with a valid username password from changing user account information through the account authority service if the user is not accessing the account authority service through a trusted device. Alternatively or additionally the user may be notified of an attempt to change the user account information if the user requesting the change was unable to obtained verification of both user credentials and device credentials of a trusted device.

In one implementation client software on the user device generates a device ID and device password device credentials both associated with the user device in a generation operation . The user may also provide a user friendly device name in association with the device ID. The user device collects and sends a username password and device ID password and potentially a user friendly device name to the account authority service in a transmission operation in association with a request to create an account. In response to the request the account authority service creates an account for the user in a creation operation associating the username with the device ID and recording both in the account information stored in a datastore accessible by the account authority service. Both the user password and the device password may also be stored in the account information typically with cryptographic protection.

It should be understood that the username and device ID may be associated under other circumstances as well. For example the user s account may already be created such that the user subsequently provides the device credentials for association in the previously created account. Furthermore the username can be associated with multiple trusted device IDs and those associations can be recorded in the account information.

In a generation operation the user device generates a public private key pair. In a request operation the user device requests a certificate associated with the trusted device. In one implementation the user device sends the user friendly device name and public key to the account authority service. In an alternative implementation the user device could alternatively also send the username password to ensure that the request is initiated by the user from the trusted device with higher security assurance.

In a generation operation the account authority service builds the device ID and public key into a device certificate and then signs the certificate using the account authority service s private key to bind the user device s public key to the device ID. In this manner an entity wishing to confirm that the device ID belongs to the user device can then evaluate the certificate using the account authority service s public key to verify its digital signature.

In one implementation a user can designate multiple devices as trusted . Accordingly each device ID of a trusted device is recorded in the account information in association with the user s username and with the user friendly name. In this manner the user identifies the device he or she wishes to designate as trusted by provided the user friendly device name. When requesting a device certificate the user can provide the user friendly device name so that the account authority service can find and access the user s account and extract the device ID corresponding to the provided user friendly device name. The account authority service then builds the device ID and public key into a device certificate which it signs using its own private key.

The account authority service returns the generated device certificate to the user device in a return operation . The user device receives the device certificate in a receiving operation . The user device can later use the device certificate as evidence that it is the device identified by the device ID.

In the illustrated flow the user requests access to the secure server in a request operation e.g. by navigating a browser to a web page served by the secure server . The secure server device detects that the user has not yet been authenticated for access by the account authority service e.g. the user s access request did not contain a security token for access to the secure server and therefore redirects the user to the account authority service for authentication in a redirection operation .

The account authority service receives the redirected request which includes an identification of the secure server that redirected the request in a receiving operation . A prompting operation at the account authority service prompts the user for credentials. The user device receives the prompt at a receiving operation and submits credentials in a sending operation . The user may submit his or her user credentials e.g. username and password which is typical. In an alternative scenario the user device may also submit a device certificate or device ID and device password thereby providing two factors for authentication.

As a part of the trusted relationship between the account authority service and the secure server the account authority service knows the secure server s security policies. Accordingly when the account authority service receives the credentials from the user device it authenticates them and if the credentials satisfy the secure server s security requirements as determined in a decision operation the account authority service sends a security token to the user device in an operation .

If the user device supplied credentials do not satisfy the security requirements of the secure server the account authority service may prompt the user device for addition credentials. For example if the secure server requires a two factor authentication such as both user and device credentials the account authority server may require the user to authenticate via a trusted device. Alternatively if the device ID factor is not satisfied the secure server may accept alternative second factors such as HIP solutions secret question responses e.g. Mother s maiden name etc.

In other scenarios the authentication granted by the account authority service may be diminished in some way if the required number of factors is not satisfied. For example the account authority service may provide a security token that expires more quickly if no second factor authentication is achieved.

The user device receives the security token in receiving operation and forwards it to the secure server in a sending operation . In a granting operation the secure server interrogates the security token to determine a level of privilege to authorize for the user device based on the authentication performed by the account authority service. In one implementation the secure server interrogates the security token to determine whether both user credentials and device credentials were included in the authentication with the account authority service. If so the secure server can allow a higher level of privilege to the user via the user device. Otherwise the secure server can allow a lower level of privilege to the user or allow not access at all.

In one implementation the user provides user credentials e.g. a username and user password to set up an account although other combinations of information may be employed to set up a user account. Account information is stored in a data repository that is accessible by the account authority service . When a user attempts to log into his or her account the account authority service looks up the user account information and verifies the provided user credentials against those stored in the account information.

Whether provided during account setup or afterward device credentials e.g. a device identifier ID and device password may also be transmitted from the user device to the account authority service and stored as account information in association with user credentials. In one implementation the user specifies that the user device is a trusted device and client software executing on the user device generates a device ID and device password which the user device sends to the account authority service as device credentials. The user may also provide a user friendly device name so that the user and potentially other users can identify the user device in the future.

The user can also designate the user device as accessible by another remote user by publishing device sharing instructions. In one implementation the user sets a sharing parameter in his or her account information identifying the user device as accessible by other users. In another implementation the user may also specify as sharing parameters the remote users with whom he or she wishes to share the device and at what level of privilege. The sharing parameter is associated with the device ID which the account authority service receives from the user device . The account authority service may also add the sharing parameter to a certificate and sign the certificate before returning the certificate back to the user device .

In one implementation the account authority service records the device ID and sharing parameters in the data repository in association with the username to establish a trust relationship between the user and the user device . Through this process the user has declared that the user device is one of his or her trusted devices within the account network affiliated with the account authority service .

In one implementation if the user has set up his or her account with the account authority service so that the user is associated with the device ID of the user device the user can request a device certificate associated with the user device . The user generates a public private key pair and sends the public key to the account authority service along a reference to the device of interest e.g. a user friendly device name the device ID etc. . The public key may be transmitted to the account authority service in combination with the account setup or at some other time thereafter. The account authority service encrypts the device ID using the public key to create the device certificate and sends the device certificate back to the user device . As a result of this transaction the user device possesses trusted evidence e.g. the device certificate that it is device identified by the device ID.

When another remote user attempts to connect with the user device through the remote user device the remote user device requests from the account authority service a list of shareable devices associated with the first user e.g. as identified by the first user s email address gamer tag username etc. . The account authority service looks up the first user s account information determines which of the user s devices are published as shareable and whether the requesting remote user is authorized for sharing the devices. If the remote user is so authorized the account authority service returns a list of shareable devices associated with the first user and available for sharing by the remote user. The remote user can select one of the shareable devices returning the selection to the account authority service . The account authority service then extracts the selected device s device ID from the user s account information and returns the device ID of the selected device to the remote user device . The information returned to the remote user device may include the public key and IP address of the user device .

Having obtained the device ID of a selected shareable device from the trusted account authority service the remote user device can connect to the user device . In one implementation the connection is achieved through standard networking protocols such as TCP IP with the IP address for the user device . When the remote user device achieves connection to the user device it requests the device certificate from the user device and verifies the signature made by the account authority service . In this manner the remote user device can obtain the public key of the user device . It may also obtain the public key of the user device from the account authority service . 

The remote user device also requests that the user device provide that it knows the private key that matches to the public key of the user device . Methods of providing may be accomplished through standard protocols such as SSL but other methods may also be employed. In one implementation the user device goes through a network challenge and response handshake with the remote user device which results in the user device signing and or encrypting some data with its private key. The remote user device can then verify the data using the public key of the user device . By verifying that the user device truly possesses the private key the remote user device has confirmed that it has connected to the device to which it intended to connect and the devices can safely continue to communicate accordingly. If verification fails the remote user device can break the connection before providing information to or granting access to the wrong device.

In one implementation the user device may also request that the remote user device send its security token received from the account authority service so that the user device can be assured of the identity of the remote user device . The security token can also be a public private key pair in a certificate format and the device would go through a similar process of verifying the signature and obtaining the proof of private key possession by the remote user device .

The remote user can review the shareable device list and select the device of interest in a selection operation . In a sending operation the remote user device returns the selection of the shareable device to the account authority service. The account authority service accesses the account information of the other user to extract the device ID for the selected device in an extraction operation and returns it to the remote user device in a sending operation . The remote user device receives the device ID in a receiving operation .

The remote user device connects to the selected device in a connection operation . As previously described this connection may be obtained through standard networking protocols such as TCP IP although other methods may be employed. The shareable user device accepts the connection in a connection operation that also proves the possession of the user device s private key. The remote user device receives the claim of the possession of the private key e.g. a device certificate and confirms that the user device s private key was used in the claim of the possession of the private key. This validation mechanism may be implemented based on a private public key pair e.g. via SSL . The remote user device may also confirm the account authority s signature on the device certificate.

If the remote user device is able to confirm the identity of the shareable user device via the device ID the remote user device is assured that the device to which it is connected is the device it selected from the list of shareable devices. As such the remote user device and the shareable user device can interaction in operations and . If the remote user device cannot confirm the identity of the shareable user device as the device with which it intended to connect it can terminate the connection to reduce the chance of a security breach.

The example hardware and operating environment of for implementing the invention includes a computing device such as general purpose computing device in the form of a gaming console or computer a mobile telephone a personal data assistant PDA a set top box or other type of computing device. In the implementation of for example the computer includes a processing unit a system memory and a system bus that operatively couples various system components including the system memory to the processing unit . There may be only one or there may be more than one processing unit such that the processor of computer comprises a single central processing unit CPU or a plurality of processing units commonly referred to as a parallel processing environment. The computer may be a conventional computer a distributed computer or any other type of computer the invention is not so limited.

The system bus may be any of several types of bus structures including a memory bus or memory controller a peripheral bus a switched fabric point to point connections and a local bus using any of a variety of bus architectures. The system memory may also be referred to as simply the memory and includes read only memory ROM and random access memory RAM . A basic input output system BIOS containing the basic routines that help to transfer information between elements within the computer such as during start up is stored in ROM . The computer further includes a hard disk drive for reading from and writing to a hard disk not shown a magnetic disk drive for reading from or writing to a removable magnetic disk and an optical disk drive for reading from or writing to a removable optical disk such as a CD ROM or other optical media.

The hard disk drive magnetic disk drive and optical disk drive are connected to the system bus by a hard disk drive interface a magnetic disk drive interface and an optical disk drive interface respectively. The drives and their associated computer readable media provide nonvolatile storage of computer readable instructions data structures program modules and other data for the computer . It should be appreciated by those skilled in the art that any type of computer readable media which can store data that is accessible by a computer such as magnetic cassettes flash memory cards digital video disks random access memories RAMs read only memories ROMs and the like may be used in the example operating environment.

A number of program modules may be stored on the hard disk magnetic disk optical disk ROM or RAM including an operating system one or more application programs other program modules and program data . A user may enter commands and information into the personal computer through input devices such as a keyboard and pointing device . Other input devices not shown may include a microphone joystick game pad satellite dish scanner or the like. These and other input devices are often connected to the processing unit through a serial port interface that is coupled to the system bus but may be connected by other interfaces such as a parallel port game port or a universal serial bus USB . A monitor or other type of display device is also connected to the system bus via a display interface such as a video adapter . In addition to the monitor computers typically include other peripheral output devices not shown such as speakers and printers.

The computer may operate in a networked environment using logical connections to one or more remote computers such as remote computer . These logical connections are achieved by a communication device coupled to or a part of the computer the invention is not limited to a particular type of communications device. The remote computer may be another computer a server a router a network PC a client a peer device or other common network node and typically includes many or all of the elements described above relative to the computer although only a memory storage device has been illustrated in . The logical connections depicted in include a local area network LAN and a wide area network WAN . Such networking environments are commonplace in office networks enterprise wide computer networks intranets and the Internet which are all types of networks.

When used in a LAN networking environment the computer is connected to the local network through a network interface or adapter which is one type of communications device. When used in a WAN networking environment the computer typically includes a modem a network adapter a type of communications device or any other type of communications device for establishing communications over the wide area network . The modem which may be internal or external is connected to the system bus via the serial port interface . In a networked environment program modules depicted relative to the personal computer or portions thereof may be stored in the remote memory storage device. It is appreciated that the network connections shown are example and other means of and communications devices for establishing a communications link between the computers may be used.

In an example implementation an account authority service module and other modules may be embodied by instructions stored in memory and or storage devices or and processed by the processing unit . A usernames passwords device identifiers certificates security tokens and other data may be stored in memory and or storage devices or as persistent datastores.

The technology described herein is implemented as logical operations and or modules in one or more systems. The logical operations may be implemented as a sequence of processor implemented steps executing in one or more computer systems and as interconnected machine or circuit modules within one or more computer systems. Likewise the descriptions of various component modules may be provided in terms of operations executed or effected by the modules. The resulting implementation is a matter of choice dependent on the performance requirements of the underlying system implementing the described technology. Accordingly the logical operations making up the embodiments of the technology described herein are referred to variously as operations steps objects or modules. Furthermore it should be understood that logical operations may be performed in any order unless explicitly claimed otherwise or a specific order is inherently necessitated by the claim language.

The above specification examples and data provide a complete description of the structure and use of example embodiments of the invention. Although various embodiments of the invention have been described above with a certain degree of particularity or with reference to one or more individual embodiments those skilled in the art could make numerous alterations to the disclosed embodiments without departing from the spirit or scope of this invention. In particular it should be understood that the described technology may be employed independent of a personal computer. Other embodiments are therefore contemplated. It is intended that all matter contained in the above description and shown in the accompanying drawings shall be interpreted as illustrative only of particular embodiments and not limiting. Changes in detail or structure may be made without departing from the basic elements of the invention as defined in the following claims.

Although the subject matter has been described in language specific to structural features and or methodological arts it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather the specific features and acts described above are disclosed as example forms of implementing the claimed subject matter.

