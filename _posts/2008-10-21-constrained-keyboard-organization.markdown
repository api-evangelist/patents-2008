---

title: Constrained keyboard organization
abstract: The subject matter of this specification can be embodied in, among other things, a method for generating a keypad layout. The method may include determining a frequency distribution of characters for a text sample and generating character groupings using the frequency distribution. The method may further comprise assigning the character groupings to keys on the keypad so that characters that appear most frequently in the text sample can be selected with a single keystroke.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08462123&OS=08462123&RS=08462123
owner: Google Inc.
number: 08462123
owner_city: Mountain View
owner_country: US
publication_date: 20081021
---
As computer processors have decreased in size and expense mobile computing devices such as cellular telephones and personal digital assistants PDAs have become increasingly widespread. Designed to be portable mobile computing devices are lightweight and generally small enough to fit comfortably in a pocket or handbag. However the portability of mobile computing devices comes at a price mobile devices often have small keypads that have several characters mapped to each key. These compact keypads can require entry techniques such as multi tap data entry whereby a user presses a key a number of times that relates to the position of a character on a key. For example if a key lists the letters A B and C the user will tap the key twice to enter a B and three times to enter a C. 

In general this document describes techniques for generating keypad layouts and layouts resulting from such techniques. In general the techniques described here seek to group letters of keypad keys whatever the number of keys on the keypad so as to provide simplified data entry on the keypad. For example letters may be arranged or grouped so that frequently used letters appear first on a key or alone on a key. In this manner a user will not have to press such keys very many times to enter letters in a multi tap or similar implementation and their data entry can be sped up as a result. Also in situations that involve disambiguation of input that is ambiguous because some keys can have more than one value appropriate assignment of characters to keys using the techniques described here can reduce the level of ambiguity for a group of strokes e.g. by placing commonly used characters alone on a key or in smaller groups and thereby improve the accuracy of a disambiguation scheme.

In one implementation a method for generating a keypad layout is disclosed. The method may include determining a frequency distribution of characters for a text sample and generating character groupings using the frequency distribution. The method may further comprise assigning the character groupings to keys on the keypad so that characters that appear most frequently in the text sample can be selected with a single keystroke.

In certain aspects the method may further comprise selecting the text sample from samples that are representative of text produced by members of a target group. The method may also further comprise generating character groupings by arranging the characters according to a predetermined sequence and grouping adjacent characters in the sequence such that each character grouping contains at least one character that frequently appears in the text sample. In addition generating character groupings may further comprise selecting a keypad layout that determines the predetermined sequence of the characters.

In an alternative implementation a keypad can be organized to reduce the effective keypad index EKI of the keypad. The keypad may comprise a plurality of keys in the keypad each key having one or more characters visually mapped onto it. The keypad may have fewer keys than characters mapped onto the keys and be arranged such that characters having highest frequencies within a representative sample of text can be selected with one keystroke. The keypad may include a Space Return key. Characters may be mapped onto keypad keys so that more than 83 of the characters across a text sample appear as a first character on a key.

The systems and techniques described here may provide one or more of the following advantages. First a system can permit a user to enter character information more quickly and more accurately using a constrained keypad. Such data entry may also be provided on a relatively small device. In addition the techniques may in certain circumstances be implemented in software so as to permit different keypad arrangements depending on a user s or designer s preferences. For example keypads having different numbers of keys may be employed and the order of characters may change from keypad to keypad e.g. using QWERTY or alphabetical arrangements . Such techniques may thus improve the user experience for a device such as a smart phone and may cause a user to access services that require character based data entry more often.

The details of one or more embodiments are set forth in the accompanying drawings and the description below. Other features and advantages will be apparent from the description and drawings and from the claims.

This document describes systems and techniques for designing keypads and keypad layouts. In general a sample text representative of a target population is selected. For example if the target population is English speaking 20 35 year old cellular telephone users the representative text may consist of text messages sent by adults within that demographic group. Broader demographic groups may also be used such as all users of certain computing applications. Next a frequency distribution of the letters in the sample text is created. In an illustrative example text messages can be analyzed to determine how often each letter occurs in a group of text messages that may represent the target population. Subsequently the letters can be arranged in alphabetical or other order and grouped using the frequency distribution to minimize an Effective Keystroke Index EKI of the keypad. The EKI represents the average number of keystrokes used to enter in letters from a sample of text. Finally each character group can be associated with a key on the keypad.

The keypad displayed on the touch screen of the exemplary cellular telephone does not have enough letter input keys to map each of the 26 letters of the English alphabet to a single key. In the illustrative example multiple characters are mapped to the individual keys so that more than one key stroke may be needed to select certain characters. For instance as discussed above the letter A is the first letter mapped to the AB key and as such a single key press inputs the letter A. That is the letter A is in the primary position associated with that key. To input a secondary character such as the letter B a user may need to tap the AB key twice within a specified interval e.g. one or two seconds or in some cases concurrently press another key while pressing the AB key. Tertiary characters and beyond may require similar but in some circumstances more complex keypad manipulations.

To reduce the number of keystrokes used to input the most commonly used letters and thereby increase the efficiency of the keypad the illustrative keypad has been organized according to a frequency distribution of the characters. For example certain letters of the English alphabet are used more often than others. The exemplary techniques described here exploit this imbalance by mapping letters to a keypad in a manner that allows some of the most frequently used letters to be selected with a single touch of the keypad . In this example a representative text corpus such as a series of books magazines e mails etc. can be selected so as serve as a basis for determining a representative character distribution. Subsequently a frequency distribution of the characters in the text corpus can be created. Using the frequency distribution the characters can be grouped to allow some of the more frequently used characters to be entered with a single keystroke.

Consider the exemplary keypad . As discussed in more detail below by some measures the first letter mapped to each key will constitute on average over 80 percent of the letters used in a representative English language text sample. Because some of the most frequently used letters in the illustrative example A C E F H I L N O R S T U W and Y can be input with a single key stroke because they have been placed first on their respective keys the number of key strokes necessary on average to create a English language message can be reduced.

Closer inspection of keypad shows that certain very common letters E H N R S and T occupy their own keys. Less common letters such as J K P and Q may share a key. Also certain keys may be function keys such as a caps lock key or keys for entering non alphanumeric characters. For example the illustrative telephone includes a Space Return key . The Space Return key in some implementations can combine the functions of the Space and Return keys. For instance pressing the Space Return key once may result in a single space appearing in the display area . Two presses of the Space Return key within a specified interval e.g. one or two seconds can result in a carriage return in the display area . Pressing and holding the Space Return key may result in repeated spaces appearing the display area until the key is released. The illustrative Space Return key may save space in the keypad design which can free up space for other keys. For example combining the Return and Space keys may allow a keypad to designer to create bigger keys or add more keys to a keypad than might otherwise be possible.

Although specific alphanumeric and QWERTY keyboard layouts are shown in other layouts may be used. For example the cellular phone could include a QWERTY keypad with 20 keys 15 of which can be used to input letters and the remaining 5 serving various functions such as deleting input characters. It should be noted that other keypad layouts e.g. QWERTZ AZERTY Dvorak Colemak user defined etc. may be used and that the number and size of the keys on the keypads may differ from those shown. Also it should be appreciated that where the keypad is generated on a screen the layout for the keypad can be readily changed. Thus for example the keypad may be customized for particular needs of a user or group of users. As one example employees within a single organization may have a particular manner of writing e.g. the use of certain acronyms in the military and a more particular manner when they are using a particular computing application such as e mail. As a result the e mails of a single user or of a group of users may be analyzed so as to determine a frequency distribution of letter usage in the particular context. Other corpuses of documents may also be selected as a training group for determining an exact or approximate character distribution so as to determine how to assign letters to keys. A device may then be readily programmed to display the characters in the appropriate manner. Also a particular user may be given the opportunity to select whether they would like an alphabetic QWERTY or other layout and may also be permitted to adjust the grouping of letters where the provided grouping is confusing to them. For example a user may be permitted to pan through images of a variety of keypad layouts and the user may select a particular one for their layout. The user may also be shown the efficiency of each keypad for a particular training set of documents as they pan.

Also physical keypads may be used as illustrated in . Such keypads may be laid out in advance by a designer of the device e.g. according to character distributions in ordinary text across a large population and sample size or may be laid out by a user such as by affixing letters to particular keys.

The exemplary frequency distribution table contains one row for each of the 26 letters of the English alphabet. In the columns the frequency of each letter is illustrated for one of five languages English French German Spanish and Italian. It will be noted that the frequency distribution of letters is relatively consistent across the languages shown here. The frequency distribution for the languages shown in the table came from the following sources with the associated language shown in parentheses 

The frequency distribution for an alphabet can be calculated by counting the number of times each letter appears in a representative text sample and dividing that number by the total number of letters present in the text sample. For example consider the following sentence from A Tale of Two Cities 

In the illustrative example the sample text was a single sentence thus the resulting frequency distribution may not accurately reflect the average usage of letters in the English alphabet. To increase the accuracy of the frequency distribution the size of the text corpus may be increased and texts representative of a target population may be selected. For example if the relevant population is English speaking journalists the text corpus may include English dictionaries and a large randomly selected set of newspaper and magazine articles.

In an illustrative implementation using the exemplary frequency distribution table in the frequency of each letter in the English alphabet can be determined. For example the letter O occurs approximately 7.5 percent of the time. Subsequently the number of keystrokes used to enter a character for a given keypad can be determined from the keystroke table in . Continuing the current example three keystrokes are used to enter an O on an illustrative alphanumeric keypad with eight letter input keys. Thus the keystroke frequency for the letter O for the illustrative keypad is approximately 0.23 in an English language text. When the keystroke frequencies for the remaining letters are calculated and subsequently summed the result is the EKI for the keypad. Here the EKI for the illustrative alphanumeric keypad with 8 letter input keys is 2.15. A lower EKI is generally considered better because a sample of text may be entered on the keypad using fewer numbers of keystrokes.

One such component is a display manager which may be responsible for rendering content for presentation on display . The display manager may receive graphic related content from a number of sources and may determine how the content is to be provided to a user. For example a number of different windows for various applications on the device may need to be displayed and the display manager may determine which to display which to hide and what to display or hide when there is overlap between various graphical objects. The display manager may also in appropriate circumstances such as when the device calls for text entry form a user provide for the display of a keypad over or next to other elements on display .

An input manager may be responsible for translating commands provided by a user of device . For example such commands may come from a keyboard whether physical or virtual on display from touch screen display from a trackball or from other such sources including dedicated buttons or soft buttons e.g. buttons whose functions may change over time and whose functions may be displayed on areas of display that are adjacent to the particular buttons . The input manager may determine for example in what area of the display commands are being received and thus in what application being shown on the display the commands are intended for. In addition it may interpret input motions on the touch screen into a common format and pass those interpreted motions e.g. short press long press multiple press and straight line drags to the appropriate application. The input manager may also report such inputs to an event manager not shown that in turn reports them to the appropriate modules or applications.

The device can contain a character frequency analyzer that can create a frequency distribution by determining how frequently characters appear in a selected text corpus. For example the frequency analyzer may count the number of times a character or symbol appears in a selected text corpus such as an e mail outbox of a user of device . Then the analyzer can divide the resulting number by the total number of characters in the text corpus. In some implementations a user may input a frequency for each character in the alphabet or input a frequency distribution for a given text sample. The frequency distribution may also be transmitted over a network or retrieved from memory. The resulting frequency distribution can be stored in frequency distribution storage .

The device also can contain a character assignment module that can assign individual characters or character groupings to a key on a keypad. In some implementations the assignment module may assign several of the most frequently used letters such that a single keystroke can input the letters. For example consider the cumulative frequency distribution table in and the illustrative 20 key alphanumeric keypad in . The module may assign the 15 most frequently used letters in table E T A O I N S H R D L C U W and F to the 15 available letter input keys on the 20 key keypad . The module can group the remaining letters such that a user can access many of the 15 most frequently used letters with a single keystroke while limiting the number of groupings that contain more than a predetermined number of letters e.g. the module may limit the groupings such that no group contains more than three letters.

Although the character frequency analyzer frequency distribution storage and character assignment module are shown in this example as residing on a device to which the results of those components analysis is to be applied the components may also be stored separately from the device . For example a standard server or desktop computer may be used to compute the distribution of characters whether alphabetic numeric or symbolic in a sample may make a determination of a proper layout of characters on a keypad and may transmit to device information that may be used by device to generate such a keypad.

A variety of applications may operate generally on a common microprocessor on the device . The applications may take a variety of forms such as mapping applications e mail and other messaging applications web browser applications and various applications running within a web browser or running extensions of a web browser. Applications that require textual input may provide a signal to an operating system on device such as to an event manager when they would like to receive such input and a keypad such as the keypads shown above may be generated on display . Where the device is slid open so as to expose a physical keypad the display of a virtual keypad may be bypassed by the system .

A wireless interface manages communication with a wireless network which may be a data network that also carries voice communications. The wireless interface may provide for communication by the device with messaging service such as text messaging e mail and telephone voice mail messaging. In addition the wireless interface may support downloads and uploads of content and computer code over a wireless network.

Various forms of persistent storage may be provided such as using fixed disk drives and or solid state memory devices. Two examples are shown here. First keyboard layout storage includes data representing one or more keyboard types that may be displayed on the display . In some implementations the layouts may be alphanumeric QWERTY QWERTZ AZERTY Dvorak Colemak user defined etc.

Other storage includes a frequency distribution storage and user profile storage both of which may be stored on the same media as the keyboard layout storage . The frequency distribution storage can contain frequency distributions determined by the character frequency analyzer . The user profile storage includes various parameters about a user of the device . In the example relevant here the user profile may include among other things keyboard usage statistics stored keyboard layout preferences the speed for a double press by the user the speed with which trackball movements are to result in on screen movements of a pointer particular actions that are to be achieved by multi touch input and other such factors.

At step of process a target population is defined. A target population can be a group of people that share a trait that relates to the way members of the group communicate. For example group members may share a common language or mode of communication e.g. email text message instant message etc. Other examples of traits that might define a target population include age community e.g. an Internet community such as a social network or means of communication e.g. a particular type of cellular phone or PDA . In some implementations the group may be defined using traits that are not related to communication e.g. the group may be defined by a geographic area type of employment or employer.

After a target population has been defined the method proceeds to step where a text corpus is selected for the target population. For instance if the target group is defined by its use of text messages the relevant text corpus may include a collection of text messages sent and received by members of the group. If the target group shares a common language the relevant text corpus might be a dictionary. In some implementations the text corpus may include a large number of randomly selected text samples from the target population this approach may increase the reliability of the resulting frequency distribution.

Once a text corpus has been selected a frequency distribution is compiled at step . In some implementations a frequency distribution may be compiled by counting the number of times each character appears in the representative text corpus and dividing that number by the total number of characters in the text corpus. For keyboard layouts that separate letters from numbers and symbols e.g. punctuation marks it may be necessary to separate the corpus into related groups e.g. letters in one group and numbers and symbols in a separate group and then compile a frequency distribution for each group.

Finally after the frequency distribution is compiled at step the keypad may be optimized using the compiled frequency distribution at step . For example consider a text corpus consisting of English language text. In some implementations the letters can be arranged in a predetermined order and then subsequently grouped using the frequency distribution calculated at step . Afterwards the character grouping can be mapped to the keypad. The process of optimizing a keypad using a frequency distribution is described in detail in reference to .

After the letters have been arranged at step the letters can be grouped using a frequency distribution at step . In some implementations the letters may be grouped such that the letters in the primary position in each grouping i.e. the letters that can be input with a single keystroke are the letters with the highest frequency. For example consider the exemplary keypad . Although keypad contains 20 keys in the illustrative example only 15 keys are used to input letters. In the illustrative implementation the 15 most frequently used letters in FIG. B A C D E H I L M N O R S T U and W can be used to initially group the remaining 11 letters in the alphabet such that these 15 letters are the first letters in the resulting groupings. For example the initially groupings might include AB C D EFG H IJK L M N OPQ R S T UV WXYZ. 

In some implementations the initial grouping may be adjusted at step . In some circumstances additional considerations may affect the grouping of the characters. For example characters may be grouped with two considerations in mind 1 mapping some of the most frequently used characters to primary positions on the keypad i.e. lowering the EKI of the keypad and 2 minimizing the number of keys that have an unwieldy number of letters mapped to the key. For instance the illustrative grouping described in the preceding paragraph results in four letters WXYZ being mapped to one key. A keypad designer can subsequently rearrange the groupings to reduce the number of letters mapped to each key while still assigning many of the most frequently used letters to a primary position on the keypad. For example a keypad designer may map two frequently used letters to a single key to reduce the number of letters mapped to other keys. For example keypad has the letters C and D mapped to a single key and L and M mapped to another key. This allows the designer to split the WXYZ grouping in two and assign F another frequently used key to a primary position on the keypad while ensuring that no key has more than three letters mapped to it. At step the groupings may be assigned to keys. For example the groups may be assigned to the keys in an order determined by the desired keyboard layout. For instance the order may be determined by the sequence of letters in a QWERTY or user defined keyboard layout or the order may be alphabetical among many other possible orders. In the example depicted in the resulting alphanumeric keypad has several of the most frequently used letters as shown in table in mapped to the primary position on a key and no key has more than three letters mapped to a key.

After the text has been collected a frequency distribution for the collected text may be computed at step . In some implementations the number of times each letter appears in the collected text may be counted. Subsequently the resulting number can be divided by the total number of letters in the collected text to determine how often that letter appears in the collected text. This process counting the number of times a letter appears in the collected text and dividing that number by the total number of letters in the text can be repeated for each letter in the alphabet to produce a frequency distribution for the letters.

Subsequently a keypad type selection can be received at step . In some implementations a user may select one of a plurality of different keyboard layouts including alphanumeric QWERTY QWERTZ AZERTY Dvorak Colemak etc. For example using the device s graphical user interface the user may select one the previously mentioned keyboard layouts from a menu system.

In some implementations a user may create and select a custom keypad. For example the user may designate the number of keys that form the keypad using the graphical user interface. In the illustrative example the user may enter the desired number of keys into a dialog box presented by the graphical user interface. In other implementations the user may designate a number of keys within predetermined thresholds e.g. 10 to 30 keys. The user may also specify the desired number of keys by selecting the number of rows and columns of the keypad that the user desires.

In addition in some implementations a user can arrange the order and grouping of letters and symbols on the keys. For example the user can shift a grouping of letters from one key to another transpose rows or columns or add an extra row of keys and populate the keys with their choice of punctuation symbols and characters.

In addition to choosing a keypad layout in some implementations the user may select the size of the keys or the number of keys on a keypad. For example the user may be presented with a menu that allows the user to choose between a standard keyboard e.g. a keyboard with 21 letter keys and a keyboard with larger keys e.g. a keyboard with 15 letter keys .

After receiving a keypad type selection the characters may be grouped using the frequency distribution at step . Subsequently the groups may be assigned to keys at step . Steps and are described in detail in reference to steps in .

Referring now to the exterior appearance of an exemplary device that implements the features described here is illustrated. Briefly and among other things the device includes a processor configured to display notifications regarding events on the device and to permit a user to conveniently pull down detail about the events relating to the notifications into an extended view of the events.

In more detail the hardware environment of the device includes a display for displaying text images and video to a user a keyboard for entering text data and user commands into the device a pointing device for pointing selecting and adjusting objects displayed on the display an antenna a network connection a camera a microphone and a speaker . Although the device shows an external antenna the device can include an internal antenna which is not visible to the user.

The display can display video graphics images and text that make up the user interface for the software applications used by the device and the operating system programs used to operate the device . Among the possible elements that may be displayed on the display are a new mail indicator that alerts a user to the presence of a new message an active call indicator that indicates that a telephone call is being received placed or is occurring a data standard indicator that indicates the data standard currently being used by the device to transmit and receive data a signal strength indicator that indicates a measurement of the strength of a signal received by via the antenna such as by using signal strength bars a battery life indicator that indicates a measurement of the remaining battery life or a clock that outputs the current time.

The display may also show application icons representing various applications available to the user such as a web browser application icon a phone application icon a search application icon a contacts application icon a mapping application icon an email application icon or other application icons. In one example implementation the display is a quarter video graphics array QVGA thin film transistor TFT liquid crystal display LCD capable of 16 bit or better color.

A user uses the keyboard or keypad to enter commands and data to operate and control the operating system and applications that provide for responding to notification of alerts and responding to messages and the like and also to a touch screen . The illustrative keyboard was designed using the techniques described above. The keyboard includes buttons or keys associated with alphanumeric characters where more than one character is mapped to some of the keys. For example keys such as keys and are associated with the alphanumeric characters AB and CD. A single press of key will input in A two presses within a specified time will input a B. Inputting C and D using key occurs in a similar fashion. A key may also be associated with one or more special characters or functions including unlabeled functions based upon the state of the operating system or applications invoked by the operating system. For example the Space Return key can as described above be used to enter either a space or a carriage return.

In addition to keys traditionally associated with an alphanumeric keypad the keyboard also includes other special function keys such as an establish call key that causes a received call to be answered or a new call to be originated a terminate call key that causes the termination of an active call a drop down menu key that causes a menu to appear within the display a backward navigation key that causes a previously accessed network address to be accessed again a favorites key that causes an active web page to be placed in a bookmarks folder of favorite sites or causes a bookmarks folder to appear a home page key that causes an application invoked on the device to navigate to a predetermined network address or other keys that provide for multiple way navigation application selection and power and volume control.

The user uses the pointing device to select and adjust graphics and text objects displayed on the display as part of the interaction with and control of the device and the applications invoked on the device . The pointing device is any appropriate type of pointing device and may be a joystick a trackball a touch pad a camera a voice input device a touch screen device implemented in combination with the display or any other input device.

The antenna which can be an external antenna or an internal antenna is a directional or omni directional antenna used for the transmission and reception of radiofrequency RF signals that implement point to point radio communication wireless local area network LAN communication or location determination. The antenna may facilitate point to point radio communication using the Specialized Mobile Radio SMR cellular or Personal Communication Service PCS frequency bands and may implement the transmission of data using any number or data standards. For example the antenna may allow data to be transmitted between the device and a base station using technologies such as Wireless Broadband WiBro Worldwide Interoperability for Microwave ACCess WiMAX 5GPP Long Term Evolution LTE Ultra Mobile Broadband UMB High Performance Radio Metropolitan Network HIPERMAN iBurst or High Capacity Spatial Division Multiple Access HC SDMA High Speed OFDM Packet Access HSOPA High Speed Packet Access HSPA HSPA Evolution HSPA High Speed Upload Packet Access HSUPA High Speed Downlink Packet Access HSDPA Generic Access Network GAN Time Division Synchronous Code Division Multiple Access TD SCDMA Evolution Data Optimized or Evolution Data Only EVDO Time Division Code Division Multiple Access TD CDMA Freedom Of Mobile Multimedia Access FOMA Universal Mobile Telecommunications System UMTS Wideband Code Division Multiple Access W CDMA Enhanced Data rates for GSM Evolution EDGE Enhanced GPRS EGPRS Code Division Multiple Access 2000 CDMA2000 Wideband Integrated Dispatch Enhanced Network WiDEN High Speed Circuit Switched Data HSCSD General Packet Radio Service GPRS Personal Handy Phone System PHS Circuit Switched Data CSD Personal Digital Cellular PDC CDMAone Digital Advanced Mobile Phone System D AMPS Integrated Digital Enhanced Network IDEN Global System for Mobile communications GSM DataTAC Mobitex Cellular Digital Packet Data CDPD Hicap Advanced Mobile Phone System AMPS Nordic Mobile Phone NMP Autoradiopuhelin ARP Autotel or Public Automated Land Mobile PALM Mobiltelefonisystem D MTD Offentlig Landmobil Telefoni OLT Advanced Mobile Telephone System AMTS Improved Mobile Telephone Service IMTS Mobile Telephone System MTS Push To Talk PTT or other technologies. Communication via W CDMA HSUPA GSM GPRS and EDGE networks may occur for example using a QUALCOMM MSM7200A chipset with an QUALCOMM RTR6285 transceiver and PM7540 power management circuit.

The wireless or wired computer network connection may be a modem connection a local area network LAN connection including the Ethernet or a broadband wide area network WAN connection such as a digital subscriber line DSL cable high speed internet connection dial up connection T 1 line T 3 line fiber optic connection or satellite connection. The network connection may connect to a LAN network a corporate or government WAN network the Internet a telephone network or other network. The network connection uses a wired or wireless connector. Example wireless connectors include for example an INFRARED DATA ASSOCIATION IrDA wireless connector a Wi Fi wireless connector an optical wireless connector an INSTITUTE OF ELECTRICAL AND ELECTRONICS ENGINEERS IEEE Standard 802.11 wireless connector a BLUETOOTH wireless connector such as a BLUETOOTH version 1.2 or 5.0 connector a near field communications NFC connector an orthogonal frequency division multiplexing OFDM ultra wide band UWB wireless connector a time modulated ultra wide band TM UWB wireless connector or other wireless connector. Example wired connectors include for example a IEEE 1394 FIREWIRE connector a Universal Serial Bus USB connector including a mini B USB interface connector a serial port connector a parallel port connector or other wired connector. In another implementation the functions of the network connection and the antenna are integrated into a single component.

The camera allows the device to capture digital images and may be a scanner a digital still camera a digital video camera other digital input device. In one example implementation the camera is a 5 mega pixel MP camera that utilizes a complementary metal oxide semiconductor CMOS .

The microphone allows the device to capture sound and may be an omni directional microphone a unidirectional microphone a bi directional microphone a shotgun microphone or other type of apparatus that converts sound to an electrical signal. The microphone may be used to capture sound generated by a user for example when the user is speaking to another user during a telephone call via the device . Conversely the speaker allows the device to convert an electrical signal into sound such as a voice from another user generated by a telephone application program or a ring tone generated from a ring tone application program. Furthermore although the device is illustrated in as a handheld device in further implementations the device may be a laptop a workstation a midrange computer a mainframe an embedded system telephone desktop PC a tablet computer a PDA or other type of computing device.

The CPU can be one of a number of computer processors. In one arrangement the computer CPU is more than one processing unit. The RAM interfaces with the computer bus so as to provide quick RAM storage to the CPU during the execution of software programs such as the operating system application programs and device drivers. More specifically the CPU loads computer executable process steps from the storage medium or other media into a field of the RAM in order to execute software programs. Data is stored in the RAM where the data is accessed by the computer CPU during execution. In one example configuration the device includes at least 128 MB of RAM and 256 MB of flash memory.

The storage medium itself may include a number of physical drive units such as a redundant array of independent disks RAID a floppy disk drive a flash memory a USB flash drive an external hard disk drive thumb drive pen drive key drive a High Density Digital Versatile Disc HD DVD optical disc drive an internal hard disk drive a Blu Ray optical disc drive or a Holographic Digital Data Storage HDDS optical disc drive an external mini dual in line memory module DIMM synchronous dynamic random access memory SDRAM or an external micro DIMM SDRAM. Such computer readable storage media allow the device to access computer executable process steps application programs and the like stored on removable and non removable memory media to off load data from the device or to upload data onto the device .

A computer program product is tangibly embodied in storage medium a machine readable storage medium. The computer program product includes instructions that when read by a machine operate to cause a data processing apparatus to store image data in the mobile device. In some embodiments the computer program product includes instructions that generate notifications about alerts such as newly arriving messages on the device.

The operating system may be a LINUX based operating system such as the GOOGLE mobile device platform APPLE MAC OS X MICROSOFT WINDOWS NT WINDOWS 2000 WINDOWS XP WINDOWS MOBILE a variety of UNIX flavored operating systems or a proprietary operating system for computers or embedded systems. The application development platform or framework for the operating system may be BINARY RUNTIME ENVIRONMENT FOR WIRELESS BREW JAVA Platform Micro Edition JAVA ME or JAVA 2 Platform Micro Edition J2ME using the SUN MICROSYSTEMS JAVASCRIPT programming language PYTHON FLASH LITE or MICROSOFT .NET Compact or another appropriate environment.

The device stores computer executable code for the operating system and the application programs such as an email instant messaging a video service application a mapping application word processing spreadsheet presentation gaming mapping web browsing JAVASCRIPT engine or other applications. For example one implementation may allow a user to access the GOOGLE GMAIL email application the GOOGLE TALK instant messaging application a YOUTUBE video service application a GOOGLE MAPS or GOOGLE EARTH mapping application or a GOOGLE PICASA imaging editing and presentation application. The application programs may also include a widget or gadget engine such as a TAFRI widget engine a MICROSOFT gadget engine such as the WINDOWS SIDEBAR gadget engine or the KAPSULES gadget engine a YAHOO widget engine such as the KONFABULTOR widget engine the APPLE DASHBOARD widget engine the GOOGLE gadget engine the KLIPFOLIO widget engine an OPERA widget engine the WIDSETS widget engine a proprietary widget or gadget engine or other widget or gadget engine the provides host system software for a physically inspired applet on a desktop.

Although it is possible to provide for notifications and interactions with messages and other events using the above described implementation it is also possible to implement the functions according to the present disclosure as a dynamic link library DLL or as a plug in to other application programs such as an Internet web browser such as the FOXFIRE web browser the APPLE SAFARI web browser or the MICROSOFT INTERNET EXPLORER web browser.

The navigation module may determine an absolute or relative position of the device such as by using the Global Positioning System GPS signals the GLObal NAvigation Satellite System GLONASS the Galileo positioning system the Beidou Satellite Navigation and Positioning System an inertial navigation system a dead reckoning system or by accessing address internet protocol IP address or location information in a database. The navigation module may also be used to measure angular displacement orientation or velocity of the device such as by using one or more accelerometers.

The operating system can generally be organized into six components a kernel libraries an operating system runtime application libraries system services and applications . The kernel includes a display driver that allows software such as the operating system and the application programs to interact with the display via the display interface a camera driver that allows the software to interact with the camera a BLUETOOTH driver a M Systems driver a binder IPC driver a USB driver a keypad driver that allows the software to interact with the keyboard via the keyboard interface a WiFi driver audio drivers that allow the software to interact with the microphone and the speaker via the sound interface and a power management component that allows the software to interact with and manage the power source .

The BLUETOOTH driver which in one implementation is based on the BlueZ BLUETOOTH stack for LINUX based operating systems provides profile support for headsets and hands free devices dial up networking personal area networking PAN or audio streaming such as by Advance Audio Distribution Profile A2DP or Audio Video Remote Control Profile AVRCP . The BLUETOOTH driver provides JAVA bindings for scanning pairing and unpairing and service queries.

The libraries include a media framework that supports standard video audio and still frame formats such as Moving Picture Experts Group MPEG 4 H.264 MPEG 1 Audio Layer 3 MP3 Advanced Audio Coding AAC Adaptive Multi Rate AMR Joint Photographic Experts Group JPEG and others using an efficient JAVA Application Programming Interface API layer a surface manager a simple graphics library SGL for two dimensional application drawing an Open Graphics Library for Embedded Systems OpenGL ES for gaming and three dimensional rendering a C standard library LIBC a LIBWEBCORE library a FreeType library an SSL and an SQLite library .

The operating system runtime includes core JAVA libraries and a Dalvik virtual machine . The Dalvik virtual machine is a custom virtual machine that runs a customized file format .DEX .

The operating system can also include Mobile Information Device Profile MIDP components such as the MIDP JAVA Specification Requests JSRs components MIDP runtime and MIDP applications as shown in . The MIDP components can support MIDP applications running on the device .

With regard to graphics rendering a system wide composer manages surfaces and a frame buffer and handles window transitions using the OpenGL ES and two dimensional hardware accelerators for its compositions.

The Dalvik virtual machine may be used with an embedded environment since it uses runtime memory very efficiently implements a CPU optimized bytecode interpreter and supports multiple virtual machine processes per device. The custom file format DEX is designed for runtime efficiency using a shared constant pool to reduce memory read only structures to improve cross process sharing concise and fixed width instructions to reduce parse time thereby allowing installed applications to be translated into the custom file formal at build time. The associated bytecodes are designed for quick interpretation since register based instead of stack based instructions reduce memory and dispatch overhead since using fixed width instructions simplifies parsing and since the 16 bit code units minimize reads.

The application libraries include a view system a resource manager and content providers . The system services includes a status bar an application launcher a package manager that maintains information for all installed applications a telephony manager that provides an application level JAVA interface to the telephony subsystem a notification manager that allows all applications access to the status bar and on screen notifications a window manager that allows multiple applications with multiple windows to share the display and an activity manager that runs each application in a separate process manages an application life cycle and maintains a cross application history.

The applications include a home application a dialer application a contacts application a browser application and a messaging application .

The telephony manager provides event notifications such as phone state network state Subscriber Identity Module SIM status or voicemail status allows access to state information such as network information SIM information or voicemail presence initiates calls and queries and controls the call state. The browser application renders web pages in a full desktop like manager including navigation functions. Furthermore the browser application allows single column small screen rendering and provides for the embedding of HTML views into other applications.

Some processes can be persistent. For example processes associated with core system components such as the surface manager the window manager or the activity manager can be continuously executed while the device is powered. Additionally some application specific process can also be persistent. For example processes associated with the dialer application may also be persistent.

The processes implemented by the operating system kernel may generally be categorized as system services processes dialer processes browser processes and maps processes . The system services processes include status bar processes associated with the status bar application launcher processes associated with the application launcher package manager processes associated with the package manager activity manager processes associated with the activity manager resource manager processes associated with a resource manager that provides access to graphics localized strings and XML layout descriptions notification manger processes associated with the notification manager window manager processes associated with the window manager core JAVA libraries processes associated with the core JAVA libraries surface manager processes associated with the surface manager Dalvik virtual machine processes associated with the Dalvik virtual machine and LIBC processes associated with the LIBC library .

The dialer processes include dialer application processes associated with the dialer application telephony manager processes associated with the telephony manager core JAVA libraries processes associated with the core JAVA libraries Dalvik virtual machine processes associated with the Dalvik Virtual machine and LIBC processes associated with the LIBC library . The browser processes include browser application processes associated with the browser application core JAVA libraries processes associated with the core JAVA libraries Dalvik virtual machine processes associated with the Dalvik virtual machine LIBWEBCORE processes associated with the LIBWEBCORE library and LIBC processes associated with the LIBC library .

The maps processes include maps application processes core JAVA libraries processes Dalvik virtual machine processes and LIBC processes . Notably some processes such as the Dalvik virtual machine processes may exist within one or more of the systems services processes the dialer processes the browser processes and the maps processes .

Computing device includes a processor memory a storage device a high speed interface connecting to memory and high speed expansion ports and a low speed interface connecting to low speed bus and storage device . Each of the components and are interconnected using various busses and may be mounted on a common motherboard or in other manners as appropriate. The processor can process instructions for execution within the computing device including instructions stored in the memory or on the storage device to display graphical information for a GUI on an external input output device such as display coupled to high speed interface . In other implementations multiple processors and or multiple buses may be used as appropriate along with multiple memories and types of memory. Also multiple computing devices may be connected with each device providing portions of the necessary operations e.g. as a server bank a group of blade servers or a multi processor system .

The memory stores information within the computing device . In one implementation the memory is a volatile memory unit or units. In another implementation the memory is a non volatile memory unit or units. The memory may also be another form of computer readable medium such as a magnetic or optical disk.

The storage device is capable of providing mass storage for the computing device . In one implementation the storage device may be or contain a computer readable medium such as a floppy disk device a hard disk device an optical disk device or a tape device a flash memory or other similar solid state memory device or an array of devices including devices in a storage area network or other configurations. A computer program product can be tangibly embodied in an information carrier. The computer program product may also contain instructions that when executed perform one or more methods such as those described above. The information carrier is a computer or machine readable medium such as the memory the storage device memory on processor or a propagated signal.

The high speed controller manages bandwidth intensive operations for the computing device while the low speed controller manages lower bandwidth intensive operations. Such allocation of functions is exemplary only. In one implementation the high speed controller is coupled to memory display e.g. through a graphics processor or accelerator and to high speed expansion ports which may accept various expansion cards not shown . In the implementation low speed controller is coupled to storage device and low speed expansion port . The low speed expansion port which may include various communication ports e.g. USB Bluetooth Ethernet wireless Ethernet may be coupled to one or more input output devices such as a keyboard a pointing device a scanner or a networking device such as a switch or router e.g. through a network adapter.

The computing device may be implemented in a number of different forms as shown in the figure. For example it may be implemented as a standard server or multiple times in a group of such servers. It may also be implemented as part of a rack server system . In addition it may be implemented in a personal computer such as a laptop computer . Alternatively components from computing device may be combined with other components in a mobile device not shown such as device . Each of such devices may contain one or more of computing device and an entire system may be made up of multiple computing devices communicating with each other.

Computing device includes a processor memory an input output device such as a display a communication interface and a transceiver among other components. The device may also be provided with a storage device such as a microdrive or other device to provide additional storage. Each of the components and are interconnected using various buses and several of the components may be mounted on a common motherboard or in other manners as appropriate.

The processor can execute instructions within the computing device including instructions stored in the memory . The processor may be implemented as a chipset of chips that include separate and multiple analog and digital processors. The processor may provide for example for coordination of the other components of the device such as control of user interfaces applications run by device and wireless communication by device .

Processor may communicate with a user through control interface and display interface coupled to a display . The display may be for example a TFT LCD Thin Film Transistor Liquid Crystal Display or an OLED Organic Light Emitting Diode display or other appropriate display technology. The display interface may comprise appropriate circuitry for driving the display to present graphical and other information to a user. The control interface may receive commands from a user and convert them for submission to the processor . In addition an external interface may be provide in communication with processor so as to enable near area communication of device with other devices. External interface may provide for example for wired communication in some implementations or for wireless communication in other implementations and multiple interfaces may also be used.

The memory stores information within the computing device . The memory can be implemented as one or more of a computer readable medium or media a volatile memory unit or units or a non volatile memory unit or units. Expansion memory may also be provided and connected to device through expansion interface which may include for example a SIMM Single In Line Memory Module card interface. Such expansion memory may provide extra storage space for device or may also store applications or other information for device . Specifically expansion memory may include instructions to carry out or supplement the processes described above and may include secure information also. Thus for example expansion memory may be provide as a security module for device and may be programmed with instructions that permit secure use of device . In addition secure applications may be provided via the SIMM cards along with additional information such as placing identifying information on the SIMM card in a non hackable manner.

The memory may include for example flash memory and or NVRAM memory as discussed below. In one implementation a computer program product is tangibly embodied in an information carrier. The computer program product contains instructions that when executed perform one or more methods such as those described above. The information carrier is a computer or machine readable medium such as the memory expansion memory memory on processor or a propagated signal that may be received for example over transceiver or external interface .

Device may communicate wirelessly through communication interface which may include digital signal processing circuitry where necessary. Communication interface may provide for communications under various modes or protocols such as GSM voice calls SMS EMS or MMS messaging CDMA TDMA PDC WCDMA CDMA2000 or GPRS among others. Such communication may occur for example through radio frequency transceiver . In addition short range communication may occur such as using a Bluetooth WiFi or other such transceiver not shown . In addition GPS Global Positioning System receiver module may provide additional navigation and location related wireless data to device which may be used as appropriate by applications running on device .

Device may also communicate audibly using audio codec which may receive spoken information from a user and convert it to usable digital information. Audio codec may likewise generate audible sound for a user such as through a speaker e.g. in a handset of device . Such sound may include sound from voice telephone calls may include recorded sound e.g. voice messages music files etc. and may also include sound generated by applications operating on device .

The computing device may be implemented in a number of different forms as shown in the figure. For example it may be implemented as a cellular telephone . It may also be implemented as part of a smartphone personal digital assistant or other similar mobile device.

Various implementations of the systems and techniques described here can be realized in digital electronic circuitry integrated circuitry specially designed ASICs application specific integrated circuits computer hardware firmware software and or combinations thereof. These various implementations can include implementation in one or more computer programs that are executable and or interpretable on a programmable system including at least one programmable processor which may be special or general purpose coupled to receive data and instructions from and to transmit data and instructions to a storage system at least one input device and at least one output device.

These computer programs also known as programs software software applications or code include machine instructions for a programmable processor and can be implemented in a high level procedural and or object oriented programming language and or in assembly machine language. As used herein the terms machine readable medium computer readable medium refers to any computer program product apparatus and or device e.g. magnetic discs optical disks memory Programmable Logic Devices PLDs used to provide machine instructions and or data to a programmable processor including a machine readable medium that receives machine instructions as a machine readable signal. The term machine readable signal refers to any signal used to provide machine instructions and or data to a programmable processor.

To provide for interaction with a user the systems and techniques described here can be implemented on a computer having a display device e.g. a CRT cathode ray tube or LCD liquid crystal display monitor for displaying information to the user and a keyboard and a pointing device e.g. a mouse or a trackball by which the user can provide input to the computer. Other kinds of devices can be used to provide for interaction with a user as well for example feedback provided to the user can be any form of sensory feedback e.g. visual feedback auditory feedback or tactile feedback and input from the user can be received in any form including acoustic speech or tactile input.

The systems and techniques described here can be implemented in a computing system that includes a back end component e.g. as a data server or that includes a middleware component e.g. an application server or that includes a front end component e.g. a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the systems and techniques described here or any combination of such back end middleware or front end components. The components of the system can be interconnected by any form or medium of digital data communication e.g. a communication network . Examples of communication networks include a local area network LAN a wide area network WAN and the Internet.

The computing system can include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client server relationship to each other.

A number of embodiments have been described. Nevertheless it will be understood that various modifications may be made without departing from the spirit and scope of the invention. For example much of this document has related to organizing alphanumeric characters on a keypad using a frequency distribution however any appropriate system of symbolic representation may organized using a frequency distribution and mapped to a keypad. For example mathematical operators geometric shapes symbols representing keypad functions etc. can be mapped to a keypad in the manner described here.

In addition the logic flows depicted in the figures do not require the particular order shown or sequential order to achieve desirable results. In addition other steps may be provided or steps may be eliminated from the described flows and other components may be added to or removed from the described systems. Accordingly other embodiments are within the scope of the following claims.

