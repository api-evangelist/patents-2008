---

title: Methods, systems, and computer readable media for flexible occlusion rendering
abstract: The invention relates to flexible occlusion rendering, including receiving a first set of three dimensional image data including image data for a surface of interest and image data for a region occluding the surface of interest from a desired viewpoint. The purpose of this invention is to improve occlusion rendering via imaging by locating the occluding surface of the incoming three-dimensional data and, and modifying the characteristics of this data, to show the surface that is being occluded so that the image includes viewing through the occlusion to the surface of interest.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07961187&OS=07961187&RS=07961187
owner: The University of North Carolina
number: 07961187
owner_city: Chapel Hill
owner_country: US
publication_date: 20080320
---
The presently disclosed subject matter claims the benefit of U.S. Provisional Patent Application Ser. No. 60 919 079 filed Mar. 20 2007 the disclosure of which is incorporated herein by reference in its entirety.

This presently disclosed subject matter was made with U.S. Government support under Grant No. P41 EB002025 21 RS RMT awarded by the National Institutes of Health. Thus the U.S. Government has certain rights in the presently disclosed subject matter.

The subject matter described herein relates to rendering images of objects from viewpoints where the subject of the image would normally be occluded. More particularly the subject matter described herein relates to methods systems and computer readable media for flexible occlusion rendering.

The goal of flexible occlusion rendering FOR is to enable view dependent rendering of occluded objects in a volume for displaying useful views of MRI and CT data to aid physicians in diagnosis. For example when using volume rendering to perform virtual arthroscopy from a shoulder MRI a view of the entire shoulder socket is desired for rapid evaluation of the cartilage surface for defects . For example illustrates a textbook illustration of a shoulder socket. Such a view would be desirable in a real shoulder but would require rendering from a viewpoint inside the humeral head. However views from inside the humeral head that would otherwise show the entire socket are not possible as the cartilage surface of the humeral head occludes the socket Camera . In camera indicated by reference number represents a viewpoint inside of the humeral head. Such a view is difficult to achieve using standard rendering techniques because adjusting the volume rendering transfer function to reduce the opacity of the cartilage surface of the humeral head will also reduce the opacity of the cartilage surface of the shoulder socket making the resulting image very difficult to interpret . For example illustrates an image of a shoulder rendered from MRI data where the cartilage surfaces on the humeral head and in the shoulder socket are rendered with partial transparency. Because the cartilage surface of the shoulder socket is rendered with the same transparency as the cartilage surface of the humeral head it is difficult to distinguish between the two surfaces in the resulting image and defects are difficult to evaluate.

Therefore with standard volume rendering views of the shoulder socket are limited to those from positions within the fluid filled joint capsule Camera indicated by reference number reference number and will respectively be used to distinguish between Cameras and in the remaining figures that use such cameras to show different viewpoints . Because of this limitation the physician must evaluate the socket from viewpoints either at extreme angles or very close to the surface much like evaluating the surface of the hand with the palm touching the tip of the nose Clarke 2004 . A method for removing the occluding material of the humeral head enabling unobstructed views of the shoulder socket is required. More generally there exists a need for methods systems and computer readable media for flexible occlusion rendering where images of surfaces can be rendered from arbitrarily selected viewpoints regardless of the number and type of intervening interfaces between the viewpoint and the surface to be rendered.

The subject matter described herein includes methods systems and computer readable media for flexible occlusion rendering. The subject matter described herein includes methods systems and computer readable media for flexible occlusion rendering. Once exemplary method for flexible occlusion rendering includes receiving a first set of three dimensional image data including image data for a surface of interest and image data for a region occluding the surface of interest from a desired viewpoint. The method further includes casting a plurality of rays from the viewpoint to the surface of interest. The method further includes along each ray identifying a local maximum in voxel intensity and rendering voxels on one side of the local maximum in voxel intensity to be visible and rendering voxels on a near side of the local maximum in voxel intensity to be at least partially transparent wherein the voxels rendered as visible define the surface of interest and the voxels rendered to be at least partially transparent define the region occluding the surface of interest. The method further includes displaying the voxels rendered along each ray to a user so that the user can view the surface of interest through the occluding region.

The subject matter described herein for flexible occlusion rendering may be implemented using a computer readable medium having stored thereon computer executable instructions that when executed by the processor of a computer perform steps. Exemplary computer readable media suitable for implementing the subject matter described herein include chip memory devices disk memory devices and application specific integrated circuits. In addition a computer readable medium that implements the subject matter described herein may be located on a single device or computing platform or may be distributed across multiple devices or computing platforms.

What is desired is a system that requires minimal supervised preprocessing of the data does not suffer from segmentation artifacts is robust in areas where segmentation of objects is difficult handles self occlusion enables view dependent determination of the object of interest and correctly handles transitions from occluded viewpoints to unoccluded viewpoints.

One potential solution for removing the occluding material of the humeral head is to apply a clipping plane. A clipping plane removes all occluding material between the viewpoint and the plane. The plane can either be placed at a certain distance in front of the viewpoint or at a predefined position and orientation in the volume. There are two major drawbacks to using a clipping plane for removing the occluding material.

The first drawback is that the clipping plane must be continually redefined by the user when moving the viewpoint. For a clipping plane placed a certain distance in front of the viewpoint this distance must be adjusted based on the distance from the camera to the shoulder socket. For a clipping plane at a predefined position and orientation in the volume the position and orientation must be adjusted to give the best effect depending on the viewpoint.

The more fundamental drawback of the clipping plane approach is that due to the geometry of the ball and socket joint no single clipping plane is sufficient to render the entire socket . This drawback is not specific to the shoulder as many joints and other anatomical features of interest have even more complex geometries than that of the shoulder. FOR essentially implements an arbitrarily shaped data dependent clipping surface thus removing this limitation.

Another possible solution for removing the occluding material of the humeral head is to pre segment the volume. Segmentation is the partitioning of the volume into multiple regions corresponding to objects in the volume. Accurate segmentation of the humeral head can enable its removal from the volume.

One way to perform segmentation is to manually segment the region of interest ROI . Manual segmentation is an extremely time consuming and tedious task requiring the physician to draw ROIs on each slice of the volume. With the large number of medical data sets generated daily the time taken to perform such a segmentation is prohibitive Clarke 2004 .

Various automatic segmentation algorithms also exist. Voxel based segmentation methods such as thresholding attempt to classify each voxel into a tissue type based on voxel intensities. Other methods incorporate different metrics such as texture. After voxel classification region growing techniques can be performed to group the volume into objects. Model based methods such as active contour models ACM also referred to as snakes active shape models ASM and active appearance models AAM deform an object boundary to fit the image data Kass et al. 1988 Cootes and Taylor 1998 Cootes et al. 1992 . Level set methods are similar to ACM but model the evolving boundary implicitly as a higher dimensional surface Osher and Sethian 1988 Sethian 1996 .

Automatic segmentation methods can be computationally expensive for large volumes and often require fine tuning of parameters. Obtaining a good segmentation might therefore require a few user guided iterations and may still require some manual modification. Most automatic segmentation techniques require numerous pre segmented data sets to learn from to aid in classification so these training data sets must be created manually. Additionally for the purposes of object removal an error in the segmentation that joins two objects together results in either both objects being shown or neither. This problem can arise with the humeral head and shoulder socket when there is not good separation between the two surfaces .

Assuming a good segmentation simply removing the humeral head is still problematic for a virtual arthroscopy application. During the same analysis it is often desirable to view the socket from positions within the humeral head and to view the humeral head from within the scapula. To do so with segmentation would require an accurate segmentation of both the humerus and the scapula and a means to determine which to view each frame of the rendering.

For certain geometries even a perfect segmentation does not enable view dependent display of objects of interest. For any non convex surface there are views from which the surface will occlude itself . For example in surface is occluded by surface . These irregular surfaces occur in locations such as bone fractures and folded surfaces. Similarly no segmentation is able to render the interior surfaces of objects from arbitrary viewpoints outside the object . In surface occludes surface . Our collaborators want to view the interior of the ureters and renal collecting systems from exterior positions in a virtual ureteroscopy application.

The other potential solution for removing the occluding material of the humeral head involves defining an isosurface at the correct isovalue to represent the surfaces of interest. Any isosurface approach will inherit the issues with surface based rendering as well as problems with surfaces occluding each other.

A potential solution to the occlusion problem is to use back face culling. If the isosurfaces are rendered using back face culling polygons that face away from the viewpoint are not rendered. Mathematically if the polygon normal is N and the vector from the viewpoint to the polygon is V the polygon is culled if N V 0. This approach will work for rendering the interior of ureter surfaces however there are common configurations in which backface culling is insufficient. In backface culling works as the surface normals of humeral head isosurface point away from the camera. However shows a configuration that can also arise with MRI or CT data. In this case simple back face culling does not remove the entire surface of the humeral head as there are front facing polygons of the humeral head between the viewpoint and the socket.

To remove the front facing polygons of the humeral head isosurface depth peeling can be used. Depth peeling is a framebuffer based technique that can achieve order independent transparency when rendering polygons Mammen 1989 Diefenbach 1996 Everitt 2002 . From viewpoints within the humeral head setting the first depth layer of polygons to fully transparent renders the humeral head isosurface fully transparent revealing the shoulder socket surface. However this technique will require the user to enable and disable depth peeling when maneuvering into and out of the joint capsule as the shoulder socket isosurface is made transparent when the humeral head isosurface does not occlude it. FOR enables moving seamlessly between the humeral head and the joint capsule which is common when performing surveys of the socket and then inspecting areas of interest more closely.

Volumetric depth peeling VDP is the simplest implementation of FOR. It shares its name with Nagy and Klein 2003 which involves texture based isosurface rendering with depth peeling. However the implementation of VDP described here is extended to the more general case of ray based volume rendering. It retains full transfer function control enabling the full range of volumetric effects to be applied including effects that simulate directionally illuminated surface rendering. VDP is an extension to standard ray cast volume rendering that resets accumulated color and opacity along each ray when features in the volume indicating a separation between occluding objects is found. shows a standard volume rendering of a shoulder joint compared with a rendering using VDP. With the shoulder joint example an MRI image displays the bright fluid filled joint capsule defining the space between the humeral head and the shoulder socket . In standard MRI joint trauma diagnosis a fluid called a contrast agent is often injected into the joint capsule to give a brighter signal and increase the separation between joint surfaces. Gadolinium based contrast agents are commonly used. Most of the MRI data sets used in the examples described herein include such contrast enhancement however the term fluid will be used instead of contrast agent to retain generality.

VDP works by determining when each ray encounters the fluid filled joint capsule resetting the accumulated color and remaining opacity the first time it is encountered. The effect of resetting the accumulated color and remaining opacity is to clip away all of the occluding material between the viewpoint and the far side of the joint capsule. The simplest method to determine when the separating fluid is encountered is a fixed value threshold.

In standard ray cast volume rendering a ray is cast into the volume for each pixel in the rendered image. As the ray traverses the volume it accumulates color and opacity based on the volume rendering transfer function. For VDP with a fixed threshold the threshold is set to a value above which represents fluid in the MRI image. When traversing each ray the first time the current data value is greater than or equal to the threshold the accumulated color and remaining opacity are reset. This removes the occluding material making the shoulder socket visible . Psuedocode for this algorithm is given in .

In addition to the case of separate objects occluding each other the fixed threshold VDP algorithm works for self occluding surfaces. For example in virtual ureteroscopy of CT data a high density contrast agent is introduced within the ureters and renal collecting systems to aid in visualizing their interior surfaces for small tumors and stones. It is desirable to enable views of the interior surfaces of the renal collecting system from exterior viewpoints to obtain survey views. The same fixed threshold VDP method will work in this case as shown in .

The VDP threshold for resetting can be set independently from the transfer function settings. shows a diagram of three different thresholds. The low threshold is set within the range of cartilage values the medium threshold is set to the maximum cartilage value and the high value is set above the range of cartilage values. In the shoulder drawing in dashed lines and respectively correspond to the low medium and high thresholds. The low threshold resets too early causing part of the cartilage surface of the humeral head to be rendered. The medium threshold resets when exiting the cartilage surface of the humeral head exposing the socket. The high threshold also exposes the surface of the socket but along some rays the threshold is not reached. VDP renderings from the same viewpoint with different thresholds are shown in . The circled artifacts circled are caused by the threshold not being reached along some rays due to lower concentrations of fluid where the cartilage surfaces are close together or touching. Because the threshold is not reached the near cartilage surface of the humeral head is rendered in these locations. The optimal setting for the threshold is therefore at the maximum value representing cartilage in the transfer function. Such a setting ensures that the ray has exited the cartilage surface of the humeral head while introducing as few artifacts as possible. Note that the fixed threshold VDP technique differs from depth and opacity peeling techniques in that it correctly renders the first surface encountered from viewpoints within the joint capsule.

Various extensions to the basic fixed threshold VDP method are possible. One such extension is to modulate the accumulated color and opacity when reaching the threshold instead of resetting. Doing so can achieve a transparency effect for the near surface rendering the far surface fully opaque although both surfaces are the same material. shows two renderings of a contrast filled rubber glove used as a medical phantom in a virtual ureteroscopy study. displays the exterior surface of the glove using standard volume rendering. enables VDP to display the inner surface of the glove but modulates the accumulated color and opacity of the outer surface instead of resetting. Different color transfer functions are also used for the outer and inner surfaces although they are the same material.

Another choice when rendering is what to do along rays that do not reach the threshold. Depending on the application these rays can either be rendered as with normal volume rendering to provide context or set to the background color to remove distraction . One problem with rendering the rays that do not reach the threshold is that a lack of occlusion cues for determining the relative depths of objects can lead to confusion. However using opacity modulation helps alleviate this problem . In this manner VDP can achieve effects similar to importance driven volume rendering Viola et al. 2004 without requiring pre segmentation. Only simple blended transparency is currently implemented however.

Such focus and context techniques are possible with VDP to enable survey views of the data. However the most useful form of VDP for the applications described herein is to only render rays that reach the threshold and to remove all of the accumulated color and opacity when reaching the threshold. In this case only the data on the far side of the threshold will contribute to the final image. A performance increase over the standard VDP algorithm is therefore enabled by only accumulating color and opacity when the threshold has been reached. Pseudocode for this variant of VDP is given in . Most of the remaining images described herein employ some sort of skipping technique modified for the particular FOR algorithm used.

For the applications described herein finding the first separating feature has proven useful however finding multiple separations or the last separation is also possible depending on the application.

The extensions described above for fixed threshold VDP can be applied to all variants of FOR presented herein.

Selecting a threshold for VDP is problematic for shoulders where the two surfaces are in close contact. shows a rendering of a shoulder with hole artifacts circled in the resulting image. These artifacts occur in areas where the threshold is not reached which causes no accumulation of color and opacity using the skip to threshold VDP algorithm. Reducing the threshold to eliminate the artifacts concomitantly reducing the maximum value of the cartilage in the transfer function results in eroded areas of the socket circled in blue in . In cases such as this there is no setting for the threshold that both avoids hole artifacts and prevents erosion of the surface.

A key insight is that finding the separation between the regions of interest in the volume is the key to optimal occlusion determination rather than determining occlusion based on the definition of the surfaces rendered. The benefits of such an approach are twofold the occlusion determination and the transfer function defining the surfaces can be independently optimized and the viewpoint can be moved seamlessly from occluded positions to unoccluded positions while still displaying the surface of interest as no counting of surfaces is performed.

Hole artifacts when using a fixed threshold VDP can also occur when rendering ureters for virtual ureteroscopy. This can occur in areas where the ureter narrows as there will be a smaller concentration of contrast. Finding the intensity peak along the ray is also desirable in this case.

One possible method for finding the fluid s intensity peak is to search for the global maximum value along the ray. This technique does not always work however as there are often cases in which multiple layers of fluid are present along a ray. If the maximum value along a ray lies in a layer behind the first the ray will reset in that layer of fluid. This can cause unwanted removal of portions of the surface of interest.

Instead what is needed is to find the first local intensity maximum corresponding to the peak of interest. In the ideal case this can be performed by simply testing the current sample s value against the value of the next sample. If the current sample s value is greater than the next sample s value then it represents an intensity peak. This approach finds the intensity peak from viewpoints inside the humeral head viewpoints inside the cartilage surface of the humeral head and viewpoints inside the joint capsule on the near side of the intensity peak. It also works from viewpoints inside the joint capsule on the far side of the true intensity peak as the first sample will be considered an intensity peak causing immediate resetting of the accumulated color and opacity. This algorithm therefore enables navigation from the humeral head to positions within the joint space while always rendering the socket surface of interest.

A major drawback to this implementation is that it is sensitive to noise. Defining a peak in this manner will cause small noise spikes to trigger the resetting of color and opacity. One method of finding the true intensity peak is to use two thresholds to select peaks of a given height and a given intensity.

 Canny 1986 describes a 2D edge detection algorithm also referred to as Canny edge detection that uses two thresholds to link strong edges possessing high gradient magnitudes with weak edges possessing lower gradient magnitudes removing weak edges that are not connected to strong ones.

When detecting intensity peaks along rays two thresholds can be used to select peaks of a large enough magnitude and to eliminate spurious peaks. The algorithm works by finding the first local maximum then continuing forward until a sample value is found that is a specified amount determined by the first threshold parameter below the peak. This threshold reduces sensitivity to noise spikes by finding peaks of a specified relative height. If such a value is found the accumulated color and opacity is reset. Ray traversal is started again from the peak.

To further ensure that spurious peaks are not identified a lower threshold value is used to eliminate peaks with absolute intensities below this value. This can be useful because the signal to noise ratio is lower at lower intensities and there may also be inhomogeneities in the signal at lower intensities. The lower threshold is independent of the transfer function setting unlike with fixed threshold VDP and a wide range of values for the lower threshold usually produce the same result making it much more robust than fixed threshold VDP. Pseudocode for this algorithm is given in and an intensity profile illustrating the two thresholds is shown in . In the lowermost dotted line represents the initial threshold that a peak must satisfy to be considered a potential local maximum. The distance between the upper two dotted lines represents the distance that the peak must fall from its maximum value to be considered a local maximum.

A better choice is to employ a gradient opacity transfer function that reduces contributions of voxels with small gradients . The use of gradient opacity transfer functions to reduce the opacity of voxels with small gradients is suggested in Levoy 1988 to better define surfaces in the volume. This approach therefore improves the surface definition in general while still keeping the transfer function settings separate from the occlusion determination.

Areas with a small intensity peak can represent places where the surfaces are actually touching and are the same areas that are problematic for segmentation techniques. These areas can be highlighted in various ways by adjusting the color transfer function based on the relative or absolute intensity at the peak to convey the fact that the surface displayed here is less certain than in other areas .

The point of introducing the dual thresholds is to deal with noise in the data. However there are other methods than can be employed both to remove noise and to introduce a notion of scale discussed in the next section.

The standard way of reducing noise from a signal processing standpoint is to apply a lowpass filter. A Gaussian filter is commonly used. The mathematical formula for an isotropic 2D Gaussian g x y is 

The Fourier transform of a Gaussian is another Gaussian but with an inverse standard deviation. Filtering by multiplying with a Gaussian in the frequency domain is therefore equivalent to convolution with a different Gaussian in the spatial domain. The of the Gaussian convolution kernel controls its width and therefore the amount of amount of smoothing performed on the data. Smoothing to remove noise also smoothes other high frequency data such as small bumps and edges. Therefore simply smoothing the data to remove noise and then rendering the smoothed data it is not optimal as this will smooth away small features in the data that are of interest to the physician .

Although using smoothed data is not desirable for rendering it has two properties that are desirable for determining occlusion. The first is noise removal for finding intensity peaks representing the separation between surfaces. By smoothing the average over a local 3D neighborhood at each voxel is taken into account rather than just along a 1D ray. The second desirable feature is control over the scale of objects being separated. For example with a bone fracture it might be desirable to skip over multiple small fragments to see the surface beyond them.

FOR takes advantage of the fact that the best data set used for rendering might not be the best data set used for determining occlusion. FOR uses the smoothed data set to locate separating surfaces while using the original data set to render.

With FOR an auxiliary data set is used for determining occlusion while rendering the original data. The VDP methods discussed both fit into the FOR framework. The more general term FOR will be used instead of VDP for the remainder of the description herein.

Fixed threshold VDP can be thought of as a specific instance of FOR that uses a thresholded data set for occlusion determination. The implementation of fixed threshold VDP describe above is not the same as using a thresholded dataset as the thresholding operation is being performed on a tri linearly interpolated value along the ray not on the actual voxel values. Using nearest neighbor interpolation for the threshold would have the same result as a thresholded dataset. In this case the test to perform for resetting along the ray becomes a simple test as the thresholded data set is a binary mask. Because the thresholding operation is so computationally inexpensive it is easier to perform the computation while rendering without computing a separate thresholded datasets. There may be some systems in which memory access is cheap enough that reading from a thresholded dataset and performing a binary comparison will be computationally less expensive than performing a comparison on the sample value and the threshold value.

First local maximum VDP does not use a smoothed version of the original data set. First local maximum FOR uses a smoothed version of the original data set at some scale. The local maximum peak finding algorithm is performed on the smoothed data set. If the scale desired is that of the original data no auxiliary data set needs to be generated although it is possible to always use a secondary data set for simplicity of implementation. There may be some performance decrease when implemented as an auxiliary data set as two data values must be generated for each sample point.

These two data sets are useful for virtual arthroscopy from MRI data and virtual ureteroscopy from CT data. A different but related type of auxiliary data set is necessary for the third application presented herein knee fracture visualization from CT data.

For diagnosing knee fractures CT is often used as it gives excellent bone contrast. And idealized diagram of a knee as seen using CT is shown in . The hard outer surface of the bones in the joint has a very high intensity whereas the inside of the bone has a lower intensity in the same range as that of the soft tissue and fluid present in the joint.

The most common type of knee fracture diagnosed using CT data is a tibial plateau fracture. Camera shows the view most useful for diagnosing such a fracture. The occluding material of the femur makes such views impossible with standard volume rendering. Camera shows a view available with standard volume rendering.

Because the space between the surfaces of the joint has a lower range of intensities than that of the bone surfaces to be rendered a possible choice for a data set to define the separation used to determine occlusion using FOR is to apply a lower threshold to the data. In this case all values below the threshold are set to 1 and all values above the threshold are set to 0. Defining the thresholding in this manner inverts the intensities making the separation the highest intensity as with virtual arthroscopy and virtual ureteroscopy. This approach only works for viewpoints just within the hard bone surface of the femur Camera which is better than standard volume rendering but far from optimal. For viewpoints on the inside of the bone the accumulated color and opacity is immediately reset and the inside surface of the femur is rendered giving the same result as standard volume rendering Camera . The same problem occurs if attempting to use the first local maximum FOR algorithm.

Performing a flood fill operation on the thresholded data enables FOR to correctly determine the separation used to reset accumulated color and opacity . Before performing the flood fill an axial slice of pixels set to 0 is added above and below the volume. This ensures that the interiors of the bones which have been thresholded to a value of 1 are closed off from the edges of the image. The flood fill operation then sets to 0 all voxels with value 1 that are not connected to the edge of the image by other voxels with value 1. In this manner the interior of the bones is filled in resulting in a mask of the bones and the separation between the bones.

With the flood filled mask FOR can be employed to reset the accumulated color and opacity whenever a 1 is encountered along the ray in the mask which represents the separation between the surfaces. This enables seamless transitions from viewpoints exterior to the bones being rendered to viewpoints within the bones being rendered while always displaying the far surface of interest.

A problem similar to that encountered when using fixed threshold VDP arises with this binary mask. The threshold must be tightly coupled to the transfer function used to render the surfaces because the resetting occurs immediately when entering the separation mask. Overestimating the separation by setting the threshold too high can cause the resetting to happen early which causes the near surface to be rendered . Conversely under estimating the separation by setting the threshold too low can cause hole artifacts . This is especially problematic because the thresholding and flood filling is performed as a preprocess and cannot be recomputed easily.

A more robust method for finding the separation incorporates thresholding flood filling and smoothing. By smoothing the thresholded and flood filled data intensity peaks are formed near the center of the separation .

This process can be seen as an approximation of a medial axis transform of the separation. The first local maximum method can therefore be used to determine intensity peaks for resetting. This method is more robust to an overestimate of the separation as it will reset towards the center of the separation. It can also help with small holes as smoothing the edges of the hole will create small intensity peaks that can be found with a low threshold setting.

As indicated above the subject matter described herein for flexible occlusion rendering can be implemented in hardware software firmware or any combination thereof. is a block diagram illustrating a general purpose computing platform on which the present subject matter may be implemented. General purpose computing platform may be any suitable computing platform capable of executing programs. For example platform may be a personal computer or a workstation. In an alternate implementation platform may be a server and the software for flexible occlusion rendering may be implemented on the server so that users can access the software remotely to render images from occluded viewpoints in medical image datasets.

Platform may include a processor and memory . Memory may store computer executable instructions for execution by processor . In the illustrated example these computer executable instructions include occlusion determination module and rendering and display module . Occlusion determination module may include computer executable instructions for performing the steps described herein for making occlusion determinations along rays cast in image data sets. Rendering and display module may include computer executable instructions for performing the steps described herein for rendering and displaying images from medical image data for a given occlusion determination. Occlusion determination module and rendering and display module are illustrated separately to indicate that their respective functions can be implemented separately and independently optimized. However it is understood that modules and can be implemented as part of the same computer program without departing from the scope of the subject matter described herein.

In step along each ray a local maximum in voxel intensity is identified voxels on a near side of the local maximum in voxel intensity are rendered as visible and voxels on a far side of the local maximum in voxel intensity where the near and far sides are defined from the camera viewpoint are rendered to be at least partially transparent wherein the voxels rendered as visible define the surface of interest and the voxels rendered to be at least partially transparent define at least a portion of the region occluding the surface of interest. For example occlusion determination module may identify a local maximum in voxel intensity along each ray. The local maximum may be used by rendering and display module to determine where along each ray to begin rendering voxels as visible by in one example resetting accumulated color and opacity values along each ray. In step the voxels rendered along each ray are displayed to a user so that the surface of interest can be viewed through the occluding region. For example rendering and display module may display the occluding region as fully or partially transparent so that the surface of interest can be viewed.

The disclosure of each of the following references is hereby incorporated herein by reference in its entirety.

