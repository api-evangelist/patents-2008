---

title: System and method for performing contextual searches across content sources
abstract: A request is received from a user to perform a contextual search based on a media file or metadata for the media file. A type of the media file is determined. A contextual search menu is presented to the user. A selected contextual search query type selected from the contextual search menu is received from the user. One or more search modules each associated with one or more content sources are queried to determine which one or more search modules can perform the selected contextual search query type. A request is generated for one or more search modules that can perform the selected contextual search query type to perform the selected contextual search query type against one or more selected content sources associated with the one or more search modules. Search results are received from the one or more search modules, wherein the search results include links to one or more files associated with the one or more content sources. The search results are displayed to the user.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09305060&OS=09305060&RS=09305060
owner: 
number: 09305060
owner_city: 
owner_country: 
publication_date: 20080718
---
This application is related to U.S. Pat. No. 7 243 307 issued on Jul. 10 2007 which is incorporated by reference herein in its entirety.

The disclosed embodiments relate generally to performing contextual searches across multiple content sources to locate media files and more particularly to perform contextual searches for media devices e.g. set top boxes dedicated media players etc. .

Dedicated media devices that can play content obtained from a network are becoming increasingly popular. When a desired media file is located by a user of the media device the media file can be downloaded or streamed to the media device. For example the user can use a search engine to locate the media file. However using a search engine on a media device may be cumbersome. For example on a portable media device the portable media device may only include a few buttons or a touch screen display. Although the portable media device may include an on screen keyboard selecting individual letters to form search queries can be cumbersome. Similarly on a set top box for a television the only input device may be a remote controller which also includes a limited set of buttons. Therefore it is desirable to have an easy way to perform a media search on a device with limited input functionality.

Furthermore a user of a media device may not know whether a given content source e.g. a home network server a portable media player etc. includes media file types e.g. MP3 files WMA files etc. for which the user is searching. Moreover presently multiple standalone applications each with their own user interface must be used to search for content. Thus what is needed for media devices that are typically operated without the aid of fully functional input devices e.g. keyboard mouse etc. is a system that allows integrated searching of multiple sources using a single unified interface.

Some embodiments provide a method a system and a computer readable storage medium for performing contextual searches across multiple content sources is provided. In these embodiments a media device receives a request from a user to perform a contextual search based on a media file or metadata for the media file. The media device then determines a type of the media file. The media device presents a contextual search menu to the user. The contextual search menu can include one or more contextual search query types where a contextual search query types can be based on the type of the media file. The media device receives from the user a selected contextual search query type selected from the one or more contextual search query types. The media device queries one or more search modules each of which are associated with one or more content sources to determine which one or more search modules can perform the selected contextual search query type. The media device generates a request for one or more search modules that can perform the selected contextual search query type to perform the selected contextual search query type against one or more selected content sources associated with the one or more search modules. The media device receives search results from the one or more search modules where a search result can include links to one or more files associated with the one or more content sources. The media device then displays search results to the user.

In some embodiments prior to requesting that the search module that can perform the selected contextual search query type perform the selected contextual search query type the media device displays to the user one or more content sources associated with the one or more search modules that can perform the selected contextual search query type. The media device then receives the selected content source from the user selected from the one or more content sources associated with the one or more search modules that can perform the selected contextual search query type.

In some embodiments the media device receives a selected search result from the user selected from the search results and obtains one or more media files associated with the selected search result. The media device then presents the one or more media files to the user.

In some embodiments the media device receives a request from the user to download a plug in search module. The media device then determines a location of the plug in search module downloads the plug in search module from the location and installs the downloaded plug in search module.

In some embodiments the media device receives a request from a server to download a plug in search module. The media device then determines a location of the plug in search module downloads the plug in search module from the location and installs the downloaded plug in search module. In some embodiments the media device prompts the user with the option to install the plug in search module prior to installing the downloaded plug in search module.

In some embodiments the media device determines the type of the media file from metadata for the media file. The metadata for the media file can be included with the media file and or can be included in data separate from the media file.

In some embodiments the media device queries all of the search modules on the media device and requests that all search modules that can perform the selected contextual search query type perform the selected contextual search query type.

In some embodiments the media device transmits a search query to the selected content source. In these embodiments the search query can be based on attributes and corresponding values of the media file and the selected contextual search query type.

In some embodiments the one or more search modules are accessed through a common application programming interface API .

To overcome the aforementioned problems some embodiments provide a method a system and a computer readable storage medium for performing contextual searches across multiple content sources using a common application programming interface API . These embodiments obviate the need for the media and or content providers from having to create a new application for each media device whose implementation may vary from device to device e.g. which may include different user interfaces programming languages etc. . This API allows the content provider to present their data in conformance to the API leaving the device manufacturers or third party developers to perform the specific implementation for the device. Furthermore these embodiments also allow users to perform media searches on devices with limited input functionality.

Some embodiments provide a system a method and a computer readable storage medium to search for media files and or content associated with media files. In these embodiments a user of the media device does not need to use fully functional input devices e.g. keyboard mouse etc. . Instead the user can use an input device with limited input functionality e.g. buttons etc. to perform searches to locate media files and or content associated with media files based on a given context. These searches are typically referred to as contextual searches . For example a contextual search can be performed based on a selected media file and or a media file that is being viewed played. Contextual searching allows a user to perform searches with little input e.g. by using only a few buttons on a remote controller etc. .

Media files can typically be accessed from a media device using several techniques including a tree hierarchy browser e.g. a file system browser or a parameterized query e.g. for paned browsers where media are selected based on categories of metadata and a search. Thus some embodiments include a content browser that provides an abstraction layer between the media device and the implementation of a content search and or selection module. The content browser can provide one or more of the following features a single application programming interface API for browsing multiple content sources supports tree and parameter browsing and searching allows for one touch contextual searching is extensible allow new sources to be supported quickly and can be tested and integrated in small sections. Some embodiments provide a user interface for parameterized searching and or browsing of content e.g. browsing and or searching that is based on attribute and value pairs . The parameterized browsing and searching can be performed across multiple content sources regardless of the media type e.g. videos music images etc. 

It should be appreciated that there may be cases where the browsing of media metadata is not best served by the above presentation techniques an example might be a television electronic programming guide where presentation might best be done via a conventional matrix layout. Such presentation would still benefit by using the consistent appearance of a contextual search menu.

In some embodiments a contextual search application programming interface API is provided which allows access to content from multiple content sources. The contextual search API provides a common API to perform contextual searching and or selection of content from content sources e.g. local and or remote content sources . In some embodiments a given interface is handled by a search and or selection module. For example if a module author is implementing a file system browser the module author can choose to implement a tree content browser e.g. a content browser that presents content in a tree structure but not a parametric content browser e.g. a content browser that presents content based on selected attribute and value pairs . Optionally the module author can implement a search interface for a file system browser e.g. a browser that presents the contents of a file system . In contrast if a plug in module author is implementing a plug in module for a video content source e.g. YOUTUBE the plug in module author can implement a parametric interface that can perform searches based on parameters e.g. timeframe last month category comedy etc. instead of a tree interface.

Note that for the sake of clarity the discussion below refers to a search module which can refer to a search and or selection module that can search for content and or select content from a content source.

In some embodiments the media device is coupled to the content sources through a network . The network can generally include any type of wired or wireless communication channel capable of coupling together computing nodes. This includes but is not limited to a local area network a wide area network or a combination of networks. In some embodiments the network includes the Internet.

In some embodiments the content sources include the media files . In some embodiments a given content source includes a single type of media files e.g. only audio files . In some embodiments a given content source includes multiple types of media files e.g. audio files and video files .

In some embodiments the media device includes one or more of a display module an audio module a user interface module a contextual search application programming interface API search modules and media files . In some embodiments these modules can include software modules and or hardware modules. These modules can include instructions that can be stored in a computer readable medium and executed by a processor. For example the processor can be the one or more CPUs in or specialized hardware such as application specific integrated circuits ASICs or field programmable gate arrays FPGAs .

The display module can generate video signals to drive a display for the media device e.g. the display in . These video signals can be generated in response to playing one of the media files e.g. a video or an image file and or a user interface generated by the user interface module . The audio module can generate signals to drive speakers e.g. the speakers in and or process signals received from a microphone e.g. the microphone in . These audio signals can be generated in response to playing one of the media files . The user interface module can generate a user interface for the media device . For example the user interface module can generate windows menus buttons lists and other user interface elements. In some embodiments the user interface module generates a user interface based on the system described in Customizable Database Driven Menu Structure for a Portable Computing Device U.S. Pat. No. 7 243 307 issued on Jul. 10 2007 which is incorporated by reference herein in its entirety.

The media device can be operated by a user through a user interface e.g. the user interface for the media device . For example the user can navigate through the media files on the media device to locate a media file. The user can then perform any number of actions. For example the user can instruct the media device to play the media file.

In some embodiments the user can instruct the media device to perform a contextual search based on a particular media file. For example if the user is playing a particular music track on the media device the user can instruct the media device to perform a contextual search based on attributes and or parameters of the music track e.g. locating more tracks by the same artist locating more tracks on the same album etc. . The contextual search can be performed regardless of whether the media device is playing the media file. For example the user can use a file browser provided by the user interface module to select a media file on which a contextual search is to be performed without playing the selected media file or not. Likewise the user can browse data with no accompanying local data simply for the purpose of populating such a contextual search and subsequent download or playback.

In some embodiments the media device performs a contextual search of the content sources via the network . Since a given content source may include a different search interface than another content source the media device may need to perform a customized contextual search query for each of the content sources to be searched. For example a first content source may allow full text searching of its contents e.g. Madonna singer while a second content source may only support specified attribute and value pair searches of its content e.g. Artist Madonna . Thus some embodiments provide the contextual search API as a common API layer for interfacing the search modules . The contextual search API can provide a common programming interface to access the functions of the search modules which in turn can search various content sources. For example the contextual search API can provide an API for generating search requests to the search modules and receiving search results from the search modules .

In some embodiments new search modules can be added e.g. via a download to the media device and used without the need to reprogram the media device . For example the download mechanisms described in Customizable Database Driven Menu Structure for a Portable Computing Device U.S. Pat. No. 7 243 307 issued on Jul. 10 2007 can be used. Furthermore any device that implements the contextual search API can use the search modules with little or no modification.

In some embodiments the search modules include search modules associated with one or more of the content sources . For example a YOUTUBE search module can perform searches on YOUTUBE an ITUNES search module can perform searches on ITUNES etc. Each search module can manage the specific search interface for a respective content source. For example a YOUTUBE search module may perform a parameterized search whereas a GOOGLE Videos search module may perform a full text search. Furthermore each search module can report to the contextual search API the types of contextual searches that the search module supports. For example a YOUTUBE search module may support contextual searches such as Search for similar videos . . . Search for more from this Artist . . . Search for more from this Album etc.

In some embodiments a search module can search for content e.g. the media files within the media device . For example a local audio search module can perform a search for audio files on the media device . The discussion below regarding the search modules can be applied to embodiments where the content source is local or remote to the media device .

In some embodiments each search module on the media device is registered on the media device. For example the search modules can be registered in a database or the like. When a user requests that a contextual search be performed the media device queries the database to determine which search modules are available on the media device. In some embodiments a registered search modules data structure stores information associated with search modules that are available on the media device . is a block diagram illustrating a registered search modules data structure according to some embodiments. The registered search modules data structure can include one or more search modules entries associated with the search modules for the media device . In some embodiments a given search module entry e.g. search module entry includes one or more data fields. For example the data fields can include but are not limited to an ID data field a name data field a content sources data field a URLs data field a content types data field and a query types data fields . The ID data field can include a unique identifier for the search module entry . The name data field can include a name for the search module e.g. the name data field for a YOUTUBE search module may include YOUTUBE . The content sources data field can include names for the one or more of content sources on which the search module associated with the search module entry can perform a search. The URLs data field can include universal resource locators URLs for the one or more content sources on which the search module associated with the search module entry can perform a search. Note that the content sources data field and the URLs data field can include multiple content sources and associated URLs. Thus these fields can include specified delimited text e.g. tab delimited comma delimited etc. that can be parsed to retrieve a list of content sources and associated URLs. Alternatively these data fields can include a foreign key pointer or identifier to another data structure which includes a list of content sources and URLs. For example if foreign keys for the content sources and the URLs data field are 1 and 5 respectively a data structure for the content sources can include one or more entries associated with the foreign key and a data structure for the URLs can include one or more entries associated with the foreign key .

In some embodiments the media device receives a request to perform a specified contextual search query from the user to be performed on one or more specified content sources via a user interface for the media device e.g. the user interface in . For example the user may request that the media device perform a contextual search Search for tracks by this Artist on ITUNES . The media device then uses the contextual search API to request that the search module associated with a specified content source e.g. ITUNES perform the specified contextual search query e.g. Search for tracks by this Artist on the specified content source.

In some embodiments a search module transmits a contextual search query e.g. as the contextual search query data structure to a content source. In these embodiments the content source performs the contextual search query and returns one or more search results to the search module. For example a respective search result returned to the search module can include one or more of a title for a respective media file a universal resource locator URL to the respective media file a content type of the respective media file an artist associated with the respective media file an album associated with the respective media file a category of the respective media file a file name of the respective media file a file size of the respective media file a bit rate of the respective media file and a length of the respective media file. In some embodiments the search results are returned in a structured format e.g. XML as attribute value pairs etc. . In some embodiments the search results are returned in an unstructured format and the search module parses and extracts the search results from the unstructured format. For example the search module can perform a screen scrape which extracts specified attributes and values from unstructured documents.

In some embodiments after receiving search results from the one or more content sources the search module generates a search results data structure which is returned to the contextual search API. is a block diagram illustrating a search results data structure that is returned from a search module to the contextual search API according to some embodiments. The search results data structure include one or more search results each of which can be associated with a media file located on the content source or another server. A search result can include but is not limited to one or more of a content source identifier a title a URL a content type a file name a file size a bit rate a length an artist an album a category a rating a relevance and a thumbnail . The content identifier can include an identification of the content source on which a respective media file was found. The title can include a title a media file located on the content source. The URL can include the URL to the media file located on the content source. The content type can include the type of media file e.g. a Multipurpose Internet Mail Extensions content type . The file name can include a file name for the media file. The file size can include the file size of the media file. The bit rate can include the bit rate of the media file. The length can include the play time of the media file. The artist can include a name of the artist for the media file. The album can include a name of the album associated with the media file. The category can include a category for the media file e.g. contemporary R B horror movie action movie etc. . The rating can include the aggregated score or number of stars a search result has received represented in a normalized format e.g. a floating point number with a predefined range which facilitates comparison across content sources. The relevance can include a normalized representation e.g. a floating point number with a predefined range of the information regarding the confidence of a content source that a search result is an appropriate result for the search performed or can infer such confidence from the ordering of returned search results. The thumbnail can be a URL or an embedded representation of an image associated with a search result e.g. an album cover a frame from a video etc. . Note that other data fields can be included in the search result .

The contextual search API then passes the search results e.g. the search results data structure to the media device . In some embodiments the user interface module on the media device displays one or more of the search attributes of the search results.

In some embodiments the memory stores the following programs modules and data structures or a subset thereof an operating system a communications module a display module an audio module a user interface module a contextual search API search modules a media download module a plug in download module a plug in installation module media files a registered search modules data structure contextual search query types contextual search query data structures a search results data structure plug in modules and databases .

The operating system can include procedures for handling various basic system services and for performing hardware dependent tasks. The communication module can be used for connecting the media device to other computers via the one or more communication network interfaces wired or wireless and one or more communication networks e.g. the network in such as the Internet other wide area networks local area networks metropolitan area networks and so on. The display module can be the display module in and can generate video signals to drive the display . The audio module can be the audio module in and can generate signals to drive the speakers and or process signals received from the microphone . The user interface module can be the user interface module and can generate a user interface for the media device . The contextual search API can be the contextual search API in and can provide a common API layer for interfacing with and accessing functions of search modules . The search modules can be the search modules in and can include search modules associated with one or more content sources e.g. local and or remote content sources . In some embodiments the search modules are plug in search modules which can be downloaded and installed on the media device . The media download module can download media files from content sources. The plug in download module and the plug in installation module can download and can install plug in modules respectively. For example the plug in modules can include plug in search modules that can interface with the contextual search API . The media files can be the media files in . The registered search modules data structure can correspond to the registered search modules data structure in .

The contextual search query types can include one or more contextual search queries supported by the media device . For example the contextual search query types can include a Search for tracks from this artist Search for tracks from this album Search for videos for this track Search for videos for this artist Search for videos for this album etc. The contextual search query data structures can be the contextual search query data structures in . The search results data structure can be the search results data structure in . The plug in modules can include modules that can be downloaded and installed into the memory . For example the plug in modules can include plug in search modules for performing contextual search queries. The databases include databases that can be used to store one or more of user interface menu data etc. as described in U.S. Pat. No. 7 243 307.

In some embodiments the media device is included within a housing . The housing can provide mechanical support and protection for the components in the media device . The media device can also include a battery and or power supply . The battery and or power supply can provide power to the components within the media device during operation.

Each of the above identified elements may be stored in one or more of the previously mentioned memory devices and corresponds to a set of instructions for performing a function described above. The above identified modules or programs i.e. sets of instructions need not be implemented as separate software programs procedures or modules and thus various subsets of these modules may be combined or otherwise re arranged in various embodiments. In some embodiments the memory may store a subset of the modules and data structures identified above. Furthermore the memory may store additional modules and data structures not described above.

In the process a user e.g. the user in uses a media device e.g. the media device in . In some embodiments the media device includes one or more search modules that can perform contextual searches against content sources on behalf of the media device . The user views and or listens a media file on the media device . While viewing and or listening to the media file the user makes a request to the media device to perform a contextual search based on the media file . For example this request can be made by selecting a button or menu item on a user interface for the media device . In some embodiments the user makes a request to the media device to perform a contextual search based on the media file when the user is not viewing or listening to the media file. For example the user can browse a file system or a listing of media files on the media device highlight a desired media file and make a request to the media device to perform a contextual search based on the media file without viewing or listening to the media file. In some embodiments the request to perform the contextual search based on the media file is received at a set top box. In some embodiments the set top box is a set top box for a television set.

The media device receives a request from a user to perform a contextual search based on a media file . In response to the request the media device determines a type of the media file . In some embodiments while determining the type of the media file the media device determines the type of the media file from metadata for the media file. For example the metadata for the media file can be included with the media file. Alternatively the metadata for the media file can be included in data that is separate from the media file e.g. a programming guide a catalog etc. . In some embodiments the metadata includes attributes and or values for the media file. For example the attributes can include but are not limited to an artist name an album name a track name a category etc. The media device then presents a contextual search menu to the user . In some embodiments the contextual search menu includes one or more contextual search query types which are based on the type of the media file. illustrates an exemplary contextual search menu in a user interface for an exemplary media device according to some embodiments. The media device can be any one of the media devices and in respectively. The user interface can include a Now Playing screen which can include but is not limited to one or more of the name of a media file e.g. At Last.ogg currently being accessed by a user e.g. playing stopped paused etc. an name of an artist e.g. Etta James associated with the media file a name of an album e.g. At Last associated with the media file a name of a track e.g. At Last associated with the media file and a time counter for the media file. The contextual search menu can include a number of contextual search query types. For example the contextual search query types can include a Search for more from this artist which can search for media files associated with the artist a Search for more from this album which can search for media files associated with the album a Search for this track which can search for media files associated with the track e.g. variations on the track mixes other covers by other artists etc. a Search for similar artists which can search for media files associated with artists that are similar to the artist and a Search for similar tracks which can search for media files associated with tracks that are similar to the track . In some embodiments the user can select one or more contextual search query types .

Returning to the user receives the contextual search menu and selects a contextual search query type from the contextual search menu .

The media device receives from the user a selected contextual search query type selected from the one or more contextual search query types and queries one or more search modules each associated with one or more content sources to determine which one or more search modules can perform the selected contextual search query type . The media device then generates and returns a list of content sources to the user . In some embodiments a single content source is associated with a single search module. In some embodiments returning the list of content sources to the user includes displaying to the user one or more content sources associated with the one or more search modules that can perform the selected contextual search query type. illustrates an exemplary content source menu in the user interface for the exemplary media device according to some embodiments. The content sources menu includes content sources which the user can select using the user interface for the media device. In some embodiments the user can select one or more content sources to perform the contextual search query type.

Returning to the user receives the list of content sources from the media device and selects one or more content source where the contextual search is to be performed .

The media device then receives the one or more selected content sources from the user selected from the one or more content sources associated with the one or more search modules that can perform the selected contextual search query type . Next the media device requests that one or more search modules that can perform the selected contextual search query type perform the selected contextual search query type against the one or more selected content sources associated with each search module . In some embodiments while performing the selected contextual search query type against the selected content source associated with the one or more search modules each respective search module transmits a search query to the content sources associated with the respective search module wherein the search query is based on attributes and corresponding values of the media file and the selected contextual search query type. For example a search module may transmit a contextual search query as described above with reference to . The media device then receives search results from the one or more search modules . In some embodiments the search results include links to one or more files associated with the one or more selected content sources. For example the files can include one or more of an audio file a video file an image file and or a document. In some embodiments after receiving the search results from the content sources the search modules generate a search results data structure e.g. the search results data structure that is passed to the contextual search API for the media device . The media device then returns the search results to the user . In some embodiments returning the search results to the user includes displaying the search results to the user .

In some embodiments instead of performing operations after receiving the selected contextual search query type the media device queries all of the search modules on the media device and requests that search modules that can perform the selected contextual search query type perform the selected contextual search query type. Thus at operation the media device receives search results from all of the search modules that can perform the selected contextual search query type. In these embodiments the user does not need to select a content source before receiving all search results. Instead in these embodiments the media device can present the search results sorted and or grouped by the content source s from which the search results were received.

The user receives the search results . illustrates an exemplary search result menu in the user interface for the exemplary media device according to some embodiments. The search results menu includes search results which can be selected by the user . In some embodiments the user can select one or more of the search results . The exemplary search results are produced based on the contextual search query type Search for more from this album . . . .

Returning to the user can optionally select a search result . If the selected search result must be purchased before it can be downloaded the media device can prompt the user for payment information e.g. a credit card number a bank account number etc. and or a username and password for an account associated with the content source for the search result.

The media device optionally receives a selected search result from the user selected from the search results obtains one or more media files associated with the selected search result and presents the one or more media files to the user e.g. the media device plays and or displays the media file for the user . In some embodiments the media file is obtained by a search module that generated the search results.

The user can then optionally view the presented media file on the media device . illustrates an exemplary user interface of the media device after the user has selected a search result from the search results according to some embodiments. As illustrated in the Now Playing screen indicates that a media file e.g. Spoonful.mp3 associated with an artist e.g. Etta James an album e.g. At Last and a track e.g. Spoonful is being played on the media device.

In some embodiments only a subset of the operations in is performed. For example the user may only want to view the available content sources for a given media file. Thus only operations are performed.

In some embodiments software running on the device may use stored data to automate some or all of the operations and which require user input. Examples of this stored data can include user preferences obtained before the invocation of the contextual search API e.g. which content sources to search by default and selection criteria created by the designer of the software which invokes the API e.g. a minimum threshold value for the rating attribute of a search result . Automating operations and or enables software to display search results that may be related to content currently being viewed and or listened to during playback or immediately after playback finishes. Automating all steps requiring user interaction allows software using the contextual search API to play media continuously creating a passive viewing experience which is not limited to one content source.

In some embodiments plug in modules e.g. plug in search modules can be downloaded and installed onto the media device. is a flow diagram of a process for installing a plug in search module according to some embodiments. The process may be governed by instructions that are stored in a computer readable storage medium and that are executed by one or more processors of one or more servers. Each of the operations shown in may correspond to instructions stored in a computer memory or computer readable storage medium. The computer readable storage medium may include a magnetic or optical disk storage device solid state storage devices such as Flash memory or other non volatile memory device or devices. The computer readable instructions stored on the computer readable storage medium are in source code assembly language code object code or other instruction format that is interpreted by one or more processors.

In the process a user e.g. the user in uses a media device e.g. the media device in . The user makes a request to the media device to download a plug in search module . The media device receives the request from the user to download a plug in search module and determines a location of the plug in search module . For example the media device can perform a search in a plug ins database to obtain a location of the requested plug in search module. The plug ins database can be a database that is stored on the media device or on a remote device e.g. a server . Alternatively the media device can perform a search in a search engine accessible via the network . The media device then requests the plug in search module from the location and receives the plug in search module from the location and installs the downloaded plug in search module in the memory of the media device .

In some embodiments the contextual search API provides a generic text matching search which can be interpreted by the search and or selection modules in a specified manner. For example a video search module e.g. YOUTUBE plug in may perform a parametric search. Accordingly the video search module interprets the generic text matching search request as a parametric search. In contrast a file system browser may perform a case insensitive space tokenized search. Accordingly the file system browser interprets the generic text matching search request as a case insensitive space tokenized search. In some embodiments the search modules support alternative parameters. For example a music content source may accept an Artist search. Similarly a video content source may also accept an Artist search e.g. searching for a music video etc. .

In some embodiments a search module provides a callback function to inform an application via the contextual search API of the parameters that the search module supports e.g. parameters for parameterized selection and for searching . For example some media devices e.g. an Apple iPod support both music and video. Thus this media device may include at least two search modules or at least two sets of search parameters for the searching and or selecting content local to the media device. For example the search modules can include a local video search module and a local audio search module. If a user wants to listen to music the user can use the media device to in a music player mode. Accordingly the local audio search module is loaded. A music selection window appears. The user can then choose to select music files by parameter. For example the user can browse to the Artist tab. The user can then select an artist an album and then a track. To fulfill the user s request the media device can request values for the parameter Artist for the selected track. All of the local content search modules on the media device that support the Artist parameter can respond with a list of possible values from which to choose. In some embodiments these search modules do not search for video files because the audio search module knows that videos shouldn t be selected by Artist . When the user selects an artist and views the albums the audio search module is queried again but with a restriction on the Artist. Each search module in the media device responds with a list of content which the user can select.

In some embodiments the user can select an artist and request that the media device perform a contextual search based on the media file. For example the contextual search can be Search for this artist . . . The media device can present a list of content sources which can perform the contextual search query e.g. Search for this artist . . . etc. . The user can select a content source e.g. YOUTUBE and play a music video for the artist. In some embodiments after the media device finishes playing the music video the user can view a Playback History dialog box from the video search module to return back to the original media file. Note that the search history can be separate from the contextual search API. When a search is performed and an application wants to save the search to history the application can push the search on a history stack. The search history can include an application ID for the application a string telling that application how to repeat the search and a string for displaying the search to humans.

When the user chooses a contextual search query e.g. Search for this artist . . . etc. the contextual search API identifies the search modules that accept Artist as a search parameter. A video search module can specify that the video search module accepts Artist as a valid parameter. This does not have to be one of the parameters accepted by the content source which the search module queries while the parameters available for browsing content without searching can be determined by the underlying content source the author of a search module may choose to include any parameter for searching a content source. For example the author of a search module for a video content source may choose to accept Artist as a search parameter even though Artist is not explicitly provided by the content source as a parameter for filtering search results if the author of the search module knows that a full text search for a particular artist on this content source is likely to return content related to the artist being searched.

In some embodiments the contextual search API includes the following data structure a content type integer a content UID string and a content URI string . This data structure can be sent to a search module when a contextual search is requested. The content UID can be used as an argument to a method to obtain metadata about a particular content item. For example music files can include metadata information such as Artist Album Track etc. Video files can include metadata information such as a link to the clip thumbnail ratings related videos etc. Thus search module authors can identify the parameters required for browsing and the metadata entries supported by the content source and or media files. The content URI is passed to the search module.

The process is an alternative embodiment of the process illustrated in for obtaining a plug in search module. In the process the request to install the plug in search module comes from a remote server e.g. a server hosted by a media content provider etc. . The process may be invoked when a user browses content hosted on the server e.g. a web page or media files hosted on a server for a content provider etc. the user can be prompted to add the search module. For example the prompt can be Include this catalog in future searches In some embodiments the server can be a peer node e.g. a client or a server or user which provides a list of available media or metadata such as favorites. For example consider a movie download or streaming site that includes multiple users. This site may include an option such as Include this user s favorites in future searches which can be presented upon browsing that user s collection. Similarly consider a peer node such as local computer that connects to the media device . The prompt in this case can be Include your PC collection in future searches. Note that this type of a connection can be initiated by the media device or the connecting computer.

Initially the user can optionally configure the media device with acceptance parameters for downloading and installing a plug in search module . For example the acceptance parameters can include one or more of an accept all parameter a reject all parameter and or a prompt parameter. The media device then optionally stores the acceptance parameters for the plug in search modules .

The process continues when the user browses content on the server . In some embodiments the user can use the media device to browse content on the server . In some embodiments the user can use a computer system e.g. a laptop etc. to browse content on the server . In these embodiments the user can browse the content on the server using an account associated with the media device . For example the user can be logged into an account for a video download site where the account for the user is linked or associated with the media device .

The server may have a plug in search module which can allow the media device to search for and or download content from the server . Thus in some embodiments the server then makes a request to download a plug in search module onto the media device . By allowing the server to make the request the user does not need to make the request to download the plug in search module. Furthermore by allowing the server to make the request the plug in search module for the server can be provided when the user is searching for the content on the server . Thus in some embodiments the plug in search modules are only be stored on the media device while the user is searching for content on the server . When the user browses to a different content source the plug in search module can be unloaded and or uninstalled from the memory of the media device .

In some embodiments the request is made to the media device as shown in . In some embodiments the request is made to the computer system that the user uses to browse the content on the server not shown . The discussion below describes the embodiment where the request is made to the media device . However it should be appreciated that operations can be performed on the computer system that the user uses to browse the content on the server .

The media device receives the request to download the plug in search module from the server . The media device then determines whether the acceptance parameters for downloading and installing plug in search modules indicates that the user is to be prompted before downloading and installing a plug in search module . If the user is to be prompted before downloading and installing a plug in search module yes the media device generates a prompt for the user . For example the prompt can include Do you want to download the plug in search module for . . . 

The user then responds to the prompt . If the response from the user indicates that the user has authorized the download of the plug in search module the media device downloads the plug in search module . In some embodiments the plug in search module is located on the server . In these embodiments the media device downloads the plug in search module from the server . In some embodiments the plug in search module is located on another computer system. In these embodiments the media device determines the location of the plug in search module e.g. the location can be provided by the server obtained from a search etc. and downloads the plug in search module from the location. After downloading the plug in search module the media device installs the plug in search module .

The foregoing description for purpose of explanation has been described with reference to specific embodiments. However the illustrative discussions above are not intended to be exhaustive or to limit the invention to the precise forms disclosed. Many modifications and variations are possible in view of the above teachings. The embodiments were chosen and described in order to best explain the principles of the invention and its practical applications to thereby enable others skilled in the art to best utilize the invention and various embodiments with various modifications as are suited to the particular use contemplated.

