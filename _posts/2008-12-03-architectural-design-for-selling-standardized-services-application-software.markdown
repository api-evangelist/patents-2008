---

title: Architectural design for selling standardized services application software
abstract: Methods, systems, and apparatus, including computer program products, for implementing a software architecture design for a software application implementing selling standardized services. The application is structured as multiple process components interacting with each other through service interfaces, and multiple service operations, each being implemented for a respective process component. The process components include a Customer Quote Processing process component; a Sales Order Processing process component; a Service Confirmation Processing process component; a Financial Accounting Master Data Management processing component; a Customer Invoice Processing process component; an Accounting process component; a Balance of Foreign Payment Management process component; a Due Item Processing process component; and a Payment Processing process component.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08738476&OS=08738476&RS=08738476
owner: SAP AG
number: 08738476
owner_city: Walldorf
owner_country: DE
publication_date: 20081203
---
The subject matter of this patent application relates to computer software architecture and more particularly to the architecture of application software for selling standardized services.

Enterprise software systems are generally large and complex. Such systems can require many different components distributed across many different hardware platforms possibly in several different geographical locations. Thus the architecture of a large software application i.e. what its components are and how they fit together is an important aspect of its design for a successful implementation.

This specification presents a software architecture design for a software application implementing selling standardized services.

In its various aspects the software architecture design can be implemented as methods systems and apparatus including computer program products for implementing a software architecture design for a software application implementing selling standardized services. The software application is structured as multiple process components interacting with each other through service interfaces and multiple service operations each being implemented for a respective process component. The process components include a Customer Quote Processing process component a Sales Order Processing process component a Service Confirmation Processing process component a Financial Accounting Master Data Management processing component a Customer Invoice Processing process component an Accounting process component a Balance of Foreign Payment Management process component a Due Item Processing process component an Expense and Reimbursement Management process component and a Payment Processing process component.

In its various aspects the software architecture design can further be implemented as methods systems and apparatus including computer program products implementing a software architecture design for a software application that is adapted to interact with external software systems through the service operations described in reference to external process components or a subcombination of them.

The subject matter described in this specification can be implemented to realize one or more of the following advantages. Effective use is made of process components as units of software reuse to provide a design that can be implemented reliably in a cost effective way. Effective use is made of deployment units each of which is deployable on a separate computer hardware platform independent of every other deployment unit to provide a scalable design. Service interfaces of the process components define a pair wise interaction between pairs of process components that are in different deployment units in a scalable way.

Details of one or more implementations of the subject matter described in this specification are set forth in the accompanying drawings and in the description below. Further features aspects and advantages of the subject matter will become apparent from the description the drawings and the claims.

As shown in the sell standardized services design includes a Financials deployment unit an Expense and Reimbursement deployment unit a Customer Relationship Management deployment unit and a Customer Invoicing deployment unit .

The Financials deployment unit includes an Accounting process component a Financial Accounting Master Data Management process component a Balance of Foreign Payment Management process component a Due Item Processing process component and a Payment Processing process component . The Accounting process component handles the representation of relevant business transactions for valuation and profitability analysis. The Financial Accounting Master Data Management process component handles the management of financial accounting master data that is used both for accounting and costing purposes.

The Balance of Foreign Payment Management process component handles the collection processing and reporting of receivables and payables according to foreign trade regulations that are used by the financial authority of a country such as the central bank.

The Due Item Processing process component handles the collection management and monitoring of trade receivables or payables and corresponding sales tax or withholding tax.

The Payment Processing process component handles the processing and management of all payments. The Payment Processing process component is also responsible for the associated communication with financial institutions such as banks and provides the primary input for liquidity management.

The Customer Relationship Management deployment unit includes a Customer Quote Processing process component a Sales Order Processing process component and a Service Confirmation Processing process component . The Customer Quote Processing process component handles the processing of quotes to customers offering the delivery of goods according to specific terms. The Sales Order Processing process component handles the processing of customers requests to a seller for the delivery of goods on a specific date for a specific quantity and for a specific price. The Service Confirmation Processing process component handles the reporting back of actual times and quantities for services provided and spare parts consumed related to the execution of a service order.

The Customer Invoicing deployment unit includes a Customer Invoicing Processing process component which invoices customers for the delivery of goods or the provision of services.

The Expense and Reimbursement deployment unit includes an Expense and Reimbursement Management process component . The Expense and Reimbursement Management process component handles the management and monitoring of expenses incurred by employees and the reimbursement of such expenses to employees. It includes the process of verifying the validity of expenses submitted by internal or external employees settling the expenses in conformance with legal requirements and company policy reimbursing the expenses to the employees transferring the expenses to financial accounting and transferring taxable amounts to payroll for internal employees.

The foundation layer described below includes a Pricing Engine processing component and a Payment Authorization process component . The Pricing Engine process component processes price and tax calculation. The Payment Authorization process component provides a reusable service that is used to process an authorization request for a payment made using a payment card at a clearing house. For example the Payment Authorization process component can authorize a payment for goods or services purchased from an online store using a credit card.

A number of external process components described below will be used to describe the architectural design. These include a Supplier Invoice Processing at Customer process component a Due Item Processing at Business Partner process component a Payment Processing at Business Partner process component a Bank Statement Creation at Bank process component a Payment Order Processing at House Bank process component an External Tax Calculation process component and a Settlement Processing at Clearing House process component .

The Supplier Invoice Processing at Customer process component receives messages from the Customer Invoice Processing process component . The Due Item Processing at Business Partner process component receives messages from the Due Item Processing process component . The Payment Processing at Business Partner process component sends and receives messages from the Payment Processing process component . The Bank Statement Creation at Bank process component sends messages to the Payment Processing process component . The Payment Order Processing at House Bank process component receives messages from the Payment Processing process component . The External Tax Calculation process component receives messages from the Pricing Engine process component . The Settlement Processing at Clearing House process component receives messages from the Payment Authorization process component .

Not explicitly represented in the figures is a foundation layer that contains all fundamental entities that are used in multiple deployment units . These entities can be process components business objects and reuse service components. A reuse service component is a piece of software that is reused in different transactions. A reuse service component is used by its defined interfaces which can be e.g. local APIs Application Programming Interfaces or service interfaces.

A process component of an external system is drawn as a dashed line process component . Such a process component represents the external system in describing interactions with the external system however the process component need not represent more of the external system than is needed to produce and receive messages as required by the process component that interacts with the external system.

The connector icon is used to simplify the drawing of interactions between process components . Interactions between process component pairs involving their respective business objects process agents at and operations interfaces and messages at and are described as process component interactions which determine the interactions of a pair of process components across a deployment unit boundary i.e. from one deployment unit to another deployment unit . Interactions between process components are indicated in by directed lines arrows . Interactions between process components within a deployment unit need not be described except to note that they exist as these interactions are not constrained by the architectural design and can be implemented in any convenient fashion. Interactions between process components that cross a deployment unit boundary will be illustrated by the figures of this patent application these figures will show the relevant elements associated with potential interaction between two process components but interfaces process agents at and and business objects that are not relevant to the potential interaction will not be shown.

The architectural design is a specification of a computer software application and elements of the architectural design can be implemented to realize a software application that implements the end to end process mentioned earlier. The elements of the architecture are at times described in this specification as being contained or included in other elements for example a process component is described as being contained in a deployment unit . It should be understood however that such operational inclusion can be realized in a variety of ways and is not limited to a physical inclusion of the entirety of one element in another.

The architectural elements include the business object . A business object is a representation of a type of a uniquely identifiable business entity an object instance described by a structural model. Processes operate on business objects. This example business object represents a specific view on some well defined business content. A business object represents content which a typical business user would expect and understand with little explanation. Business objects are further categorized as business process objects and master data objects. A master data object is an object that encapsulates master data i.e. data that is valid for a period of time . A business process object which is the kind of business object generally found in a process component is an object that encapsulates transactional data i.e. data that is valid for a point in time . The term business object will be used generically to refer to a business process object and a master data object unless the context requires otherwise. Properly implemented business objects are implemented free of redundancies.

The architectural elements also include the process component . A process component is a software package that realizes a business process and generally exposes its functionality as services. The functionality includes the ability to perform all or parts of particular kinds of business transactions. A process component contains one or more semantically related business objects . Any business object belongs to no more than one process component. Process components can be categorized as a standard process component a process component at a business partner a third party process component or a user centric process component. The standard process component named simply process component is a software package that realizes a business process and exposes its functionality as services. The process component at a business partner is a placeholder for a process component or other technology that performs the essential functions of the process component used at a business partner. The third party process component is a process component or other technology that performs the essential functions of the process component provided by a third party. The user centric process component is a process component containing user interface parts.

Process components are modular and context independent. That they are context independent means that a process component is not specific to any specific application and is reusable. The process component is often the smallest most granular element of reuse in the architecture.

The architectural elements also include the operation . An operation belongs to exactly one process component . A process component generally is able to perform multiple operations . Operations can be synchronous or asynchronous corresponding to synchronous or asynchronous process agents e.g. at and which will be described below. Operation may be the smallest separately callable function described by a set of data types used as input output and fault parameters serving as a signature.

The architectural elements also include the service interface referred to simply as the interface. An interface is a named group of operations . Interface typically specifies inbound service interface functionality or outbound service interface functionality. Each operation belongs to exactly one interface . An interface belongs to exactly one process component . A process component might contain multiple interfaces . In some implementations an interface contains only inbound or outbound operations but not a mixture of both. One interface can contain both synchronous and asynchronous operations. All operations of the same type either inbound or outbound which belong to the same message choreography will belong to the same interface. Thus generally all outbound operations directed to the same other process component are in one interface .

The architectural elements also include the message . Operations transmit and receive messages . Any convenient messaging infrastructure can be used. A message is information conveyed from one process component instance to another with the expectation that activity will ensue. An operation can use multiple message types for inbound outbound or error messages. When two process components are in different deployment units invocation of an operation of one process component by the other process component is accomplished by an operation on the other process component sending a message to the first process component. In some implementations the message is a form based message that can be translated into a recognized format for an external process component . The form message type is a message type used for documents structured in forms. The form message type can be used for printing faxing emailing or other events using documents structured in forms. In some implementations the form message type provides an extended signature relative to the normal message type. For example the form message type can include text information in addition to identification information to improve human reading.

The architectural elements also include the process agent e.g. at and . Process agents do business processing that involves the sending or receiving of messages . Each operation will generally have at least one associated process agent. The process agent can be associated with one or more operations . Process agents at and can be either inbound or outbound and either synchronous or asynchronous.

Asynchronous outbound process agents are called after a business object changes e.g. after a create update or delete of a business object instance. Synchronous outbound process agents are generally triggered directly by a business object .

An outbound process agent and will generally perform some processing of the data of the business object instance whose change triggered the event. An outbound agent triggers subsequent business process steps by sending messages using well defined outbound services to another process component which generally will be in another deployment unit or to an external system. An outbound process agent is linked to the one business object that triggers the agent but it is sent not to another business object but rather to another process component. Thus the outbound process agent can be implemented without knowledge of the exact business object design of the recipient process component.

Inbound process agents and are called after a message has been received. Inbound process agents are used for the inbound part of a message based communication. An inbound process agent starts the execution of the business process step requested in a message by creating or updating one or multiple business object instances. An inbound process agent is not the agent of a business object but of its process component. An inbound process agent can act on multiple business objects in a process component.

Synchronous agents and are used when a process component requires a more or less immediate response from another process component and is waiting for that response to continue its work.

Operations and process components are described in this specification in terms of process agents. However in alternative implementations process components and operations can be implemented without use of agents by using other conventional techniques to perform the functions described in this specification.

The architectural elements also include the communication channel template. The communication channel template is a modeling entity that represents a set of technical settings used for communication. The technical settings can include details for inbound or outbound processing of a message. The details can be defined in the communication channel template. In particular the communication channel template defines an adapter type a transport protocol and a message protocol. In some implementations various other parameters may be defined based on a selected adapter type. For example the communication channel template can define a security level conversion parameters default exchange infrastructure parameters processing parameters download URI parameters and specific message properties.

The communication channel template can interact with internal or external process components at and . To interact with an internal process component the communication channel template is received and uploaded to be used with an operation and interface pair. To interact with an external process component the communication channel template is received and uploaded to be used with an external entity such as an external bank business partner or supplier.

The architectural elements also include the deployment unit . A deployment unit includes one or more process components that are deployed together on a single computer system platform. Conversely separate deployment units can be deployed on separate physical computing systems. For this reason a boundary of a deployment unit defines the limits of an application defined transaction i.e. a set of actions that have the ACID properties of atomicity consistency isolation and durability. To make use of database manager facilities the architecture requires that all operations of such a transaction be performed on one physical database as a consequence the processes of such a transaction must be performed by the process components of one instance of one deployment unit .

The process components of one deployment unit interact with those of another deployment unit using messages passed through one or more data communication networks or other suitable communication channels. Thus a deployment unit deployed on a platform belonging one business can interact with a deployment unit software entity deployed on a separate platform belonging to a different and unrelated business allowing for business to business communication. More than one instance of a given deployment unit can execute at the same time on the same computing system or on separate physical computing systems. This arrangement allows the functionality offered by a deployment unit to be scaled to meet demand by creating as many instances as needed.

Since interaction between deployment units is through service operations a deployment unit can be replaced by other another deployment unit as long as the new deployment unit supports the operations depended upon by other deployment units. Thus while deployment units can depend on the external interfaces of process components in other deployment units deployment units are not dependent on process component interaction within other deployment units. Similarly process components that interact with other process components or external systems only through messages e.g. as sent and received by operations can also be replaced as long as the replacement supports the operations of the original .

In contrast to a deployment unit the foundation layer does not define a limit for application defined transactions. Deployment units communicate directly with entities in the foundation layer which communication is typically not message based. The foundation layer is active in every system instance on which the application is deployed. Business objects in the foundation layer will generally be master data objects. In addition the foundation layer will include some business process objects that are used by multiple deployment units . Master data objects and business process objects that should be specific to a deployment unit are assigned to their respective deployment unit .

Interactions between Process Components Sales Order Processing and Financial Accounting Master Data Management 

As shown in the Sales Order Processing process component includes a Sales Order business object . The Sales Order business object represents an agreement between a seller and a customer concerning the sale and delivery of goods as well as any services that are associated with these processes on a specific date for a specific quantity and for a specific price.

The Sales Order business object uses a Synchronous Request Product Valuation from Sales Order to Financial Accounting Master Data outbound process agent to invoke a Request Product Valuation operation . The Request Product Valuation operation is included in a Product and Resource Valuation Out interface . The operation requests a product valuation. The Request Product Valuation operation sends a Product and Resource Valuation Query message to the Financial Accounting Master Data Management process component .

A Synchronous Valuate Product and Resource operation receives the Product and Resource Valuation Query message . The operation is included in a Product and Resource Valuation In interface and can synchronize access to product pricing information. The Synchronous Valuate Product and Resource operation valuates one or more products or resources with internal valuation prices or internal cost rates. For example the product or resource can be valuated as an individual object or in the context of a business transaction. For example the result of the valuation for a product or resources can be a price and an amount optional provided that a quantity was entered for the valuation. The operation uses a Synchronous Valuate Product and Resource synchronous inbound process agent to update either a Material Valuation Data business object a Service Product Valuation Data business object or a Resource Valuation Data business object . The Material Valuation Data business object represents data that references a material or material group for valuating business transactions for cost estimates and for value based management of material inventories. For example business object contains internal valuation prices for a material or material group. The Service Product Valuation Data business object represents data that references a service product or service product group for the valuation of business transactions and for cost estimates and cost accounting. For example business object contains the internal cost rates for a service product or service product group. The Resource Valuation Data business object represents data that references a resource or resource group for the valuation of business transactions and for cost estimates and cost accounting. For example business object contains the internal cost rates for a resource or resource group.

The Financial Accounting Master Data Management process component sends a Product and Resource Valuation Response message to the Sales Order Processing process component .

The Payment Processing process component includes a Payment Allocation business object . The Payment Allocation business object represents an assignment of a payment item to a payment reasons from which the payment item originated. The Payment Allocation business object uses a Request Clearing Maintenance from Payment Allocation to Due Item Processing outbound process agent to invoke a Request Clearing operation or a Request Clearing Cancellation operation . The operations and are included in a Clearing Out interface . The Request Clearing operation requests the clearing of payments within Due Item Processing process component . The Request Clearing Cancellation operation cancels a previously sent clearing request from Due Item Processing process component by reference. If the Request Clearing operation is invoked a Clearing Request message is sent. If the Request Clearing Cancellation operation is invoked a Clearing Cancellation Request message is sent.

A Create Clearing operation receives the Clearing Request message . The Create Clearing operation creates a clearing for business partner initiated payments. The operation uses a Maintain Clearing inbound process agent to update either a Tax Due Payment business object or a Due Payment business object . The Tax Due Payment business object represents a payment request or payment confirmation with regard to tax payables and receivables. The Due Payment business object represents a payment request or payment confirmation with regard to trade receivables and payables.

A Cancel Clearing operation receives the Clearing Cancellation Request message . The Cancel Clearing operation cancels a previously sent clearing request by reference. The operation uses the Maintain Clearing inbound process agent to update either the Tax Due Payment business object or the Due Payment business object . The operations and are included in a Clearing In interface .

The Tax Due Payment business object uses a Confirm Clearing from Tax Due Payment to Payment Processing outbound process agent to invoke a Confirm Clearing operation . The Due Payment business object uses a Confirm Clearing from Due Payment to Payment Processing outbound process agent to invoke the Confirm Clearing operation . The operation sends a confirmation to the Payment Processing process component for a clearing request. The operation is included in a Clearing Out interface . The Confirm Clearing operation sends a Clearing Confirmation message .

The Clearing Confirmation message is received by a Change Payment Allocation based on Clearing Request Confirmation operation . The operation confirms the execution or rejection of a sent clearing request. The operation is included in a Clearing In interface . The Change Payment Allocation based on Clearing Request Confirmation operation uses a Change Payment Allocation based on Clearing Request Confirmation inbound process agent to update the Payment Allocation business object .

Interactions between Process Components Customer Invoice Processing and Balance of Foreign Payment Management 

As shown in the Customer Invoice Processing process component includes a Customer Invoice business object . The Customer Invoice business object represents a binding statement of amounts receivable resulting for example from deliveries to a customer services performed for a customer adjustments to the receivables or credit memos to a customer.

The Customer Invoice business object uses a Notify of Customer Invoice to Balance of Foreign Payments Management outbound process agent to invoke a Notify of Invoice operation . The operation informs the Balance Of Foreign Payment Management process component about an invoice in order to track a receivable from or a payable to a non resident business partner. Alternatively the Customer Invoice business object uses the outbound process agent to invoke a Notify of Invoice Cancellation operation . The operation informs the Balance Of Foreign Payment Management process component about the cancellation of an invoice in order to also cancel information about a receivable from or a payable to a non resident business partner. Operations and are included in a Foreign Receivable Payable Notification Out interface . The Notify of Invoice operation sends a Foreign Receivable Payable Notification message to the Balance Of Foreign Payment Management process component . The Notify of Invoice Cancellation operation sends a Foreign Receivable Payable Cancellation Notification message to the Balance Of Foreign Payment Management process component .

The messages and are received by a Create Foreign Receivable Payable operation and a Cancel Foreign Receivable Payable operation respectively. The Create Foreign Receivable Payable operation creates a foreign receivable or payable from foreign trade. The Cancel Foreign Receivable Payable operation cancels a foreign receivable or payable. The Create Foreign Receivable Payable operation and the Cancel Foreign Receivable Payable operation are both included in a Foreign Receivable Payable Notification In interface .

The operations and use a Maintain Foreign Receivable Payable inbound process agent to create change or cancel a foreign receivable or payable in a Foreign Receivable Payable business object . The Foreign Receivable Payable business object represents a receivable from or payable to a non resident business partner.

As shown in the Service Confirmation Processing process component includes a Service Confirmation business object . The Service Confirmation business object represents a record of services and spare parts that a service technician reports back after performing a service for a customer. The Service Confirmation business object uses a Notify of Service Confirmation to Accounting outbound process agent to invoke a Notify of Service Confirmation operation . The Notify of Service Confirmation operation is included in a Sales and Purchasing Accounting Out interface . The Notify of Service Confirmation operation notifies the Accounting process component about the creation change or deletion of a service confirmation. In some implementations the notification can include notification about the corresponding service provision. The Notify of Service Confirmation operation sends a Sales and Purchasing Accounting Notification message to the Accounting process component .

The Sales and Purchasing Accounting Notification message is received by a Create Accounting Notification operation . The Create Accounting Notification operation is included in a Sales and Order Purchasing Accounting In interface . The Create Accounting Notification operation creates an accounting notification based on production order data received from production. The Create Accounting Notification operation uses a Maintain Subledger Account based on Sales and Purchasing inbound process agent to update an Accounting Notification business object . The Accounting Notification business object represents a notification sent to the Financials deployment unit by an operational component regarding a business transaction. For example the Accounting Notification business object can represent the operational business transaction in a standardized form for all business transaction documents and contains the data needed to valuate the business transaction.

As shown in the Sales Order Processing process component includes the Sales Order business object . The Sales Order business object represents an agreement between a seller and a customer concerning the sale and delivery of goods as well as any services that are associated with these processes on a specific date for a specific quantity and for a specific price.

The Sales Order business object uses a Synchronous Request Creditworthiness from Sales Order to Due Item Processing synchronous outbound process agent to invoke a Request Creditworthiness operation . The operation checks whether a particular sales order is covered by the current credit limit of the customer. The Request Creditworthiness operation is included in a Credit Usage Out interface . The Request Creditworthiness operation sends a Request Creditworthiness Query message to the Due Item Processing process component .

The Request Creditworthiness Query message is received by a Check Creditworthiness operation . The operation is included in a Credit Usage In interface . The Check Creditworthiness operation is used to initiate the execution of a credit check. The operation uses a Check Creditworthiness Based on Trade Receivables Payables Register synchronous inbound process agent to update a Trade Receivables Payables Register business object . The Trade Receivables Payables Register business object represents the register of all trade receivables and payables of a company from or to its business partners. The Check Creditworthiness operation sends a Request Creditworthiness Response message to update the Sales Order Processing process component about the creditworthiness of a party.

As shown in the Customer Invoice Processing process component includes the Customer Invoice business object . The Customer Invoice business object represents a binding statement of amounts receivable resulting for example from deliveries to a customer services performed for a customer adjustments to the receivables or credit memos to a customer.

The Customer Invoice business object uses a Notify of Customer Invoice to Accounting outbound process agent to invoke a Notify of Invoice operation or a Notify of Invoice Cancellation operation . The Notify of Invoice operation and the Notify of Invoice Cancellation operation are included in an Invoice Accounting Out interface . The Notify of Invoice Cancellation operation informs the Accounting process component about the cancellation of invoices or credit memos. The Notify of Invoice operation informs the Accounting process component about the creation of invoices or credit memos. The Notify of Invoice operation sends an Invoice Accounting Notification message . The message is a notification about the creation of a new supplier invoice or a change to an existing supplier invoice. The Notify of Invoice Cancellation operation sends an Invoice Cancellation Accounting Notification message . The message is a notification about the cancellation of a an incoming or outgoing invoice or credit memo or of an item in such a business transaction.

A Create Accounting Document operation receives the Invoice Accounting Notification message . The operation creates an accounting document based on invoice data received from the Customer Invoice Processing process component . In some implementations the received data can first be converted into an accounting notification from which one or more accounting documents are created according to the relevant sets of books. The Create Accounting Document operation is included in an Invoice Accounting In interface .

A Cancel Accounting Document operation receives the Invoice Cancellation Accounting Notification message . The operation cancels an existing accounting document based on cancellation data received from the Customer Invoice Processing process component . In some implementations the received data can be converted into an accounting notification from which one or more reversal accounting documents are created according to the relevant sets of books. The Cancel Accounting Document operation is included in the Invoice Accounting In interface .

The Create Accounting Document operation and the Cancel Accounting Document operation both use a Maintain Accounting Document based on Invoice inbound process agent to update the Accounting Notification business object . The Accounting Notification business object represents a notification sent to the Financials deployment unit by an operational component regarding a business transaction. For example the Accounting Notification business object can represent the operational business transaction in a standardized form for all business transaction documents and contains the data for valuating the business transaction.

As shown in the Sales Order Processing process component includes the Sales Order business object . The Sales Order business object represents an agreement between a seller and a customer concerning the sale and delivery of goods as well as any services that are associated with these processes on a specific date for a specific quantity and for a specific price. The Sales Order business object uses a Request Invoicing from Sales Order to Customer Invoice Processing outbound process agent to invoke a Request Invoicing operation . The operation requests invoicing of a sales order. The point in time and dependence on other invoicing information such as delivery can be decided by invoicing process. The Request Invoicing operation is included in a Request Invoicing Out interface . The Request Invoicing operation generates a Customer Invoice Request Request message .

The Customer Invoice Request Request message is received in a Maintain Customer Invoice Request operation . The Maintain Customer Invoice Request operation creates updates or cancels a customer invoice request. The operation is included in a Request Invoicing In interface . The Maintain Customer Invoice Request operation uses a Maintain Customer Invoice Request inbound process agent to update a Customer Invoice Request business object . The Customer Invoice Request business object represents a request to create one or several customer invoices or to take account of the data for the underlying business document when creating a customer invoice.

The Customer Invoice business object uses a Confirm Customer Invoice to Sales Order Processing outbound process agent to invoke a Confirm Invoicing operation . The operation confirms that invoicing has taken place. The Confirm Invoicing operation is included in a Request Invoicing Out interface . The operation generates a Customer Invoice Issued Confirmation message .

A Change Sales Order based on Customer Invoice operation receives the Customer Invoice Issued Confirmation message . The Change Sales Order based on Customer Invoice operation is included in a Request Invoicing In interface . The Change Sales Order based on Customer Invoice operation updates a sales order based on changes from the customer invoice. The operation uses a Change Sales Order based on Customer Invoice inbound process agent to update the Sales Order business object .

Interactions between Process Components Service Confirmation Processing and Customer Invoice Processing 

As shown in the Service Confirmation Processing process component includes the Service Confirmation business object . The Service Confirmation business object represents a record of services spare parts and expenses that a service technician reports back after performing a service for a customer.

The Service Confirmation business object uses a Request Invoicing from Service Confirmation to Customer Invoice Processing outbound process agent to invoke a Request Invoicing operation . The operation requests invoicing of services provided and spare parts consumed based on information in the service confirmation. The Request Invoicing operation is included in a Request Invoicing Out interface . The Request Invoicing operation sends a Customer Invoice Request Request message to the Customer Invoice Processing process component .

A Maintain Customer Invoice Request operation receives the message . The Maintain Customer Invoice Request operation creates updates or cancels a customer invoice request. The operation is included in a Request Invoicing In interface . The Maintain Customer Invoice Request operation uses a Maintain Customer Invoice Request inbound process agent to update a Customer Invoice Request business object . The Customer Invoice Request business object represents a request to create one or several customer invoices or to take account of the data for the underlying business document when creating a customer invoice.

The Customer Invoice Processing process component includes the Customer Invoice business object . The Customer Invoice business object represents a binding statement of amounts receivable resulting for example from deliveries to a customer services performed for a customer adjustments to these receivables or credit memos to a customer.

The Customer Invoice business object uses a Confirm Customer Invoice to Service Confirmation Processing outbound process agent to invoke a Confirm Invoicing operation . The operation confirms that invoicing has taken place. The Confirm Invoicing operation is included in a Request Invoicing Out interface . The operation sends a Customer Invoice Issued Confirmation message to the Service Confirmation Processing process component .

A Change Service Confirmation based on Customer Invoice operation receives the Customer Invoice Issued Confirmation message . The Change Service Confirmation based on Customer Invoice operation is included in a Request Invoicing In interface . The Change Service Confirmation based on Customer Invoice operation updates a service confirmation based on information from related customer invoices. The operation uses a Change Service Confirmation based on Customer Invoice inbound process agent to update the Service Confirmation business object .

Interactions between Process Components Payment Authorization and Settlement Processing at Clearing House 

As shown in the Payment Authorization process component includes a Payment Card Payment Authorization business object . The Payment Card Payment Authorization business object represents an authorization for a payment made using a payment card. The Payment Card Payment Authorization business object represents an authorization for a payment made using a payment card. In some implementations the authorization can contain payment information including a description of the goods and services purchased the authorization request and the result of the authorization request based on the response from a clearing.

The Payment Card Payment Authorization business object uses a Request Payment Card Payment Authorization synchronous outbound process agent to invoke a Request Payment Authorization operation . The Request Payment Authorization operation is included in a Payment Authorization Requesting Out interface . The Payment Authorization process component receives information from a Processing at Tenant Out Web Services Reliable Messaging WSRM communication channel template . The communication channel template can define protocols and parameters used for communication with an external party. The Request Payment Authorization operation sends to a clearing house a request for authorization of a payment made by a payment card. The Request Payment Authorization operation sends a Payment Card Payment Authorization Request message to the Settlement Processing at Clearing House processing component . The Request Payment Authorization operation receives a Payment Card Payment Authorization Confirmation message from the Settlement Processing at Clearing House processing component .

The Settlement Processing at Clearing House process component receives information from a Processing at Business Partner In Exchange Infrastructure XI communication channel template . The communication channel template can define protocols and parameters used for communication with an external party. The Settlement Processing at Clearing House process component sends information to the Payment Authorization process component using a Processing at Business Partner in SOAP communication channel template . The communication channel template can define protocols and parameters used for communication with an external party.

As shown in the Pricing Engine process component includes a Price and Tax Calculation business object and a Tax Calculation business object . The Price and Tax Calculation business object represents a summary of the determined price and tax components for a business case. The Tax Calculation business object represents a summary of the determined and calculated tax elements of a business case.

The Price and Tax Calculation business object uses a Synchronous Request Product Tax Calculation from Price and Tax Calculation to External Tax Calculation synchronous outbound process agent to invoke a Request Product Tax Calculation operation . The Tax Calculation business object uses a Synchronous Request Product Tax Calculation from Tax Calculation to External Tax Calculation synchronous outbound process agent to invoke the Request Product Tax Calculation operation . The operation requests a product tax calculation from the External Tax Calculation process component . The Request Product Tax Calculation operation is included in an External Tax Calculation Out interface . The Pricing Engine process component sends information to the External Tax Calculation process component using a Processing at Tenant In Web Services Reliable Messaging WSRM communication channel template . The communication channel template can define protocols and parameters used for communication with an external party.

The Request Product Tax Calculation operation sends an External Product Tax Calculation Request message to the External Tax Calculation process component . The Request Product Tax Calculation operation receives an External Product Tax Calculation Confirmation message from the External Tax Calculation process component .

As shown in the Customer Quote Processing process component includes the Customer Quote business object . The Customer Quote business object represents an offer by a seller to a customer for the delivery of goods or services according to fixed terms. In general the offer is legally binding for the seller for a specific period of time.

The Customer Quote business object uses a Synchronous Request Creditworthiness from Customer Quote to Due Item Processing synchronous outbound process agent to invoke a Request Creditworthiness operation . The operation verifies the data or value of a current document against an actual credit standing of customer. The Request Creditworthiness operation is included in a Credit Usage Out interface . The Request Creditworthiness operation sends a Request Credit Worthiness Query message to the Due Item Processing process component .

The Request Credit Worthiness Query message is received by a Check Creditworthiness operation . The operation is included in a Credit Usage In interface . The Check Creditworthiness operation is used to initiate the execution of a credit check. The operation uses a Check Creditworthiness Based on Trade Receivables Payables Register synchronous inbound process agent to update the Trade Receivables Payables Register business object . The Trade Receivables Payables Register business object represents the register of all trade receivables and payables of a company from or to its business partners. The Check Creditworthiness operation sends a Request Credit Worthiness Response message to update the Customer Quote Processing process component about the creditworthiness of a party.

Interactions between Process Components Payment Processing at Business Partner and Payment Processing 

As shown in the Payment Processing at Business Partner process component sends a Payment Advice Notification message to the Payment Processing process component . A Create Payment Advice operation receives the Payment Advice Notification message . The Create Payment Advice operation creates a payment advice sent from a business partner or house bank concerning future payment transactions. The operation is included in an Incoming Payment Advicing In interface . The Payment Processing process component sends information to the Payment Processing at Business Partner process component using a Processing at Tenant In Web Services Reliable Messaging WSRM communication channel template . The communication channel template can define protocols and parameters used for communication with an external party.

The Create Payment Advice operation uses a Maintain Payment Advice inbound process agent to update a Payment Advice business object . The Payment Advice business object represents an announcement of a payment transaction by a business partner to the company specifying payment reasons.

The Payment Processing at Business Partner process component sends information to the Payment Processing process component using a Processing at Business Partner Out Exchange Infrastructure XI communication channel template . The communication channel template can define protocols and parameters used for communication with an external party.

As shown in the Sales Order Processing component includes the Sales Order business object . The Sales Order business object represents an agreement between a seller and a customer concerning the sale and delivery of goods as well as any services that are associated with these processes on a specific date for a specific quantity and for a specific price.

The Sales Order business object uses a Notify of Sales Order to Accounting outbound process agent to invoke a Notify of Sales Order operation . The Notify of Sales Order operation informs the Accounting process component when a sales order is created updated or changed. Also when a sales order contains a service provision accounting can be notified when the service provision is created or cancelled. The operation is included in a Sales and Purchasing Accounting Out interface . The operation sends a Sales and Purchasing Accounting Notification message .

A Create Accounting Notification operation receives the Sales and Purchasing Accounting Notification message . The operation creates an accounting notification based on order data received from the Sales Order Processing process component . The operation is included in a Sales and Order Purchasing Accounting In interface . The Create Accounting Notification operation uses a Maintain Subledger Account based on Sales and Purchasing inbound process agent to update the Accounting Notification business object . The Accounting Notification business object represents a notification sent to the Financial Accounting deployment unit by an operational component regarding a business transaction. The Accounting Notification business object also represents the business transaction in a standardized form for all business transaction documents and contains the data needed to valuate the business transaction.

Interactions between Process Components Payment Processing and Payment Order Processing at House Bank 

As shown in the Payment Processing process component includes a Bank Payment Order business object . The Bank Payment Order business object represents an order to a house bank to make a transfer or direct debit from a specified house bank account to fulfill a payment order.

The Bank Payment Order business object uses a Request File Based Payment Order from Bank Payment Order to House Bank outbound process agent to invoke a Request File based Payment Order operation . The Request File based Payment Order operation instructs a house bank using a file to make a bank transfer a direct debit an outgoing check or a bill of exchange payable. The operation is included in a Payment Ordering Out interface . The Request File based Payment Order operation sends a File Based Collective Payment Order Request message . The File Based Collective Payment Order Request message uses Mapping Entity to transform the file based message type to a Collective Payment Order Request message that is received by the Payment Order Processing at House Bank process component . The Collective Payment Order Request message is in a format that the house bank e.g. a bank located in Germany can understand. The Payment Order Processing at House Bank process component receives information from a Payment Order Request communication channel template . The communication channel template can define protocols and parameters used for communication with an external party.

Interactions between Process Components Customer Quote Processing and Financial Accounting Master Data Management 

The Customer Quote business object uses a Synchronous Request Product Valuation from Customer Quote to Financial Accounting Master Data synchronous outbound process agent to invoke a Request Product Valuation operation . The Request Product Valuation operation is included in a Product and Resource Valuation Out interface . The operation requests a product valuation. The operation sends a Product and Resource Valuation Query message to the Financial Accounting Master Data Management process component .

A Synchronous Valuate Product and Resource operation receives the Product and Resource Valuation Query message . The operation is included in a Product and Resource Valuation In interface . The operation valuates one or more products or resources with internal valuation prices or internal cost rates. In some implementations the product or resource can be valuated as an individual object or in the context of a business transaction. The result of the valuation for a product or resources can be a price and an amount that can be optional provided that a quantity was entered for the valuation. The operation uses a Synchronous Valuate Product and Resource synchronous inbound process agent to update either the Material Valuation Data business object the Service Product Valuation Data business object or the Resource Valuation Data business object . The Material Valuation Data business object represents data that references a material or material group for valuating business transactions for cost estimates and for value based management of material inventories. In particular business object contains internal valuation prices for a material or material group. The Service Product Valuation Data business object represents data that references a service product or service product group for the valuation of business transactions and for cost estimates and cost accounting. For example business object contains the internal cost rates for a service product or service product group. The Resource Valuation Data business object represents data that references a resource or resource group for the valuation of business transactions and for cost estimates and cost accounting. For example business object contains the internal cost rates for a resource or resource group.

The Financial Accounting Master Data Management process component sends a Product and Resource Valuation Response message to the Customer Quote Processing process component .

The Bank Statement Creation at Bank process component receives information from the Payment Processing process component using a Notify Of Bank Account Statement Attachment communication channel template . The communication channel template can define protocols and parameters used for communication with an external party.

Interactions between Process Components Payment Processing and Payment Processing at Business Partner 

As shown in the Payment Processing process component includes a Bill of Exchange Receivable business object . The Bill of Exchange Receivable business object represents a bill of exchange issued either by a company or by a business partner for the benefit of the company. The business object uses an Issue Bill Of Exchange Receivable to Business Partner outbound process agent to invoke an Issue Bill of Exchange operation . The Issue Bill of Exchange operation is included in a Bill of Exchange Receivable Issuing Output Out interface . The Issue Bill of Exchange operation requests the issuing of a bill of exchange. The Issue Bill of Exchange operation sends a Form Bill Of Exchange Receivable Issue Request message that is received by the Payment Processing at Business Partner process component .

Interactions between Process Components Due Item Processing and Due Item Processing at Business Partner 

As shown in the Due Item Processing process component includes the Dunning business object . The Dunning business object represents a reminder or demand from a company e.g. a creditor to a business partner e.g. a debtor to make a payment by a certain point in time. The business object uses a Notify of Dunning to Business Partner outbound process agent to invoke a Notify of Dunning operation . The Notify of Dunning operation is included in a Dunning Output Out interface . The Notify of Dunning operation notifies the business partner about outstanding payments. The Notify of Dunning operation sends a Form Dunning Notification message to the Due Item Processing at Business Partner process component .

The subject matter described in this specification and all of the functional operations described in this specification can be implemented in digital electronic circuitry or in computer software firmware or hardware including the structural means disclosed in this specification and structural equivalents thereof or in combinations of them. The subject matter described in this specification can be implemented as one or more computer program products i.e. one or more computer programs tangibly embodied in an information carrier e.g. in a machine readable storage device or in a propagated signal for execution by or to control the operation of data processing apparatus e.g. a programmable processor a computer or multiple computers. A computer program also known as a program software software application or code can be written in any form of programming language including compiled or interpreted languages and it can be deployed in any form including as a stand alone program or as a module component subroutine or other unit suitable for use in a computing environment. A computer program does not necessarily correspond to a file. A program can be stored in a portion of a file that holds other programs or data in a single file dedicated to the program in question or in multiple coordinated files e.g. files that store one or more modules sub programs or portions of code . A computer program can be deployed to be executed on one computer or on multiple computers at one site or distributed across multiple sites and interconnected by a communication network.

The processes and logic flows described in this specification can be performed by one or more programmable processors executing one or more computer programs to perform functions by operating on input data and generating output. The processes and logic flows can also be performed by and apparatus can also be implemented as special purpose logic circuitry e.g. an FPGA field programmable gate array or an ASIC application specific integrated circuit .

Processors suitable for the execution of a computer program include by way of example both general and special purpose microprocessors and any one or more processors of any kind of digital computer. Generally a processor will receive instructions and data from a read only memory or a random access memory or both. The essential elements of a computer are a processor for executing instructions and one or more memory devices for storing instructions and data. Generally a computer will also include or be operatively coupled to receive data from or transfer data to or both one or more mass storage devices for storing data e.g. magnetic magneto optical disks or optical disks. Information carriers suitable for embodying computer program instructions and data include all forms of non volatile memory including by way of example semiconductor memory devices e.g. EPROM EEPROM and flash memory devices magnetic disks e.g. internal hard disks or removable disks magneto optical disks and CD ROM and DVD ROM disks. The processor and the memory can be supplemented by or incorporated in special purpose logic circuitry.

To provide for interaction with a user the subject matter described in this specification can be implemented on a computer having a display device e.g. a CRT cathode ray tube or LCD liquid crystal display monitor for displaying information to the user and a keyboard and a pointing device e.g. a mouse or a trackball by which the user can provide input to the computer. Other kinds of devices can be used to provide for interaction with a user as well for example feedback provided to the user can be any form of sensory feedback e.g. visual feedback auditory feedback or tactile feedback and input from the user can be received in any form including acoustic speech or tactile input.

The subject matter described in this specification can be implemented in a computing system that includes a back end component e.g. a data server a middleware component e.g. an application server or a front end component e.g. a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the subject matter described herein or any combination of such back end middleware and front end components. The components of the system can be interconnected by any form or medium of digital data communication e.g. a communication network. Examples of communication networks include a local area network LAN and a wide area network WAN e.g. the Internet.

The computing system can include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client server relationship to each other.

While this specification contains many specifics these should not be construed as limitations on the scope of the software architecture design or of what may be claimed but rather as an exemplification of preferred embodiments of the software architecture design. Certain features that are described in this specification in the context of separate embodiments may also be provided in combination in a single embodiment. Conversely various features that are described in the context of a single embodiment may also be provided in multiple embodiments separately or in any suitable subcombination. Moreover although features may be described above as acting in certain combinations and even initially claimed as such one or more features from a claimed combination can in some cases be excised from the combination and the claimed combination may be directed to a subcombination or variation of a subcombination.

The subject matter has been described in terms of particular variations but other variations can be implemented and are within the scope of the following claims. For example the actions recited in the claims can be performed in a different order and still achieve desirable results. As one example the processes depicted in the accompanying figures do not necessarily require the particular order shown or sequential order to achieve desirable results. In certain implementations multitasking and parallel processing may be advantageous. Other variations are within the scope of the following claims.

