---

title: Integrated planning environment for agile software development
abstract: A method of managing agile software development includes displaying assets associated with an agile software development process. Selection of a first link corresponding to a respective asset of the displayed assets is detected; in response, one or more related assets associated with the respective asset are displayed. Selection of a second link corresponding to a first related asset of the one or more related assets is detected; in response, a user interface for editing attributes of the first related asset is displayed, wherein the user interface and the one or more related assets are displayed in a common window.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08739047&OS=08739047&RS=08739047
owner: VersionOne, Inc.
number: 08739047
owner_city: Alpharetta
owner_country: US
publication_date: 20080117
---
The disclosed embodiments relate generally to managing agile software development and more particularly to providing a common interface for asset planning associated with agile software development.

Agile software development refers to software development methodologies in which software is developed incrementally in steps referred to as iterations. Iterations typically are measured in weeks and may vary in length from one week or less to one month or more.

Examples of agile software development methodologies include Scrum Extreme Programming XP Crystal Lean Development AgileUP and Dynamic Systems Development Method DSDM . Agile software development methods also have been referred to as lightweight methods. Methodologies may have their own vocabulary. For example an iteration may be referred to as a sprint or a timebox depending on the methodology. Agile software development is distinguishable from the waterfall model of sequential software development.

Software for implementing agile development methodologies and for tracking and reporting on projects that use agile methodologies can help developers to realize fully the benefits such as flexibility and rapid cycle times offered by these methodologies. Accordingly there is a need for robust agile development management software that is convenient to use.

A method of managing agile software development includes displaying assets associated with an agile software development process. Selection of a first link corresponding to a respective asset of the displayed assets is detected in response one or more related assets associated with the respective asset are displayed. In one aspect of the method selection of a second link corresponding to a first related asset of the one or more related assets is detected in response a user interface for editing attributes of the first related asset is displayed wherein the user interface and the one or more related assets are displayed in a common window. In another aspect of the method selection of a first related asset of the one or more related assets is detected in response attributes of the first related asset are displayed wherein the one or more related assets and the attributes of the first related asset are displayed in a common window.

A system for managing agile software development includes memory a display one or more processors and one or more programs stored in the memory and configured for execution by the one or more processors. The one or more programs include instructions to display assets associated with an agile software development process instructions to detect selection of a first link corresponding to a respective asset of the displayed assets and instructions to display in response to detecting selection of the first link one or more related assets associated with the respective asset. In one aspect the one or more programs also include instructions to detect selection of a second link corresponding to a first related asset of the one or more related assets and instructions to display in response to detecting selection of the second link a user interface for editing attributes of the first related asset wherein the user interface and the one or more related assets are displayed in a common window. In another aspect the one or more programs also include instructions to detect selection of a first related asset of the one or more related assets and instructions to display in response to detecting selection of the first related asset attributes of the first related asset wherein the one or more related assets and the attributes of the first related asset are displayed in a common window.

A computer readable storage medium stores one or more programs configured to be executed by a computer system to manage agile software development. The one or more programs include instructions to display assets associated with an agile software development process instructions to detect selection of a first link corresponding to a respective asset of the displayed assets and instructions to display in response to detecting selection of the first link one or more related assets associated with the respective asset. In one aspect the one or more programs also include instructions to detect selection of a second link corresponding to a first related asset of the one or more related assets and instructions to display in response to detecting selection of the second link a user interface for editing attributes of the first related asset wherein the user interface and the one or more related assets are displayed in a common window. In another aspect the one or more programs also include instructions to detect selection of a first related asset of the one or more related assets and instructions to display in response to detecting selection of the first related asset attributes of the first related asset wherein the one or more related assets and the attributes of the first related asset are displayed in a common window.

Reference will now be made in detail to embodiments examples of which are illustrated in the accompanying drawings. In the following detailed description numerous specific details are set forth in order to provide a thorough understanding of the present invention. However it will be apparent to one of ordinary skill in the art that the present invention may be practiced without these specific details. In other instances well known methods procedures components and circuits have not been described in detail so as not to unnecessarily obscure aspects of the embodiments.

Work item planning includes identifying work to be performed during the software development process. For example features to be included in the software being developed are specified and software defects to be fixed during development are identified. Depending on the agile methodology being used features also may be referred to as stories backlog items or requirements. In general a work item is any item for which the agile development management software platform can track progress such as time spent working on the item.

Release planning includes assigning identified work items e.g. features and defects to particular planned software releases. For example certain features may be included in an initial release with additional features to be added in subsequent releases. Similarly fixing various defects may be scheduled across multiple releases. More generally release planning may include assigning identified work items to levels or nodes in a project hierarchy. The project hierarchy may include projects sub projects releases teams and other internal organizations clients or customers and vendors.

Iteration planning includes assigning work items to iterations. There may be multiple iterations performed to prepare a particular software release iteration planning thus involves specifying what work will be performed in which iterations. For example features and defects are assigned to particular iterations. Within each iteration tasks and tests corresponding to the features and defects are defined. A task is a unit of work performed as part of delivering a feature. In some embodiments a task is defined such that it takes no more than 3 days to perform. A test is an acceptance criterion that a feature must satisfy. Estimates for the time required to complete tests and tasks may be entered.

The actual time spent working on the work items e.g. on the features and defects and their corresponding tasks and tests during an iteration is tracked and compared against the estimates. Progress and status reports may be displayed graphically. For example a dashboard user interface may display multiple graphical reports. Possible graphical reports include burndown charts velocity charts burn up charts Gantt charts parking lot reports scope change defect trending test case status and defect actuals. A burndown chart illustrates remaining work vs. time. Velocity refers to the estimated work per iteration on a project. Scope change refers to a change in requirements such as the addition or deletion of features and defects. Parking lot reports are described below with regard to . Reports may be generated for a specified level or node in the project hierarchy e.g. for a specified project sub project release team or other internal organization client or customer and or vendor. 

The operations in the development process flow are presented sequentially in for purposes of illustration. However the operations need not be performed sequentially. For example the planning operations and may be updated dynamically throughout the agile development process. Similarly tracking may be performed dynamically and may prompt subsequent planning changes. Furthermore multiple operations may be combined into a single operation and additional operations may be added to the flow .

At a high level the agile software development process has various assets associated with it. Nodes in the project hierarchy such as projects sub projects releases teams clients and vendors can be considered assets as can iterations. Work items such as features and defects are assets as are tasks and tests. Assets may be associated with other assets. In some embodiments for example tasks and tests are associated with i.e. are related to corresponding features and defects which in turn may be associated with corresponding iterations.

An asset includes various attributes. In some embodiments each kind of asset e.g. project feature task etc. has a specified set of associated attributes. Types of attributes include text strings numerical values values calculated according to a formula synthetic attributes and associated assets. A first asset associated with a second asset thus is considered an attribute of the second asset. An attribute may be automatically included e.g. hard coded or created for a particular installation in agile development management software or may be customized i.e. user defined .

Attention is now directed to user interfaces for agile development management software. In some embodiments user interfaces are shown in a browser window. In some embodiments user interfaces are shown by a stand alone application.

Agile development management software can display groups of assets of a particular type. For example groups of assets associated with work item planning release planning or iteration planning may be displayed.

The displayed assets in the group are associated with a particular project hierarchy node displayed for example in a project selection window .

Assets may be added to the group for example by selecting an add story i.e. add feature link or an add defect link . In general a user interface for displaying a group of assets may include multiple links or icons for adding multiple respective kinds of assets or may include a single link or icon for adding assets. In some embodiments selection of a link or icon for adding assets results in the display of a separate user interface for adding assets not shown .

Assets displayed in the group also may be edited for example by selecting an edit link e.g. corresponding to a respective asset. In some embodiments selection of an edit link or corresponding icon results in the display of a separate user interface for editing assets as described below with regard to .

The displayed assets include a set of attributes selected for display such as title ID owner status priority estimate and project . Some of the attributes are also assets such as project . Some of the values for the attributes are blank for example no owner status priority or estimate is shown for a number of assets including feature .

Assets to be displayed in the group may be filtered according to one or more attributes using filters .

A subset of the displayed attributes includes user input fields to accept edits to attribute values. For example a user may select a priority from a drop down box and may enter a work or size estimate e.g. an estimate of time in a text input box .

Upon detecting user selection of a customization link or icon such as customize link a customization user interface is displayed that shows a group of available attributes as illustrated in in accordance with some embodiments. In the example of the group is shown as a list. The available attributes include the set of attributes selected for display and may include additional attributes that are not currently selected for display. In some embodiments the group of available attributes may be viewed directly from the user interface for example via a drop down menu instead of through the customization user interface .

The customization user interface allows a user to select or de select attributes for display. Display selection boxes e.g. and associated with respective attributes e.g. project and attachment count indicate which attributes are currently selected for display. For example the checked display selection boxes in correspond to the set of attributes displayed for the group of assets in user interface . The user may select an attribute i.e. add the attribute to the set selected for display or de select an attribute i.e. remove the attribute from the set selected for display by clicking on the corresponding display selection box e.g. with a mouse or other selection device . For example clicking on display selection box deselects the project attribute as illustrated in . Similarly clicking on display selection box selects the attachment count attribute for display. Alternate means of selecting and deselecting attributes are possible such as clicking on a radio button associated with the attribute or clicking on the attribute itself.

Changes to the set of selected attributes may be applied by selecting an apply icon or may be canceled by selecting a cancel icon . Once the changes have been applied the updated set of selected attributes is included in displays of groups of assets of the same type as the group . For example when a work item planning group is displayed subsequent to de selection of the project attribute the project attribute is not included in the display as illustrated in in accordance with some embodiments. If the attachment count attribute had been selected the attachment count attribute would be included in subsequent display of the group .

The customization user interface also allows a user to specify whether to permit particular attributes to be edited. Editing selection boxes e.g. and associated with respective attributes e.g. status and priority indicate which attributes are in the subset to be displayed with user input fields. For example the checked editing selection boxes and in correspond to the subset of attributes i.e. attributes and with user input fields in user interface . The user may select an attribute for editing i.e. add the attribute to the subset or de select an attribute for editing i.e. remove the attribute from the subset by clicking on the corresponding editing selection box e.g. with a mouse or other selection device . In the example of adding status to the subset e.g. by clicking on box would cause subsequently displayed work item planning groups to include user input fields for the status attribute . Removing priority from the subset e.g. by clicking on box would cause subsequently displayed work item planning groups not to include user input fields for the priority attribute .

Customized settings entered in the user interface regarding the display of attributes and the ability to edit attributes may apply only to a particular user or may apply to multiple users. For example a customized setting may be created as a system default for all users viewing a particular type of group of assets e.g. a work item planning group a release planning group or an iteration planning group . In some embodiments a user must have particular privileges such as system administrator privileges to create a system default customized setting. More generally customized settings may be created that serve as a default for all users at or below a particular node in the project hierarchy. For example a customized setting may serve as a default for all users on a particular team or on a group of teams or for all users working on a particular project sub project or release. In some embodiments a user creating a particular default setting must have appropriate corresponding privileges. For example authority to create a customized default for a particular team could be limited to the team leader.

In the user interface the level of application of the customized setting is specified using a drop down menu . The system defaults level shown as selected in the drop down menu indicates that the customized setting applies to all users viewing groups of the corresponding type. In some embodiments the system defaults option will not be displayed in the drop down menu unless the user has already logged on as a system administrator or with other appropriate privileges.

In some embodiments a user can override a default customized setting e.g. a system default by creating a user specific customized setting also known as a personalized setting. For example the user may use the drop down menu to specify that a customized setting created via user interface is specific to that user. This personalized setting then will control the display and ability to edit attributes for assets in a group of a particular type. If a user does not have a personalized setting the default customized setting will control the display and ability to edit attributes associated with the group. In some embodiments a system administrator or other user with appropriate privileges may specify for a particular default customized setting whether individual users are permitted to override the default. In some embodiments individual users are permitted to override the default with regard to attributes to be displayed but not with regard to attributes to be edited.

Attention is now directed to accessing and displaying user interfaces for viewing an asset s attributes and related assets. like is a schematic screenshot of a user interface displaying a group of assets associated with an agile software development process in accordance with some embodiments. Specifically the user interface of displays a group of assets associated with iteration planning as indicated by selection of an iteration planning tab . The iteration planning group includes features e.g. Enter RMA and defects e.g. Inventory Levels Off in Warehouse as indicated by features icons and defects icons . The displayed assets in the group are associated with a particular iteration . The displayed assets in the group also are associated with a particular project hierarchy node displayed for example in the project selection window . The project hierarchy node corresponds to a project entitled Call Center which includes multiple software releases e.g. Release 1.0 and Release 2.0 and has multiple teams e.g. Team A and Team B working on releases. Each release and each team may be selected as a project hierarchy node in the project selection window . In some embodiments in response to selection of a particular project hierarchy node the displayed group of assets is updated to display assets associated with the selected project hierarchy node. For example in response to selection of a particular release or team the displayed group of assets is updated to display assets associated with iteration planning for the selected release or team.

Assets to be displayed in the group may be filtered according to one or more attributes using filters . Assets may be added to the group by for example selecting an add backlog item link or an add defect link .

The displayed assets in the group include a set of attributes such as title ID owner status estimate detail estimate and to do . The estimate and detail estimate attributes provide estimates of quantities of work associated with assets while the to do attribute provides estimates of quantities of work remaining to be done for assets. As discussed with regard to some of the attributes may be assets associated with a displayed asset in the group i.e. may be related assets .

In some embodiments an asset displayed in the group may be edited by selecting a link corresponding to the asset which results in display of a separate user interface UI for editing the asset. For example selection of the plan backlog item link for the enter RMA asset results in display of a window . The window displays attributes of the enter RMA asset such as ID title project iteration feature group description and estimate. In some embodiments the attributes are displayed in a list.

The window also displays related assets associated with the enter RMA asset . In this example the related assets include tasks and tests associated with the enter RMA asset which is a feature. Attributes of the related assets e.g. title ID owner and detail estimate are displayed.

The related assets may be edited by selecting a corresponding link. For example related asset Enter RMA Using Order Number may be edited by selecting an edit link . In some embodiments in response to selection of the edit link a UI for editing the related asset is displayed in the window along with the attributes and related assets . The UI includes user input fields e.g. and to display and receive edits to attributes of the related asset . In some embodiments the UI includes drop down menus e.g. to select values for attributes of the related asset . In some embodiments the user may enter values directly into the user input fields. Edits may be applied by selecting the OK link or canceled by selecting the cancel link . In some embodiments upon selection of the OK link display of the UI is ceased and displayed attribute values for the edited related asset are updated in response to the edits. The user then may select another edit link associated with another related asset resulting in display of another UI within the window for displaying and editing the newly selected related asset. In some embodiments multiple UI s for displaying and editing multiple respective related assets may be open simultaneously within the window and may be accessed simply by scrolling within the window .

In some embodiments a new related asset may be added via the window . For example a new task or test for the enter RMA asset may be added by selecting the add task link or add test link . In some embodiments selection of the add task link or add test link results in display within the window of a user interface analogous to UI for which the user input fields e.g. and are blank. The user may enter attribute values for the new task or test through the user input fields. In some embodiments the user may specify attribute values via drop down menus e.g. . In some embodiments creation of the new task or test is completed by selecting the OK icon or canceled by selecting the cancel icon . In some embodiments upon selection of the OK icon display of the UI for creating the new related asset is ceased and the new related asset is displayed among the related assets .

In some embodiments the drop down menu displays asset templates from which a related asset may be created. Asset templates are discussed below with regard to .

The window thus provides a single integrated interface through which a user may view multiple levels of information for an asset in addition to performing edits. For example the user may view attributes of the asset itself and of related assets and may edit or create related assets. The integrated interface allows the user to perform these tasks without having to browse through a succession of windows.

Attention is now directed to creation and use of asset templates. In some embodiments asset templates may be defined and used to simplify creation of new assets. is a schematic screenshot of a user interface displaying available asset templates in accordance with some embodiments. The UI may be accessed for example by selecting one or more links icons or tabs e.g. planning link setup tab and templates tab . In some embodiments asset templates displayed in the UI are separated by asset type backlog item templates for example are listed separately from defect templates . Asset templates displayed in the UI also may be associated with a particular project hierarchy node such as the Call Center project hierarchy node . In the UI one defect template My High Priority Defects and no backlog item templates have been defined for the Call Center project.

In some embodiments an asset template includes identifying attributes such as a title and or an ID and also includes values for one or more additional attributes such as status priority estimate or project . Other examples of additional attributes include any of the attributes in the group . The values for these additional attributes serve as default values for assets generated from the template. For example attributes for the template include a High priority and the Call Center project . An asset that is created from the template will have a High priority and will be associated with the Call Center project unless otherwise edited. This template thus enables users to create High priority defects for the Call Center project without having to enter the priority and project for each defect.

In some embodiments an asset template includes related assets to be associated with an asset created from the asset template. For example a template for a feature e.g. a backlog item or defect may include one or more related tasks e.g. Verify Defect or tests to be associated with the feature or defect created from the template. In some embodiments the template defines values for attributes of the related assets. For example the task has an owner Jeff . Creation of an asset from a template with a related asset results in creation of the related asset as well the related asset specified in the template is automatically created and associated with the asset created from the template. The related asset created in this manner includes attribute values as specified in the template.

In the UI a related asset may be added to the template by selecting the add link and may be edited by selecting a corresponding edit link . Inclusion of related assets in an asset template spares users from having to create related assets for each newly created asset.

To edit the asset template the user selects the edit button . To cease display of the asset template the user selects the close button .

Once all desired attribute values have been entered the save new defect button may be selected to create an asset having the attribute values for the template as well as other attribute values entered through UI . In some embodiments when creating an asset from the template the user may edit the attribute values associated with the template. For example the user may assign a different owner than Jeff or may assign a different priority than High. 

Alternatively once all desired attribute values have been entered the save template button may be selected to save the attribute values associated with the template. The saved attribute values become default values for future assets created from the template.

Attention is now directed to displaying reporting data with parking lot reports. In some embodiments parking lot reports display degrees of completion for multiple groups of assets in an agile software development project. In some embodiments the assets are grouped by function or by various topics which may be user defined. For example the assets may be features that are grouped into feature sets. Feature sets sometimes referred to as themes may be grouped in turn into parent feature sets or parent themes.

The parking lot report displays blocks corresponding to respective groups of assets that satisfy the filter criteria. In some embodiments a respective block displays a title of the respective group of assets and a graphic showing a degree of completion of assets within the group. For example if the group is a feature set the graphic shows a degree of completion of features within the feature set. The graphic is shown as a bar chart in other embodiments another graphic showing a degree of completion may be displayed such as a gauge or line chart. In the example of UI the bar charts indicate that the Engineering group of block is 40 complete the Feature Enhancements group of block is 75 complete the Performance group of block is 0 complete the Strategic Features group of block is 80 complete and the Usability group of block is 0 complete.

In some embodiments additional information regarding a respective group is displayed in the respective block such as an owner a number of assets in the group and a count of work units e.g. an estimate of man hours .

In some embodiments in addition to or instead of displaying the graphic or the completion percentage each block is displayed with a background color corresponding to a degree of completion of the respective group of assets. For example the block of a group that is 100 complete may be displayed in green the block of a group that is 0 complete may be displayed in red and blocks of groups that are partially complete may be displayed in other colors corresponding to ranges of completion percentages. In some embodiments each block is displayed with a background color corresponding to a comparison of the degree of completion to a schedule e.g. a comparison of the degree of completion to a planned degree of completion for the group at the time when the report is generated . For example the block of a group that is on schedule may be displayed in green the block of a group that is slightly behind schedule may be displayed in yellow and the block of a group that is significantly behind schedule may be displayed in red. In some embodiments a group is on schedule if its degree of completion equals or exceeds the planned degree of completion a group is slightly behind schedule if its degree of completion is less than the planned degree of completion by no more than a specified amount and a group is significantly behind schedule if its degree of completion is less than the planned degree of completion by more than the specified amount.

Because a user interface for specifying filter criteria is implemented into the parking lot report UI the UI enables on the fly generation of customized parking lot reports. A user may view a parking lot report for a particular project and then drill down on the report by generating subsequent parking lot reports filtered by user specified attributes. For example the user may generate parking lot reports for particular teams releases iterations and or parent themes within the project. Multiple parking lot reports with distinct filter criteria may be generated in quick succession. The user also may quickly and easily generate successive parking lot reports for different projects. For example a manager may use the UI to review the status of multiple projects by successively selecting various projects in the project selection window .

In some embodiments the particular type is selected from the group consisting of work item planning release planning and iteration planning . A user may select the particular type by for example selecting a tab e.g. work item planning tab selecting a type from a drop down menu or using similar well known methods of selection for graphical user interfaces.

In some embodiments the group of assets includes at least one asset selected from the group consisting of project iteration feature defect story backlog item requirement test and task . For example the group may include one or more features and one or more defects as shown for group .

While the group of assets is being displayed a request by a first user is detected as shown in . In some embodiments the first user is a system administrator or other user with privileges to create a customized default setting. In response to detecting the request by the first user a group of available attributes is displayed including the first set. In some embodiments the available attributes include at least one attribute selected from the group consisting of priority owner status estimate e.g. work or size estimate identification code and project . For example the customization user interface shows a group of available attributes . In the customization user interface assets in the first set are indicated by check marks in corresponding display selection boxes e.g. .

De selection of an attribute from the first set is detected . For example clicking on the display selection box for the project attribute in the customization user interface results in de selection of the project attribute from the first set as illustrated in .

For other users subsequently accessing respective groups of assets of the particular type the first set of attributes is displayed for assets in the respective groups wherein the first set does not include the deselected attribute. For example after de selection of the project attribute a user accessing a work item planning group will not be shown the project attribute.

In addition to or instead of detecting de selection of an attribute from the first set selection of an additional attribute for inclusion in the first set is detected . For exampling clicking on the display selection box for the attachment count attribute results in selection of the attachment count attribute for inclusion in the first set.

For other users subsequently accessing respective groups of assets of the particular type the first set of attributes is displayed for assets in the respective groups wherein the first set includes the additional attribute. For example after selection of the attachment count attribute a user accessing a work item planning group will be shown the attachment count attribute.

The method thus enables creation of default customized settings such as system defaults for viewing groups of assets. While the method includes a number of operations that appear to occur in a specific order it should be apparent that the method can include more or fewer operations which can be executed serially or in parallel. An order of two or more operations may be changed and two or more operations may be combined into a single operation. For example while operations and are shown as occurring in parallel either operations or may be omitted. Alternately operations and may both be performed prior to operations and which subsequently are performed in a single operation. Other variations are possible.

When a second user accesses a respective group of assets of the same type as the group displayed in operation a determination is made as to whether the second user has an associated second set of attributes selected for display. If the user does not have an associated second set No the first set of attributes is displayed for assets in the respective group wherein the first set does not include the deselected attribute. If the user has an associated second set Yes the second set of attributes is displayed for assets in the respective group.

In a variant of the method selection of an additional attribute for inclusion in the first set is detected . When the second user subsequently accesses the respective group of assets of the same type as the group displayed in operation the determination is made as to whether the second user has an associated second set of attributes selected for display. If the second user does not have an associated second set the first set of attributes is displayed for assets in the respective groups wherein the first set includes the additional attribute. If the user has an associated second set the second set of attributes is displayed for assets in the respective group.

The method thus allows users either to use default customized settings or to create personalized settings that override the default.

User input fields to edit attributes in a first subset of the set of attributes are displayed . For example user input fields e.g. and corresponding to attributes priority and estimate are displayed in user interface . In some embodiments the first subset includes at least one attribute selected from the group consisting of priority owner status estimate e.g. work or size estimate identification code and project .

De selection of an attribute from the first subset by a first user is detected . For example clicking on the editing selection box for the priority attribute in the customization user interface would result in de selection of the priority attribute from the first subset.

For other users subsequently accessing respective groups of assets of the particular type user input fields to edit the attributes in the first subset are displayed wherein the first subset does not include the deselected attribute. For example after de selection of the priority attribute a user accessing a work item planning group will not be shown a user input field for the priority attribute.

In addition to or instead of detecting de selection of an attribute from the first subset selection of an additional attribute by the first user for inclusion in the first subset is detected . For exampling clicking on the editing selection box for the status attribute would result in selection of the status attribute for inclusion in the first subset.

For other users subsequently accessing respective groups of assets of the particular type user input fields to edit the attributes in the first subset are displayed including user input fields for the additional attribute. For example after selection of the status attribute a user accessing a work item planning group will be shown user input fields to edit the status attribute.

The method thus enables creation of default customized settings such as system defaults to enable editing of specified attributes. While the method includes a number of operations that appear to occur in a specific order it should be apparent that the method can include more or fewer operations which can be executed serially or in parallel. An order of two or more operations may be changed and two or more operations may be combined into a single operation. For example while operations and are shown as occurring in parallel either operations or may be omitted. Alternately operations and may both be performed prior to operations and which subsequently are performed in a single operation. Other variations are possible.

When a second user accesses a respective group of assets of the same type as the group displayed in operation a determination is made as to whether the second user has an associated second subset of attributes. If the second user does not have an associated second subset No user input fields are displayed to edit the attributes in the first subset wherein the first subset does not include the deselected attribute. If the second user has an associated second subset Yes user input fields are displayed to edit the attributes in the second subset for assets in the respective group.

In a variant of the method selection of an additional attribute by the first user for inclusion in the first subset is detected . When the second user subsequently accesses the respective group of assets of the same type as the group displayed in operation the determination is made as to whether the second user has an associated second subset of attributes. If the second user does not have an associated second subset user input fields are displayed to edit the attributes in the first subset including user input fields for the additional attribute. If the second user has an associated second subset user input fields are displayed to edit the attributes in the second subset for assets in the respective group.

The method thus enables editing of specified attributes in accordance with either default customized settings or personalized settings.

Selection of a first link corresponding to a respective asset of the displayed assets is detected . For example selection of an edit link or a plan backlog item link is detected. In some embodiments the respective asset is a feature or defect .

In response to detecting selection of the first link one or more related assets associated with the respective asset are displayed . For example in response to detection of the plan backlog item link for the enter RMA asset related assets associated with the enter RMA asset are displayed. In some embodiments the related assets include tasks or tests.

In some embodiments attributes of the respective asset are displayed in a common window with the related assets. For example attributes of the enter RMA asset are displayed along with the related assets in the window .

Selection of a second link e.g. edit link corresponding to a first related asset e.g. of the one or more related assets is detected .

In response to detecting selection of the second link a user interface e.g. for editing attributes of the first related asset is displayed . The user interface and the one or more related assets are displayed in a common window e.g. . In some embodiments the attributes of the first related asset include at least one of a title an owner an estimate e.g. a work or size estimate and an identification code. The displayed user interface for editing attributes may receive user input to edit a value of an attribute e.g. through user input field or in response to which the value of the attribute is updated.

In some embodiments selection of a third link e.g. add task or add test is detected . In response a user interface for creating a new related asset associated with the respective asset is displayed in the common window. For example a user interface analogous to UI is displayed with the user input fields blank.

The method provides a user friendly process for viewing an asset s attributes and related assets and for editing or creating related assets in a single integrated interface. The user can perform these tasks without having to browse through a succession of windows.

In response to detecting selection of the first related asset attributes of the first related asset are displayed in a common window with the one or more related assets. For example attributes of the asset are displayed in user input fields and in UI .

In some embodiments selection of a second link e.g. add task or add test is detected . In response a user interface for creating a new related asset associated with the respective asset is displayed in the common window. For example a user interface analogous to UI is displayed with the user input fields blank.

The method provides a user friendly process for viewing multiple levels of information regarding an asset including the asset s attributes and related assets as well as attributes of the related assets. The user can view this information without having to browse through a succession of windows.

Values of one or more attributes e.g. project Call Center owner Jeff and High priority for the asset template are received . In some embodiments at least one of the one or more attributes is a project title owner priority or status . In some embodiments at least one of the one or more attributes is a related asset e.g. task .

The asset template is created . For example in response to detecting selection of the save template icon the My High Priority Defects template is created.

Upon detecting an action to select the asset template creation is initiated of an asset of the selected asset type and having the received values. In some embodiments the action includes selection of a link e.g. generate defect corresponding to the asset template. In some embodiments the action includes a command received through an application programming interface API .

In some embodiments initiating creation of the asset includes displaying a GUI for specifying attribute values e.g. UI . The GUI displays the received values as defaults e.g. project Call Center owner Jeff and High priority . In some embodiments the user may edit the default values. In some embodiments creation of the asset is completed upon detection of another action e.g. selection of save new defect button .

Alternatively in some embodiments upon detecting the action to select the asset template the asset is created without displaying a GUI for specifying attribute values.

Asset templates created in accordance with the method provide a simple and convenient way to create new assets without repeatedly entering common attribute values. In some embodiments the asset templates also enable the automatic creation of related assets. Operation may be performed repeatedly to create multiple assets from the same asset template.

In some embodiments filter criteria include at least one of a team an iteration a release a project a product line a feature set and a work item. In some embodiments the filter criteria are received through an API.

A set of asset groups corresponding to the filter criteria is determined . For each asset group in the set a degree of completion is displayed . In some embodiments the degree of completion is displayed in a bar chart e.g. gauge or line chart. In some embodiments a color e.g. a background color of a block corresponding to the degree of completion is displayed . In some embodiments a completion percentage e.g. is displayed .

In some embodiments a count of work units e.g. is displayed for a respective asset group in the set. In some embodiments a count of assets e.g. within a respective asset group in the set is displayed .

The method provides a user friendly method of generating customized parking lot reports on the fly. The method may be performed repeatedly with distinct filter criteria to generate multiple distinct parking lot reports such as multiple parking lot reports for distinct project hierarchy nodes or multiple parking lot reports filtered by various attributes at a given project hierarchy node.

The server system includes a server and a database . Server serves as a front end for the server system . Server sometimes called a front end server provides an interface between the server system and the client systems . In some embodiments the functions of server may be divided or allocated among two or more servers.

The server system stores data relating to the agile development process including asset data asset template data and customization data . Asset data includes attributes for respective assets. An exemplary data structure for asset data is illustrated in described below. Asset template data includes attributes for respective asset templates. An exemplary data structure for asset template data is illustrated in described below. Customization data includes the level of the customization e.g. system default or personalized the type of asset group to which the customization applies and data indicating which available assets are selected for display and for editing via user input fields. An exemplary data structure for customization data is illustrated in described below.

It should be appreciated that the server system including the server and the database may be implemented as a distributed system of multiple computers. However for convenience of explanation the server system is described herein as being implemented on a single computer which can be considered a single logical system.

A user interfaces with the server system at a client system or device hereinafter called the client system for ease of reference . The client system includes a computer or computer controlled device such as a personal digital assistant PDA cellular telephone or the like. The computer typically includes one or more processors not shown memory which may include volatile memory not shown and non volatile memory such as a hard disk drive and a display . The computer may also have input devices such as a keyboard and a mouse not shown .

In some embodiments a user may interact with the server system via an agile development user interface presented on the display . Examples of user interfaces are illustrated in .

In some embodiments the agile development user interface may be a web based user interface. That is the user interface includes one or more web pages. It is noted that a single web page can contain multiple frames each of which may appear when displayed by a browser application to be a distinct web page. The web page s may be written in the Hypertext Markup Language HTML Extensible Markup Language XML or any other suitable language for preparing web pages and may include one or more scripts for interfacing with the server system . For example the web page s may include a JavaScript application that interfaces with the server system via an application programming interface API . The JavaScript application receives asset data customization data asset template data and reporting data from the server system manages the rendering of that data at the client and also performs the client side aspects of other tasks such as marking attributes as selected or de selected updating attribute values according to data entered in user input fields and transmitting user requests to the server system .

In some other embodiments the agile development user interface may be a part of a stand alone application that is run on the client system . The standalone application may interface with the server system via an application programming interface API . Alternately instead of using a client sever model the agile development management software may be installed and used on a single computer combining the functionalities of the server system and client system .

In some embodiments the agile development management module includes a local database for storing data sent by the server e.g. asset data customization data asset template data and reporting data an asset display module for displaying groups of assets e.g. via UI or UI and for displaying an asset s attributes and related assets e.g. via window an asset editing module for updating attribute values e.g. in accordance with data entered via user input fields an asset template module for creating displaying and editing templates and for creating assets from templates e.g. via UIs and a customization module for enabling creation of customized settings e.g. via customization user interface a reporting module for displaying reporting e.g. via UI and a server interface module for interfacing with server computer . In some embodiments the server interface module includes a cache for storing data to be transmitted to the server.

In some embodiments the agile development management module may be a script based module embedded in a web page served from the server system . The web page may be rendered by a client application such as a web browser at the client computer . When the web page is rendered the agile development management module is executed thereby providing a web based interface to the server system . The script based agile development management module may be written in JavaScript AJAX ECMAScript Perl or any other suitable scripting language.

In some other embodiments the agile development management module may be a standalone application stored in memory of the client computer .

Each of the above identified elements in may be stored in one or more of the previously mentioned memory devices. Each of the above identified modules corresponds to a set of instructions for performing a function described above. The above identified modules or programs i.e. sets of instructions need not be implemented as separate software programs procedures or modules and thus various subsets of these modules may be combined or otherwise re arranged in various embodiments. In some embodiments memory may store a subset of the modules and data structures identified above. Furthermore memory may store additional modules and data structures not described above.

In some embodiments the application interface includes a presentation layer for rendering user interfaces e.g. accessed by a client system .

In some embodiments the customization data includes three levels of customization settings used by the presentation layer to render user interfaces. A base level includes settings that are always included in the agile development management software. An installation level includes settings that are created for a particular installation of the agile development management software. For example the installation level may include customization settings created via user interface . A user level includes personalized settings. Additional levels are possible such as levels corresponding to a particular project hierarchy node e.g. to a particular team . In some embodiments settings at a given level override settings at lower levels. For example installation settings override base settings and user settings override both installation and base settings. In some embodiments the presentation layer first applies base level settings then overlays any installation level overrides and finally overlays any user level overrides.

Each of the above identified elements in may be stored in one or more of the previously mentioned memory devices. Each of the above identified modules corresponds to a set of instructions for performing a function described above. The above identified modules or programs i.e. sets of instructions need not be implemented as separate software programs procedures or modules and thus various subsets of these modules may be combined or otherwise re arranged in various embodiments. In some embodiments memory may store a subset of the modules and data structures identified above. Furthermore memory may store additional modules and data structures not described above.

Although shows a server computer is intended more as a functional description of the various features which may be present in a set of servers than as a structural schematic of the embodiments described herein. In practice and as recognized by those of ordinary skill in the art items shown separately could be combined and some items could be separated. For example some items shown separately in could be implemented on single servers and single items could be implemented by one or more servers.

The agile development management database stores data in various tables. For example an Asset Type table includes an entry for each kind of asset such as feature defect task or test. An Attribute Definition table defines the attributes associated with each kind of asset listed in the Asset Type table. A Synthetic Attribute table references formulas used to calculate synthetic attributes. An Attribute Security Check table contains references to operations used to determine whether a user may access or modify particular attributes. For attributes that are associated assets a Relation Definition table defines relationships between assets. In addition a Many to Many Relation Definition table may contain relationship information for assets in many to many relationship with other assets. Other tables may specify business rules for various assets.

Attribute values for particular assets are stored in asset tables as illustrated in in accordance with some embodiments. In some embodiments a table corresponds to a particular kind of asset such as feature defect task or test. The asset table includes a row for each respective asset stored in the table. Each row includes fields that contain values for attributes of the respective asset as defined in the Attribute Definition table. For example the attribute fields include title asset ID project owner and various other attributes . Other possible attribute fields include without limitation the attributes listed in group such as status priority estimate and attachment counts. The asset table also includes fields to specify attributes that are associated assets. For example if a respective asset is a feature or defect fields may specify tasks and tests associated with the feature or defect for example by providing the asset IDs of the tasks and tests. In another example a field may specify an iteration to which an asset is assigned.

In some embodiments values for user defined customized attributes are stored in separate tables for specific types of custom attributes. For example numeric customized attributes are stored in a first table text customized attributes are stored in a second table boolean customized attributes are stored in a third table and so on.

Customization data such as the three levels of settings used by the presentation layer also may be stored in tables in the database . is a diagram illustrating a customization table for customized settings in accordance with some embodiments. Each row in the table corresponds to a customized setting. Each row includes a field that specifies the type of asset group such as work item planning release planning or iteration planning to which the customized setting applies. Each row also includes a field specifying the level of the customized setting such as system default or personalized setting. In addition each row includes fields corresponding to available attributes such as title asset ID project owner and various other attributes . In some embodiments a field corresponding to an available attribute includes a display flag and an edit flag . The display flag indicates whether the attribute is selected for display. The edit flag indicates whether to display user input fields to permit editing of the attribute.

Tables and thus include information to allow the agile development management application interface to respond to a request from a client computer when a user seeks to display an asset group of a particular type. The interface can query asset tables to identify the assets in the group and can query the customization table to determine which customized setting if any applies.

In some embodiments attribute values for asset templates are stored in asset template tables as illustrated in in accordance with some embodiments. In some embodiments a table corresponds to a particular type of asset template i.e. to templates for a particular type of asset . The asset template table includes a row for each respective asset template stored in the table. Each row includes fields that contain values for attributes of the respective asset template as defined in the Attribute Definition table for the type of asset to which the template corresponds. Examples of attribute fields are described above with regard to and may include fields for associated i.e. related assets.

The foregoing description for purpose of explanation has been described with reference to specific embodiments. However the illustrative discussions above are not intended to be exhaustive or to limit the invention to the precise forms disclosed. Many modifications and variations are possible in view of the above teachings. The embodiments were chosen and described in order to best explain the principles of the invention and its practical applications to thereby enable others skilled in the art to best utilize the invention and various embodiments with various modifications as are suited to the particular use contemplated.

