---

title: Technique for platform-to-platform communication
abstract: A technique for inter-platform communication between functional components located on different network access platforms will be described. A method aspect of this technique comprises the step of providing a first network access platform comprising a first functional component adapted to provide and/or request a platform-based function to and/or from a second functional component located on a second network access platform. On the first network access platform an inter-platform communication application is installed that is adapted to control signalling between the first functional component and the second functional component. The inter-platform communication application is enabled to contact a first middleware function provided for accessing the second functional component. Then, a communication path is established between the first functional component and the second functional via the inter-platform communication application and the first middleware function.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08670758&OS=08670758&RS=08670758
owner: Telefonaktiebolaget LM Ericsson (Publ)
number: 08670758
owner_city: Stockholm
owner_country: SE
publication_date: 20081117
---
This application claims the benefit of U.S. Provisional Application No. 60 990 616 filed Nov. 28 2007 the disclosure of which is fully incorporated herein by reference.

The present invention generally relates to network access technologies NATs . Specifically the invention relates to a technique that permits a functional component located on a first network access platform to communicate with a functional component located on a second network access platform.

Mobile telephones have traditionally been voice centric devices with proprietary operating systems handling all communication tasks. The Application Programming Interfaces APIs in these devices were not made available to third party developers. As a consequence end users were dependent on the device manufacturers for applications.

Today the mobile communications industry is increasingly becoming aware of the importance and benefits of open application environments for mobile devices. Basically an open application environment permits the installation of third party applications on the mobile device during device manufacture or later on by a user operating the device. Such third party applications include games software upgrades etc.

A. Ghosh et al. Open application environments in mobile devices Focus on JME and Ericsson Mobile Platforms Ericsson Review No. 2 Vol. 82 2005 pages 82 to 91 ISSN 0014 0171 describe an exemplary open application environment for mobile devices. The open application environment is based on a mobile platform with a digital baseband processor supporting wireless NATs so called radio access technologies RATs such as General Packet Radio Service GPRS Enhanced Data for GSM Evolution EDGE or Wideband Code Division Multiple Access WCDMA . A mobile platform is an environment that includes all the necessary integrated circuits and software needed to provide wireless network access services and communication services e.g. for voice data or multimedia applications as well as interfaces to make these services available to applications residing on the mobile platform.

In the open application environment described by A. Ghosh et al. dedicated middleware services are provided to allow an application based control of platform internal functionalities such as the resolution and the encoding of data streams. These middleware services include an API the so called Open Platform API or OPA that is structured into various well defined categories. This structure of the OPA makes it easy for an application programmer to locate and address platform specific functionalities.

Conventionally mobile platforms often included proprietary Operating Systems OS . Now with the advent of the open application environment an application platform with a third party application processor will be added to the mobile device when it is desired to run an open OS such as Symbian. The application platform will be co located with the mobile platform in the mobile device and handle all applications including for example multimedia applications. The mobile platform on the other hand will be in charge of a reduced set of functionalities including all mobile communications tasks such as wireless network access and mainly act as a network access platform. Between the application platform and the mobile platform an interface mechanism provides the applications on the application platform with access via OPA to platform internal functionalities of the mobile platform as if the applications resided directly on the mobile platform.

In some cases it may be necessary or desirable to equip a mobile device with more than one NAT. In this regard WO A 00 22857 teaches a modular approach in which different network access platforms in the form of so called network access modules such as a Local Area Network LAN module and a Global System for Mobile communications GSM module are interconnected via a communication bus according to the Universal Serial Bus USB standard. Other modules connected to the communication bus such as a Closed Circuit Television CCTV module may then selectively transmit signals via the LAN module on the one hand or via the GSM module on the other.

It has been found that it would be advantageous to let network access platforms communicate directly with each other. Such a direct communication is desirable to implement low level control mechanisms for example in context with handover signalling between the network access platforms. Moreover it may in certain cases be desirable to make such inter platform communication concepts compatible with open application environments.

Accordingly there is a need for an efficient technique that allows for a low level communication between two or more network access platforms.

According to a first aspect this need is satisfied by a method of enabling a communication between functional components located on different network access platforms wherein the method comprises the steps of providing a first network access platform comprising a first functional component adapted to provide and or request a platform based function to and or from a second functional component located on a second network access platform installing on the first network access platform an inter platform communication application adapted to control signalling between the first functional component and the second functional component enabling the inter platform communication application to contact a first middleware function provided for accessing the second functional component and establishing a communication path between the first functional component and the second functional component via the inter platform communication application and the first middleware function.

According to a first variant the first middleware function is installed on the first network access platform. According to a second variant the first middleware function is accessible via the second network access platform. To this end the first middleware function may be installed on e.g. physically within or logically on top of the second network access platform. In case the middleware function is installed on the second network access platform any signalling directed to the first middleware function is routed through the second network access platform.

In case the first middleware function is accessible via the second network access platform or in other cases that require an inter platform communication one or more inter platform communication interfaces may be provided. In this regard a first interface may be provided on the first network access platform and the step of enabling the inter platform communication application to contact the first middleware function may comprise coupling the first interface of the first network access platform to a second interface of the second network access platform.

Both the first network access platform and the second network access platform may be provided with one or more control and or data interfaces. In one implementation each platform includes at least one control interface and at least one data interface and the control and data interfaces of one platform are coupled to the control and data interfaces respectively of the other platform.

The control interfaces may differ from the data interfaces as regards the supported data rates. Data interfaces such as interfaces in accordance with the USB standard will typically support higher data rates than control interfaces according for example to the Universal Asynchronous Receiver Transmitter UART standard or the General Purpose Input Output GPIO standard.

The method may further comprise the step of importing by the first network access platform the first middleware function from the second network access platform. According to one importing variant the program code of the first middleware function is transferred from the second network access platform to the first network access platform over one or more inter platform communication interfaces. According to a further variant the importing step comprises visualising to the first network access platform the first middleware function which may in fact remain installed on the second network access platform.

The inter platform communication path between the first functional component and the second functional component may further include a capsulation mechanism adapted to encapsulate and decapsulate signalling transferred between first network access platform and the second network access platform. The encapsulation and decapsulation process may relate to various signalling contents such as identifiers of the calling and or the called functional component input or output parameters of a function provided by the called functional component and so on. During the encapsulation process signalling contents may be packed into one or more physical data units PDUs and the decapsulation process may comprise a corresponding unpacking of the PDUs. In one implementation the encapsulation and decapsulation processes are performed transparently for the calling and the called functional component.

The capsulation mechanism may stretch across the first network access platform and the second network access platform and may thus effectively constitute an inter platform communication mechanism. In particular in cases in which the inter platform communication application is installed on the first network access platform and the first middleware function is accessible via the second network access platform the capsulation mechanism may be inserted into the communication path logically between the inter platform communication application and the first middleware function. The capsulation mechanism may thus be a vehicle for visualising the first middleware function to the inter platform communication application installed on the first network access platform in accordance with the second importing variant discussed above .

In some cases a calling functional component may need not be aware of the fact that the called functional component is located on another network access platform. In such a case it may be advantageous to insert one or more virtual functional components into the communication path and each virtual functional component may simulate to a calling functional component an existence of the called functional component on the local network access platform of the calling functional component. Virtual functional component located on the second network access platform may simulate to the second functional component which is also located on the second network access platform an existence of the first functional component which is actually located on the first network access platform on the second network access platform and vice versa.

The one or more virtual functional components may be provided to perform translation tasks with respect to signalling occurring on the communication part. Each virtual functional component may for example translate a request received from a calling functional component into a requesting message that can be read by the inter platform communication application and vice versa. In this regard the virtual functional components can be interpreted as translators between calling functional components and the inter platform communication application which may act as a kind of proxy towards the called functional components.

In some cases it will be desirable to notify the inter platform communication application of signalling events generated by any functional component or routed through and possibly translated by any virtual functional component. To this end the inter platform communication application may notify one or more of the functional components and virtual functional components of the fact that any or specific signalling events within a platform are to be signalled to the inter platform communication application. Such a notification can be regarded as subscribing by the inter platform communication application to signalling events of one or more functional components and or virtual functional components.

The inter platform communication application may itself perform translation tasks with respect to signalling occurring on the communication path. Such translation tasks may comprise translating signalling events from a calling functional component or from a virtual functional component that may not be readable by a called functional component into a format readable by the called functional component.

The communication path between the first functional component and the second functional component may be used for various signalling purposes. According to a first variant the signalling relates to an internal handover between NATs deployed on different network access platforms. The inter platform signalling may also occur in context with an access to a smart card or a memory card such as a Universal Integrated Circuit Card UICC in general and a Subscribal Identity Module SIM card in particular. When the two platforms are configured to perform modem tasks the signalling transferred via the established communication path between the different functional components may include one or more modem commands such as commands belonging to the Hayes command set also called AT commands . Of course the communication path may also be used to transfer any other system control signalling.

In one scenario a second middleware function adapted to provide access to the first functional component located on the first network access platform is provided. The second middleware function may be arranged in the communication path logically between the inter platform communication application and the first functional component. The second middleware function may thus be accessible via the first network access platform. If the need arises the second middleware function may alternatively be installed on the second network access platform.

At least one of the first middleware function and the second middleware function may comprise an API. The first middleware function may for example provide an API in relation to the second functional component and the second middleware function may provide an API in relation to the first functional component. Especially in the context of an open application environment each API may be configured as an OPA. In such a case at least one of the first functional component and the second functional component may additionally be accessible to applications of the open application environment. These applications may reside on one or all of the network access platforms or on a separate application platform with a dedicated application processor.

In general the NATs supported by the network access platforms may be line based NATs or wireless NATs. In a preferred variant the first network access platform comprises a first baseband processor supporting at least one first radio access technology RAT and the second network access platform comprises a second baseband processor supporting a second RAT. The second RAT may be different from the at least one first RAT. The first network access platform and the second network access platform may be co located within a single device. Such a device may further comprise one or more application processors located for example on one or more application platforms coupled to at least one of the network access platforms.

According to another aspect a further method of enabling a communication between functional components located on different network access platforms is provided wherein the method comprises the steps of providing a first network access platform comprising a first functional component adapted to provide and or request a platform based function to and or from a second functional component located on a second network access platform installing on the first network access platform a middleware function enabling e.g. an inter platform communication application access to the first functional component and establishing a communication path between the first functional component and the second functional component via the middleware function and the inter platform communication application.

The techniques presented herein may be realised in the form of software in the form of hardware or using a combined software hardware approach. As regards a software aspect a computer program product comprising program code portions for performing the steps presented herein when the computer program product is run on one or more computing devices is provided. The computer program product may be stored on a computer readable recording medium such as a memory chip a CD ROM a harddisk and so on.

As for a hardware aspect a platform system adapted to enable a communication between functional components located on different network access platforms is provided wherein the system comprises a first network access platform comprising a first functional component adapted to provide and or request a platform based function to and or from a second functional component located on a second network access platform an inter platform communication application installed on the first network access platform and adapted to control signalling between the first functional component and the second functional component an interface adapted to enable the inter platform communication application to contact a middleware function provided for accessing the second functional component and a controller adapted to establish a communication path between the first functional component and the second functional component via the inter platform communication application and the middleware function.

The platform system may be adapted to operate in accordance with the Universal Mobile Telecommunications System UMTS standard. Moreover the interface may be configured as a USB and or as a Universal Asynchronous Receiver Transmitter UART interface.

According to another hardware aspect a platform system adapted to enable a communication between functional components located on different network access platforms is provided wherein the system comprises a first network access platform comprising a first functional component adapted to provide and or request a platform based function to and or from a second functional component located on a second network access platform a middleware function installed on the first network access platform and adapted to enable e.g. an inter platform communication application access to the first functional component and a controller adapted to establish a communication path between the first functional component and the second functional component via the middleware function and the inter platform communication application. The platform system may be adapted to operate in accordance with the Long Term Evolution LTE standard.

The two platform systems discussed above may be included in a single device with a common controller or with separate controlling entities. The device may be configured as at least one of a network card a portable terminal and a mobile telephone. The functional components may be realized as hardware or software modules providing Layer 1 L1 RAT measurements SIM access handover signalling e.g. between the internal NATs modem command signalling e.g. with one platform acting as modem for an application or functional component residing on the other platform and general platform control functionalities.

In the following description of preferred embodiments for purposes of explanation and not limitation specific details are set forth such as particular interfaces network access technologies and sequences of steps in order to provide a thorough understanding of the present invention. It will be apparent to one skilled in the art that the present invention may be practiced in other embodiments that depart from these specific details. For example while the embodiments will primarily be described in context with third and fourth generation mobile communications standards such as the UMTS and LTE standards respectively it will be evident that the present invention can also be practised in connection with a second generation mobile communications technology according for example to the GSM standard.

Moreover those skilled in the art will appreciate that the services functions and steps explained herein below may be implemented using software functioning in conjunction with a programmed micro processor an Application Specific Integrated Circuit ASIC a Digital Signal Processor DSP or a general purpose computer. It will also be appreciated that while the following embodiments will primarily be described in context with methods and devices the invention may also be embodied in a computer program product as well as in a system comprising a computer processor and a memory coupled to the processor wherein the memory is encoded with one or more programs that may perform the services functions and steps disclosed herein.

In the following reference will be made to middleware functions in the form of interfaces such as APIs and in particular OPAs . Such middleware functions generally do an abstraction of platform internal interfaces. This means that any components or interfaces above the middleware interfaces should not be effected by i.e. should be independent from changes of components and interfaces below the middleware interfaces. Some middleware interfaces might be transparent for some messages or communications.

An OPA for example may be built on an object based paradigm in such a way that any developers do not need to be concerned with platform implementation details. As such OPAs also reduce specific hardware and operating system dependencies for the application software. As initially mentioned OPA services may be organized in categories and sub categories in order to obtain a functional structure and partitioning of the OPA services. Each sub category may contain a number of components and these components may provide one or more interfaces in order to use the OPA services. The components typically define an object model for the functionality of this sub category and each interface of a component may consist of one or more methods.

The OPA paradigm may include synchronous and asynchronous services. While a synchronous service blocks any requesting client until the service is completed and the result is returned an asynchronous service is a non blocking service as the requesting client may continue any ongoing processes until the result or event becomes available. The asynchronous services may be divided into asynchronous request services and asynchronous subscription services. The OPA described herein may support two different modes for handling asynchronous result event messages namely a so called full message mode and a callback mode. The full message mode is always taking control over the complete message loop while the callback mode hides the message loop and provides a higher level of support according to which messages are directly routed to functions.

As shown in the device includes two embodiments of network access platform systems adapted to provide network access. It should be noted that the device could comprise one or more further platform systems not shown hosting one or more further NATs and or hosting one or more application processors. Each platform system may be realised in the form of a separate ASIC and may comprise a dedicated platform processor. It should be noted that since the device comprises two separate network access platform systems certain hardware for example power supply components and Radio Frequency RF components may be shared by both platform systems .

Each platform system is logically structured into three dedicated tiers. Specifically each platform system comprises a network access platform tier in the following also called platform a middleware tier in the following also called middleware as well as an application tier in the following also called application . Each tier etc. may logically comprise one or more components that may be realised in the form of software in the form of hardware or as a software hardware combination. It should be noted that in some cases a tier may not comprise any component and in such a situation the corresponding tier need not be realised at all. In the scenario shown in this applies to the application of platform system as well as the middleware of platform system .

Still referring to the platform of platform system is configured as a network access platform comprising a functional component that is adapted to provide and or request a platform based function to and or from a remote functional component located on the network access platform of platform system . Platform system further comprises an inter platform communication application logically installed on meaning on top of here the network access platform and adapted to control signalling between the functional component and a remote functional component residing on platform system .

The platform further includes an interface adapted to enable the inter platform communication application to contact a remote middleware function . In the embodiment shown the middleware function is located on the middleware tier of platform system . To allow the inter platform communication application to contact the middleware function an inter platform connection will be established via the interface and a corresponding interface belonging to the platform of platform system .

The middleware function is adapted to provide access to a functional component co located with the interface on the platform . The middleware function may generally be configured as an API and in particular as an OPA in relation to the functional component .

The platform system also comprises a controller adapted to establish a communication path to transfer signalling between the functional component residing on the platform of platform system on the one hand and the functional component residing on the platform of platform system on the other hand. The communication path stretches across the inter platform communication application and the middleware function .

As shown in the communication path starts within the platform tier of platform system and ends within the platform tier of platform system . The communication path thus allows for a low level platform to platform communication between the functional component and the functional component . In the embodiment of the term low level indicates that the functional components communicating with each other are located below the application tiers and the middleware tiers . Platform internal functionalities provided by one or both of the functional components may thus be shared across the two platform systems .

As regards the embodiment illustrated in it should be noted that the controller may either be located on platform system or on platform system . The controller could also be a distributed component with some control functionalities provided by platform system and other control functionalities provided by platform system . According to a still further variant the controller may at least partially be a component of the device external to both platform system and platform system .

As becomes apparent from the most important difference to the embodiment shown in relates to the middleware function which is no longer located in the middleware tier of platform system . Rather the middleware function has been moved to the middleware tier of platform system . The middleware function can now be contacted by the inter platform communication application via an intra platform interface not shown in logically arranged between the inter platform communication application and the middleware function . Similar to the scenario shown in the communication path stretches from the functional component via the inter platform communication application and the middleware function to the functional component located on the platform of platform system .

According to a still further device embodiment not shown in the drawings the inter platform communication application could be moved from the application tier of platform system to the application tier of platform system . In such an embodiment the middleware function will be located within the middleware tier of platform system as shown in . The communication path will stretch from the functional component of platform system via the inter platform interfaces to the inter platform communication application and from there via the middleware function to the functional component of platform system .

Now two method embodiments for enabling a communication between functional components located on different network access platforms will be described with reference to flowcharts of . These method embodiments may be practised by the platform systems discussed above or by other platform systems having a suitable configuration.

Referring now to the flowchart of a first method embodiment starts with providing a first network access platform comprising a first functional component adapted to provide and or request a platform based function to and or from a second functional component located on a second network access platform step .

In a next step an inter platform communication application is installed on the first network access platform. The inter platform communication application is adapted to control signalling between the first functional component of the first network access platform and the second functional component of the second network access platform.

Then in step the inter platform communication application is enabled to contact a middleware function provided for accessing the second functional component. To this end an intra or inter platform interface may be provided.

In a further step a communication path is established between the first functional component and the second functional component via the inter platform communication application and the middleware function. This communication path allows for a low level communication between the two functional components.

According to the further method embodiment illustrated in the flowchart of a first network access platform comprising a first functional component is provided in an initial step . The first functional component is adapted to provide and or request a platform based function to and or from a second functional component located on a second network access platform.

In a further step a middleware function is installed on the first network access platform. The middleware function enables an inter platform communication application access to the first functional component.

Then in step a communication path is established between the first functional component of the first network access platform and the second functional component of the second network access platform. The communication path stretches across the middleware function and the inter platform communication application.

In the following the configuration of the system platforms as well as the process of establishing the communication path and the signalling transferred over the established application path will be described more in detail. First of all the transition from a platform system having a stand alone configuration to a platform system operable in a dual mode configuration together with another platform system co located on the same device will be explained with reference to .

As shown in platform system comprises a network access platform on a lowest tier a middleware tier with a middleware function as well as an application tier with an application .

In the embodiment shown in the network access platform supports a RAT in accordance with the LTE standard. The LTE platform comprises two functional components Module X and Module Z . The functional components are adapted to provide and or request a platform based function from each other. Such platform based functions may include RAT related functionalities such as Layer 1 L1 measurements handover signalling SIM access or general system control functionalities on a platform level.

In the LTE embodiment shown in the middleware function is configured as an LTE OPA. The LTE OPA realised by the middleware function comprises the API functions that need to be provided to the application for a control of the LTE platform including but not restricted to control of the functional components and .

The platform and the middleware function may be integrated into a single ASIC as generally known from U.S. Pat. No. 7 149 510 B2 see FIG. 2 thereof herein incorporated by reference as far as a possible hardware and software realisation of platform system and of one or more further platform systems as discussed herein is concerned. Specifically such an ASIC may comprise an LTE baseband controller and a central processing unit CPU supporting an open or proprietary OS as well as the required middleware software. The functional components and may be realised by the ASIC in the form of software in the form of hardware or as a software hardware combination.

In the embodiment shown in any communication between the functional components and constitutes intra platform communication and can thus be easily realised using for example conventional programming techniques. However this communication situation drastically changes in a dual platform scenario when the two functional components and are no longer located on a single platform system.

In the dual platform embodiment shown in an application of platform system may need to access the functional component Module X located on the other platform system . The application may belong to an open application environment. Moreover the functional component provided by the LTE platform of platform system may need to be accessed by or may need to access a functional component Module Y provided by the UMTS platform of platform system . Such and similar communication scenarios require the implementation of an efficient inter platform communication technique.

As discussed above in context with such an intra platform communication technique may involve middleware functions and an inter platform communication application. Returning to a middleware tier including a first middleware function is provided to this end. The middleware function permits the application of platform system a remote control of functional component located on platform system . The middleware function of platform system has been derived from a corresponding middleware function of platform system . As shown in platform system comprises a further middleware function which allows the application a control of functionalities of the local UMTS platform including control of the local functional component .

As already mentioned there may arise the need for a low level inter platform communication between the functional component of platform system and the functional component of platform system . In such a case an intra platform communication path between the functional component and the functional component may be established. The communication path not shown in includes an inter platform communication application natively provided by platform system as well as at least one imported or native middleware function on the middleware tier.

As regards the middleware tier two cases may be differentiated in . When the functional component of platform system calls a function provided by the functional component of platform system the communication path stretches from the functional component via the middleware function the inter platform communication application and the middleware function to the functional component . When on the other hand the functional component calls a function provided by the functional component then the communication path stretches from the functional component via the middleware function the inter platform communication application and the middleware function to the functional component .

Basically the middleware function comprises an API OPA for accessing functions of the functional component and the middleware function comprises an API OPA for accessing functions of the functional component . The middleware function can be derived from middleware function by import of same from platform system in the form of program code in the form of a remote visualisation as discussed below in context with or in any other form.

It should be noted that for the sake of clarity inter platform interfaces for exporting and importing the middleware functions and for establishing the communication path are not shown in . Such interfaces will be discussed below in context with .

In the inter platform communication scenarios described herein both middleware functions and may be included simultaneously in the communication path. The middleware function L2U OPA includes all functions services of the LTE platform system for inter platform communication and the middleware function U2L OPA includes all functions services of the UMTS platform system for inter platform communication. The purpose of the middleware functions will now be exemplarily be described with respect to Internal RAT IRAT measurements on the LTE platform on the one hand and on the UMTS platform on the other.

Starting with the LTE IRAT measurement scenario it will be assumed that the functional component of the LTE platform is capable of providing IRAT measurements while the functional component on the UMTS platform is capable of requesting such measurements. In this example the middleware function provides to the functional component the service of or an interface for requesting LTE IRAT measurements from the functional component and provides after the measurements on the LTE RAT have been carried out the corresponding results to the functional component . The middleware function on the other hand provides to the functional component the possibility of or an interface for subscribing for the event that the UMTS platform wishes to trigger RAT measurements on the LTE RAT. Also the middleware function provides the service or an interface to the functional component of forwarding the corresponding measurement results to the UMTS platform .

In the other case of UMTS IRAT measurements it will be assumed that the functional component on the UMTS platform is capable of performing such measurements whereas the functional component on the LTE platform is capable of requesting such measurements. In such a case the middleware function provides to the functional component the service of requesting IRAT measurements on the UMTS RAT and provides after the measurements on the UMTS RAT have been completed by the functional component the corresponding results to the functional component . The middleware function provides to the functional component the possibility of subscribing for the event that the LTE platform the functional component wants to trigger IRAT measurements on the UMTS RAT. Additionally the middleware function provides the service of forwarding the measurement results on the UMTS RAT to the functional component on the LTE platform .

As becomes apparent from the above examples the middleware functions are to a certain extent complementary. This means that whereas the first middleware function provides to a functional component of the first platform a service of the second platform the second middleware function provides to this functional component the possibility to subscribe for the event when the first platform wishes to trigger the service provided by the first middleware function and vice versa.

As regards the import of middleware functions it has already been discussed above that one solution consists in the transfer of the program code of one or more middleware functions from platform system to platform system . Another possibility will now be explained with reference to .

Basically a mechanism called Distributed Function Model DFM is used to make the remote middleware function of platform system visible simulating a local middleware function to the other platform system . In other words the DFM mechanism is used to logically interconnect the two CPUs of the LTE platform system and the UMTS platform system so that any functional components not shown in on the platform tier of platform system are provided with access via the inter platform communication application and the middleware function to any functional components not shown in located on the platform tier of platform system . In this regard the combination of the DFM mechanism and the middleware function may be interpreted to constitute the remote middleware function illustrated in and . From another perspective the DFM mechanism may be regarded as a means for exporting the middleware function from platform system to platform system . Basically the DFM mechanism makes it possible for any functional component on the platform tier of platform system to transparently access any functional component located on the platform tier of platform system for which a corresponding middleware function API or OPA has been defined.

As illustrated in there exists a physical link between the two platform systems . The physical link stretches between one or more physical interfaces of platform system and one or more physical interfaces of platform system . The physical interfaces may be configured as data interfaces for example according to the USB standard as control interfaces for example according to the UART or GPIO standard or as Proprietary Interfaces PIF . Data interfaces will typically support higher transfer rates than control interfaces at the cost of more sophisticated hardware requirements. Exemplary interface combinations will be described below with reference to .

Still referring to logical Platform CPU to Platform CPU interfaces PPIF are arranged above the physical interfaces . The PPIFs are constituted by control software modules that communicate with logical and physical Hardware Access Layer HAL drivers to interconnect the two CPUs of the platform systems . Based on the PPIF modules a logical PPIF link can be established logically on top of the physical link . The configuration of the PPIF modules is illustrated in .

As shown in each PPIF module includes a bottom layer with physical interface drivers HAL drivers followed by a logical driver layer and a PPIF data access layer comprising a control sub layer and a service sub layer . The control sub layer handles opening and closing of services in the service sub layer routing of incoming and outgoing packets with respect to the individual services link types in the service layer and associated multiplexing tasks. Additionally the control sub layer is in charge of the sleep and wake up logic for the individual services provided by the service sub layer .

The service sub layer supports a plurality of different data flows. In the present context the DFM link service is of particular interest. Basically the DFM link service handles PDU transport between each of the PPIF modules and the associated DFM module respectively see . The DFM link service is in charge of creating and destroying DFM links towards the middleware function and the inter platform communication application and of sending and receiving data on these DFM links.

A Virtual External Interface VEI service of the service sub layer handles virtual communication COM ports for packet switched PS and or circuit switched CS data. Moreover the VEI service supports the exchange of AT modem commands between the two platform systems of . Further services provided by the service sub layer include handling of raw CS data from the network and transfer of same to a video application video service making visible of debug printouts to the remote system platform debug service transport of Internet Protocol IP user data packets PS data service as well as PPIF link management including the decoding of PPIF commands and power management control service .

Referring again to the individual components of the DFM modules will now be described in more detail. As already mentioned above the DFM modules rely on the PPIF modules for establishing one or more logical DFM links . Basically the DFM module of platform system under control of the inter platform communication application is responsible for creating any DFM link. Once the DFM link has been created the DFM signalling between the two platform systems is symmetric. The DFM module associated with the inter platform communication application will also be responsible for closing the DFM link.

The central component of each DFM module is a Proxy and Stub Manager PSM . The PSM implements the functionality that makes it possible to visualize or export and import interfaces of local functional components thus providing platform based functions to a remote platform system. The PSM is in particular responsible for creating proxies and stubs for communicating functional components. There will be one proxy stub pair or link per middleware function OPA interface and every proxy stub pair is registered in the PSM . The handling of proxies and stubs is symmetric within the PSM . The PSM thus creates a proxy stub link per OPA interface and it is also in charge of creating and deleting instances of the OPA interfaces upon delegation by the component managers .

A proxy is a component which receives interface requests from a local component such as the inter platform communication application and redirects the interface requests to an associated remote stub . The stub has an interface pointer referring to a specific functional component so that it may use a function provided by that functional component through the corresponding OPA interface middleware function . When a functional component or the associated inter platform communication application is calling a function e.g. a method of a remote functional component it is actually calling the proxy which calls the associated stub which finally calls via the middleware function the function of the remote functional component. By using the DFM mechanism this whole inter platform process is performed transparently from the perspective of the functional components.

A further principle underlying the DFM mechanism is the so called marshalling principle. Marshalling designates the process of packing an identifier of the calling functional component or an identifier of the associated inter platform communication application an identifier of the called function or of the called functional component as well as all input parameters of the called function into a buffer. This process will typically be carried out by the proxy or by the inter platform communication application . The buffer is then handed over to the PSM which puts it into a PDU according to a proprietary or an open protocol standard. The PDU is then sent over the DFM link to the remote PSM . The remote PSM unpacks the PDU and sends the buffer thus recovered to the stub . In the stub the buffer is unmarshalled and the associated function is called. Marshalling and unmarshalling is done in the same way for the output parameters return values of the called function once they become available. In this regard the callback proxy will automatically trigger the callback stub in a similar manner as described above with respect to the proxy and the stub .

As shown in each DFM module includes a component manager CM . The CM is responsible for managing all functional components. To this end each CM keeps a list of all local and remote functional components of the platform systems for which an instance has been created. For external or remote components the CM returns a device identifier of the device e.g. the platform system where the remote component is located to the local PSM so that the PSM may create the corresponding component itself.

The DFM module of platform system further comprises a process manager . The process manager creates and releases processes for handling an incoming request from the platform system i.e. from the remote CPU . Creating and releasing processes avoids blocking the DSM module .

The DFM mechanism of may be symmetrically installed on two or more platform systems for a bi directional visualisation of the interfaces provided by middleware functions. In such a scenario all functional components of one side can access functional components of the other side as if they were located on a single platform chip.

As shown in the two platform systems are linked in parallel by USB interfaces on the one hand and UART interfaces on the other hand. The USB interfaces constitute high rate user data interfaces based on the USB Ethernet standard. A USB link which is part of a data connection indicated by arrows with full lines established via the USB interfaces provides network access according to the LTE standard to applications residing on the UMTS platform . Such applications may either be applications installed on top of the UMTS platform or platform internal applications . The data connection stretches on the side of the LTE platform across a LTE Network Signalling NS module an Ethernet framing module as well as the USB interface . On the side of the UMTS platform the data connection stretches across the USB interface an Ethernet framing module as well as a TCP IP module .

A control connection indicated by arrows with broken lines stretches across the two UART interfaces . A first branch of this control connection stretches between functional component of LTE platform and functional component of UMTS platform . Exemplary signalling scenarios utilising this branch of the control connection will be discussed later on with reference to .

A second branch of the control connection stretches from application of the UMTS platform to middleware function of the LTE platform which corresponds to the imported middleware function illustrated on top of the UMTS platform . The middleware functions and have been defined for accessing the functional component or any other functional components of the LTE platform . The main difference between the middleware functions and relates to the fact that the middleware function LTE OPA comprises the services provided to an application in order to control the LTE platform e.g. settings like radio on off network selection etc. The middleware function L2U OPA comprises additional services for inter platform communication of the LTE platform like for system control SIM access IRAT handover mechanisms and optionally AT command exchange.

While the USB interfaces support high data rates on the data connection much lower data rates will typically occur on the control connection and for this reason less complex UART interfaces are utilised for inter platform control signalling on the control connection .

In the interface scenario shown in the two UART interfaces of have been omitted. In this scenario both the control connection and the data connection stretch over the two USB interfaces 

In a still further interface scenario shown in the UART interfaces are additionally used for transferring low rate user data while high rate user data are transferred via the USB interfaces 

In the interface scenarios shown in the transfer of IP data including user and application data is handled separately from the control signalling. For IP data the USB Ethernet mechanism is used directly as transport vehicle between the LTE platform and the UMTS platform . This approach has amongst others the advantage that the transport mechanism for IP data between the two platforms is the same that may also be used between one of the platforms and an external device such as a personal computer PC or laptop when one or both of the platforms reside for example on a network card coupled to the PC or laptop.

It should be noted that the inter platform control signalling concerning the setup the release etc. of IP data transfer via the USB Ethernet service may of course be controlled via the UART based control signalling. The control signalling may also be used to visualise and access functions of the middleware tier on remote platforms to allow for a communication between functional components on a platform level. As shown in the control interfaces may optionally be used for transferring low rate IP data if necessary.

As regards the PPIF functionalities shown in the physical interfaces may be adapted to the PPIF driver layer in such a way that communication channels may use different connection types e.g. different physical interfaces like USB or UART transparently. The mapping of communication services to physical interfaces may be freely configurable. As shown in a possible mapping of communication services to the USB and UART interfaces could be selected such that high rate IP data are transferred via the USB interfaces whereas low rate IP data and control signalling is transferred via the UART interfaces 

Now several exemplary inter platform signalling scenarios will be discussed with reference to . In each case it is assumed that first functional component located on LTE platform accesses or calls or gets accessed or called by functional component located on UMTS platform . In the context of these signalling embodiments a virtual functional component Virtual Module Y implemented on the LTE platform will be introduced. Basically the virtual functional component simulates to the functional component the existence of the functional component on the LTE platform . In this context the virtual functional component basically performs translation tasks and acts as a proxy in front of the functional component . If necessary a similar virtual functional component Virtual Module X not shown in the drawings may be installed on the UMTS platform as a proxy in front of the functional component .

In each of the following signalling embodiments it will be assumed that middleware function on the side of the UMTS platform has been imported from the UMTS platform using the DFM mechanism discussed above in context with . This means that the functional component is only virtually existing on the side of the UMTS platform while the actual program code underlying the functional component resides in the form of functional component on the side of the LTE platform . Of course in an alternative scenario not shown in the corresponding program code may already natively be installed on the side of the UMTS platform or may physically be transferred from the LTE platform to the UMTS platform either during device manufacture or thereafter.

Referring now to a signalling scenario including a request of ciphering parameters from a functional component in the form of a SIM module on the UMTS platform by a functional component in the form of a Network Signalling NS module on the LTE platform will be described first.

As a prerequisite of this first signalling scenario inter platform communication application subscribes to related signalling events of the virtual functional component via the middleware function as indicated by signalling steps and . The corresponding subscription message sent from the inter platform communication application to the virtual functional component informs the virtual component that the inter platform communication application has to be notified if the NS module requests any ciphering parameters.

Signalling step indicates the transmission of such a request for ciphering parameters from NS module to virtual functional component as the NS module on the LTE platform is assuming that the remote SIM module is co located with the NS module on the LTE platform . The inter platform communication application has previously subscribed to such signalling events from the NS module and the virtual functional component thus converts or translates the request received from the NS module into a predefined signalling event. This conversion step may include packing the request received in signalling step into an event message having a format that can be read by the inter platform communication application . In signalling steps and the event message including the converted request is transferred from the virtual functional component via the middleware function to the inter platform communication application .

After having received the event message from the virtual functional component the inter platform communication application reconverts or re translates the event message into a request that can be read by the SIM module . The corresponding request for ciphering parameters is then forwarded via a further middleware function to the SIM module residing on the UMTS platform as indicated by signalling steps and .

In a next step SIM module executes the received request and sends a response message together with the requested ciphering parameters via the middleware function to the inter platform communication application . This is indicated by signalling steps and .

The inter platform communication application converts the received response message into a request message which can be interpreted by the virtual functional component . The request message is forwarded in signalling steps and via the middleware function to the virtual functional component . In this regard the middleware function acts as an API in relation to the virtual functional component .

The virtual functional component reconverts the request message received from the inter platform communication application into a format expected by the NS module . The corresponding response message including the requested ciphering parameters is finally sent in signalling step to the NS module .

A further signalling embodiment relating to the transmission of a signalling event from functional component located on the UMTS platform to another functional component located on the LTE platform will now be described in context with . The corresponding platform level event can be a change of the SIM state detected by a functional component in the form of a SIM module on the UMTS platform . This change of the SIM state will need to be signalled to a functional component on the LTE platform . The functional component and or the inter platform communication application may optionally have previously subscribed to such an event as discussed above in context with the signalling scenario of .

Once the SIM module has detected a change of the SIM state it generates a corresponding event message and forwards the same via the middleware function to the inter platform communication application as indicated by signalling steps and .

The inter platform communication application converts the received event message into a request message that can be read by the virtual functional component of the LTE platform . The corresponding request message is then forwarded in signalling steps and via the middleware function to the virtual functional component .

The virtual functional component reconverts the request message into the event message i.e. into a format that can be read by the functional component and sends the resulting event message in signalling step to the functional component .

Another signalling scenario relating to a request message sent from functional component here an IP module located within the UMTS platform to functional component located within the LTE platform will now be described with reference to . Such a request message could for example be a Packet Data Protocol PDP context activation deactivation request sent from a functional component in the form of an IP module on the UMTS platform to a functional component in the form of a NS module on the LTE platform .

As a prerequisite inter platform communication application will have subscribed to signalling events of the IP module and of the virtual functional component . The corresponding subscription messages are transferred in signalling steps and as well as and respectively.

The event based process starts when the IP module detects a PDP context activation deactivation event and notifies the inter platform communication application of this event. The corresponding notification is transferred via the middleware function as indicated by signalling steps and . The event will replace a corresponding request directly transferred to the NS module in a stand alone platform configuration in which both modules are co located on one and the same platform.

The inter platform communication application again converts the event to a request which can be interpreted by the virtual functional component . The resulting request message is forwarded to the virtual functional component via the middleware function in signalling steps and .

The virtual functional component forwards the received request message to the NS module . In this case the virtual functional component need not necessarily perform any conversion tasks. Upon receipt of the request message from the virtual functional component the NS module generates a response message and transmits this response message in signalling step to the virtual functional component . The virtual functional component then converts the received response message to an event message that can be interpreted by the inter platform communication application and sends the event message to the inter platform communication application via the middleware function as indicated by signalling steps and .

The inter platform communication application reconverts the event message received from the virtual functional component to a request message readable by the IP module and forwards the request message thus generated via the middleware function to the IP module . The corresponding signalling steps and are shown in . Receipt of the request message by the IP module replaces the corresponding response message that would have been directly obtained from the NS module if the NS module was co located with the IP module on the UMTS platform .

A final signalling example will now be described with reference to . This signalling example relates to the transmission of an event message from functional component located on the LTE platform to remote functional component located on the UMTS platform . Such an event message could be indicative of a PDP context status change which is typically signalled from a functional component in the form of an NS module on the LTE platform to a functional component in the form of an IP module on the UMTS platform .

Referring to the signalling starts with NS module detecting a PDP context status change. Upon detection of such a status change the NS module generates a corresponding event message and transmits the event message in signalling step to the virtual functional component . Virtual functional component forwards the received event message to inter platform communication application via the middleware function . This process is indicated as signalling steps and in .

The inter platform communication application converts the event message into a request message that can be interpreted by the IP module . The corresponding request message is then forwarded via the middleware function in signalling steps and to the IP module . This request message replaces the corresponding event message that would be received by the IP module if the NS module was co located with the IP module on the UMTS platform .

It should be noted that the signalling scenarios discussed above can of course be extended and that other signalling scenarios can of course be conceived. For example the signalling concepts discussed above in context with event messages and request messages exchanged between remotely located functional components could also be implemented to realise internal NAT or RAT handover signalling between two network access platforms such as the LTE and UMTS platforms illustrated in the drawings. Moreover inter platform control massages relating to for example system control radio control or SIM lock control could be implemented as well. The signalling may thus in particular but not exclusively pertain to network access related messages. Such messages may also include the exchange of modem commands such as AT commands between the two network access platforms.

Signalling from one network access platform to another may optionally be triggered by the callback functionality discussed above in context with the DFM mechanism shown in . In order for example to trigger the generation of the event of obtaining an L1 measurement from the RAT implemented on the LTE platform CPU of the UMTS platform CPU first has to notify via the corresponding middleware function the LTE platform CPU that an L1 measurement is requested from the LTE platform side. If the corresponding L1 measurement is finally received the LTE platform CPU triggers the UMTS platform CPU by the corresponding callback function for a transfer of the measurement results to the UMTS platform CPU . In this regard a similar signalling flows as illustrated in can be implemented.

It may be envisaged in the above embodiments that one single standard platform system such as the LTE platform system described above is combined with one of a plurality of different other platform systems such as one of several UMTS platform systems . In such a case it may occur that each of the other platform systems needs a specific adaptation to the middleware functions provided by the standard platform system and in such a case plug in modules provided on the application or middleware tier may be used to implement the necessary adaptations. The appropriate plug in may also be transferred to a remote middleware function using for example the DFM mechanism illustrated in .

In cases in which a platform system that is to be combined with a standard platform system having an export functionality as regards the middleware function does not support any of the open interface standards such as USB or UART such an open interface can be replaced by a proprietary interface accessing a shared Random Access Memory RAM located between the two platform systems.

As has become apparent from the above description of preferred embodiments the inter platform communication mechanism proposed herein facilitates the connection of separate platform systems with shared functional components. This approach enables the provision of inter platform functions relating for example to SIM access inter platform NAT handover mechanisms system control and so on.

A single system platform may be configured for being selectively installed either in a stand alone configuration as single platform system in a device or in a dual mode configuration together with one or more further platform systems in the device . In particular highly similar interface mechanisms may be used for such different deployments of one network access platform.

The use of standardized and commonly used interface standards such as USB and UART to connect one network access platform to another network access platform facilitates the adaptation of a specific network access platform system to network access platform systems and application platforms of different manufacturers. The adaptation of a specific network access platform system to third a party platform system is further facilitated by encapsulating the inter platform communication interfaces and protocols. Additionally a remote control of individual network access platform systems is possible as any calling functional component does not necessarily need to be co located with the called functional component on one and the same network access platform system or one and the same device. This approach also permits the introduction of lean platform systems that connect to other platform systems if specific functions not available locally need to be implemented.

It is believed that the advantages of the present invention will be fully understood from the forgoing description and it will be apparent that various changes may be made in the form construction and arrangement of the exemplary aspects thereof without departing from the scope of the invention or without sacrificing all of its advantages. Because the invention can be varied in many ways it will be recognized that the invention should be limited only by the scope of the following claims.

