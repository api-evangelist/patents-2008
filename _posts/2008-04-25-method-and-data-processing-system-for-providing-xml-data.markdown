---

title: Method and data processing system for providing XML data
abstract: A method and systems for providing XML data is disclosed. In accordance with an embodiment of the invention, a second data processing system, which is connected to a first data processing system via a network, receives a first request over the network from the first data processing system. The first request comprises specifications for subsequent transfers of XML data from the second data processing system to the first data processing system. The specifications specify for which type of XML documents to be transferred in subsequent transfers to the first data processing system which excerpts of XML data shall be sent. An acknowledge message, sent to the first data processing system from the second data processing system, indicates the latter's ability to provide the excerpts of XML data for the types of XML documents in the subsequent data transfers.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08001212&OS=08001212&RS=08001212
owner: International Business Machines Corporation
number: 08001212
owner_city: Armonk
owner_country: US
publication_date: 20080425
---
The invention relates to a method of providing XML data to a data processing system to a computer program product adapted to perform the method in accordance with the invention and to a data processing system.

The extensible markup language XML is a W3C recommended general purpose markup language that supports a wide variety of applications. XML languages or dialects are easy to design and to process. They are also reasonably human legible and to this end terseness was not considered essential in its structure. XML is a simplified subset of standard generalized markup language SGML . Its primary purpose is to facilitate the sharing of data across different information systems particularly systems connected via the public internet.

XML provides text based means to describe and apply a tree based structure to information. At its base level all information manifests as text interspersed with markup that indicates the information s separation into a hierarchy of character data container like elements and attributes of those elements.

SAX is a serial access parser API for XML. API is an acronym for application programming interface which is a source code interface that a computer system or program library provides in order to support requests for services to be made of it by a computer program. SAX provides a mechanism for reading data from an XML document. A parser which implements SAX handles XML information as a single stream of data. This data stream is unidirectional such that previously accessed data cannot be re read without re parsing. SAX is fast and efficient to implement but difficult to use for extracting information at random from the XML document since it tends to burden the application author with keeping track of what part of the document is being processed. It is better suited to situations in which certain types of information are always handled the same way no matter where they occur in the document.

DOM is another interface oriented API that allows for navigation of an entire XML document as if it were a tree of node objects representing the document s contents. A DOM document can be created by a parser from an XML document or can be generated manually by users. Data types in DOM nodes are abstract and implementations provide their own programming language specific bindings. DOM implementations tend to be memory intensive as they generally require the entire document to be loaded into memory and constructed as a tree of objects before access is allowed.

RAX which is an acronym for random access XML relates to a further API for processing XML data. RAX can be understood as a new parsing model which is neither DOM nor SAX but a machine based micro based parallel processing strategy implemented in purpose built XML hardware. The core technology employed in RAX is an XPath engine. XPath is a language for addressing elements in an XML document. It can be understood as an XML document query language for making assertions about the content in XML documents. RAX processes an XML document by generating XPath expressions from the XML document such that there is one XPath expression corresponding to each item in the XML document whereby each XPath expression selects only the corresponding XPath item. The XPath expressions may be generated with a script. When an item is to be selected from the XML document the XPath expressions are evaluated simultaneously in order to select the item from the generated XPath expressions. Each XPath expression produces a truth value indicating whether it is matched or not. The uniqueness constraint guarantees that one and only one XPath will have the truth value TRUE . The position of the matching XPaths provides an index to the corresponding item in the XML document or in a derived list which represents the XML document.

The processing of XML documents is done by the data processing system which receives the XML document for example via a network from a server. Such a data processing system is also referred to as application system as an application executed by the data processing system further processes the XML document. In order to be able to process large XML documents the data processing system must however provide sufficient resources which might not always be the case. Furthermore due to the increased size of XML documents for example in comparison with raw data XML based communication requires more network bandwidth and network processing when transferring the XML document from the server to the receiving data processing system.

The problem of low XML parsing performance is addressed by trying to implement faster parsers. However the possibilities for further improvements of these parsers are limited because XML parsing is very sequential by nature and inherently involves a large processing overhead. Since even with fast parsers the parsing is still done on application systems these systems are relieved only marginally. It is an object of the invention to describe an improved method of providing XML data to the data processing system corresponding to the application system which makes use of the XML data. It is a further object of the invention to provide an improved data processing system.

According to a first aspect of the invention there is provided a method of providing XML data to a first data processing system. In accordance with an embodiment of the invention the method is performed by a second data processing system which is connected to the first data processing system via a network. According to a step of the method the second data processing system receives a first request over the network from the first data processing system. The first request comprises specifications for subsequent data transfers of XML data wherein the specifications specify for which type of XML documents which excerpts of XML data from the XML documents shall be sent to the first data processing system. In a further step the second data processing system sends an acknowledge message to the first data processing system. The second data processing system indicates via the acknowledge message its ability to provide the excerpts of XML data of the types of XML documents in the subsequent data transfers.

The first data processing system can for example be a client system which is served by the second data processing system over the network via a publish subscribe pub sub service. The first and second data processing systems can therefore be parts of a publish subscribe system wherein the first data processing system corresponds to a publisher which posts requests to the second data processing system which can be seen as a broker that provides responses to the first data processing system with respect to the requests.

The first and second data processing systems set up further transfers of XML data by use of the first request which is acknowledged via the acknowledge message. In the first request the first data processing system specifies which excerpts of XML data it wants to receive when it asks via subsequent requests for the corresponding types of XML documents. The term type of XML documents relates to a class of XML documents which can be for example specified according to the type of the document type definition DTD . The first request is therefore used by the first data processing system to set up the second data processing system which can be regarded as a broker with respect to which excerpts of XML data shall be sent when the first data processing system requests via further communication steps for a specific type of XML documents.

In accordance with an embodiment of the invention the second data processing system receives a second request from the first data processing system. The first data processing system requests via the second request for a type of XML documents from the second data processing system. In a further step the second data processing system selects the excerpts of XML data from the XML documents having the corresponding type which shall be sent with respect to the type of XML documents according to the specifications. In a further step the excerpts of XML data are sent over the network to the first data processing system. Thus instead of providing the complete XML documents of the type requested for by the first data processing system the second data processing system selects the excerpts of XML data that are specified for the type of XML documents from the corresponding XML documents. The method in accordance with the invention is therefore particularly advantageous as the first data processing system only receives the excerpts of XML data and must therefore only process the received excerpts of XML data and not the full XML documents. Thus the first data processing system has to employ fewer resources for processing the received XML data. Further fewer network resources have to be employed for the transfer of the excerpts of XML data in comparison with the network resources that must be employed to transfer the complete XML documents via the network from the second data processing system to the first data processing system.

In accordance with an embodiment of the invention the type of XML documents relates to an XML document. The first and or second request comprises a document identifier for the XML document. The document identifier is employed by the second data processing system to identify the XML document from which the excerpts of XML data are to be extracted. The document identifier can for example relate to the name of the XML document or to the URL universal resource locator under which the XML document can be retrieved.

In accordance with an embodiment of the invention the excerpts of XML data are sent in one or more data packets. The last data packet of the one or more data packets comprises an end of stream information in order to indicate to the first data processing system that the last data packet is the latest data packet sent by the second data processing system and that no further data packet will be sent by the second data processing system with respect to the delivery of the excerpts of XML data requested via the second request.

In accordance with an embodiment of the invention the specifications comprise binary format identifiers wherein a binary format identifier specifies the format in which an excerpt of XML data associated with a specific type of XML documents shall be sent by the second data processing system. The first data processing system specifies therefore in the first request the binary format in which the first data processing system expects to receive the excerpts of XML data associated with a specific type of XML documents if it requests for these excerpts of XML data in requests such as for example the above mentioned second request. Formats that can for example be specified by a binary format identifier are UTF 8 encoded strings UTF 16 encoded strings signed 32 bit integer signed 64 bit integer unsigned 32 bit integer unsigned 64 bit integer single precision IEEE compliant floating point number and double precision IEEE compliant floating point number.

In accordance with an embodiment of the invention the excerpts of XML data are returned in a predefined binary format. This provides the advantage that no binary format identifiers have to be specified in the request.

In accordance with an embodiment of the invention the second request further comprises a characterization for each excerpt of XML data to be extracted by the second data processing system from one or more XML documents. A characterization might for example relate to an element name of the corresponding excerpt of XML data that shall be selected from one or more XML documents. A characterization might also relate to an XPath expression which can be used to extract the corresponding excerpt of XML data from an XML document.

In accordance with an embodiment of the invention the second request comprises a filter list wherein the filter list comprises a set of filter pairs wherein each filter pair of the set of filter pairs provides a characterization for an excerpt of XML data and a binary format identifier for the excerpt of XML data. The characterization can be used by the second data processing system to select the corresponding excerpt of XML data from an XML document. As mentioned above the characterization can for example be an element name specifying the excerpt of XML data or an XPath expression. The binary format identifier specifies the format in which the first data processing system wishes to receive the excerpt of XML data from the second data processing system.

In accordance with an embodiment of the invention the documents of the corresponding type requested for via the second request are available to the second data processing system in an internal data representation. The excerpts of XML data requested with respect to the type of XML documents are generated from the internal data representation of the documents. The internal data representation can for example be generated from a specific XML document by applying a SAX API. The internal data representation of this XML document might be stored in the memory which is accessible by a processor of the second data processing system. The processor can then access the internal data representation and generate the requested excerpts of XML data. The generation of requested excerpts of XML data directly from the internal data representation has the advantage that the excerpts of XML data can be extracted very rapidly from the internal data representation and hence the time required to deliver the requested excerpts of XML data to the first data processing system is reduced in comparison with the generation of the excerpts of XML data from the XML documents.

In accordance with an embodiment of the invention the documents of the type requested for via the second request relate to one or more XML documents stored on the second data processing system. The second data processing system parses then the one or more XML documents in order to extract the excerpts of XML data which shall be sent with respect to the corresponding type of XML documents as set up via the first request. The XML documents can for example be stored on a storage medium of the second data processing system such that a processor running a SAX or DOM parser is able to parse the XML documents and select the specified excerpts of XML data.

According to a second aspect of the invention there is provided a method for providing XML data to a first data processing system. In accordance with an embodiment of the invention the method is performed by the first data processing system which is connected to a second data processing system via a network. According to a step of the method the first data processing system sends a first request over the network to the second data processing system. The first request comprises specifications for subsequent data transfers of excerpts of XML data of types of XML documents. The specifications specify for which type of XML documents which excerpts of XML data shall be sent to the first data processing system. According to a further step of the method the first data processing system receives an acknowledge message from the second data processing system. The second data processing system indicates via the acknowledge message its ability to provide the excerpts of XML data for the types of XML documents in subsequent data transfers.

According to a third aspect of the invention there is provided a computer program product with computer executable instructions wherein the instructions are adapted to perform one of the methods in accordance with the invention.

In accordance with an embodiment of the invention the computer program product comprises a computer useable medium including a computer readable program wherein the computer readable program when executed on a computer causes the computer to 

According to a fourth aspect of the invention there is provided a data processing system the data processing system relates to a second data processing system in a network which also comprises a first data processing system. The second data processing system comprises means for receiving a first request over the network from the first data processing system wherein the first request comprises specifications for subsequent data transfers of XML data wherein the specifications specify for which type of XML documents which excerpts of XML data shall be sent to the first data processing system. The second data processing system also has means for sending an acknowledge message to the first data processing system wherein the second data processing system indicates via the acknowledge message its ability to provide the excerpts of XML data for the types of XML documents in the subsequent data transfers.

According to a fifth aspect of the invention there is provided a data processing system. The data processing system relates to a first data processing system in a network comprising the first data processing system and a second data processing system. The first data processing system has means for sending a first request over the network to the second data processing system. The first request comprises specifications for subsequent data transfers of XML data wherein the specifications specify for which type of XML documents which excerpts of XML data shall be sent to the first data processing system. The first data processing system further has means to receive an acknowledge message from the second data processing system. The acknowledge message is used by the second data processing system to indicate the ability to provide the excerpts of the XML data for the types of XML documents in the subsequent data transfers to the first data processing system.

According to a sixth aspect of the invention there is provided a proxy system in a network that also contains at least a first data processing system according to embodiments of the invention and another data processing system which might be a second data processing system according to embodiments of the invention. In accordance with an embodiment of the invention the proxy system is adapted to comprise the functionalities of the first and or second data processing systems in accordance with the invention. In accordance with an embodiment of the invention the proxy system is adapted to perform steps of the methods in accordance with the invention.

As described above the first data processing system is adapted to send the first request to another data processing system. The first request is used to specify which excerpts of XML data the first data processing system expects to receive when it requests via subsequent requests for the corresponding types of XML documents. The proxy system is adapted to intercept this first request and to determine whether the other data processing system is a second data processing system in accordance with the invention. If this is not the case the proxy system takes the role of the second data processing system and sends an acknowledge message to the first data processing system. The proxy system is adapted to intercept a subsequent second request from the first data processing system to the other data processing system to retrieve the XML documents requested for in the second request to parse those XML documents for example using a SAX API and to send the excerpts of XML data as specified in the first request back to the first data processing system.

If the other data processing system is a second data processing the proxy system sends the first request to this second data processing system and will intercept and forward subsequent second requests from the first data processing system to this second data processing system.

The proxy system is particularly advantageous because the provision of the excerpts of XML data by the other second data processing system is transparent to the first data processing system. The first data processing system can therefore always set up a transfer of excerpts of XML data in accordance with the methods in accordance with the invention if at least a proxy system is comprised in the network and located between the first data processing system and other data processing systems since the proxy system is adapted to act as second data processing system in accordance with the invention.

The microprocessor of the first data processing system executes a computer program product which might for example be permanently stored on the storage and which is loaded for execution into the microprocessor . Similarly the microprocessor of the second data processing system executes a computer program product which is loaded from the storage into the microprocessor and which is permanently stored on the storage .

The first data processing system and the second data processing system are connected over the network connection .

The first data processing system can be regarded as a client system which is served by the second data processing system over the network via a pub sub service. The second data processing system might therefore hold XML documents such as XML document and XML document on the storage . Each of the XML documents such as the XML documents and relates to an XML document type and hence to a class of XML documents.

The first data processing system might want to receive data comprised in one of the XML documents held on the second data processing system for further usage. In order to set up a communication between the first data processing system and the second data processing system through which the first data processing system can request XML data from the second data processing system the computer program product generates a first request . The first request comprises specifications .

The specifications specify a first type of XML documents and further provide characterizations for excerpts of XML data that specify which excerpts of XML data are to be extracted and sent from the XML documents of the first type . The specifications further comprise a first binary format identifier which specifies the binary format in which the excerpts of XML data are to be sent.

Further the specifications specify a second type of XML documents and further provide characterizations for excerpts of XML data and a second binary format identifier . The characterizations for the excerpts of XML data indicate which excerpts of XML data of XML documents of the second type e.g. XML document are to be sent to the first data processing system in the binary format specified by the second binary format identifier . The first request is then sent over the network connection to the second data processing system .

The second data processing system receives the first request . The computer program product might then generate an acknowledge message which is sent over the connection to the first data processing system in order to indicate the ability to provide the excerpts of XML data according to the specifications for the types of XML documents and respectively in subsequent data transfers.

The computer program product of the first data processing system generates then a second request . The second request is used to request for XML documents of the first type . The second request is sent over the network connection to the second data processing system . The computer program product analyzes the second request and determines the XML documents held on the storage which are of the first type . It is assumed that the first XML document is of the first type. The computer program product selects then items and from the first XML document wherein the items and correspond to the excerpts of XML documents that have been specified by use of the characterizations of excerpts of XML data in the previous first request to be sent when it is requested for the first type of XML documents . The items and are then packed into data packets and . The data packets and are transmitted over the network connection to the first data processing system so that the first data processing system receives the requested excerpts of XML data corresponding to the items to .

In order to set up a communication with the other data processing system the first data processing system sends a first request to the other data processing system . The first request comprises specifications for subsequent data transfers of XML data wherein the specifications specify for which type of XML documents requested for via a subsequent second request which excerpts of XML data shall be sent from the other data processing system to the first data processing system . The first request is intercepted by the proxy system .

The proxy system comprises a microprocessor and a storage . The microprocessor executes a computer program product which is loaded from the storage into the microprocessor . The storage further comprises a database . The computer program product is used to determine if the other data processing system which is the destination of the first request is a second data processing system in accordance with the invention and thus might be able to process the first request . For this the computer program product accesses the database in which all data processing systems comprised in the network that are second data processing system in accordance with the invention are listed. If the other data processing system is listed in the database the proxy system further forwards the first request to the second data processing system . The second data processing system might then send an acknowledge message to the first data processing system .

In order to receive excerpts of XML data from the XML document the first data processing system might further send a second request in which for example a type identifier for the XML document is included. The second request is also intercepted by the proxy system which forwards the second request to the other second data processing system . The other second data processing system is able to identify the XML document by use of the type identifier and extracts the excerpts of XML data from the XML document . The excerpts of XML data are then sent from the other second data processing system to the first data processing system .

The first request is intercepted by the proxy system . The proxy system is then able to determine for example via a database as pointed out in the description to that the other data processing system is not able to process the first request i.e. that the other data processing system is not a second data processing system in accordance with the invention.

The proxy system therefore sends an acknowledge message to the first data processing system indicating its ability to provide the excerpts of XML data for the types of XML documents as specified in the specifications when the first data processing system requests for it.

When the first data processing system sends a second request by which the first data processing system requests for XML data relating to a type of XML documents the second request is also intercepted by the proxy system . The proxy system then requests the XML documents relating to the type of XML documents as specified in the second request from the other data processing system . The proxy system receives the XML documents from the other data processing system and extracts the excerpts of XML data according to the specifications given in the first request from the obtained XML documents. The excerpts of XML data are then sent by the proxy system to the first data processing system .

The proxy system can be regarded as a data processing system that implements the functionality of the above described proxy system in accordance with the invention. The same holds for the proxy system .

The data processing system might for example wish to receive excerpts of XML data from one or more XML documents from the data processing system . In order to set up a subsequent transfer of the excerpts of XML data it therefore sends a first request to the data processing system . The first request comprises specifications that specify for which type of XML document which excerpts of XML data shall be sent to the data processing system . The proxy system intercepts the first request and forwards the first request to the data processing system . The proxy system might not be aware of the fact the data processing system is not able to process the first request. The proxy system therefore forwards the first request to the data processing system in order to see if it receives an acknowledge message.

The first request is intercepted by the proxy system . The proxy system forwards the first request to the data processing system in order to find out if the data processing system is able to process and handle the first request. As this is not the case the proxy system does not receive an acknowledge message from the data processing system .

The proxy system therefore sends an acknowledge message in response to the reception of the first request to the proxy system . The proxy system sends an acknowledge message to the data processing system . The data processing system as well as the proxy system therefore get the knowledge that further second requests in accordance with the invention will be served by the data processing system though in fact the proxy system will serve these requests. This is however transparent to the systems and .

The data processing system further sends a second request as described before to the data processing system . The proxy system intercepts this second request and forwards the second request to the data processing system . The second request is then intercepted processed and answered by the proxy system .

Similarly when the data processing system requests XML data from the data processing system the proxy system acts as seen from the data processing system as second data processing system in accordance with the invention and as seen from the data processing system as first data processing system in accordance with the invention. The use of proxy systems in the network therefore ensures the interoperability between data processing systems in the network wherein some data processing systems are adapted to perform the methods in accordance with the invention and wherein others are not.

A proxy system might not even be located on a separate node of the network . For example the functionality of the proxy system could be directly implemented into the data processing system e.g. via a software component installed on this data processing system.

