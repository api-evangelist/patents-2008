---

title: Assessing student performance and providing instructional mentoring
abstract: A method, apparatus, and computer program product are present for performing a simulation. The simulation is executed. Simulation data is collected while executing the simulation to form collected simulation data. A number of events is generated by applying a first number of rules to the collected simulation data to form a number of generated events. A number of commands is generated as a reaction to the number of generated events by applying a second number of rules to the number of generated events to form a number of simulation commands. The number of simulation commands is sent to the simulation.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08170976&OS=08170976&RS=08170976
owner: The Boeing Company
number: 08170976
owner_city: Chicago
owner_country: US
publication_date: 20081017
---
The present disclosure relates generally to an improved data processing system and in particular to a method and apparatus for training students using a simulation. Still more particularly the present disclosure provides a method and apparatus for training students in aircraft operations using a simulation.

Aircraft training involves teaching students procedures regarding aircraft. These procedures may include for example maintenance procedures flying and other suitable procedures. With aircraft training a training course may be employed to teach students operations with respect to various types of aircraft. The training courses include theoretical or classroom learning performed on the ground.

Additionally students may perform operations using a simulation. The simulation may be for example a flight simulator or a maintenance simulator. A simulator is software and or hardware used to simulate various situations. A simulator may simulate a cockpit or flight deck of an aircraft. Further a simulator may also simulate tools and or procedures used by maintenance personnel.

When simulations are performed an instructor may provide feedback. In some simulations an instructor may take the form of a role player. For example with combat simulations a student may operate one simulator to fly to a target or a goal. The instructor may play an enemy pilot in another simulator.

With simulations another instructor may monitor the actions being performed by the student in the simulator. In some types of training the simulator may include a synthetic role player. Artificial intelligence or other types of processes may be used. After performing simulations using a simulator a student may then perform practical exercises on or in an aircraft.

With the use of instructors the ratio of students per instructor may result in bottlenecks in training pilots and or maintenance personnel. An instructor may be capable of only working with some set number of students in an efficient manner. Automated performance and assessment systems may be limited in the skills and feedback that may be provided using currently available simulators.

Therefore it would be advantageous to have an improved method and apparatus to train students using simulations that overcome the problems discussed above.

In one advantageous embodiment a method is present for performing a simulation. The simulation is executed. Simulation data is collected while executing the simulation to form collected simulation data. A number of events is generated by applying a first number of rules to the collected simulation data to form a number of generated events. A number of commands is generated as a reaction to the number of generated events by applying a second number of rules to the number of generated events to form a number of simulation commands. The number of simulation commands is sent to the simulation.

In another advantageous embodiment an apparatus comprises a data collector system an assessment system an instructor system and a number of data processing systems. The data collector system is capable of receiving simulation data from a number of simulations and capable of sending a number of commands to the number of simulations. The assessment system is capable of generating a number of events from the simulation data. The instructor system is capable of generating a reaction to the number of events. The data collection system the assessment system and the instructor system are capable of being executed on the number of data processing systems.

In yet another advantageous embodiment a computer program product comprises a computer recordable storage medium and program code stored on the computer recordable storage medium. Program code is present for executing the simulation as well as collecting simulation data while executing the simulation to form collected simulation data. Program code is also present for generating a number of events by applying a first number of rules to the collected simulation data to form a number of generated events. In addition program code is present for generating a number of commands as a reaction to the number of generated events by applying a second number of rules to the number of generated events to form a number of simulation commands. Further program code is present for sending the number of simulation commands to the simulation.

The features functions and advantages can be achieved independently in various embodiments of the present disclosure or may be combined in yet other embodiments in which further details can be seen with reference to the following description and drawings.

With reference now to the figures and in particular with reference to exemplary diagrams of data processing environments are provided in which illustrative embodiments may be implemented. It should be appreciated that are only exemplary and are not intended to assert or imply any limitation with regard to the environments in which different embodiments may be implemented. Many modifications to the depicted environments may be made.

In the depicted example server and server connect to network along with storage unit . In addition clients and connect to network . Clients and may be for example personal computers network computers or simulators. In the depicted example server provides data such as boot files operating system images and applications to clients and . Clients and are clients to server in this example. In the illustrative examples one or more components within network data processing system may be used in a simulation environment to provide training for various users. Network data processing system may include additional servers clients and other devices not shown.

Program code located in network data processing system may be stored on a computer recordable storage medium and downloaded to a data processing system or other device for use. For example program code may be stored on a computer recordable storage medium on server and downloaded to client over network for use by client .

In the depicted example network data processing system is the Internet with network representing a worldwide collection of networks and gateways that use the Transmission Control Protocol Internet Protocol TCP IP suite of protocols to communicate with one another. At the heart of the Internet is a backbone of high speed data communication lines between major nodes or host computers consisting of thousands of commercial governmental educational and other computer systems that route data and messages.

Of course network data processing system also may be implemented as a number of different types of networks such as for example an intranet a local area network LAN or a wide area network WAN . is intended as an example and not as an architectural limitation for the different illustrative embodiments.

With reference now to a block diagram of a data processing system is shown in which illustrative embodiments may be implemented. Data processing system is an example of a computer such as server or client in in which computer usable program code or instructions implementing the processes may be located for the illustrative embodiments.

In these examples data processing system may be used as part of a simulator or execute processes for a simulation environment. In this illustrative example data processing system includes communications fabric which provides communications between processor unit memory persistent storage communications unit input output I O unit and display .

Processor unit serves to execute instructions for software that may be loaded into memory . Processor unit may be a set of one or more processors or may be a multi processor core depending on the particular implementation. Further processor unit may be implemented using one or more heterogeneous processor systems in which a main processor is present with secondary processors on a single chip. As another illustrative example processor unit may be a symmetric multi processor system containing multiple processors of the same type.

Memory and persistent storage are examples of storage devices. A storage device is any piece of hardware that is capable of storing information either on a temporary basis and or a permanent basis.

Memory in these examples may be for example a random access memory or any other suitable volatile or non volatile storage device. Persistent storage may take various forms depending on the particular implementation. For example persistent storage may contain one or more components or devices.

For example persistent storage may be a hard drive a flash memory a rewritable optical disk a rewritable magnetic tape or some combination of the above. The media used by persistent storage also may be removable. For example a removable hard drive may be used for persistent storage .

Communications unit in these examples provides for communications with other data processing systems or devices. In these examples communications unit is a network interface card. Communications unit may provide communications through the use of either or both physical and wireless communications links.

Input output unit allows for input and output of data with other devices that may be connected to data processing system . For example input output unit may provide a connection for user input through a keyboard and mouse. Further input output unit may send output to a printer. Display provides a mechanism to display information to a user.

Instructions for the operating system and applications or programs are located on persistent storage . These instructions may be loaded into memory for execution by processor unit . The processes of the different embodiments may be performed by processor unit using computer implemented instructions which may be located in a memory such as memory . These instructions are referred to as program code computer usable program code or computer readable program code that may be read and executed by a processor in processor unit . The program code in the different embodiments may be embodied on different physical or tangible computer readable media such as memory or persistent storage .

Program code is located in a functional form on computer readable media that is selectively removable and may be loaded onto or transferred to data processing system for execution by processor unit . Program code and computer readable media form computer program product in these examples. In one example computer readable media may be in a tangible form such as for example an optical or magnetic disc that is inserted or placed into a drive or other device that is part of persistent storage for transfer onto a storage device such as a hard drive that is part of persistent storage .

In a tangible form computer readable media also may take the form of a persistent storage such as a hard drive a thumb drive or a flash memory that is connected to data processing system . The tangible form of computer readable media is also referred to as computer recordable storage media. In some instances computer readable media may not be removable.

Alternatively program code may be transferred to data processing system from computer readable media through a communications link to communications unit and or through a connection to input output unit . The communications link and or the connection may be physical or wireless in the illustrative examples. The computer readable media also may take the form of non tangible media such as communications links or wireless transmissions containing the program code.

In some illustrative embodiments program code may be downloaded over a network to persistent storage from another device or data processing system for use within data processing system . For instance program code stored in a computer readable storage medium in a server data processing system may be downloaded over a network from the server to data processing system . The data processing system providing program code may be a server computer a client computer or some other device capable of storing and transmitting program code .

The different components illustrated for data processing system are not meant to provide architectural limitations to the manner in which different embodiments may be implemented. The different illustrative embodiments may be implemented in a data processing system including components in addition to or in place of those illustrated for data processing system . Other components shown in can be varied from the illustrative examples shown.

The different embodiments may be implemented using any hardware device or system capable of executing program code. As one example the data processing system may include inorganic components integrated with organic components and or may be comprised entirely of organic components excluding a human being. For example a storage device may be comprised of an organic semiconductor.

As another example a storage device in data processing system is any hardware apparatus that may store data. Memory persistent storage and computer readable media are examples of storage devices in a tangible form.

In another example a bus system may be used to implement communications fabric and may be comprised of one or more buses such as a system bus or an input output bus. Of course the bus system may be implemented using any suitable type of architecture that provides for a transfer of data between different components or devices attached to the bus system. Additionally a communications unit may include one or more devices used to transmit and receive data such as a modem or a network adapter. Further a memory may be for example memory or a cache such as found in an interface and memory controller hub that may be present in communications fabric .

The different advantageous embodiments also recognize that with currently used performance assessment and mentoring programs bad training may occur that was not anticipated when the program was created. For example a student pilot may fly too low for an enemy aircraft when it is desirable for the pilot to fly at an altitude and speed relative to the enemy aircraft. The student pilot may fly 1 000 feet below the enemy aircraft rather than 500 feet below the enemy aircraft. Current simulators that perform assessment and training may not take this type of goal into account and may not provide an assessment of this type of requirement.

In yet another example the different advantageous embodiments recognize that in performing aircraft maintenance a maintenance operator may replace an entire engine and a fuel filter without testing the components. The different advantageous embodiments recognize that this type of process may generate the appropriate end result but it is not the correct approach. In some cases maintenance operators may swap out components without testing the components. If the simulator does not take this into account then the maintenance operator may learn bad procedures.

Bad training also may occur on the part of an instructor. For example an instructor may not cover all of the different issues or goals for a particular training session. This may occur when the instructor does not remember particular points that have been covered in prior sessions.

In another example the currently available simulation environments may not provide reliability in measuring student performance. For example if an instructor rating students is sick one day plays a role in a scenario on another day or flies for a missing student another instructor rating students may not provide the same type of rating.

Further a student may obtain bad habits when performing in a solo type situation. For example a situation display may be error free in a simulation and used for close in maneuvering. In the real world this type of display is inadequate for actual close in maneuvering. This type of habit may not be caught by a live instructor.

The different advantageous embodiments recognize that with current training courses the number of students that may be trained may be limited based on the number of instructors. Further the different advantageous embodiments also recognize that currently used automated performance assessment and instruction mentoring methodologies are complex and difficult to create and or adapt.

The different advantageous embodiments recognize also that new tactics or guidelines may be generated. Currently available simulators are unable to take these changes into account without the rewriting of code and or modification of code for the simulator. The different advantageous embodiments recognize that this type of re design for simulators may make changing the simulators costly and or time prohibitive.

Thus the different advantageous embodiments provide a method and apparatus for training students. The different advantageous embodiments include a method for performing a simulation in which a simulation is executed. Simulation data is collected while executing the simulation to form collected simulation data. A number of events is generated by applying a first number of rules to the collected simulation data to form a number of generated events. A number of commands are generated as a reaction to the number of generated events using a second number of rules to form a number of simulation commands. The simulation commands are sent to the simulation.

Further a number of rules in at least one of the first number of rules and the second number of rules may be changed prior to executing the simulation. The ability to change rules allows for flexibility in changing how events and or reactions are generated. As used herein the phrase at least one of when used with a list of items means that different combinations of one or more of the items may be used and only one of each item in the list may be needed. For example at least one of item A item B and item C may include without limitation item A or item A and item B.

This example also may include item A item B and item C or item B and item C. In other examples at least one of may be for example without limitation two of item A one of item B and ten of item C four of item B and seven of item C and other suitable combinations.

In some embodiments sending simulation commands to the simulation may involve sending the commands to a live instructor in the form of a notification. This notification may be sent back to the simulator or to some other device. For example the notification may be sent to an audio device in the form of a voice prompt or instruction.

With reference now to a diagram of a simulation environment is depicted in accordance with an advantageous embodiment. In this example simulation environment is an example of an environment that may be used to train students. In particular simulation environment may be used to assess student performance as well as provide instructional mentoring to students.

Simulation environment may be implemented using one or more data processing systems within network data processing system in .

Simulation environment includes number of simulators . A number as used herein refers to one or more items. For example a number of simulators is one or more simulators. Number of simulators is hardware and or software that may be used to perform simulations in training users of number of simulators . In this example simulator is an example of one simulator within number of simulators . Simulator includes computer display system user input system and simulation software .

Computer may be implemented using data processing system in . Display system may be a number of displays used to present the simulation to the user. These displays may include for example projection displays liquid crystal display panels and other suitable types of displays.

User input system may be any number of devices used to receive user input. User input system may for example simulate controls in a cockpit. User input system may be as complex as providing switches knobs touch panels joysticks columns and or other suitable hardware devices that may be present in a cockpit. In other advantageous embodiments user input system may be less complex. For example user input system may comprise only a pointing device and a keyboard.

Simulation software performs processes to execute simulation within simulator . Simulation software may take various forms. Simulation software may include but is not limited to Microsoft ESP X Plane and simulations built by Boeing Training Systems and Services. Microsoft ESP is available from Microsoft Corporation. X Plane is available from Laminar Research. Simulations from Boeing Training Systems and Services are available from Boeing Corporation.

In these examples simulation may take various forms. In the different advantageous embodiments simulation is used to perform aircraft training. This simulation may be for flight training maintenance training or some other suitable type of aircraft operation.

The different advantageous embodiments provide modular training system to aid training students using number of simulators . Modular training system contains data collector system assessment system and instructor system .

Data collector system contains number of data collectors . Data collector is an example of a data collector within number of data collectors . Data collector contains simulation software interface data format process and assessment module interface .

Assessment system contains number of assessment modules . Assessment module is an example of an assessment module within number of assessment modules . Assessment module includes assessment process rule engine and number of rules . Instructor system contains number of instructor modules . Instructor module is an example of an instructor module within number of instructor modules . Instructor module includes instructor process rule engine and number of rules .

Data collector system provides an interface to number of simulators . Data collector system may allow other components within modular training system to exchange information with number of simulators . For example simulation software interface provides an interface to simulation software such as for example simulation software . More specifically simulation software interface provides a capability to obtain simulation data from simulation software . Simulation software interface may contain processes such as for example application programming interfaces needed to communicate with simulation software .

Data format process may translate this data into a format for use by assessment module . This data forms formatted simulation data . Formatted simulation data may be recognizable and or usable by any assessment module within number of assessment modules .

Assessment module interface may send formatted simulation data to an assessment module such as assessment module . In a similar fashion commands received from assessment module through assessment module interface may be formatted by data format process into a format that is recognizable and or usable by simulation software . One example of these formatted commands is simulation specific command and is sent to simulation software through simulation software interface .

Data collector provides a capability to use modular training system with various types of simulators within number of simulators . Also when a new simulator is encountered in number of simulators a new data collector may be generated in number of data collectors to allow the exchange of information with a new simulator. In this manner alteration or changes to the other components within modular training system such as for example number of assessment modules and number of instructor modules may not need to be made.

Assessment module may use formatted simulation data to generate event . An event is any indication that the simulation has reached a number of criteria. For example an event is generated if a pilot has lowered the landing gear or an aircraft has fallen more than 1 000 feet below an enemy aircraft. Event is generated by applying number of rules with rule engine in assessment module . Assessment process may then send event to instructor module . Instructor process and instructor module may process event by applying number of rules to event using rule engine .

The application of number of rules to event generates reaction . Reaction may take various forms. For example without limitation reaction may be simulation command notification or some other suitable reaction.

Simulation command may be sent to data collector . Simulation command is in a format that may be usable by any data collector within number of data collectors . Data collector may then process simulation command using data format process to generate simulation specific command . Simulation specific command is a command in a format that is usable by a particular type of simulation software such as simulation software . Simulation specific command may then be sent to simulation software through simulation software interface .

Notification may be for example any and all messages a text message or some other type of suitable notification. If notification is sent to simulation software data format process may format notification into simulation specific command . In other advantageous embodiments data format process may format notification into a form for transmission to a remote data processing system or other device.

Simulation specific command may be used to alter simulation . Simulation specific command may be for example without limitation a command to lower a score increase a score change a parameter in simulation or perform some other suitable alteration to simulation . The alteration of the parameter within simulation may be for example the threat level of an aircraft or the weather in the simulation being modified based on student performance. In some simulations the weather simulation may run on a separate networked computer. In that case although the events come from an aircraft simulation the parameter to alter the simulation may be sent to the natural environment or weather simulator.

In these different advantageous embodiments rule engine and rule engine may be implemented using currently available rule engines. Rule engine and rule engine may be implemented using different types of rule engines including for example a reactive rule engine and or some other suitable engine. A production rule engine uses rules to represent behaviors of the type of condition then action. A reaction rule engine may detect incoming events and process event patterns.

With modular training system various modules may be used without changing simulation software . In other words all of the different modules within modular training system are able to communicate with each other using a standardized format and or protocol. Any standard and or protocol may be used. If a new module is created that new module uses the same format and or protocol. This architecture allows for the addition and changing of modules with less effort because modules can be swapped out for other modules that perform the same function. For example an assessment module for assessing landing skills may be replaced with another assessment module for preflight skills.

By making changes to modular training system different goals objectives and points may be made without necessarily requiring changes to simulation software . For example the modules may be used to prevent an occurrence of bad training. As a specific example when a student uses a situational display for close in maneuvering rather than a video display modular training system may generate a notification to an instructor identifying the problem. In other advantageous embodiments a student s score may be reduced cues may be sent to the student or other suitable commands may be generated to alter simulation .

For example number of rules and number of rules may be changed using other rules or rewritten. The rewriting of rules may be performed much more quickly than rewriting code for simulation software. By adding changing or otherwise modifying rules increased flexibility is provided within modular training system .

As another illustrative example modular training system may be changed from a maintenance training system to a flight training system by changing number of rules and number of rules . Further if goals or procedures change number of rules and number of rules may be changed augmented or otherwise modified to take into account these changes.

Modular training system may be used with many different types of simulation software. Different simulation software other than simulation software may be used with modular training system by selecting an appropriate data collector within number of data collectors .

Further the creation of a new data collector for new simulation software may be generated and used with the existing number of assessment modules and number of instructor modules . Also in different advantageous embodiments multiple assessment modules and multiple instructor modules may be used rather than a single assessment module and a single instructor module.

The illustration of simulation environment in is not meant to imply architectural and or physical limitations to the manner in which different advantageous embodiments may be implemented. For example in some advantageous embodiments only a single assessment module and a single instructor module may be present. In yet other advantageous embodiments multiple assessment modules may be used with a single instructor module. In still other advantageous embodiments the functions of data collector system may be implemented within assessment system and or instructor system .

For example assessment module may include a simulation software interface to obtain data directly from a simulator. In yet other advantageous embodiments additional components may be used in addition or in place of the ones illustrated. For example the different advantageous embodiments may include an audio generation device to present reaction outside of a simulation.

With reference now to a diagram illustrating data flow in a simulation environment is depicted in accordance with an advantageous embodiment. Simulation environment is an example of one implementation for simulation environment in . In this example simulation environment includes simulators data collector assessment module and instructor module .

As illustrated data collector may receive simulation data from simulators . Data collector may use interfaces such as for example application programming interfaces with simulators to obtain simulation data . Simulation data is formatted to form formatted simulation data by data collector . Formatted simulation data is a form usable by assessment module .

Assessment module invokes rule engine to apply rules to formatted simulation data . This process may generate one or more events. These events are sent to instructor module as detected events . Instructor module processes detected events by invoking rule engine to apply rules to detected events . Application of rules may generate reactions in the form of simulation commands . Simulation commands are sent back to data collector in these examples. Data collector may then format simulation commands into simulation specific commands for use in simulators .

Instructor module determines how to react to detected events based on rules . These reactions may include for example without limitation adjusting the student s score altering the simulation providing audio alerts to an individual or some other suitable type of reaction.

With reference now to a diagram illustrating a simulation environment is depicted in accordance with an advantageous embodiment. Simulation environment is an example of one implementation of simulation environment in .

As can be seen from this example implementation more than one assessment module and instructor module is present. The different advantageous embodiments provide a capability to use multiple modules to increase the flexibility and reconfigurability of simulation environments.

In this example simulation environment includes simulator data collector FAA flight rules assessment module carrier best practices assessment module military maneuver guidelines assessment module landing instructor module and basic flight rules instructor module .

Data collector obtains simulation data from simulator . Simulation data is formatted into formatted simulation data by data collector . Data collector then sends formatted simulation data to FAA flight rules assessment module carrier best practices assessment module and military maneuver guidelines assessment module . These different modules may process formatted simulation data and invoke the rule engine in the respective modules to apply the rules for the respective modules to the formatted simulation data.

In some advantageous embodiments a module may selectively process data depending on the type of data. In other advantageous embodiments all of the assessment modules may apply rules to all of formatted simulation data . With this type of implementation no events may be generated depending on the particular data in formatted simulation data and the particular rule being applied.

Detected events are a number of events that may be generated from one of FAA flight rules assessment module carrier best practices assessment module and military maneuver guidelines assessment module . Detected events are sent to landing instructor module and basic flight rules instructor module . These different instructor modules apply rules to detected events to generate various reactions.

For example landing instructor module may generate landing instructions for each phase of the flight as identified in detected events . Landing instructions may be sent to audio device near simulator for presentation to the student. Landing instructor module generates simulation commands such as instructional cues as reactions to one or more of detected events . Instructional cues are sent to data collector .

Data collector formats instructional cues into simulation commands which are sent to simulator for presentation to the student. Of course in some advantageous embodiments landing instructions also may be sent to data collector to be formatted into simulation commands for presentation as an audio cue or instruction in simulator .

In this manner the different advantageous embodiments allow multiple assessment modules to be used in the same simulation. This type of implementation of simulation environment allows for different groups of rules to be separated and used during an assessment. Further the different advantageous embodiments also allow an ability to provide different types of reactions using different types of instruction modules. As a result a particular simulation may be tailored to a particular need based on a selection of assessment modules and or instructor modules.

With reference now to a diagram illustrating an implementation of a simulation environment is depicted in accordance with an advantageous embodiment. In this example simulation environment is an example of a simulation environment that may be used for a military maneuver training exercise. Simulation environment includes simulator data collector target intercept parameters assessment module and target intercept instructor module .

Data collector receives simulation data from simulator . Data collector formats simulation data into formatted simulation data . Formatted simulation data is sent to target intercept parameters assessment module .

Target intercept parameters assessment module applies rules to formatted simulation data to generate detected events . Target intercept parameters include for example student altitude and heading in relation to the enemy aircraft. Each of these measurements may generate an event if the student exceeds the tolerances defined by the rules. Detected events are sent to target intercept instructor module .

Target intercept instructor module may generate reactions in the form of instructional cues and maneuver guidance message . Instructional cues may be sent back to data collector for formatting into simulation commands and sent back to simulator . Maneuver guidance message may be presented on audio device to the student or other user.

With reference now to another example of an implementation of a simulation environment is depicted in accordance with an advantageous embodiment. In this example simulation environment is used for commercial aircraft landing training. Simulation environment is another example of using multiple instruction modules. Simulation environment includes simulator data collector SEATAC approach parameters assessment module carrier flight and landing parameters assessment module and landing instructor module .

In this example simulator generates simulation data which is obtained by data collector . Data collector generates formatted simulation data using simulation data . Data collector sends formatted simulation data to SEATAC approach parameters assessment module and carrier flight and landing parameters assessment module .

These different assessment modules process formatted simulation data using rules and rule engines to generate detected events . Detected events are sent to landing instructor module . Landing instructor module processes detected events using rules and a rule engine to generate reactions in the form of instructional cues and landing instructions .

Instructional cues are sent to data collector and formatted to generate simulation commands . Landing instructions are sent to audio device for presentation to a student.

With reference now to a flowchart of a process for performing a simulation is depicted in accordance with an advantageous embodiment. The process illustrated in may be implemented using a simulation environment such as for example simulation environment in . The different operations in this process may be executed using one or more computers located within the simulation environment.

The process begins by executing a simulation operation . In these examples the simulation in operation may be simulation generated by executing simulation software in simulator in . The process then collects simulation data while executing the simulation to form collected simulation data operation . A number of events are generated by applying a first number of rules to the collected simulation data to form a number of generated events operation .

The process then generates a number of commands as a reaction to the number of generated events using a second number of rules to form a number of simulation commands operation . The process then sends the number of simulation commands to the simulation operation with the process terminating thereafter.

With reference now to a flowchart of a process for an assessment module is depicted in accordance with an advantageous embodiment. The process illustrated in may be implemented in an assessment module such as for example assessment module in .

The process begins by initializing the rule engine for the module operation . The process then identifies a number of rules to use operation . The process loads the identified number of rules into the rule engine operation . The process then waits to receive formatted simulation data operation .

When the formatted simulation data is received the process transforms the formatted simulation data into a format for use by the rule engine operation . The process then updates the current simulation state data operation . In operation the process converts the data into any format that may be needed by the particular rule engine. In operation the process updates the current simulation state data by placing the transformed formatted simulation data into a state object. State data includes data that is relevant to the simulation being monitored. This data may include for example altitude speed and or throttle positions.

The process then determines whether the current simulation state data should be processed operation . This determination may be made in a number of different ways. For example the processing of current simulation state data may be performed periodically based on some selected period of time that may be selected during initialization of the module. If the current simulation state data should not be processed in operation the process returns to operation to wait to receive additional formatted simulation data.

If the current simulation state data is to be processed the process loads the current simulation state data into the rule engine operation . Operation may involve passing a pointer to the state object from the rule engine. The process then invokes the rule engine operation . Operation causes the rule engine to apply the identified number of rules to the current simulation state data as stored in the state object.

Next a determination is made as to whether a number of events has been generated by the rule engine operation . If a number of events has been generated the process sends the number of events to an instructor module operation . The process then returns to operation as described above. With reference again to operation if a number of events has not been generated the process returns directly to operation .

With reference now to a flowchart of a process for an instructor module is depicted in accordance with an advantageous embodiment. The process illustrated in may be implemented in an instructor module such as for example instructor module in .

The process begins by initializing a rule engine operation . The process then identifies a number of rules to use with the rule engine operation . The process then loads the identified number of rules into the rule engine operation .

The process then waits to receive an event operation . Once an event is received the process stores the event in a state object operation . A determination is made as to whether the event should be processed operation . If the event is not to be processed the process returns to operation in a loop until the event should be processed.

If the event should be processed the process sends the state object to a rule engine operation . The process then invokes the rule engine to apply the identified rules to the event in the state object operation . A determination is made as to whether a number of simulation commands have been generated operation . If a number of simulation commands has been generated the process sends the number of simulation commands to a data collector operation with the process then returning to operation as described above. If a number of simulation commands has not been generated the process proceeds directly back to operation .

The flowcharts and block diagrams in the different depicted embodiments illustrate the architecture functionality and operation of some possible implementations of apparatus methods and computer program products. In this regard each block in the flowchart or block diagrams may represent a module segment or portion of computer usable or readable program code which comprises one or more executable instructions for implementing the specified function or functions.

In some alternative implementations the function or functions noted in the block may occur out of the order noted in the figures. For example in some cases two blocks shown in succession may be executed substantially concurrently or the blocks may sometimes be executed in the reverse order depending upon the functionality involved.

Thus the different advantageous embodiments provide a method apparatus and computer program product for performing the training activity. In the different advantageous embodiments a simulation is executed and simulation data is collected while executing the simulation. A number of events may be generated by applying a first number of rules to the collected simulation data. A number of commands may be generated as a reaction to the number of generated events using a second number of rules to form a number of simulation commands. This number of simulation commands may be sent to the simulation.

In this manner the different advantageous embodiments allow a student to optimize learning in a manner as desired for a particular course. The different advantageous embodiments allow for the use of current simulation programs without the rewriting of code or modifications to those programs. Instead the different advantageous embodiments may provide improved learning through the use of rules with a rule engine in different modules to assess and generate reactions. The reactions may provide feedback to the student.

Further with the modularity of the different components multiple assessment modules and or instructor modules may be used to generate a particular training program. Further modules may be tailored to a particular lesson or class. With the use of rules and rule engines the different advantageous embodiments provide for increased flexibility to change the manner in which a simulation is performed in a more rapid manner than currently permitted.

The different advantageous embodiments can take the form of an entirely hardware embodiment an entirely software embodiment or an embodiment containing both hardware and software elements. Some embodiments are implemented in software which includes but is not limited to forms such as for example firmware resident software and microcode.

Furthermore the different embodiments can take the form of a computer program product accessible from a computer usable or computer readable medium providing program code for use by or in connection with a computer or any device or system that executes instructions. For the purposes of this disclosure a computer usable or computer readable medium can generally be any tangible apparatus that can contain store communicate propagate or transport the program for use by or in connection with the instruction execution system apparatus or device.

The computer usable or computer readable medium can be for example without limitation an electronic magnetic optical electromagnetic infrared or semiconductor system or a propagation medium. Non limiting examples of a computer readable medium include a semiconductor or solid state memory magnetic tape a removable computer diskette a random access memory RAM a read only memory ROM a rigid magnetic disk and an optical disk. Optical disks may include compact disk read only memory CD ROM compact disk read write CD R W and DVD.

Further a computer usable or computer readable medium may contain or store a computer readable or usable program code such that when the computer readable or usable program code is executed on a computer the execution of this computer readable or usable program code causes the computer to transmit another computer readable or usable program code over a communications link. This communications link may use a medium that is for example without limitation physical or wireless.

A data processing system suitable for storing and or executing computer readable or computer usable program code will include one or more processors coupled directly or indirectly to memory elements through a communications fabric such as a system bus. The memory elements may include local memory employed during actual execution of the program code bulk storage and cache memories which provide temporary storage of at least some computer readable or computer usable program code to reduce the number of times code may be retrieved from bulk storage during execution of the code.

Input output or I O devices can be coupled to the system either directly or through intervening I O controllers. These devices may include for example without limitation keyboards touch screen displays and pointing devices. Different communications adapters may also be coupled to the system to enable the data processing system to become coupled to other data processing systems remote printers or storage devices through intervening private or public networks. Non limiting examples are modems and network adapters and are just a few of the currently available types of communications adapters.

The description of the different advantageous embodiments has been presented for purposes of illustration and description and is not intended to be exhaustive or limited to the embodiments in the form disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art. Although the different advantageous embodiments have been described with respect to simulations for aircraft other advantageous embodiments may be applied to simulations for other types of objects.

For example without limitation other advantageous embodiments may be applied to a mobile platform a stationary platform a land based structure an aquatic based structure a space based structure and or some other suitable object. More specifically the different advantageous embodiments may be applied to for example without limitation a submarine a bus a personnel carrier a tank a train an automobile a spacecraft a space station a satellite a surface ship a power plant a dam a weapon system a weapon an environmental process a testing device a manufacturing facility a building and or some other suitable object.

The different advantageous embodiments may be applied to simulations involving hardware. For example without limitation in an aircraft simulation the different advantageous embodiments may use an actual aircraft in addition to and or in place of software that simulates aircraft.

Hardware in the actual aircraft may provide the events and data in real time. Real time means that the data is sent as quickly as possible. An example of this implementation is an onboard assessment and or remote tool that may provide the pilot with real time cues when certain events occur. Such events may include for example without limitation altitude monitoring or landing approach guidance.

Further different advantageous embodiments may provide different advantages as compared to other advantageous embodiments. For example the different advantageous embodiments also may be applied for use with video games. The embodiment or embodiments selected are chosen and described in order to best explain the principles of the embodiments the practical application and to enable others of ordinary skill in the art to understand the disclosure for various embodiments with various modifications as are suited to the particular use contemplated.

