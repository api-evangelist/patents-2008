---

title: Managing a server-based directory of web services
abstract: A method and computer program product for defining at least one target system. The at least one target system is accessed to identify one or more web services available via the at least one target system, thus defining one or more available services. Information concerning the one or more available web services is identified. At least a portion of the information concerning the one or more available web services is published within a web services directory.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07904552&OS=07904552&RS=07904552
owner: International Business Machines Corporation
number: 07904552
owner_city: Armonk
owner_country: US
publication_date: 20081002
---
This disclosure relates to web service registries and repositories and more particularly to automatically updating web service registries and repositories.

Often in enterprise environments various web services may be simultaneously deployed and running. Unfortunately these web services may be underutilized because users within the enterprise environment simply do not know that such web services are available.

Accordingly web service registries and repositories act as a centralized storage location for storing web service definitions and web service metadata. Unfortunately these web service registries and repositories are not automatically updated and are often out of date or inaccurate. Accordingly in order to maintain the accuracy of these web service registries and repositories the web service registries and repositories must be manually updated by an administrator.

In a first implementation a method includes defining at least one target system. The at least one target system is accessed to identify one or more web services available via the at least one target system thus defining one or more available services. Information concerning the one or more available web services is identified. At least a portion of the information concerning the one or more available web services is published within a web services directory.

One or more of the following features may be included. Identifying information concerning the one or more available web services may include one or more of retrieving information concerning the one or more available web services from the at least one target system and generating information concerning the one or more available web services.

The one or more web services available via the at least one target system may be defined via a web services description language WSDL file. The one or more web services available via the at least one target system may be defined via a service component architecture SCA module.

The SCA module may define one or more of a WSDL file a library file and a module file. The information identified concerning the one or more available services may include one or more of a WSDL file an SCA module application metadata for identifying an enterprise application through which the one or more available services is available system metadata for identifying the target system on which the enterprise application is executed and status metadata for defining the status of the one or more available services.

Publishing at least a portion of the information concerning the one or more available web services within a web services directory may include graphically depicting at least a portion of the information concerning the one or more available web services within the web services directory. Publishing at least a portion of the information concerning the one or more available web services within a web services directory may include making available for processing at least a portion of the information concerning the one or more available web services within the web services directory.

The web services directory may include a services registry and repository. The information identified concerning the one or more available services may be filtered to remove redundant web service information prior to publishing at least a portion of the information concerning the one or more available web services within the web services directory.

In another implementation a computer program product resides on a computer readable medium that has a plurality of instructions stored on it. When executed by a processor the instructions cause the processor to perform operations including defining at least one target system. The at least one target system is accessed to identify one or more web services available via the at least one target system thus defining one or more available services. Information concerning the one or more available web services is identified. At least a portion of the information concerning the one or more available web services is published within a web services directory.

One or more of the following features may be included. Identifying information concerning the one or more available web services may include one or more of retrieving information concerning the one or more available web services from the at least one target system and generating information concerning the one or more available web services.

The one or more web services available via the at least one target system may be defined via a web services description language WSDL file. The one or more web services available via the at least one target system may be defined via a service component architecture SCA module.

The SCA module may define one or more of a WSDL file a library file and a module file. The information identified concerning the one or more available services may include one or more of a WSDL file an SCA module application metadata for identifying an enterprise application through which the one or more available services is available system metadata for identifying the target system on which the enterprise application is executed and status metadata for defining the status of the one or more available services.

Publishing at least a portion of the information concerning the one or more available web services within a web services directory may include graphically depicting at least a portion of the information concerning the one or more available web services within the web services directory. Publishing at least a portion of the information concerning the one or more available web services within a web services directory may include making available for processing at least a portion of the information concerning the one or more available web services within the web services directory.

The web services directory may include a services registry and repository. The information identified concerning the one or more available services may be filtered to remove redundant web service information prior to publishing at least a portion of the information concerning the one or more available web services within the web services directory.

The details of one or more implementations are set forth in the accompanying drawings and the description below. Other features and advantages will become apparent from the description the drawings and the claims.

Referring to there is shown directory management process that may reside on and may be executed by server computer which may be connected to network e.g. the Internet or a local area network . Examples of server computer may include but are not limited to a personal computer a server computer a series of server computers a mini computer and a mainframe computer. Server computer may be a web server or a series of servers running a network operating system examples of which may include but are not limited to Microsoft Windows XP Server Novell Netware or Redhat Linux for example.

As will be discussed below in greater detail directory management process may define at least one target system. The at least one target system may be accessed to identify one or more web services available via the at least one target system thus defining one or more available services. Information concerning the one or more available web services may be identified. At least a portion of the information concerning the one or more available web services may be published within a web services directory.

The instruction sets and subroutines of directory management process which may be stored on storage device coupled to server computer may be executed by one or more processors not shown and one or more memory architectures not shown incorporated into server computer . Storage device may include but is not limited to a hard disk drive a tape drive an optical drive a RAID array a random access memory RAM and a read only memory ROM .

Server computer may execute a web server application examples of which may include but are not limited to IBM WebSphere Microsoft IIS Novell Webserver or Apache Webserver that allows for HTTP i.e. HyperText Transfer Protocol access to server computer via network . Network may be connected to one or more secondary networks e.g. network examples of which may include but are not limited to a local area network a wide area network or an intranet for example.

Server computer may execute web services registry and repository WSRR application examples of which may include but are not limited to IBM WebSphere services registry and repository. WSRR application may allow an organization to store manage and access their web service information so that the corresponding web services may be efficiently utilized by the employees of the organization. Directory management process may be a stand alone application that interfaces with WSRR application or an applet application that is executed within WSRR application .

The instruction sets and subroutines of WSRR application which may be stored on storage device coupled to server computer may be executed by one or more processors not shown and one or more memory architectures not shown incorporated into server computer .

The instruction sets and subroutines of browser applications which may be stored on storage devices respectively coupled to client electronic devices respectively may be executed by one or more processors not shown and one or more memory architectures not shown incorporated into client electronic devices respectively . Storage devices may include but are not limited to hard disk drives tape drives optical drives RAID arrays random access memories RAM read only memories ROM compact flash CF storage devices secure digital SD storage devices and memory stick storage devices. Examples of client electronic devices may include but are not limited to personal computer laptop computer personal digital assistant notebook computer a server not shown a data enabled cellular telephone not shown and a dedicated network device not shown . Using browser applications users respectively may access and browse one or more services directories to be discussed below in greater detail maintained by WSRR application .

Users may access WSRR application directly through the device on which the browsing application e.g. browsing applications is executed namely client electronic devices for example. Users may access WSRR application directly through network or through secondary network . Further server computer i.e. the computer that executes WSRR application may be connected to network through secondary network as illustrated with link line shown in phantom .

The various client electronic devices may be directly or indirectly coupled to network or network . For example personal computer is shown directly coupled to network via a hardwired network connection. Further notebook computer is shown directly coupled to network via a hardwired network connection. Laptop computer is shown wirelessly coupled to network via wireless communication channel established between laptop computer and wireless access point i.e. WAP which is shown directly coupled to network . WAP may be for example an IEEE 802.11a 802.11b 802.11g Wi Fi and or Bluetooth device that is capable of establishing wireless communication channel between laptop computer and WAP . Personal digital assistant is shown wirelessly coupled to network via wireless communication channel established between personal digital assistant and cellular network bridge which is shown directly coupled to network .

As is known in the art all of the IEEE 802.11x specifications may use Ethernet protocol and carrier sense multiple access with collision avoidance i.e. CSMA CA for path sharing. The various 802.11x specifications may use phase shift keying i.e. PSK modulation or complementary code keying i.e. CCK modulation for example. As is known in the art Bluetooth is a telecommunications industry specification that allows e.g. mobile phones computers and personal digital assistants to be interconnected using a short range wireless connection.

Client electronic devices may each execute an operating system examples of which may include but are not limited to Microsoft Windows Microsoft Windows CE Redhat Linux or a custom operating system.

For the following discussion browser application is going to be described for illustrative purposes. However this is not intended to be a limitation of this disclosure as other browsing applications e.g. browsing applications may be equally utilized.

Assume for illustrative purposes that WSRR application maintains web services directory e.g. a services registry repository that identifies the various web services that are available for use by e.g. users . Server computer may be a web server that is configured to provide three web services namely web service . Web services may be accessible by users via browser applications executed on client electronic devices .

When accessing one or more of web services a standardized protocol may be used. For example SOAP i.e. Simple Object Access Protocol may be used to couple a client electronic device e.g. desktop computer laptop computer personal digital assistant and notebook computer to web services .

As is known in the art the SOAP protocol allows XML eXtensible Markup Language messages to be exchanged across computer networks e.g. networks . These messages may be exchanged using HTTP i.e. HyperText Transfer Protocol .

SOAP may use the RPC i.e. Remote Procedure Protocol process in which a first network node e.g. laptop computer sends a request message to another network node e.g. server computer and the second network node e.g. server computer sends a response message to the first network node e.g. laptop computer . While the system is described above as utilizing SOAP other configurations are possible and are considered to be within the scope of this disclosure. For example other protocols may be used such as JSON i.e. Java Script Object Notation REST i.e. REpresentational State Transfer and XML RPC i.e. eXtensible Markup Language Remote Procedure Protocol .

Server computer may execute API to enable communication between server computer and e.g. desktop computer laptop computer personal digital assistant and notebook computer via e.g. SOAP. While a single API i.e. API is shown this is for illustrative purposes only as other configurations are possible and are considered to be within the scope of this disclosure. For example a unique API may be utilized for each web service available.

API may act as an interface for the various web services available via server computer thus allowing requests for services e.g. web services to be made by other computer programs e.g. browser applications executed on e.g. desktop computer laptop computer personal digital assistant and notebook computer .

API may describe how browser applications may access e.g. web services without granting access to the source code of the services or requiring a detailed understanding of the internal workings of the services.

Assume for illustrative purposes that web service is a stock quote service web service is an insurance quote service and web service is an address lookup service. Accordingly API may be configured to enable e.g. user of e.g. laptop computer to obtain a stock quote for e.g. 1 000 shares of IBM stock. API may be configured to further allow user of personal digital assistant to obtain a quote for 1 000 000 of term life insurance. Additionally API may be configured to further allow user of notebook computer to determine an address of a store within Armonk N.Y.

When configuring a client electronic device e.g. laptop computer to access e.g. web services offered by server computer a standardized protocol may be established between the two devices e.g. laptop computer and server computer . As discussed above an example of such a standardized protocol is SOAP. Once the standardized protocol is established and the devices are capable of communicating with each other one or more WSDL i.e. Web Services Description Language files e.g. WSDL file resident on e.g. storage device may be processed by the client electronic device e.g. laptop computer to allow for communication between laptop computer and server computer .

WSDL file may be a service description typically XML describing how a client device may communicate with a web service. For example WSDL may describe how browser application and therefore laptop computer may communicate with e.g. web service via API . For example WSDL may define e.g. the protocol bindings and message formats required to interact with web service . Typically the supported operations and messages are described abstractly and then bound to the network protocol e.g. SOAP . Accordingly WSDL may define the public interface for e.g. web service .

Accordingly when configuring e.g. laptop computer to access e.g. web service once communication is established using a standardized protocol between e.g. server computer and e.g. laptop computer laptop computer may obtain one or more WSDL files e.g. WSDL file from server computer and may process the obtained WSDL file s to effectuate communication between the two systems i.e. laptop computer and server computer . Examples of WSDL files are as follows 

When generating WSDL files the manner in which the WSDL files are configured may vary based upon the intent of the programmer. For example a single WSDL file may be designed to effectuate access for all services functions available via server computer namely web services . Alternatively separate WSDL files may be made available for each service function available within server computer . For example a first WSDL file may be made available for web service a second WSDL file may be made available for web service and a third WSDL file may be made available for web service .

As stated above and as will be discussed below in greater detail directory management process may define at least one target system. The at least one target system may be accessed to identify one or more web services available via the at least one target system thus defining one or more available services. Information concerning the one or more available web services may be identified. At least a portion of the information concerning the one or more available web services may be published within a web services directory.

Assume for this example that server computer has not yet been indexed by WSRR application and therefore web services are not published included defined within web services directory . For this illustrative example assume that user is an administrator of WSRR application and would like to have web services defined within web services directory .

Referring also to user may utilize directory management process to define at least one target system for interrogation by directory management process . Specifically user may define one or more target systems e.g. server computer for directory management process to analyze. When defining the target system s user may utilize user interface rendered by directory management process . The manner in which the target system s are defined within user interface may vary depending on the manner in which user interface is configured. For example user interface may be configured to e.g. allow user to define server computer within defining field via a unique IP i.e. internet protocol address e.g. 192.168.1.1 or a unique computer name e.g. speedy2 within a computer domain.

While directory management process is described as allowing user to define the target system via IP addresses and or computer names this is for illustrative purposes only as other configurations are possible. For example a URL may be able to define a target system provided that the URL definitively defines a unique target system or a plurality of systems that each offer the same web services .

Once sufficiently defined user may select interrogate button using onscreen pointer controllable via e.g. a mouse not shown to initiate directory management process accessing the target system e.g. server computer to identify one or more web services available via e.g. server computer . Alternatively user may select cancel button with onscreen pointer .

As discussed above and in this particular example server computer is configured to provide three web services namely web service . Accordingly upon directory management process accessing server computer directory management process may identify web services as being available via server computer .

Once directory management process identifies the specific web services e.g. web services available via server computer directory management process may identify information concerning web services . As will be discussed below in greater detail at least a portion of information concerning web services may be published within web services directory .

The various web services e.g. web services available via server computer may be defined using various methodologies examples of which may include but are not limited to one or more web services description language WSDL files and or one or more service component architecture SCA modules wherein SCA modules may include a WSDL file a library file and another module file.

Accordingly the information identified by directory management process concerning the one or more available web services e.g. web services may include one or more of a WSDL file an SCA module application metadata for identifying an enterprise application e.g. a stock quote application not shown through which one or more available services e.g. a stock quote service is available system metadata for identifying the target system e.g. server computer on which the enterprise application e.g. the stock quote application not shown is executed and status metadata for defining the status e.g. online offline of the one or more available services e.g. the stock quote service .

Once directory management process identifies information concerning web services all or a portion of information may be retrieved from e.g. server computer and stored on server computer i.e. the computer that executes directory management process . Additionally directory management process may generate at least a portion of information based at least in part upon the information retrieved from directory management process . Examples of information generated by directory management process may include but are not limited to a date time stamp concerning the date and time that information was retrieved from e.g. server computer and the above described status metadata.

At least a portion of information retrieved from e.g. server computer concerning web services may be filtered to remove redundant information. For example assume that a single service e.g. web service is described using both a WSDL file for a first type of system and a SCA module for a second type of system . As discussed above SCA modules may include a WSDL file a library file and another module file. Accordingly when identifying and retrieving information concerning web service a redundant information condition may occur. Specifically two identical WSDL files may be included within information one the stand alone WSDL file and the second being the WSDL file included within the SCA module.

Accordingly directory management process may filter the redundant copy of the WSDL file from information . When filtering information directory management process may utilize one of many known file comparison techniques e.g. CRC checks byte by byte comparisons to determine if any of the individual files included within information are redundant. If so directory management process may remove the redundant file.

Once directory management process filters information if filtering is performed directory management process may publish all or a portion of information within web services directory .

Concerning the manner in which directory management process publishes all or a portion of information to web services directory all or a portion of information may be graphically depicted within web services directory . Additionally alternatively all or a portion of information may be made available for processing by e.g. laptop computer .

For example once directory management process publishes all or a portion of information within web services directory one or more of users may access web services directory using one or more of browser applications respectively . Once web services directory is accessed the data included within web services directory may be presented to the user in various ways such as in table and table in which the WSDL files included within web services directory are presented in tabular form and associated with various namespaces e.g. http soap.amazon.com . Additionally alternatively the data included within web services directory may be presented to the user in tabular form see table table in which one or more details of a particular WSDL file e.g. AddressFetcher2.wsdl WSRR Goverance API binding.wsdl .

Additionally directory management process may process i.e. shred at least a portion of information retrieved from e.g. server computer concerning web services to parse information into a series of discrete logical objects not shown . Once parsed directory management process may apply the above described metadata to one or more of the discrete logical objects to define e.g. the enterprise application e.g. a stock quote application not shown and target system e.g. server computer associated with the discrete logical object. Further the metadata may define relationships between the above described logical objects and one or more of the above described WSDL files SCA modules or any portions thereof. Directory management process may render the above described discrete logical objects in a graphical format as shown in e.g. display screen .

A number of implementations have been described. Nevertheless it will be understood that various modifications may be made. Accordingly other implementations are within the scope of the following claims.

