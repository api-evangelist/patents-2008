---

title: Performance monitoring and control of a multifunction printer
abstract: A method and system for monitoring performance of a multifunction printer (MFP) throughout the lifetime of the MFP. The MFP may include a task run-time controller to collect performance information from the MFP and to transmit the performance information to a receiver such as a host, an MFP front panel, or a website. The task run-time controller may include a high resolution timer to collect task execution times or idle time for tasks running on the MFP. The task run-time controller may also receive internal task scheduling policy alterations based on an analysis of the performance information.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08102552&OS=08102552&RS=08102552
owner: Sharp Laboratories of America, Inc.
number: 08102552
owner_city: Camas
owner_country: US
publication_date: 20080403
---
This application is related to commonly assigned U.S. patent application Ser. No. 12 062 307 filed Apr. 3 2008 titled CUSTOM SCHEDULING AND CONTROL OF A MULTIFUNCTION PRINTER herein incorporated by reference.

This application pertains to performance monitoring and controlling of a multifunction printer MFP and more particularly to methods and systems for performance monitoring and controlling the MFP throughout its lifetime.

In an effort to reduce the complexities costs and excessive space associated with function specific printing and scanning machines MFPs are rapidly being adopted by businesses and individuals the world over. MFPs attract a wide array of users from small start up companies to large established businesses. The attraction may be attributed to the MFP s versatility as a single machine with multiple capabilities such as printing scanning copying faxing and networking.

Conventionally developers of MFPs e.g. engineers technicians or other developers have ready access to firmware operating within an MFP during a development cycle. The development cycle may begin in an engineering lab and end at an MFP factory whereupon the MFP is shipped to a customer or other user. During the development cycle the developers can monitor performance of the MFP in a relatively effortless manner using specialized tools within a specific development environment. Also the developers may establish favorable parameters within which the MFP operates according to the performance measurements obtained within their specific development environment. However once the MFP has been shipped from the factory to the user it becomes difficult if not impossible for the developers to monitor the firmware operating within the MFP. Therefore the developers do not have visibility or control of the MFP throughout the lifetime of the MFP.

Operating environments of MFPs are unique because usage patterns of the MFP may considerably fluctuate from user to user. Some usage patterns may require the prioritization of one MFP operation such as printing over another operation such as scanning. The prioritization of MFP operations requires the prioritization of processor resources of an MFP. The dedication of processor resources to a given MFP operation may come at the expense of other MFP operations.

For example if the printing operation is currently occupying a significant portion of the processor s resources other operations such as scanning or copying may be impeded. Or if the scanning or copying operations are currently occupying a significant portion of the processor s resources the printing operation may be impeded. As a result some operations that may be considered more urgent than others during a given period of time could be undesirably delayed. If the usage patterns indicate that the scanning operation should have a higher urgency than ongoing printing operations the MFP may nonetheless have been constructed to dedicate processor resources first to the printing operation and second to the scanning operation. This may affect work flows to the point of causing loss of time decreased efficiency and wasteful usage which ultimately leads to at the very least frustration or worse lost profits.

Moreover usage patterns of the MFP may dictate that certain times of day are more demanding for one operation and less demanding for another operation. For example if the MFP is used more often in the morning to fulfill urgent printing requests in the afternoon to fulfill urgent copying requests and in the evening to fulfill urgent scanning requests a conventional MFP may not allocate resources appropriately. To make matters worse once the MFP has been shipped from the factory to the user it is difficult for the developers to enable or extract performance information related to the usage patterns of the MFP.

As a result a developer must therefore attempt to replicate the user s particular usage patterns in a lab or at the user s location in an attempt to characterize the performance of the MFP under simulated usage patterns thought to be employed by the user. The replication may never be precise enough to discover the exact problem of the user or to accurately measure the performance of the MFP under the specific usage patterns. Even where the performance can be measured to some lesser degree of accuracy through the replication effort after spending time and money on such an effort the manufacturer of the MFP may have to design a special software patch in an attempt to remedy the inefficiencies discovered as a result of measuring the performance. This can be inconvenient to the user and costly to the manufacturer because of the interruption that results from taking the MFP offline to install the special patch and the effort expended by the manufacturer to design and manage the special patch.

Furthermore the conventional approach for addressing customer problems fails to provide an efficient cycle of real time performance monitoring and control of the MFP. In other words the turn around time for diagnosing a problem and providing a solution to the user is prohibitively long.

Example embodiments of the present invention provide for monitoring MFP operations such as scanning printing copying faxing or networking among others throughout the lifetime of the MFP whether remotely or on site and in run time or via firmware upgrade. Performance information may be collected during the monitoring. The performance information may be presented in a user friendly format which may convey information about MFP operations such as printing scanning copying faxing or networking operations to the customer. Alternatively the performance information may be displayed in a detailed format which may be particularly useful for skilled technicians or developers who need access to a high level of detail regarding the performance of the MFP.

In some example embodiments of the present invention the performance information may be collected for task groups associated with MFP operations using a high resolution timer. The collected performance information may be analyzed and a determination can be made whether to apply an alteration to the MFP internal task scheduling policy responsive to the analysis.

Thus the performance information can be obtained immediately without replacing the firmware thereby providing a substantially instantaneous turn around time for diagnosing a problem and providing a solution to the user.

The foregoing and other aspects of the invention will become more readily apparent from the following detailed description which proceeds with reference to the accompanying drawings.

A multifunction printer MFP is capable of performing a variety of operations such as printing scanning copying faxing and networking among other operations. While developers can monitor the performance of these operations using specialized tools under a specific development environment the developers are unable to continue monitoring the performance over the lifetime of the MFP. For example once the MFP has been shipped from the factory to the customer or user and is located remotely and placed under operation by the user the developers lose the ability to monitor internal task performance or other performance information. Similarly under these circumstances the developers are unable to easily make alterations to the operating parameters of the MFP such as by making changes to internal task scheduling levels or custom scheduling policies.

Furthermore the performance monitoring capability can be added or enabled during run time i.e. on the fly operation of the MFP in one example embodiment. In other words it is not required that the MFP undergo a boot up or power cycle to have the monitoring capability added or enabled. Alternatively the performance monitoring capability may be added or enabled during either a boot up or firmware installation operation. In another example embodiment the performance monitoring capability can be enabled by default. Once the performance monitoring capability has been added or enabled to the MFP performance information can thereafter be extracted or collected from the MFP .

The performance information may be collected from the MFP either remotely or on site. In other words the performance information can collected from a location different from the user s location or different from wherever the MFP is located. Alternatively the performance information can be collected on site at the user s location or a location substantially the same as where the MFP is located.

The performance information can be presented in different formats. A desired presentation format may be selected. In one example embodiment the performance information may be presented in a user friendly format which may convey information about MFP operations such as printing scanning copying faxing or networking operations. This format may be particularly useful to a user who is not a skilled technician or developer but who nevertheless has an interest in knowing how their purchased or leased MFP performs. In another example embodiment the performance information may be presented in a more detailed manner which may convey information about individual tasks such as internal task scheduling levels task priorities task execution times or a history of processor idle time. In this manner the performance information may be tailored to include task group information or individual task information. The detailed format may be particularly useful for skilled technicians or developers who need access to a high level of detail regarding the performance of the MFP.

The performance information may then be sent to a receiver such as an MFP front panel a host a website a printout a fax machine or some other medium which may be capable of displaying printing or otherwise presenting the performance information . The performance information may be presented in the desired presentation format . The host may be a computer a portable device such as a phone or personal digital assistant PDA among other possibilities. The printout may originate from the MFP or another MFP different from the MFP . One or more of the receivers may receive a report or a summary of the performance information and may then present the information to a user or developer.

According to some example embodiments of the present invention the performance information may be periodically generated and automatically transmitted to the MFP front panel the host or the website . Alternatively the performance information may be periodically generated and displayed responsive to a request by the user the skilled technician or the developer.

Also the performance information may be permanently stored in a non volatile storage medium such as a read only memory ROM a flash memory device or a hard disk drive not shown among other possibilities whether located within or outside of the MFP thereby providing a way to preserve the performance information even after a power cycle of the MFP . Similarly the performance information may be temporarily stored in either a non volatile storage medium or a volatile storage medium. Thus a history of performance information may be recorded and retrieved at a later time as needed.

The MFP may therefore be monitored whether remotely or on site and in run time or via firmware upgrade. The performance information may be conveyed to a user using a user friendly format which may include less detailed task group information or to a skilled technician or developer using a high level of detail of the internal tasks of the MFP . The performance information may be transmitted to a receiver such as the host the MFP front panel or the website and displayed using the desired presentation format .

Furthermore the internal task scheduling policy alteration may be initiated or performed during run time operation of the MFP in one example embodiment. In other words it is not required that the MFP undergo a boot up or power cycle to apply the alteration . Alternatively the internal task scheduling policy alteration may be applied during either a boot up or firmware installation operation. In some example embodiments a skilled technician or developer may initiate the internal task scheduling policy alteration . In other example embodiments the alteration may be automatically adjusted for example responsive to predefined MFP custom scheduling policies as further discussed below.

Task tuning functions may be used to implement the alteration on the MFP during run time operation of the MFP . For example the task tuning functions may include adjusting task scheduling levels altering individual task scheduling policies assigning processor affinity changing time slice amount re ordering of tasks in round robin fashion deactivation or activation of tasks or operations shutdown or startup tasks loading or unloading task execution code among other functions.

Specifically adjusting the task scheduling levels may include changing priority levels of MFP task groups associated with MFP operations such as printing scanning copying faxing or networking operations. In other word each operation may have a respective task group associated with it such as a printing task group a scanning task group a copying task group a faxing task group and a networking task group among other possibilities. Adjusting the priority level of one of the operations e.g. such as printing may be accomplished by adjusting the priority level of processor tasks of a task group associated with the operation e.g. the printing task group .

Operations of the MFP may be monitored to determine whether one MFP operation should have a higher priority than another MFP operation. For example if the MFP is heavily occupied with a printing operation while an urgent scanning operation is waiting the priority levels of a task group associated with the scanning operation may be elevated during run time of the MFP to accommodate the urgent operation. Other adjustments can be made based on idle time of one or more processors of the MFP . Measurements can be taken to identify how much idle time is observed and what tasks are causing the idle time.

The task tuning functions may also include time slicing or round robin algorithms to more efficiently manage operations of the MFP . If the MFP has multiple processors tasks with an affinity to one processor can be shifted to another processor using a processor affinity approach thereby increasing the performance of the MFP . In other words on a multi core or multi processor MFP where idle time is dominant in one core or processor some tasks can be scheduled on the core or processor with higher idle time to achieve a performance gain.

If the performance information reveals that tasks associated with networking operations are significantly idle for example the priority level of the those tasks may be lowered such that more urgent operations like printing are allowed to complete more efficiently. Further the task tuning functions may be carried out in any fashion statically or dynamically non real time or real time. Persons with skill in the art will recognize that other actions functions besides those shown at of may be performed.

MFP custom scheduling policies may include time based custom scheduling usage based custom scheduling and installation or upgrade based custom scheduling and may be activated either periodically or aperiodically as further described below. The custom scheduling policies may perform one or more internal task scheduling policy alterations is using the MFP task tuning functions to achieve the desired custom operating environment of the MFP .

Because the alterations can be made remotely or on site and during run time operation of the MFP and because the performance information can be collected remotely or on site and during run time operation of the MFP the effectiveness of the task scheduling policy alteration can be obtained immediately without replacing the firmware thereby providing a substantially instantaneous turn around time for diagnosing a problem and providing a solution to the user.

In one example embodiment of the present invention the custom scheduling policies may be activated manually or customized remotely. In another example embodiment the custom scheduling policies may be activated automatically. In some example embodiments the activation of the custom scheduling policies may immediately interrupt the current operation and allow the more urgent operation to begin. Alternatively the more urgent operation may be allowed to begin after the completion of the current operation. Periodic custom scheduling policies may be established such as a fixed daily routine. Conversely aperiodic custom scheduling policies may be established on a one time or a single execution basis.

The time based custom scheduling policy may include scheduling polices which can be implemented for different periods time. In some example embodiments a custom based printing scheduling policy can be activated in the morning and a custom scanning policy can be activated in the afternoon among other possibilities. When the custom printing scheduling policy is activated for example adjustments can be made to underlying tasks associated with the printing operation. The adjustments can include the internal task scheduling policy alteration using the task tuning functions as explained above.

If printing operations are deemed to be more urgent in the morning faxing operations more urgent at mid day scanning operations more urgent in the afternoon and faxing operations more urgent in the evening these various custom scheduling policies can be implemented. While a representation of a single day is shown in different scheduling policies can be activated at different times for any period of time e.g. a day week month or year etc. . The time based scheduling policies similarly can be distributed over a week month year or more than year. Persons with skill in the art will recognize that any combination number order and period of time for the time based scheduling policies may be used.

Another possible criteria for time based scheduling is the measurement of performance for specific periods of time collected over a substantial duration i.e. enough to be able to gather significant statistics of usage patterns. For example the substantial duration may be on the order of hours days weeks or even years. Thus even though an operation may be deemed urgent by a user the performance measurements may dictate a different scheduling policy to optimize or improve the performance of the MFP .

Further the time based custom scheduling policy may be determined and activated either manually by a user or by a skilled technician as further explained in detail below or dynamically using measurements of processor idle time or task execution times . Other criteria besides processor idle time or task execution times can also be used. Sometimes the processor idle time or task execution times may contradict the other criteria wherein a determination can be made as to which criteria or statistics should help determine the time based custom scheduling policy .

The usage based custom scheduling policies may be determined based upon statistical usage patterns of the MFP such as an average number of copied scanned faxed or printed images made over a period of time or based on a history of processor idle time. The statistical usage patterns may also include a task timing summary as described below or other statistics associated with MFP operations. The averages may then be compared to determine which internal task scheduling policy alterations should be made the possibilities of which are explained in detail above with reference to .

After analyzing the statistical usage patterns the appropriate custom scheduling policy can be derived and executed at the appropriate time either through manual intervention by a skilled technician or other user or alternatively through dynamic scheduling adjustments without manual intervention. Because measuring and averaging the number of printed scanned copied or faxed images may not require any user interaction with the MFP the MFP may dynamically monitor and manage the operations so as to determine that one operation such as printing should have a higher priority than another operation such as scanning and to activate the usage based custom scheduling policy responsive to the dynamic monitoring.

Alternatively a skilled technician or developer may actively monitor performance characteristics of the MFP such as a history of processor idle time or task execution times or the average number of printed scanned copied or faxed images and may then manually initiate internal task scheduling policy alterations to adjust the scheduling policy during run time as explained in more detail below. Persons with skill in the art will recognize that other criteria besides averages processor idle time or task execution times can also be used to determine the custom scheduling policy.

The custom scheduling policies of the MFP may also include installation or upgrade based custom scheduling policies . In other words the custom scheduling policy may be determined at the time of installation of the MFP at a user location based on the expected usage patterns of the user. Or the custom scheduling policy may be determined while upgrading operational software to the MFP . In either case an estimation can be made by a skilled technician or developer regarding what the expected MFP usage characteristics will be for the particular user location and activate the installation or upgrade based custom scheduling policy responsive to the estimation. The estimation may be based on expected or actual processor idle time or task execution times or other criteria .

The custom scheduling policies of the MFP whether time based usage based or installation upgrade based may be stored in non volatile storage whether located within or outside of the MFP such as a ROM a flash memory device or a hard disk drive among other possibilities such that the custom scheduling policies can survive a power cycle of the MFP or can be otherwise stored transmitted recalled or accessed.

The performance information may then be analyzed and the internal task scheduling policy alteration may be determined responsive to the analysis. The alteration may then be activated during run time of the MFP by either transmitting the alteration from the host to the MFP via the communication medium or by receiving the alteration from a user via the front panel .

The host is shown as including computer monitor keyboard and mouse . But a person skilled in the art will recognize alternatives that can be used in place of the host . For example a notebook computer tablet computer or personal digital assistant PDA among other possibilities may be used instead. Regardless of its form the host is generally a computer system used by a skilled technician developer or user to interact with the MFP enabling an analysis of the performance information and activation of the internal task scheduling policy alteration .

When the performance information reveals that one processor is significantly idle when compared to the other processor then tasks with an affinity to one processor can be shifted to the other processor. Also if the performance information reveals that tasks associated with networking operations are significantly idle for example the priority level of those tasks may be lowered so that more urgent operations like printing are allowed to complete more efficiently. Persons having skill in the art will recognize that other changes to internal task scheduling levels besides those discussed herein may be made. The tasks may be grouped into task groups associated with printing scanning copying faxing or networking operations to make it easier and more efficient to manage the internal task scheduling policies.

The communication medium layer may be coupled to the communication medium . The communication medium layer may comprise User Datagram Protocol UDP messaging firmware configured to transmit and receive datagrams including the performance information and the internal task scheduling policy alteration to and from the host . However a person skilled in the art will recognize that different underlying network protocols may be used such as USB parallel port serial port IEEE 1394 wireless optical or infrared among other possibilities.

The MFP may also include a Printer Job Language PJL parser as described in commonly assigned and co pending U.S. patent application Ser. No. 11 901 752 filed Sep. 19 2007 entitled Method and System for Adaptive Control of Imaging Node which is hereby incorporated by reference. Here the PJL parser may also be configured to parse at least one internal task scheduling policy alteration e.g. alteration included in a PJL job transmitted between the host and the MFP . The alteration may adjust a priority level of the printing scanning copying faxing or networking operations as explained above with reference to . The alteration may also include commands to add a task delete a task load a task unload a task suspend a task or un suspend a task among other possibilities. The PJL parser may be coupled to the communication medium via the communication medium layer and may also receive at least one PJL job from the communication medium and parse or extract the alteration from the PJL job.

In some example embodiments the MFP may include a task run time controller coupled to the PJL parser and the communication medium layer . The task run time controller may transmit the performance information to the host or the front panel and may receive and process the alteration transmitted from the host or the front panel . The task run time controller may include a high resolution timer HRT further described below to collect the performance information . A task tuner may also be included as part of the task run time controller which is further described below and may be configured to activate the alteration or the custom scheduling policies during run time operation of the MFP not during run time operation of the MFP during installation at a user location during initialization of the MFP or during an upgrade of the MFP among other possibilities. Further the task run time controller may include a task manager not shown to perform book keeping operations of the performance information and the alteration .

In some example embodiments the host may include a communication medium layer which may be similar to the communication medium layer of the MFP . Generally the communication medium layers and enable a communication link between the host and the MFP . The host may also include a task monitor and control interface which may be used to display the performance information and to allow the user to generate and transmit PJL jobs including the alteration to the MFP .

A PJL job may be generated using the host which may be located physically remote from the MFP . The PJL job may be transmitted to the MFP via the communication medium and may include at least one requested action such as a request for the performance information . The performance information may be collected for tasks running on the MFP and transmitted from the MFP to the host via the communication medium to be analyzed. The performance information collected from the MFP may include task timing summary and statistics e.g. of including measured processor idle time or elapsed execution times associated with each or some of the tasks .

As a result a determination can be made whether an internal task scheduling policy alteration should be sent to the MFP . If it is determined that the alteration should be sent a PJL job may be generated that includes the alteration . The PJL job including the alteration may then be transmitted from the host to the MFP . The alteration may be parsed from the PJL job using the PJL parser and the internal task scheduling levels or policies may be adjusted according to the alteration .

In some example embodiments the APIs may include an initialization function which initializes the task tuner to use the default task scheduling policy . The default task scheduling policy may be changed using a set default function included in the APIs . Alternatively a task scheduling policy other than the default scheduling policy may be selected from among the task scheduling policies and set to the current task scheduling policy . The current task scheduling policy may be changed during run time of the MFP not during run time of the MFP during installation of the MFP at a user location during initialization of the MFP or during an upgrade of the MFP among other possibilities.

The watchdog timer may monitor a status of the timer schedule . If the timer schedule indicates that a task scheduling policy has expired an update function included in the APIs may be used to call one or more kernel OS functions responsive to a new current task scheduling policy . The kernel OS functions may include a change task priority function an add task function a delete task function a load task function an unload task function a suspend task function or an un suspend task function among other functions. Furthermore as previously explained the custom task scheduling policies may be stored in non volatile storage such as a read only memory ROM a flash memory device or a hard disk drive among other possibilities whether located within or outside of the MFP such that the scheduling policies can survive a power cycle of the MFP or can otherwise be stored transmitted or accessed.

In some example embodiments watch dog timer may monitor a status of tasks e.g. tasks of and update the current watch dog time accordingly. Generally watch dog timer has a higher timing resolution than the fixed interval watchdog timer and makes use of a calibration function such that the timer will not expire for up to 900 years. The higher resolution is preferably in the micro second precision range. This helps to alleviate timing limitations of commonly used 32 bit processors. The fixed interval watchdog timer uses a lower timing resolution and may be used to update the task timing summary and statistics . The fixed interval watchdog timer may be stopped and started at any time using APIs .

In some example embodiments beginning and ending execution times for at least some of the tasks are timestamped using the HRT . As such elapsed execution times and or idle time for each of the tasks can be calculated using the timestamps. The task timing summary and statistics may be generated using the elapsed execution and idle times. The task timing and summary statistics may be included in the performance information and may be analyzed either dynamically by the MFP or manually by a skilled technician or developer.

The APIs may include an initialization function to reset initial data which may include active task control blocks TCBs . When one of the tasks e.g. one of tasks of is created using a task creation kernel OS function the high resolution timer hooks the task creation kernel OS function so that the current task control block and time stamps may be updated. When one of the tasks changes states the high resolution timer hooks the state change so that the current elapsed time may be updated. Similarly when one of the tasks goes away the high resolution timer hooks the deletion and may update the current elapsed time .

As shown at the priority levels of the printing task group may be elevated during run time of the MFP responsive to the internal task scheduling policy alteration or responsive to an MFP custom scheduling policy of while the priority levels of the remaining task groups e.g. scanning task group copying task group faxing task group networking task group or other task groups may either be lowered or maintained.

Similarly as shown at the priority levels of the scanning task group may be elevated during run time of the MFP while the priority levels of the remaining task groups e.g. printing task group copying task group faxing task group networking task group or other task groups may either be lowered or maintained.

Any combination of elevating or lowering of task groups which are grouped based on MFP operation may be implemented. For example adjusting the priority levels may include elevating the priority levels of one of a the printing task groups e.g. b the scanning task groups e.g. c the copying task groups e.g. d the faxing task groups e.g. e the networking task groups e.g. or f the other task groups e.g. above the priority levels of tasks of the remaining groups.

Furthermore each of the task groups may have a higher priority than the remaining task groups during different periods of time. For example the priority levels of the printing task group may be adjusted to have a higher or lower priority than the remaining task groups during a first period of time the priority levels of the scanning task group may be adjusted to have a higher or lower priority than the remaining task groups during a second period of time and so forth.

Having described and illustrated the principles of the invention with reference to illustrated embodiments it will be recognized that the illustrated embodiments can be modified in arrangement and detail without departing from such principles and can be combined in any desired manner. And although the foregoing discussion has focused on particular embodiments other configurations are contemplated. In particular even though expressions such as according to an example embodiment of the invention or the like are used herein these phrases are meant to generally reference embodiment possibilities and are not intended to limit the invention to particular embodiment configurations. As used herein these terms can reference the same or different embodiments that are combinable into other embodiments.

Consequently in view of the wide variety of permutations to the embodiments described herein this detailed description and accompanying material is intended to be illustrative only and should not be taken as limiting the scope of the invention. What is claimed as the invention therefore is all such modifications as may come within the scope and spirit of the following claims and equivalents thereto.

