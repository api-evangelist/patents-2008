---

title: Dynamic resizing of applications running on virtual machines
abstract: Methods and apparatus, including computer program products, are provided for sizing an application running on a virtual machine. In one aspect, there is provided a computer-implemented method. The method may include registering, at a monitor, one or more controllers associated with one or more corresponding applications. Configuration information may be received for one or more corresponding applications. Event information may be provided to the one or more controllers to enable the one or more controllers to adjust one or more aspects of the corresponding applications. The event information may represent changes in resources (e.g., at the physical machine hosting the virtual machine and application). The aspects may be adjusted based on the changes. Related apparatus, systems, methods, and articles are also described.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09378066&OS=09378066&RS=09378066
owner: SAP SE
number: 09378066
owner_city: Walldorf
owner_country: DE
publication_date: 20080225
---
The present disclosure generally relates to optimizing systems implementing virtualization technology.

Virtualization technology provides a mechanism for optimizing processing. Virtualization technology provides a software layer that when executed allows multiple virtual machines with in some cases different operating systems to run side by side with other virtual machines running on the same physical machine e.g. a node computer processor server and the like . The virtualization software provides a so called container that wraps and isolates the virtual machine from other virtual machines. For example in a server complex including fifty physical servers each of which hosts its own application server virtualization permits the server complex to instead operate with for example twenty five physical servers each of which includes virtualization software providing two virtual machines for the application servers. In both cases fifty application servers are deployed but with virtualization the number of physical servers is reduced to twenty five.

Virtualization software may also provide one or more of the following functions running multiple virtual machines with different operating systems at the same time on the same physical machine generating fully configured isolated virtual machines with a set of virtual hardware including an operating system and applications saving copying and provisioning of virtual machines and moving virtual machines from one physical machine to another physical machine for workload management.

When a virtual machine is used the virtual machine may include an operating system and one or more applications. An operating system OS is the program that after being initially loaded into a computer by a boot program manages other programs on the computer. The other programs also referred to as application programs or programs may use the operating system by making requests for services through one or more application program interfaces APIs of the operating system. An application may perform one or more specific functions or tasks directly for a user or in some cases another program or application program. Examples of applications include spreadsheets word processing browsers databases and the like. For example a virtual machine may include an operating system such as Linux or Windows Vista and one or more application programs such as a browser all of which operate in the so called container provided by the virtual machine.

In some cases the virtual machine may also include some data for use by the application. When this is the case the virtual machine may be referred to as a virtual appliance. The phrase virtual appliance refers to an example of a virtual machine that may include the application operating system and other items e.g. data drivers etc to enable simplification of the installation and the configuration process associated with running the application. An example of a virtual appliance is the MediaWiki software that powers Wikipedia which is available as a virtual appliance. The MediaWiki appliance contains all the necessary software including operating system database and MediaWiki to run a wiki installation as a so called black box. 

The subject matter disclosed herein provides methods and apparatus including computer program products for sizing an application such as an application running in a virtual machine.

Methods and apparatus including computer program products are provided for sizing an application running on a virtual machine. In one aspect there is provided a computer implemented method. The method may include registering at a monitor one or more controllers associated with one or more corresponding applications. Configuration information may be received for the one or more corresponding applications. Event information may be provided to the one or more controllers to enable the one or more controllers to adjust one or more aspects of the corresponding applications. The event information may represent one or more changes in resources e.g. at the physical machine hosting the virtual machine and application . The one or more aspects adjusted based on the one or more changes.

The subject matter described herein may be implemented to realize the advantage of facilitating sizing of an application to enable the application to adapt to changes in the physical resources at a physical machine including the virtual machine hosting the application.

It is to be understood that both the foregoing general description and the following detailed description are exemplary and explanatory only and are not restrictive. Further features and or variations may be provided in addition to those set forth herein. For example the implementations described herein may be directed to various combinations and subcombinations of the disclosed features and or combinations and subcombinations of several further features disclosed below in the detailed description.

Physical server includes a virtual server implemented as a virtual machine although any other virtualization technology including a virtual appliance may be used as well. Virtual server may include one or more applications such as applications and a resource monitor configuration module and a virtual monitoring library and CIM provider labeled VM Monitoring Lib CIM Provider .

Applications and may be implemented as any application program application server and the like. In some embodiments applications and are implemented as enterprise services applications. For example applications and may correspond to a customer relationship management CRM application an enterprise resource planning ERP application a product lifecycle management application a supply chain management SCM application a supplier relationship management application and the like although any other application may be used as well.

Applications and may include operation mode controllers configuration modules application resources and caches and and process and

Operation mode controllers may process event information received from resource monitor . Each operation mode controller may locate resource monitor register with resource monitor and or indicate that the operation mode controller is the so called active controller for an application. For example operation mode controller may locate resource monitor register with resource monitor and or indicate that the operation mode controller is the active controller for application so that resource monitor may send events to operation mode controller . The operation mode controller may be accessible through a standard interface such as an Internet Protocol address port number or procedure call.

Moreover in some implementations the operations mode controller may be configured specifically for the application. Operation mode controller may be configured so that when an event is received application may be adapted to the change in resources at physical server . For example if an event is received representing additional memory is available at physical server and as a result virtual server operation mode controller may increase its cache size. Moreover that increase in cache size may be stored in configuration module . If an event is received that additional processing capacity e.g. quantity of central processing units at physical server operation mode controller may increase the number of processes it may execute at any given time that increase in processes stored in configuration module . If an event is received that additional network bandwidth is available to a network e.g. increase bandwidth to persistent storage or a database operation mode controller may increase the number of connections it may hold open at any given time that increase in number of connections stored in configuration module . If an event is received that additional storage capacity e.g. disk space is available at physical server operation mode controller may increase the number of files it may open at any given time that increase in number of files stored in configuration module . Although the previous examples provides examples related to memory process connection number and number of files operation mode controller may adapt any aspect of application to take advantage event messages from resource monitor . The event messages representing changes at physical server as well as virtual server .

Configuration module includes aspects of applications and that may be adapted i.e. changed based on event messages. For example configuration module may include a list of physical changes at physical server and corresponding changes to an application s cache processes connection numbers number of files and the like.

Moreover configuration module may include operation mode configurations defining how to map resource constraints e.g. that are reported by the resource monitor as events to application resource configurations. The operation modes define how the internally used application resources have to be configured at a certain resource constraint. For example the events reported by resource monitor to an operation mode controller e.g. operation mode controllers may provide information about changes in memory and CPU capacity. In some implementations the operation mode controller may maintain two operation modes such as a so called low footprint and a so called high footprint . These two operation modes may define that at a certain CPU capacity range the internal application processes have to be of a given size e.g. size X likewise if the actual reported memory capacity is in a certain range the internal caches sizes have to be set to another size e.g. size Y . In other words the operation mode controller matches resource constraints reported as an event to the operation modes. If the requirements of a certain operation mode are met the operation mode controller activates the associated configuration e.g. affecting configuration of caches pools max number of process etc. .

Application resources and may be any resources that an application such as applications and may use including caches and processes and number of connections e.g. HTTP connections to a network or an attached storage devise and or number of files used at any given time.

Caches and are the caches used by applications and respectively. For example application may have a cache used during the execution of the program code of application . Varying the size of cache may affect the performance of application e.g. more cache may result in shorter execution times .

Processes and are work processes including threads work processes tasks etc. used by applications respectively. For example while application is running there may be one or more processes being executed. The total number of processes may be limited which may also affect the overall performance of application . For example if application searches a database for an airline reservation limiting the number of processes may limit the number of searches that can be performed at any given time affecting the overall performance of application

Resource monitor monitors resources at physical server and virtual machine e.g. virtual server . To monitor resources resource monitor may passively monitor messages associated with the operating system of physical server or the virtual machine of virtual server . Alternatively to monitor resources resource monitor may actively access the operating system of physical server or the virtual machine of virtual server . For example resource monitor may receive information from another component of system such as an operating system and or a virtual machine such as a hypervisor. Hypervisor refers to a program used to manage a virtual machine also referred to as a virtual machine controller or more simply a controller . The hypervisor may control or manage the physical machine s processor memory storage network capacity and other resources enabling the virtual operating environment. VMWare ESX and VMware Server are examples of hypervisor software for virtualizing an operating environment including IP Internet Protocol addresses registries and other aspects normally used at a computer of a network. Hypervisors are a so called layer of code and or firmware that enables resource sharing in a virtualization technology environment. Some hypervisors run directly on the system hardware to virtualize the virtual aspects of the physical system to provide virtual machines while other hypervisors execute as a layer on top of the operating system of the physical machine.

Monitoring of resources may include monitoring one or more of the following available central processor units at physical server available physical memory at physical server available physical storage at physical server available cache at physical server processor utilization at physical server network bandwidth from at physical server to a network and or number of available connection to another device such as a database or network.

Moreover the resource monitor may be configurable. For example a user interface may be used to access resource monitor and configure which resources may be monitored. Moreover resource monitor may be configured to generate an event when one of the monitored resources reaches a trigger e.g. a value . For example when a central processing unit CPU is added to physical server resource monitor may generate a message to one or more operation mode controllers to notify them of the event. In some implementations resource monitor may store such configuration information in configuration module . Configuration module may also include resource sharing strategies for the different applications. Returning to the additional CPU example resource monitor may recognize the event by monitoring the operating system and access configuration module . There the configuration information may indicate that of the resources should be provided to operation mode controller . In this example resource monitor may send an event message to operation mode controller indicating that of a CPU is available while operation mode controller may receive an event message indicating that of a CPU is available. Although the previous example describes the case of adding a CPU to physical server any other change may be monitored by resource monitor and reported as event messages to operation mode controllers to enable those controllers to adapt e.g. resize the corresponding applications and

In some implementations resource monitor may also include a standard interface such as an Application Programming Interface callable by other components of system . Moreover resource monitor and configuration module may be accessible via a user interface e.g. browser client software etc. to enable configuration of resource monitor and configuration module

Configuration modules provides local configuration information. For example configuration module includes configuration information local i.e. specific to application . For example the configuration modules may include information such as number or work processes size of cache number of connections number of files used locally and any other aspects of application capable of being adjusted. Moreover configuration module may include trigger information e.g. values representing under what circumstances these aspects may be adjusted . Table 1 below lists some aspects of application and under what circumstances that aspect may be adjusted.

VM Monitoring Library and CIM provider provides a mechanism of common information management. The VM Monitoring Library and CIM provider decouples the resource monitor from the underlying operation system and virtual machine. The resource monitor calls methods at VM Monitoring Library and CIM provider to access e.g. retrieve get receive and the like the monitoring information. In some cases VM Monitoring Library and CIM provider notifies any registered applications with the observed situation at the operating system virtual machine and physical server. VM Monitoring Library and CIM provider may also include a standard interface through which information regarding a specific type of application may be obtained. In some implementations information for specific virtualization software may also be included in VM Monitoring CIM provider . For example for one or more applications preconfigured information such as the information in Table 1 may be stored for use by operation mode controllers and configuration modules 

At an application such as applications and is registered at the resource manager . To register an application an operation mode controller may register the application by sending a message or accessing an interface at resource manager . For example operation mode controller may register application by registering at resource manager e.g. subscribing to events at resource manager . At registration the application informs the resource monitor that its corresponding operation mode controller controls the application. The application may indicate during this registration one or more of the following the operation mode controller may specify that it only seeks information regarding CPU events since the defined operation modes in the application only react to CPU capacity changes and an application name or identifier along with an application type information which may define what type of application it is e.g. a memory intensive application so that the configuration data at the resource monitor may refer to this type or name information to specify any sharing strategies. For example the sharing strategy may define that the memory intensive application types have a priority of 1 and other applications have a priority of 2. The resource monitor reports resource constraint accordingly.

At the operation mode controller receives local configuration information from configuration module . The local configuration information defines what aspects of an application e.g. application may be adapted define under what circumstances the application may be adjusted and or define any thresholds under which an event e.g. an event message should be provided to an operation mode controller at an application. For example the local configuration information stored at configuration information may include information indicating that an event message should be sent to operation mode controller when a CPU is added to physical server . At configuration information there may be an indication to increase the number of work process to use the additional CPU. Although the previous example relates to adding a CPU the configuration information may include other aspects of the application that may be adapted based on changes at the physical server e.g. aspects listed in Table 1 .

At an operation mode controller such as operation mode controller may receive an event message e.g. information representative of a change in resources such as physical resources e.g. CPU memory storage network bandwidth and the like . If a received event message triggers an adjustment at the operation mode controller may adjust one or more aspects of application to adapt to the change. The adaptation enables the application to adapt e.g. change cache size and the like to changes in the virtualization technology and or the underlying physical resources e.g. physical server .

The system includes a physical server and a virtual server . Virtual server includes two applications i.e. an ABAP instance and a Java instance . Virtual server also includes a host agent including resource monitor configuration information and VM Monitoring Library and CIM provider . The host agent represents an agent hosted on virtual server to provide resource monitor

Resource monitor provides event messages to operation mode controllers through instance agents including an instance of the resource monitor . Operation mode controller is included within ABAP dispatcher which serves to dispatch tasks to operation mode controller . Operation mode controller adapts ABAP instance including shared memory work processes and the like. Configuration module is included in persistent storage labeled DB database 

Operation mode controller is included within instance controller which controls the instance including operation mode controller . ICM Internet Communication Manager controls messages within Java instance including access to FCA and configuration module which is included in persistent storage labeled DB database . Operation mode controller adapts Java instance including memory work processes and the like. FCA fast channel access is a networking protocol available from SAP AG although other networking protocols may be used as well.

The subject matter described above relates to a mechanism for enabling virtualization systems and corresponding applications to adapt e.g. resize the configuration of applications such as by changing resource constraints associated with an application to adapt to changes in physical resources available to the application. For example the configuration of applications included within a virtual machine may include configuring the cache sizes of the application to adapt to the memory being offered or available by the physical machine or to the processes being run by the application given the capacity of the physical machine e.g. the capability of the processor . The configuration mechanism described herein is particularly useful in system implementing virtualization technology such as virtual machines and virtual appliances.

In some implementations the dynamic reconfiguration mechanism described herein may be dynamically adapted to the resource conditions of the enclosed operating environment e.g. physical server . This may in some cases allow efficient resource consumption and transparent performance control of the application. In some implementations the configurations may be changed dynamically. Dynamically refers to changing the configuration while the applications are in use rather than a static configuration adapted to the physical machine e.g. processor computer server blade and the like such as a static configuration made during an installation.

The systems and methods disclosed herein may be embodied in various forms including for example a data processor such as a computer that also includes a database digital electronic circuitry firmware software or in combinations of them. Moreover the above noted features and other aspects and principles of the present disclosed embodiments may be implemented in various environments. Such environments and related applications may be specially constructed for performing the various processes and operations according to the disclosed embodiments or they may include a general purpose computer or computing platform selectively activated or reconfigured by code to provide the necessary functionality. The processes disclosed herein are not inherently related to any particular computer network architecture environment or other apparatus and may be implemented by a suitable combination of hardware software and or firmware. For example various general purpose machines may be used with programs written in accordance with teachings of the disclosed embodiments or it may be more convenient to construct a specialized apparatus or system to perform the required methods and techniques.

The systems and methods disclosed herein may be implemented as a computer program product i.e. a computer program tangibly embodied in an information carrier e.g. in a machine readable storage device or in a propagated signal for execution by or to control the operation of data processing apparatus e.g. a programmable processor a computer or multiple computers. A computer program can be written in any form of programming language including compiled or interpreted languages and it can be deployed in any form including as a stand alone program or as a module component subroutine or other unit suitable for use in a computing environment. A computer program can be deployed to be executed on one computer or on multiple computers at one site or distributed across multiple sites and interconnected by a communication network.

Moreover although the subject matter described above was described with respect to virtual machines the virtual machines may be implemented as virtual appliances as well.

The foregoing description is intended to illustrate but not to limit the scope of the invention which is defined by the scope of the appended claims. Other embodiments are within the scope of the following claims.

