---

title: Methods and apparatus for metering computer-based media presentation
abstract: Methods and apparatus for metering the presentation of computer-based media presentation are disclosed. An example disclosed method performed by a computer that is configured to execute an operating system and a media presentation program comprises modifying the media presentation program to re-direct a function call made to the operating system by the media presentation program, and processing the re-directed function call to determine media presentation information.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09209917&OS=09209917&RS=09209917
owner: The Nielsen Company (US), LLC
number: 09209917
owner_city: Schaumburg
owner_country: US
publication_date: 20080326
---
This patent is a continuation of PCT application PCT US2006 037395 filed on Sep. 26 2006 which claims priority from U.S. Provisional Application Ser. No. 60 720 391 entitled Methods and Apparatus for Metering Computer Based Video filed on Sep. 26 2005 both of which are hereby incorporated by reference in their entireties.

This disclosure relates generally to computer based media and more particularly to methods and apparatus for metering the presentation of computer based media.

Content providers broadcasters studios advertisers publishers etc. are interested in measuring and or statistically analyzing the viewing and or exposure of portions of media to demographic groups. For example advertisers are interested in verifying overall effectiveness reach and or audience demographics for particular advertisements placed in particular videos shows movies audio streams commercials audio files etc. Likewise broadcasters are interested in being able to demonstrate the effectiveness reach and or audience demographics of media viewed via their networks and or content delivery systems in order to for example establish an appropriate advertisement rate.

Although the example apparatus and methods described herein include among other components software executed on hardware such apparatus and methods are merely illustrative and should not be considered as limiting. For example it is contemplated that any or all of the disclosed hardware and software components could be embodied exclusively in dedicated hardware exclusively in software exclusively in firmware or in some combination of hardware firmware and or software.

In addition while the following disclosure is made with respect to an example personal computer PC based video display system it should be understood that the disclosed apparatus is readily applicable to many other computer based and or electronic media display systems and or devices such as but not limited to handheld computing devices e.g. iPods personal digital assistants PDAs MP3 players multimedia players Playstation portables PSPs smart phones etc. or cellular telephones. Accordingly while the following describes example apparatus methods and articles of manufacture persons of ordinary skill in the art will readily appreciate that the disclosed examples are not the only way to implement such systems. For instance a television TV may have an embedded attached and or coupled electronic device electronic system computing device computing system and or PC configured to receive and or decode a video signal display a video signal and meter viewing statistics and or program consumption. For example a digital video recorder attached to a TV a TV with an integrated digital video recorder and or digital versatile disc DVD player etc.

While example apparatus and methods to meter computer based display of video are described herein persons of ordinary skill in the art will readily appreciate that the disclosed apparatus and methods may be used additionally or alternatively to meter the presentation of any of a variety of additional and or alternative types of media including for example audio audio streams commercials mixed audio and or video images text data file file etc.

In general the example apparatus methods and articles of manufacture described herein may be used to determine video viewership statistics and or program consumption characteristics. In the particular examples described herein data is collected that characterizes the viewing consumption and or display of video from for example a DVD a compact disc CD an Internet site and or a hard drive and television TV programs from for example a terrestrial broadcast a cable broadcast a satellite broadcast and or an Internet broadcast.

To interact with a user i.e. viewer of the PC based video and to receive and display video programs the example system of includes hardware an application programming interface API and a media presentation application e.g. a PC video application that emits any of a variety of types of media e.g. video . In the illustrated example of the hardware is implemented using any suitable well known personal computer computing platform computer server etc. capable of receiving TV signals receiving user inputs and presenting e.g. displaying signals on a display device B. The hardware is configured to operate i.e. execute any one of a variety of operating systems such as for instance Windows XP Windows NT Mac OS X Linux Unix etc.

In the illustrated example of the hardware includes among other things circuitry to tune and receive TV signals from an antenna satellite receiver cable cable set top box etc. e.g. a TV tuner device contained on a peripheral component interconnect PCI card C circuitry to receive and decode streaming video decode video from DVD or compact disc CD discs etc. Alternatively or additionally the hardware includes a connection to a TV tuner device C a DVD drive a CD drive etc. The hardware also includes and or provides a suitable connection to a display device B e.g. computer display video display terminal television etc. capable of displaying TV programs for a viewer of the PC based video. The hardware further includes and or provides a suitable connection to at least one input device e.g. a keyboard a mouse A a remote control a People Meter D etc. configured to allow the user to select a video source select a TV station or program control volume identify the user etc. The hardware may optionally include a disk drive or other suitable storage medium for recording and replaying recorded TV programs. The People Meter D may additionally or alternatively be implemented as machine accessible instructions executing for example on the PC hardware . Example methods and apparatus to implement the example People Meter D are described in International Patent Application Serial Number PCT US04 15377 which is published as International Publication No. 2005 117425 and which is hereby incorporated by reference in its entirety.

In the example of the API provides an interface between the PC based video application and the hardware . For example the API could provide a generic interface to receive channel selections from the user via an input device without the PC based video application specifically knowing the technical details brand etc. of the input device. By including the API in the example of the PC based video application may be implemented wholly or at least partially without specific knowledge of the underlying devices circuits PCI cards etc. comprising the hardware . In one embodiment the API is provided by an operating system and implements a standardized interface between software e.g. applications executing on the hardware e.g. executing on a processor included in the hardware and other portions of the hardware . For example in a Windows XP based operating system a portion of the API is implemented by the dynamic link library DLL USER32.DLL which is part of the Windows XP based operating system that provides functions such as DrawWindow DrawText MousePress KeyPress etc. to enable applications to display information on a display device receive user inputs interact with the hardware etc. Alternatively a portion of the API may be implemented by another program device driver etc. executing under the operating system.

Using any of a variety of techniques the PC based video application via the API receives input signals and selections e.g. channel selections volume user identification etc. from the user via the at least one input device controls a TV tuning device receives tuned TV signals from the TV tuning device creates signals suitable for display on a display device and sends the display signals to the display device. For example the PC video application interacts with the hardware by making software API calls to functions provided by the operating system i.e. the API such as for instance DrawText to display TV channel numbers KeyPress to receive TV channel selections etc. The example PC video application of may be implemented as machine readable instructions executing on a processor associated with the hardware . However the PC video application may also be implemented as hardware or a combination of hardware and software.

In the example of the PC based video application has access via the API and the hardware to an electronic program guide that for example specifies which TV programs are available on each TV station for each time period of each day of the week. It will be understood by persons of ordinary skill in the art that the electronic program guide may for example be provided as part of TV signals received and decoded by the hardware e.g. a TV tuning device . Using any of a variety of techniques the PC based video application provides to the user via a display device B at least a portion of the electronic program guide to facilitate selection of TV programs by the user. The PC based video application may also use the electronic program guide to determine and display on the display device the name of the current TV program being viewed by the user.

To monitor and record viewing of TV programs viewed or consumed by the user the example system of includes a handler and a meter . The handler processes i.e. handles all or a subset of the function calls signals instructions values etc. exchanged between the PC based video application and the API . For example the handler could process instructions sent from the PC video application to a TV tuner device e.g. the TV Tuner device C specifying which TV station to receive the handler could process portions of the signals sent from the PC video application to a display device e.g. Video Display B to display for the viewer the current TV program or TV station being viewed the handler could process signals sent by the PC video application to a disk drive e.g. contained within the hardware to open a new file into which a TV program is to be recorded etc.

In one embodiment the handler is implemented as a metering DLL and uses function call re direction to process all or a subset of software API calls made by the PC video application to the API . The metering DLL is programmed and loaded by the operating system such that all or a subset of calls made to the API by the PC video application are re directed to the metering DLL . It will be readily apparent to persons of ordinary skill in the art that for a Windows XP based operating system this can be accomplished using standard Windows API calls for example VirtualAllocEx WriteProcessMemory LoadLibrary and CreateRemoteThread . It will also be readily apparent that the loading of the metering DLL by the operating system causes the metering DLL to execute its own startup routine.

The startup routine for the metering DLL using well known techniques modifies and or replaces at least one entry of the PC video application s IMPORT TABLE e.g. for DrawText with an address pointing to a replacement function provided by the metering DLL . Using this technique an example software call made to DrawText by the PC video application will instead be automatically re directed to the metering DLL to execute the replacement function provided by the metering DLL . The replacement function provided by the metering DLL may in turn make a corresponding software call to the standard DrawText function provided by the API using the address contained in the original PC video application s IMPORT TABLE. The replacement function provided by the metering DLL also passes using standard operating system messaging techniques and or function calls information regarding the received re directed API software call to the meter . It will be well understood that by configuring the number type operation etc. of the replacement functions provided by the metering DLL the standard API calls re directed to the metering DLL can be adjusted.

To allow proper video display in the example of the handler passes i.e. forwards re directed function calls signals instructions values etc. to the API . To facilitate monitoring of TV viewing by the user the handler also passes a copy of appropriate re directed function calls signals instructions values etc. e.g. video source selections TV channel selections display mode user identification etc. to the meter . In the example of the handler only re directs those function calls signals instructions values etc. useful for monitoring TV viewing by the user e.g. video source TV channel selections user identification mode volume muting etc. . Other function calls signals instructions values etc. e.g. volume etc. may be directly exchanged or configured between the PC based video application and the API . Alternatively the handler could re direct all function calls signals instructions values etc. and pass all or a portion of them to the meter .

Returning to the meter uses information contained in function calls signals instructions values etc. re directed to the handler and provided to the meter to monitor and record TV viewing by the user. For example the meter creates log entries that contain time of day TV station and user identification. The log entries could also contain TV program information e.g. name of a viewed program name of a TV station a channel name etc. if that information is displayed on the display device and if the displaying uses a technique that can be re directed to the handler . In the example of the meter creates a log entry each time a change in TV viewing occurs e.g. video source change a TV station change a volume muting a program break an on off event a change in user etc. . The meter may also create log entries periodically or aperiodically during time intervals without changes in TV viewing parameters e.g. every 15 minutes .

The example system of periodically or aperiodically provides the recorded i.e. logged TV viewing information to a processing server not shown that combines the recorded TV viewing information with recorded TV viewing information from other TV metering systems PC TV or otherwise to develop meaningful viewership and or program consumption statistics. For instance the processing server of the illustrated example uses the combined recorded TV viewing information to determine overall TV viewership ratings and or rankings for each time period of each day of the week each TV program etc. It will be understood by persons of ordinary skill in the art that the meter could provide the recorded TV viewing information to the processing server using any of a variety of techniques. For instance by periodically or aperiodically recording the information on a non volatile storage medium e.g. recordable compact disc CD R that can be transported e.g. picked up mailed etc. and then loaded onto the processing server by uploading e.g. via an Internet connection dedicated network or public switched network accessible via the API and the hardware the recorded information to the processing server etc.

The meter examines the API calls made by the PC video application as re directed to the metering DLL for information necessary to monitor and log TV viewing by the user. For example the meter could examine the parameters contained in a call to DrawText to identify if the PC video application is displaying a TV station number and or TV program name on the display device. As an example the meter could examine the parameters contained in a FileOpen call to obtain the file name and thus the time and TV station information associated with a previously recorded TV program etc. The example meter utilizes standard API calls to obtain current time of day or day of the week information. The meter can be coupled to a People Meter to allow audience members i.e. viewer to identify themselves. Alternatively or additionally the meter could determine a viewer s identity based on who is logged into the operating system. As discussed above the meter creates a log of TV viewing and periodically or aperiodically provides the log to a processing server.

In the example of the meter upon startup causes the metering DLL to be loaded by the operating system using techniques discussed above such that at least one PC video application IMPORT TABLE entry is modified. Upon normal termination of the operation of the meter the meter causes the metering DLL to be unloaded by the operating system such that replaced PC video application IMPORT TABLE entries are restored to their original values so that future API calls are made directly to the API and the PC video application can continue operating.

The example meter of is implemented as machine readable instructions executing on a processor associated with the hardware . However the meter may also be implemented as hardware or a combination of hardware and software.

The methods and apparatus described in this disclosure support a PC video application that uses either standard operating system window controls or well known skins. Skins based applications utilize standard API calls e.g. DrawText to display textual information and thus are amenable to indirect data detection via API function call re direction as described herein. Further while the examples discussed herein and in connection with are related to a Windows XP based operating system it will be readily apparent to persons of ordinary skill in the art that similar techniques could be used for other operating systems e.g. Windows NT Windows ME Mac OS X Unix Linux etc. .

It will be readily apparent to persons of ordinary skill in the art that the metering DLL could alternatively or additionally examine the parameters of re directed API calls made by the PC video application for information related to TV viewing by the user s e.g. viewer s and only pass parameters of interest to the meter . It will also be readily apparent that the metering DLL could process re directed non operating system based API calls made by the PC video application . For example the PC video application may use customized or proprietary functions to interact with the hardware e.g. an external TV receiver device for instance to select a TV station. To the extent that the metering DLL can access and or decipher any customized or proprietary functions used by the PC video application to interact with the hardware and or the API the methods described herein can be readily extended to re direct such customized or proprietary functions.

The example machine readable instructions of begin when the meter is started. Using standard API calls e.g. VirtualAllocEx WriteProcessMemory LoadLibrary CreateRemoteThread the meter causes the operating system e.g. Windows XP to load the metering DLL block . The loading of the metering DLL block by the operating system starts the execution of the example machine readable instructions of in a processing thread separate from that executing the example machine readable instructions of i.e. the meter . As discussed above in connection with and below in connection with the meter e.g. the machine readable instructions of and the metering DLL e.g. the machine readable instructions of interact to determine video and or program viewing display and or consumption by a person.

The meter then waits for the metering DLL to receive a new re directed API call and to provide the parameters of the re directed API call to the meter i.e. an event block . If a new event has not occurred block the meter continues waiting block . If a new event has occurred and information has been received block the meter determines if the re directed API call is an event of interest e.g. DrawText or more generally an event associated with an interaction between the PC video application and the metering DLL block . If the re directed API call is not an event of interest block the meter returns to block to await another event.

If the re directed API call is an event of interest block the meter decodes the information re directed to and received from the metering DLL e.g. TV channel selection video source etc. block . The meter then acquires time of day day of week user identification etc. information block and creates a log entry based on the decoded and acquired information and data block . The meter then returns to block to await another event.

The example machine readable instructions of begin when the metering DLL is loaded by the operating system e.g. Windows XP . As discussed above and in connection with the metering DLL modifies the IMPORT TABLE of the PC video application so that calls to API functions replaced by the metering DLL are re directed to the metering DLL block . The metering DLL also saves the original IMPORT TABLE entries so that these original entries can be restored when the metering DLL is unloaded by the operating system and so that the metering DLL calls the proper function in the API when API calls are re directed block .

The metering DLL then waits for one of the replacement functions provided by the metering DLL to be called by the PC video application i.e. an API call re direction has occurred block . If an API call has been re directed to the metering DLL block the metering DLL calls the corresponding API function in the API block . By calling the corresponding API function in the API the metering DLL ensures that the PC video application is not interrupted impaired and or prevented from correctly presenting video. The metering DLL then determines if the re directed API call is an event of interest block . For example by comparing the parameters of a DrawText API call with a character string corresponding to a channel name channel number or TV program name block . If the re directed API call is not an event of interest block the metering DLL returns to block to await another API call re direction. If the re directed API call is an event of interest block the metering DLL passes the parameters of the re directed API call to the meter block and returns to block to await another API call re direction.

The processor platform of the example of includes a general purpose programmable processor . The processor executes coded instructions and or present in main memory of the processor e.g. within a RAM and or a ROM . The processor may be any type of processing unit such as a microprocessor from the Intel AMD IBM or SUN families of microprocessors. The processor may implement among other things the example machine readable instructions of the example API the example PC video application the example metering DLL the example meter and or metering system of .

The processor is in communication with the main memory including a read only memory ROM and the RAM via a bus . The RAM may be implemented by Synchronous Dynamic Random Access Memory SDRAM Dynamic DRAM and or any other type of RAM device. The ROM may be implemented by flash memory and or any other desired type of memory device. Access to the memory and is typically controlled by a memory controller not shown .

The processor platform also includes an interface circuit . The interface circuit may be implemented by any type of well known interface standard such as an external memory interface serial port general purpose input output etc.

One or more input devices and one or more output devices are connected to the interface circuit . The input devices and output devices may be used to implement interfaces between a user and the example metering system of .

Of course persons of ordinary skill in the art will recognize that the order size and proportions of the memory illustrated in the example systems may vary. Additionally although this patent discloses example systems including among other components software or firmware executed on hardware it will be noted that such systems are merely illustrative and should not be considered as limiting. For example it is contemplated that any or all of these hardware and software components could be embodied exclusively in hardware exclusively in software exclusively in firmware or in some combination of hardware firmware and or software. Accordingly persons of ordinary skill in the art will readily appreciate that the above described examples are not the only way to implement such systems.

At least some of the above described example methods and or apparatus are implemented by one or more software and or firmware programs running on a computer processor. However dedicated hardware implementations including but not limited to an ASIC programmable logic arrays and other hardware devices can likewise be constructed to implement some or all of the example methods and or apparatus described herein either in whole or in part. Furthermore alternative software implementations including but not limited to distributed processing or component object distributed processing parallel processing or virtual machine processing can also be constructed to implement the example methods and or apparatus described herein.

It should also be noted that the example software and or firmware implementations described herein are optionally stored on a tangible storage medium such as a magnetic medium e.g. a disk or tape a magneto optical or optical medium such as a disk or a solid state medium such as a memory card or other package that houses one or more read only non volatile memories random access memories or other re writable volatile memories or a signal containing computer instructions. A digital file attachment to e mail or other self contained information archive or set of archives is considered a distribution medium equivalent to a tangible storage medium. Accordingly the example software and or firmware described herein can be stored on a tangible storage medium or distribution medium such as those described above or equivalents and successor media.

To the extent the above specification describes example components and functions with reference to particular devices standards and or protocols it is understood that the teachings of the invention are not limited to such devices standards and or protocols. For instance the Windows XP Mac OS X Unix Linux etc. operating systems represent examples of the current state of the art. Such systems are periodically superseded by faster or more efficient systems having the same general purpose. Accordingly replacement devices standards and or protocols having the same general functions are equivalents which are intended to be included within the scope of the accompanying claims.

Although certain example methods apparatus and articles of manufacture have been described herein the scope of coverage of this patent is not limited thereto. On the contrary this patent covers all methods apparatus and articles of manufacture fairly falling within the scope of the appended claims either literally or under the doctrine of equivalents.

