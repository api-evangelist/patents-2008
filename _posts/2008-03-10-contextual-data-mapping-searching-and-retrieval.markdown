---

title: Contextual data mapping, searching and retrieval
abstract: An example method is illustrated as including receiving a first content set, the first content set organized according to a rules set, using the rules set to parse the first content set to generate a first pattern set having a plurality of members, assigning a weighted value to each member of the first and a second pattern set based on a frequency of occurrence of each member in the first and second pattern sets, wherein each member of the first and second pattern sets includes digital content, and determining a relevancy score linking each of the members of the first and second pattern set in a one to one mapping of the members of the first pattern set to each of the members of the second pattern set, wherein the relevancy score is based upon the weighted value assigned to each member of the first and second pattern sets.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08266145&OS=08266145&RS=08266145
owner: 1759304 Ontario Inc.
number: 08266145
owner_city: Ajax
owner_country: CA
publication_date: 20080310
---
This is a non provisional patent application claiming priority under 35 USC 119 e to U.S. Provisional Patent Application No. 60 895 264 filed on Mar. 16 2007 entitled CONTEXTUAL DATA MAPPING SEARCHING AND RETRIEVAL which is incorporated by reference in its entirety.

The present application relates generally to the technical field of commercial uses of search algorithms implemented on a computer and in one specific example the use of such algorithms to find relationships in searchable content.

Search algorithm applied in the context of the Internet are typically static e.g. static search algorithms in terms of their ability to search content appearing on a web page. Specifically rather than making predictions about what search results may or may not be optimal for a given search these static search algorithms tend to retrieve search results that are based upon the content of pages alone. For example the number of links to a web page including searchable content may be used to determine a particular web page s ranking in a search result e.g. the greater the number of links to a web page the higher the ranking .

In the following description for purposes of explanation numerous specific details are set forth to provide a thorough understanding of example embodiments. It may be evident however to one skilled in the art that the present invention may be practiced without these specific details.

In some embodiments contextual data mapping searching and retrieval is illustrated. Example embodiments may include a system and method to provide optimized search results based upon analyzed digital content that may appear in for example a web page or other type of suitable digital content. This digital content may be optimized using any one of a number of Artificial Intelligence AI algorithms either independently or in combination with one another. For example using a Fuzzy Logic algorithm the relevance R between two entities may be determined as well as the structural relationship R and the related relevancy R . Collectively. R R and R may be combined into a relevancy score. An entity may be understood to be an aggregation of member data such as web pages referencing a particular phrase e.g. web pages referencing a Honda Accord where this phrase is understood to be associated with a particular user. Member data may be understood as data that is a member of a pattern set.

Some example embodiments may include an R R or R value defined as some type of relationship between two or more entities based upon member data. This relationship may be a score e.g. a Fuzzy Logic score between two entities. Each entity and or each member that makes up the entity may be a node in a graph where the scores serve as links e.g. edges between the nodes. Using certain mathematical principles e.g. an LP algorithm nodes with the maximum or even minimum relatedness may be found. Within the context of an R value an entity with the greatest probability of having the phrase Honda Accord associated with it may be retrieved. This greatest probability may be based upon searching for the highest Fuzzy Logic score in a given graph using an LP algorithm.

Example embodiments may include using Fuzzy Scores and LP to determine entities with the closest R values. For example if a search is conducted to determine which entities that include references to the phase Honda Accord have the closest physical proximity or even the closest proximity on the Internet e.g. have the least number of hops between them this may be determined through using Fuzzy Scores and LP. Specifically a Fuzzy score could be associated with two of more entities based upon physical distance where the scores again serve as links between entities in the form of nodes. LP could be applied to find the greatest or smallest physical distance between two or more entities.

In some embodiments Fuzzy Scores and LP may be used to determine entities with the closest R values. For example if a search is conducted to determine which entities that include references to the phrase Honda Accord have the closest relevance based upon synonyms for this phrase such a relevance may be determined using a Fuzzy score and an LP. That is the phrase Honda Accord and Honda Sedan may have a Fuzzy score associated between them such that each of the phrases are nodes in a graph where each node has a link in the form of a Fuzzy score. An algorithm for computing R R and R using Fuzzy Scores and LP is more fully illustrated below.

In some embodiments an interface is provided to allow a user to provide entity data in the form of web pages or other types of digital content wherein this digital content is the previously referenced member data. This interface may be for example a Graphical User Interface GUI or may be an Application Programming Interface API that allows one to provide entity data as an eXtensible Markup Language XML based file.

This member data that makes up entity data may include a web page encoded in for example a Hyper Text Markup Language HTML an image encoded in a Joint Motion Picture Experts Group JPEG or even a file encoded as a Motion Pictures Expert Group MPEG file. In one example embodiment this digital content is analyzed at the bit level e.g. the bit patterns may be analyzed such that a high level of granular analysis can be achieved. As may be more fully illustrated below the various codecs that are used to encode this digital content are used in the course of determining R R and R values.

In some embodiments various AI algorithms are implemented on the application server . These AI algorithms may be used to optimize search results and are included in an AI library as will be illustrated in . The AI algorithms included in this AI library may be thought of as falling into one of two categories of AI algorithms deterministic or stochastic. One distinguishing feature of stochastic algorithms as compared to deterministic algorithms is that the former may use some sort of non deterministic feature such as random number generation or random node selection see e.g. Genetic algorithms in its optimization analysis while the later avoids such random non deterministic features. This random number generation may allow for the avoidance of pitfalls such as slavish adherence to predictability criteria during the optimization process. Some embodiments may include the use of deterministic or stochastic algorithms in combination see e.g. Genetic Fuzzy algorithms .

Some example embodiments may include any number of deterministic algorithms implemented in the AI library including case based reasoning Bayesian networks including Hidden Markov Models neural networks or Fuzzy systems. The Bayesian networks may include Machine learning algorithms including Supervised learning Unsupervised learning Semi supervised learning Reinforcement learning Transduction Learning to learn algorithms or some other suitable Bayesian network. The neural networks may include Kohonen self organizing network Recurrent networks Simple recurrent networks Hopfield networks Stochastic neural networks Boltzmann machines Modular neural networks Committee of machines Associative Neural Network ASNN Holographic associative memory Instantaneously trained networks Spiking neural networks Dynamic neural networks Cascading neural networks Neuro Fuzzy networks or some other suitable neural network.

Some embodiments may include the use of a Fuzzy Neural Network to conduct searches. For example a bit pattern of a piece of member data may be represented as where n is the total number of known patterns in the system 

The equation may be applied in the following example. An Entity exists that has members e.g. member data or textual content of bit patterns representing the words Honda Civic and Accord with Fuzzy memberships of 0.8 0.6 and 0.4. Further an Entity exists that has members e.g. member data or textual content of bit patterns representing the words Honda Accord and EuroR with Fuzzy memberships of 0.9 0.5 and 0.5. Assume that 

In some embodiments once the entities are defined and the conditions determined then the entities are passed through a number of stages of analysis. These stages of analysis may correspond to the input layer e.g. here referenced as a first layer neuron a hidden layer e.g. here referenced as a second layer neuron and an output layer e.g. here referenced as a third layer neuron of a neural network. For example in a Stage of analysis various inputs in the form of neuron inputs are translated as is into a second level artificial neuron such that Input1 Input2 Input3 Input4 

These inputs are then used to evaluate the entities e.g. in a Stage analysis such that if we are matching Entity and Entity then Honda 0.8 0.9 1 1 min 0.8 0.9 1 0.8 Civic 0.6 0 0 1 min 0.6 0 0 1 0 Accord 0.4 0.5 1 1 min 0.4 0.5 1 0.4 EuroR 0 0.5 0 1 min 0 0.5 0 1 0

Values arising from Stage reflect certain minimum values the entities have in common. Once this Stage is complete then a Stage is executed wherein Honda Honda 0.8 0.8 0 Civic Civic 0.6 0 0.6 Accord Accord 0.4 0.4 0 EuroR EuroR 0 0 0

Next the combined fuzziness deviation e.g. the 0.6 value from all the combined patterns is determined by a Fuzzy OR statement having the form f Honda P Honda U f Civic P Civic U f Accord P Accord U f EuroR P EuroR Max 0 0.6 0 0 0.6

These three stages of analysis including the use of for example a decisional tree may then be applied to all entities such that an example optimal solutions may have the lowest final score e.g. is the closest match to the entity of interests . Some embodiments may include the optimal solution as having the highest final score.

Further example embodiments may include a case where after the closest matches are presented to a user and the user starts interacting with and reacting to the entity more patterns may be generated. For example if the user e.g. Entity interacts with Entity and generates the word or string JDM which shows up 5 times as part of a member data set and the word Car which shows up 10 times during the interaction in a member data set then the co related fuzziness of the words for example becomes HondaJDM 0.5 CivicJDM 0.5 AccordJDM 0.5 EuroRJDM 0.5 HondaCar 1 CivicCar 1 AccordCar 1 EuroRCar 1 The result of these calculations may then be used as a training set for subsequent implementations of the Fuzzy neural network. Specifically the above calculations could be for example represented in a training mode using a decisional tree such that 

In addition to deterministic algorithms such as a Fuzzy neural network any number of stochastic algorithms may be implemented including Genetic algorithms Ant algorithms Tabu search algorithms or Monte Carlo algorithms e.g. Simulated Annealing . Common to these algorithms is the use of randomness e.g. randomly generated numbers to avoid the problem of being unduly wedded to a local minima or maxima.

In some embodiments a Fuzzy Genetic algorithm is implemented that can be understood as incorporating the features of both a deterministic and stochastic algorithm. Applied in the present context a Genetic algorithm could be used to optimize the set of member data or even entities using principles of crossover and mutation that incorporate certain concepts of randomness in the selection of the member data. This process of crossover and mutation may be repeated until diversity is established based upon some predefined criteria e.g. all member data with the exception of certain types of elite data are subjected to crossover and or mutation at least once . In some embodiments a principle of elitism may be applied whereby certain relationships between certain entities are not subjected to cross over or mutation due to the fact that these entities have a high level of correspondence between their member data e.g. the Fuzzy Scores between their member data tend to reflect a high level of correspondence . Further in some embodiments a principle of unfitness may be applied such that certain types of member data may not be combined due to the fact that historically a particular type of member data has shown a lack of relevance to any other member data or the present member data with which it is being combined. In some embodiments the principles of elitism and unfitness may lessen the number of combinations that may be computed possibly saving computing time. Further as previously alluded to a Genetic algorithm may allow for new relationships to be explored through the randomness of cross over and mutation randomness that by definition may not be wholly tied to historical data e.g. a data training set .

In some example cases once diversity is established then a Fuzzy Associative matrix may be generated illustrating all the Fuzzy Scores for each of the combinations of member data for each entity. An example Fuzzy Associative matrix is provided below 

In some example embodiments various operations and are shown. These operations may generate each of the R R and R values respectively collectively relevancy scores . Shown is the operation that when executed may determine the contextual pattern for a particular content set. This operation may be referred to as a contextual pattern engine. Some embodiments may include the operation executed to determine a relevancy value e.g. R value between member data sets corresponding to two entities.

Some example embodiments may include an operation that when executed determines a structural relationship between two or more entities and their member sets of data. Operation may act as a structural relationship engine. A structural relationship may be defined in terms of the physical proximity e.g. in terms of kilometers km or some other measure of distance of two entities based upon the member data sets or proximity as defined in terms of some type of internet hop value. This structural relationship may be understood as an R value.

Some example embodiments may include an operation that when executed acts as a perspective engine. Specifically with regard to operation the co relevancy value may be determined based upon the perspectives of two or more entity values that are compared to a particular target set of data. This relevancy value may be an R value. For example the perspective of a first entity and a second entity may be compared on the basis of how their member sets of data reflect their views towards for example the member data set including Blue Honda Accord as a searched term.

Common to the operations through is the usage of a Fuzzy Logic algorithm to generate a Fuzzy Logic score e.g. a weighed value to be used to determine a relevancy e.g. in the form of a relevancy score between certain members of a plurality of data sets of entities. As may be more fully illustrated below other types of AI logic and algorithms or combinations thereof may be utilized.

An operation may be executed whereby an LP algorithm is applied to the Relevancy Scores generated by each of the operations through . This operation referred to herein as an optimization engine may seek to find a maximum or minimum value associated with the relevancy scores e.g. R R values generated by operations through . In some example cases this LP algorithm may implement a Simplex Method or Projective Method e.g. Karmarkar Algorithm to provide for near polynomial time e.g. O N .

In some example cases the content set may be interactive in nature while in other cases it may be reactive in nature. For example this content set may include data generated by the web server and or application server passively monitoring a user e.g. user interacting with or generating data by interacting with for example any one of a number of web pages web blogs message boards or other types of digital content that may appear on for example an Internet. Still in other cases this user may generate data interactively in the form of member data sets by virtue of the search queries that a user conducts utilizing the application server and or web server . In some example cases as may be illustrated below this member data set may be generated interactively or reactively and may serve as a training set or a data training set for any one of a number of AI algorithms.

In some example embodiments further illustrated is the second stream of the dual stream flowchart titled Model Retrieval. Illustrated for method is a search query wherein a search is conducted for example for the text string Blue Honda Accord. This search query is provided to an operation that receives a search query. An operation may be executed that encodes the search query and transmits it. This encoded search query is provided to the previously illustrated operation which generates the optimized model shown in . This optimized model is provided to an operation . This operation resides on any one of a number of devices as do for example the previously illustrated operations and an operation . Operation when executed decodes and displays the optimized model .

In some example embodiments a method is illustrated as being executed by operations residing on the application server . This method includes receiving a first content set see e.g. content set wherein the first content set is organized according to a rules set. The rules set is used to parse the first content set to generate a first pattern set having a plurality of members see e.g. operation . The method may also include assigning a weighted value to each member of the first and a second pattern set based on a frequency of occurrence of each member in the first and second pattern set wherein each member of the first and second pattern set includes digital content see e.g. operations and . The method may include determining a relevancy score and linking this score to each of the members of the first and second pattern set in a one to one mapping of the members of the first pattern set to each of the members of the second pattern set wherein the relevancy score is based upon the weighted value assigned to each member of the first and second pattern set see e.g. operation . Further this method may include storing each member of the first and second pattern set in a data structure see e.g. pattern storage database . Additionally this method may include executing an algorithm to find a highest relevancy score linking a member of the first pattern set and a member of the second pattern set wherein the algorithm is a linear programming algorithm see e.g. operation . Additionally the method may include assigning the weighted value based upon one or more weighting types including at least one of relevance weighting see e.g. operation relationship weighting see e.g. operation and review weighting see e.g. operation wherein the weighted value includes a Fuzzy Logic score. Additionally the method may include applying one or more constraint values to the relevancy score wherein the constraint value includes at least one of a fastest to locate value an ease of access value and a co expected relevancy value. Further the digital content may include at least one of web pages on line blog entries on line chat entries on line bulletin board postings and social network postings. In addition in some example cases the method may further include presenting the highest relevancy score for one or more members of the first and second pattern sets as an optimized model.

In some embodiments once a Fuzzy score is assigned to a particular link between one or more patterns a decisional operation is executed. In some example cases the nodes of the tree may be combined in the pair wise manner with all other members of member data sets that exist within the pattern storage database . It is a decisional operation that determines whether all pair wise combinations have been executed. In cases where decisional operation evaluates to true or YES then the resulting Fuzzy Scores are stored into a scoring database . In cases where operation evaluates to false or NO then additional pair wise combinations are determined through the re execution of operation .

In some example embodiments a Fuzzy Logic score or series of scores may be generated for the R and R values. In the case of the R value a Fuzzy Logic Score s may be generated for a relationship weighting. Additionally in the case of the R value a Fuzzy Logic Score s may be generated for the review weighting. This Fuzzy Logic Score s may be reflected as relevancy scores shown below.

In some example cases once these scores which are in this case Fuzzy Logic scores are generated a logical intersection operation is performed whereby the intersection between the Fuzzy Logic scores for an Entity is compared to the scores of an Entity . Once the logical intersection is found then the intersection of the various scores is provided to some type of minimization function e.g. a function that finds a minimum value and then a resulting value is returned. In some embodiments this minimization function is an LP algorithm. This resulting value may be for example 0.9358 e.g. . In some embodiments the intersection of all minimum Fuzzy Logic scores for all member data sets for both entities e.g. Entity and Entity is determined and the results provided to a maximization function. This maximization function may be a LP algorithm in some cases. The value returned form this maximization function is a relevancy score. Here for example relevancy score of 0.9358 e.g. is shown.

Some embodiments may include the various databases e.g. and being relational databases or in some cases On Line Analytic Processing OLAP based databases. In the case of relational databases various tables of data are created and data is inserted into and or selected from these tables using a Structured Query Language SQL or some other database query language known in the art. In the case of OLAP databases one or more multi dimensional cubes or hyper cubes including multidimensional data from which data is selected from or inserted into using a Multidimensional Expression MDX language may be implemented. In the case of a database using tables and SQL a database application such as for example MYSQL SQLSERVER Oracle 81 or 10G or some other suitable database application may be used to manage the data. In the case of a database using cubes and MDX a database using Multidimensional On Line Analytic Processing MOLAP Relational On Line Analytic Processing ROLAP Hybrid Online Analytic Processing HOLAP or some other suitable database application may be used to manage the data. These tables or cubes made up of tables in the case of for example ROLAP are organized into a Relational Data Schema RDS or Object Relational Data Schema ORDS as is known in the art. These schemas may be normalized using certain normalization algorithms so as to avoid abnormalities such as non additive joins and other problems. Additionally these normalization algorithms may include Boyce Codd Normal Form or some other normalization optimization algorithm known in the art.

In some embodiments a method is illustrated as implemented in a distributed or non distributed software application designed under a three tier architecture paradigm whereby the various components of computer code that implement this method may be categorized as belonging to one or more of these three tiers. Some embodiments may include a first tier as an interface e.g. an interface tier that is relatively free of application processing. Further a second tier may be a logic tier that performs application processing in the form of logical mathematical manipulations of data inputted through the interface level and communicates the results of these logical mathematical manipulations to the interface tier and or to a backend or storage tier. These logical mathematical manipulations may relate to certain business rules or processes that govern the software application as a whole. A third tier a storage tier may be a persistent storage medium or non persistent storage medium. One or more of these tiers may be collapsed into another resulting in a two tier architecture or even a one tier architecture. For example the interface and logic tiers may be consolidated or the logic and storage tiers may be consolidated as in the case of a software application with an embedded database. This three tier architecture may be implemented using one technology or as may be discussed below a variety of technologies. This three tier architecture and the technologies through which it is implemented may be executed on two or more computer systems organized in a server client peer to peer or so some other suitable configuration. Further these three tiers may be distributed between more than one computer systems as various software components.

Some example embodiments may include the above illustrated tiers and processes or operations that make them up as being written as one or more software components. Common to many of these components is the ability to generate use and manipulate data. These components and the functionality associated with each may be used by client server or peer computer systems. These various components may be implemented by a computer system on an as needed basis. These components may be written in an object oriented computer language such that a component oriented or object oriented programming technique can be implemented using a Visual Component Library VCL Component Library for Cross Platform CLX Java Beans JB Enterprise Java Beans EJB Component Object Model COM Distributed Component Object Model DCOM or other suitable technique. These components may be linked to other components via various Application Programming interfaces APIs and then compiled into one complete server client and or peer software application. Further these APIs may be able to communicate through various distributed programming protocols as distributed computing components.

Some example embodiments may include remote procedure calls being used to implement one or more of the above illustrated components across a distributed programming environment as distributed computing components. For example an interface component e.g. an interface tier may reside on a first computer system that is remotely located from a second computer system including a logic component e.g. a logic tier . These first and second computer systems may be configured in a server client peer to peer or some other suitable configuration. These various components may be written using the above illustrated object oriented programming techniques and can be written in the same programming language or a different programming language. Various protocols may be implemented to enable these various components to communicate regardless of the programming language used to write these components. For example a component written in C may be able to communicate with another component written in the Java programming language through utilizing a distributed computing protocol such as a Common Object Request Broker Architecture CORBA a Simple Object Access Protocol SOAP or some other suitable protocol. Some embodiments may include the use of one or more of these protocols with the various protocols outlined in the Open Systems Interconnection OSI model or Transmission Control Protocol Internet Protocol TCP IP protocol stack model for defining the protocols used by a network to transmit data.

Some embodiments may utilize the Open Systems Interconnection OSI model or TCP IP protocol stack model for defining the protocols used by a network to transmit data. In applying these models a system of data transmission between a server and client or between peer computer systems is illustrated as a series of roughly five layers comprising an application layer a transport layer a network layer a data link layer and a physical layer. In the case of software having a three tier architecture the various tiers e.g. the interface logic and storage tiers reside on the application layer of the TCP IP protocol stack. In an example implementation using the TCP IP protocol stack model data from an application residing at the application layer is loaded into the data load field of a TCP segment residing at the transport layer. This TCP segment also contains port information for a recipient software application residing remotely. This TCP segment is loaded into the data load field of an IP datagram residing at the network layer. Next this IP datagram is loaded into a frame residing at the data link layer. This frame is then encoded at the physical layer and the data transmitted over a network such as an internet Local Area Network LAN Wide Area Network WAN or some other suitable network. In some example cases internet refers to a network of networks. These networks may use a variety of protocols for the exchange of data including the aforementioned TCP IP or some other suitable protocol. These networks may be organized within a variety of topologies e.g. a star topology or structures.

In some embodiments a system and method for contextual data mapping searching and data retrieval is illustrated. In one embodiment a user may become an entity e.g. utilize an account setup interface within the system by supplying a member data set in the form of web pages JPEG files or other suitable data in a binary form. Once supplied the user may seek to determine the relevancy e.g. by using a search query and results interface R structural relevance R or co related relevancy R values between themselves and some other user. In this context a system or method for social networking is provided.

In still other embodiments a user may seek to conduct a search i.e. an internet search for digital content based upon one or more of R R and or R such that a user may be able to retrieve optimized search results wherein the results are optimized using one or more of the above illustrated AI algorithms. For example a user may search for the text string Blue Honda Accord and retrieve a JPEG file including a picture of a Blue Honda Accord wherein the only correspondence between the text string and the JPEG is the subject matter e.g. the JPEG itself contains no text string in the form of Blue Honda Accord .

The present invention is implemented on a digital processing system or computer system that includes a processor which may represent one or more processors and may include one or more conventional types of such processors e.g. x86 x86 64 ARMx such as an AMD Processor Intel Pentium or XScale Processor or other suitable Processor. A memory is coupled to the processor by a bus. The memory may be a Dynamic Random Access Memory DRAM and or may include static RAM SRAM . The processor may also be coupled to other types of storage areas memories e.g. cache flash memory disk etc. which could be considered part of the memory or separate from the memory.

In some embodiments a bus further couples the processor to a display controller a mass memory or some type of computer readable medium device a modem or network interface card or adaptor and an input output I O controller. The display controller controls in a conventional manner a display which may represent a Cathode Ray Tube CRT display a Liquid Crystal Display LCD a plasma display or other type of suitable display device. Computer readable medium may include a mass memory magnetic optical magneto optical tape and or other type of machine readable medium device for storing information. For example the computer readable medium may represent a hard disk a read only or writeable optical CD etc. In some embodiments a network adaptor card such as a modem or network interface card is used to exchange data across a network such as an internet. The I O controller controls I O device s which may include one or more keyboards mouse trackball or other pointing devices magnetic and or optical disk drives printers scanners digital cameras microphones etc.

The present system and method may be implemented entirely in executable computer program instructions that are stored on a computer readable medium or may be implemented in a combination of software and hardware or in certain embodiments entirely in hardware.

Embodiments within the scope of the present invention include computer readable medium for carrying or having computer executable instructions or data structures stored thereon. Such computer readable medium may be any available medium which is accessible by a general purpose or special purpose computer system. By way of example and not limitation such computer readable medium can comprise physical storage media such as RAM ROM EPROM Erasable Programmable Read Only Memory CD ROM or other optical disk storage magnetic disk storage or other magnetic storage devices or any other media that can be used to carry or store desired program code means in the form of computer executable instructions computer readable instructions or data structures and that may be accessed by a general purpose or special purpose computer system. This physical storage medium may be fixed to the computer system as in the case of a magnetic drive or removable as in the case of an EEPROM Electrically Erasable Programmable Read Only Memory device e.g. flash memory device .

In some embodiments when information is transferred or provided over a network or another communications connection e.g. either hardwired wireless or a combination of hardwired or wireless to a computer system the connection is properly viewed as a computer readable medium. Thus any such connection is properly termed a computer readable medium. Combinations of the above should also be included within the scope of computer readable media. Computer executable or computer readable instructions comprise for example instructions and data that cause a general purpose computer system or special purpose computer system to perform a certain function or group of functions. The computer executable or computer readable instructions may be for example binaries or intermediate format instructions such as assembly language or even source code.

In this description and in the following claims a computer system is defined as one or more software modules one or more hardware modules or combinations thereof that work together to perform operations on electronic data. For example the definition of computer system includes the hardware modules of a personal computer as well as software modules such as the operating system of the personal computer. The physical layout of the modules is not important. A computer system may include one or more computers coupled via a network. Likewise a computer system may include a single physical device e.g. a mobile phone or personal digital assistant PDA where internal modules e.g. a processor and memory work together to perform operations on electronic data.

Some embodiments may be practiced in network computing environments with many types of computer system configurations including hubs routers wireless access points APs wireless stations personal computers laptop computers hand held devices multi processor systems microprocessor based or programmable consumer electronics network PCs minicomputers mainframe computers mobile telephones PDAs pagers or other suitable environment. Some embodiments may be practiced in distributed system environments where local and remote computer systems which are linked e.g. either by hardwired wireless or a combination of hardwired and wireless connections through a network both perform tasks. In a distributed system environment program modules may be located in both local and remote memory storage devices see above .

The example computer system includes a processor e.g. a Central Processing Unit CPU a Graphics Processing Unit GPU or both a main memory and a static memory which communicate with each other via a bus . The computer system may further include a video display unit e.g. a LCD or a CRT . The computer system also includes an alphanumeric input device e.g. a keyboard a User Interface UI cursor controller e.g. a mouse a disk drive unit a signal generation device e.g. a speaker and a network interface device e.g. a transmitter .

The disk drive unit includes a machine readable medium on which is stored one or more sets of instructions such as instructions and data structures e.g. software embodying or used by any one or more of the methodologies or functions illustrated herein. The software may also reside completely or at least partially within the main memory and or within the processor during execution thereof by the computer system the main memory and the processor also constituting machine readable media.

The instructions may further be transmitted or received over a network via the network interface device using any one of a number of well known transfer protocols e.g. Hyper Text Transfer Protocol HTTP or Secure Hyper Text Transfer Protocol HTTPS .

The term machine readable medium should be taken to include a single medium or multiple media e.g. a centralized or distributed database and or associated caches and servers that store the one or more sets of instructions. The term machine readable medium shall also be taken to include any medium that is capable of storing encoding or carrying a set of instructions for execution by the machine and that causes the machine to perform any of the one or more methodologies illustrated herein. The term machine readable medium shall accordingly be taken to include but not be limited to solid state memories optical and magnetic media and carrier wave signals.

It is to be understood that the above description is intended to be illustrative and not restrictive. Although numerous characteristics and advantages of various embodiments as illustrated herein have been set forth in the foregoing description together with details of the structure and function of various embodiments many other embodiments and changes to details may be apparent to those of skill in the art upon reviewing the above description. The scope of the invention should be therefore determined with reference to the appended claims along with the full scope of equivalents to which such claims are entitled. In the appended claims the terms including and in which are used as the plain English equivalents of the respective terms comprising and wherein respectively. Moreover the terms first second and third etc. are used merely as labels and are not intended to impose numerical requirements on their objects.

The Abstract of the Disclosure is provided to comply with 37 C.F.R. 1.72 b requiring an abstract that may allow the reader to quickly ascertain the nature of the technical disclosure. It is submitted with the understanding that it may not be used to interpret or limit the scope or meaning of the claims. In addition in the foregoing Detailed Description it can be seen that various features are grouped together in a single embodiment for the purpose of streamlining the disclosure. This method of disclosure is not to be interpreted as reflecting an intention that the claimed embodiments require more features than are expressly recited in each claim. Rather as the following claims reflect inventive subject matter lies in less than all features of a single disclosed embodiment. Thus the following claims are hereby incorporated into the Detailed Description with each claim standing on its own as a separate embodiment.

